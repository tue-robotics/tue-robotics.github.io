<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="test__recognition_8py" kind="file" language="Python">
    <compoundname>test_recognition.py</compoundname>
    <innernamespace refid="namespacetest__recognition">test_recognition</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacetest__recognition" refkind="compound"><highlight class="comment">#!<sp/>/usr/bin/python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>random</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>rospy</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>hmi<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>TimeoutException</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robocup_knowledge<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>load_knowledge</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="namespacetest__recognition_1abcf10a29810250eeb74b30c05bad34f9" refkind="member"><highlight class="normal">knowledge<sp/>=<sp/>load_knowledge(</highlight><highlight class="stringliteral">&apos;challenge_gpsr&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="namespacetest__recognition_1a7242102e7faf8c868cc2430d4d98403e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetest__recognition_1a7242102e7faf8c868cc2430d4d98403e" kindref="member">main</ref>():</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>rospy.init_node(</highlight><highlight class="stringliteral">&quot;test_gpsr_recognition&quot;</highlight><highlight class="normal">,<sp/>anonymous=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>random.seed()</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;sergio&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>str(sys.argv):</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_skills.sergio<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Sergio<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>Robot</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_skills.amigo<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Amigo<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>Robot</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>robot<sp/>=<sp/>Robot()</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description<sp/>=<sp/>random.choice([</highlight><highlight class="stringliteral">&quot;Ask<sp/>me<sp/>a<sp/>question&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Ask<sp/>me<sp/>something&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;What<sp/>do<sp/>you<sp/>want?&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;At<sp/>your<sp/>service&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.speech.speak(description)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sentence,<sp/>semantics<sp/>=<sp/>robot.hmi.query(description,<sp/>knowledge.grammar,<sp/>knowledge.grammar_target)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>TimeoutException<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.speech.speak(</highlight><highlight class="stringliteral">&quot;I<sp/>did<sp/>not<sp/>hear<sp/>anything,<sp/>please<sp/>try<sp/>again&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.speech.speak(</highlight><highlight class="stringliteral">&quot;I<sp/>heard<sp/>{}&quot;</highlight><highlight class="normal">.format(sentence))</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>sys.exit(<ref refid="namespacetest__recognition_1a7242102e7faf8c868cc2430d4d98403e" kindref="member">main</ref>())</highlight></codeline>
    </programlisting>
    <location file="test/test_recognition.py"/>
  </compounddef>
</doxygen>
