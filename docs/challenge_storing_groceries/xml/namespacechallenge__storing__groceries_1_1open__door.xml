<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacechallenge__storing__groceries_1_1open__door" kind="namespace" language="Python">
    <compoundname>challenge_storing_groceries::open_door</compoundname>
    <innerclass refid="classchallenge__storing__groceries_1_1open__door_1_1OpenDoor" prot="public">challenge_storing_groceries::open_door::OpenDoor</innerclass>
    <innerclass refid="classchallenge__storing__groceries_1_1open__door_1_1OpenDoorMachine" prot="public">challenge_storing_groceries::open_door::OpenDoorMachine</innerclass>
    <innerclass refid="classchallenge__storing__groceries_1_1open__door_1_1UpdateCabinetPose" prot="public">challenge_storing_groceries::open_door::UpdateCabinetPose</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacechallenge__storing__groceries_1_1open__door_1a50ff67f1b7ba5924dda920bbbafe318a" prot="public" static="no" mutable="no">
        <type></type>
        <definition>challenge_storing_groceries::open_door.robot</definition>
        <argsstring></argsstring>
        <name>robot</name>
        <initializer>=  get_robot(&quot;hero&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/challenge_storing_groceries/open_door.py" line="217" column="1" bodyfile="src/challenge_storing_groceries/open_door.py" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacechallenge__storing__groceries_1_1open__door_1a1072697f3913ece70e54c9dfd799c91d" prot="public" static="no" mutable="no">
        <type></type>
        <definition>challenge_storing_groceries::open_door.sm</definition>
        <argsstring></argsstring>
        <name>sm</name>
        <initializer>=  <ref refid="classchallenge__storing__groceries_1_1open__door_1_1OpenDoorMachine" kindref="compound">OpenDoorMachine</ref>(<ref refid="namespacechallenge__storing__groceries_1_1open__door_1a50ff67f1b7ba5924dda920bbbafe318a" kindref="member">robot</ref>, &apos;cupboard&apos;, &apos;in_front_of&apos;, &apos;shelf6&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/challenge_storing_groceries/open_door.py" line="223" column="1" bodyfile="src/challenge_storing_groceries/open_door.py" bodystart="223" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacechallenge__storing__groceries_1_1open__door_1a8c844aac22706189429f57f12fc5abd1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def challenge_storing_groceries.open_door._clamp</definition>
        <argsstring>(abs_value, value)</argsstring>
        <name>_clamp</name>
        <param>
          <type>abs_value</type>
          <defname>abs_value</defname>
        </param>
        <param>
          <type>value</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Clamps the value to be between -abs_value and +abs_value

:param abs_value: limit of the value in both positive and negative direction
:param value: value to be clamped...
:return: The -abs_value when value is smaller than -abs_value OR +abs_value when value is more than +abs_value
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/challenge_storing_groceries/open_door.py" line="22" column="1" bodyfile="src/challenge_storing_groceries/open_door.py" bodystart="22" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="namespacechallenge__storing__groceries_1_1open__door_1a3c2a9f54e2d283747afaa294187a1122" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def challenge_storing_groceries.open_door._get_yaw_from_quaternion_msg</definition>
        <argsstring>(msg)</argsstring>
        <name>_get_yaw_from_quaternion_msg</name>
        <param>
          <type>msg</type>
          <defname>msg</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Returns the yaw angle from a rotation in quaternion representation (msg)

:param msg: The quaternion msg
:return: Yaw angle
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/challenge_storing_groceries/open_door.py" line="33" column="1" bodyfile="src/challenge_storing_groceries/open_door.py" bodystart="33" bodyend="44"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/challenge_storing_groceries/open_door.py" line="1" column="1"/>
  </compounddef>
</doxygen>
