<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="detect_8py" kind="file" language="Python">
    <compoundname>detect.py</compoundname>
    <innerclass refid="classperson__recognition__states_1_1detect_1_1Detect" prot="public">person_recognition_states::detect::Detect</innerclass>
    <innerclass refid="classperson__recognition__states_1_1detect_1_1RecognizePersons" prot="public">person_recognition_states::detect::RecognizePersons</innerclass>
    <innernamespace refid="namespaceperson__recognition__states_1_1detect">person_recognition_states::detect</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceperson__recognition__states_1_1detect" refkind="compound"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>random</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pykdl_ros<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>VectorStamped</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>rospy</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>smach</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>robot_smach_states<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>states</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robocup_knowledge<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>load_knowledge</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="namespaceperson__recognition__states_1_1detect_1a379fbd961b40ab67b44318771babd90f" refkind="member"><highlight class="normal">challenge_knowledge<sp/>=<sp/>load_knowledge(</highlight><highlight class="stringliteral">&quot;challenge_speech_recognition&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="classperson__recognition__states_1_1detect_1_1RecognizePersons" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons" kindref="compound">RecognizePersons</ref>(smach.State):</highlight></codeline>
<codeline lineno="16" refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1aa911dd91eb29a8e893c761000f248b34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1aa911dd91eb29a8e893c761000f248b34" kindref="member">__init__</ref>(self,<sp/>robot):</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.State.__init__(self,<sp/>outcomes=[</highlight><highlight class="stringliteral">&apos;succeeded&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;failed&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="18" refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a0e8fc37059f8b8a37a8d91d70a301fdc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a0e8fc37059f8b8a37a8d91d70a301fdc" kindref="member">robot</ref><sp/>=<sp/>robot</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a79e17eb82b714eb0cf34cfa0074747a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a79e17eb82b714eb0cf34cfa0074747a7" kindref="member">_shot_valid</ref>(self,<sp/>number_of_people,<sp/>operator_list,<sp/>detections,<sp/>operator):</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>operator:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(detections)<sp/>&lt;<sp/>number_of_people:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>if<sp/>operator<sp/>is<sp/>consistent<sp/>with<sp/>operator<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a57eb190f8357cdbc091cdf6c10c9dfff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a57eb190f8357cdbc091cdf6c10c9dfff" kindref="member">_get_detections</ref>(self,<sp/>external_api_request):</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>1.5</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a0e8fc37059f8b8a37a8d91d70a301fdc" kindref="member">robot</ref>.head.look_at_point(VectorStamped.from_xyz(100,<sp/>0,<sp/>z,<sp/>rospy.Time.now(),<sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a0e8fc37059f8b8a37a8d91d70a301fdc" kindref="member">robot</ref>.base_link_frame))</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a0e8fc37059f8b8a37a8d91d70a301fdc" kindref="member">robot</ref>.head.wait_for_motion_done()</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time.sleep(1)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(</highlight><highlight class="stringliteral">&quot;ed.detect<sp/>_persons()<sp/>method<sp/>disappeared!<sp/>This<sp/>was<sp/>only<sp/>calling<sp/>the<sp/>face<sp/>recognition<sp/>module<sp/>and<sp/>we<sp/>are<sp/>using<sp/>a<sp/>new<sp/>one<sp/>now!&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(</highlight><highlight class="stringliteral">&quot;I<sp/>will<sp/>return<sp/>an<sp/>empty<sp/>detection<sp/>list!&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detections<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>detections:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detections<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator_candidates<sp/>=<sp/>[candidate<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>candidate<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>detections<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>candidate.name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;operator&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(</highlight><highlight class="stringliteral">&quot;Detections:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>detections)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(</highlight><highlight class="stringliteral">&quot;Operator<sp/>candidates:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>operator_candidates)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>operator_candidates:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator<sp/>=<sp/>max(operator_candidates,<sp/>key=</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>c:<sp/>c.name_score)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(</highlight><highlight class="stringliteral">&quot;Operator:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>operator)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detections,<sp/>operator</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1ab8d0ce749e97c7969d257fb062e4793e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1ab8d0ce749e97c7969d257fb062e4793e" kindref="member">_recognize</ref>(self):</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>1.5</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a0e8fc37059f8b8a37a8d91d70a301fdc" kindref="member">robot</ref>.head.look_at_point(VectorStamped.from_xyz(100,<sp/>0,<sp/>z,<sp/>rospy.Time.now(),<sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a0e8fc37059f8b8a37a8d91d70a301fdc" kindref="member">robot</ref>.base_link_frame))</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a0e8fc37059f8b8a37a8d91d70a301fdc" kindref="member">robot</ref>.speech.speak(</highlight><highlight class="stringliteral">&quot;I<sp/>am<sp/>looking<sp/>for<sp/>my<sp/>operator&quot;</highlight><highlight class="normal">,<sp/>block=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>1)<sp/>Check<sp/>how<sp/>many<sp/>people<sp/>in<sp/>the<sp/>crowd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shots<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number_of_people<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sentences<sp/>=<sp/>[</highlight><highlight class="stringliteral">&quot;You<sp/>are<sp/>all<sp/>looking<sp/>great<sp/>today!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Keep<sp/>looking<sp/>in<sp/>my<sp/>camera!&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;I<sp/>like<sp/>it<sp/>when<sp/>everybody<sp/>is<sp/>staring<sp/>at<sp/>me;<sp/>being<sp/>in<sp/>the<sp/>center<sp/>of<sp/>attention!&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>shots):</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a0e8fc37059f8b8a37a8d91d70a301fdc" kindref="member">robot</ref>.speech.speak(sentences[i<sp/>%<sp/>(shots<sp/>-<sp/>1)],<sp/>block=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detections,<sp/>operator<sp/>=<sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a57eb190f8357cdbc091cdf6c10c9dfff" kindref="member">_get_detections</ref>(external_api_request=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>number<sp/>of<sp/>people</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number_of_people<sp/>=<sp/>max(len(detections),<sp/>number_of_people)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>operator<sp/>guess</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>operator:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator_list.append(operator)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>2)<sp/>Get<sp/>all<sp/>other<sp/>information<sp/>with<sp/>use<sp/>of<sp/>the<sp/>external<sp/>api,<sp/>make<sp/>sure<sp/>that<sp/>we<sp/>have<sp/>all<sp/>persons<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_tries<sp/>=<sp/>5</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try_number<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_operator<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_detections<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try_number<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a0e8fc37059f8b8a37a8d91d70a301fdc" kindref="member">robot</ref>.speech.speak(random.choice([</highlight><highlight class="stringliteral">&quot;Let&apos;s<sp/>take<sp/>a<sp/>closer<sp/>look&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Let&apos;s<sp/>see<sp/>what<sp/>we<sp/>are<sp/>dealing<sp/>with&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Let&apos;s<sp/>get<sp/>some<sp/>more<sp/>details&quot;</highlight><highlight class="normal">]))</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detections,<sp/>operator<sp/>=<sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a57eb190f8357cdbc091cdf6c10c9dfff" kindref="member">_get_detections</ref>(external_api_request=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a79e17eb82b714eb0cf34cfa0074747a7" kindref="member">_shot_valid</ref>(number_of_people,<sp/>operator_list,<sp/>detections,<sp/>operator):</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detections,<sp/>operator</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>best_detections<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>len(detections)<sp/>&gt;<sp/>len(best_detections):</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_operator<sp/>=<sp/>operator</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_detections<sp/>=<sp/>detections</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>try_number<sp/>&gt;<sp/>max_tries:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a0e8fc37059f8b8a37a8d91d70a301fdc" kindref="member">robot</ref>.speech.speak(</highlight><highlight class="stringliteral">&quot;I<sp/>am<sp/>having<sp/>trouble<sp/>with<sp/>my<sp/>external<sp/>servers,<sp/>I<sp/>will<sp/>use<sp/>my<sp/>local<sp/>result&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">#<sp/>we<sp/>just<sp/>didnt<sp/>pass<sp/>our<sp/>criteria</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>best_detections,<sp/>best_operator</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1ad4c51d0e79d10a03f398f2d61992ba62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1ad4c51d0e79d10a03f398f2d61992ba62" kindref="member">_describe_crowd</ref>(self,<sp/>detections):</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_females<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_males<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_ppl<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_additional_information<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>d<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>detections:</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_ppl<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>d.gender_score:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_additional_information<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>d.gender<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_males<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_females<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_males<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>has_additional_information:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a0e8fc37059f8b8a37a8d91d70a301fdc" kindref="member">robot</ref>.speech.speak(</highlight><highlight class="stringliteral">&quot;Unfortunately,<sp/>I<sp/>could<sp/>not<sp/>access<sp/>the<sp/>internet<sp/>for<sp/>better<sp/>classification.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a0e8fc37059f8b8a37a8d91d70a301fdc" kindref="member">robot</ref>.speech.speak(</highlight><highlight class="stringliteral">&quot;I<sp/>found<sp/>%d<sp/>people<sp/>in<sp/>the<sp/>crowd&quot;</highlight><highlight class="normal"><sp/>%<sp/>num_ppl)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a0e8fc37059f8b8a37a8d91d70a301fdc" kindref="member">robot</ref>.speech.speak(</highlight><highlight class="stringliteral">&quot;There<sp/>are<sp/>%d<sp/>males<sp/>and<sp/>%d<sp/>females<sp/>in<sp/>the<sp/>crowd&quot;</highlight><highlight class="normal"><sp/>%<sp/>(num_males,<sp/>num_females))</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a50d73dabe30fe1f258f8c6ed1e16253f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a50d73dabe30fe1f258f8c6ed1e16253f" kindref="member">_describe_operator</ref>(self,<sp/>operator):</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gender<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;male&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>operator.gender<sp/>==<sp/>2:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gender<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;female&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>operator.pose.pose.frame.p.z()</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pose_str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;standing&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>z<sp/>&lt;<sp/>1.4:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pose_str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;sitting&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>z<sp/>&lt;<sp/>0.6:</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pose_str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;lying&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a0e8fc37059f8b8a37a8d91d70a301fdc" kindref="member">robot</ref>.speech.speak(</highlight><highlight class="stringliteral">&quot;The<sp/>operator<sp/>is<sp/>a<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>gender)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a0e8fc37059f8b8a37a8d91d70a301fdc" kindref="member">robot</ref>.speech.speak(</highlight><highlight class="stringliteral">&quot;The<sp/>operator<sp/>is<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>pose_str)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pose_base_link<sp/>=<sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a0e8fc37059f8b8a37a8d91d70a301fdc" kindref="member">robot</ref>.tf_buffer.transform(operator.pose,<sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a0e8fc37059f8b8a37a8d91d70a301fdc" kindref="member">robot</ref>.base_link_frame)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>pose_base_link.pose.frame.p.x()</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>pose_base_link.pose.frame.p.y()</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a0e8fc37059f8b8a37a8d91d70a301fdc" kindref="member">robot</ref>.speech.speak(</highlight><highlight class="stringliteral">&quot;The<sp/>operator<sp/>is<sp/>at<sp/>x<sp/>%.1f<sp/>and<sp/>y<sp/>%.1f<sp/>in<sp/>my<sp/>base<sp/>link,<sp/>I<sp/>will<sp/>turn<sp/>towards<sp/>you&quot;</highlight><highlight class="normal"><sp/>%<sp/>(x,<sp/>y))</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>th<sp/>=<sp/>math.atan2(y,<sp/>x)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vth<sp/>=<sp/>0.5</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a0e8fc37059f8b8a37a8d91d70a301fdc" kindref="member">robot</ref>.head.cancel_goal()</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a0e8fc37059f8b8a37a8d91d70a301fdc" kindref="member">robot</ref>.base.force_drive(0,<sp/>0,<sp/>math.copysign(1,<sp/>th)<sp/>*<sp/>vth,<sp/>abs(th<sp/>/<sp/>vth))</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a0e8fc37059f8b8a37a8d91d70a301fdc" kindref="member">robot</ref>.speech.speak(</highlight><highlight class="stringliteral">&quot;I<sp/>will<sp/>now<sp/>point<sp/>in<sp/>your<sp/>direction!&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a0e8fc37059f8b8a37a8d91d70a301fdc" kindref="member">robot</ref>.head.look_at_ground_in_front_of_robot(distance=100)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a0e8fc37059f8b8a37a8d91d70a301fdc" kindref="member">robot</ref>.rightArm.send_joint_trajectory(</highlight><highlight class="stringliteral">&quot;point_to_operator&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a0e8fc37059f8b8a37a8d91d70a301fdc" kindref="member">robot</ref>.speech.speak(</highlight><highlight class="stringliteral">&quot;You<sp/>are<sp/>right<sp/>there<sp/>operator!&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a0e8fc37059f8b8a37a8d91d70a301fdc" kindref="member">robot</ref>.speech.speak(</highlight><highlight class="stringliteral">&quot;Cook<sp/>cook!&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a0e8fc37059f8b8a37a8d91d70a301fdc" kindref="member">robot</ref>.rightArm.reset()</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a0e8fc37059f8b8a37a8d91d70a301fdc" kindref="member">robot</ref>.rightArm.wait_for_motion_done()</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a9fd71e68a4c6d5b4221534ea40d40a4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a9fd71e68a4c6d5b4221534ea40d40a4c" kindref="member">execute</ref>(self,<sp/>userdata=None):</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detections,<sp/>operator<sp/>=<sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1ab8d0ce749e97c7969d257fb062e4793e" kindref="member">_recognize</ref>()</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>detections<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>operator:</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1ad4c51d0e79d10a03f398f2d61992ba62" kindref="member">_describe_crowd</ref>(detections)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons_1a50d73dabe30fe1f258f8c6ed1e16253f" kindref="member">_describe_operator</ref>(operator)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;succeeded&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="classperson__recognition__states_1_1detect_1_1Detect" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classperson__recognition__states_1_1detect_1_1Detect" kindref="compound">Detect</ref>(smach.StateMachine):</highlight></codeline>
<codeline lineno="183" refid="classperson__recognition__states_1_1detect_1_1Detect_1a08ee3ee61ca655b08cd7176c8eba4d07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classperson__recognition__states_1_1detect_1_1Detect_1a08ee3ee61ca655b08cd7176c8eba4d07" kindref="member">__init__</ref>(self,<sp/>robot):</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.__init__(self,<sp/>outcomes=[</highlight><highlight class="stringliteral">&apos;succeeded&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;failed&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="classperson__recognition__states_1_1detect_1_1Detect_1a6f89b46cd64345fb2f49bc0799e563e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classperson__recognition__states_1_1detect_1_1Detect_1a6f89b46cd64345fb2f49bc0799e563e6" kindref="member">turned</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>self:</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;SAY_SEARCHING_CROWD&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>states.Say(robot,<sp/></highlight><highlight class="stringliteral">&quot;I&apos;m<sp/>looking<sp/>for<sp/>the<sp/>crowd.&quot;</highlight><highlight class="normal">,<sp/>block=</highlight><highlight class="keyword">False</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;spoken&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;RECOGNIZE_PERSONS&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;RECOGNIZE_PERSONS&apos;</highlight><highlight class="normal">,<sp/><ref refid="classperson__recognition__states_1_1detect_1_1RecognizePersons" kindref="compound">RecognizePersons</ref>(robot),</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;succeeded&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;succeeded&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;failed&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;failed&apos;</highlight><highlight class="normal">})</highlight></codeline>
    </programlisting>
    <location file="src/person_recognition_states/detect.py"/>
  </compounddef>
</doxygen>
