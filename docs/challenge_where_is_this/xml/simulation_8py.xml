<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="simulation_8py" kind="file" language="Python">
    <compoundname>simulation.py</compoundname>
    <innernamespace refid="namespacechallenge__where__is__this_1_1simulation">challenge_where_is_this::simulation</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacechallenge__where__is__this_1_1simulation" refkind="compound"><highlight class="comment">#<sp/>System</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>ROS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>rospy</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>std_srvs.srv</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="namespacechallenge__where__is__this_1_1simulation_1a1ccbb6440886be770209ea707e114a6c" refkind="member"><highlight class="normal">IS_SIMULATING<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="namespacechallenge__where__is__this_1_1simulation_1a99929008494f19b2e9f9cc7da6ed7062" refkind="member"><highlight class="normal">OPERATOR_AVAILABLE<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="namespacechallenge__where__is__this_1_1simulation_1aebb108c8cee1d65085a37c12aaa89dee" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacechallenge__where__is__this_1_1simulation_1aebb108c8cee1d65085a37c12aaa89dee" kindref="member">_toggle_operator</ref>(_):</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Toggles<sp/>if<sp/>the<sp/>operator<sp/>is<sp/>following</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>_:</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:return:</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>OPERATOR_AVAILABLE</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>OPERATOR_AVAILABLE<sp/>=<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>OPERATOR_AVAILABLE</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>rospy.loginfo(</highlight><highlight class="stringliteral">&quot;Operator<sp/>available:<sp/>{}&quot;</highlight><highlight class="normal">.format(OPERATOR_AVAILABLE))</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std_srvs.srv.EmptyResponse()</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="namespacechallenge__where__is__this_1_1simulation_1a1a479d4313d631c571d2ab341ae09993" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacechallenge__where__is__this_1_1simulation_1a1a479d4313d631c571d2ab341ae09993" kindref="member">mock_detect_operator</ref>(robot,<sp/>distance=1.0,<sp/>radius=0.5):<sp/><sp/></highlight><highlight class="comment">#<sp/>noinspection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Mocks<sp/>the<sp/>&apos;detect<sp/>operator&apos;<sp/>method.<sp/>Only<sp/>returns<sp/>if<sp/>the<sp/>mocked<sp/>operator<sp/>is<sp/>available</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>robot:<sp/>-</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>distance:<sp/>-</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>radius:<sp/>-</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:return:<sp/>(bool)</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>IS_SIMULATING,<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>&apos;detect_operator&apos;<sp/>mock<sp/>should<sp/>*only*<sp/>be<sp/>used<sp/>*in<sp/>simulation*&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OPERATOR_AVAILABLE</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.getenv(</highlight><highlight class="stringliteral">&quot;ROBOT_REAL&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">).lower()<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>rospy.Service(</highlight><highlight class="stringliteral">&quot;toggle_operator&quot;</highlight><highlight class="normal">,<sp/>std_srvs.srv.Empty,<sp/>_toggle_operator)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>rospy.loginfo(</highlight><highlight class="stringliteral">&apos;\n\nCall:\nrosservice<sp/>call<sp/>/toggle_operator<sp/>&quot;{}&quot;\n\nto<sp/>toggle<sp/>operator<sp/>availability\n&apos;</highlight><highlight class="normal">.format(</highlight><highlight class="stringliteral">&apos;{}&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>IS_SIMULATING<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/challenge_where_is_this/simulation.py"/>
  </compounddef>
</doxygen>
