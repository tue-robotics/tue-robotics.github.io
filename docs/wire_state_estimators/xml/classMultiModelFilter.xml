<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classMultiModelFilter" kind="class" language="C++" prot="public">
    <compoundname>MultiModelFilter</compoundname>
    <basecompoundref refid="classmhf_1_1IStateEstimator" prot="public" virt="non-virtual">mhf::IStateEstimator</basecompoundref>
    <includes refid="MultiModelFilter_8h" local="no">MultiModelFilter.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classMultiModelFilter_1a5ecee501c4ff1c01dc1a87d8ba26b37a" prot="protected" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="classmhf_1_1IStateEstimator" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/wire_core/tags">mhf::IStateEstimator</ref> * &gt;</type>
        <definition>std::vector&lt;mhf::IStateEstimator*&gt; MultiModelFilter::estimators_</definition>
        <argsstring></argsstring>
        <name>estimators_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MultiModelFilter.h" line="105" column="17" bodyfile="include/MultiModelFilter.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMultiModelFilter_1a6be251e72c7398ef91895b8d9acdea5a" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool MultiModelFilter::initialized_</definition>
        <argsstring></argsstring>
        <name>initialized_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MultiModelFilter.h" line="103" column="10" bodyfile="include/MultiModelFilter.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMultiModelFilter_1ab7b7aae6baed27e1a8be217a87ae0b5c" prot="protected" static="no" mutable="yes">
        <type><ref refid="classpbl_1_1Mixture" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::Mixture</ref></type>
        <definition>pbl::Mixture MultiModelFilter::mixture_</definition>
        <argsstring></argsstring>
        <name>mixture_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MultiModelFilter.h" line="109" column="26" bodyfile="include/MultiModelFilter.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMultiModelFilter_1a083e0b8e3a85a495a0a392ae96102b87" prot="protected" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; MultiModelFilter::weights_</definition>
        <argsstring></argsstring>
        <name>weights_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MultiModelFilter.h" line="107" column="17" bodyfile="include/MultiModelFilter.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classMultiModelFilter_1a729cc724f069fe241e96ac572347bfc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MultiModelFilter::addEstimator</definition>
        <argsstring>(mhf::IStateEstimator *estimator)</argsstring>
        <name>addEstimator</name>
        <param>
          <type><ref refid="classmhf_1_1IStateEstimator" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/wire_core/tags">mhf::IStateEstimator</ref> *</type>
          <declname>estimator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MultiModelFilter.h" line="57" column="10" bodyfile="src/MultiModelFilter.cpp" bodystart="71" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classMultiModelFilter_1a186acf6f85a3a92fe68aadda2d0b0c71" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classMultiModelFilter" kindref="compound">MultiModelFilter</ref> *</type>
        <definition>MultiModelFilter * MultiModelFilter::clone</definition>
        <argsstring>() const</argsstring>
        <name>clone</name>
        <reimplements refid="classmhf_1_1IStateEstimator_1a10ab7cd2f9ee963ff8eb0f5182a32904">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MultiModelFilter.h" line="53" column="30" bodyfile="src/MultiModelFilter.cpp" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classMultiModelFilter_1adb0abc426ab6bd9dbefb7c10af2fdd74" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classpbl_1_1PDF" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::PDF</ref> &amp;</type>
        <definition>const pbl::PDF &amp; MultiModelFilter::getValue</definition>
        <argsstring>() const</argsstring>
        <name>getValue</name>
        <reimplements refid="classmhf_1_1IStateEstimator_1aadaf2529f2619c59f6ebc8915f04bb11">getValue</reimplements>
        <briefdescription>
<para>Returns the current estimated state value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current state, i.e., the current attribute value represented as probability density function </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MultiModelFilter.h" line="81" column="20" bodyfile="src/MultiModelFilter.cpp" bodystart="136" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classMultiModelFilter_1adf4830ae8d4acb08b603995ffc900777" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MultiModelFilter::MultiModelFilter</definition>
        <argsstring>()</argsstring>
        <name>MultiModelFilter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MultiModelFilter.h" line="49" column="5" bodyfile="src/MultiModelFilter.cpp" bodystart="42" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classMultiModelFilter_1a0720cb10089ba6cb4b805841a93e222c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MultiModelFilter::MultiModelFilter</definition>
        <argsstring>(const MultiModelFilter &amp;orig)</argsstring>
        <name>MultiModelFilter</name>
        <param>
          <type>const <ref refid="classMultiModelFilter" kindref="compound">MultiModelFilter</ref> &amp;</type>
          <declname>orig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MultiModelFilter.h" line="51" column="5" bodyfile="src/MultiModelFilter.cpp" bodystart="53" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classMultiModelFilter_1a404efc8804443fcd7ba9737320d74c27" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void MultiModelFilter::propagate</definition>
        <argsstring>(const mhf::Time &amp;time)</argsstring>
        <name>propagate</name>
        <reimplements refid="classmhf_1_1IStateEstimator_1ae93bd3b893053fb1660b12eb41c4cae6">propagate</reimplements>
        <param>
          <type>const <ref refid="namespacemhf_1ae209e58ac587543af50a25222aeda18e" kindref="member" external="/home/docker/ros/noetic/system/build/docs/wire_core/tags">mhf::Time</ref> &amp;</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Propagates the internal state to Time time. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The time to which the internal state is propagated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MultiModelFilter.h" line="63" column="18" bodyfile="src/MultiModelFilter.cpp" bodystart="80" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classMultiModelFilter_1a1838b422d9ef85b8c4174a97a41fa627" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void MultiModelFilter::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <reimplements refid="classmhf_1_1IStateEstimator_1aca0803c04a17469a27334b6e6089eaeb">reset</reimplements>
        <briefdescription>
<para>Resets the internal state of the estimator to its initial value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MultiModelFilter.h" line="75" column="18" bodyfile="src/MultiModelFilter.cpp" bodystart="130" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classMultiModelFilter_1a4c14bff110ab1976fc50afff2d1527c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool MultiModelFilter::setParameter</definition>
        <argsstring>(const std::string &amp;param, bool b)</argsstring>
        <name>setParameter</name>
        <reimplements refid="classmhf_1_1IStateEstimator_1a265a58f62f73731a85179ab4f465aa0a">setParameter</reimplements>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>param</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Set a boolean parameter of this state estimator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>The boolean value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if the parameter was known to the estimator; false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MultiModelFilter.h" line="91" column="10" bodyfile="src/MultiModelFilter.cpp" bodystart="149" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classMultiModelFilter_1a5de828eeaa25eebbb600079d664c7f5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool MultiModelFilter::setParameter</definition>
        <argsstring>(const std::string &amp;param, double v)</argsstring>
        <name>setParameter</name>
        <reimplements refid="classmhf_1_1IStateEstimator_1aea2e3fa3e7ee39155e556262abb086c7">setParameter</reimplements>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>param</declname>
        </param>
        <param>
          <type>double</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Set a real-valued parameter of this state estimator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>The float value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if the parameter was known to the estimator; false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MultiModelFilter.h" line="99" column="10" bodyfile="src/MultiModelFilter.cpp" bodystart="153" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classMultiModelFilter_1add3e7edfc81f59f1b429b093946f3308" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MultiModelFilter::setValue</definition>
        <argsstring>(const pbl::PDF &amp;pdf)</argsstring>
        <name>setValue</name>
        <param>
          <type>const <ref refid="classpbl_1_1PDF" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::PDF</ref> &amp;</type>
          <declname>pdf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MultiModelFilter.h" line="83" column="10" bodyfile="src/MultiModelFilter.cpp" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classMultiModelFilter_1a76a8416c6640858da105bf525ad28d3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void MultiModelFilter::update</definition>
        <argsstring>(const pbl::PDF &amp;z, const mhf::Time &amp;time)</argsstring>
        <name>update</name>
        <reimplements refid="classmhf_1_1IStateEstimator_1ab649cec130ec1be64cf8c64d607ec418">update</reimplements>
        <param>
          <type>const <ref refid="classpbl_1_1PDF" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::PDF</ref> &amp;</type>
          <declname>z</declname>
        </param>
        <param>
          <type>const <ref refid="namespacemhf_1ae209e58ac587543af50a25222aeda18e" kindref="member" external="/home/docker/ros/noetic/system/build/docs/wire_core/tags">mhf::Time</ref> &amp;</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Updates the internal state based on measurement z. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The measurement with which to update, represented as a probability density function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The time to which the internal state is propagated before updating </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MultiModelFilter.h" line="70" column="10" bodyfile="src/MultiModelFilter.cpp" bodystart="93" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classMultiModelFilter_1afeb1e80a79faac883c7fe8243a2d75ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>MultiModelFilter::~MultiModelFilter</definition>
        <argsstring>()</argsstring>
        <name>~MultiModelFilter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MultiModelFilter.h" line="55" column="13" bodyfile="src/MultiModelFilter.cpp" bodystart="61" bodyend="65"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>mhf::IStateEstimator</label>
        <link refid="classmhf_1_1IStateEstimator" external="/home/docker/ros/noetic/system/build/docs/wire_core/tags"/>
      </node>
      <node id="1">
        <label>MultiModelFilter</label>
        <link refid="classMultiModelFilter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>mhf::IStateEstimator</label>
        <link refid="classmhf_1_1IStateEstimator" external="/home/docker/ros/noetic/system/build/docs/wire_core/tags"/>
      </node>
      <node id="7">
        <label>std::vector&lt; double &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="4">
        <label>pbl::PDF</label>
        <link refid="classpbl_1_1PDF" external="/home/docker/ros/noetic/system/build/docs/problib/tags"/>
      </node>
      <node id="6">
        <label>std::vector&lt; pbl::PDF * &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="3">
        <label>pbl::Mixture</label>
        <link refid="classpbl_1_1Mixture" external="/home/docker/ros/noetic/system/build/docs/problib/tags"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>ptr_</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>pbl::Mixture::MixtureStruct</label>
        <link refid="structpbl_1_1Mixture_1_1MixtureStruct" external="/home/docker/ros/noetic/system/build/docs/problib/tags"/>
        <childnode refid="6" relation="usage">
          <edgelabel>components_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>weights_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>MultiModelFilter</label>
        <link refid="classMultiModelFilter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>mixture_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>estimators_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>weights_</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>std::vector&lt; mhf::IStateEstimator * &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="include/MultiModelFilter.h" line="45" column="51" bodyfile="include/MultiModelFilter.h" bodystart="45" bodyend="111"/>
    <listofallmembers>
      <member refid="classMultiModelFilter_1a729cc724f069fe241e96ac572347bfc0" prot="public" virt="non-virtual"><scope>MultiModelFilter</scope><name>addEstimator</name></member>
      <member refid="classMultiModelFilter_1a186acf6f85a3a92fe68aadda2d0b0c71" prot="public" virt="virtual"><scope>MultiModelFilter</scope><name>clone</name></member>
      <member refid="classMultiModelFilter_1a5ecee501c4ff1c01dc1a87d8ba26b37a" prot="protected" virt="non-virtual"><scope>MultiModelFilter</scope><name>estimators_</name></member>
      <member refid="classMultiModelFilter_1adb0abc426ab6bd9dbefb7c10af2fdd74" prot="public" virt="virtual"><scope>MultiModelFilter</scope><name>getValue</name></member>
      <member refid="classMultiModelFilter_1a6be251e72c7398ef91895b8d9acdea5a" prot="protected" virt="non-virtual"><scope>MultiModelFilter</scope><name>initialized_</name></member>
      <member refid="classMultiModelFilter_1ab7b7aae6baed27e1a8be217a87ae0b5c" prot="protected" virt="non-virtual"><scope>MultiModelFilter</scope><name>mixture_</name></member>
      <member refid="classMultiModelFilter_1adf4830ae8d4acb08b603995ffc900777" prot="public" virt="non-virtual"><scope>MultiModelFilter</scope><name>MultiModelFilter</name></member>
      <member refid="classMultiModelFilter_1a0720cb10089ba6cb4b805841a93e222c" prot="public" virt="non-virtual"><scope>MultiModelFilter</scope><name>MultiModelFilter</name></member>
      <member refid="classMultiModelFilter_1a404efc8804443fcd7ba9737320d74c27" prot="public" virt="virtual"><scope>MultiModelFilter</scope><name>propagate</name></member>
      <member refid="classMultiModelFilter_1a1838b422d9ef85b8c4174a97a41fa627" prot="public" virt="virtual"><scope>MultiModelFilter</scope><name>reset</name></member>
      <member refid="classMultiModelFilter_1a4c14bff110ab1976fc50afff2d1527c0" prot="public" virt="virtual"><scope>MultiModelFilter</scope><name>setParameter</name></member>
      <member refid="classMultiModelFilter_1a5de828eeaa25eebbb600079d664c7f5c" prot="public" virt="virtual"><scope>MultiModelFilter</scope><name>setParameter</name></member>
      <member refid="classmhf_1_1IStateEstimator_1ab2e657eef008c37181cb650b14692f4f" prot="public" virt="virtual" ambiguityscope="mhf::IStateEstimator::"><scope>MultiModelFilter</scope><name>setParameter</name></member>
      <member refid="classMultiModelFilter_1add3e7edfc81f59f1b429b093946f3308" prot="public" virt="non-virtual"><scope>MultiModelFilter</scope><name>setValue</name></member>
      <member refid="classMultiModelFilter_1a76a8416c6640858da105bf525ad28d3e" prot="public" virt="virtual"><scope>MultiModelFilter</scope><name>update</name></member>
      <member refid="classMultiModelFilter_1a083e0b8e3a85a495a0a392ae96102b87" prot="protected" virt="non-virtual"><scope>MultiModelFilter</scope><name>weights_</name></member>
      <member refid="classmhf_1_1IStateEstimator_1a368b89d4307185f95a45c50d19fdb4e8" prot="public" virt="virtual"><scope>MultiModelFilter</scope><name>~IStateEstimator</name></member>
      <member refid="classMultiModelFilter_1afeb1e80a79faac883c7fe8243a2d75ed" prot="public" virt="virtual"><scope>MultiModelFilter</scope><name>~MultiModelFilter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
