<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classKalmanFilter" kind="class" language="C++" prot="public">
    <compoundname>KalmanFilter</compoundname>
    <includes refid="KalmanFilter_8h" local="no">KalmanFilter.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classKalmanFilter_1afd8627e793df296a3dc7ddf77b8b325c" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double KalmanFilter::a_max_</definition>
        <argsstring></argsstring>
        <name>a_max_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum expected acceleration </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/KalmanFilter.h" line="178" column="8" bodyfile="include/KalmanFilter.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKalmanFilter_1a3ec07e5c9286e25a3eea3e232eb2ff9e" prot="protected" static="no" mutable="no">
        <type><ref refid="classpbl_1_1Gaussian" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::Gaussian</ref></type>
        <definition>pbl::Gaussian KalmanFilter::G_</definition>
        <argsstring></argsstring>
        <name>G_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The estimated Kalman state as Gaussian (state mean and covariance) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/KalmanFilter.h" line="169" column="15" bodyfile="include/KalmanFilter.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKalmanFilter_1ad91c91a4918f80761df2c489708bbfda" prot="protected" static="no" mutable="no">
        <type><ref refid="classpbl_1_1Gaussian" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::Gaussian</ref></type>
        <definition>pbl::Gaussian KalmanFilter::G_small_</definition>
        <argsstring></argsstring>
        <name>G_small_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Portion of the estimated Kalman state that contains only the measurement dimensions </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/KalmanFilter.h" line="172" column="15" bodyfile="include/KalmanFilter.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKalmanFilter_1aa4fdf42b27cb1f02dadafac0e29adcb0" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacepbl_1a93c4f435969a4899941b82076e994cf6" kindref="member" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::Matrix</ref></type>
        <definition>pbl::Matrix KalmanFilter::H_</definition>
        <argsstring></argsstring>
        <name>H_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Observation model </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/KalmanFilter.h" line="175" column="17" bodyfile="include/KalmanFilter.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKalmanFilter_1a7133926d0ee39d891057b625b75b5b89" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int KalmanFilter::meas_dim_</definition>
        <argsstring></argsstring>
        <name>meas_dim_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dimensionality of the measurements </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/KalmanFilter.h" line="163" column="5" bodyfile="include/KalmanFilter.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKalmanFilter_1a95ff8e72aeb7f43a7cb089bdb65d0d8b" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int KalmanFilter::state_dim_</definition>
        <argsstring></argsstring>
        <name>state_dim_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dimensionality of the full state </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/KalmanFilter.h" line="166" column="5" bodyfile="include/KalmanFilter.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classKalmanFilter_1a4ad1b50ade8754913a19022e7bca1ae0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classKalmanFilter" kindref="compound">KalmanFilter</ref> *</type>
        <definition>KalmanFilter * KalmanFilter::clone</definition>
        <argsstring>() const</argsstring>
        <name>clone</name>
        <briefdescription>
<para>Clone operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/KalmanFilter.h" line="97" column="22" bodyfile="src/KalmanFilter.cpp" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classKalmanFilter_1a8ae420e25b831ed4d6d92d5f1a2e56ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classpbl_1_1Gaussian" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::Gaussian</ref> &amp;</type>
        <definition>const pbl::Gaussian &amp; KalmanFilter::getGaussian</definition>
        <argsstring>() const</argsstring>
        <name>getGaussian</name>
        <briefdescription>
<para>Returns the Kalman state and covariance as Gaussian. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The Kalman state and covariance as Gaussian </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/KalmanFilter.h" line="137" column="21" bodyfile="src/KalmanFilter.cpp" bodystart="129" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classKalmanFilter_1a141eef453ae22868e138d676ecb9b886" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double KalmanFilter::getLikelihood</definition>
        <argsstring>(const pbl::Gaussian &amp;z) const</argsstring>
        <name>getLikelihood</name>
        <param>
          <type>const <ref refid="classpbl_1_1Gaussian" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::Gaussian</ref> &amp;</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Calculates the likelihood that the given measurement originates from the estimated Kalman state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The Gaussian measurement </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/KalmanFilter.h" line="131" column="8" bodyfile="src/KalmanFilter.cpp" bodystart="125" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classKalmanFilter_1a9a5ec40d063c17b3fd0932e1414a3a1a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="namespacepbl_1ad482b8fd5913dda4f195b54fb1451d4e" kindref="member" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::Vector</ref> &amp;</type>
        <definition>const pbl::Vector &amp; KalmanFilter::getState</definition>
        <argsstring>() const</argsstring>
        <name>getState</name>
        <briefdescription>
<para>Returns the Kalman state (mean of the estimated Gaussian) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The Kalman state </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/KalmanFilter.h" line="143" column="19" bodyfile="src/KalmanFilter.cpp" bodystart="133" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classKalmanFilter_1a969168303b2867787fb2efb2ea6bffcc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="namespacepbl_1a93c4f435969a4899941b82076e994cf6" kindref="member" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::Matrix</ref> &amp;</type>
        <definition>const pbl::Matrix &amp; KalmanFilter::getStateCovariance</definition>
        <argsstring>() const</argsstring>
        <name>getStateCovariance</name>
        <briefdescription>
<para>Returns the covariance of the Kalman state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The covariance of the Kalman state </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/KalmanFilter.h" line="149" column="19" bodyfile="src/KalmanFilter.cpp" bodystart="137" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classKalmanFilter_1a3a40c2e09206b69aa1248eb7de72c913" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KalmanFilter::init</definition>
        <argsstring>(const pbl::Gaussian &amp;G)</argsstring>
        <name>init</name>
        <param>
          <type>const <ref refid="classpbl_1_1Gaussian" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::Gaussian</ref> &amp;</type>
          <declname>G</declname>
        </param>
        <briefdescription>
<para>Initializes the Kalman filter according to the given Gaussian, i.e., the initial state and state covariance is set to the mean and covariance of the given Gaussian. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>G</parametername>
</parameternamelist>
<parameterdescription>
<para>The Gaussian to initialize with </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/KalmanFilter.h" line="110" column="14" bodyfile="src/KalmanFilter.cpp" bodystart="54" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classKalmanFilter_1a63d4ec8ba8cf3eec2f732d4c5c709e66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KalmanFilter::KalmanFilter</definition>
        <argsstring>(const KalmanFilter &amp;orig)</argsstring>
        <name>KalmanFilter</name>
        <param>
          <type>const <ref refid="classKalmanFilter" kindref="compound">KalmanFilter</ref> &amp;</type>
          <declname>orig</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/KalmanFilter.h" line="92" column="1" bodyfile="src/KalmanFilter.cpp" bodystart="43" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classKalmanFilter_1af829128b9777052054b0930bc2b4b4f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KalmanFilter::KalmanFilter</definition>
        <argsstring>(int dim)</argsstring>
        <name>KalmanFilter</name>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
<para>Constructs a Kalman filter with specified state dimensionality. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>Dimensionality of the state </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/KalmanFilter.h" line="87" column="1" bodyfile="src/KalmanFilter.cpp" bodystart="39" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classKalmanFilter_1a8f0e1462aecd788d2e3fd0836bb5a0cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KalmanFilter::propagate</definition>
        <argsstring>(const double &amp;dt)</argsstring>
        <name>propagate</name>
        <param>
          <type>const double &amp;</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Propagates the state of the Kalman filter according to the (constant- velocity) system model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dt</parametername>
</parameternamelist>
<parameterdescription>
<para>The time increment with which to propagate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/KalmanFilter.h" line="123" column="18" bodyfile="src/KalmanFilter.cpp" bodystart="64" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classKalmanFilter_1a9029bff1176c5060f899d51826e6dff0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KalmanFilter::setMaxAcceleration</definition>
        <argsstring>(double a_max)</argsstring>
        <name>setMaxAcceleration</name>
        <param>
          <type>double</type>
          <declname>a_max</declname>
        </param>
        <briefdescription>
<para>Set the maximum expected acceleration. This parameter is used to determine the system noise in the propagate phase: a constant velocity is assumed, but the system noise takes into account that the the target may accelerate or deccelerate with the specified maximum acceleration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_max</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum expected acceleration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/KalmanFilter.h" line="158" column="6" bodyfile="src/KalmanFilter.cpp" bodystart="141" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classKalmanFilter_1ab595a2fe396bf07a651c13f3121b803d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KalmanFilter::update</definition>
        <argsstring>(const pbl::Gaussian &amp;z)</argsstring>
        <name>update</name>
        <param>
          <type>const <ref refid="classpbl_1_1Gaussian" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::Gaussian</ref> &amp;</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Updates the Kalman filter with the given (Gaussian) measurement. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The Gaussian measurement </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/KalmanFilter.h" line="116" column="6" bodyfile="src/KalmanFilter.cpp" bodystart="102" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classKalmanFilter_1af01e932cd20cec5dd06ca5d8f0b722f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>KalmanFilter::~KalmanFilter</definition>
        <argsstring>()</argsstring>
        <name>~KalmanFilter</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/KalmanFilter.h" line="102" column="9" bodyfile="src/KalmanFilter.cpp" bodystart="47" bodyend="48"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Kalman filter with constant-velocity system model. The system noise is automatically calculated from the maximum expected acceleration which can be set as a parameter. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>pbl::PDF</label>
        <link refid="classpbl_1_1PDF" external="/home/docker/ros/noetic/system/build/docs/problib/tags"/>
      </node>
      <node id="4">
        <label>pbl::Gaussian::GaussianStruct</label>
        <link refid="structpbl_1_1Gaussian_1_1GaussianStruct" external="/home/docker/ros/noetic/system/build/docs/problib/tags"/>
      </node>
      <node id="2">
        <label>pbl::Gaussian</label>
        <link refid="classpbl_1_1Gaussian" external="/home/docker/ros/noetic/system/build/docs/problib/tags"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>ptr_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>KalmanFilter</label>
        <link refid="classKalmanFilter"/>
        <childnode refid="2" relation="usage">
          <edgelabel>G_small_</edgelabel>
          <edgelabel>G_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/KalmanFilter.h" line="46" column="19" bodyfile="include/KalmanFilter.h" bodystart="46" bodyend="145"/>
    <listofallmembers>
      <member refid="classKalmanFilter_1afd8627e793df296a3dc7ddf77b8b325c" prot="protected" virt="non-virtual"><scope>KalmanFilter</scope><name>a_max_</name></member>
      <member refid="classKalmanFilter_1a4ad1b50ade8754913a19022e7bca1ae0" prot="public" virt="virtual"><scope>KalmanFilter</scope><name>clone</name></member>
      <member refid="classKalmanFilter_1a3ec07e5c9286e25a3eea3e232eb2ff9e" prot="protected" virt="non-virtual"><scope>KalmanFilter</scope><name>G_</name></member>
      <member refid="classKalmanFilter_1ad91c91a4918f80761df2c489708bbfda" prot="protected" virt="non-virtual"><scope>KalmanFilter</scope><name>G_small_</name></member>
      <member refid="classKalmanFilter_1a8ae420e25b831ed4d6d92d5f1a2e56ce" prot="public" virt="non-virtual"><scope>KalmanFilter</scope><name>getGaussian</name></member>
      <member refid="classKalmanFilter_1a141eef453ae22868e138d676ecb9b886" prot="public" virt="non-virtual"><scope>KalmanFilter</scope><name>getLikelihood</name></member>
      <member refid="classKalmanFilter_1a9a5ec40d063c17b3fd0932e1414a3a1a" prot="public" virt="non-virtual"><scope>KalmanFilter</scope><name>getState</name></member>
      <member refid="classKalmanFilter_1a969168303b2867787fb2efb2ea6bffcc" prot="public" virt="non-virtual"><scope>KalmanFilter</scope><name>getStateCovariance</name></member>
      <member refid="classKalmanFilter_1aa4fdf42b27cb1f02dadafac0e29adcb0" prot="protected" virt="non-virtual"><scope>KalmanFilter</scope><name>H_</name></member>
      <member refid="classKalmanFilter_1a3a40c2e09206b69aa1248eb7de72c913" prot="public" virt="virtual"><scope>KalmanFilter</scope><name>init</name></member>
      <member refid="classKalmanFilter_1af829128b9777052054b0930bc2b4b4f3" prot="public" virt="non-virtual"><scope>KalmanFilter</scope><name>KalmanFilter</name></member>
      <member refid="classKalmanFilter_1a63d4ec8ba8cf3eec2f732d4c5c709e66" prot="public" virt="non-virtual"><scope>KalmanFilter</scope><name>KalmanFilter</name></member>
      <member refid="classKalmanFilter_1a7133926d0ee39d891057b625b75b5b89" prot="protected" virt="non-virtual"><scope>KalmanFilter</scope><name>meas_dim_</name></member>
      <member refid="classKalmanFilter_1a8f0e1462aecd788d2e3fd0836bb5a0cc" prot="public" virt="virtual"><scope>KalmanFilter</scope><name>propagate</name></member>
      <member refid="classKalmanFilter_1a9029bff1176c5060f899d51826e6dff0" prot="public" virt="non-virtual"><scope>KalmanFilter</scope><name>setMaxAcceleration</name></member>
      <member refid="classKalmanFilter_1a95ff8e72aeb7f43a7cb089bdb65d0d8b" prot="protected" virt="non-virtual"><scope>KalmanFilter</scope><name>state_dim_</name></member>
      <member refid="classKalmanFilter_1ab595a2fe396bf07a651c13f3121b803d" prot="public" virt="non-virtual"><scope>KalmanFilter</scope><name>update</name></member>
      <member refid="classKalmanFilter_1af01e932cd20cec5dd06ca5d8f0b722f4" prot="public" virt="virtual"><scope>KalmanFilter</scope><name>~KalmanFilter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
