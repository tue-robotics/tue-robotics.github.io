<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classDiscreteFilter" kind="class" language="C++" prot="public">
    <compoundname>DiscreteFilter</compoundname>
    <basecompoundref refid="classmhf_1_1IStateEstimator" prot="public" virt="non-virtual">mhf::IStateEstimator</basecompoundref>
    <includes refid="DiscreteFilter_8h" local="no">DiscreteFilter.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classDiscreteFilter_1a606d39344debb72f963c3d1e0e88f7ba" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int DiscreteFilter::N_DISCRETEKALMAN_FILTER</definition>
        <argsstring></argsstring>
        <name>N_DISCRETEKALMAN_FILTER</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DiscreteFilter.h" line="88" column="12" bodyfile="include/DiscreteFilter.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classDiscreteFilter_1a5ec4aea8bba1b0ad24fc3cbe8dce9359" prot="protected" static="no" mutable="no">
        <type><ref refid="classpbl_1_1PMF" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::PMF</ref></type>
        <definition>pbl::PMF DiscreteFilter::pmf_</definition>
        <argsstring></argsstring>
        <name>pmf_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DiscreteFilter.h" line="124" column="10" bodyfile="include/DiscreteFilter.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classDiscreteFilter_1a75b02491554abf40fb42559d06b24f12" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classDiscreteFilter" kindref="compound">DiscreteFilter</ref> *</type>
        <definition>DiscreteFilter * DiscreteFilter::clone</definition>
        <argsstring>() const</argsstring>
        <name>clone</name>
        <reimplements refid="classmhf_1_1IStateEstimator_1a10ab7cd2f9ee963ff8eb0f5182a32904">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DiscreteFilter.h" line="96" column="24" bodyfile="src/DiscreteFilter.cpp" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classDiscreteFilter_1af27ae51026ab6a80091943117ad1cf30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DiscreteFilter::DiscreteFilter</definition>
        <argsstring>()</argsstring>
        <name>DiscreteFilter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DiscreteFilter.h" line="90" column="1" bodyfile="src/DiscreteFilter.cpp" bodystart="41" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classDiscreteFilter_1a3cb5a582963886302c94626c6e08efb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DiscreteFilter::DiscreteFilter</definition>
        <argsstring>(const DiscreteFilter &amp;orig)</argsstring>
        <name>DiscreteFilter</name>
        <param>
          <type>const <ref refid="classDiscreteFilter" kindref="compound">DiscreteFilter</ref> &amp;</type>
          <declname>orig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DiscreteFilter.h" line="92" column="1" bodyfile="src/DiscreteFilter.cpp" bodystart="45" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classDiscreteFilter_1aafcd5dfaf72351681e9d58b11a764450" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classpbl_1_1PDF" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::PDF</ref> &amp;</type>
        <definition>const pbl::PDF &amp; DiscreteFilter::getValue</definition>
        <argsstring>() const</argsstring>
        <name>getValue</name>
        <reimplements refid="classmhf_1_1IStateEstimator_1aadaf2529f2619c59f6ebc8915f04bb11">getValue</reimplements>
        <briefdescription>
<para>Returns the current estimated state value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current state, i.e., the current attribute value represented as probability density function </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DiscreteFilter.h" line="120" column="24" bodyfile="src/DiscreteFilter.cpp" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classDiscreteFilter_1a252b0af526c50aeb12f659a081aad063" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void DiscreteFilter::propagate</definition>
        <argsstring>(const mhf::Time &amp;time)</argsstring>
        <name>propagate</name>
        <reimplements refid="classmhf_1_1IStateEstimator_1ae93bd3b893053fb1660b12eb41c4cae6">propagate</reimplements>
        <param>
          <type>const <ref refid="namespacemhf_1ae209e58ac587543af50a25222aeda18e" kindref="member" external="/home/docker/ros/noetic/system/build/docs/wire_core/tags">mhf::Time</ref> &amp;</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Propagates the internal state to Time time. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The time to which the internal state is propagated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DiscreteFilter.h" line="109" column="18" bodyfile="src/DiscreteFilter.cpp" bodystart="57" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classDiscreteFilter_1afee594e7413de5e0a463a7352de5055f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void DiscreteFilter::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <reimplements refid="classmhf_1_1IStateEstimator_1aca0803c04a17469a27334b6e6089eaeb">reset</reimplements>
        <briefdescription>
<para>Resets the internal state of the estimator to its initial value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DiscreteFilter.h" line="114" column="18" bodyfile="src/DiscreteFilter.cpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classDiscreteFilter_1ad54d0cfba5953a0a88384f5ce3a80a4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void DiscreteFilter::update</definition>
        <argsstring>(const pbl::PDF &amp;z, const mhf::Time &amp;time)</argsstring>
        <name>update</name>
        <reimplements refid="classmhf_1_1IStateEstimator_1ab649cec130ec1be64cf8c64d607ec418">update</reimplements>
        <param>
          <type>const <ref refid="classpbl_1_1PDF" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::PDF</ref> &amp;</type>
          <declname>z</declname>
        </param>
        <param>
          <type>const <ref refid="namespacemhf_1ae209e58ac587543af50a25222aeda18e" kindref="member" external="/home/docker/ros/noetic/system/build/docs/wire_core/tags">mhf::Time</ref> &amp;</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Updates the internal state based on measurement z. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The measurement with which to update. z should be a discrete distribution (PMF) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The time to which the internal state is propagated before updating </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DiscreteFilter.h" line="103" column="18" bodyfile="src/DiscreteFilter.cpp" bodystart="60" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classDiscreteFilter_1a41b6914998f7366c1a6d3035ed183171" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>DiscreteFilter::~DiscreteFilter</definition>
        <argsstring>()</argsstring>
        <name>~DiscreteFilter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DiscreteFilter.h" line="94" column="9" bodyfile="src/DiscreteFilter.cpp" bodystart="49" bodyend="51"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Estimator that can be used to estimate discrete states. The update is applied according to Bayes. No propagation has been included in this class, but the propagate method can simply be overloaded in a specialized class. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>mhf::IStateEstimator</label>
        <link refid="classmhf_1_1IStateEstimator" external="/home/docker/ros/noetic/system/build/docs/wire_core/tags"/>
      </node>
      <node id="1">
        <label>DiscreteFilter</label>
        <link refid="classDiscreteFilter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>mhf::IStateEstimator</label>
        <link refid="classmhf_1_1IStateEstimator" external="/home/docker/ros/noetic/system/build/docs/wire_core/tags"/>
      </node>
      <node id="4">
        <label>pbl::PDF</label>
        <link refid="classpbl_1_1PDF" external="/home/docker/ros/noetic/system/build/docs/problib/tags"/>
      </node>
      <node id="3">
        <label>pbl::PMF</label>
        <link refid="classpbl_1_1PMF" external="/home/docker/ros/noetic/system/build/docs/problib/tags"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>ptr_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>DiscreteFilter</label>
        <link refid="classDiscreteFilter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>pmf_</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>pbl::PMF::PMFStruct</label>
        <link refid="structpbl_1_1PMF_1_1PMFStruct" external="/home/docker/ros/noetic/system/build/docs/problib/tags"/>
        <childnode refid="6" relation="usage">
          <edgelabel>pmf_</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::map&lt; std::string, double &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="include/DiscreteFilter.h" line="50" column="49" bodyfile="include/DiscreteFilter.h" bodystart="50" bodyend="92"/>
    <listofallmembers>
      <member refid="classDiscreteFilter_1a75b02491554abf40fb42559d06b24f12" prot="public" virt="virtual"><scope>DiscreteFilter</scope><name>clone</name></member>
      <member refid="classDiscreteFilter_1af27ae51026ab6a80091943117ad1cf30" prot="public" virt="non-virtual"><scope>DiscreteFilter</scope><name>DiscreteFilter</name></member>
      <member refid="classDiscreteFilter_1a3cb5a582963886302c94626c6e08efb3" prot="public" virt="non-virtual"><scope>DiscreteFilter</scope><name>DiscreteFilter</name></member>
      <member refid="classDiscreteFilter_1aafcd5dfaf72351681e9d58b11a764450" prot="public" virt="virtual"><scope>DiscreteFilter</scope><name>getValue</name></member>
      <member refid="classDiscreteFilter_1a606d39344debb72f963c3d1e0e88f7ba" prot="public" virt="non-virtual"><scope>DiscreteFilter</scope><name>N_DISCRETEKALMAN_FILTER</name></member>
      <member refid="classDiscreteFilter_1a5ec4aea8bba1b0ad24fc3cbe8dce9359" prot="protected" virt="non-virtual"><scope>DiscreteFilter</scope><name>pmf_</name></member>
      <member refid="classDiscreteFilter_1a252b0af526c50aeb12f659a081aad063" prot="public" virt="virtual"><scope>DiscreteFilter</scope><name>propagate</name></member>
      <member refid="classDiscreteFilter_1afee594e7413de5e0a463a7352de5055f" prot="public" virt="virtual"><scope>DiscreteFilter</scope><name>reset</name></member>
      <member refid="classmhf_1_1IStateEstimator_1a265a58f62f73731a85179ab4f465aa0a" prot="public" virt="virtual"><scope>DiscreteFilter</scope><name>setParameter</name></member>
      <member refid="classmhf_1_1IStateEstimator_1ab2e657eef008c37181cb650b14692f4f" prot="public" virt="virtual"><scope>DiscreteFilter</scope><name>setParameter</name></member>
      <member refid="classmhf_1_1IStateEstimator_1aea2e3fa3e7ee39155e556262abb086c7" prot="public" virt="virtual"><scope>DiscreteFilter</scope><name>setParameter</name></member>
      <member refid="classDiscreteFilter_1ad54d0cfba5953a0a88384f5ce3a80a4f" prot="public" virt="virtual"><scope>DiscreteFilter</scope><name>update</name></member>
      <member refid="classDiscreteFilter_1a41b6914998f7366c1a6d3035ed183171" prot="public" virt="virtual"><scope>DiscreteFilter</scope><name>~DiscreteFilter</name></member>
      <member refid="classmhf_1_1IStateEstimator_1a368b89d4307185f95a45c50d19fdb4e8" prot="public" virt="virtual"><scope>DiscreteFilter</scope><name>~IStateEstimator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
