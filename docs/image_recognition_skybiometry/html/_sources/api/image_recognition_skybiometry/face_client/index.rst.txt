image_recognition_skybiometry.face_client
=========================================

.. py:module:: image_recognition_skybiometry.face_client


Attributes
----------

.. autoapisummary::

   image_recognition_skybiometry.face_client.API_HOST
   image_recognition_skybiometry.face_client.USE_SSL


Exceptions
----------

.. autoapisummary::

   image_recognition_skybiometry.face_client.FaceError


Classes
-------

.. autoapisummary::

   image_recognition_skybiometry.face_client.FaceClient


Module Contents
---------------

.. py:data:: API_HOST
   :value: 'api.skybiometry.com/fc'


.. py:data:: USE_SSL
   :value: True


.. py:class:: FaceClient(api_key=None, api_secret=None)

   Bases: :py:obj:`object`


   .. py:attribute:: api_key
      :value: None



   .. py:attribute:: api_secret
      :value: None



   .. py:attribute:: format
      :value: 'json'



   .. py:attribute:: twitter_credentials
      :value: None



   .. py:attribute:: facebook_credentials
      :value: None



   .. py:method:: set_twitter_oauth_credentials(user=None, secret=None, token=None)


   .. py:method:: set_facebook_oauth_credentials(user_id=None, session_id=None, oauth_token=None)


   .. py:method:: faces_detect(urls=None, file_=None, buffer_=None, aggressive=False)

      Returns tags for detected faces in one or more photos, with geometric
      information of the tag, eyes, nose and mouth, as well as the gender,
      glasses, and smiling attributes.

      http://www.skybiometry.com/Documentation#faces/detect



   .. py:method:: faces_status(uids=None, namespace=None)

      Reports training set status for the specified UIDs.

      http://www.skybiometry.com/Documentation#faces/status



   .. py:method:: faces_recognize(uids=None, urls=None, files_=None, buffers_=None, aggressive=False, train=None, namespace=None)

      Attempts to detect and recognize one or more user IDs' faces, in one
      or more photos.
      For each detected face, the SkyBiometry engine will return the most likely
      user IDs, or empty result for unrecognized faces. In addition, each
      tag includes a threshold score - any score below this number is
      considered a low-probability hit.

      http://www.skybiometry.com/Documentation#faces/recognize



   .. py:method:: faces_train(uids=None, namespace=None)

      Calls the training procedure for the specified UIDs, and reports back
      changes.

      http://www.skybiometry.com/Documentation#faces/train



   .. py:method:: tags_get(uids=None, urls=None, pids=None, order='recent', limit=5, together=False, filters=None, namespace=None)

      Returns saved tags in one or more photos, or for the specified
      User ID(s).
      This method also accepts multiple filters for finding tags
      corresponding to a more specific criteria such as front-facing,
      recent, or where two or more users appear together in same photos.

      http://www.skybiometry.com/Documentation#tags/get



   .. py:method:: tags_add(url=None, x=None, y=None, width=None, uid=None, tagger_id=None, label=None, password=None)

      Add a (manual) face tag to a photo. Use this method to add face tags
      where those were not detected for completeness of your service.

      http://www.skybiometry.com/Documentation#tags/add



   .. py:method:: tags_save(tids=None, uid=None, tagger_id=None, label=None, password=None)

      Saves a face tag. Use this method to save tags for training the
      index, or for future use of the faces.detect and tags.get methods.

      http://www.skybiometry.com/Documentation#tags/save



   .. py:method:: tags_remove(tids=None, password=None)

      Remove a previously saved face tag from a photo.

      http://www.skybiometry.com/Documentation#tags/remove



   .. py:method:: account_limits()

      Returns current rate limits for the account represented by the passed
      API key and Secret.

      http://www.skybiometry.com/Documentation#account/limits



   .. py:method:: account_users(namespaces=None)

      Returns current rate limits for the account represented by the passed
      API key and Secret.

      http://www.skybiometry.com/Documentation#account/users



   .. py:method:: account_namespaces()

      Returns all valid data namespaces for user authorized by specified API key.

      http://www.skybiometry.com/Documentation#account/namespaces



   .. py:method:: __check_user_auth_credentials(uids)


   .. py:method:: __append_user_auth_data(data, facebook_uids, twitter_uids)


   .. py:method:: __append_optional_arguments(data, **kwargs)
      :staticmethod:



   .. py:method:: send_request(method=None, parameters=None, files=None, buffers=None)


.. py:exception:: FaceError(error_code, error_message)

   Bases: :py:obj:`Exception`


   Common base class for all non-exit exceptions.

   Initialize self.  See help(type(self)) for accurate signature.


   .. py:attribute:: error_code


   .. py:attribute:: error_message


   .. py:method:: __str__()

      Return str(self).



