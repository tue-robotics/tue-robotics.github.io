<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classrgbd_1_1ClientROS" kind="class" language="C++" prot="public">
    <compoundname>rgbd::ClientROS</compoundname>
    <basecompoundref refid="classrgbd_1_1ClientROSBase" prot="public" virt="non-virtual">rgbd::ClientROSBase</basecompoundref>
    <derivedcompoundref refid="classTestClientROS" prot="public" virt="non-virtual">TestClientROS</derivedcompoundref>
    <includes refid="client__ros_8h" local="no">client_ros.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classrgbd_1_1ClientROS_1a04494856f29fe291ee0c3e7ebf006131" prot="protected" static="no" mutable="no">
        <type>ros::CallbackQueue</type>
        <definition>ros::CallbackQueue rgbd::ClientROS::cb_queue_</definition>
        <argsstring></argsstring>
        <name>cb_queue_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/client_ros.h" line="71" column="24" bodyfile="include/rgbd/client_ros.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrgbd_1_1ClientROS_1a48687abfa92bcb8e964aae7b3278727a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rgbd::ClientROS::ClientROS</definition>
        <argsstring>()</argsstring>
        <name>ClientROS</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/client_ros.h" line="38" column="5" bodyfile="src/client_ros.cpp" bodystart="17" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classrgbd_1_1ClientROS_1a6de448a19779af70cd97384fbcb32d36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rgbd::ClientROS::initialize</definition>
        <argsstring>(const std::string &amp;rgb_image_topic, const std::string &amp;depth_image_topic, const std::string &amp;cam_info_topic)</argsstring>
        <name>initialize</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>rgb_image_topic</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>depth_image_topic</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>cam_info_topic</declname>
        </param>
        <briefdescription>
<para>Initialize the subscriber. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rgb_image_topic</parametername>
</parameternamelist>
<parameterdescription>
<para>topic name of the rgb image; topic will still be resolved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>depth_image_topic</parametername>
</parameternamelist>
<parameterdescription>
<para>topic name of the depth image; topic will still be resolved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cam_info_topic</parametername>
</parameternamelist>
<parameterdescription>
<para>topic name of the camera info; topic will still be resolved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>indicates success </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/client_ros.h" line="52" column="10" bodyfile="src/client_ros.cpp" bodystart="29" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classrgbd_1_1ClientROS_1a30bb2590754cdd110930520df564bc27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacergbd_1a902658707a2f3b946ec8bd47e381bb1d" kindref="member">ImagePtr</ref></type>
        <definition>ImagePtr rgbd::ClientROS::nextImage</definition>
        <argsstring>()</argsstring>
        <name>nextImage</name>
        <briefdescription>
<para>Get a new <ref refid="classrgbd_1_1Image" kindref="compound">Image</ref>. If no new image has been received since the last call, The ImagePtr will be a nullptr. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>ImagePtr to an <ref refid="classrgbd_1_1Image" kindref="compound">Image</ref> or a nullptr </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/client_ros.h" line="67" column="14" bodyfile="src/client_ros.cpp" bodystart="53" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classrgbd_1_1ClientROS_1abe76c73c5c8095527d215c8b9a31ebb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rgbd::ClientROS::nextImage</definition>
        <argsstring>(Image &amp;image)</argsstring>
        <name>nextImage</name>
        <param>
          <type><ref refid="classrgbd_1_1Image" kindref="compound">Image</ref> &amp;</type>
          <declname>image</declname>
        </param>
        <briefdescription>
<para>Get a new <ref refid="classrgbd_1_1Image" kindref="compound">Image</ref>. If no new image has been received since the last call, no image will be written and false will be returned. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classrgbd_1_1Image" kindref="compound">Image</ref> reference which will be written. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>valid image written </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/client_ros.h" line="60" column="10" bodyfile="src/client_ros.cpp" bodystart="43" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classrgbd_1_1ClientROS_1ade00f237d39f04a985cba5833646761c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>rgbd::ClientROS::~ClientROS</definition>
        <argsstring>()</argsstring>
        <name>~ClientROS</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/client_ros.h" line="43" column="13" bodyfile="src/client_ros.cpp" bodystart="23" bodyend="25"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classrgbd_1_1Client" kindref="compound">Client</ref> which subscribes to regular <ref refid="classROS" kindref="compound">ROS</ref> image topics. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>TestClientROS</label>
        <link refid="classTestClientROS"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>rgbd::ClientROSBase</label>
        <link refid="classrgbd_1_1ClientROSBase"/>
      </node>
      <node id="1">
        <label>rgbd::ClientROS</label>
        <link refid="classrgbd_1_1ClientROS"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>std::unique_ptr&lt; message_filters::Subscriber&lt; sensor_msgs::Image &gt; &gt;</label>
        <link refid="cpp/memory/unique_ptr" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="2">
        <label>rgbd::ClientROSBase</label>
        <link refid="classrgbd_1_1ClientROSBase"/>
        <childnode refid="3" relation="usage">
          <edgelabel>sync_</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>sub_rgb_sync_</edgelabel>
          <edgelabel>sub_depth_sync_</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>image_ptr_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::unique_ptr&lt; message_filters::Synchronizer&lt; RGBDApproxPolicy &gt; &gt;</label>
        <link refid="cpp/memory/unique_ptr" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="5">
        <label>rgbd::Image</label>
        <link refid="classrgbd_1_1Image"/>
        <childnode refid="6" relation="usage">
          <edgelabel>frame_id_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>rgbd::ClientROS</label>
        <link refid="classrgbd_1_1ClientROS"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>std::string</label>
        <link refid="cpp/string/basic_string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="include/rgbd/client_ros.h" line="31" column="37" bodyfile="include/rgbd/client_ros.h" bodystart="31" bodyend="73"/>
    <listofallmembers>
      <member refid="classrgbd_1_1ClientROSBase_1a099221f16716e50465e47928908f2a49" prot="protected" virt="non-virtual"><scope>rgbd::ClientROS</scope><name>cam_model_</name></member>
      <member refid="classrgbd_1_1ClientROSBase_1ae73000fe6bf70e483a9cb76226f99fd8" prot="protected" virt="non-virtual"><scope>rgbd::ClientROS</scope><name>camInfoCallback</name></member>
      <member refid="classrgbd_1_1ClientROS_1a04494856f29fe291ee0c3e7ebf006131" prot="protected" virt="non-virtual"><scope>rgbd::ClientROS</scope><name>cb_queue_</name></member>
      <member refid="classrgbd_1_1ClientROS_1a48687abfa92bcb8e964aae7b3278727a" prot="public" virt="non-virtual"><scope>rgbd::ClientROS</scope><name>ClientROS</name></member>
      <member refid="classrgbd_1_1ClientROSBase_1a5ec2e26b573bd0576f258c1775efda55" prot="public" virt="non-virtual"><scope>rgbd::ClientROS</scope><name>ClientROSBase</name></member>
      <member refid="classrgbd_1_1ClientROSBase_1af8a0e1be518ee1d7834c8c5695a381ac" prot="public" virt="non-virtual"><scope>rgbd::ClientROS</scope><name>deinitialize</name></member>
      <member refid="classrgbd_1_1ClientROSBase_1abecaca90a9f6d5c61ac5226367645943" prot="protected" virt="non-virtual"><scope>rgbd::ClientROS</scope><name>image_ptr_</name></member>
      <member refid="classrgbd_1_1ClientROSBase_1ae95b316b81976714f21c50a489dd6394" prot="protected" virt="non-virtual"><scope>rgbd::ClientROS</scope><name>imageCallback</name></member>
      <member refid="classrgbd_1_1ClientROS_1a6de448a19779af70cd97384fbcb32d36" prot="public" virt="non-virtual"><scope>rgbd::ClientROS</scope><name>initialize</name></member>
      <member refid="classrgbd_1_1ClientROSBase_1a1b495dfbf4b5d68624fc3dc8843857fa" prot="public" virt="non-virtual"><scope>rgbd::ClientROS</scope><name>initialized</name></member>
      <member refid="classrgbd_1_1ClientROSBase_1afe9a8147e966592db8cddc722981d23d" prot="protected" virt="non-virtual"><scope>rgbd::ClientROS</scope><name>new_image_</name></member>
      <member refid="classrgbd_1_1ClientROS_1abe76c73c5c8095527d215c8b9a31ebb7" prot="public" virt="non-virtual"><scope>rgbd::ClientROS</scope><name>nextImage</name></member>
      <member refid="classrgbd_1_1ClientROS_1a30bb2590754cdd110930520df564bc27" prot="public" virt="non-virtual"><scope>rgbd::ClientROS</scope><name>nextImage</name></member>
      <member refid="classrgbd_1_1ClientROSBase_1ada91d299f44f6ef923b061c5bb03abbf" prot="protected" virt="non-virtual"><scope>rgbd::ClientROS</scope><name>nh_</name></member>
      <member refid="classrgbd_1_1ClientROSBase_1ae32b02ea20f92f4b95bc9629ba24a2f5" prot="protected" virt="non-virtual"><scope>rgbd::ClientROS</scope><name>sub_cam_info_</name></member>
      <member refid="classrgbd_1_1ClientROSBase_1a98a636fe29875e8751717af6d3abe843" prot="protected" virt="non-virtual"><scope>rgbd::ClientROS</scope><name>sub_depth_sync_</name></member>
      <member refid="classrgbd_1_1ClientROSBase_1af2776c7803c0cd0f22f215d8636b8374" prot="protected" virt="non-virtual"><scope>rgbd::ClientROS</scope><name>sub_rgb_sync_</name></member>
      <member refid="classrgbd_1_1ClientROSBase_1a38e27c8702891218d3c8aa197f18ab28" prot="protected" virt="non-virtual"><scope>rgbd::ClientROS</scope><name>sync_</name></member>
      <member refid="classrgbd_1_1ClientROS_1ade00f237d39f04a985cba5833646761c" prot="public" virt="virtual"><scope>rgbd::ClientROS</scope><name>~ClientROS</name></member>
      <member refid="classrgbd_1_1ClientROSBase_1a3525ad7bb5f1b61cc171454981d8fc05" prot="public" virt="virtual"><scope>rgbd::ClientROS</scope><name>~ClientROSBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
