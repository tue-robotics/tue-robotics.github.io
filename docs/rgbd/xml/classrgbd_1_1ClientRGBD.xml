<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classrgbd_1_1ClientRGBD" kind="class" language="C++" prot="public">
    <compoundname>rgbd::ClientRGBD</compoundname>
    <includes refid="client__rgbd_8h" local="no">client_rgbd.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classrgbd_1_1ClientRGBD_1aa0b3995bbdd223ec6f0e7da9ecff9a52" prot="protected" static="no" mutable="no">
        <type>ros::CallbackQueue</type>
        <definition>ros::CallbackQueue rgbd::ClientRGBD::cb_queue_</definition>
        <argsstring></argsstring>
        <name>cb_queue_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/client_rgbd.h" line="75" column="24" bodyfile="include/rgbd/client_rgbd.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrgbd_1_1ClientRGBD_1ade8e8b774947d8aa27e703ae7cc515ba" prot="protected" static="no" mutable="no">
        <type><ref refid="classrgbd_1_1Image" kindref="compound">Image</ref> *</type>
        <definition>Image* rgbd::ClientRGBD::image_ptr_</definition>
        <argsstring></argsstring>
        <name>image_ptr_</name>
        <briefdescription>
<para>Pointer to the <ref refid="classrgbd_1_1Image" kindref="compound">Image</ref> being written in the NextImage calls. Either set to the address of the provided reference. Or being wrapped into a shared pointer. Ownership therefore belongs to the caller of nextImage, which provides the references or receives the SharedPtr. image_ptr_ should only be accessed inside a NextImage call. Outside it, the image_ptr_ might be invalid/ This is used since you can not pass additional arguments to the callback. A raw pointer is prefered to avoid unnecessary copy operations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/client_rgbd.h" line="87" column="11" bodyfile="include/rgbd/client_rgbd.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrgbd_1_1ClientRGBD_1a0b0aaa2a193189f2dbb69911d56353f6" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rgbd::ClientRGBD::new_image_</definition>
        <argsstring></argsstring>
        <name>new_image_</name>
        <briefdescription>
<para>Track if image is updated in a callback. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/client_rgbd.h" line="80" column="10" bodyfile="include/rgbd/client_rgbd.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrgbd_1_1ClientRGBD_1abf81869439304aa0745e3f1a0f9feb70" prot="protected" static="no" mutable="no">
        <type>ros::Subscriber</type>
        <definition>ros::Subscriber rgbd::ClientRGBD::sub_image_</definition>
        <argsstring></argsstring>
        <name>sub_image_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/client_rgbd.h" line="74" column="21" bodyfile="include/rgbd/client_rgbd.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrgbd_1_1ClientRGBD_1aa3d1d1bec46370cfaeea637d455c63da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rgbd::ClientRGBD::ClientRGBD</definition>
        <argsstring>()</argsstring>
        <name>ClientRGBD</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/client_rgbd.h" line="29" column="5" bodyfile="src/client_rgbd.cpp" bodystart="10" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="classrgbd_1_1ClientRGBD_1a14314ace115f6739a14e7bcac1afab01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rgbd::ClientRGBD::deinitialize</definition>
        <argsstring>()</argsstring>
        <name>deinitialize</name>
        <briefdescription>
<para>Clears the subscriber. <ref refid="classrgbd_1_1ClientRGBD_1a254be9068f5dc94c1f1d9165fe2b7a08" kindref="member">initialized</ref> will now return false. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>indicates success </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/client_rgbd.h" line="49" column="10" bodyfile="src/client_rgbd.cpp" bodystart="36" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classrgbd_1_1ClientRGBD_1a6aefd197082e52248ef846aa5a389988" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rgbd::ClientRGBD::initialize</definition>
        <argsstring>(const std::string &amp;server_name)</argsstring>
        <name>initialize</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>server_name</declname>
        </param>
        <briefdescription>
<para>Initialize the client. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>server_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Fully resolved server name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>indicates success </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/client_rgbd.h" line="43" column="10" bodyfile="src/client_rgbd.cpp" bodystart="22" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classrgbd_1_1ClientRGBD_1a254be9068f5dc94c1f1d9165fe2b7a08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool rgbd::ClientRGBD::initialized</definition>
        <argsstring>()</argsstring>
        <name>initialized</name>
        <briefdescription>
<para>Check if the client is initialized. nextImage will not return an image if client is not initialized. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>initialized or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/client_rgbd.h" line="55" column="10" bodyfile="include/rgbd/client_rgbd.h" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classrgbd_1_1ClientRGBD_1a2b7c2ec54439b75597ec8b33f9cabf92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacergbd_1a902658707a2f3b946ec8bd47e381bb1d" kindref="member">ImagePtr</ref></type>
        <definition>ImagePtr rgbd::ClientRGBD::nextImage</definition>
        <argsstring>()</argsstring>
        <name>nextImage</name>
        <briefdescription>
<para>Get a new <ref refid="classrgbd_1_1Image" kindref="compound">Image</ref>. If no new image has been received since the last call, The ImagePtr will be a nullptr. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>ImagePtr to an <ref refid="classrgbd_1_1Image" kindref="compound">Image</ref> or a nullptr </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/client_rgbd.h" line="70" column="14" bodyfile="src/client_rgbd.cpp" bodystart="54" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classrgbd_1_1ClientRGBD_1ab501e5665e631244c71b700cb6346407" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rgbd::ClientRGBD::nextImage</definition>
        <argsstring>(Image &amp;image)</argsstring>
        <name>nextImage</name>
        <param>
          <type><ref refid="classrgbd_1_1Image" kindref="compound">Image</ref> &amp;</type>
          <declname>image</declname>
        </param>
        <briefdescription>
<para>Get a new <ref refid="classrgbd_1_1Image" kindref="compound">Image</ref>. If no new image has been received since the last call, no image will be written and false will be returned. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classrgbd_1_1Image" kindref="compound">Image</ref> reference which will be written. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>valid image written </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/client_rgbd.h" line="63" column="10" bodyfile="src/client_rgbd.cpp" bodystart="44" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classrgbd_1_1ClientRGBD_1acf7f827a41e43969c4b81ba34ef22092" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>rgbd::ClientRGBD::~ClientRGBD</definition>
        <argsstring>()</argsstring>
        <name>~ClientRGBD</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
<para>image_ptr_ is not deleted as the client never owns the image pointer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/client_rgbd.h" line="36" column="13" bodyfile="src/client_rgbd.cpp" bodystart="16" bodyend="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classrgbd_1_1ClientRGBD_1a13d003622bab3c3a2edf4fa568cb71a6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rgbd::ClientRGBD::rgbdImageCallback</definition>
        <argsstring>(const rgbd_msgs::RGBD::ConstPtr &amp;msg)</argsstring>
        <name>rgbdImageCallback</name>
        <param>
          <type>const rgbd_msgs::RGBD::ConstPtr &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/client_rgbd.h" line="89" column="10" bodyfile="src/client_rgbd.cpp" bodystart="69" bodyend="72"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classrgbd_1_1Client" kindref="compound">Client</ref> which subscribes to <ref refid="classRGBD" kindref="compound">RGBD</ref> topic. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>rgbd::ClientRGBD</label>
        <link refid="classrgbd_1_1ClientRGBD"/>
        <childnode refid="2" relation="usage">
          <edgelabel>image_ptr_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>rgbd::Image</label>
        <link refid="classrgbd_1_1Image"/>
        <childnode refid="3" relation="usage">
          <edgelabel>frame_id_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::string</label>
        <link refid="cpp/string/basic_string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="include/rgbd/client_rgbd.h" line="22" column="17" bodyfile="include/rgbd/client_rgbd.h" bodystart="22" bodyend="91"/>
    <listofallmembers>
      <member refid="classrgbd_1_1ClientRGBD_1aa0b3995bbdd223ec6f0e7da9ecff9a52" prot="protected" virt="non-virtual"><scope>rgbd::ClientRGBD</scope><name>cb_queue_</name></member>
      <member refid="classrgbd_1_1ClientRGBD_1aa3d1d1bec46370cfaeea637d455c63da" prot="public" virt="non-virtual"><scope>rgbd::ClientRGBD</scope><name>ClientRGBD</name></member>
      <member refid="classrgbd_1_1ClientRGBD_1a14314ace115f6739a14e7bcac1afab01" prot="public" virt="non-virtual"><scope>rgbd::ClientRGBD</scope><name>deinitialize</name></member>
      <member refid="classrgbd_1_1ClientRGBD_1ade8e8b774947d8aa27e703ae7cc515ba" prot="protected" virt="non-virtual"><scope>rgbd::ClientRGBD</scope><name>image_ptr_</name></member>
      <member refid="classrgbd_1_1ClientRGBD_1a6aefd197082e52248ef846aa5a389988" prot="public" virt="non-virtual"><scope>rgbd::ClientRGBD</scope><name>initialize</name></member>
      <member refid="classrgbd_1_1ClientRGBD_1a254be9068f5dc94c1f1d9165fe2b7a08" prot="public" virt="non-virtual"><scope>rgbd::ClientRGBD</scope><name>initialized</name></member>
      <member refid="classrgbd_1_1ClientRGBD_1a0b0aaa2a193189f2dbb69911d56353f6" prot="protected" virt="non-virtual"><scope>rgbd::ClientRGBD</scope><name>new_image_</name></member>
      <member refid="classrgbd_1_1ClientRGBD_1ab501e5665e631244c71b700cb6346407" prot="public" virt="non-virtual"><scope>rgbd::ClientRGBD</scope><name>nextImage</name></member>
      <member refid="classrgbd_1_1ClientRGBD_1a2b7c2ec54439b75597ec8b33f9cabf92" prot="public" virt="non-virtual"><scope>rgbd::ClientRGBD</scope><name>nextImage</name></member>
      <member refid="classrgbd_1_1ClientRGBD_1a13d003622bab3c3a2edf4fa568cb71a6" prot="protected" virt="non-virtual"><scope>rgbd::ClientRGBD</scope><name>rgbdImageCallback</name></member>
      <member refid="classrgbd_1_1ClientRGBD_1abf81869439304aa0745e3f1a0f9feb70" prot="protected" virt="non-virtual"><scope>rgbd::ClientRGBD</scope><name>sub_image_</name></member>
      <member refid="classrgbd_1_1ClientRGBD_1acf7f827a41e43969c4b81ba34ef22092" prot="public" virt="virtual"><scope>rgbd::ClientRGBD</scope><name>~ClientRGBD</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
