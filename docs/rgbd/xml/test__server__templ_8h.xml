<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="test__server__templ_8h" kind="file" language="C++">
    <compoundname>test_server_templ.h</compoundname>
    <includes local="no">image_geometry/pinhole_camera_model.h</includes>
    <includes refid="image_8h" local="yes">rgbd/image.h</includes>
    <includes local="no">ros/console.h</includes>
    <includes local="no">ros/duration.h</includes>
    <includes local="no">ros/init.h</includes>
    <includes local="no">ros/master.h</includes>
    <includes local="no">ros/names.h</includes>
    <includes local="no">ros/node_handle.h</includes>
    <includes local="no">ros/rate.h</includes>
    <includes local="no">ros/time.h</includes>
    <includes local="no">sensor_msgs/CameraInfo.h</includes>
    <includes local="no">sensor_msgs/distortion_models.h</includes>
    <includedby refid="test__server_8cpp" local="yes">test_server.cpp</includedby>
    <includedby refid="test__server__rgbd_8cpp" local="yes">test_server_rgbd.cpp</includedby>
    <includedby refid="test__server__ros_8cpp" local="yes">test_server_ros.cpp</includedby>
    <includedby refid="test__server__shm_8cpp" local="yes">test_server_shm.cpp</includedby>
    <incdepgraph>
      <node id="11">
        <label>ros/init.h</label>
      </node>
      <node id="12">
        <label>ros/master.h</label>
      </node>
      <node id="10">
        <label>ros/duration.h</label>
      </node>
      <node id="8">
        <label>sensor_msgs/CameraInfo.h</label>
      </node>
      <node id="1">
        <label>test_server_templ.h</label>
        <link refid="test__server__templ_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ros/rate.h</label>
      </node>
      <node id="17">
        <label>sensor_msgs/distortion_models.h</label>
      </node>
      <node id="5">
        <label>memory</label>
        <link refid="cpp/header/memory" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="9">
        <label>ros/console.h</label>
      </node>
      <node id="2">
        <label>image_geometry/pinhole_camera_model.h</label>
      </node>
      <node id="16">
        <label>ros/time.h</label>
      </node>
      <node id="4">
        <label>rgbd/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>opencv2/core.hpp</label>
      </node>
      <node id="3">
        <label>rgbd/image.h</label>
        <link refid="image_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>ros/names.h</label>
      </node>
      <node id="7">
        <label>rgbd_msgs/RGBD.h</label>
      </node>
      <node id="14">
        <label>ros/node_handle.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>test_server_ros.cpp</label>
        <link refid="test__server__ros_8cpp"/>
      </node>
      <node id="1">
        <label>test_server_templ.h</label>
        <link refid="test__server__templ_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>test_server_rgbd.cpp</label>
        <link refid="test__server__rgbd_8cpp"/>
      </node>
      <node id="2">
        <label>test_server.cpp</label>
        <link refid="test__server_8cpp"/>
      </node>
      <node id="5">
        <label>test_server_shm.cpp</label>
        <link refid="test__server__shm_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__server__templ_8h_1a7cae1bc99f453a54b621a159f08e2d4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int main_templ</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main_templ</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Template function to test the communication provide by a server. It generates artificial images and sends these by the provide server. The server should have a <programlisting><codeline><highlight class="normal">bool<sp/>initialize(std::string<sp/>servername)</highlight></codeline>
</programlisting> and a <programlisting><codeline><highlight class="normal">void<sp/>send(const<sp/>rgbd::Image&amp;<sp/>image)</highlight></codeline>
</programlisting> function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/test_server_templ.h" line="34" column="5" bodyfile="test/test_server_templ.h" bodystart="34" bodyend="93"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>TEST_SERVER_TEMPL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_SERVER_TEMPL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;image_geometry/pinhole_camera_model.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="image_8h" kindref="compound">rgbd/image.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/console.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/duration.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/init.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/master.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/names.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/node_handle.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/rate.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sensor_msgs/CameraInfo.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sensor_msgs/distortion_models.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="34" refid="test__server__templ_8h_1a7cae1bc99f453a54b621a159f08e2d4d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__server__templ_8h_1a7cae1bc99f453a54b621a159f08e2d4d" kindref="member">main_templ</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::init(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;rgbd_transport_test_server&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::NodeHandle<sp/>nh_private(</highlight><highlight class="stringliteral">&quot;~&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rate<sp/>=<sp/>30;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>nh_private.getParam(</highlight><highlight class="stringliteral">&quot;rate&quot;</highlight><highlight class="normal">,<sp/>rate);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>server;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>server.initialize(ros::names::resolve(</highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Rate<sp/>r(rate);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/><ref refid="record__to__video_8cpp_1a666c70a25e5ec1223dee12c73c1ea2cc" kindref="member">rgb_image</ref>(480,<sp/>640,<sp/>CV_8UC3,<sp/>cv::Scalar(0,0,255));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>depth_image(480,<sp/>640,<sp/>CV_32FC1,<sp/>5.0);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>sensor_msgs::CameraInfo<sp/>cam_info;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>cam_info.K<sp/>=<sp/>{554.2559327880068,<sp/>0.0,<sp/>320.5,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,<sp/>554.2559327880068,<sp/>240.5,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,<sp/>0.0,<sp/>1.0};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>cam_info.P<sp/>=<sp/>{554.2559327880068,<sp/>0.0,<sp/>320.5,<sp/>0.0,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,<sp/>554.2559327880068,<sp/>240.5,<sp/>0.0,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,<sp/>0.0,<sp/>1.0,<sp/>0.0};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>cam_info.distortion_model<sp/>=<sp/>sensor_msgs::distortion_models::PLUMB_BOB;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>cam_info.width<sp/>=<sp/>640;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>cam_info.height<sp/>=<sp/>480;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>image_geometry::PinholeCameraModel<sp/>cam_model;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>cam_model.fromCameraInfo(cam_info);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1Image" kindref="compound">rgbd::Image</ref><sp/>image(<ref refid="record__to__video_8cpp_1a666c70a25e5ec1223dee12c73c1ea2cc" kindref="member">rgb_image</ref>,<sp/>depth_image,<sp/>cam_model,<sp/></highlight><highlight class="stringliteral">&quot;test_frame_id&quot;</highlight><highlight class="normal">,<sp/>ros::Time::now().toSec());</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::WallTime<sp/>last_master_check<sp/>=<sp/>ros::WallTime::now();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ros::ok())</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ros::WallTime::now()<sp/>&gt;=<sp/>last_master_check<sp/>+<sp/>ros::WallDuration(1))</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_master_check<sp/>=<sp/>ros::WallTime::now();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ros::master::check())</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_FATAL(</highlight><highlight class="stringliteral">&quot;Lost<sp/>connection<sp/>to<sp/>master&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::line(<ref refid="record__to__video_8cpp_1a666c70a25e5ec1223dee12c73c1ea2cc" kindref="member">rgb_image</ref>,<sp/>cv::Point(x,<sp/>0),<sp/>cv::Point(x,<sp/><ref refid="record__to__video_8cpp_1a666c70a25e5ec1223dee12c73c1ea2cc" kindref="member">rgb_image</ref>.rows<sp/>-<sp/>1),<sp/>cv::Scalar(0,0,255));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::line(depth_image,<sp/>cv::Point(x,<sp/>0),<sp/>cv::Point(x,<sp/>depth_image.rows<sp/>-<sp/>1),<sp/>5.0);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>(x<sp/>+<sp/>10)<sp/>%<sp/><ref refid="record__to__video_8cpp_1a666c70a25e5ec1223dee12c73c1ea2cc" kindref="member">rgb_image</ref>.cols;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::line(<ref refid="record__to__video_8cpp_1a666c70a25e5ec1223dee12c73c1ea2cc" kindref="member">rgb_image</ref>,<sp/>cv::Point(x,<sp/>0),<sp/>cv::Point(x,<sp/><ref refid="record__to__video_8cpp_1a666c70a25e5ec1223dee12c73c1ea2cc" kindref="member">rgb_image</ref>.rows<sp/>-<sp/>1),<sp/>cv::Scalar(255,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::line(depth_image,<sp/>cv::Point(x,<sp/>0),<sp/>cv::Point(x,<sp/>depth_image.rows<sp/>-<sp/>1),<sp/>1.0);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image.<ref refid="classrgbd_1_1Image_1add0a90ba9aca9403d5a9f311db9025af" kindref="member">setRGBImage</ref>(<ref refid="record__to__video_8cpp_1a666c70a25e5ec1223dee12c73c1ea2cc" kindref="member">rgb_image</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image.<ref refid="classrgbd_1_1Image_1a076df0655b8634b09693faecb5e87934" kindref="member">setDepthImage</ref>(depth_image);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image.<ref refid="classrgbd_1_1Image_1a22877f3a4f1bffa15f99ed5f82eb77d2" kindref="member">setTimestamp</ref>(ros::Time::now().toSec());</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.sleep();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>TEST_SERVER_TEMPL_H_</highlight></codeline>
    </programlisting>
    <location file="test/test_server_templ.h"/>
  </compounddef>
</doxygen>
