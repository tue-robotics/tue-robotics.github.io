<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="connection__gtest_8cpp" kind="file" language="C++">
    <compoundname>connection_gtest.cpp</compoundname>
    <includes local="no">boost/interprocess/shared_memory_object.hpp</includes>
    <includes local="no">gtest/gtest.h</includes>
    <includes refid="client_8h" local="no">rgbd/client.h</includes>
    <includes refid="image_8h" local="no">rgbd/image.h</includes>
    <includes local="no">ros/duration.h</includes>
    <includes local="no">ros/init.h</includes>
    <includes local="no">ros/names.h</includes>
    <includes local="no">ros/rate.h</includes>
    <includes local="no">ros/time.h</includes>
    <incdepgraph>
      <node id="27">
        <label>ros/init.h</label>
      </node>
      <node id="26">
        <label>ros/duration.h</label>
      </node>
      <node id="25">
        <label>sensor_msgs/CameraInfo.h</label>
      </node>
      <node id="15">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>rgbd/image_header.h</label>
        <link refid="image__header_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>ros/rate.h</label>
      </node>
      <node id="17">
        <label>boost/interprocess/sync/interprocess_condition.hpp</label>
      </node>
      <node id="6">
        <label>memory</label>
        <link refid="cpp/header/memory" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="24">
        <label>image_geometry/pinhole_camera_model.h</label>
      </node>
      <node id="18">
        <label>ros/time.h</label>
      </node>
      <node id="20">
        <label>mutex</label>
        <link refid="cpp/header/mutex" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="21">
        <label>thread</label>
        <link refid="cpp/header/thread" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="13">
        <label>boost/interprocess/mapped_region.hpp</label>
      </node>
      <node id="12">
        <label>rgbd/client_shm.h</label>
        <link refid="client__shm_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>rgbd/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>rgbd/client_rgbd.h</label>
        <link refid="client__rgbd_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>rgbd/client.h</label>
        <link refid="client_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>opencv2/core.hpp</label>
      </node>
      <node id="22">
        <label>rgbd/image.h</label>
        <link refid="image_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ros/callback_queue.h</label>
      </node>
      <node id="3">
        <label>gtest/gtest.h</label>
      </node>
      <node id="2">
        <label>boost/interprocess/shared_memory_object.hpp</label>
      </node>
      <node id="28">
        <label>ros/names.h</label>
      </node>
      <node id="11">
        <label>rgbd_msgs/RGBD.h</label>
      </node>
      <node id="19">
        <label>std_msgs/String.h</label>
      </node>
      <node id="9">
        <label>ros/subscriber.h</label>
      </node>
      <node id="16">
        <label>boost/interprocess/sync/interprocess_mutex.hpp</label>
      </node>
      <node id="8">
        <label>ros/node_handle.h</label>
      </node>
      <node id="1">
        <label>connection_gtest.cpp</label>
        <link refid="connection__gtest_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classConnection" prot="public">Connection</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="connection__gtest_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_gtest.cpp" line="76" column="5" bodyfile="test/connection_gtest.cpp" bodystart="76" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="connection__gtest_8cpp_1a53ee7d3a09ad53edb1c0a4ab5504d59d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(Connection, ConsistentConnection)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classConnection" kindref="compound">Connection</ref></type>
        </param>
        <param>
          <type>ConsistentConnection</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_gtest.cpp" line="42" column="1" bodyfile="test/connection_gtest.cpp" bodystart="42" bodyend="73"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;boost/interprocess/shared_memory_object.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="client_8h" kindref="compound">rgbd/client.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="image_8h" kindref="compound">rgbd/image.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/duration.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/init.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/names.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/rate.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ipc<sp/>=<sp/>boost::interprocess;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classConnection" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classConnection" kindref="compound">Connection</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>testing::Test</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="20" refid="classConnection_1abea4d5e3ab477bf0d2e9cade7a93dce0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classConnection_1abea4d5e3ab477bf0d2e9cade7a93dce0" kindref="member">SetUp</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="21"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classConnection_1ac8552b3d9e60a8d343b03d129cee4ada" kindref="member">client</ref>.<ref refid="classrgbd_1_1Client_1ae789cb4f272a0a98e7388d88d69fcb9d" kindref="member">initialize</ref>(ros::names::resolve(<ref refid="classConnection_1a7fb130f1267fa35e0699562407f1b683" kindref="member">test_server_name</ref>));</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ros::Time<sp/>end_init<sp/>=<sp/>ros::Time::now()<sp/>+<sp/>ros::Duration(2);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ros::Rate<sp/>r_init(10);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(ros::Time::now()<sp/>&lt;<sp/>end_init)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classConnection_1ac8552b3d9e60a8d343b03d129cee4ada" kindref="member">client</ref>.<ref refid="classrgbd_1_1Client_1a6206bfb153fc8facb436f5cb4a087116" kindref="member">nextImage</ref>())</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ros::Duration(0.5).sleep();<sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>there<sp/>will<sp/>be<sp/>a<sp/>new<sp/>image<sp/>when<sp/>going<sp/>to<sp/>the<sp/>actual<sp/>test<sp/>phase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_init.sleep();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classConnection_1a7fb130f1267fa35e0699562407f1b683" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/><ref refid="classConnection_1a7fb130f1267fa35e0699562407f1b683" kindref="member">test_server_name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;rgbd&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37" refid="classConnection_1a30f916a9e2f267d583587328dda85043" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/><ref refid="classConnection_1a30f916a9e2f267d583587328dda85043" kindref="member">test_server_name_shm</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;-rgbd&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classConnection_1ac8552b3d9e60a8d343b03d129cee4ada" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1Client" kindref="compound">rgbd::Client</ref><sp/><ref refid="classConnection_1ac8552b3d9e60a8d343b03d129cee4ada" kindref="member">client</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="connection__gtest_8cpp_1a53ee7d3a09ad53edb1c0a4ab5504d59d" refkind="member"><highlight class="normal"><ref refid="connection__gtest_8cpp_1a53ee7d3a09ad53edb1c0a4ab5504d59d" kindref="member">TEST_F</ref>(<ref refid="classConnection" kindref="compound">Connection</ref>,<sp/>ConsistentConnection)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1Image" kindref="compound">rgbd::Image</ref><sp/>image;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>last_time_stamp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Time<sp/>start<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Time<sp/>shm_kill_time<sp/>=<sp/>start<sp/>+<sp/>ros::Duration(5);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shm_killed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Time<sp/>end<sp/>=<sp/>start<sp/>+<sp/>ros::Duration(20);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Rate<sp/>r(1);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(ros::Time::now()<sp/>&lt;<sp/>end)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!shm_killed<sp/>&amp;&amp;<sp/>ros::Time::now()<sp/>&gt;=<sp/>shm_kill_time)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ipc::shared_memory_object::remove(test_server_name_shm.c_str());</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shm_killed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ros::Duration(1.5).sleep();<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>RGBD<sp/>client<sp/>to<sp/>take<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>rate,<sp/>otherwise<sp/>first<sp/>sleep<sp/>is<sp/>zero,<sp/>because<sp/>of<sp/>the<sp/>longer<sp/>sleep<sp/>above.</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Which<sp/>eliminates<sp/>any<sp/>time<sp/>between<sp/>the<sp/>two<sp/>consecutive<sp/>nextImage<sp/>calls.</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>second<sp/>call<sp/>will<sp/>fail<sp/>then,<sp/>because<sp/>the<sp/>elapsed<sp/>time<sp/>has<sp/>been<sp/>to<sp/>short<sp/>to<sp/>receive<sp/>any<sp/>new<sp/>image.</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.reset();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.nextImage(image))<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;i=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_GT(image.<ref refid="classrgbd_1_1Image_1af95fbf4484c856534f2f89130880b102" kindref="member">getTimestamp</ref>(),<sp/>last_time_stamp);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_time_stamp<sp/>=<sp/>image.<ref refid="classrgbd_1_1Image_1af95fbf4484c856534f2f89130880b102" kindref="member">getTimestamp</ref>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.sleep();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Run<sp/>all<sp/>the<sp/>tests<sp/>that<sp/>were<sp/>declared<sp/>with<sp/>TEST()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="connection__gtest_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="connection__gtest_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::init(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;connection_client&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>testing::InitGoogleTest(&amp;argc,<sp/>argv);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RUN_ALL_TESTS();</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="test/connection_gtest.cpp"/>
  </compounddef>
</doxygen>
