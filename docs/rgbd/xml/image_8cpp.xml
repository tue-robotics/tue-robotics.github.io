<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="image_8cpp" kind="file" language="C++">
    <compoundname>image.cpp</compoundname>
    <includes refid="image_8h" local="yes">rgbd/image.h</includes>
    <includes local="no">opencv2/core/check.hpp</includes>
    <includes local="no">sensor_msgs/CameraInfo.h</includes>
    <incdepgraph>
      <node id="8">
        <label>sensor_msgs/CameraInfo.h</label>
      </node>
      <node id="4">
        <label>memory</label>
        <link refid="cpp/header/memory" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="6">
        <label>image_geometry/pinhole_camera_model.h</label>
      </node>
      <node id="3">
        <label>rgbd/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>opencv2/core.hpp</label>
      </node>
      <node id="2">
        <label>rgbd/image.h</label>
        <link refid="image_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>image.cpp</label>
        <link refid="image_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>rgbd_msgs/RGBD.h</label>
      </node>
      <node id="9">
        <label>opencv2/core/check.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacergbd">rgbd</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="image_8h" kindref="compound">rgbd/image.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/core/check.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sensor_msgs/CameraInfo.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacergbd" kindref="compound">rgbd</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classrgbd_1_1Image_1a4d98b02994be508422a1634f71874d12" refkind="member"><highlight class="normal"><ref refid="classrgbd_1_1Image_1a4d98b02994be508422a1634f71874d12" kindref="member">Image::Image</ref>()<sp/>:<sp/>timestamp_(0)</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="classrgbd_1_1Image_1a84d482191c532334ce6267221fb5bd2d" refkind="member"><highlight class="normal"><ref refid="classrgbd_1_1Image_1a4d98b02994be508422a1634f71874d12" kindref="member">Image::Image</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat&amp;<sp/><ref refid="record__to__video_8cpp_1a666c70a25e5ec1223dee12c73c1ea2cc" kindref="member">rgb_image</ref>,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat&amp;<sp/>depth_image,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>image_geometry::PinholeCameraModel&amp;<sp/>cam_model,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>frame_id,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timestamp)<sp/>:</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>rgb_image_(<ref refid="record__to__video_8cpp_1a666c70a25e5ec1223dee12c73c1ea2cc" kindref="member">rgb_image</ref>),</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>depth_image_(depth_image),</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>frame_id_(frame_id),</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>timestamp_(timestamp)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1Image_1a836e03f6c1d22be10cecb1490ca23c36" kindref="member">setCameraModel</ref>(cam_model);</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classrgbd_1_1Image_1acff317e768d012dea9a7d19a270d4345" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrgbd_1_1Image_1acff317e768d012dea9a7d19a270d4345" kindref="member">Image::setCameraInfo</ref>(sensor_msgs::CameraInfo<sp/>cam_info)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>cam_info.header.frame_id.clear();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>cam_info.header.seq<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>cam_info.header.stamp.fromSec(0);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1Image_1aac49fa078392cc7c454a22eb4e3664fb" kindref="member">cam_model_</ref>.fromCameraInfo(cam_info);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classrgbd_1_1Image_1a836e03f6c1d22be10cecb1490ca23c36" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrgbd_1_1Image_1a836e03f6c1d22be10cecb1490ca23c36" kindref="member">Image::setCameraModel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>image_geometry::PinholeCameraModel&amp;<sp/>cam_model)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>sensor_msgs::CameraInfo<sp/>cam_info<sp/>=<sp/>cam_model.cameraInfo();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>cam_info.header.frame_id.clear();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>cam_info.header.seq<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>cam_info.header.stamp.fromSec(0);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1Image_1aac49fa078392cc7c454a22eb4e3664fb" kindref="member">cam_model_</ref>.fromCameraInfo(cam_info);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classrgbd_1_1Image_1aeb5301960497e0148d5a2c225e799021" refkind="member"><highlight class="normal"><ref refid="classrgbd_1_1Image" kindref="compound">Image</ref><sp/><ref refid="classrgbd_1_1Image_1aeb5301960497e0148d5a2c225e799021" kindref="member">Image::clone</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="57"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1Image" kindref="compound">rgbd::Image</ref><sp/>image;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>image.<ref refid="classrgbd_1_1Image_1abe97b240cf7fec26b3dad36b0a8a8164" kindref="member">rgb_image_</ref><sp/>=<sp/><ref refid="classrgbd_1_1Image_1abe97b240cf7fec26b3dad36b0a8a8164" kindref="member">rgb_image_</ref>.clone();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>image.<ref refid="classrgbd_1_1Image_1a1dc04b2c727166a3abbcf5d8ee375727" kindref="member">depth_image_</ref><sp/>=<sp/><ref refid="classrgbd_1_1Image_1a1dc04b2c727166a3abbcf5d8ee375727" kindref="member">depth_image_</ref>.clone();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>image.<ref refid="classrgbd_1_1Image_1ab79844ffdf4d7d37f1f7157b0753ba92" kindref="member">frame_id_</ref><sp/>=<sp/><ref refid="classrgbd_1_1Image_1ab79844ffdf4d7d37f1f7157b0753ba92" kindref="member">frame_id_</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>image.<ref refid="classrgbd_1_1Image_1a185cdc042e688e14b699c5835915bac0" kindref="member">timestamp_</ref><sp/>=<sp/><ref refid="classrgbd_1_1Image_1a185cdc042e688e14b699c5835915bac0" kindref="member">timestamp_</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classrgbd_1_1Image_1aac49fa078392cc7c454a22eb4e3664fb" kindref="member">cam_model_</ref>.initialized())</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image.<ref refid="classrgbd_1_1Image_1a836e03f6c1d22be10cecb1490ca23c36" kindref="member">setCameraModel</ref>(<ref refid="classrgbd_1_1Image_1aac49fa078392cc7c454a22eb4e3664fb" kindref="member">cam_model_</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>image;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classrgbd_1_1Image_1a4ff8967fa5dd8db6b06f260b314f481e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classrgbd_1_1Image_1a4ff8967fa5dd8db6b06f260b314f481e" kindref="member">Image::operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrgbd_1_1Image" kindref="compound">rgbd::Image</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="72"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classrgbd_1_1Image_1af95fbf4484c856534f2f89130880b102" kindref="member">getTimestamp</ref>()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>std::abs&lt;double&gt;(<ref refid="classrgbd_1_1Image_1af95fbf4484c856534f2f89130880b102" kindref="member">getTimestamp</ref>()-other.<ref refid="classrgbd_1_1Image_1af95fbf4484c856534f2f89130880b102" kindref="member">getTimestamp</ref>())<sp/>&gt;<sp/>1e-9)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classrgbd_1_1Image_1a12c65a45b66bc800630ccf016dd2341f" kindref="member">getFrameId</ref>().empty()<sp/>&amp;&amp;<sp/><ref refid="classrgbd_1_1Image_1a12c65a45b66bc800630ccf016dd2341f" kindref="member">getFrameId</ref>()<sp/>!=<sp/>other.<ref refid="classrgbd_1_1Image_1a12c65a45b66bc800630ccf016dd2341f" kindref="member">getFrameId</ref>())</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classrgbd_1_1Image_1afdf1d1f95772540886ab6b908381d23a" kindref="member">getCameraModel</ref>().cameraInfo()<sp/>!=<sp/>other.<ref refid="classrgbd_1_1Image_1afdf1d1f95772540886ab6b908381d23a" kindref="member">getCameraModel</ref>().cameraInfo())</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat&amp;<sp/>this_depth<sp/>=<sp/><ref refid="classrgbd_1_1Image_1a719f0390cfcc1c2b14023ee65ea24cb7" kindref="member">getDepthImage</ref>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat&amp;<sp/>other_depth<sp/>=<sp/>other.<ref refid="classrgbd_1_1Image_1a719f0390cfcc1c2b14023ee65ea24cb7" kindref="member">getDepthImage</ref>();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this_depth.data<sp/>!=<sp/>other_depth.data)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Mat<sp/>dst;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::bitwise_xor(this_depth,<sp/>other_depth,<sp/>dst);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cv::countNonZero(dst)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat&amp;<sp/>this_rgb<sp/>=<sp/><ref refid="classrgbd_1_1Image_1a6114b559a730737c88c239827d4b9f21" kindref="member">getRGBImage</ref>();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat&amp;<sp/>other_rgb<sp/>=<sp/>other.<ref refid="classrgbd_1_1Image_1a6114b559a730737c88c239827d4b9f21" kindref="member">getRGBImage</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this_rgb.data<sp/>!=<sp/>other_rgb.data)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Mat<sp/>dst,<sp/>dst2;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::bitwise_xor(this_rgb,<sp/>other_rgb,<sp/>dst);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::transform(dst,<sp/>dst2,<sp/>cv::Matx&lt;int,<sp/>1,<sp/>3&gt;(1,1,1));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cv::countNonZero(dst2)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="namespacergbd_1abff59c3080d55e12f6cde50c3b58f814" refkind="member"><highlight class="normal"><ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref>&amp;<sp/><ref refid="namespacergbd_1abff59c3080d55e12f6cde50c3b58f814" kindref="member">operator&lt;&lt; </ref>(<ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref>&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrgbd_1_1Image" kindref="compound">rgbd::Image</ref>&amp;<sp/>image)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/io/streamsize" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::streamsize</ref><sp/>ss<sp/>=<sp/>out.<ref refid="cpp/io/ios_base/precision" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">precision</ref>();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Depth:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>image.<ref refid="classrgbd_1_1Image_1a1dc04b2c727166a3abbcf5d8ee375727" kindref="member">depth_image_</ref>.size<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;@(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cv::typeToString(image.<ref refid="classrgbd_1_1Image_1a1dc04b2c727166a3abbcf5d8ee375727" kindref="member">depth_image_</ref>.type())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;color:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>image.<ref refid="classrgbd_1_1Image_1abe97b240cf7fec26b3dad36b0a8a8164" kindref="member">rgb_image_</ref>.size<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;@(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cv::typeToString(image.<ref refid="classrgbd_1_1Image_1abe97b240cf7fec26b3dad36b0a8a8164" kindref="member">rgb_image_</ref>.type())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;frame_id:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>image.<ref refid="classrgbd_1_1Image_1ab79844ffdf4d7d37f1f7157b0753ba92" kindref="member">frame_id_</ref><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;timestamp:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/setprecision" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::setprecision</ref>(32)<sp/>&lt;&lt;<sp/>image.<ref refid="classrgbd_1_1Image_1a185cdc042e688e14b699c5835915bac0" kindref="member">timestamp_</ref><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/setprecision" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::setprecision</ref>(ss)<sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;camera<sp/>model:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref><sp/>&lt;&lt;<sp/>image.<ref refid="classrgbd_1_1Image_1aac49fa078392cc7c454a22eb4e3664fb" kindref="member">cam_model_</ref>.cameraInfo();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>rgbd</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/image.cpp"/>
  </compounddef>
</doxygen>
