<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="connection__ros__gtest_8cpp" kind="file" language="C++">
    <compoundname>connection_ros_gtest.cpp</compoundname>
    <includes refid="test__utils_8h" local="yes">test_utils.h</includes>
    <includes local="no">gtest/gtest.h</includes>
    <includes refid="image_8h" local="no">rgbd/image.h</includes>
    <includes refid="server__ros_8h" local="no">rgbd/server_ros.h</includes>
    <includes refid="client__ros_8h" local="no">rgbd/client_ros.h</includes>
    <includes local="no">ros/init.h</includes>
    <includes local="no">ros/console.h</includes>
    <incdepgraph>
      <node id="25">
        <label>ros/init.h</label>
      </node>
      <node id="14">
        <label>rgbd/server_ros.h</label>
        <link refid="server__ros_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>message_filters/subscriber.h</label>
      </node>
      <node id="16">
        <label>ros/publisher.h</label>
      </node>
      <node id="1">
        <label>connection_ros_gtest.cpp</label>
        <link refid="connection__ros__gtest_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>sensor_msgs/CameraInfo.h</label>
      </node>
      <node id="11">
        <label>random</label>
        <link refid="cpp/header/random" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="10">
        <label>sensor_msgs/distortion_models.h</label>
      </node>
      <node id="6">
        <label>memory</label>
        <link refid="cpp/header/memory" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="26">
        <label>ros/console.h</label>
      </node>
      <node id="23">
        <label>sensor_msgs/Image.h</label>
      </node>
      <node id="2">
        <label>test_utils.h</label>
        <link refid="test__utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>image_geometry/pinhole_camera_model.h</label>
      </node>
      <node id="17">
        <label>rgbd/client_ros.h</label>
        <link refid="client__ros_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>rgbd/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>message_filters/sync_policies/approximate_time.h</label>
      </node>
      <node id="20">
        <label>message_filters/synchronizer.h</label>
      </node>
      <node id="3">
        <label>opencv2/core.hpp</label>
      </node>
      <node id="4">
        <label>rgbd/image.h</label>
        <link refid="image_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>ros/callback_queue.h</label>
      </node>
      <node id="13">
        <label>gtest/gtest.h</label>
      </node>
      <node id="8">
        <label>rgbd_msgs/RGBD.h</label>
      </node>
      <node id="19">
        <label>ros/callback_queue_interface.h</label>
      </node>
      <node id="12">
        <label>string</label>
        <link refid="cpp/header/string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="15">
        <label>ros/node_handle.h</label>
      </node>
      <node id="24">
        <label>rgbd/client_ros_base.h</label>
        <link refid="client__ros__base_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classROS" prot="public">ROS</innerclass>
    <innerclass refid="classROS__NS" prot="public">ROS_NS</innerclass>
    <innerclass refid="classROSInitialized" prot="public">ROSInitialized</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="connection__ros__gtest_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_ros_gtest.cpp" line="209" column="5" bodyfile="test/connection_ros_gtest.cpp" bodystart="209" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="connection__ros__gtest_8cpp_1a4481bd62817576903da1565539d9281a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(ROS, Initialize)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classROS" kindref="compound">ROS</ref></type>
        </param>
        <param>
          <type>Initialize</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_ros_gtest.cpp" line="76" column="1" bodyfile="test/connection_ros_gtest.cpp" bodystart="76" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="connection__ros__gtest_8cpp_1a198f3e912dbc7e017e34d469821aaf1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(ROS, NextImageBeforeSend)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classROS" kindref="compound">ROS</ref></type>
        </param>
        <param>
          <type>NextImageBeforeSend</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_ros_gtest.cpp" line="85" column="1" bodyfile="test/connection_ros_gtest.cpp" bodystart="85" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="connection__ros__gtest_8cpp_1a0b92a51a3d1964473208faf19b0ea827" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(ROS, NextImagePtrBeforeSend)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classROS" kindref="compound">ROS</ref></type>
        </param>
        <param>
          <type>NextImagePtrBeforeSend</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_ros_gtest.cpp" line="95" column="1" bodyfile="test/connection_ros_gtest.cpp" bodystart="95" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="connection__ros__gtest_8cpp_1a3d71e6ef2706459d3ece01b64f275fe7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(ROS_NS, NextImage)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classROS__NS" kindref="compound">ROS_NS</ref></type>
        </param>
        <param>
          <type>NextImage</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_ros_gtest.cpp" line="197" column="1" bodyfile="test/connection_ros_gtest.cpp" bodystart="197" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="connection__ros__gtest_8cpp_1afcfe5fabad5733cd06ee2dde5033836f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(ROSInitialized, NextImagePtr)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classROSInitialized" kindref="compound">ROSInitialized</ref></type>
        </param>
        <param>
          <type>NextImagePtr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_ros_gtest.cpp" line="105" column="1" bodyfile="test/connection_ros_gtest.cpp" bodystart="105" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="connection__ros__gtest_8cpp_1a542d4c0706f5fec9d0cc5a02b2511ea0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(ROSInitialized, NextImagePtrTwice)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classROSInitialized" kindref="compound">ROSInitialized</ref></type>
        </param>
        <param>
          <type>NextImagePtrTwice</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_ros_gtest.cpp" line="150" column="1" bodyfile="test/connection_ros_gtest.cpp" bodystart="150" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="connection__ros__gtest_8cpp_1a4cc2b2993761ea3d8c5eff3e332f01f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(ROSInitialized, NextImagePtrTwiceWithoutSend)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classROSInitialized" kindref="compound">ROSInitialized</ref></type>
        </param>
        <param>
          <type>NextImagePtrTwiceWithoutSend</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_ros_gtest.cpp" line="177" column="1" bodyfile="test/connection_ros_gtest.cpp" bodystart="177" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="connection__ros__gtest_8cpp_1ac0ab0bf8633f764b4075d19558bef8b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(ROSInitialized, NextImageTwice)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classROSInitialized" kindref="compound">ROSInitialized</ref></type>
        </param>
        <param>
          <type>NextImageTwice</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_ros_gtest.cpp" line="120" column="1" bodyfile="test/connection_ros_gtest.cpp" bodystart="120" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="connection__ros__gtest_8cpp_1ad3df0159876ebac1cedfd1ef164f9b72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(ROSInitialized, NextImageTwiceWithoutSend)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classROSInitialized" kindref="compound">ROSInitialized</ref></type>
        </param>
        <param>
          <type>NextImageTwiceWithoutSend</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_ros_gtest.cpp" line="137" column="1" bodyfile="test/connection_ros_gtest.cpp" bodystart="137" bodyend="148"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="test__utils_8h" kindref="compound">test_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="image_8h" kindref="compound">rgbd/image.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="server__ros_8h" kindref="compound">rgbd/server_ros.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="client__ros_8h" kindref="compound">rgbd/client_ros.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/init.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/console.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classROS" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classROS" kindref="compound">ROS</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>testing::Test</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16" refid="classROS_1a454467ceb15190450051be8f58d50a3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classROS_1a454467ceb15190450051be8f58d50a3c" kindref="member">ROS</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>_ns=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>:<sp/><ref refid="classROS_1a6ab73a4ee2c08ce73c1bf7583d1f7458" kindref="member">ns</ref>(_ns),<sp/><ref refid="classROS_1aee019c491bad59fb06a0af5b40b40570" kindref="member">server</ref>(<ref refid="classROS_1a1e8924f7c782b6a03ecac504f83ad931" kindref="member">nh</ref>)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classROS_1adcfc165db75b79496311b4eb60a49941" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classROS_1adcfc165db75b79496311b4eb60a49941" kindref="member">~ROS</ref>()</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classROS_1aed4c1e0c599418386030a5e0963d708b" kindref="member">client</ref>.<ref refid="classrgbd_1_1ClientROSBase_1af8a0e1be518ee1d7834c8c5695a381ac" kindref="member">deinitialize</ref>();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classROS_1a1e8924f7c782b6a03ecac504f83ad931" kindref="member">nh</ref>.shutdown();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classROS_1a5c6cbcbab2b6e13c2b2619d7e01141f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classROS_1a5c6cbcbab2b6e13c2b2619d7e01141f7" kindref="member">SetUp</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="27"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classROS_1ad47caceba89c8ee7b81f12e1a58ec32c" kindref="member">image</ref><sp/>=<sp/><ref refid="namespacergbd_1a4d11f15ef65f8d50a191b00022843d6f" kindref="member">rgbd::generateRandomImage</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classROS_1aee019c491bad59fb06a0af5b40b40570" kindref="member">server</ref>.<ref refid="classrgbd_1_1ServerROS_1a0a03c0aca7811431b0c06c6476bf8d54" kindref="member">initialize</ref>(<ref refid="classROS_1a6ab73a4ee2c08ce73c1bf7583d1f7458" kindref="member">ns</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classROS_1a6ab73a4ee2c08ce73c1bf7583d1f7458" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/><ref refid="classROS_1a6ab73a4ee2c08ce73c1bf7583d1f7458" kindref="member">ns</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classROS_1a1e8924f7c782b6a03ecac504f83ad931" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::NodeHandle<sp/><ref refid="classROS_1a1e8924f7c782b6a03ecac504f83ad931" kindref="member">nh</ref>;</highlight></codeline>
<codeline lineno="35" refid="classROS_1ad47caceba89c8ee7b81f12e1a58ec32c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1Image" kindref="compound">rgbd::Image</ref><sp/><ref refid="classROS_1ad47caceba89c8ee7b81f12e1a58ec32c" kindref="member">image</ref>;</highlight></codeline>
<codeline lineno="36" refid="classROS_1aee019c491bad59fb06a0af5b40b40570" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1ServerROS" kindref="compound">rgbd::ServerROS</ref><sp/><ref refid="classROS_1aee019c491bad59fb06a0af5b40b40570" kindref="member">server</ref>;</highlight></codeline>
<codeline lineno="37" refid="classROS_1aed4c1e0c599418386030a5e0963d708b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1ClientROS" kindref="compound">rgbd::ClientROS</ref><sp/><ref refid="classROS_1aed4c1e0c599418386030a5e0963d708b" kindref="member">client</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classROSInitialized" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classROSInitialized" kindref="compound">ROSInitialized</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classROS" kindref="compound">ROS</ref></highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43" refid="classROSInitialized_1ac94d9b43f42e11eb750260c3e7724f83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classROSInitialized_1ac94d9b43f42e11eb750260c3e7724f83" kindref="member">ROSInitialized</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>_ns=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>:<sp/><ref refid="classROS" kindref="compound">ROS</ref>(_ns)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classROSInitialized_1a08b3026f307868a8e5f66d9075f048c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classROSInitialized_1a08b3026f307868a8e5f66d9075f048c8" kindref="member">SetUp</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="48"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classROS_1a5c6cbcbab2b6e13c2b2619d7e01141f7" kindref="member">ROS::SetUp</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classROS_1aed4c1e0c599418386030a5e0963d708b" kindref="member">client</ref>.<ref refid="classrgbd_1_1ClientROS_1a6de448a19779af70cd97384fbcb32d36" kindref="member">initialize</ref>(ros::names::append(<ref refid="classROS_1a6ab73a4ee2c08ce73c1bf7583d1f7458" kindref="member">ns</ref>,<sp/></highlight><highlight class="stringliteral">&quot;rgb/image&quot;</highlight><highlight class="normal">),<sp/>ros::names::append(<ref refid="classROS_1a6ab73a4ee2c08ce73c1bf7583d1f7458" kindref="member">ns</ref>,<sp/></highlight><highlight class="stringliteral">&quot;depth/image&quot;</highlight><highlight class="normal">),<sp/>ros::names::append(<ref refid="classROS_1a6ab73a4ee2c08ce73c1bf7583d1f7458" kindref="member">ns</ref>,<sp/></highlight><highlight class="stringliteral">&quot;rgb/camera_info&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ros::Time<sp/>end<sp/>=<sp/>ros::Time::now()<sp/>+<sp/>ros::Duration(5);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>received<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!received<sp/>||<sp/>ros::Time::now()<sp/>&lt;=<sp/>end)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classROS_1aee019c491bad59fb06a0af5b40b40570" kindref="member">server</ref>.<ref refid="classrgbd_1_1ServerROS_1ab3fdf20c4c1ec03f4a626882122f64d6" kindref="member">send</ref>(<ref refid="classROS_1ad47caceba89c8ee7b81f12e1a58ec32c" kindref="member">image</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ros::Duration(0.1).sleep();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>received<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classROS_1aed4c1e0c599418386030a5e0963d708b" kindref="member">client</ref>.<ref refid="classrgbd_1_1ClientROS_1abe76c73c5c8095527d215c8b9a31ebb7" kindref="member">nextImage</ref>());</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(received)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ros::Duration(2).sleep();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE(<ref refid="classROS_1aed4c1e0c599418386030a5e0963d708b" kindref="member">client</ref>.<ref refid="classrgbd_1_1ClientROS_1abe76c73c5c8095527d215c8b9a31ebb7" kindref="member">nextImage</ref>())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SetUp<sp/>failed,<sp/>client<sp/>should<sp/>not<sp/>have<sp/>gotten<sp/>a<sp/>new<sp/>image<sp/>after<sp/>getting<sp/>one<sp/>image<sp/>correctly&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(received)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SetUp<sp/>failed,<sp/>because<sp/>client<sp/>wasn&apos;t<sp/>able<sp/>to<sp/>get<sp/>one<sp/>image<sp/>correctly.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal">};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classROS__NS" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classROS__NS" kindref="compound">ROS_NS</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classROSInitialized" kindref="compound">ROSInitialized</ref></highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71" refid="classROS__NS_1a7648da2f3e1520d67ed863ea8cf3a987" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classROS__NS_1a7648da2f3e1520d67ed863ea8cf3a987" kindref="member">ROS_NS</ref>()<sp/>:<sp/><ref refid="classROSInitialized" kindref="compound">ROSInitialized</ref>(</highlight><highlight class="stringliteral">&quot;test_ns&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal">};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="connection__ros__gtest_8cpp_1a4481bd62817576903da1565539d9281a" refkind="member"><highlight class="normal"><ref refid="connection__ros__gtest_8cpp_1a4481bd62817576903da1565539d9281a" kindref="member">TEST_F</ref>(<ref refid="classROS" kindref="compound">ROS</ref>,<sp/>Initialize)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(client.initialized());</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialize(</highlight><highlight class="stringliteral">&quot;rgb/image&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;depth/image&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;rgb/camera_info&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialized());</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="connection__ros__gtest_8cpp_1a198f3e912dbc7e017e34d469821aaf1f" refkind="member"><highlight class="normal"><ref refid="connection__ros__gtest_8cpp_1a4481bd62817576903da1565539d9281a" kindref="member">TEST_F</ref>(<ref refid="classROS" kindref="compound">ROS</ref>,<sp/>NextImageBeforeSend)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialize(</highlight><highlight class="stringliteral">&quot;rgb/image&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;depth/image&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;rgb/camera_info&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialized());</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1Image" kindref="compound">rgbd::Image</ref><sp/>image2;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(client.nextImage(image2));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="connection__ros__gtest_8cpp_1a0b92a51a3d1964473208faf19b0ea827" refkind="member"><highlight class="normal"><ref refid="connection__ros__gtest_8cpp_1a4481bd62817576903da1565539d9281a" kindref="member">TEST_F</ref>(<ref refid="classROS" kindref="compound">ROS</ref>,<sp/>NextImagePtrBeforeSend)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialize(</highlight><highlight class="stringliteral">&quot;rgb/image&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;depth/image&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;rgb/camera_info&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialized());</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">rgbd::ImagePtr</ref><sp/>image2<sp/>=<sp/>client.nextImage();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(image2);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="connection__ros__gtest_8cpp_1afcfe5fabad5733cd06ee2dde5033836f" refkind="member"><highlight class="normal"><ref refid="connection__ros__gtest_8cpp_1a4481bd62817576903da1565539d9281a" kindref="member">TEST_F</ref>(<ref refid="classROSInitialized" kindref="compound">ROSInitialized</ref>,<sp/>NextImagePtr)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">rgbd::ImagePtr</ref><sp/>image2;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Duration(0.01).sleep();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>image2<sp/>=<sp/>client.nextImage();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(image2);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(image2)<sp/></highlight><highlight class="comment">//<sp/>This<sp/>prevents<sp/>a<sp/>crash<sp/>of<sp/>the<sp/>node.<sp/>Test<sp/>will<sp/>still<sp/>fail<sp/>because<sp/>of<sp/>previous<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(image,<sp/>*image2);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="connection__ros__gtest_8cpp_1ac0ab0bf8633f764b4075d19558bef8b8" refkind="member"><highlight class="normal"><ref refid="connection__ros__gtest_8cpp_1a4481bd62817576903da1565539d9281a" kindref="member">TEST_F</ref>(<ref refid="classROSInitialized" kindref="compound">ROSInitialized</ref>,<sp/>NextImageTwice)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1Image" kindref="compound">rgbd::Image</ref><sp/>image2;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Duration(0.01).sleep();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.nextImage(image2));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(image,<sp/>image2);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>image.setTimestamp(image.getTimestamp()+10.);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Duration(0.01).sleep();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.nextImage(image2));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(image,<sp/>image2);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="connection__ros__gtest_8cpp_1ad3df0159876ebac1cedfd1ef164f9b72" refkind="member"><highlight class="normal"><ref refid="connection__ros__gtest_8cpp_1a4481bd62817576903da1565539d9281a" kindref="member">TEST_F</ref>(<ref refid="classROSInitialized" kindref="compound">ROSInitialized</ref>,<sp/>NextImageTwiceWithoutSend)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1Image" kindref="compound">rgbd::Image</ref><sp/>image2;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Duration(0.01).sleep();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.nextImage(image2));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(image,<sp/>image2);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(client.nextImage(image2));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="connection__ros__gtest_8cpp_1a542d4c0706f5fec9d0cc5a02b2511ea0" refkind="member"><highlight class="normal"><ref refid="connection__ros__gtest_8cpp_1a4481bd62817576903da1565539d9281a" kindref="member">TEST_F</ref>(<ref refid="classROSInitialized" kindref="compound">ROSInitialized</ref>,<sp/>NextImagePtrTwice)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">rgbd::ImagePtr</ref><sp/>image2;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Duration(0.01).sleep();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>image2<sp/>=<sp/>client.nextImage();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(image2);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(image2)<sp/></highlight><highlight class="comment">//<sp/>This<sp/>prevents<sp/>a<sp/>crash<sp/>of<sp/>the<sp/>node.<sp/>Test<sp/>will<sp/>still<sp/>fail<sp/>because<sp/>of<sp/>previous<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(image,<sp/>*image2);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>image.setTimestamp(image.getTimestamp()+10.);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>image2.<ref refid="cpp/memory/shared_ptr/reset" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">reset</ref>();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Duration(0.01).sleep();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>image2<sp/>=<sp/>client.nextImage();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(image2);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(image2)<sp/></highlight><highlight class="comment">//<sp/>This<sp/>prevents<sp/>a<sp/>crash<sp/>of<sp/>the<sp/>node.<sp/>Test<sp/>will<sp/>still<sp/>fail<sp/>because<sp/>of<sp/>previous<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(image,<sp/>*image2);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="connection__ros__gtest_8cpp_1a4cc2b2993761ea3d8c5eff3e332f01f3" refkind="member"><highlight class="normal"><ref refid="connection__ros__gtest_8cpp_1a4481bd62817576903da1565539d9281a" kindref="member">TEST_F</ref>(<ref refid="classROSInitialized" kindref="compound">ROSInitialized</ref>,<sp/>NextImagePtrTwiceWithoutSend)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">rgbd::ImagePtr</ref><sp/>image2;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Duration(0.01).sleep();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>image2<sp/>=<sp/>client.nextImage();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(image2);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(image2)<sp/></highlight><highlight class="comment">//<sp/>This<sp/>prevents<sp/>a<sp/>crash<sp/>of<sp/>the<sp/>node.<sp/>Test<sp/>will<sp/>still<sp/>fail<sp/>because<sp/>of<sp/>previous<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(image,<sp/>*image2);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>image2.<ref refid="cpp/memory/shared_ptr/reset" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">reset</ref>();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>image2<sp/>=<sp/>client.nextImage();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(image2);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="connection__ros__gtest_8cpp_1a3d71e6ef2706459d3ece01b64f275fe7" refkind="member"><highlight class="normal"><ref refid="connection__ros__gtest_8cpp_1a4481bd62817576903da1565539d9281a" kindref="member">TEST_F</ref>(<ref refid="classROS__NS" kindref="compound">ROS_NS</ref>,<sp/>NextImage)</highlight></codeline>
<codeline lineno="198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1Image" kindref="compound">rgbd::Image</ref><sp/>image2;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Duration(0.01).sleep();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.nextImage(image2));</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(image,<sp/>image2);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Run<sp/>all<sp/>the<sp/>tests<sp/>that<sp/>were<sp/>declared<sp/>with<sp/>TEST()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="connection__ros__gtest_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="connection__ros__gtest_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::init(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;ros_connection&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>testing::InitGoogleTest(&amp;argc,<sp/>argv);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RUN_ALL_TESTS();</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="test/connection_ros_gtest.cpp"/>
  </compounddef>
</doxygen>
