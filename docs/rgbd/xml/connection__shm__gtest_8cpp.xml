<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="connection__shm__gtest_8cpp" kind="file" language="C++">
    <compoundname>connection_shm_gtest.cpp</compoundname>
    <includes refid="test__utils_8h" local="yes">test_utils.h</includes>
    <includes local="no">gtest/gtest.h</includes>
    <includes refid="image_8h" local="no">rgbd/image.h</includes>
    <includes refid="server__shm_8h" local="no">rgbd/server_shm.h</includes>
    <includes refid="client__shm_8h" local="no">rgbd/client_shm.h</includes>
    <includes local="no">ros/duration.h</includes>
    <includes local="no">ros/init.h</includes>
    <incdepgraph>
      <node id="25">
        <label>ros/init.h</label>
      </node>
      <node id="14">
        <label>rgbd/server_shm.h</label>
        <link refid="server__shm_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>ros/duration.h</label>
      </node>
      <node id="9">
        <label>sensor_msgs/CameraInfo.h</label>
      </node>
      <node id="19">
        <label>stdint.h</label>
      </node>
      <node id="18">
        <label>rgbd/image_header.h</label>
        <link refid="image__header_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>random</label>
        <link refid="cpp/header/random" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="10">
        <label>sensor_msgs/distortion_models.h</label>
      </node>
      <node id="21">
        <label>boost/interprocess/sync/interprocess_condition.hpp</label>
      </node>
      <node id="6">
        <label>memory</label>
        <link refid="cpp/header/memory" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="2">
        <label>test_utils.h</label>
        <link refid="test__utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>image_geometry/pinhole_camera_model.h</label>
      </node>
      <node id="22">
        <label>thread</label>
        <link refid="cpp/header/thread" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="16">
        <label>boost/interprocess/mapped_region.hpp</label>
      </node>
      <node id="23">
        <label>rgbd/client_shm.h</label>
        <link refid="client__shm_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>rgbd/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>opencv2/core.hpp</label>
      </node>
      <node id="4">
        <label>rgbd/image.h</label>
        <link refid="image_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>gtest/gtest.h</label>
      </node>
      <node id="15">
        <label>boost/interprocess/shared_memory_object.hpp</label>
      </node>
      <node id="8">
        <label>rgbd_msgs/RGBD.h</label>
      </node>
      <node id="1">
        <label>connection_shm_gtest.cpp</label>
        <link refid="connection__shm__gtest_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>string</label>
        <link refid="cpp/header/string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="20">
        <label>boost/interprocess/sync/interprocess_mutex.hpp</label>
      </node>
      <node id="17">
        <label>ros/node_handle.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="classSHM" prot="public">SHM</innerclass>
    <innerclass refid="classSHMInitialized" prot="public">SHMInitialized</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="connection__shm__gtest_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_shm_gtest.cpp" line="178" column="5" bodyfile="test/connection_shm_gtest.cpp" bodystart="178" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="connection__shm__gtest_8cpp_1a54b887900f4f4184654c4832bc3add8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(SHM, DeInitialize)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classSHM" kindref="compound">SHM</ref></type>
        </param>
        <param>
          <type>DeInitialize</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_shm_gtest.cpp" line="66" column="1" bodyfile="test/connection_shm_gtest.cpp" bodystart="66" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="connection__shm__gtest_8cpp_1a43a6e93e45098a74e44d75bf823770b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(SHM, InitializeAfterSend)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classSHM" kindref="compound">SHM</ref></type>
        </param>
        <param>
          <type>InitializeAfterSend</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_shm_gtest.cpp" line="55" column="1" bodyfile="test/connection_shm_gtest.cpp" bodystart="55" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="connection__shm__gtest_8cpp_1abb9d4eb7c92d6832dfa60abffe5444d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(SHM, InitializeBeforeSend)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classSHM" kindref="compound">SHM</ref></type>
        </param>
        <param>
          <type>InitializeBeforeSend</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_shm_gtest.cpp" line="46" column="1" bodyfile="test/connection_shm_gtest.cpp" bodystart="46" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="connection__shm__gtest_8cpp_1a02dc97958364e102581073f39e2bccba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(SHMInitialized, NextImage)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classSHMInitialized" kindref="compound">SHMInitialized</ref></type>
        </param>
        <param>
          <type>NextImage</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_shm_gtest.cpp" line="79" column="1" bodyfile="test/connection_shm_gtest.cpp" bodystart="79" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="connection__shm__gtest_8cpp_1a18da79be774b294abcbaed3f82664759" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(SHMInitialized, NextImagePtr)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classSHMInitialized" kindref="compound">SHMInitialized</ref></type>
        </param>
        <param>
          <type>NextImagePtr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_shm_gtest.cpp" line="90" column="1" bodyfile="test/connection_shm_gtest.cpp" bodystart="90" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="connection__shm__gtest_8cpp_1a3bebc839ed789e34be51f045d238f140" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(SHMInitialized, NextImagePtrTwice)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classSHMInitialized" kindref="compound">SHMInitialized</ref></type>
        </param>
        <param>
          <type>NextImagePtrTwice</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_shm_gtest.cpp" line="134" column="1" bodyfile="test/connection_shm_gtest.cpp" bodystart="134" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="connection__shm__gtest_8cpp_1a85d76f9e4553210210d7c48f950c9b19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(SHMInitialized, NextImagePtrTwiceWithoutSend)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classSHMInitialized" kindref="compound">SHMInitialized</ref></type>
        </param>
        <param>
          <type>NextImagePtrTwiceWithoutSend</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_shm_gtest.cpp" line="159" column="1" bodyfile="test/connection_shm_gtest.cpp" bodystart="159" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="connection__shm__gtest_8cpp_1a68c28e238d4c53ee9922af0b02987ca4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(SHMInitialized, NextImageTwice)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classSHMInitialized" kindref="compound">SHMInitialized</ref></type>
        </param>
        <param>
          <type>NextImageTwice</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_shm_gtest.cpp" line="104" column="1" bodyfile="test/connection_shm_gtest.cpp" bodystart="104" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="connection__shm__gtest_8cpp_1a0d851d508670ac675646aca37adb1f2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(SHMInitialized, NextImageTwiceWithoutSend)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classSHMInitialized" kindref="compound">SHMInitialized</ref></type>
        </param>
        <param>
          <type>NextImageTwiceWithoutSend</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_shm_gtest.cpp" line="121" column="1" bodyfile="test/connection_shm_gtest.cpp" bodystart="121" bodyend="132"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="test__utils_8h" kindref="compound">test_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="image_8h" kindref="compound">rgbd/image.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="server__shm_8h" kindref="compound">rgbd/server_shm.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="client__shm_8h" kindref="compound">rgbd/client_shm.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/duration.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/init.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classSHM" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classSHM" kindref="compound">SHM</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>testing::Test</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16" refid="classSHM_1a3c2b6026a84c68c444ce0a41b82d14ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSHM_1a3c2b6026a84c68c444ce0a41b82d14ed" kindref="member">SetUp</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="17"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSHM_1ae1d5499cb8cc37ec88864734418254fe" kindref="member">image</ref><sp/>=<sp/><ref refid="namespacergbd_1a4d11f15ef65f8d50a191b00022843d6f" kindref="member">rgbd::generateRandomImage</ref>();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSHM_1a1462575402d6fbc77bdf81bbc91085df" kindref="member">server</ref>.<ref refid="classrgbd_1_1ServerSHM_1a59a92d9e5436630d1c6c8b9ec522dd27" kindref="member">initialize</ref>(<ref refid="classSHM_1a2549a5203dd478ae5caf1fc9a74bffab" kindref="member">test_server_name</ref>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classSHM_1a2549a5203dd478ae5caf1fc9a74bffab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/><ref refid="classSHM_1a2549a5203dd478ae5caf1fc9a74bffab" kindref="member">test_server_name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/test_ns/rgbd&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classSHM_1ae1d5499cb8cc37ec88864734418254fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1Image" kindref="compound">rgbd::Image</ref><sp/><ref refid="classSHM_1ae1d5499cb8cc37ec88864734418254fe" kindref="member">image</ref>;</highlight></codeline>
<codeline lineno="25" refid="classSHM_1a1462575402d6fbc77bdf81bbc91085df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1ServerSHM" kindref="compound">rgbd::ServerSHM</ref><sp/><ref refid="classSHM_1a1462575402d6fbc77bdf81bbc91085df" kindref="member">server</ref>;</highlight></codeline>
<codeline lineno="26" refid="classSHM_1aff85ec6c8e66e2eb6854ddfd680a1f0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1ClientSHM" kindref="compound">rgbd::ClientSHM</ref><sp/><ref refid="classSHM_1aff85ec6c8e66e2eb6854ddfd680a1f0e" kindref="member">client</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classSHMInitialized" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classSHMInitialized" kindref="compound">SHMInitialized</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classSHM" kindref="compound">SHM</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32" refid="classSHMInitialized_1a5643daff060e35786432ea34a7362cde" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSHMInitialized_1a5643daff060e35786432ea34a7362cde" kindref="member">SetUp</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="33"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSHM_1a3c2b6026a84c68c444ce0a41b82d14ed" kindref="member">SHM::SetUp</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSHM_1a1462575402d6fbc77bdf81bbc91085df" kindref="member">server</ref>.<ref refid="classrgbd_1_1ServerSHM_1a3b1aff894c8e575915e9096218c1108c" kindref="member">send</ref>(<ref refid="classSHM_1ae1d5499cb8cc37ec88864734418254fe" kindref="member">image</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ros::Duration(0.01).sleep();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="classSHM_1aff85ec6c8e66e2eb6854ddfd680a1f0e" kindref="member">client</ref>.<ref refid="classrgbd_1_1ClientSHM_1ac2ea7eb18524a732ab1d80e28f98ab57" kindref="member">initialize</ref>(<ref refid="classSHM_1a2549a5203dd478ae5caf1fc9a74bffab" kindref="member">test_server_name</ref>));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="classSHM_1aff85ec6c8e66e2eb6854ddfd680a1f0e" kindref="member">client</ref>.<ref refid="classrgbd_1_1ClientSHM_1a7f9868c300527f4ef2abd69a0ca0e85d" kindref="member">initialized</ref>());</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classSHM_1aff85ec6c8e66e2eb6854ddfd680a1f0e" kindref="member">client</ref>.<ref refid="classrgbd_1_1ClientSHM_1ae8422d033fa0e5a15f54a0e4efc276fd" kindref="member">nextImage</ref>()));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>old_frame_id<sp/>=<sp/><ref refid="classSHM_1ae1d5499cb8cc37ec88864734418254fe" kindref="member">image</ref>.<ref refid="classrgbd_1_1Image_1a12c65a45b66bc800630ccf016dd2341f" kindref="member">getFrameId</ref>();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSHM_1ae1d5499cb8cc37ec88864734418254fe" kindref="member">image</ref><sp/>=<sp/><ref refid="namespacergbd_1a4d11f15ef65f8d50a191b00022843d6f" kindref="member">rgbd::generateRandomImage</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSHM_1ae1d5499cb8cc37ec88864734418254fe" kindref="member">image</ref>.<ref refid="classrgbd_1_1Image_1a2a533e05c3eb97fa796d3bec28b73740" kindref="member">setFrameId</ref>(old_frame_id);<sp/></highlight><highlight class="comment">//<sp/>As<sp/>FrameId<sp/>is<sp/>assumed<sp/>to<sp/>be<sp/>constant<sp/>in<sp/>the<sp/>SHM<sp/>communication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="connection__shm__gtest_8cpp_1abb9d4eb7c92d6832dfa60abffe5444d8" refkind="member"><highlight class="normal"><ref refid="connection__shm__gtest_8cpp_1abb9d4eb7c92d6832dfa60abffe5444d8" kindref="member">TEST_F</ref>(<ref refid="classSHM" kindref="compound">SHM</ref>,<sp/>InitializeBeforeSend)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(client.initialized());</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(client.initialize(test_server_name,<sp/>1.));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(client.initialized());</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="connection__shm__gtest_8cpp_1a43a6e93e45098a74e44d75bf823770b8" refkind="member"><highlight class="normal"><ref refid="connection__shm__gtest_8cpp_1abb9d4eb7c92d6832dfa60abffe5444d8" kindref="member">TEST_F</ref>(<ref refid="classSHM" kindref="compound">SHM</ref>,<sp/>InitializeAfterSend)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Duration(0.01).sleep();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(client.initialized());</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialize(test_server_name));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialized());</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="connection__shm__gtest_8cpp_1a54b887900f4f4184654c4832bc3add8b" refkind="member"><highlight class="normal"><ref refid="connection__shm__gtest_8cpp_1abb9d4eb7c92d6832dfa60abffe5444d8" kindref="member">TEST_F</ref>(<ref refid="classSHM" kindref="compound">SHM</ref>,<sp/>DeInitialize)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Duration(0.01).sleep();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(client.initialized());</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialize(test_server_name));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialized());</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.deinitialize());</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(client.initialized());</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="connection__shm__gtest_8cpp_1a02dc97958364e102581073f39e2bccba" refkind="member"><highlight class="normal"><ref refid="connection__shm__gtest_8cpp_1abb9d4eb7c92d6832dfa60abffe5444d8" kindref="member">TEST_F</ref>(<ref refid="classSHMInitialized" kindref="compound">SHMInitialized</ref>,<sp/>NextImage)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Duration(0.01).sleep();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1Image" kindref="compound">rgbd::Image</ref><sp/>image2;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.nextImage(image2));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(image,<sp/>image2);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="connection__shm__gtest_8cpp_1a18da79be774b294abcbaed3f82664759" refkind="member"><highlight class="normal"><ref refid="connection__shm__gtest_8cpp_1abb9d4eb7c92d6832dfa60abffe5444d8" kindref="member">TEST_F</ref>(<ref refid="classSHMInitialized" kindref="compound">SHMInitialized</ref>,<sp/>NextImagePtr)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Duration(0.01).sleep();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">rgbd::ImagePtr</ref><sp/>image2<sp/>=<sp/>client.nextImage();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(image2);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(image2)<sp/></highlight><highlight class="comment">//<sp/>This<sp/>prevents<sp/>a<sp/>crash<sp/>of<sp/>the<sp/>node.<sp/>Test<sp/>will<sp/>still<sp/>fail<sp/>because<sp/>of<sp/>previous<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(image,<sp/>*image2);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="connection__shm__gtest_8cpp_1a68c28e238d4c53ee9922af0b02987ca4" refkind="member"><highlight class="normal"><ref refid="connection__shm__gtest_8cpp_1abb9d4eb7c92d6832dfa60abffe5444d8" kindref="member">TEST_F</ref>(<ref refid="classSHMInitialized" kindref="compound">SHMInitialized</ref>,<sp/>NextImageTwice)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Duration(0.01).sleep();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1Image" kindref="compound">rgbd::Image</ref><sp/>image2;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.nextImage(image2));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(image,<sp/>image2);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>image.setTimestamp(image.getTimestamp()+10.);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Duration(0.01).sleep();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.nextImage(image2));</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(image,<sp/>image2);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="connection__shm__gtest_8cpp_1a0d851d508670ac675646aca37adb1f2f" refkind="member"><highlight class="normal"><ref refid="connection__shm__gtest_8cpp_1abb9d4eb7c92d6832dfa60abffe5444d8" kindref="member">TEST_F</ref>(<ref refid="classSHMInitialized" kindref="compound">SHMInitialized</ref>,<sp/>NextImageTwiceWithoutSend)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Duration(0.01).sleep();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1Image" kindref="compound">rgbd::Image</ref><sp/>image2;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.nextImage(image2));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(image,<sp/>image2);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(client.nextImage(image2));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="connection__shm__gtest_8cpp_1a3bebc839ed789e34be51f045d238f140" refkind="member"><highlight class="normal"><ref refid="connection__shm__gtest_8cpp_1abb9d4eb7c92d6832dfa60abffe5444d8" kindref="member">TEST_F</ref>(<ref refid="classSHMInitialized" kindref="compound">SHMInitialized</ref>,<sp/>NextImagePtrTwice)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Duration(0.01).sleep();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">rgbd::ImagePtr</ref><sp/>image2<sp/>=<sp/>client.nextImage();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(image2);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(image2)<sp/></highlight><highlight class="comment">//<sp/>This<sp/>prevents<sp/>a<sp/>crash<sp/>of<sp/>the<sp/>node.<sp/>Test<sp/>will<sp/>still<sp/>fail<sp/>because<sp/>of<sp/>previous<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(image,<sp/>*image2);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>image.setTimestamp(image.getTimestamp()+10.);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>image2.<ref refid="cpp/memory/shared_ptr/reset" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">reset</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Duration(0.01).sleep();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>image2<sp/>=<sp/>client.nextImage();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(image2);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(image2)<sp/></highlight><highlight class="comment">//<sp/>This<sp/>prevents<sp/>a<sp/>crash<sp/>of<sp/>the<sp/>node.<sp/>Test<sp/>will<sp/>still<sp/>fail<sp/>because<sp/>of<sp/>previous<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(image,<sp/>*image2);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="connection__shm__gtest_8cpp_1a85d76f9e4553210210d7c48f950c9b19" refkind="member"><highlight class="normal"><ref refid="connection__shm__gtest_8cpp_1abb9d4eb7c92d6832dfa60abffe5444d8" kindref="member">TEST_F</ref>(<ref refid="classSHMInitialized" kindref="compound">SHMInitialized</ref>,<sp/>NextImagePtrTwiceWithoutSend)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Duration(0.01).sleep();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">rgbd::ImagePtr</ref><sp/>image2<sp/>=<sp/>client.nextImage();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(image2);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(image2)<sp/></highlight><highlight class="comment">//<sp/>This<sp/>prevents<sp/>a<sp/>crash<sp/>of<sp/>the<sp/>node.<sp/>Test<sp/>will<sp/>still<sp/>fail<sp/>because<sp/>of<sp/>previous<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(image,<sp/>*image2);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>image2.<ref refid="cpp/memory/shared_ptr/reset" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">reset</ref>();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>image2<sp/>=<sp/>client.nextImage();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(image2);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Run<sp/>all<sp/>the<sp/>tests<sp/>that<sp/>were<sp/>declared<sp/>with<sp/>TEST()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="connection__shm__gtest_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="connection__shm__gtest_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::init(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;shm_connection&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>testing::InitGoogleTest(&amp;argc,<sp/>argv);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RUN_ALL_TESTS();</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="test/connection_shm_gtest.cpp"/>
  </compounddef>
</doxygen>
