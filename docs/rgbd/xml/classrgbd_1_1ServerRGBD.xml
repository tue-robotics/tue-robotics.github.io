<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classrgbd_1_1ServerRGBD" kind="class" language="C++" prot="public">
    <compoundname>rgbd::ServerRGBD</compoundname>
    <includes refid="server__rgbd_8h" local="no">server_rgbd.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classrgbd_1_1ServerRGBD_1af0a46afef7ae04ce989cb8aad8840db0" prot="public" static="yes" mutable="no">
        <type>const static int</type>
        <definition>const int rgbd::ServerRGBD::MESSAGE_VERSION</definition>
        <argsstring></argsstring>
        <name>MESSAGE_VERSION</name>
        <initializer>= 4</initializer>
        <briefdescription>
<para>version of the <ref refid="classRGBD" kindref="compound">RGBD</ref> message being used </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/server_rgbd.h" line="54" column="22" bodyfile="include/rgbd/server_rgbd.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classrgbd_1_1ServerRGBD_1ab5880729580c1095ae730268f0ce29f3" prot="protected" static="no" mutable="no">
        <type>ros::CallbackQueue</type>
        <definition>ros::CallbackQueue rgbd::ServerRGBD::cb_queue_</definition>
        <argsstring></argsstring>
        <name>cb_queue_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/server_rgbd.h" line="61" column="24" bodyfile="include/rgbd/server_rgbd.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrgbd_1_1ServerRGBD_1ab4e8cca8df75511f0f3a69d323f4274a" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacergbd_1a1aa4c6e03c75007b29c04307d4ddb89b" kindref="member">DepthStorageType</ref></type>
        <definition>DepthStorageType rgbd::ServerRGBD::depth_type_</definition>
        <argsstring></argsstring>
        <name>depth_type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/server_rgbd.h" line="64" column="22" bodyfile="include/rgbd/server_rgbd.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrgbd_1_1ServerRGBD_1a34da5574744c3d83182e4a98948d68f6" prot="protected" static="no" mutable="no">
        <type><ref refid="classrgbd_1_1Image" kindref="compound">rgbd::Image</ref></type>
        <definition>rgbd::Image rgbd::ServerRGBD::image_</definition>
        <argsstring></argsstring>
        <name>image_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/server_rgbd.h" line="66" column="17" bodyfile="include/rgbd/server_rgbd.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrgbd_1_1ServerRGBD_1a7eb17693cd7d973059fd84fb1ae1e1c1" prot="protected" static="no" mutable="no">
        <type><ref refid="cpp/thread/mutex" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::mutex</ref></type>
        <definition>std::mutex rgbd::ServerRGBD::image_mutex_</definition>
        <argsstring></argsstring>
        <name>image_mutex_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/server_rgbd.h" line="67" column="16" bodyfile="include/rgbd/server_rgbd.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrgbd_1_1ServerRGBD_1ab403c770c6423ac0aac39e83ca18f53b" prot="protected" static="no" mutable="no">
        <type>ros::NodeHandle</type>
        <definition>ros::NodeHandle rgbd::ServerRGBD::nh_</definition>
        <argsstring></argsstring>
        <name>nh_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/server_rgbd.h" line="58" column="21" bodyfile="include/rgbd/server_rgbd.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrgbd_1_1ServerRGBD_1a88a0c2dae534f686ac11d319409cb763" prot="protected" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher rgbd::ServerRGBD::pub_image_</definition>
        <argsstring></argsstring>
        <name>pub_image_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/server_rgbd.h" line="59" column="20" bodyfile="include/rgbd/server_rgbd.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrgbd_1_1ServerRGBD_1af9d0c2bb50bd37a841718652f3603574" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacergbd_1ad7baf6301bf2af159dbf2e15d800ae10" kindref="member">RGBStorageType</ref></type>
        <definition>RGBStorageType rgbd::ServerRGBD::rgb_type_</definition>
        <argsstring></argsstring>
        <name>rgb_type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/server_rgbd.h" line="63" column="20" bodyfile="include/rgbd/server_rgbd.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrgbd_1_1ServerRGBD_1ac63094f2e946f63a63bb40f2bb1a2654" prot="protected" static="no" mutable="no">
        <type>ros::ServiceServer</type>
        <definition>ros::ServiceServer rgbd::ServerRGBD::service_server_</definition>
        <argsstring></argsstring>
        <name>service_server_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/server_rgbd.h" line="60" column="24" bodyfile="include/rgbd/server_rgbd.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrgbd_1_1ServerRGBD_1a084551cd9a705572d83db1f2465456eb" prot="protected" static="no" mutable="no">
        <type><ref refid="cpp/thread/thread" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::thread</ref></type>
        <definition>std::thread rgbd::ServerRGBD::service_thread_</definition>
        <argsstring></argsstring>
        <name>service_thread_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/server_rgbd.h" line="70" column="17" bodyfile="include/rgbd/server_rgbd.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrgbd_1_1ServerRGBD_1a376274d9fa577ac9a94e11ff5abcc5b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rgbd::ServerRGBD::initialize</definition>
        <argsstring>(const std::string &amp;name, RGBStorageType rgb_type=RGB_STORAGE_LOSSLESS, DepthStorageType depth_type=DEPTH_STORAGE_LOSSLESS, const float service_freq=10)</argsstring>
        <name>initialize</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="namespacergbd_1ad7baf6301bf2af159dbf2e15d800ae10" kindref="member">RGBStorageType</ref></type>
          <declname>rgb_type</declname>
          <defval><ref refid="namespacergbd_1ad7baf6301bf2af159dbf2e15d800ae10a3ea098736136689906afc944da02d5bd" kindref="member">RGB_STORAGE_LOSSLESS</ref></defval>
        </param>
        <param>
          <type><ref refid="namespacergbd_1a1aa4c6e03c75007b29c04307d4ddb89b" kindref="member">DepthStorageType</ref></type>
          <declname>depth_type</declname>
          <defval><ref refid="namespacergbd_1a1aa4c6e03c75007b29c04307d4ddb89ba4bb10bdec05a06c1bcdd2915ad016b69" kindref="member">DEPTH_STORAGE_LOSSLESS</ref></defval>
        </param>
        <param>
          <type>const float</type>
          <declname>service_freq</declname>
          <defval>10</defval>
        </param>
        <briefdescription>
<para>Initialize server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Fully resolved server name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rgb_type</parametername>
</parameternamelist>
<parameterdescription>
<para>rgb storage type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>depth_type</parametername>
</parameternamelist>
<parameterdescription>
<para>depth storage type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>service_freq</parametername>
</parameternamelist>
<parameterdescription>
<para>frequency of the thread processing service requests </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/server_rgbd.h" line="43" column="10" bodyfile="src/server_rgbd.cpp" bodystart="43" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classrgbd_1_1ServerRGBD_1ae3d7f3530a0e826002f2139dedc17e18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rgbd::ServerRGBD::send</definition>
        <argsstring>(const Image &amp;image)</argsstring>
        <name>send</name>
        <param>
          <type>const <ref refid="classrgbd_1_1Image" kindref="compound">Image</ref> &amp;</type>
          <declname>image</declname>
        </param>
        <briefdescription>
<para>Write a new image to all interfaces. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classrgbd_1_1Image" kindref="compound">Image</ref> to be written </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/server_rgbd.h" line="49" column="10" bodyfile="src/server_rgbd.cpp" bodystart="56" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classrgbd_1_1ServerRGBD_1a6f407df05df90d3751c9caa34e0f0943" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rgbd::ServerRGBD::ServerRGBD</definition>
        <argsstring>(ros::NodeHandle nh=ros::NodeHandle())</argsstring>
        <name>ServerRGBD</name>
        <param>
          <type>ros::NodeHandle</type>
          <declname>nh</declname>
          <defval>ros::NodeHandle()</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/server_rgbd.h" line="27" column="5" bodyfile="src/server_rgbd.cpp" bodystart="28" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classrgbd_1_1ServerRGBD_1a4f6da95df5d294bd9cae9e5e049b3863" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>rgbd::ServerRGBD::~ServerRGBD</definition>
        <argsstring>()</argsstring>
        <name>~ServerRGBD</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Nodehandle is shutdown and all threads are joined </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/server_rgbd.h" line="34" column="13" bodyfile="src/server_rgbd.cpp" bodystart="34" bodyend="39"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classrgbd_1_1ServerRGBD_1a5a89e1961bed6f5af5bc54f81638cec7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rgbd::ServerRGBD::serviceCallback</definition>
        <argsstring>(rgbd_msgs::GetRGBDRequest &amp;req, rgbd_msgs::GetRGBDResponse &amp;resp)</argsstring>
        <name>serviceCallback</name>
        <param>
          <type>rgbd_msgs::GetRGBDRequest &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>rgbd_msgs::GetRGBDResponse &amp;</type>
          <declname>resp</declname>
        </param>
        <briefdescription>
<para>serviceCallback </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>Service Request </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resp</parametername>
</parameternamelist>
<parameterdescription>
<para>Service Response </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/server_rgbd.h" line="78" column="10" bodyfile="src/server_rgbd.cpp" bodystart="83" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classrgbd_1_1ServerRGBD_1ad6d96836139238d3b98c49c28b7acca6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rgbd::ServerRGBD::serviceThreadFunc</definition>
        <argsstring>(const float frequency)</argsstring>
        <name>serviceThreadFunc</name>
        <param>
          <type>const float</type>
          <declname>frequency</declname>
        </param>
        <briefdescription>
<para>Function to be called in the thread proving the service. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frequency</parametername>
</parameternamelist>
<parameterdescription>
<para>frequency for checking service requests </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/rgbd/server_rgbd.h" line="84" column="10" bodyfile="src/server_rgbd.cpp" bodystart="118" bodyend="126"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classrgbd_1_1Server" kindref="compound">Server</ref> which provides <ref refid="classRGBD" kindref="compound">RGBD</ref> topic and <ref refid="classRGBD" kindref="compound">RGBD</ref> service. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="5">
        <label>std::thread</label>
        <link refid="cpp/thread/thread" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="2">
        <label>std::mutex</label>
        <link refid="cpp/thread/mutex" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="3">
        <label>rgbd::Image</label>
        <link refid="classrgbd_1_1Image"/>
        <childnode refid="4" relation="usage">
          <edgelabel>frame_id_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>rgbd::ServerRGBD</label>
        <link refid="classrgbd_1_1ServerRGBD"/>
        <childnode refid="2" relation="usage">
          <edgelabel>image_mutex_</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>image_</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>service_thread_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::string</label>
        <link refid="cpp/string/basic_string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="include/rgbd/server_rgbd.h" line="20" column="17" bodyfile="include/rgbd/server_rgbd.h" bodystart="20" bodyend="86"/>
    <listofallmembers>
      <member refid="classrgbd_1_1ServerRGBD_1ab5880729580c1095ae730268f0ce29f3" prot="protected" virt="non-virtual"><scope>rgbd::ServerRGBD</scope><name>cb_queue_</name></member>
      <member refid="classrgbd_1_1ServerRGBD_1ab4e8cca8df75511f0f3a69d323f4274a" prot="protected" virt="non-virtual"><scope>rgbd::ServerRGBD</scope><name>depth_type_</name></member>
      <member refid="classrgbd_1_1ServerRGBD_1a34da5574744c3d83182e4a98948d68f6" prot="protected" virt="non-virtual"><scope>rgbd::ServerRGBD</scope><name>image_</name></member>
      <member refid="classrgbd_1_1ServerRGBD_1a7eb17693cd7d973059fd84fb1ae1e1c1" prot="protected" virt="non-virtual"><scope>rgbd::ServerRGBD</scope><name>image_mutex_</name></member>
      <member refid="classrgbd_1_1ServerRGBD_1a376274d9fa577ac9a94e11ff5abcc5b5" prot="public" virt="non-virtual"><scope>rgbd::ServerRGBD</scope><name>initialize</name></member>
      <member refid="classrgbd_1_1ServerRGBD_1af0a46afef7ae04ce989cb8aad8840db0" prot="public" virt="non-virtual"><scope>rgbd::ServerRGBD</scope><name>MESSAGE_VERSION</name></member>
      <member refid="classrgbd_1_1ServerRGBD_1ab403c770c6423ac0aac39e83ca18f53b" prot="protected" virt="non-virtual"><scope>rgbd::ServerRGBD</scope><name>nh_</name></member>
      <member refid="classrgbd_1_1ServerRGBD_1a88a0c2dae534f686ac11d319409cb763" prot="protected" virt="non-virtual"><scope>rgbd::ServerRGBD</scope><name>pub_image_</name></member>
      <member refid="classrgbd_1_1ServerRGBD_1af9d0c2bb50bd37a841718652f3603574" prot="protected" virt="non-virtual"><scope>rgbd::ServerRGBD</scope><name>rgb_type_</name></member>
      <member refid="classrgbd_1_1ServerRGBD_1ae3d7f3530a0e826002f2139dedc17e18" prot="public" virt="non-virtual"><scope>rgbd::ServerRGBD</scope><name>send</name></member>
      <member refid="classrgbd_1_1ServerRGBD_1a6f407df05df90d3751c9caa34e0f0943" prot="public" virt="non-virtual"><scope>rgbd::ServerRGBD</scope><name>ServerRGBD</name></member>
      <member refid="classrgbd_1_1ServerRGBD_1ac63094f2e946f63a63bb40f2bb1a2654" prot="protected" virt="non-virtual"><scope>rgbd::ServerRGBD</scope><name>service_server_</name></member>
      <member refid="classrgbd_1_1ServerRGBD_1a084551cd9a705572d83db1f2465456eb" prot="protected" virt="non-virtual"><scope>rgbd::ServerRGBD</scope><name>service_thread_</name></member>
      <member refid="classrgbd_1_1ServerRGBD_1a5a89e1961bed6f5af5bc54f81638cec7" prot="protected" virt="non-virtual"><scope>rgbd::ServerRGBD</scope><name>serviceCallback</name></member>
      <member refid="classrgbd_1_1ServerRGBD_1ad6d96836139238d3b98c49c28b7acca6" prot="protected" virt="non-virtual"><scope>rgbd::ServerRGBD</scope><name>serviceThreadFunc</name></member>
      <member refid="classrgbd_1_1ServerRGBD_1a4f6da95df5d294bd9cae9e5e049b3863" prot="public" virt="virtual"><scope>rgbd::ServerRGBD</scope><name>~ServerRGBD</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
