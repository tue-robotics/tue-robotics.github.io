<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="connection__rgbd__gtest_8cpp" kind="file" language="C++">
    <compoundname>connection_rgbd_gtest.cpp</compoundname>
    <includes refid="test__utils_8h" local="yes">test_utils.h</includes>
    <includes local="no">gtest/gtest.h</includes>
    <includes refid="image_8h" local="no">rgbd/image.h</includes>
    <includes refid="server__rgbd_8h" local="no">rgbd/server_rgbd.h</includes>
    <includes refid="client__rgbd_8h" local="no">rgbd/client_rgbd.h</includes>
    <includes local="no">ros/init.h</includes>
    <includes local="no">ros/node_handle.h</includes>
    <incdepgraph>
      <node id="24">
        <label>ros/init.h</label>
      </node>
      <node id="15">
        <label>rgbd_msgs/GetRGBD.h</label>
      </node>
      <node id="18">
        <label>ros/publisher.h</label>
      </node>
      <node id="9">
        <label>sensor_msgs/CameraInfo.h</label>
      </node>
      <node id="11">
        <label>random</label>
        <link refid="cpp/header/random" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="10">
        <label>sensor_msgs/distortion_models.h</label>
      </node>
      <node id="6">
        <label>memory</label>
        <link refid="cpp/header/memory" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="2">
        <label>test_utils.h</label>
        <link refid="test__utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>image_geometry/pinhole_camera_model.h</label>
      </node>
      <node id="20">
        <label>mutex</label>
        <link refid="cpp/header/mutex" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="21">
        <label>thread</label>
        <link refid="cpp/header/thread" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="5">
        <label>rgbd/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ros/service_server.h</label>
      </node>
      <node id="22">
        <label>rgbd/client_rgbd.h</label>
        <link refid="client__rgbd_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>opencv2/core.hpp</label>
      </node>
      <node id="4">
        <label>rgbd/image.h</label>
        <link refid="image_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ros/callback_queue.h</label>
      </node>
      <node id="13">
        <label>gtest/gtest.h</label>
      </node>
      <node id="8">
        <label>rgbd_msgs/RGBD.h</label>
      </node>
      <node id="14">
        <label>rgbd/server_rgbd.h</label>
        <link refid="server__rgbd_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>ros/subscriber.h</label>
      </node>
      <node id="12">
        <label>string</label>
        <link refid="cpp/header/string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="17">
        <label>ros/node_handle.h</label>
      </node>
      <node id="1">
        <label>connection_rgbd_gtest.cpp</label>
        <link refid="connection__rgbd__gtest_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classRGBD" prot="public">RGBD</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="connection__rgbd__gtest_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_rgbd_gtest.cpp" line="191" column="5" bodyfile="test/connection_rgbd_gtest.cpp" bodystart="191" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="connection__rgbd__gtest_8cpp_1a9c868ea36041bb860401050d90d796e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(RGBD, DeInitialize)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classRGBD" kindref="compound">RGBD</ref></type>
        </param>
        <param>
          <type>DeInitialize</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_rgbd_gtest.cpp" line="49" column="1" bodyfile="test/connection_rgbd_gtest.cpp" bodystart="49" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="connection__rgbd__gtest_8cpp_1adbc96e8a7f207052fddc7f9feae85184" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(RGBD, Initialize)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classRGBD" kindref="compound">RGBD</ref></type>
        </param>
        <param>
          <type>Initialize</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_rgbd_gtest.cpp" line="40" column="1" bodyfile="test/connection_rgbd_gtest.cpp" bodystart="40" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="connection__rgbd__gtest_8cpp_1ad8e2418c9450fe374e2974a421188185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(RGBD, NextImage)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classRGBD" kindref="compound">RGBD</ref></type>
        </param>
        <param>
          <type>NextImage</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_rgbd_gtest.cpp" line="80" column="1" bodyfile="test/connection_rgbd_gtest.cpp" bodystart="80" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="connection__rgbd__gtest_8cpp_1a3f80e95e6da19b1b7bec920fa295acec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(RGBD, NextImageBeforeSend)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classRGBD" kindref="compound">RGBD</ref></type>
        </param>
        <param>
          <type>NextImageBeforeSend</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_rgbd_gtest.cpp" line="60" column="1" bodyfile="test/connection_rgbd_gtest.cpp" bodystart="60" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="connection__rgbd__gtest_8cpp_1ad2ec3312b430699598ad7f24f60b75e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(RGBD, NextImagePtr)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classRGBD" kindref="compound">RGBD</ref></type>
        </param>
        <param>
          <type>NextImagePtr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_rgbd_gtest.cpp" line="93" column="1" bodyfile="test/connection_rgbd_gtest.cpp" bodystart="93" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="connection__rgbd__gtest_8cpp_1ad32a9e8004b6a02c2505b679e36c5fb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(RGBD, NextImagePtrBeforeSend)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classRGBD" kindref="compound">RGBD</ref></type>
        </param>
        <param>
          <type>NextImagePtrBeforeSend</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_rgbd_gtest.cpp" line="70" column="1" bodyfile="test/connection_rgbd_gtest.cpp" bodystart="70" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="connection__rgbd__gtest_8cpp_1a255357d45a9219e46a52fb6103db902a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(RGBD, NextImagePtrTwice)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classRGBD" kindref="compound">RGBD</ref></type>
        </param>
        <param>
          <type>NextImagePtrTwice</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_rgbd_gtest.cpp" line="143" column="1" bodyfile="test/connection_rgbd_gtest.cpp" bodystart="143" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="connection__rgbd__gtest_8cpp_1ade88b1cd7897a0913da3b2497c81f9bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(RGBD, NextImagePtrTwiceWithoutSend)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classRGBD" kindref="compound">RGBD</ref></type>
        </param>
        <param>
          <type>NextImagePtrTwiceWithoutSend</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_rgbd_gtest.cpp" line="170" column="1" bodyfile="test/connection_rgbd_gtest.cpp" bodystart="170" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="connection__rgbd__gtest_8cpp_1a878483cec9edee5e9318fed497bca728" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(RGBD, NextImageTwice)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classRGBD" kindref="compound">RGBD</ref></type>
        </param>
        <param>
          <type>NextImageTwice</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_rgbd_gtest.cpp" line="109" column="1" bodyfile="test/connection_rgbd_gtest.cpp" bodystart="109" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="connection__rgbd__gtest_8cpp_1abc089925d13e359e28dd8b03132d5f30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(RGBD, NextImageTwiceWithoutSend)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classRGBD" kindref="compound">RGBD</ref></type>
        </param>
        <param>
          <type>NextImageTwiceWithoutSend</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/connection_rgbd_gtest.cpp" line="128" column="1" bodyfile="test/connection_rgbd_gtest.cpp" bodystart="128" bodyend="141"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="test__utils_8h" kindref="compound">test_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="image_8h" kindref="compound">rgbd/image.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="server__rgbd_8h" kindref="compound">rgbd/server_rgbd.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="client__rgbd_8h" kindref="compound">rgbd/client_rgbd.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/init.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/node_handle.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classRGBD" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classRGBD" kindref="compound">RGBD</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>testing::Test</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16" refid="classRGBD_1a82b29f2bf7c2946e4182521313172450" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRGBD_1a82b29f2bf7c2946e4182521313172450" kindref="member">RGBD</ref>()<sp/>:<sp/><ref refid="classRGBD_1a1e5596ff495490d894267c0b3f8806f2" kindref="member">server</ref>(<ref refid="classRGBD_1a39025f5127ac74b48a069dc1ebf0ceae" kindref="member">nh</ref>)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classRGBD_1a793027d40b769fb8702df4df6a1e3a2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classRGBD_1a793027d40b769fb8702df4df6a1e3a2f" kindref="member">~RGBD</ref>()</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRGBD_1ab6ae9596bde6cb9955b316225d59963a" kindref="member">client</ref>.<ref refid="classrgbd_1_1ClientRGBD_1a14314ace115f6739a14e7bcac1afab01" kindref="member">deinitialize</ref>();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRGBD_1a39025f5127ac74b48a069dc1ebf0ceae" kindref="member">nh</ref>.shutdown();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classRGBD_1ab4e19be2804a3565b067c46e685146e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRGBD_1ab4e19be2804a3565b067c46e685146e0" kindref="member">SetUp</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="27"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRGBD_1a3d28ecab756c7a003741eca6a4fa5360" kindref="member">image</ref><sp/>=<sp/><ref refid="namespacergbd_1a4d11f15ef65f8d50a191b00022843d6f" kindref="member">rgbd::generateRandomImage</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRGBD_1a1e5596ff495490d894267c0b3f8806f2" kindref="member">server</ref>.<ref refid="classrgbd_1_1ServerRGBD_1a376274d9fa577ac9a94e11ff5abcc5b5" kindref="member">initialize</ref>(<ref refid="classRGBD_1ab6973f7aa0432ce7b2df23a20f80ee85" kindref="member">test_server_name</ref>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classRGBD_1ab6973f7aa0432ce7b2df23a20f80ee85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/><ref refid="classRGBD_1ab6973f7aa0432ce7b2df23a20f80ee85" kindref="member">test_server_name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/test_ns/rgbd&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classRGBD_1a39025f5127ac74b48a069dc1ebf0ceae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::NodeHandle<sp/><ref refid="classRGBD_1a39025f5127ac74b48a069dc1ebf0ceae" kindref="member">nh</ref>;</highlight></codeline>
<codeline lineno="35" refid="classRGBD_1a3d28ecab756c7a003741eca6a4fa5360" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1Image" kindref="compound">rgbd::Image</ref><sp/><ref refid="classRGBD_1a3d28ecab756c7a003741eca6a4fa5360" kindref="member">image</ref>;</highlight></codeline>
<codeline lineno="36" refid="classRGBD_1a1e5596ff495490d894267c0b3f8806f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1ServerRGBD" kindref="compound">rgbd::ServerRGBD</ref><sp/><ref refid="classRGBD_1a1e5596ff495490d894267c0b3f8806f2" kindref="member">server</ref>;</highlight></codeline>
<codeline lineno="37" refid="classRGBD_1ab6ae9596bde6cb9955b316225d59963a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1ClientRGBD" kindref="compound">rgbd::ClientRGBD</ref><sp/><ref refid="classRGBD_1ab6ae9596bde6cb9955b316225d59963a" kindref="member">client</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="connection__rgbd__gtest_8cpp_1adbc96e8a7f207052fddc7f9feae85184" refkind="member"><highlight class="normal"><ref refid="connection__rgbd__gtest_8cpp_1adbc96e8a7f207052fddc7f9feae85184" kindref="member">TEST_F</ref>(<ref refid="classRGBD" kindref="compound">RGBD</ref>,<sp/>Initialize)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(client.initialized());</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialize(test_server_name));</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialized());</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="connection__rgbd__gtest_8cpp_1a9c868ea36041bb860401050d90d796e8" refkind="member"><highlight class="normal"><ref refid="connection__rgbd__gtest_8cpp_1adbc96e8a7f207052fddc7f9feae85184" kindref="member">TEST_F</ref>(<ref refid="classRGBD" kindref="compound">RGBD</ref>,<sp/>DeInitialize)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(client.initialized());</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialize(test_server_name));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialized());</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.deinitialize());</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(client.initialized());</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="connection__rgbd__gtest_8cpp_1a3f80e95e6da19b1b7bec920fa295acec" refkind="member"><highlight class="normal"><ref refid="connection__rgbd__gtest_8cpp_1adbc96e8a7f207052fddc7f9feae85184" kindref="member">TEST_F</ref>(<ref refid="classRGBD" kindref="compound">RGBD</ref>,<sp/>NextImageBeforeSend)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialize(test_server_name));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialized());</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1Image" kindref="compound">rgbd::Image</ref><sp/>image2;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(client.nextImage(image2));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="connection__rgbd__gtest_8cpp_1ad32a9e8004b6a02c2505b679e36c5fb7" refkind="member"><highlight class="normal"><ref refid="connection__rgbd__gtest_8cpp_1adbc96e8a7f207052fddc7f9feae85184" kindref="member">TEST_F</ref>(<ref refid="classRGBD" kindref="compound">RGBD</ref>,<sp/>NextImagePtrBeforeSend)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialize(test_server_name));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialized());</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">rgbd::ImagePtr</ref><sp/>image2<sp/>=<sp/>client.nextImage();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(image2);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="connection__rgbd__gtest_8cpp_1ad8e2418c9450fe374e2974a421188185" refkind="member"><highlight class="normal"><ref refid="connection__rgbd__gtest_8cpp_1adbc96e8a7f207052fddc7f9feae85184" kindref="member">TEST_F</ref>(<ref refid="classRGBD" kindref="compound">RGBD</ref>,<sp/>NextImage)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialize(test_server_name));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialized());</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Duration(0.01).sleep();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1Image" kindref="compound">rgbd::Image</ref><sp/>image2;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.nextImage(image2));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(image,<sp/>image2);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="connection__rgbd__gtest_8cpp_1ad2ec3312b430699598ad7f24f60b75e5" refkind="member"><highlight class="normal"><ref refid="connection__rgbd__gtest_8cpp_1adbc96e8a7f207052fddc7f9feae85184" kindref="member">TEST_F</ref>(<ref refid="classRGBD" kindref="compound">RGBD</ref>,<sp/>NextImagePtr)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialize(test_server_name));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialized());</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Duration(0.01).sleep();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">rgbd::ImagePtr</ref><sp/>image2<sp/>=<sp/>client.nextImage();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(image2);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(image2)<sp/></highlight><highlight class="comment">//<sp/>This<sp/>prevents<sp/>a<sp/>crash<sp/>of<sp/>the<sp/>node.<sp/>Test<sp/>will<sp/>still<sp/>fail<sp/>because<sp/>of<sp/>previous<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(image,<sp/>*image2);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="connection__rgbd__gtest_8cpp_1a878483cec9edee5e9318fed497bca728" refkind="member"><highlight class="normal"><ref refid="connection__rgbd__gtest_8cpp_1adbc96e8a7f207052fddc7f9feae85184" kindref="member">TEST_F</ref>(<ref refid="classRGBD" kindref="compound">RGBD</ref>,<sp/>NextImageTwice)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialize(test_server_name));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialized());</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Duration(0.01).sleep();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1Image" kindref="compound">rgbd::Image</ref><sp/>image2;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.nextImage(image2));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(image,<sp/>image2);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>image.setTimestamp(image.getTimestamp()+10.);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Duration(0.01).sleep();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.nextImage(image2));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(image,<sp/>image2);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="connection__rgbd__gtest_8cpp_1abc089925d13e359e28dd8b03132d5f30" refkind="member"><highlight class="normal"><ref refid="connection__rgbd__gtest_8cpp_1adbc96e8a7f207052fddc7f9feae85184" kindref="member">TEST_F</ref>(<ref refid="classRGBD" kindref="compound">RGBD</ref>,<sp/>NextImageTwiceWithoutSend)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialize(test_server_name));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialized());</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Duration(0.01).sleep();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1Image" kindref="compound">rgbd::Image</ref><sp/>image2;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.nextImage(image2));</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(image,<sp/>image2);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(client.nextImage(image2));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="connection__rgbd__gtest_8cpp_1a255357d45a9219e46a52fb6103db902a" refkind="member"><highlight class="normal"><ref refid="connection__rgbd__gtest_8cpp_1adbc96e8a7f207052fddc7f9feae85184" kindref="member">TEST_F</ref>(<ref refid="classRGBD" kindref="compound">RGBD</ref>,<sp/>NextImagePtrTwice)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialize(test_server_name));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialized());</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Duration(0.01).sleep();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">rgbd::ImagePtr</ref><sp/>image2<sp/>=<sp/>client.nextImage();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(image2);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(image2)<sp/></highlight><highlight class="comment">//<sp/>This<sp/>prevents<sp/>a<sp/>crash<sp/>of<sp/>the<sp/>node.<sp/>Test<sp/>will<sp/>still<sp/>fail<sp/>because<sp/>of<sp/>previous<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(image,<sp/>*image2);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>image.setTimestamp(image.getTimestamp()+10.);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>image2.<ref refid="cpp/memory/shared_ptr/reset" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">reset</ref>();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Duration(0.01).sleep();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>image2<sp/>=<sp/>client.nextImage();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(image2);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(image2)<sp/></highlight><highlight class="comment">//<sp/>This<sp/>prevents<sp/>a<sp/>crash<sp/>of<sp/>the<sp/>node.<sp/>Test<sp/>will<sp/>still<sp/>fail<sp/>because<sp/>of<sp/>previous<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(image,<sp/>*image2);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="connection__rgbd__gtest_8cpp_1ade88b1cd7897a0913da3b2497c81f9bc" refkind="member"><highlight class="normal"><ref refid="connection__rgbd__gtest_8cpp_1adbc96e8a7f207052fddc7f9feae85184" kindref="member">TEST_F</ref>(<ref refid="classRGBD" kindref="compound">RGBD</ref>,<sp/>NextImagePtrTwiceWithoutSend)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialize(test_server_name));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(client.initialized());</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>server.send(image);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Duration(0.01).sleep();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">rgbd::ImagePtr</ref><sp/>image2<sp/>=<sp/>client.nextImage();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(image2);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(image2)<sp/></highlight><highlight class="comment">//<sp/>This<sp/>prevents<sp/>a<sp/>crash<sp/>of<sp/>the<sp/>node.<sp/>Test<sp/>will<sp/>still<sp/>fail<sp/>because<sp/>of<sp/>previous<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(image,<sp/>*image2);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>image2.<ref refid="cpp/memory/shared_ptr/reset" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">reset</ref>();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>image2<sp/>=<sp/>client.nextImage();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(image2);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ros::isShuttingDown());</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Run<sp/>all<sp/>the<sp/>tests<sp/>that<sp/>were<sp/>declared<sp/>with<sp/>TEST()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="connection__rgbd__gtest_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="connection__rgbd__gtest_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::init(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;rgbd_connection&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>testing::InitGoogleTest(&amp;argc,<sp/>argv);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RUN_ALL_TESTS();</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="test/connection_rgbd_gtest.cpp"/>
  </compounddef>
</doxygen>
