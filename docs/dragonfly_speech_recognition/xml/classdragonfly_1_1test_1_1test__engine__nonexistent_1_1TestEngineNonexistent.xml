<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1test_1_1test__engine__nonexistent_1_1TestEngineNonexistent" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::test::test_engine_nonexistent::TestEngineNonexistent</compoundname>
    <basecompoundref prot="public" virt="non-virtual">TestCase</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1test_1_1test__engine__nonexistent_1_1TestEngineNonexistent_1a4bc0f53280df3aacba657853d1429633" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.test_engine_nonexistent.TestEngineNonexistent.test_get_engine_nonexistent</definition>
        <argsstring>(self)</argsstring>
        <name>test_get_engine_nonexistent</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Verify that getting a nonexistent engine raises an error. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_engine_nonexistent.py" line="29" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_engine_nonexistent.py" bodystart="29" bodyend="38"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>TestCase</label>
      </node>
      <node id="1">
        <label>dragonfly.test.test_engine_nonexistent.TestEngineNonexistent</label>
        <link refid="classdragonfly_1_1test_1_1test__engine__nonexistent_1_1TestEngineNonexistent"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>TestCase</label>
      </node>
      <node id="1">
        <label>dragonfly.test.test_engine_nonexistent.TestEngineNonexistent</label>
        <link refid="classdragonfly_1_1test_1_1test__engine__nonexistent_1_1TestEngineNonexistent"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_engine_nonexistent.py" line="27" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_engine_nonexistent.py" bodystart="27" bodyend="38"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1test_1_1test__engine__nonexistent_1_1TestEngineNonexistent_1a4bc0f53280df3aacba657853d1429633" prot="public" virt="non-virtual"><scope>dragonfly::test::test_engine_nonexistent::TestEngineNonexistent</scope><name>test_get_engine_nonexistent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
