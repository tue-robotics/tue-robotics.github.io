<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacedragonfly_1_1engines_1_1backend__sphinx" kind="namespace" language="Python">
    <compoundname>dragonfly::engines::backend_sphinx</compoundname>
    <innernamespace refid="namespacedragonfly_1_1engines_1_1backend__sphinx_1_1compiler">dragonfly::engines::backend_sphinx::compiler</innernamespace>
    <innernamespace refid="namespacedragonfly_1_1engines_1_1backend__sphinx_1_1engine">dragonfly::engines::backend_sphinx::engine</innernamespace>
    <innernamespace refid="namespacedragonfly_1_1engines_1_1backend__sphinx_1_1grammar__wrapper">dragonfly::engines::backend_sphinx::grammar_wrapper</innernamespace>
    <innernamespace refid="namespacedragonfly_1_1engines_1_1backend__sphinx_1_1misc">dragonfly::engines::backend_sphinx::misc</innernamespace>
    <innernamespace refid="namespacedragonfly_1_1engines_1_1backend__sphinx_1_1recobs">dragonfly::engines::backend_sphinx::recobs</innernamespace>
    <innernamespace refid="namespacedragonfly_1_1engines_1_1backend__sphinx_1_1recording">dragonfly::engines::backend_sphinx::recording</innernamespace>
    <innernamespace refid="namespacedragonfly_1_1engines_1_1backend__sphinx_1_1timer">dragonfly::engines::backend_sphinx::timer</innernamespace>
    <innernamespace refid="namespacedragonfly_1_1engines_1_1backend__sphinx_1_1training">dragonfly::engines::backend_sphinx::training</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacedragonfly_1_1engines_1_1backend__sphinx_1a340d799df23cd5c79797de1a9cff4dab" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly::engines::backend_sphinx._engine</definition>
        <argsstring></argsstring>
        <name>_engine</name>
        <initializer>=  None</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/__init__.py" line="37" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/__init__.py" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedragonfly_1_1engines_1_1backend__sphinx_1a72dc9f92613c1a276f9a6692c98f3c89" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly::engines::backend_sphinx._log</definition>
        <argsstring></argsstring>
        <name>_log</name>
        <initializer>=  logging.getLogger(&quot;engine.sphinx&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/__init__.py" line="33" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/__init__.py" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacedragonfly_1_1engines_1_1backend__sphinx_1a92e59270e02f0fc469d6397653745543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.backend_sphinx.get_engine</definition>
        <argsstring>()</argsstring>
        <name>get_engine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Retrieve the Sphinx back-end engine object. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/__init__.py" line="60" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/__init__.py" bodystart="60" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="namespacedragonfly_1_1engines_1_1backend__sphinx_1a43fb11db96085b5f64b3d6a11b9912f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.backend_sphinx.is_engine_available</definition>
        <argsstring>()</argsstring>
        <name>is_engine_available</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Check whether the Sphinx engine is available. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/__init__.py" line="40" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/__init__.py" bodystart="40" bodyend="59"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/__init__.py" line="1" column="1"/>
  </compounddef>
</doxygen>
