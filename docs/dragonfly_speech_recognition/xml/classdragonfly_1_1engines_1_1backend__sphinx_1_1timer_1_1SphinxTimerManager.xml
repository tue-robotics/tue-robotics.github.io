<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1engines_1_1backend__sphinx_1_1timer_1_1SphinxTimerManager" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::engines::backend_sphinx::timer::SphinxTimerManager</compoundname>
    <basecompoundref prot="public" virt="non-virtual">DelegateTimerManager</basecompoundref>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Timer manager for the CMU Pocket Sphinx engine.

This class allows running timer functions if the engine is currently
processing audio via one of three engine processing methods:

- :meth:`process_buffer`
- :meth:`process_wave_file`
- :meth:`recognise_forever`

Timer functions will run whether or not recognition is paused
(i.e. in sleep mode).

**Note**: long-running timers will block dragonfly from processing what
was said, so be careful with how you use them! Audio frames will not
normally be dropped because of timers, long-running or otherwise.

Normal threads can be used instead of timers if desirable. This is
because the main recognition loop is done in Python rather than in C/C++
code, so there are no unusual multi-threading limitations.</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>DelegateTimerManager</label>
      </node>
      <node id="1">
        <label>dragonfly.engines.backend_sphinx.timer.SphinxTimerManager</label>
        <link refid="classdragonfly_1_1engines_1_1backend__sphinx_1_1timer_1_1SphinxTimerManager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>DelegateTimerManager</label>
      </node>
      <node id="1">
        <label>dragonfly.engines.backend_sphinx.timer.SphinxTimerManager</label>
        <link refid="classdragonfly_1_1engines_1_1backend__sphinx_1_1timer_1_1SphinxTimerManager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/timer.py" line="31" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/timer.py" bodystart="31" bodyend="54"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
