<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="parser_8py" kind="file" language="Python">
    <compoundname>parser.py</compoundname>
    <innerclass refid="classdragonfly_1_1parser_1_1State_1_1__Frame" prot="public">dragonfly::parser::State::_Frame</innerclass>
    <innerclass refid="classdragonfly_1_1parser_1_1Alphanumerics" prot="public">dragonfly::parser::Alphanumerics</innerclass>
    <innerclass refid="classdragonfly_1_1parser_1_1Alternative" prot="public">dragonfly::parser::Alternative</innerclass>
    <innerclass refid="classdragonfly_1_1parser_1_1CharacterSeries" prot="public">dragonfly::parser::CharacterSeries</innerclass>
    <innerclass refid="classdragonfly_1_1parser_1_1Choice" prot="public">dragonfly::parser::Choice</innerclass>
    <innerclass refid="classdragonfly_1_1parser_1_1Float" prot="public">dragonfly::parser::Float</innerclass>
    <innerclass refid="classdragonfly_1_1parser_1_1Integer" prot="public">dragonfly::parser::Integer</innerclass>
    <innerclass refid="classdragonfly_1_1parser_1_1Letters" prot="public">dragonfly::parser::Letters</innerclass>
    <innerclass refid="classdragonfly_1_1parser_1_1Node" prot="public">dragonfly::parser::Node</innerclass>
    <innerclass refid="classdragonfly_1_1parser_1_1Optional" prot="public">dragonfly::parser::Optional</innerclass>
    <innerclass refid="classdragonfly_1_1parser_1_1Parser" prot="public">dragonfly::parser::Parser</innerclass>
    <innerclass refid="classdragonfly_1_1parser_1_1ParserElementBase" prot="public">dragonfly::parser::ParserElementBase</innerclass>
    <innerclass refid="classdragonfly_1_1parser_1_1ParserError" prot="public">dragonfly::parser::ParserError</innerclass>
    <innerclass refid="classdragonfly_1_1parser_1_1QuotedString" prot="public">dragonfly::parser::QuotedString</innerclass>
    <innerclass refid="classdragonfly_1_1parser_1_1QuotedStringContent" prot="public">dragonfly::parser::QuotedStringContent</innerclass>
    <innerclass refid="classdragonfly_1_1parser_1_1Repetition" prot="public">dragonfly::parser::Repetition</innerclass>
    <innerclass refid="classdragonfly_1_1parser_1_1Sequence" prot="public">dragonfly::parser::Sequence</innerclass>
    <innerclass refid="classdragonfly_1_1parser_1_1State" prot="public">dragonfly::parser::State</innerclass>
    <innerclass refid="classdragonfly_1_1parser_1_1String" prot="public">dragonfly::parser::String</innerclass>
    <innerclass refid="classdragonfly_1_1parser_1_1UnsignedInteger" prot="public">dragonfly::parser::UnsignedInteger</innerclass>
    <innerclass refid="classdragonfly_1_1parser_1_1Whitespace" prot="public">dragonfly::parser::Whitespace</innerclass>
    <innernamespace refid="namespacedragonfly_1_1parser">dragonfly::parser</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacedragonfly_1_1parser" refkind="compound"><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Dragonfly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(c)<sp/>Copyright<sp/>2007,<sp/>2008<sp/>by<sp/>Christo<sp/>Butcher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Licensed<sp/>under<sp/>the<sp/>LGPL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Dragonfly<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Dragonfly<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>License<sp/>along<sp/>with<sp/>Dragonfly.<sp/><sp/>If<sp/>not,<sp/>see</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral">Input<sp/>stream<sp/>parsing<sp/>framework</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral">============================================================================</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral">Dragonfly&apos;s<sp/>generic<sp/>input<sp/>stream<sp/>parser<sp/>is<sp/>built<sp/>around<sp/>the<sp/>concept<sp/>of</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral">parser<sp/>elements,<sp/>each<sp/>of<sp/>which<sp/>can<sp/>consume<sp/>a<sp/>certain<sp/>form<sp/>of<sp/>input.<sp/><sp/>These</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral">parser<sp/>elements<sp/>can<sp/>be<sp/>constructed<sp/>into<sp/>a<sp/>hierarchy<sp/>describing<sp/>the<sp/>expected</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral">type<sp/>of<sp/>input<sp/>they<sp/>are<sp/>meant<sp/>to<sp/>process.</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>string</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>locale</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logging</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>six<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>string_types,<sp/>text_type,<sp/>binary_type</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classdragonfly_1_1parser_1_1ParserError" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1ParserError" kindref="compound">ParserError</ref>(Exception):</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classdragonfly_1_1parser_1_1Parser" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Parser" kindref="compound">Parser</ref>(object):</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classdragonfly_1_1parser_1_1Parser_1a15d78e1164e1a4e234305a741da276af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Parser_1a15d78e1164e1a4e234305a741da276af" kindref="member">__init__</ref>(self,<sp/>parser_element,<sp/>log=None):</highlight></codeline>
<codeline lineno="52" refid="classdragonfly_1_1parser_1_1Parser_1aeee00a57f68716648e1e47d35b515f0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Parser_1aeee00a57f68716648e1e47d35b515f0d" kindref="member">_parser_element</ref><sp/>=<sp/>parser_element</highlight></codeline>
<codeline lineno="53" refid="classdragonfly_1_1parser_1_1Parser_1a6b540dc7c86486463f08015a09fdef08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Parser_1a6b540dc7c86486463f08015a09fdef08" kindref="member">_log</ref><sp/>=<sp/>log</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classdragonfly_1_1parser_1_1Parser_1acf0f58146e63f8dbc99972ef34e58f8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Parser_1acf0f58146e63f8dbc99972ef34e58f8b" kindref="member">parse</ref>(self,<sp/>input,<sp/>must_finish=True):</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/><ref refid="classdragonfly_1_1parser_1_1State" kindref="compound">State</ref>(input,<sp/>log=self.<ref refid="classdragonfly_1_1parser_1_1Parser_1a6b540dc7c86486463f08015a09fdef08" kindref="member">_log</ref>)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generator<sp/>=<sp/>self.<ref refid="classdragonfly_1_1parser_1_1Parser_1aeee00a57f68716648e1e47d35b515f0d" kindref="member">_parser_element</ref>.<ref refid="classdragonfly_1_1parser_1_1Parser_1acf0f58146e63f8dbc99972ef34e58f8b" kindref="member">parse</ref>(state)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>generator:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>must_finish<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>state.finished():</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Parse<sp/>complete,<sp/>return<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>state.build_parse_tree()</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node.value()</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Failed<sp/>to<sp/>parse.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classdragonfly_1_1parser_1_1Parser_1ac4f85e7908111a4374df284e359961ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Parser_1ac4f85e7908111a4374df284e359961ee" kindref="member">parse_node</ref>(self,<sp/>input,<sp/>must_finish=True):</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/><ref refid="classdragonfly_1_1parser_1_1State" kindref="compound">State</ref>(input,<sp/>log=self.<ref refid="classdragonfly_1_1parser_1_1Parser_1a6b540dc7c86486463f08015a09fdef08" kindref="member">_log</ref>)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generator<sp/>=<sp/>self.<ref refid="classdragonfly_1_1parser_1_1Parser_1aeee00a57f68716648e1e47d35b515f0d" kindref="member">_parser_element</ref>.<ref refid="classdragonfly_1_1parser_1_1Parser_1acf0f58146e63f8dbc99972ef34e58f8b" kindref="member">parse</ref>(state)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>result<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>generator:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>must_finish<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>state.finished():</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Parse<sp/>complete,<sp/>return<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>state.build_parse_tree()</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Failed<sp/>to<sp/>parse.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classdragonfly_1_1parser_1_1Parser_1ac9554305f1760a37189fbaa6d456aaaa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Parser_1ac9554305f1760a37189fbaa6d456aaaa" kindref="member">parse_multiple</ref>(self,<sp/>input,<sp/>must_finish=True):</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/><ref refid="classdragonfly_1_1parser_1_1State" kindref="compound">State</ref>(input,<sp/>log=self.<ref refid="classdragonfly_1_1parser_1_1Parser_1a6b540dc7c86486463f08015a09fdef08" kindref="member">_log</ref>)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generator<sp/>=<sp/>self.<ref refid="classdragonfly_1_1parser_1_1Parser_1aeee00a57f68716648e1e47d35b515f0d" kindref="member">_parser_element</ref>.<ref refid="classdragonfly_1_1parser_1_1Parser_1acf0f58146e63f8dbc99972ef34e58f8b" kindref="member">parse</ref>(state)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>result<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>generator:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>must_finish<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>state.finished():</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values.append(state.build_parse_tree().<ref refid="namespacedragonfly_1_1windows_1_1win32__monitor_1adc06a30615ff1a0de1e9f470a05f3d28" kindref="member">value</ref>())</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>values</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>[state.build_parse_tree().value()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>result<sp/>in<sp/>generator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>not<sp/>must_finish<sp/>or<sp/>state.finished()]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="classdragonfly_1_1parser_1_1State" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1State" kindref="compound">State</ref>(object):</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Methods<sp/>for<sp/>initialization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classdragonfly_1_1parser_1_1State_1aaa5d532129f48ca4f57d4b494d63ba30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1State_1aaa5d532129f48ca4f57d4b494d63ba30" kindref="member">__init__</ref>(self,<sp/>data,<sp/>index=0,<sp/>log=None):</highlight></codeline>
<codeline lineno="98" refid="classdragonfly_1_1parser_1_1State_1a65ce7b04ef8269ce5e38a88ab92bbd87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a65ce7b04ef8269ce5e38a88ab92bbd87" kindref="member">_data</ref><sp/>=<sp/>data</highlight></codeline>
<codeline lineno="99" refid="classdragonfly_1_1parser_1_1State_1a1d0e7dcd1f1a09814e3fd17d0aad69b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a1d0e7dcd1f1a09814e3fd17d0aad69b0" kindref="member">_index</ref><sp/>=<sp/>index</highlight></codeline>
<codeline lineno="100" refid="classdragonfly_1_1parser_1_1State_1ac017ae5e85d6e3fe3600f30e702c0970" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1ac017ae5e85d6e3fe3600f30e702c0970" kindref="member">_log</ref><sp/>=<sp/>log</highlight></codeline>
<codeline lineno="101" refid="classdragonfly_1_1parser_1_1State_1a56c462cdd23fa9e25c3f0150a0e5909a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a56c462cdd23fa9e25c3f0150a0e5909a" kindref="member">_log_debug</ref><sp/>=<sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1ac017ae5e85d6e3fe3600f30e702c0970" kindref="member">_log</ref>.isEnabledFor(logging.DEBUG)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1ac017ae5e85d6e3fe3600f30e702c0970" kindref="member">_log</ref><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classdragonfly_1_1parser_1_1State_1ac74a8e61a6f84d4af23e9640312c41dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1ac74a8e61a6f84d4af23e9640312c41dc" kindref="member">_stack</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="103" refid="classdragonfly_1_1parser_1_1State_1a888d743afd28e5091665bdd14c875810" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a888d743afd28e5091665bdd14c875810" kindref="member">_depth</ref><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="104" refid="classdragonfly_1_1parser_1_1State_1a60e7113c5ff5ad9cada0e3ba44487f95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a60e7113c5ff5ad9cada0e3ba44487f95" kindref="member">_previous_index</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="classdragonfly_1_1parser_1_1State_1ad865082d22bd7fd6bcda6bd9ec9067dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1State_1ad865082d22bd7fd6bcda6bd9ec9067dd" kindref="member">initialize_decoding</ref>(self):</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a888d743afd28e5091665bdd14c875810" kindref="member">_depth</ref><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1ac74a8e61a6f84d4af23e9640312c41dc" kindref="member">_stack</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a60e7113c5ff5ad9cada0e3ba44487f95" kindref="member">_previous_index</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classdragonfly_1_1parser_1_1State_1a2831cccb08f86d5a53e505a4d3fbc2e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1State_1a2831cccb08f86d5a53e505a4d3fbc2e7" kindref="member">__repr__</ref>(self):</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1ad4a6c9055fe77ebfc72c774168060a38" kindref="member">position_string</ref>()</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Methods<sp/>for<sp/>accessing<sp/>recognition<sp/>content.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="classdragonfly_1_1parser_1_1State_1ad4a6c9055fe77ebfc72c774168060a38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1State_1ad4a6c9055fe77ebfc72c774168060a38" kindref="member">position_string</ref>(self,<sp/>width=20,<sp/>width_before=6):</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mark,<sp/>continuation<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&gt;&gt;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>-=<sp/>2</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Locate<sp/>edges.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i1<sp/>=<sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a1d0e7dcd1f1a09814e3fd17d0aad69b0" kindref="member">_index</ref><sp/>-<sp/>width_before</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2<sp/>=<sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a1d0e7dcd1f1a09814e3fd17d0aad69b0" kindref="member">_index</ref><sp/>-<sp/>width_before<sp/>+<sp/>width<sp/>-<sp/>len(mark)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Account<sp/>for<sp/>edge<sp/>effects.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i1<sp/>&lt;<sp/>0:</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2<sp/>=<sp/>min(i2<sp/>-<sp/>i1,<sp/>len(self.<ref refid="classdragonfly_1_1parser_1_1State_1a65ce7b04ef8269ce5e38a88ab92bbd87" kindref="member">_data</ref>))</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i1<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>i2<sp/>&gt;<sp/>len(self.<ref refid="classdragonfly_1_1parser_1_1State_1a65ce7b04ef8269ce5e38a88ab92bbd87" kindref="member">_data</ref>):</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width_before<sp/>+=<sp/>i2<sp/>-<sp/>len(self.<ref refid="classdragonfly_1_1parser_1_1State_1a65ce7b04ef8269ce5e38a88ab92bbd87" kindref="member">_data</ref>)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i1<sp/>=<sp/>max(i1<sp/>-<sp/>i2<sp/>+<sp/>len(self.<ref refid="classdragonfly_1_1parser_1_1State_1a65ce7b04ef8269ce5e38a88ab92bbd87" kindref="member">_data</ref>),<sp/>0)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2<sp/>=<sp/>len(self.<ref refid="classdragonfly_1_1parser_1_1State_1a65ce7b04ef8269ce5e38a88ab92bbd87" kindref="member">_data</ref>)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Collect<sp/>character<sp/>representations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>before<sp/>=<sp/>[repr(c)[1:-1]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a65ce7b04ef8269ce5e38a88ab92bbd87" kindref="member">_data</ref>[i1:self.<ref refid="classdragonfly_1_1parser_1_1State_1a1d0e7dcd1f1a09814e3fd17d0aad69b0" kindref="member">_index</ref>]]</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>after<sp/>=<sp/>[repr(c)[1:-1]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a65ce7b04ef8269ce5e38a88ab92bbd87" kindref="member">_data</ref>[self.<ref refid="classdragonfly_1_1parser_1_1State_1a1d0e7dcd1f1a09814e3fd17d0aad69b0" kindref="member">_index</ref>:i2]]</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Build<sp/>before<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i1<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>len(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">.join(before))<sp/>&lt;=<sp/>width_before:</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>before<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&quot;&apos;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">.join(before)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>before<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>len(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">.join(before))<sp/>&gt;<sp/>width_before<sp/>-<sp/>2:</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>before.pop(0)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>before<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">.join(before)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>before<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;%s&quot;%s&apos;</highlight><highlight class="normal"><sp/>%<sp/>(continuation<sp/>*<sp/>(width_before<sp/>-<sp/>len(before)),<sp/>before)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Build<sp/>after<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width_after<sp/>=<sp/>width<sp/>-<sp/>len(before)<sp/>-<sp/>len(mark)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i2<sp/>==<sp/>len(self.<ref refid="classdragonfly_1_1parser_1_1State_1a65ce7b04ef8269ce5e38a88ab92bbd87" kindref="member">_data</ref>)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>len(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">.join(after))<sp/>&lt;=<sp/>width_after:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>after<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">.join(after)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;&quot;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>after<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>len(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">.join(after))<sp/>&gt;<sp/>width_after<sp/>-<sp/>2:</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>after.pop()</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>after<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">.join(after)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>after<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;%s&quot;%s&apos;</highlight><highlight class="normal"><sp/>%<sp/>(after,<sp/>continuation<sp/>*<sp/>(width_after<sp/>-<sp/>len(after)))</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Build<sp/>and<sp/>return<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;%s%s%s&apos;</highlight><highlight class="normal"><sp/>%<sp/>(before,<sp/>mark,<sp/>after)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Methods<sp/>for<sp/>parsing<sp/>of<sp/>input.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="classdragonfly_1_1parser_1_1State_1a6af6bf6d251dbafd3a7c9dd6d73a9dca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1State_1a6af6bf6d251dbafd3a7c9dd6d73a9dca" kindref="member">remaining</ref>(self):</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len(self.<ref refid="classdragonfly_1_1parser_1_1State_1a65ce7b04ef8269ce5e38a88ab92bbd87" kindref="member">_data</ref>)<sp/>-<sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a1d0e7dcd1f1a09814e3fd17d0aad69b0" kindref="member">_index</ref></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="classdragonfly_1_1parser_1_1State_1a74b791011815cf643742260f825f486a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1State_1a74b791011815cf643742260f825f486a" kindref="member">finished</ref>(self):</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(len(self.<ref refid="classdragonfly_1_1parser_1_1State_1a65ce7b04ef8269ce5e38a88ab92bbd87" kindref="member">_data</ref>)<sp/>-<sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a1d0e7dcd1f1a09814e3fd17d0aad69b0" kindref="member">_index</ref>)<sp/>&lt;=<sp/>0</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="classdragonfly_1_1parser_1_1State_1ae27a2d3769e5ff64d9dc24d69eac6864" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1State_1ae27a2d3769e5ff64d9dc24d69eac6864" kindref="member">peek</ref>(self,<sp/>length):</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a1d0e7dcd1f1a09814e3fd17d0aad69b0" kindref="member">_index</ref><sp/>==<sp/>len(self.<ref refid="classdragonfly_1_1parser_1_1State_1a65ce7b04ef8269ce5e38a88ab92bbd87" kindref="member">_data</ref>):</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a1d0e7dcd1f1a09814e3fd17d0aad69b0" kindref="member">_index</ref><sp/>+<sp/>length<sp/>&gt;<sp/>len(self.<ref refid="classdragonfly_1_1parser_1_1State_1a65ce7b04ef8269ce5e38a88ab92bbd87" kindref="member">_data</ref>):</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>len(self.<ref refid="classdragonfly_1_1parser_1_1State_1a65ce7b04ef8269ce5e38a88ab92bbd87" kindref="member">_data</ref>)<sp/>-<sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a1d0e7dcd1f1a09814e3fd17d0aad69b0" kindref="member">_index</ref></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a65ce7b04ef8269ce5e38a88ab92bbd87" kindref="member">_data</ref>[self.<ref refid="classdragonfly_1_1parser_1_1State_1a1d0e7dcd1f1a09814e3fd17d0aad69b0" kindref="member">_index</ref><sp/>:<sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a1d0e7dcd1f1a09814e3fd17d0aad69b0" kindref="member">_index</ref><sp/>+<sp/>length]</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="classdragonfly_1_1parser_1_1State_1aa6cccf26eddcf731034b19ba645df354" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1State_1aa6cccf26eddcf731034b19ba645df354" kindref="member">next</ref>(self,<sp/>length):</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a1d0e7dcd1f1a09814e3fd17d0aad69b0" kindref="member">_index</ref><sp/>==<sp/>len(self.<ref refid="classdragonfly_1_1parser_1_1State_1a65ce7b04ef8269ce5e38a88ab92bbd87" kindref="member">_data</ref>):</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a1d0e7dcd1f1a09814e3fd17d0aad69b0" kindref="member">_index</ref><sp/>+<sp/>length<sp/>&gt;<sp/>len(self.<ref refid="classdragonfly_1_1parser_1_1State_1a65ce7b04ef8269ce5e38a88ab92bbd87" kindref="member">_data</ref>):</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>len(self.<ref refid="classdragonfly_1_1parser_1_1State_1a65ce7b04ef8269ce5e38a88ab92bbd87" kindref="member">_data</ref>)<sp/>-<sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a1d0e7dcd1f1a09814e3fd17d0aad69b0" kindref="member">_index</ref></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a1d0e7dcd1f1a09814e3fd17d0aad69b0" kindref="member">_index</ref><sp/>+=<sp/>length</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a65ce7b04ef8269ce5e38a88ab92bbd87" kindref="member">_data</ref>[self.<ref refid="classdragonfly_1_1parser_1_1State_1a1d0e7dcd1f1a09814e3fd17d0aad69b0" kindref="member">_index</ref><sp/>-<sp/>length<sp/>:<sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a1d0e7dcd1f1a09814e3fd17d0aad69b0" kindref="member">_index</ref>]</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="classdragonfly_1_1parser_1_1State_1acab4e68ac76b8f7a8081c7a88ec41bcf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1State_1acab4e68ac76b8f7a8081c7a88ec41bcf" kindref="member">build_parse_tree</ref>(self):</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root,<sp/>index<sp/>=<sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a935660e345d3055379e777748f2b0bdd" kindref="member">_build_parse_node</ref>(0,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>root</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="classdragonfly_1_1parser_1_1State_1a935660e345d3055379e777748f2b0bdd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1State_1a935660e345d3055379e777748f2b0bdd" kindref="member">_build_parse_node</ref>(self,<sp/>index,<sp/>parent):</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame<sp/>=<sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1ac74a8e61a6f84d4af23e9640312c41dc" kindref="member">_stack</ref>[index]</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/><ref refid="classdragonfly_1_1parser_1_1Node" kindref="compound">Node</ref>(parent,<sp/>frame.actor,<sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a65ce7b04ef8269ce5e38a88ab92bbd87" kindref="member">_data</ref>,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame.begin,<sp/>frame.end,<sp/>frame.depth,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame.value)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>parent:</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent.add_child(node)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>index<sp/>&lt;<sp/>len(self.<ref refid="classdragonfly_1_1parser_1_1State_1ac74a8e61a6f84d4af23e9640312c41dc" kindref="member">_stack</ref>):</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1ac74a8e61a6f84d4af23e9640312c41dc" kindref="member">_stack</ref>[index].depth<sp/>!=<sp/>frame.depth<sp/>+<sp/>1:</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child,<sp/>index<sp/>=<sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a935660e345d3055379e777748f2b0bdd" kindref="member">_build_parse_node</ref>(index,<sp/>node)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node,<sp/>index</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Methods<sp/>for<sp/>tracking<sp/>parsing<sp/>of<sp/>input.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="classdragonfly_1_1parser_1_1State_1_1__Frame" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1State_1_1__Frame" kindref="compound">_Frame</ref>(object):</highlight></codeline>
<codeline lineno="206" refid="classdragonfly_1_1parser_1_1State_1_1__Frame_1a11dce98da9167e98bab5fc3df1a71582" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__slots__<sp/>=<sp/>(</highlight><highlight class="stringliteral">&quot;depth&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;actor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;begin&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="classdragonfly_1_1parser_1_1State_1_1__Frame_1a828bc7628b4553d712bfabdb2e0467e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1State_1_1__Frame_1a828bc7628b4553d712bfabdb2e0467e7" kindref="member">__init__</ref>(self,<sp/>depth,<sp/>actor,<sp/>begin):</highlight></codeline>
<codeline lineno="209" refid="classdragonfly_1_1parser_1_1State_1_1__Frame_1a4b3e86344a3b2a0f8c51fad0cedc5c91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.depth,<sp/>self.actor,<sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1_1__Frame_1a4b3e86344a3b2a0f8c51fad0cedc5c91" kindref="member">begin</ref><sp/>=<sp/>depth,<sp/>actor,<sp/>begin</highlight></codeline>
<codeline lineno="210" refid="classdragonfly_1_1parser_1_1State_1_1__Frame_1a9ac933f8860f8e17afb6d01c5b1a92d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.value,<sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1_1__Frame_1a9ac933f8860f8e17afb6d01c5b1a92d7" kindref="member">end</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="classdragonfly_1_1parser_1_1State_1a960289713e6c1d3009cfdb12abe0dc4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1State_1a960289713e6c1d3009cfdb12abe0dc4d" kindref="member">decode_attempt</ref>(self,<sp/>element):</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>assert<sp/>isinstance(element,<sp/>ParserElementBase)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a888d743afd28e5091665bdd14c875810" kindref="member">_depth</ref><sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1ac74a8e61a6f84d4af23e9640312c41dc" kindref="member">_stack</ref>.append(<ref refid="classdragonfly_1_1parser_1_1State_1_1__Frame" kindref="compound">State._Frame</ref>(self.<ref refid="classdragonfly_1_1parser_1_1State_1a888d743afd28e5091665bdd14c875810" kindref="member">_depth</ref>,<sp/>element,<sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a1d0e7dcd1f1a09814e3fd17d0aad69b0" kindref="member">_index</ref>))</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a56c462cdd23fa9e25c3f0150a0e5909a" kindref="member">_log_debug</ref>:</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a8e3c75de071ae947d1fbc53a3b8bdce5" kindref="member">_log_step</ref>(element,<sp/></highlight><highlight class="stringliteral">&quot;attempt&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="classdragonfly_1_1parser_1_1State_1af83a336ff8c9d992780ad477b8bc31b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1State_1af83a336ff8c9d992780ad477b8bc31b9" kindref="member">decode_retry</ref>(self,<sp/>element):</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>assert<sp/>isinstance(element,<sp/>ParserElementBase)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame<sp/>=<sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1aeeaff3d5153c1f464ab2fc14d3d27135" kindref="member">_get_frame_from_actor</ref>(element)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a888d743afd28e5091665bdd14c875810" kindref="member">_depth</ref><sp/>=<sp/>frame.depth</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a56c462cdd23fa9e25c3f0150a0e5909a" kindref="member">_log_debug</ref>:</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a8e3c75de071ae947d1fbc53a3b8bdce5" kindref="member">_log_step</ref>(element,<sp/></highlight><highlight class="stringliteral">&quot;retry&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="classdragonfly_1_1parser_1_1State_1aec9b24396ba3762abfff7ddf1b3a3c64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1State_1aec9b24396ba3762abfff7ddf1b3a3c64" kindref="member">decode_rollback</ref>(self,<sp/>element):</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>assert<sp/>isinstance(element,<sp/>ParserElementBase)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame<sp/>=<sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a6a5a2632281d24557e16a3dd4b2e3ca8" kindref="member">_get_frame_from_depth</ref>()</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>frame<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>frame.actor<sp/>!=<sp/>element:</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classdragonfly_1_1parser_1_1ParserError" kindref="compound">ParserError</ref>(</highlight><highlight class="stringliteral">&quot;Parser<sp/>decoding<sp/>stack<sp/>broken&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>frame<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1ac74a8e61a6f84d4af23e9640312c41dc" kindref="member">_stack</ref>[-1]:</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Last<sp/>parser<sp/>on<sp/>the<sp/>stack,<sp/>rollback.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a1d0e7dcd1f1a09814e3fd17d0aad69b0" kindref="member">_index</ref><sp/>=<sp/>frame.begin</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classdragonfly_1_1parser_1_1ParserError" kindref="compound">ParserError</ref>(</highlight><highlight class="stringliteral">&quot;Parser<sp/>decoding<sp/>stack<sp/>broken&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a56c462cdd23fa9e25c3f0150a0e5909a" kindref="member">_log_debug</ref>:</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a8e3c75de071ae947d1fbc53a3b8bdce5" kindref="member">_log_step</ref>(element,<sp/></highlight><highlight class="stringliteral">&quot;rollback&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="classdragonfly_1_1parser_1_1State_1ae58162b5a0c81d485b40cbdad261b1e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1State_1ae58162b5a0c81d485b40cbdad261b1e8" kindref="member">decode_success</ref>(self,<sp/>element,<sp/>value=None):</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>assert<sp/>isinstance(element,<sp/>ParserElementBase)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a56c462cdd23fa9e25c3f0150a0e5909a" kindref="member">_log_debug</ref>:</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a8e3c75de071ae947d1fbc53a3b8bdce5" kindref="member">_log_step</ref>(element,<sp/></highlight><highlight class="stringliteral">&quot;success&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame<sp/>=<sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a6a5a2632281d24557e16a3dd4b2e3ca8" kindref="member">_get_frame_from_depth</ref>()</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>frame<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>frame.actor<sp/>!=<sp/>element:</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classdragonfly_1_1parser_1_1ParserError" kindref="compound">ParserError</ref>(</highlight><highlight class="stringliteral">&quot;Parser<sp/>decoding<sp/>stack<sp/>broken.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame.end<sp/>=<sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a1d0e7dcd1f1a09814e3fd17d0aad69b0" kindref="member">_index</ref></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame.value<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a888d743afd28e5091665bdd14c875810" kindref="member">_depth</ref><sp/>-=<sp/>1</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="classdragonfly_1_1parser_1_1State_1a6b2f08cad9709c7dcbec73af5635f4c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1State_1a6b2f08cad9709c7dcbec73af5635f4c6" kindref="member">decode_failure</ref>(self,<sp/>element):</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>assert<sp/>isinstance(element,<sp/>ParserElementBase)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame<sp/>=<sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1ac74a8e61a6f84d4af23e9640312c41dc" kindref="member">_stack</ref>.pop()</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a1d0e7dcd1f1a09814e3fd17d0aad69b0" kindref="member">_index</ref><sp/>=<sp/>frame.begin</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a888d743afd28e5091665bdd14c875810" kindref="member">_depth</ref><sp/>=<sp/>frame.depth</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a56c462cdd23fa9e25c3f0150a0e5909a" kindref="member">_log_debug</ref>:</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a8e3c75de071ae947d1fbc53a3b8bdce5" kindref="member">_log_step</ref>(element,<sp/></highlight><highlight class="stringliteral">&quot;failure&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a888d743afd28e5091665bdd14c875810" kindref="member">_depth</ref><sp/>-=<sp/>1</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="classdragonfly_1_1parser_1_1State_1a6a5a2632281d24557e16a3dd4b2e3ca8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1State_1a6a5a2632281d24557e16a3dd4b2e3ca8" kindref="member">_get_frame_from_depth</ref>(self):</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>frame<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>reversed(self.<ref refid="classdragonfly_1_1parser_1_1State_1ac74a8e61a6f84d4af23e9640312c41dc" kindref="member">_stack</ref>):</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>frame.depth<sp/>==<sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a888d743afd28e5091665bdd14c875810" kindref="member">_depth</ref>:</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>frame</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="classdragonfly_1_1parser_1_1State_1aeeaff3d5153c1f464ab2fc14d3d27135" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1State_1aeeaff3d5153c1f464ab2fc14d3d27135" kindref="member">_get_frame_from_actor</ref>(self,<sp/>actor):</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>frame<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>reversed(self.<ref refid="classdragonfly_1_1parser_1_1State_1ac74a8e61a6f84d4af23e9640312c41dc" kindref="member">_stack</ref>):</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>frame.actor<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>actor:</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>frame</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="classdragonfly_1_1parser_1_1State_1a8e3c75de071ae947d1fbc53a3b8bdce5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1State_1a8e3c75de071ae947d1fbc53a3b8bdce5" kindref="member">_log_step</ref>(self,<sp/>parser,<sp/>message):</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indent<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>*<sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a888d743afd28e5091665bdd14c875810" kindref="member">_depth</ref></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;%s%s:<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>(indent,<sp/>message,<sp/>parser)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1ac017ae5e85d6e3fe3600f30e702c0970" kindref="member">_log</ref>.debug(output)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a1d0e7dcd1f1a09814e3fd17d0aad69b0" kindref="member">_index</ref><sp/>!=<sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a60e7113c5ff5ad9cada0e3ba44487f95" kindref="member">_previous_index</ref>:</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a60e7113c5ff5ad9cada0e3ba44487f95" kindref="member">_previous_index</ref><sp/>=<sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1a1d0e7dcd1f1a09814e3fd17d0aad69b0" kindref="member">_index</ref></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>--<sp/>Decoding<sp/>State:<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal"><sp/>%<sp/>(indent,<sp/>str(self))</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1State_1ac017ae5e85d6e3fe3600f30e702c0970" kindref="member">_log</ref>.debug(output)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="classdragonfly_1_1parser_1_1Node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Node" kindref="compound">Node</ref>(object):</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="classdragonfly_1_1parser_1_1Node_1a43cbd8572ac1872c37d4e2e858433f3e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>__slots__<sp/>=<sp/>(</highlight><highlight class="stringliteral">&quot;parent&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;children&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;actor&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;data&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;begin&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;depth&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;success_value&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="classdragonfly_1_1parser_1_1Node_1ac5d5bba5ae77213fa83666af7a750c06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Node_1ac5d5bba5ae77213fa83666af7a750c06" kindref="member">__init__</ref>(self,<sp/>parent,<sp/>actor,<sp/>data,<sp/>begin,<sp/>end,<sp/>depth,<sp/>value):</highlight></codeline>
<codeline lineno="289" refid="classdragonfly_1_1parser_1_1Node_1a89ca1f3508b590349db7b2059736bfdd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.parent,<sp/>self.actor,<sp/>self.<ref refid="classdragonfly_1_1parser_1_1Node_1a89ca1f3508b590349db7b2059736bfdd" kindref="member">data</ref><sp/>=<sp/>parent,<sp/>actor,<sp/>data</highlight></codeline>
<codeline lineno="290" refid="classdragonfly_1_1parser_1_1Node_1ac1fba2ade174240b6fabd7bdb6dd3805" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.begin,<sp/>self.end,<sp/>self.<ref refid="classdragonfly_1_1parser_1_1Node_1ac1fba2ade174240b6fabd7bdb6dd3805" kindref="member">depth</ref><sp/>=<sp/>begin,<sp/>end,<sp/>depth</highlight></codeline>
<codeline lineno="291" refid="classdragonfly_1_1parser_1_1Node_1ad2d8d2e8014c93fa0110f47de118c676" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Node_1ad2d8d2e8014c93fa0110f47de118c676" kindref="member">success_value</ref><sp/>=<sp/>value</highlight></codeline>
<codeline lineno="292" refid="classdragonfly_1_1parser_1_1Node_1a8a908ae62afd4fb9471188aff07e3835" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Node_1a8a908ae62afd4fb9471188aff07e3835" kindref="member">children</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="classdragonfly_1_1parser_1_1Node_1ae5e185a7f51fd7406e1edf8d6a36f3fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Node_1ae5e185a7f51fd7406e1edf8d6a36f3fa" kindref="member">__repr__</ref>(self):</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(self.<ref refid="classdragonfly_1_1parser_1_1Node_1a89ca1f3508b590349db7b2059736bfdd" kindref="member">data</ref>,<sp/>binary_type):</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>self.<ref refid="classdragonfly_1_1parser_1_1Node_1a89ca1f3508b590349db7b2059736bfdd" kindref="member">data</ref>.decode(locale.getpreferredencoding())</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>text_type(self.<ref refid="classdragonfly_1_1parser_1_1Node_1a89ca1f3508b590349db7b2059736bfdd" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Node:<sp/>%s,<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self.actor,<sp/>data)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="classdragonfly_1_1parser_1_1Node_1a424a17ee4921083e3e0015fb99eaad3e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Node_1a424a17ee4921083e3e0015fb99eaad3e" kindref="member">add_child</ref>(self,<sp/>child):</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Node_1a8a908ae62afd4fb9471188aff07e3835" kindref="member">children</ref>.append(child)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="classdragonfly_1_1parser_1_1Node_1ab6e3cb995ae0fa9989d1409c58748468" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Node_1ab6e3cb995ae0fa9989d1409c58748468" kindref="member">match</ref>(self):</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Node_1a89ca1f3508b590349db7b2059736bfdd" kindref="member">data</ref>[self.begin<sp/>:<sp/>self.end]</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="classdragonfly_1_1parser_1_1Node_1a2a4e929ad5ac140550243a90f6123595" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Node_1a2a4e929ad5ac140550243a90f6123595" kindref="member">value</ref>(self):</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Node_1ad2d8d2e8014c93fa0110f47de118c676" kindref="member">success_value</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Node_1ad2d8d2e8014c93fa0110f47de118c676" kindref="member">success_value</ref></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.actor.<ref refid="classdragonfly_1_1parser_1_1Node_1a2a4e929ad5ac140550243a90f6123595" kindref="member">value</ref>(self)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="classdragonfly_1_1parser_1_1Node_1abc32aa45dd0c2453172d5fb80957f807" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Node_1abc32aa45dd0c2453172d5fb80957f807" kindref="member">get_children</ref>(self,<sp/>name=None,<sp/>actor_type=None,<sp/>shallow=True):</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>child<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Node_1a8a908ae62afd4fb9471188aff07e3835" kindref="member">children</ref>:</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>name<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>child.actor.name<sp/>==<sp/>name)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>actor_type<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>isinstance(child.actor,<sp/>actor_type))):</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found.append(child)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>shallow<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>child.actor.name:</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found.extend(child.get_children(name=name,<sp/>actor_type=actor_type,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shallow=shallow))</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>found</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="classdragonfly_1_1parser_1_1Node_1a531af5cffa79a9b56f878ddd796f87e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Node_1a531af5cffa79a9b56f878ddd796f87e2" kindref="member">get_child</ref>(self,<sp/>name=None,<sp/>actor_type=None,<sp/>shallow=True):</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>child<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Node_1a8a908ae62afd4fb9471188aff07e3835" kindref="member">children</ref>:</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>name<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>child.actor.name<sp/>==<sp/>name)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>actor_type<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>isinstance(child.actor,<sp/>actor_type))):</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>child</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>shallow<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>child.actor.name:</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>child.get_child(name=name,<sp/>actor_type=actor_type,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shallow=shallow)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>result:</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="classdragonfly_1_1parser_1_1Node_1af4c292fb731b85fce50e2e5a3db6f682" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Node_1af4c292fb731b85fce50e2e5a3db6f682" kindref="member">pretty_string</ref>(self,<sp/>indent=&quot;&quot;):</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Node_1a8a908ae62afd4fb9471188aff07e3835" kindref="member">children</ref>:</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;%s%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>(indent,<sp/>str(self))</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;%s%s\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>(indent,<sp/>str(self))<sp/>+</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">.join([n<sp/><sp/>.<ref refid="classdragonfly_1_1parser_1_1Node_1af4c292fb731b85fce50e2e5a3db6f682" kindref="member">pretty_string</ref>(indent<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>n<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Node_1a8a908ae62afd4fb9471188aff07e3835" kindref="member">children</ref>]))</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Element<sp/>base<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="classdragonfly_1_1parser_1_1ParserElementBase" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1ParserElementBase" kindref="compound">ParserElementBase</ref>(object):</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="classdragonfly_1_1parser_1_1ParserElementBase_1aa1ff390bf5e884177e2202a93d3614a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1ParserElementBase_1aa1ff390bf5e884177e2202a93d3614a5" kindref="member">__init__</ref>(self,<sp/>name=None):</highlight></codeline>
<codeline lineno="353" refid="classdragonfly_1_1parser_1_1ParserElementBase_1a109df787d791a869e1f276f8d9daace2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1ParserElementBase_1a109df787d791a869e1f276f8d9daace2" kindref="member">_name</ref><sp/>=<sp/>name</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Methods<sp/>for<sp/>runtime<sp/>introspection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="classdragonfly_1_1parser_1_1ParserElementBase_1a4b1466b45c10811c34e3a7c1ed57bac6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1ParserElementBase_1a4b1466b45c10811c34e3a7c1ed57bac6" kindref="member">_str</ref>(self,<sp/>argument):</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1ParserElementBase_1a109df787d791a869e1f276f8d9daace2" kindref="member">_name</ref>:</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;%s(%s)&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self.<ref refid="classdragonfly_1_1parser_1_1ParserElementBase_1a109df787d791a869e1f276f8d9daace2" kindref="member">_name</ref>,<sp/>argument)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;%s(%s)&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self.__class__.__name__,<sp/>argument)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="classdragonfly_1_1parser_1_1ParserElementBase_1ad416e0d8d8671076e5dd6f4a4a341460" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1ParserElementBase_1ad416e0d8d8671076e5dd6f4a4a341460" kindref="member">__repr__</ref>(self):</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1ParserElementBase_1a4b1466b45c10811c34e3a7c1ed57bac6" kindref="member">_str</ref>(</highlight><highlight class="stringliteral">&quot;...&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367" refid="classdragonfly_1_1parser_1_1ParserElementBase_1a7a4d0aead4bf527b6bcdd1073e6cf93b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/>property(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>self:<sp/>self.<ref refid="classdragonfly_1_1parser_1_1ParserElementBase_1a109df787d791a869e1f276f8d9daace2" kindref="member">_name</ref>,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;Read-only<sp/>access<sp/>to<sp/>name<sp/>attribute.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370" refid="classdragonfly_1_1parser_1_1ParserElementBase_1a84d15b3b2aa4a9a5bf0e0bfb42c31a21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1ParserElementBase_1a84d15b3b2aa4a9a5bf0e0bfb42c31a21" kindref="member">_get_children</ref>(self):</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>()</highlight></codeline>
<codeline lineno="372" refid="classdragonfly_1_1parser_1_1ParserElementBase_1af3eeea42ce234398557ba35ef366542c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>children<sp/>=<sp/>property(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>self:<sp/>self.<ref refid="classdragonfly_1_1parser_1_1ParserElementBase_1a84d15b3b2aa4a9a5bf0e0bfb42c31a21" kindref="member">_get_children</ref>(),</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;Generalized<sp/>access<sp/>to<sp/>child<sp/>elements.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Methods<sp/>for<sp/>runtime<sp/>recognition<sp/>processing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="classdragonfly_1_1parser_1_1ParserElementBase_1a25ccc5def43c4d039d81f443dca2c523" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1ParserElementBase_1a25ccc5def43c4d039d81f443dca2c523" kindref="member">parse</ref>(self,<sp/>state):</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;Call<sp/>to<sp/>virtual<sp/>method<sp/>parse()&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>class<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>self)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382" refid="classdragonfly_1_1parser_1_1ParserElementBase_1aec3d5d93e2e09f9dbf81256783621e41" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1ParserElementBase_1aec3d5d93e2e09f9dbf81256783621e41" kindref="member">value</ref>(self,<sp/>node):</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node.match()</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Basic<sp/>structural<sp/>element<sp/>classes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="classdragonfly_1_1parser_1_1Sequence" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Sequence" kindref="compound">Sequence</ref>(<ref refid="classdragonfly_1_1parser_1_1ParserElementBase" kindref="compound">ParserElementBase</ref>):</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="classdragonfly_1_1parser_1_1Sequence_1a6c13cf02b3a7f1f575a86e870068d296" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Sequence_1a6c13cf02b3a7f1f575a86e870068d296" kindref="member">__init__</ref>(self,<sp/>children=(),<sp/>name=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParserElementBase.__init__(self,<sp/>name)</highlight></codeline>
<codeline lineno="393" refid="classdragonfly_1_1parser_1_1Sequence_1ab28b34d90b465ad533fdefa0f0f3913c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Sequence_1ab28b34d90b465ad533fdefa0f0f3913c" kindref="member">_children</ref><sp/>=<sp/>children</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Methods<sp/>for<sp/>runtime<sp/>introspection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398" refid="classdragonfly_1_1parser_1_1Sequence_1a7825560a3fd4990f746f528855acccee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Sequence_1a7825560a3fd4990f746f528855acccee" kindref="member">__repr__</ref>(self):</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1ParserElementBase_1a4b1466b45c10811c34e3a7c1ed57bac6" kindref="member">_str</ref>(</highlight><highlight class="stringliteral">&quot;%d<sp/>children&quot;</highlight><highlight class="normal"><sp/>%<sp/>len(self.<ref refid="classdragonfly_1_1parser_1_1Sequence_1ab28b34d90b465ad533fdefa0f0f3913c" kindref="member">_children</ref>))</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401" refid="classdragonfly_1_1parser_1_1Sequence_1a4a0b448f48da22a061fc78a8a58a4a58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Sequence_1a4a0b448f48da22a061fc78a8a58a4a58" kindref="member">_get_children</ref>(self):</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Sequence_1ab28b34d90b465ad533fdefa0f0f3913c" kindref="member">_children</ref></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="405" refid="classdragonfly_1_1parser_1_1Sequence_1a92f8603966c06b62e95778fda00b1e8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Sequence_1a92f8603966c06b62e95778fda00b1e8e" kindref="member">child_list</ref>(self):</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Sequence_1ab28b34d90b465ad533fdefa0f0f3913c" kindref="member">_children</ref></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Methods<sp/>for<sp/>runtime<sp/>recognition<sp/>processing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="classdragonfly_1_1parser_1_1Sequence_1ac6b88f050bc785661dae2ac5c50d2dc8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Sequence_1ac6b88f050bc785661dae2ac5c50d2dc8" kindref="member">parse</ref>(self,<sp/>state):</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_attempt(self)</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Special<sp/>case<sp/>for<sp/>an<sp/>empty<sp/>sequence.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Sequence_1ab28b34d90b465ad533fdefa0f0f3913c" kindref="member">_children</ref>:</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_success(self)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>state</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_retry(self)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_failure(self)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Attempt<sp/>to<sp/>walk<sp/>a<sp/>path<sp/>through<sp/>the<sp/>entire<sp/>sequence<sp/>of<sp/>children</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>so<sp/>that<sp/>each<sp/>one<sp/>decodes<sp/>successfully.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/>[self.<ref refid="classdragonfly_1_1parser_1_1Sequence_1ab28b34d90b465ad533fdefa0f0f3913c" kindref="member">_children</ref>[0].<ref refid="classdragonfly_1_1parser_1_1Sequence_1ac6b88f050bc785661dae2ac5c50d2dc8" kindref="member">parse</ref>(state)]</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>path:</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Allow<sp/>the<sp/>last<sp/>child<sp/>to<sp/>attempt<sp/>decoding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next(path[-1])</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>StopIteration:</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Last<sp/>child<sp/>failed<sp/>to<sp/>decode,<sp/>remove<sp/>from<sp/>path<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>allowed<sp/>the<sp/>one-before-last<sp/>child<sp/>to<sp/>reattempt.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.pop()</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Last<sp/>child<sp/>successfully<sp/>decoded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(path)<sp/>&lt;<sp/>len(self.<ref refid="classdragonfly_1_1parser_1_1Sequence_1ab28b34d90b465ad533fdefa0f0f3913c" kindref="member">_children</ref>):</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Sequence<sp/>not<sp/>yet<sp/>complete,<sp/>append<sp/>the<sp/>next<sp/>child.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.append(self.<ref refid="classdragonfly_1_1parser_1_1Sequence_1ab28b34d90b465ad533fdefa0f0f3913c" kindref="member">_children</ref>[len(path)].<ref refid="classdragonfly_1_1parser_1_1Sequence_1ac6b88f050bc785661dae2ac5c50d2dc8" kindref="member">parse</ref>(state))</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Sequence<sp/>complete,<sp/>all<sp/>children<sp/>decoded<sp/>successfully.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_success(self)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>state</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_retry(self)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Sequence<sp/>of<sp/>children<sp/>could<sp/>not<sp/>all<sp/>decode<sp/>successfully:<sp/>failure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_failure(self)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="classdragonfly_1_1parser_1_1Sequence_1a821bde69a7ed2a1c4da0bd98f953e62b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Sequence_1a821bde69a7ed2a1c4da0bd98f953e62b" kindref="member">value</ref>(self,<sp/>node):</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[c.value()<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>node.children]</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454" refid="classdragonfly_1_1parser_1_1Repetition" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Repetition" kindref="compound">Repetition</ref>(<ref refid="classdragonfly_1_1parser_1_1ParserElementBase" kindref="compound">ParserElementBase</ref>):</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456" refid="classdragonfly_1_1parser_1_1Repetition_1ad22d5ca855dfdcb60799bce8fccecfa1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Repetition_1ad22d5ca855dfdcb60799bce8fccecfa1" kindref="member">__init__</ref>(self,<sp/>child,<sp/>min=1,<sp/>max=None,<sp/>name=None):</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParserElementBase.__init__(self,<sp/>name)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(child,<sp/>ParserElementBase):</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;Child<sp/>%s<sp/>must<sp/>be<sp/>a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>ParserElementBase<sp/>instance.&quot;</highlight><highlight class="normal"><sp/>%<sp/>child)</highlight></codeline>
<codeline lineno="462" refid="classdragonfly_1_1parser_1_1Repetition_1a477fc7d3003fe60a99d829a9b2ef81ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Repetition_1a477fc7d3003fe60a99d829a9b2ef81ed" kindref="member">_child</ref><sp/>=<sp/>child</highlight></codeline>
<codeline lineno="463" refid="classdragonfly_1_1parser_1_1Repetition_1ad6ee5a36f4850e7b21fb6db63ffd1f90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Repetition_1ad6ee5a36f4850e7b21fb6db63ffd1f90" kindref="member">_min</ref><sp/>=<sp/>min</highlight></codeline>
<codeline lineno="464" refid="classdragonfly_1_1parser_1_1Repetition_1aca7ce515894289e82a253562f3d86d0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Repetition_1aca7ce515894289e82a253562f3d86d0b" kindref="member">_max</ref><sp/>=<sp/>max</highlight></codeline>
<codeline lineno="465" refid="classdragonfly_1_1parser_1_1Repetition_1a6eb59928620dca06ee16f642039faad6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Repetition_1a6eb59928620dca06ee16f642039faad6" kindref="member">_greedy</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Methods<sp/>for<sp/>runtime<sp/>introspection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470" refid="classdragonfly_1_1parser_1_1Repetition_1a00ca60d864430be34c03645bdb6f91bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Repetition_1a00ca60d864430be34c03645bdb6f91bb" kindref="member">__repr__</ref>(self):</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1ParserElementBase_1a4b1466b45c10811c34e3a7c1ed57bac6" kindref="member">_str</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473" refid="classdragonfly_1_1parser_1_1Repetition_1a13c03583205e637cab5268f4e46ffa7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Repetition_1a13c03583205e637cab5268f4e46ffa7c" kindref="member">_get_children</ref>(self):</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(self.<ref refid="classdragonfly_1_1parser_1_1Repetition_1a477fc7d3003fe60a99d829a9b2ef81ed" kindref="member">_child</ref>,<sp/>)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Methods<sp/>for<sp/>runtime<sp/>recognition<sp/>processing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479" refid="classdragonfly_1_1parser_1_1Repetition_1ad103f084fff6c11424f36e9607c9e772" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Repetition_1ad103f084fff6c11424f36e9607c9e772" kindref="member">parse</ref>(self,<sp/>state):</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_attempt(self)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Attempt<sp/>to<sp/>walk<sp/>a<sp/>path<sp/>through<sp/>the<sp/>entire<sp/>sequence<sp/>of<sp/>children</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>so<sp/>that<sp/>each<sp/>one<sp/>decodes<sp/>successfully.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/>[self.<ref refid="classdragonfly_1_1parser_1_1Repetition_1a477fc7d3003fe60a99d829a9b2ef81ed" kindref="member">_child</ref>.<ref refid="classdragonfly_1_1parser_1_1Repetition_1ad103f084fff6c11424f36e9607c9e772" kindref="member">parse</ref>(state)]</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>path:</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Allow<sp/>the<sp/>last<sp/>child<sp/>to<sp/>attempt<sp/>decoding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next(path[-1])</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>StopIteration:</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Last<sp/>child<sp/>failed<sp/>to<sp/>decode,<sp/>remove<sp/>from<sp/>path<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>allow<sp/>the<sp/>one-before-last<sp/>child<sp/>to<sp/>reattempt.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.pop()</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Repetition_1a6eb59928620dca06ee16f642039faad6" kindref="member">_greedy</ref><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>len(path)<sp/>&gt;=<sp/>self.<ref refid="classdragonfly_1_1parser_1_1Repetition_1ad6ee5a36f4850e7b21fb6db63ffd1f90" kindref="member">_min</ref>:</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Path<sp/>long<sp/>enough,<sp/>yield<sp/>success.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_success(self)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>state</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_retry(self)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Last<sp/>child<sp/>successfully<sp/>decoded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Repetition_1aca7ce515894289e82a253562f3d86d0b" kindref="member">_max</ref><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>len(path)<sp/>&lt;<sp/>self.<ref refid="classdragonfly_1_1parser_1_1Repetition_1aca7ce515894289e82a253562f3d86d0b" kindref="member">_max</ref>:</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Repetition_1a6eb59928620dca06ee16f642039faad6" kindref="member">_greedy</ref><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>len(path)<sp/>&gt;=<sp/>self.<ref refid="classdragonfly_1_1parser_1_1Repetition_1ad6ee5a36f4850e7b21fb6db63ffd1f90" kindref="member">_min</ref>:</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Path<sp/>long<sp/>enough,<sp/>yield<sp/>success.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_success(self)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>state</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_retry(self)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Path<sp/>not<sp/>too<sp/>long,<sp/>append<sp/>the<sp/>next<sp/>child.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.append(self.<ref refid="classdragonfly_1_1parser_1_1Repetition_1a477fc7d3003fe60a99d829a9b2ef81ed" kindref="member">_child</ref>.<ref refid="classdragonfly_1_1parser_1_1Repetition_1ad103f084fff6c11424f36e9607c9e772" kindref="member">parse</ref>(state))</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Path<sp/>length<sp/>at<sp/>maximum,<sp/>yield<sp/>success.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_success(self)</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>state</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_retry(self)</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Sequence<sp/>of<sp/>children<sp/>could<sp/>not<sp/>all<sp/>decode<sp/>successfully:<sp/>failure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_failure(self)</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520" refid="classdragonfly_1_1parser_1_1Repetition_1ab68f6a7eb45cf10fedd21139070cb3e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Repetition_1ab68f6a7eb45cf10fedd21139070cb3e7" kindref="member">value</ref>(self,<sp/>node):</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[c.value()<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>node.children]</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526" refid="classdragonfly_1_1parser_1_1Alternative" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Alternative" kindref="compound">Alternative</ref>(<ref refid="classdragonfly_1_1parser_1_1ParserElementBase" kindref="compound">ParserElementBase</ref>):</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528" refid="classdragonfly_1_1parser_1_1Alternative_1ac8175d70497abe32777458aa15b935d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Alternative_1ac8175d70497abe32777458aa15b935d3" kindref="member">__init__</ref>(self,<sp/>children=(),<sp/>name=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParserElementBase.__init__(self,<sp/>name)</highlight></codeline>
<codeline lineno="530" refid="classdragonfly_1_1parser_1_1Alternative_1a5f5587d749f2c505588ef50a6814191b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Alternative_1a5f5587d749f2c505588ef50a6814191b" kindref="member">_children</ref><sp/>=<sp/>list(children)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Methods<sp/>for<sp/>runtime<sp/>introspection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535" refid="classdragonfly_1_1parser_1_1Alternative_1a136490f9e0c947a646d21738bcb54bd0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Alternative_1a136490f9e0c947a646d21738bcb54bd0" kindref="member">__repr__</ref>(self):</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1ParserElementBase_1a4b1466b45c10811c34e3a7c1ed57bac6" kindref="member">_str</ref>(</highlight><highlight class="stringliteral">&quot;%d<sp/>children&quot;</highlight><highlight class="normal"><sp/>%<sp/>len(self.<ref refid="classdragonfly_1_1parser_1_1Alternative_1a5f5587d749f2c505588ef50a6814191b" kindref="member">_children</ref>))</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538" refid="classdragonfly_1_1parser_1_1Alternative_1a9df3a433495b5cafe6f29e0d02791b8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Alternative_1a9df3a433495b5cafe6f29e0d02791b8f" kindref="member">_get_children</ref>(self):</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tuple(self.<ref refid="classdragonfly_1_1parser_1_1Alternative_1a5f5587d749f2c505588ef50a6814191b" kindref="member">_children</ref>)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="542" refid="classdragonfly_1_1parser_1_1Alternative_1a636dbd41932652b7f7314e33fa6a5b98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Alternative_1a636dbd41932652b7f7314e33fa6a5b98" kindref="member">child_list</ref>(self):</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Alternative_1a5f5587d749f2c505588ef50a6814191b" kindref="member">_children</ref></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Methods<sp/>for<sp/>runtime<sp/>recognition<sp/>processing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548" refid="classdragonfly_1_1parser_1_1Alternative_1a8dfa68eb0d93b63fd70db53c48b010f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Alternative_1a8dfa68eb0d93b63fd70db53c48b010f9" kindref="member">parse</ref>(self,<sp/>state):</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_attempt(self)</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Special<sp/>case<sp/>for<sp/>an<sp/>empty<sp/>list<sp/>of<sp/>alternatives.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Alternative_1a5f5587d749f2c505588ef50a6814191b" kindref="member">_children</ref>:</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_success(self)</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>state</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_retry(self)</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_failure(self)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Iterate<sp/>through<sp/>the<sp/>children.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>child<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Alternative_1a5f5587d749f2c505588ef50a6814191b" kindref="member">_children</ref>:</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Iterate<sp/>through<sp/>this<sp/>child&apos;s<sp/>possible<sp/>decoding<sp/>states.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>result<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>child.parse(state):</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_success(self)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>state</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_retry(self)</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Rollback<sp/>to<sp/>the<sp/>alternative&apos;s<sp/>original<sp/>state,<sp/>so<sp/>that<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>next<sp/>child<sp/>starts<sp/>decoding<sp/>without<sp/>interference<sp/>from<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>previous<sp/>child.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_rollback(self)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>None<sp/>of<sp/>the<sp/>children<sp/>could<sp/>decode<sp/>successfully:<sp/>failure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_failure(self)</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577" refid="classdragonfly_1_1parser_1_1Alternative_1a618188f3ca3d5855c0ac411e58bbae15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Alternative_1a618188f3ca3d5855c0ac411e58bbae15" kindref="member">value</ref>(self,<sp/>node):</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node.children[0].<ref refid="classdragonfly_1_1parser_1_1Alternative_1a618188f3ca3d5855c0ac411e58bbae15" kindref="member">value</ref>()</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583" refid="classdragonfly_1_1parser_1_1Optional" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Optional" kindref="compound">Optional</ref>(<ref refid="classdragonfly_1_1parser_1_1ParserElementBase" kindref="compound">ParserElementBase</ref>):</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585" refid="classdragonfly_1_1parser_1_1Optional_1acaaf20cccb17ad943b17fec620691ff5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Optional_1acaaf20cccb17ad943b17fec620691ff5" kindref="member">__init__</ref>(self,<sp/>child,<sp/>greedy=True,<sp/>name=None):</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParserElementBase.__init__(self,<sp/>name)</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(child,<sp/>ParserElementBase):</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;Child<sp/>%s<sp/>must<sp/>be<sp/>a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>ParserElementBase<sp/>instance.&quot;</highlight><highlight class="normal"><sp/>%<sp/>child)</highlight></codeline>
<codeline lineno="591" refid="classdragonfly_1_1parser_1_1Optional_1a808bf5f07739aaa5685e03ee095573ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Optional_1a808bf5f07739aaa5685e03ee095573ff" kindref="member">_child</ref><sp/>=<sp/>child</highlight></codeline>
<codeline lineno="592" refid="classdragonfly_1_1parser_1_1Optional_1a48ae22a5657bd9dd11b5e47d9c1c8c9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Optional_1a48ae22a5657bd9dd11b5e47d9c1c8c9e" kindref="member">_greedy</ref><sp/>=<sp/>greedy</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Methods<sp/>for<sp/>runtime<sp/>introspection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597" refid="classdragonfly_1_1parser_1_1Optional_1ab0ea23f549867cd4012a1237962de478" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Optional_1ab0ea23f549867cd4012a1237962de478" kindref="member">__repr__</ref>(self):</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1ParserElementBase_1a4b1466b45c10811c34e3a7c1ed57bac6" kindref="member">_str</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600" refid="classdragonfly_1_1parser_1_1Optional_1ac243ab0871abf55d78027af267351146" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Optional_1ac243ab0871abf55d78027af267351146" kindref="member">_get_children</ref>(self):</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(self.<ref refid="classdragonfly_1_1parser_1_1Optional_1a808bf5f07739aaa5685e03ee095573ff" kindref="member">_child</ref>,<sp/>)</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Methods<sp/>for<sp/>runtime<sp/>recognition<sp/>processing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606" refid="classdragonfly_1_1parser_1_1Optional_1ac1b105ca883805866c4979319313f4a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Optional_1ac1b105ca883805866c4979319313f4a4" kindref="member">parse</ref>(self,<sp/>state):</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_attempt(self)</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>in<sp/>greedy<sp/>mode,<sp/>allow<sp/>the<sp/>child<sp/>to<sp/>decode<sp/>before.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Optional_1a48ae22a5657bd9dd11b5e47d9c1c8c9e" kindref="member">_greedy</ref>:</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>result<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Optional_1a808bf5f07739aaa5685e03ee095573ff" kindref="member">_child</ref>.<ref refid="classdragonfly_1_1parser_1_1Optional_1ac1b105ca883805866c4979319313f4a4" kindref="member">parse</ref>(state):</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_success(self)</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>state</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_retry(self)</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Rollback<sp/>decoding<sp/>so<sp/>that<sp/>the<sp/>null-decode<sp/>can<sp/>be<sp/>yielded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_rollback(self)</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Yield<sp/>the<sp/>null-decode<sp/>possibility.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_success(self)</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>state</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_retry(self)</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>not<sp/>in<sp/>greedy<sp/>mode,<sp/>allow<sp/>the<sp/>child<sp/>to<sp/>decode<sp/>after.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Optional_1a48ae22a5657bd9dd11b5e47d9c1c8c9e" kindref="member">_greedy</ref>:</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Rollback<sp/>decoding<sp/>after<sp/>null-decode.<sp/><sp/>Perhaps<sp/>not<sp/>absolutely</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>necessary,<sp/>but<sp/>should<sp/>be<sp/>done<sp/>for<sp/>good<sp/>form.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_rollback(self)</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>result<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Optional_1a808bf5f07739aaa5685e03ee095573ff" kindref="member">_child</ref>.<ref refid="classdragonfly_1_1parser_1_1Optional_1ac1b105ca883805866c4979319313f4a4" kindref="member">parse</ref>(state):</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_success(self)</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>state</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_retry(self)</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>No<sp/>more<sp/>decoding<sp/>possibilities<sp/>available,<sp/>failure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_failure(self)</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639" refid="classdragonfly_1_1parser_1_1Optional_1ab06ee6398cca988b2713420cdfc0d069" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Optional_1ab06ee6398cca988b2713420cdfc0d069" kindref="member">value</ref>(self,<sp/>node):</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>node.children:</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node.children[0].<ref refid="classdragonfly_1_1parser_1_1Optional_1ab06ee6398cca988b2713420cdfc0d069" kindref="member">value</ref>()</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="comment">#===========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648" refid="classdragonfly_1_1parser_1_1String" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1String" kindref="compound">String</ref>(<ref refid="classdragonfly_1_1parser_1_1ParserElementBase" kindref="compound">ParserElementBase</ref>):</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="650"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parser<sp/>element<sp/>for<sp/>static<sp/>strings.</highlight></codeline>
<codeline lineno="651"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="652"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Usage<sp/>examples:</highlight></codeline>
<codeline lineno="653"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>def<sp/>parse_multiple(element,<sp/>input):</highlight></codeline>
<codeline lineno="654"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...<sp/><sp/><sp/><sp/><sp/>parser<sp/>=<sp/>Parser(element)</highlight></codeline>
<codeline lineno="655"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...<sp/><sp/><sp/><sp/><sp/>return<sp/>parser.parse_multiple(input,<sp/>must_finish=False)</highlight></codeline>
<codeline lineno="656"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parse_multiple(String(&quot;foo&quot;),<sp/>&quot;foo&quot;)</highlight></codeline>
<codeline lineno="657"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&apos;foo&apos;]</highlight></codeline>
<codeline lineno="658"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parse_multiple(String(&quot;foo&quot;),<sp/>&quot;foobar&quot;)</highlight></codeline>
<codeline lineno="659"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&apos;foo&apos;]</highlight></codeline>
<codeline lineno="660"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parse_multiple(String(&quot;\n\t<sp/>&quot;),<sp/>&quot;\n\t<sp/>foo&quot;)</highlight></codeline>
<codeline lineno="661"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&apos;\n\t<sp/>&apos;]</highlight></codeline>
<codeline lineno="662"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parse_multiple(String(&quot;foo&quot;),<sp/>&quot;bar&quot;)</highlight></codeline>
<codeline lineno="663"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[]</highlight></codeline>
<codeline lineno="664"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parse_multiple(String(&quot;foo&quot;),<sp/>&quot;<sp/>foo&quot;)</highlight></codeline>
<codeline lineno="665"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[]</highlight></codeline>
<codeline lineno="666"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="667"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669" refid="classdragonfly_1_1parser_1_1String_1a5a629cda904f7ca83e949d0143005154" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1String_1a5a629cda904f7ca83e949d0143005154" kindref="member">__init__</ref>(self,<sp/>string,<sp/>name=None):</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParserElementBase.__init__(self,<sp/>name)</highlight></codeline>
<codeline lineno="671" refid="classdragonfly_1_1parser_1_1String_1a914af86d2f6750edb21e3cba7e244699" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1String_1a914af86d2f6750edb21e3cba7e244699" kindref="member">_string</ref><sp/>=<sp/>string</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Methods<sp/>for<sp/>runtime<sp/>introspection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676" refid="classdragonfly_1_1parser_1_1String_1af65aceb3d1f63660f58b05acc3d01fb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1String_1af65aceb3d1f63660f58b05acc3d01fb9" kindref="member">__repr__</ref>(self):</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1ParserElementBase_1a4b1466b45c10811c34e3a7c1ed57bac6" kindref="member">_str</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.<ref refid="classdragonfly_1_1parser_1_1String_1a914af86d2f6750edb21e3cba7e244699" kindref="member">_string</ref>)</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Methods<sp/>for<sp/>runtime<sp/>recognition<sp/>processing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682" refid="classdragonfly_1_1parser_1_1String_1af9b6cb93ca246b9b38bb498bc90b636c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1String_1af9b6cb93ca246b9b38bb498bc90b636c" kindref="member">parse</ref>(self,<sp/>state):</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_attempt(self)</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>if<sp/>the<sp/>next<sp/>characters<sp/>match<sp/>the<sp/>target<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>state.next(len(self.<ref refid="classdragonfly_1_1parser_1_1String_1a914af86d2f6750edb21e3cba7e244699" kindref="member">_string</ref>))<sp/>==<sp/>self.<ref refid="classdragonfly_1_1parser_1_1String_1a914af86d2f6750edb21e3cba7e244699" kindref="member">_string</ref>:</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_success(self)</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>state</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_retry(self)</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_failure(self)</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697" refid="classdragonfly_1_1parser_1_1CharacterSeries" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1CharacterSeries" kindref="compound">CharacterSeries</ref>(<ref refid="classdragonfly_1_1parser_1_1ParserElementBase" kindref="compound">ParserElementBase</ref>):</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="699"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Class<sp/>for<sp/>parsing<sp/>from<sp/>a<sp/>character<sp/>series<sp/>or<sp/>pattern.</highlight></codeline>
<codeline lineno="700"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702" refid="classdragonfly_1_1parser_1_1CharacterSeries_1a23f357f50b799034ab77312c33ffdb19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1CharacterSeries_1a23f357f50b799034ab77312c33ffdb19" kindref="member">__init__</ref>(self,<sp/>set,<sp/>optional=False,<sp/>exclude=False,<sp/>name=None,</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern=None):</highlight></codeline>
<codeline lineno="704" refid="classdragonfly_1_1parser_1_1CharacterSeries_1a0317856660b48678f5a3716f556c6685" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParserElementBase.__init__(self,<sp/>name)</highlight></codeline>
<codeline lineno="705" refid="classdragonfly_1_1parser_1_1CharacterSeries_1ac0f4a7b1c8a97aa3c86b65fc3724da46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1CharacterSeries_1a0317856660b48678f5a3716f556c6685" kindref="member">_set</ref><sp/>=<sp/>set</highlight></codeline>
<codeline lineno="706" refid="classdragonfly_1_1parser_1_1CharacterSeries_1a483a8e2b9965679784caeb9ed16b3896" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1CharacterSeries_1ac0f4a7b1c8a97aa3c86b65fc3724da46" kindref="member">_optional</ref><sp/>=<sp/>optional</highlight></codeline>
<codeline lineno="707" refid="classdragonfly_1_1parser_1_1CharacterSeries_1aa5358233e936591ce12a27ba87f2422f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1CharacterSeries_1a483a8e2b9965679784caeb9ed16b3896" kindref="member">_exclude</ref><sp/>=<sp/>exclude</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1CharacterSeries_1aa5358233e936591ce12a27ba87f2422f" kindref="member">_pattern</ref><sp/>=<sp/>pattern</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Methods<sp/>for<sp/>runtime<sp/>introspection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713" refid="classdragonfly_1_1parser_1_1CharacterSeries_1a78a84006101f9fea6574f528efc66144" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1CharacterSeries_1a78a84006101f9fea6574f528efc66144" kindref="member">__repr__</ref>(self):</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1ParserElementBase_1a4b1466b45c10811c34e3a7c1ed57bac6" kindref="member">_str</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.<ref refid="classdragonfly_1_1parser_1_1CharacterSeries_1a0317856660b48678f5a3716f556c6685" kindref="member">_set</ref>)</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Methods<sp/>for<sp/>runtime<sp/>recognition<sp/>processing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719" refid="classdragonfly_1_1parser_1_1CharacterSeries_1a4d71c587f737b4e23b6d550fb03356e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1CharacterSeries_1a4d71c587f737b4e23b6d550fb03356e0" kindref="member">char_matches</ref>(self,<sp/>c):</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1CharacterSeries_1a0317856660b48678f5a3716f556c6685" kindref="member">_set</ref>:</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1CharacterSeries_1a0317856660b48678f5a3716f556c6685" kindref="member">_set</ref></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1CharacterSeries_1aa5358233e936591ce12a27ba87f2422f" kindref="member">_pattern</ref>:</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bool(self.<ref refid="classdragonfly_1_1parser_1_1CharacterSeries_1aa5358233e936591ce12a27ba87f2422f" kindref="member">_pattern</ref>.<ref refid="namespaceconf_1a41bb69232c581f47d2c2a4fbf28dd3aa" kindref="member">match</ref>(c))</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727" refid="classdragonfly_1_1parser_1_1CharacterSeries_1a65fa50dfeaf607e28ed4e9cb38f8d374" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1CharacterSeries_1a65fa50dfeaf607e28ed4e9cb38f8d374" kindref="member">parse</ref>(self,<sp/>state):</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_attempt(self)</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Gobble<sp/>as<sp/>many<sp/>valid<sp/>characters<sp/>as<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1CharacterSeries_1a483a8e2b9965679784caeb9ed16b3896" kindref="member">_exclude</ref>:</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>state.finished()<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1CharacterSeries_1a4d71c587f737b4e23b6d550fb03356e0" kindref="member">char_matches</ref>(state.peek(1))):</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.next(1)</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>state.finished()<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1CharacterSeries_1a4d71c587f737b4e23b6d550fb03356e0" kindref="member">char_matches</ref>(state.peek(1))):</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.next(1)</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1CharacterSeries_1ac0f4a7b1c8a97aa3c86b65fc3724da46" kindref="member">_optional</ref><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>count<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_success(self)</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>state</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_retry(self)</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_failure(self)</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754" refid="classdragonfly_1_1parser_1_1Choice" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Choice" kindref="compound">Choice</ref>(<ref refid="classdragonfly_1_1parser_1_1Alternative" kindref="compound">Alternative</ref>):</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756" refid="classdragonfly_1_1parser_1_1Choice_1adec0c2fb33c0a316d140deaef0704fcc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Choice_1adec0c2fb33c0a316d140deaef0704fcc" kindref="member">__init__</ref>(self,<sp/>choices,<sp/>name=None):</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>choice_pairs<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>choice_elements<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>key,<sp/>value<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>choices.items():</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(key,<sp/>string_types):</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element<sp/>=<sp/><ref refid="classdragonfly_1_1parser_1_1String" kindref="compound">String</ref>(key)</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(key,<sp/>ParserElementBase):</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element<sp/>=<sp/>key</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>choice<sp/>key:<sp/>%r&quot;</highlight><highlight class="normal"><sp/>%<sp/>key)</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>choice_pairs.append((element,<sp/>value))</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>choice_elements.append(element)</highlight></codeline>
<codeline lineno="768" refid="classdragonfly_1_1parser_1_1Choice_1a796cb7d2c1b47f9c30377fefa0efca8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Choice_1a796cb7d2c1b47f9c30377fefa0efca8b" kindref="member">_choice_pairs</ref><sp/>=<sp/>choice_pairs</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Alternative.__init__(self,<sp/>choice_elements,<sp/>name)</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Methods<sp/>for<sp/>runtime<sp/>introspection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774" refid="classdragonfly_1_1parser_1_1Choice_1aac339dbce4cc8cdbdb49b735292587d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Choice_1aac339dbce4cc8cdbdb49b735292587d9" kindref="member">__repr__</ref>(self):</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1ParserElementBase_1a4b1466b45c10811c34e3a7c1ed57bac6" kindref="member">_str</ref>(</highlight><highlight class="stringliteral">&quot;%d<sp/>choices&quot;</highlight><highlight class="normal"><sp/>%<sp/>len(self.<ref refid="classdragonfly_1_1parser_1_1Choice_1a796cb7d2c1b47f9c30377fefa0efca8b" kindref="member">_choice_pairs</ref>))</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Methods<sp/>for<sp/>runtime<sp/>recognition<sp/>processing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780" refid="classdragonfly_1_1parser_1_1Choice_1a3c73c9d98d7e9fa37a2c29c055fcb6a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Choice_1a3c73c9d98d7e9fa37a2c29c055fcb6a0" kindref="member">value</ref>(self,<sp/>node):</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actor<sp/>=<sp/>node.children[0].actor</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>element,<sp/>value<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1Choice_1a796cb7d2c1b47f9c30377fefa0efca8b" kindref="member">_choice_pairs</ref>:</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>actor<sp/>==<sp/>element:</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classdragonfly_1_1parser_1_1ParserError" kindref="compound">ParserError</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>child<sp/>element:<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>actor)</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790" refid="classdragonfly_1_1parser_1_1Whitespace" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Whitespace" kindref="compound">Whitespace</ref>(<ref refid="classdragonfly_1_1parser_1_1CharacterSeries" kindref="compound">CharacterSeries</ref>):</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792" refid="classdragonfly_1_1parser_1_1Whitespace_1afb2d1fa4fb321be90d250b4565b83293" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Whitespace_1afb2d1fa4fb321be90d250b4565b83293" kindref="member">__init__</ref>(self,<sp/>optional=False,<sp/>name=None):</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set<sp/>=<sp/>string.whitespace</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CharacterSeries.__init__(self,<sp/>set,<sp/>optional=optional,<sp/>name=name)</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796" refid="classdragonfly_1_1parser_1_1Whitespace_1adde9920d84031a2e1db6496dd115c5b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Whitespace_1adde9920d84031a2e1db6496dd115c5b1" kindref="member">__repr__</ref>(self):</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1ParserElementBase_1a4b1466b45c10811c34e3a7c1ed57bac6" kindref="member">_str</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800" refid="classdragonfly_1_1parser_1_1Letters" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Letters" kindref="compound">Letters</ref>(<ref refid="classdragonfly_1_1parser_1_1CharacterSeries" kindref="compound">CharacterSeries</ref>):</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="802"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Class<sp/>for<sp/>parsing<sp/>ascii<sp/>and<sp/>non-ascii<sp/>letter<sp/>characters.</highlight></codeline>
<codeline lineno="803"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804" refid="classdragonfly_1_1parser_1_1Letters_1a94175e58c1056cf8c80d4bacb13cee6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Letters_1a94175e58c1056cf8c80d4bacb13cee6f" kindref="member">__init__</ref>(self,<sp/>name=None):</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern<sp/>=<sp/>re.compile(</highlight><highlight class="stringliteral">r&quot;\w&quot;</highlight><highlight class="normal">,<sp/>re.UNICODE)</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CharacterSeries.__init__(self,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>name=name,<sp/>pattern=pattern)</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808" refid="classdragonfly_1_1parser_1_1Letters_1a651ebefb2daabdcf159ece66be6f98a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Letters_1a651ebefb2daabdcf159ece66be6f98a8" kindref="member">__repr__</ref>(self):</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1ParserElementBase_1a4b1466b45c10811c34e3a7c1ed57bac6" kindref="member">_str</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811" refid="classdragonfly_1_1parser_1_1Letters_1a90d5ebd4253e15c689d75f4030ae1f61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Letters_1a90d5ebd4253e15c689d75f4030ae1f61" kindref="member">char_matches</ref>(self,<sp/>c):</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>c.isdigit():</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>super(Letters,<sp/>self).<ref refid="classdragonfly_1_1parser_1_1Letters_1a90d5ebd4253e15c689d75f4030ae1f61" kindref="member">char_matches</ref>(c)</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818" refid="classdragonfly_1_1parser_1_1Alphanumerics" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Alphanumerics" kindref="compound">Alphanumerics</ref>(<ref refid="classdragonfly_1_1parser_1_1CharacterSeries" kindref="compound">CharacterSeries</ref>):</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="820"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Class<sp/>for<sp/>parsing<sp/>ascii<sp/>and<sp/>non-ascii<sp/>letter<sp/>and<sp/>digit<sp/>characters.</highlight></codeline>
<codeline lineno="821"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822" refid="classdragonfly_1_1parser_1_1Alphanumerics_1ace040475643913e21a6f86714154bbe2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Alphanumerics_1ace040475643913e21a6f86714154bbe2" kindref="member">__init__</ref>(self,<sp/>name=None):</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern<sp/>=<sp/>re.compile(</highlight><highlight class="stringliteral">r&quot;\w&quot;</highlight><highlight class="normal">,<sp/>re.UNICODE)</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CharacterSeries.__init__(self,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>name=name,<sp/>pattern=pattern)</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826" refid="classdragonfly_1_1parser_1_1Alphanumerics_1ab8028c638c99d143fdf47c8af4395ec2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Alphanumerics_1ab8028c638c99d143fdf47c8af4395ec2" kindref="member">__repr__</ref>(self):</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1ParserElementBase_1a4b1466b45c10811c34e3a7c1ed57bac6" kindref="member">_str</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832" refid="classdragonfly_1_1parser_1_1QuotedStringContent" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1QuotedStringContent" kindref="compound">QuotedStringContent</ref>(<ref refid="classdragonfly_1_1parser_1_1ParserElementBase" kindref="compound">ParserElementBase</ref>):</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834" refid="classdragonfly_1_1parser_1_1QuotedStringContent_1abe7d9ef0c54cba0a0aa14b9ad25337dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>escape_char<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835" refid="classdragonfly_1_1parser_1_1QuotedStringContent_1a1c0c77a5c66562804970da89a15808fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>valid_chars<sp/><sp/><sp/><sp/>=<sp/>string.printable</highlight></codeline>
<codeline lineno="836" refid="classdragonfly_1_1parser_1_1QuotedStringContent_1aae5c82ef44007f1b182b3020f065cfb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>escaped_chars<sp/><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;n&quot;</highlight><highlight class="normal">:<sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">:<sp/><sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="840" refid="classdragonfly_1_1parser_1_1QuotedStringContent_1aa024845c13fd7b469dd9733e426b9f52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>valid_char_pattern<sp/>=<sp/>re.compile(</highlight><highlight class="stringliteral">r&quot;\w&quot;</highlight><highlight class="normal">,<sp/>re.UNICODE)</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842" refid="classdragonfly_1_1parser_1_1QuotedStringContent_1a5d402329dbf30560f18c3d6aa464d210" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1QuotedStringContent_1a5d402329dbf30560f18c3d6aa464d210" kindref="member">__init__</ref>(self,<sp/>delimiter_string,<sp/>name=None):</highlight></codeline>
<codeline lineno="843" refid="classdragonfly_1_1parser_1_1QuotedStringContent_1ada9d3cd93e716daeb5ca2c04ad8bc6fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1QuotedStringContent_1ada9d3cd93e716daeb5ca2c04ad8bc6fe" kindref="member">delimiter_string</ref><sp/>=<sp/>delimiter_string</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParserElementBase.__init__(self,<sp/>name)</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846" refid="classdragonfly_1_1parser_1_1QuotedStringContent_1af98e2a4d7b666a6628ccb3e5c8fa854c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1QuotedStringContent_1af98e2a4d7b666a6628ccb3e5c8fa854c" kindref="member">valid_char</ref>(self,<sp/>c):</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="848"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Check<sp/>whether<sp/>a<sp/>character<sp/>is<sp/>a<sp/>valid.<sp/>Valid<sp/>characters<sp/>include<sp/>all</highlight></codeline>
<codeline lineno="849"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Unicode<sp/>alphanumeric<sp/>characters<sp/>and<sp/>any<sp/>characters<sp/>in</highlight></codeline>
<codeline lineno="850"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.valid_chars.</highlight></codeline>
<codeline lineno="851"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>c:<sp/>str</highlight></codeline>
<codeline lineno="852"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:rtype:<sp/>bool</highlight></codeline>
<codeline lineno="853"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1QuotedStringContent_1a1c0c77a5c66562804970da89a15808fd" kindref="member">valid_chars</ref>:</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bool(self.<ref refid="classdragonfly_1_1parser_1_1QuotedStringContent_1aa024845c13fd7b469dd9733e426b9f52" kindref="member">valid_char_pattern</ref>.<ref refid="namespaceconf_1a41bb69232c581f47d2c2a4fbf28dd3aa" kindref="member">match</ref>(c))</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859" refid="classdragonfly_1_1parser_1_1QuotedStringContent_1ab8091f5ab83a39d421150f58d341d4a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1QuotedStringContent_1ab8091f5ab83a39d421150f58d341d4a7" kindref="member">parse</ref>(self,<sp/>state):</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_attempt(self)</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Gobble<sp/>as<sp/>many<sp/>valid<sp/>characters<sp/>as<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>characters<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>state.finished():</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_char<sp/>=<sp/>state.peek(1)</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>next_char<sp/>escapes,<sp/>look<sp/>forward<sp/>past<sp/>it<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>handle<sp/>the<sp/>escaped<sp/>character.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>next_char<sp/>==<sp/>self.<ref refid="classdragonfly_1_1parser_1_1QuotedStringContent_1abe7d9ef0c54cba0a0aa14b9ad25337dc" kindref="member">escape_char</ref>:</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>there&apos;s<sp/>nothing<sp/>after<sp/>the<sp/>escaped<sp/>char,<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>we<sp/>can&apos;t<sp/>gobble<sp/>the<sp/>escape<sp/>character<sp/>itself.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>So<sp/>we&apos;re<sp/>done.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>state.remaining()<sp/>&lt;<sp/>2:</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>escaped_char<sp/>=<sp/>state.peek(2)[1]</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>escaped_char<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1QuotedStringContent_1aae5c82ef44007f1b182b3020f065cfb9" kindref="member">escaped_chars</ref>:</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>escaped<sp/>character<sp/>has<sp/>a<sp/>special<sp/>transformation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_char<sp/>=<sp/>self.<ref refid="classdragonfly_1_1parser_1_1QuotedStringContent_1aae5c82ef44007f1b182b3020f065cfb9" kindref="member">escaped_chars</ref>[escaped_char]</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>escaped<sp/>character<sp/>is<sp/>not<sp/>special,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>so<sp/>simply<sp/>unescape<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_char<sp/>=<sp/>escaped_char</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1QuotedStringContent_1af98e2a4d7b666a6628ccb3e5c8fa854c" kindref="member">valid_char</ref>(next_char):</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.next(1)<sp/><sp/></highlight><highlight class="comment">#<sp/>Gobble<sp/>self.escape_char.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>self.delimiter_string<sp/>is<sp/>next,<sp/>then<sp/>we&apos;re<sp/>done.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>state.peek(len(self.<ref refid="classdragonfly_1_1parser_1_1QuotedStringContent_1ada9d3cd93e716daeb5ca2c04ad8bc6fe" kindref="member">delimiter_string</ref>))<sp/>==<sp/>self.<ref refid="classdragonfly_1_1parser_1_1QuotedStringContent_1ada9d3cd93e716daeb5ca2c04ad8bc6fe" kindref="member">delimiter_string</ref>:</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>next_char<sp/>is<sp/>not<sp/>acceptable,<sp/>don&apos;t<sp/>gobble<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1QuotedStringContent_1af98e2a4d7b666a6628ccb3e5c8fa854c" kindref="member">valid_char</ref>(next_char):</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.next(1)<sp/><sp/></highlight><highlight class="comment">#<sp/>Gobble<sp/>next_char.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>characters.append(next_char)</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">.join(characters)</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_success(self,<sp/>value)</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>state</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_retry(self)</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_failure(self)</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908" refid="classdragonfly_1_1parser_1_1QuotedString" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1QuotedString" kindref="compound">QuotedString</ref>(<ref refid="classdragonfly_1_1parser_1_1Alternative" kindref="compound">Alternative</ref>):</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="910"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parser<sp/>element<sp/>for<sp/>quoted<sp/>strings.</highlight></codeline>
<codeline lineno="911"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="912"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Simple<sp/>usage<sp/>showing<sp/>default<sp/>delimiters:</highlight></codeline>
<codeline lineno="913"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parser<sp/>=<sp/>Parser(QuotedString())</highlight></codeline>
<codeline lineno="914"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parser.parse(&quot;&apos;&apos;&quot;)</highlight></codeline>
<codeline lineno="915"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;</highlight></codeline>
<codeline lineno="916"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parser.parse(&quot;&apos;Hello<sp/>world!&apos;&quot;)</highlight></codeline>
<codeline lineno="917"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;Hello<sp/>world!&apos;</highlight></codeline>
<codeline lineno="918"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parser.parse(&apos;&quot;Hello<sp/>world!&quot;&apos;)</highlight></codeline>
<codeline lineno="919"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;Hello<sp/>world!&apos;</highlight></codeline>
<codeline lineno="920"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="921"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Special<sp/>characters<sp/>within<sp/>the<sp/>quoted<sp/>string<sp/>can<sp/>be<sp/>escaped.</highlight></codeline>
<codeline lineno="922"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parser.parse(r&apos;&quot;Hello<sp/>\&quot;world\&quot;!&quot;&apos;)<sp/><sp/>#doctest:<sp/>+SKIP</highlight></codeline>
<codeline lineno="923"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Note<sp/>back<sp/>to<sp/>get<sp/>these<sp/>escaping<sp/>examples<sp/>to<sp/>run<sp/>using<sp/>doctest</highlight></codeline>
<codeline lineno="924"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>they<sp/>must<sp/>include<sp/>double<sp/>escapes,<sp/>which<sp/>are<sp/>obviously<sp/>not<sp/>required</highlight></codeline>
<codeline lineno="925"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>actual<sp/>code.</highlight></codeline>
<codeline lineno="926"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parser.parse(r&apos;&quot;Hello<sp/>\\&quot;world\\&quot;!&quot;&apos;)</highlight></codeline>
<codeline lineno="927"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;Hello<sp/>&quot;world&quot;!&apos;</highlight></codeline>
<codeline lineno="928"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>print(parser.parse(r&apos;&quot;Hello<sp/>\\\\<sp/>\\&quot;world\\&quot;!\\nGoodbye<sp/>\\&apos;universe\\&apos;...&quot;&apos;))</highlight></codeline>
<codeline lineno="929"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hello<sp/>\<sp/>&quot;world&quot;!</highlight></codeline>
<codeline lineno="930"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Goodbye<sp/>&apos;universe&apos;...</highlight></codeline>
<codeline lineno="931"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="932"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>element<sp/>supports<sp/>asymmetric<sp/>open-close<sp/>delimiters:</highlight></codeline>
<codeline lineno="933"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parser<sp/>=<sp/>Parser(QuotedString([(&quot;[[&quot;,<sp/>&quot;]]&quot;)]))</highlight></codeline>
<codeline lineno="934"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parser.parse(&quot;[[Hello<sp/>world!]]&quot;)</highlight></codeline>
<codeline lineno="935"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;Hello<sp/>world!&apos;</highlight></codeline>
<codeline lineno="936"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parser.parse(&quot;[[Hello<sp/>world!]]<sp/>Goodbye.&quot;,<sp/>must_finish=False)</highlight></codeline>
<codeline lineno="937"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;Hello<sp/>world!&apos;</highlight></codeline>
<codeline lineno="938"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="939"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Open-close<sp/>delimiter<sp/>pairs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942" refid="classdragonfly_1_1parser_1_1QuotedString_1a641b18fb998ab9ec724fd4cd5ca0fc12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>default_delimiters<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&quot;&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947" refid="classdragonfly_1_1parser_1_1QuotedString_1a57a28e6ea8d201c7b8a44de090d490b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1QuotedString_1a57a28e6ea8d201c7b8a44de090d490b2" kindref="member">__init__</ref>(self,<sp/>delimiters=default_delimiters,<sp/>name=None):</highlight></codeline>
<codeline lineno="948" refid="classdragonfly_1_1parser_1_1QuotedString_1a91297e1e776125971ee9d2ef67accbdb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1parser_1_1QuotedString_1a91297e1e776125971ee9d2ef67accbdb" kindref="member">delimiters</ref><sp/>=<sp/>delimiters</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>children<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>open_delimiter,<sp/>close_delimiter<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1parser_1_1QuotedString_1a91297e1e776125971ee9d2ef67accbdb" kindref="member">delimiters</ref>:</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delimiter_children<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classdragonfly_1_1parser_1_1String" kindref="compound">String</ref>(open_delimiter),</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classdragonfly_1_1parser_1_1QuotedStringContent" kindref="compound">QuotedStringContent</ref>(close_delimiter),</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classdragonfly_1_1parser_1_1String" kindref="compound">String</ref>(close_delimiter),</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child<sp/>=<sp/><ref refid="classdragonfly_1_1parser_1_1Sequence" kindref="compound">Sequence</ref>(delimiter_children)</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>children.append(child)</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Alternative.__init__(self,<sp/>children,<sp/>name=name)</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960" refid="classdragonfly_1_1parser_1_1QuotedString_1a31b71b6e63948d81a92fb4ffdccae053" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1QuotedString_1a31b71b6e63948d81a92fb4ffdccae053" kindref="member">value</ref>(self,<sp/>node):</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node.children[0].children[1].<ref refid="classdragonfly_1_1parser_1_1QuotedString_1a31b71b6e63948d81a92fb4ffdccae053" kindref="member">value</ref>()</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966" refid="classdragonfly_1_1parser_1_1UnsignedInteger" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1UnsignedInteger" kindref="compound">UnsignedInteger</ref>(<ref refid="classdragonfly_1_1parser_1_1CharacterSeries" kindref="compound">CharacterSeries</ref>):</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="968"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parser<sp/>element<sp/>for<sp/>unsigned<sp/>integer<sp/>literals.</highlight></codeline>
<codeline lineno="969"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="970"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Simple<sp/>usage<sp/>examples:</highlight></codeline>
<codeline lineno="971"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>from<sp/>dragonfly.parser<sp/>import<sp/>Parser</highlight></codeline>
<codeline lineno="972"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parser<sp/>=<sp/>Parser(UnsignedInteger())</highlight></codeline>
<codeline lineno="973"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parser.parse(&quot;0&quot;)</highlight></codeline>
<codeline lineno="974"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="975"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parser.parse(&quot;1234&quot;)</highlight></codeline>
<codeline lineno="976"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1234</highlight></codeline>
<codeline lineno="977"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parser.parse(&quot;0001234&quot;)</highlight></codeline>
<codeline lineno="978"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1234</highlight></codeline>
<codeline lineno="979"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="980"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982" refid="classdragonfly_1_1parser_1_1UnsignedInteger_1afe6e810667d8fb6fada3dce4d7af1c94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>digits_set<sp/>=<sp/>string.digits</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984" refid="classdragonfly_1_1parser_1_1UnsignedInteger_1a69982795316a8e630ca32d492c063f16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1UnsignedInteger_1a69982795316a8e630ca32d492c063f16" kindref="member">__init__</ref>(self,<sp/>name=None):</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CharacterSeries.__init__(self,<sp/>self.<ref refid="classdragonfly_1_1parser_1_1UnsignedInteger_1afe6e810667d8fb6fada3dce4d7af1c94" kindref="member">digits_set</ref>,<sp/>name)</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987" refid="classdragonfly_1_1parser_1_1UnsignedInteger_1af0e92127f692f1ed5e591cfba25c46c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1UnsignedInteger_1af0e92127f692f1ed5e591cfba25c46c9" kindref="member">value</ref>(self,<sp/>node):</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>int(CharacterSeries.value(self,<sp/>node))</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993" refid="classdragonfly_1_1parser_1_1Integer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Integer" kindref="compound">Integer</ref>(<ref refid="classdragonfly_1_1parser_1_1Sequence" kindref="compound">Sequence</ref>):</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="995"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parser<sp/>element<sp/>for<sp/>quoted<sp/>strings.</highlight></codeline>
<codeline lineno="996"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="997"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Simple<sp/>usage<sp/>examples:</highlight></codeline>
<codeline lineno="998"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>from<sp/>dragonfly.parser<sp/>import<sp/>Parser</highlight></codeline>
<codeline lineno="999"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parser<sp/>=<sp/>Parser(Integer())</highlight></codeline>
<codeline lineno="1000"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parser.parse(&quot;0&quot;)</highlight></codeline>
<codeline lineno="1001"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="1002"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parser.parse(&quot;+0&quot;)</highlight></codeline>
<codeline lineno="1003"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="1004"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parser.parse(&quot;-000&quot;)</highlight></codeline>
<codeline lineno="1005"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="1006"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parser.parse(&quot;1234&quot;)</highlight></codeline>
<codeline lineno="1007"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1234</highlight></codeline>
<codeline lineno="1008"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parser.parse(&quot;+001234&quot;)</highlight></codeline>
<codeline lineno="1009"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1234</highlight></codeline>
<codeline lineno="1010"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parser.parse(&quot;-001234&quot;)</highlight></codeline>
<codeline lineno="1011"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1234</highlight></codeline>
<codeline lineno="1012"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1013"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015" refid="classdragonfly_1_1parser_1_1Integer_1a7a29df67bf1f74af21a258ce15ed046f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>sign_strings<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">:<sp/><sp/>1,</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">:<sp/>-1,</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1019" refid="classdragonfly_1_1parser_1_1Integer_1a204a050f2379b0aee9063f05bf31c05a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>digits_set<sp/>=<sp/>UnsignedInteger.digits_set</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021" refid="classdragonfly_1_1parser_1_1Integer_1a217a3a8c5d12b256b6d3b4a30a2fd0b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Integer_1a217a3a8c5d12b256b6d3b4a30a2fd0b1" kindref="member">__init__</ref>(self,<sp/>name=None):</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>children<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classdragonfly_1_1parser_1_1Optional" kindref="compound">Optional</ref>(<ref refid="classdragonfly_1_1parser_1_1Choice" kindref="compound">Choice</ref>(self.<ref refid="classdragonfly_1_1parser_1_1Integer_1a7a29df67bf1f74af21a258ce15ed046f" kindref="member">sign_strings</ref>)),</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classdragonfly_1_1parser_1_1UnsignedInteger" kindref="compound">UnsignedInteger</ref>(),</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sequence.__init__(self,<sp/>children,<sp/>name)</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028" refid="classdragonfly_1_1parser_1_1Integer_1a6d2785f88b779833a97f54736f098322" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Integer_1a6d2785f88b779833a97f54736f098322" kindref="member">value</ref>(self,<sp/>node):</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign<sp/>=<sp/>node.children[0].<ref refid="classdragonfly_1_1parser_1_1Integer_1a6d2785f88b779833a97f54736f098322" kindref="member">value</ref>()<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>1</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>magnitude<sp/>=<sp/>node.children[1].<ref refid="classdragonfly_1_1parser_1_1Integer_1a6d2785f88b779833a97f54736f098322" kindref="member">value</ref>()</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sign<sp/>*<sp/>magnitude</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036" refid="classdragonfly_1_1parser_1_1Float" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Float" kindref="compound">Float</ref>(<ref refid="classdragonfly_1_1parser_1_1Sequence" kindref="compound">Sequence</ref>):</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1038"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parser<sp/>element<sp/>for<sp/>decimal<sp/>fraction<sp/>literals.</highlight></codeline>
<codeline lineno="1039"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1040"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Usage<sp/>examples:</highlight></codeline>
<codeline lineno="1041"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>from<sp/>dragonfly.parser<sp/>import<sp/>Parser</highlight></codeline>
<codeline lineno="1042"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parser<sp/>=<sp/>Parser(Float())</highlight></codeline>
<codeline lineno="1043"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parser.parse(&quot;0.0&quot;)</highlight></codeline>
<codeline lineno="1044"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0</highlight></codeline>
<codeline lineno="1045"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parser.parse(&quot;.000&quot;)</highlight></codeline>
<codeline lineno="1046"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0</highlight></codeline>
<codeline lineno="1047"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parser.parse(&quot;-.0&quot;)</highlight></codeline>
<codeline lineno="1048"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0</highlight></codeline>
<codeline lineno="1049"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parser.parse(&quot;1.0&quot;)</highlight></codeline>
<codeline lineno="1050"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.0</highlight></codeline>
<codeline lineno="1051"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parser.parse(&quot;-1.0&quot;)</highlight></codeline>
<codeline lineno="1052"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1.0</highlight></codeline>
<codeline lineno="1053"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>parser.parse(&quot;-1.75&quot;)</highlight></codeline>
<codeline lineno="1054"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1.75</highlight></codeline>
<codeline lineno="1055"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1056"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058" refid="classdragonfly_1_1parser_1_1Float_1ace0d02bbb7cfbdb8a8fcb57f6d8ff826" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>separator_string<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060" refid="classdragonfly_1_1parser_1_1Float_1afc02e6e082c2962fac1496f1a90158be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Float_1afc02e6e082c2962fac1496f1a90158be" kindref="member">__init__</ref>(self,<sp/>name=None):</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digits<sp/>=<sp/><ref refid="classdragonfly_1_1parser_1_1CharacterSeries" kindref="compound">CharacterSeries</ref>(set=string.digits)</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>children<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classdragonfly_1_1parser_1_1Optional" kindref="compound">Optional</ref>(<ref refid="classdragonfly_1_1parser_1_1Alternative" kindref="compound">Alternative</ref>([</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classdragonfly_1_1parser_1_1Integer" kindref="compound">Integer</ref>(),</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classdragonfly_1_1parser_1_1Choice" kindref="compound">Choice</ref>(Integer.sign_strings,<sp/>name=</highlight><highlight class="stringliteral">&quot;sign_only&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>])),</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classdragonfly_1_1parser_1_1String" kindref="compound">String</ref>(self.<ref refid="classdragonfly_1_1parser_1_1Float_1ace0d02bbb7cfbdb8a8fcb57f6d8ff826" kindref="member">separator_string</ref>),</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classdragonfly_1_1parser_1_1UnsignedInteger" kindref="compound">UnsignedInteger</ref>(),</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sequence.__init__(self,<sp/>children=children,<sp/>name=name)</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072" refid="classdragonfly_1_1parser_1_1Float_1a34ae2c3fdb605d59b13541d51c0ee696" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1parser_1_1Float_1a34ae2c3fdb605d59b13541d51c0ee696" kindref="member">value</ref>(self,<sp/>node):</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_only_node<sp/>=<sp/>node.get_child(name=</highlight><highlight class="stringliteral">&quot;sign_only&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>sign_only_node:</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>float(sign_only_node.data)<sp/>&gt;=<sp/>0:</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integer_part<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integer_part<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integer_part<sp/>=<sp/>node.children[0].<ref refid="classdragonfly_1_1parser_1_1Float_1a34ae2c3fdb605d59b13541d51c0ee696" kindref="member">value</ref>()<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>0</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fractional_part<sp/>=<sp/>node.children[2].<ref refid="classdragonfly_1_1parser_1_1Float_1a34ae2c3fdb605d59b13541d51c0ee696" kindref="member">value</ref>()</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>float(</highlight><highlight class="stringliteral">&quot;%s.%d&quot;</highlight><highlight class="normal"><sp/>%<sp/>(integer_part,<sp/>fractional_part))</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087" refid="namespacedragonfly_1_1parser_1a3e206f3f704c328f1ccd83976a86538e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacedragonfly_1_1parser_1a3e206f3f704c328f1ccd83976a86538e" kindref="member">print_matches</ref>(node,<sp/>indent=&quot;&quot;):</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>indent:</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Nodes:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>print(indent,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>%r<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>(node.actor.__class__.__name__,</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.match(),<sp/>id(node.parent)))</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="namespacedragonfly_1_1parser_1a3e206f3f704c328f1ccd83976a86538e" kindref="member">print_matches</ref>(c,<sp/>indent<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>node.children]</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095" refid="namespacedragonfly_1_1parser_1a8f0b8ed34cc8d49a83833b594af42983" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacedragonfly_1_1parser_1a8f0b8ed34cc8d49a83833b594af42983" kindref="member">print_values</ref>(node,<sp/>indent=&quot;&quot;):</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>indent:</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Values:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>print(indent,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>%r<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>(node.actor.__class__.__name__,<sp/>node.value(),</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id(node.parent)))</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="namespacedragonfly_1_1parser_1a8f0b8ed34cc8d49a83833b594af42983" kindref="member">print_values</ref>(c,<sp/>indent<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>node.children]</highlight></codeline>
    </programlisting>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/parser.py"/>
  </compounddef>
</doxygen>
