<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="integer__internal_8py" kind="file" language="Python">
    <compoundname>integer_internal.py</compoundname>
    <innerclass refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Collection" prot="public">dragonfly::language::base::integer_internal::Collection</innerclass>
    <innerclass refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1CollectionIntBuilder" prot="public">dragonfly::language::base::integer_internal::CollectionIntBuilder</innerclass>
    <innerclass refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntBuilderBase" prot="public">dragonfly::language::base::integer_internal::IntBuilderBase</innerclass>
    <innerclass refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntegerContentBase" prot="public">dragonfly::language::base::integer_internal::IntegerContentBase</innerclass>
    <innerclass refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Magnitude" prot="public">dragonfly::language::base::integer_internal::Magnitude</innerclass>
    <innerclass refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder" prot="public">dragonfly::language::base::integer_internal::MagnitudeIntBuilder</innerclass>
    <innerclass refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MapIntBuilder" prot="public">dragonfly::language::base::integer_internal::MapIntBuilder</innerclass>
    <innerclass refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPath" prot="public">dragonfly::language::base::integer_internal::ModifiedPath</innerclass>
    <innerclass refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPathsCollection" prot="public">dragonfly::language::base::integer_internal::ModifiedPathsCollection</innerclass>
    <innernamespace refid="namespacedragonfly_1_1language_1_1base_1_1integer__internal">dragonfly::language::base::integer_internal</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacedragonfly_1_1language_1_1base_1_1integer__internal" refkind="compound"><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Dragonfly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(c)<sp/>Copyright<sp/>2007,<sp/>2008<sp/>by<sp/>Christo<sp/>Butcher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Licensed<sp/>under<sp/>the<sp/>LGPL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Dragonfly<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Dragonfly<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>License<sp/>along<sp/>with<sp/>Dragonfly.<sp/><sp/>If<sp/>not,<sp/>see</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral">This<sp/>file<sp/>implements<sp/>base<sp/>classes<sp/>for<sp/>structured<sp/>integer<sp/>grammar</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral">elements.</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">#<sp/>pylint:<sp/>disable=redefined-builtin,no-self-use,too-many-branches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>copy</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1grammar_1_1elements" kindref="compound">dragonfly.grammar.elements</ref><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>(Alternative,<sp/>Sequence,<sp/>Optional,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RuleRef,<sp/>Compound,<sp/>ListRef,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Literal,<sp/>Impossible)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1grammar_1_1list" kindref="compound">dragonfly.grammar.list</ref><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>List</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Numeric<sp/>element<sp/>builder<sp/>classes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntBuilderBase" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntBuilderBase" kindref="compound">IntBuilderBase</ref>(object):</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntBuilderBase_1a4d74bf9db090e1b7ff3bbf5245505e49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntBuilderBase_1a4d74bf9db090e1b7ff3bbf5245505e49" kindref="member">__init__</ref>(self,<sp/>modifier_function=None,<sp/>modifier_mode=None):</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>modifier_mode<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifier_mode<sp/>=<sp/>ModifiedPathsCollection.MODE_AUGMENT</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntBuilderBase_1a2e611bdf6626f3786fe6ed302200056e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntBuilderBase_1a2e611bdf6626f3786fe6ed302200056e" kindref="member">_modifier_function</ref><sp/>=<sp/>modifier_function</highlight></codeline>
<codeline lineno="47" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntBuilderBase_1a99df360100ec8a3b4ba48b1d163a826e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntBuilderBase_1a99df360100ec8a3b4ba48b1d163a826e" kindref="member">_modifier_mode</ref><sp/>=<sp/>modifier_mode</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntBuilderBase_1a3ba19e487476a091bd393ae81cc2002d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntBuilderBase_1a3ba19e487476a091bd393ae81cc2002d" kindref="member">build_element</ref>(self,<sp/>min,<sp/>max,<sp/>memo=None):</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>memo<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memo<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>if<sp/>an<sp/>appropriate<sp/>element<sp/>already<sp/>exists<sp/>in<sp/>the<sp/>memo.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>If<sp/>so,<sp/>then<sp/>return<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>(id(self),<sp/>min,<sp/>max)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>key<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>memo:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>copy.copy(memo[key])</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Otherwise,<sp/>build<sp/>the<sp/>element,<sp/>save<sp/>it<sp/>in<sp/>the<sp/>memo<sp/>and<sp/>return<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element<sp/>=<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntBuilderBase_1a39ee5acf44ad8df4e66d907d58a565ef" kindref="member">_build_element</ref>(min,<sp/>max,<sp/>memo)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memo[key]<sp/>=<sp/>element</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>element</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntBuilderBase_1a39ee5acf44ad8df4e66d907d58a565ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntBuilderBase_1a39ee5acf44ad8df4e66d907d58a565ef" kindref="member">_build_element</ref>(self,<sp/>min,<sp/>max,<sp/>memo):</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;Call<sp/>to<sp/>virtual<sp/>method<sp/>_build_element()&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>base<sp/>class<sp/>IntBuilderBase&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntBuilderBase_1a19f2c8551b279ce657f4fca69ff424d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntBuilderBase_1a19f2c8551b279ce657f4fca69ff424d5" kindref="member">_build_modified_paths</ref>(self,<sp/>children,<sp/>memo):</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pylint:<sp/>disable=unused-argument</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(children)<sp/>==<sp/>0:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(children)<sp/>==<sp/>1:<sp/><sp/><sp/><sp/>root<sp/>=<sp/>children[0]</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root<sp/>=<sp/><ref refid="namespacedragonfly_1_1grammar_1_1elements_1a5fae346809679996270fdc08704d01e0" kindref="member">Alternative</ref>(children)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPathsCollection" kindref="compound">ModifiedPathsCollection</ref>(root,<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntBuilderBase_1a2e611bdf6626f3786fe6ed302200056e" kindref="member">_modifier_function</ref>,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntBuilderBase_1a99df360100ec8a3b4ba48b1d163a826e" kindref="member">_modifier_mode</ref>)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MapIntBuilder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MapIntBuilder" kindref="compound">MapIntBuilder</ref>(<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntBuilderBase" kindref="compound">IntBuilderBase</ref>):</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MapIntBuilder_1ae77e53584062f7179b0e76068f337b24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MapIntBuilder_1ae77e53584062f7179b0e76068f337b24" kindref="member">__init__</ref>(self,<sp/>mapping):</highlight></codeline>
<codeline lineno="80" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MapIntBuilder_1a033ff669269dd8d0f7fe254fa2ab2c9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MapIntBuilder_1a033ff669269dd8d0f7fe254fa2ab2c9b" kindref="member">_mapping</ref><sp/>=<sp/>mapping</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntBuilderBase.__init__(self)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MapIntBuilder_1a522619e21f8a24c53f6e58435ffe3c61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MapIntBuilder_1a522619e21f8a24c53f6e58435ffe3c61" kindref="member">_build_element</ref>(self,<sp/>min,<sp/>max,<sp/>memo):</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapping_memo<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>children<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>spec,<sp/>value<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MapIntBuilder_1a033ff669269dd8d0f7fe254fa2ab2c9b" kindref="member">_mapping</ref>.items():</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>min<sp/>&lt;=<sp/>value<sp/>&lt;<sp/>max:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>spec<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>mapping_memo:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>children.append(mapping_memo[spec])</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element<sp/>=<sp/><ref refid="namespacedragonfly_1_1grammar_1_1elements_1a28abaf9036a2da7afa08c66f514e0d2f" kindref="member">Compound</ref>(spec=spec,<sp/>value=value)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>children.append(element)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapping_memo[spec]<sp/>=<sp/>element</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(children)<sp/>&gt;<sp/>1:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1grammar_1_1elements_1a5fae346809679996270fdc08704d01e0" kindref="member">Alternative</ref>(children)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>len(children)<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>children[0]</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1CollectionIntBuilder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1CollectionIntBuilder" kindref="compound">CollectionIntBuilder</ref>(<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntBuilderBase" kindref="compound">IntBuilderBase</ref>):</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1CollectionIntBuilder_1a1abed53c0d3abf20b91c5458f532dc57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1CollectionIntBuilder_1a1abed53c0d3abf20b91c5458f532dc57" kindref="member">__init__</ref>(self,<sp/>spec,<sp/>set,<sp/>modifier_function=None,</highlight></codeline>
<codeline lineno="105" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1CollectionIntBuilder_1a40b6f5361ce14db48a1afa2e684e9b69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifier_mode=None):</highlight></codeline>
<codeline lineno="106" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1CollectionIntBuilder_1a942b5bea8ab20d1c59738107b19a301e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1CollectionIntBuilder_1a40b6f5361ce14db48a1afa2e684e9b69" kindref="member">_spec</ref><sp/>=<sp/>spec</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1CollectionIntBuilder_1a942b5bea8ab20d1c59738107b19a301e" kindref="member">_set</ref><sp/>=<sp/>set</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntBuilderBase.__init__(self,<sp/>modifier_function,<sp/>modifier_mode)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1CollectionIntBuilder_1a402841391885d229097229ce4c59fffd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1CollectionIntBuilder_1a402841391885d229097229ce4c59fffd" kindref="member">_build_element</ref>(self,<sp/>min,<sp/>max,<sp/>memo):</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child<sp/>=<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1CollectionIntBuilder_1ac8f5c08f92dd72ced70eb5e6dd02b1fe" kindref="member">_build_range_set</ref>(self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1CollectionIntBuilder_1a942b5bea8ab20d1c59738107b19a301e" kindref="member">_set</ref>,<sp/>min,<sp/>max,<sp/>memo)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>child:</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;element&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element<sp/>=<sp/><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Collection" kindref="compound">Collection</ref>(self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1CollectionIntBuilder_1a40b6f5361ce14db48a1afa2e684e9b69" kindref="member">_spec</ref>,<sp/>child)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>element</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1CollectionIntBuilder_1ac8f5c08f92dd72ced70eb5e6dd02b1fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1CollectionIntBuilder_1ac8f5c08f92dd72ced70eb5e6dd02b1fe" kindref="member">_build_range_set</ref>(self,<sp/>set,<sp/>min,<sp/>max,<sp/>memo):</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Iterate<sp/>through<sp/>the<sp/>set<sp/>allowing<sp/>each<sp/>item<sp/>to<sp/>build<sp/>an<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>children<sp/>=<sp/>[c.build_element(min,<sp/>max,<sp/>memo)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>set]</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>children<sp/>=<sp/>[c<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>children<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>c]</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Build<sp/>modified<sp/>path<sp/>elements,<sp/>if<sp/>necessary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntBuilderBase_1a2e611bdf6626f3786fe6ed302200056e" kindref="member">_modifier_function</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntBuilderBase_1a19f2c8551b279ce657f4fca69ff424d5" kindref="member">_build_modified_paths</ref>(children,<sp/>memo)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>c:</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Don&apos;t<sp/>use<sp/>other<sp/>children<sp/>if<sp/>in<sp/>modifier<sp/>mode<sp/>REPLACE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntBuilderBase_1a99df360100ec8a3b4ba48b1d163a826e" kindref="member">_modifier_mode</ref></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>mode<sp/>==<sp/>ModifiedPathsCollection.MODE_REPLACE:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>children[:]</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>the<sp/>ModifiedPathsCollection<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>children.append(c)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Wrap<sp/>up<sp/>results<sp/>appropriately.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>children:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(children)<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>children[0]</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1grammar_1_1elements_1a5fae346809679996270fdc08704d01e0" kindref="member">Alternative</ref>(children)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder" kindref="compound">MagnitudeIntBuilder</ref>(<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntBuilderBase" kindref="compound">IntBuilderBase</ref>):</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1ad53371787e52398f60891d48179e0577" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_empty_list<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>@classmethod</highlight></codeline>
<codeline lineno="149" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1a754a752d1c46a0d70c38db4d40ee4416" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1a754a752d1c46a0d70c38db4d40ee4416" kindref="member">_get_empty_list</ref>(cls):</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Class<sp/>method<sp/>to<sp/>ensure<sp/>only<sp/>one<sp/>empty<sp/>list<sp/>is<sp/>created.<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cls.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1ad53371787e52398f60891d48179e0577" kindref="member">_empty_list</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cls.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1ad53371787e52398f60891d48179e0577" kindref="member">_empty_list</ref><sp/>=<sp/><ref refid="classdragonfly_1_1grammar_1_1list_1_1List" kindref="compound">List</ref>(</highlight><highlight class="stringliteral">&quot;_MagnitudeIntBuilder_empty&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cls.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1ad53371787e52398f60891d48179e0577" kindref="member">_empty_list</ref></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1ab780ef7d1439280800af83b280910b40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1ab780ef7d1439280800af83b280910b40" kindref="member">__init__</ref>(self,<sp/>factor,<sp/>spec,<sp/>multipliers,<sp/>remainders,</highlight></codeline>
<codeline lineno="156" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1aed8f391e4c2c95608eb45b1527e82060" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifier_function=None,<sp/>modifier_mode=None):</highlight></codeline>
<codeline lineno="157" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1a9f7d85a367793ecc7f43b84b99feea88" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1aed8f391e4c2c95608eb45b1527e82060" kindref="member">_factor</ref><sp/>=<sp/>factor</highlight></codeline>
<codeline lineno="158" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1afe87f3f99f21559dc34dfb5697f2af44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1a9f7d85a367793ecc7f43b84b99feea88" kindref="member">_spec</ref><sp/>=<sp/>spec</highlight></codeline>
<codeline lineno="159" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1aba7196150aa073ca1e282eda5509b83b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1afe87f3f99f21559dc34dfb5697f2af44" kindref="member">_multipliers</ref><sp/>=<sp/>multipliers</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1aba7196150aa073ca1e282eda5509b83b" kindref="member">_remainders</ref><sp/>=<sp/>remainders</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntBuilderBase.__init__(self,<sp/>modifier_function,<sp/>modifier_mode)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1ab4f30e842dd9104664b6d1446e70830b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1ab4f30e842dd9104664b6d1446e70830b" kindref="member">_build_element</ref>(self,<sp/>min,<sp/>max,<sp/>memo):</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Sanity<sp/>check.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>min<sp/>&gt;=<sp/>max:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Calculate<sp/>ranges<sp/>of<sp/>multipliers<sp/>and<sp/>remainders.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_multiplier<sp/>=<sp/>int(min<sp/>/<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1aed8f391e4c2c95608eb45b1527e82060" kindref="member">_factor</ref>)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_multiplier<sp/><sp/>=<sp/>int((max<sp/>-<sp/>1)<sp/>/<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1aed8f391e4c2c95608eb45b1527e82060" kindref="member">_factor</ref><sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_remainder<sp/><sp/>=<sp/>min<sp/>%<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1aed8f391e4c2c95608eb45b1527e82060" kindref="member">_factor</ref></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_remainder<sp/><sp/><sp/>=<sp/>max<sp/>%<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1aed8f391e4c2c95608eb45b1527e82060" kindref="member">_factor</ref></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>last_remainder<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_remainder<sp/>=<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1aed8f391e4c2c95608eb45b1527e82060" kindref="member">_factor</ref></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Handle<sp/>special<sp/>case<sp/>of<sp/>only<sp/>one<sp/>possible<sp/>multiplier<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>first_multiplier<sp/>==<sp/>last_multiplier<sp/>-<sp/>1:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1aafec8598c62e6cc2ded39fcdfad86cec" kindref="member">_build_range</ref>(first_multiplier,<sp/>last_multiplier,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_remainder,<sp/>last_remainder,<sp/>memo)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>children<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Build<sp/>partial<sp/>range<sp/>for<sp/>first<sp/>multiplier<sp/>value,<sp/>if<sp/>necessary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>first_remainder<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1aafec8598c62e6cc2ded39fcdfad86cec" kindref="member">_build_range</ref>(first_multiplier,<sp/>first_multiplier<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_remainder,<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1aed8f391e4c2c95608eb45b1527e82060" kindref="member">_factor</ref>,<sp/>memo)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>c:<sp/>children.append(c)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_multiplier<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Build<sp/>partial<sp/>range<sp/>for<sp/>last<sp/>multiplier<sp/>value,<sp/>if<sp/>necessary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>last_remainder<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1aafec8598c62e6cc2ded39fcdfad86cec" kindref="member">_build_range</ref>(last_multiplier<sp/>-<sp/>1,<sp/>last_multiplier,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>last_remainder,<sp/>memo)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>c:<sp/>children.append(c)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_multiplier<sp/>-=<sp/>1</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Build<sp/>range<sp/>for<sp/>multiplier<sp/>values<sp/>which<sp/>have<sp/>the<sp/>full</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>range<sp/>of<sp/>remainder<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>first_multiplier<sp/>&lt;<sp/>last_multiplier:</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1aafec8598c62e6cc2ded39fcdfad86cec" kindref="member">_build_range</ref>(first_multiplier,<sp/>last_multiplier,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1aed8f391e4c2c95608eb45b1527e82060" kindref="member">_factor</ref>,<sp/>memo)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>c:<sp/>children.append(c)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Build<sp/>modified<sp/>path<sp/>elements,<sp/>if<sp/>necessary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntBuilderBase_1a2e611bdf6626f3786fe6ed302200056e" kindref="member">_modifier_function</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntBuilderBase_1a19f2c8551b279ce657f4fca69ff424d5" kindref="member">_build_modified_paths</ref>(children,<sp/>memo)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>c:</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Don&apos;t<sp/>use<sp/>other<sp/>children<sp/>if<sp/>in<sp/>modifier<sp/>mode<sp/>REPLACE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntBuilderBase_1a99df360100ec8a3b4ba48b1d163a826e" kindref="member">_modifier_mode</ref></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>mode<sp/>==<sp/>ModifiedPathsCollection.MODE_REPLACE:</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>children[:]</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>the<sp/>ModifiedPathsCollection<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>children.append(c)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Wrap<sp/>up<sp/>result<sp/>as<sp/>is<sp/>appropriate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(children)<sp/>==<sp/>0:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>len(children)<sp/>==<sp/>1:<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>children[0]</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1grammar_1_1elements_1a5fae346809679996270fdc08704d01e0" kindref="member">Alternative</ref>(children)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1aafec8598c62e6cc2ded39fcdfad86cec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1aafec8598c62e6cc2ded39fcdfad86cec" kindref="member">_build_range</ref>(self,<sp/>first_multiplier,<sp/>last_multiplier,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_remainder,<sp/>last_remainder,<sp/>memo):</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Build<sp/>range<sp/>for<sp/>multipliers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multipliers<sp/>=<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1aeabef96435e1240eb8000ff49265d26f" kindref="member">_build_range_set</ref>(self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1afe87f3f99f21559dc34dfb5697f2af44" kindref="member">_multipliers</ref>,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_multiplier,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_multiplier,<sp/>memo)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>multipliers:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Build<sp/>range<sp/>for<sp/>remainders.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remainders<sp/>=<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1aeabef96435e1240eb8000ff49265d26f" kindref="member">_build_range_set</ref>(self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1aba7196150aa073ca1e282eda5509b83b" kindref="member">_remainders</ref>,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_remainder,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_remainder,<sp/>memo)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>remainders:</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>empty<sp/>=<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1a754a752d1c46a0d70c38db4d40ee4416" kindref="member">_get_empty_list</ref>()</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remainders<sp/>=<sp/><ref refid="namespacedragonfly_1_1grammar_1_1elements_1ab5ca6dc762d1358eee80c0cb7f18544d" kindref="member">ListRef</ref>(</highlight><highlight class="stringliteral">&quot;_MagnitudeIntBuilder_empty_ref&quot;</highlight><highlight class="normal">,<sp/>empty)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Build<sp/>magnitude<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multipliers.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;multiplier&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remainders.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;remainder&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Magnitude" kindref="compound">Magnitude</ref>(self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1aed8f391e4c2c95608eb45b1527e82060" kindref="member">_factor</ref>,<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1a9f7d85a367793ecc7f43b84b99feea88" kindref="member">_spec</ref>,<sp/>multipliers,<sp/>remainders)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1aeabef96435e1240eb8000ff49265d26f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1MagnitudeIntBuilder_1aeabef96435e1240eb8000ff49265d26f" kindref="member">_build_range_set</ref>(self,<sp/>set,<sp/>min,<sp/>max,<sp/>memo):</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Iterate<sp/>through<sp/>the<sp/>set<sp/>allowing<sp/>each<sp/>item<sp/>to<sp/>build<sp/>an<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>children<sp/>=<sp/>[c.build_element(min,<sp/>max,<sp/>memo)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>set]</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>children<sp/>=<sp/>[c<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>children<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>c]</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Wrap<sp/>up<sp/>results<sp/>appropriately.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>children:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(children)<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>children[0]</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1grammar_1_1elements_1a5fae346809679996270fdc08704d01e0" kindref="member">Alternative</ref>(children)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Element<sp/>classes<sp/>used<sp/>in<sp/>numeric<sp/>grammar<sp/>constructions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Collection" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Collection" kindref="compound">Collection</ref>(<ref refid="namespacedragonfly_1_1grammar_1_1elements_1a28abaf9036a2da7afa08c66f514e0d2f" kindref="member">Compound</ref>):</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Collection_1aa2bdc720e900a2e2658d8ed5c375bb13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_element_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;element&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Collection_1a506df0c7838e1f9227a743f9f00ac964" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_default_value<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Collection_1ac706b8105f8735903b5563114d9e8173" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Collection_1ac706b8105f8735903b5563114d9e8173" kindref="member">__init__</ref>(self,<sp/>spec,<sp/>element,<sp/>name=None):</highlight></codeline>
<codeline lineno="266" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Collection_1a30ed95d7cc5638973bfe7c6556b074d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Collection_1a30ed95d7cc5638973bfe7c6556b074d9" kindref="member">_element</ref><sp/>=<sp/>element</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Compound.__init__(self,<sp/>spec,<sp/>extras=[element],<sp/>name=name)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Collection_1a167a4431f60f234c461a83b20083eab8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Collection_1a167a4431f60f234c461a83b20083eab8" kindref="member">value</ref>(self,<sp/>node):</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child_node<sp/>=<sp/>node.get_child_by_name(self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Collection_1aa2bdc720e900a2e2658d8ed5c375bb13" kindref="member">_element_name</ref>,<sp/>shallow=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>child_node:<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>child_node.value()</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Collection_1a506df0c7838e1f9227a743f9f00ac964" kindref="member">_default_value</ref></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Magnitude" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Magnitude" kindref="compound">Magnitude</ref>(<ref refid="namespacedragonfly_1_1grammar_1_1elements_1a28abaf9036a2da7afa08c66f514e0d2f" kindref="member">Compound</ref>):</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Magnitude_1add568f13e4990422725665ad735a131d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_mul_default<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="279" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Magnitude_1a9e1a61bb1cf3f7ae29c571da1be9fd2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_rem_default<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Magnitude_1a341d1c5b11f658bdc2ab700f0f539abc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Magnitude_1a341d1c5b11f658bdc2ab700f0f539abc" kindref="member">__init__</ref>(self,<sp/>factor,<sp/>spec,<sp/>multiplier,<sp/>remainder,<sp/>name=None):</highlight></codeline>
<codeline lineno="282" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Magnitude_1adc2174b22de660d944e175a34be5b7d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Magnitude_1adc2174b22de660d944e175a34be5b7d6" kindref="member">_factor</ref><sp/>=<sp/>factor</highlight></codeline>
<codeline lineno="283" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Magnitude_1a55df1aafa3d8798cab697dc7da096ad7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Magnitude_1a55df1aafa3d8798cab697dc7da096ad7" kindref="member">_mul</ref><sp/>=<sp/>multiplier</highlight></codeline>
<codeline lineno="284" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Magnitude_1a85aba96c1b044a4fd70ff6ea08ac5c0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Magnitude_1a85aba96c1b044a4fd70ff6ea08ac5c0d" kindref="member">_rem</ref><sp/>=<sp/>remainder</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Compound.__init__(self,<sp/>spec,<sp/>extras=[multiplier,<sp/>remainder],<sp/>name=name)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Magnitude_1a21c31d1bdbb38a6746b79e066907177b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Magnitude_1a21c31d1bdbb38a6746b79e066907177b" kindref="member">__repr__</ref>(self):</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;%s(%s)&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self.__class__.__name__,<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Magnitude_1adc2174b22de660d944e175a34be5b7d6" kindref="member">_factor</ref>)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Magnitude_1a1c417809d91495085895f3c8f9795b23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Magnitude_1a1c417809d91495085895f3c8f9795b23" kindref="member">value</ref>(self,<sp/>node):</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mul_node<sp/>=<sp/>node.get_child_by_name(self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Magnitude_1a55df1aafa3d8798cab697dc7da096ad7" kindref="member">_mul</ref>.name,<sp/>shallow=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rem_node<sp/>=<sp/>node.get_child_by_name(self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Magnitude_1a85aba96c1b044a4fd70ff6ea08ac5c0d" kindref="member">_rem</ref>.name,<sp/>shallow=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>mul_node:<sp/><sp/>multiplier<sp/>=<sp/>mul_node.value()</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multiplier<sp/>=<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Magnitude_1add568f13e4990422725665ad735a131d" kindref="member">_mul_default</ref></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>rem_node:<sp/><sp/>remainder<sp/><sp/>=<sp/>rem_node.value()</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remainder<sp/><sp/>=<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Magnitude_1a9e1a61bb1cf3f7ae29c571da1be9fd2c" kindref="member">_rem_default</ref></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>multiplier<sp/>*<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1Magnitude_1adc2174b22de660d944e175a34be5b7d6" kindref="member">_factor</ref><sp/>+<sp/>remainder</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPathsCollection" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPathsCollection" kindref="compound">ModifiedPathsCollection</ref>(<ref refid="namespacedragonfly_1_1grammar_1_1elements_1a5fae346809679996270fdc08704d01e0" kindref="member">Alternative</ref>):</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Collect<sp/>and<sp/>use<sp/>paths<sp/>to<sp/>*augment*<sp/>recognition<sp/>of<sp/>the<sp/>given<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>(default).<sp/><sp/>Discards<sp/>nil<sp/>value<sp/>or<sp/>unchanged<sp/>strings<sp/>returned<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>modifier<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPathsCollection_1a5f69e9d138c2621c7449854e296f8a89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>MODE_AUGMENT<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Collect<sp/>and<sp/>use<sp/>paths<sp/>to<sp/>*replace*<sp/>recognition<sp/>of<sp/>the<sp/>given<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>Discards<sp/>nil<sp/>value<sp/>strings<sp/>returned<sp/>by<sp/>the<sp/>modifier<sp/>function.<sp/><sp/>Keeps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>unchanged<sp/>path<sp/>strings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPathsCollection_1abd5c6358fb6395df9049082825e29bc2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>MODE_REPLACE<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPathsCollection_1a497231c7837f21898b579e11338c61d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPathsCollection_1a497231c7837f21898b579e11338c61d5" kindref="member">__init__</ref>(self,<sp/>element,<sp/>modifier_function,<sp/>modifier_mode,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=None):</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>0<sp/>&lt;<sp/>modifier_mode<sp/>&lt;=<sp/>2:</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>modifier<sp/>mode:<sp/>%d&quot;</highlight><highlight class="normal"><sp/>%<sp/>modifier_mode)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>element<sp/>tree<sp/>recognition<sp/>paths<sp/>and<sp/>use<sp/>them<sp/>to<sp/>create</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>children<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specs<sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>path<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPathsCollection_1a03c05ee11c4502f7e615d5df24b58f87" kindref="member">_generate_paths</ref>(element):</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>a<sp/>flat<sp/>list<sp/>of<sp/>each<sp/>word<sp/>in<sp/>this<sp/>path.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_words<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>words<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>path:</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_words.extend(words)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>a<sp/>spec<sp/>using<sp/>the<sp/>modifier<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">.join(all_words)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec<sp/>=<sp/>modifier_function(text)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Handle<sp/>the<sp/>result<sp/>based<sp/>on<sp/>the<sp/>specified<sp/>modifier<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>modifier_mode<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPathsCollection_1a5f69e9d138c2621c7449854e296f8a89" kindref="member">MODE_AUGMENT</ref>:</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>spec<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>text<sp/>==<sp/>spec:</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>modifier_mode<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPathsCollection_1abd5c6358fb6395df9049082825e29bc2" kindref="member">MODE_REPLACE</ref>:</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>spec:</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Always<sp/>skip<sp/>duplicate<sp/>specs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>spec<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>specs:</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialize<sp/>a<sp/>new<sp/>ModifiedPath<sp/>element,<sp/>passing<sp/>the<sp/>original</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>element<sp/>and<sp/>words<sp/>for<sp/>decode-time<sp/>calculation<sp/>of<sp/>the<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specs.add(spec)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>children.append(<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPath" kindref="compound">ModifiedPath</ref>(spec,<sp/>all_words,<sp/>element))</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialize<sp/>super<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Alternative.__init__(self,<sp/>children=children,<sp/>name=name)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPathsCollection_1a52e2f657fe5fc4daafdd84888fc1a491" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPathsCollection_1a52e2f657fe5fc4daafdd84888fc1a491" kindref="member">_generate_sequence_paths</ref>(self,<sp/>element,<sp/>child_no):</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>child_no<sp/>&gt;<sp/>len(element.children)<sp/>-<sp/>1:</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child<sp/>=<sp/>element.children[child_no]</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_child<sp/>=<sp/>child_no<sp/>+<sp/>1</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>head<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPathsCollection_1a03c05ee11c4502f7e615d5df24b58f87" kindref="member">_generate_paths</ref>(child):</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>head:</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>tail<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPathsCollection_1a52e2f657fe5fc4daafdd84888fc1a491" kindref="member">_generate_sequence_paths</ref>(element,<sp/>next_child):</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>head<sp/>+<sp/>tail</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPathsCollection_1a03c05ee11c4502f7e615d5df24b58f87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPathsCollection_1a03c05ee11c4502f7e615d5df24b58f87" kindref="member">_generate_paths</ref>(self,<sp/>element):</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(element,<sp/>Literal):</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>[element.words]</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(element,<sp/>ListRef):</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(element.list)<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Impossible<sp/>path.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>paths<sp/>from<sp/>the<sp/>list<sp/>words.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>word<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>element.list.get_list_items():</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>[word.split()]</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(element,<sp/>Sequence):</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>each<sp/>complete<sp/>path<sp/>of<sp/>the<sp/>sequence.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>path<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPathsCollection_1a52e2f657fe5fc4daafdd84888fc1a491" kindref="member">_generate_sequence_paths</ref>(element,<sp/>0):</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>path:</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>path</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(element,<sp/>Alternative):</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>the<sp/>paths<sp/>of<sp/>each<sp/>alternative.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>child<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>element.children:</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>path<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPathsCollection_1a03c05ee11c4502f7e615d5df24b58f87" kindref="member">_generate_paths</ref>(child):</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>path:</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>path</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(element,<sp/>Optional):</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>the<sp/>possible<sp/>paths.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Optional<sp/>element<sp/>is<sp/>not<sp/>spoken.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Optional<sp/>element<sp/>is<sp/>spoken.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>path<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPathsCollection_1a03c05ee11c4502f7e615d5df24b58f87" kindref="member">_generate_paths</ref>(element.children[0]):</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>path:</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>path</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(element,<sp/>Impossible):</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Impossible<sp/>path.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(element,<sp/>RuleRef):</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>the<sp/>possible<sp/>paths<sp/>from<sp/>the<sp/>referenced<sp/>rule&apos;s<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>tree.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>path<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPathsCollection_1a03c05ee11c4502f7e615d5df24b58f87" kindref="member">_generate_paths</ref>(element.rule.element):</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>path:</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>path</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPath" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPath" kindref="compound">ModifiedPath</ref>(<ref refid="namespacedragonfly_1_1grammar_1_1elements_1a28abaf9036a2da7afa08c66f514e0d2f" kindref="member">Compound</ref>):</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPath_1a85a2cfc61043d7bb3be3ef87bc859af8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPath_1a85a2cfc61043d7bb3be3ef87bc859af8" kindref="member">__init__</ref>(self,<sp/>spec,<sp/>words,<sp/>orig_root_element,<sp/>name=None):</highlight></codeline>
<codeline lineno="422" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPath_1acb90a02bb51041c31fed804d7796eb21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPath_1acb90a02bb51041c31fed804d7796eb21" kindref="member">_words</ref><sp/>=<sp/>words</highlight></codeline>
<codeline lineno="423" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPath_1a27b318f275f54c928ceddbb5038e8cea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPath_1a27b318f275f54c928ceddbb5038e8cea" kindref="member">_orig_root_element</ref><sp/>=<sp/>orig_root_element</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Compound.__init__(self,<sp/>spec,<sp/>name=name)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPath_1a43f8195133003b25806915a1f926f160" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPath_1a43f8195133003b25806915a1f926f160" kindref="member">value</ref>(self,<sp/>node):</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="428"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>*value*<sp/>of<sp/>a<sp/>:class:`ModifiedPath`<sp/>is<sp/>the<sp/>*value*</highlight></codeline>
<codeline lineno="429"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obtained<sp/>by<sp/>decoding<sp/>the<sp/>original<sp/>words.</highlight></codeline>
<codeline lineno="430"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="431"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1grammar_1_1state" kindref="compound">dragonfly.grammar.state</ref><sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>state_</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>words_rules<sp/>=<sp/>tuple((word,<sp/>0)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>word<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPath_1acb90a02bb51041c31fed804d7796eb21" kindref="member">_words</ref>)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>state_.State(words_rules,<sp/>[],<sp/>node.engine)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.initialize_decoding()</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPath_1a27b318f275f54c928ceddbb5038e8cea" kindref="member">_orig_root_element</ref>.decode(s):</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>s.finished():</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root<sp/>=<sp/>s.build_parse_tree()</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>root.value()</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._log_decode.error(</highlight><highlight class="stringliteral">&quot;CompoundWord<sp/>%s:<sp/>failed<sp/>to<sp/>decode<sp/>original&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>words<sp/>%r.&quot;</highlight><highlight class="normal">,<sp/>self,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">.join(self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1ModifiedPath_1acb90a02bb51041c31fed804d7796eb21" kindref="member">_words</ref>))</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Integer<sp/>content<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntegerContentBase" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntegerContentBase" kindref="compound">IntegerContentBase</ref>(object):</highlight></codeline>
<codeline lineno="449" refid="classdragonfly_1_1language_1_1base_1_1integer__internal_1_1IntegerContentBase_1a7e40b60344ea6ab482b0ee8a3d929110" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>builders<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/language/base/integer_internal.py"/>
  </compounddef>
</doxygen>
