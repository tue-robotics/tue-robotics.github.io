<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1actions_1_1action__mimic_1_1Mimic" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::actions::action_mimic::Mimic</compoundname>
    <basecompoundref refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase" prot="public" virt="non-virtual">dragonfly.actions.action_base.ActionBase</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1actions_1_1action__mimic_1_1Mimic_1a66cd34e5c54466bf623ecb60a08bd451" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.actions.action_mimic.Mimic::_extra</definition>
        <argsstring></argsstring>
        <name>_extra</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_mimic.py" line="107" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_mimic.py" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1actions_1_1action__mimic_1_1Mimic_1ab84d0959cbbd72bee93881f31b674dfa" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.actions.action_mimic.Mimic::_str</definition>
        <argsstring></argsstring>
        <name>_str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_mimic.py" line="112" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_mimic.py" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1actions_1_1action__mimic_1_1Mimic_1ac0a56c446867d7effcbf1ee7d9096afb" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.actions.action_mimic.Mimic::_words</definition>
        <argsstring></argsstring>
        <name>_words</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_mimic.py" line="105" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_mimic.py" bodystart="105" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1actions_1_1action__mimic_1_1Mimic_1a855175b6bb0ee9c73716b47081b05a1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.actions.action_mimic.Mimic.__init__</definition>
        <argsstring>(self, *words, **kwargs)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>*</type>
          <declname>words</declname>
        </param>
        <param>
          <type>**</type>
          <declname>kwargs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_mimic.py" line="103" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_mimic.py" bodystart="103" bodyend="118"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdragonfly_1_1actions_1_1action__mimic_1_1Mimic_1ac093374138628cb9a968b3dd423f66a7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.actions.action_mimic.Mimic._execute</definition>
        <argsstring>(self, data=None)</argsstring>
        <name>_execute</name>
        <reimplements refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a180101e50972f99fca9ca74009ce175f">_execute</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>data</type>
          <defname>data</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Virtual method. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_mimic.py" line="119" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_mimic.py" bodystart="119" bodyend="151"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>    Mimic recognition action.

    The constructor arguments are the words which will be mimicked.
    These should be passed as a variable argument list.  For example::

        action = Mimic(&quot;hello&quot;, &quot;world&quot;, r&quot;!\\exclamation-mark&quot;)
        action.execute()

    If an error occurs during mimicking the given recognition, then an
    *ActionError* is raised.  A common error is that the engine does
    not know the given words and can therefore not recognize them.
    For example, the following attempts to mimic recognition of *one
    single word* including a space and an exclamation-mark; this will
    almost certainly fail::

        Mimic(&quot;hello world!&quot;).execute()   # Will raise ActionError.

    The constructor accepts the optional *extra* keyword argument, and
    uses this to retrieve dynamic data from the extras associated with
    the recognition.  For example, this can be used as follows to
    implement dynamic mimicking::

        class ExampleRule(MappingRule):
            mapping  = {
                        &quot;mimic recognition &lt;text&gt; [&lt;n&gt; times]&quot;:
                            Mimic(extra=&quot;text&quot;) * Repeat(extra=&quot;n&quot;),
                       }
            extras   = [
                        IntegerRef(&quot;n&quot;, 1, 10),
                        Dictation(&quot;text&quot;),
                       ]
            defaults = {
                        &quot;n&quot;: 1,
                       }

    The example above will allow the user to speak **&quot;mimic
    recognition hello world! 3 times&quot;**, which would result in the
    exact same output as if the user had spoken **&quot;hello world!&quot;**
    three times in a row.</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dragonfly.actions.action_mimic.Mimic</label>
        <link refid="classdragonfly_1_1actions_1_1action__mimic_1_1Mimic"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
      <node id="2">
        <label>dragonfly.actions.action_base.ActionBase</label>
        <link refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>dragonfly.actions.action_mimic.Mimic</label>
        <link refid="classdragonfly_1_1actions_1_1action__mimic_1_1Mimic"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
      <node id="2">
        <label>dragonfly.actions.action_base.ActionBase</label>
        <link refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_mimic.py" line="59" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_mimic.py" bodystart="59" bodyend="151"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a1dfe8e16c1e8963f72c8cb04ec367e9f" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_mimic::Mimic</scope><name>__add__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a444ecf185c7836c8be0cf2e166a5f45a" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_mimic::Mimic</scope><name>__iadd__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a39afe0cb63ff97da799bd1fcc7286395" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_mimic::Mimic</scope><name>__imul__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__mimic_1_1Mimic_1a855175b6bb0ee9c73716b47081b05a1c" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_mimic::Mimic</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a0afc12f5eb003b59bf4b11d3928321a2" prot="public" virt="non-virtual" ambiguityscope="dragonfly::actions::action_base::ActionBase."><scope>dragonfly::actions::action_mimic::Mimic</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a043986deb9acb1306f393f1a5cde6632" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_mimic::Mimic</scope><name>__ior__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1aa71fbd62af7c640fc65943c76cc09563" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_mimic::Mimic</scope><name>__mul__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1aa7d635f74abfc39b412c4d8f247f1fd0" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_mimic::Mimic</scope><name>__or__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a4ceb796f69cac0c4f601ce5916f5c91c" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_mimic::Mimic</scope><name>__repr__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a54a429d1d2bd048279e57ba5aaea2449" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_mimic::Mimic</scope><name>__unicode__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__mimic_1_1Mimic_1ac093374138628cb9a968b3dd423f66a7" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_mimic::Mimic</scope><name>_execute</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__mimic_1_1Mimic_1a66cd34e5c54466bf623ecb60a08bd451" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_mimic::Mimic</scope><name>_extra</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a3861efea158692698e3a4f9d79ec7395" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_mimic::Mimic</scope><name>_log</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a842c601698c9eb62bb03ad937afe9aa6" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_mimic::Mimic</scope><name>_log_exec</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a873179afc5fe4521c177e121cc6cc9ae" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_mimic::Mimic</scope><name>_log_init</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__mimic_1_1Mimic_1ab84d0959cbbd72bee93881f31b674dfa" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_mimic::Mimic</scope><name>_str</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__mimic_1_1Mimic_1ac0a56c446867d7effcbf1ee7d9096afb" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_mimic::Mimic</scope><name>_words</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a6d193fe1211e618673e4f4cc06ac623b" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_mimic::Mimic</scope><name>bind</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a3454ac5c9ab40d43bc64af73157a89df" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_mimic::Mimic</scope><name>copy_bind</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a86ef0362bdcfbca96ae7f69df40b43f3" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_mimic::Mimic</scope><name>execute</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
