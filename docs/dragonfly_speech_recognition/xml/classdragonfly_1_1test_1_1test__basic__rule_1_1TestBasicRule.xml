<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1test_1_1test__basic__rule_1_1TestBasicRule" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::test::test_basic_rule::TestBasicRule</compoundname>
    <basecompoundref refid="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase" prot="public" virt="non-virtual">dragonfly.test.rule_testcase.RuleTestCase</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1test_1_1test__basic__rule_1_1TestBasicRule_1a65e7aed1d32fc8e0b6c4cc9c2a0c10fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.test_basic_rule.TestBasicRule.test_basic_rule</definition>
        <argsstring>(self)</argsstring>
        <name>test_basic_rule</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Verify that BasicRules can be loaded and recognized correctly.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_basic_rule.py" line="27" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_basic_rule.py" bodystart="27" bodyend="63"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>dragonfly.test.rule_testcase.RuleTestCase</label>
        <link refid="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>TestCase</label>
      </node>
      <node id="1">
        <label>dragonfly.test.test_basic_rule.TestBasicRule</label>
        <link refid="classdragonfly_1_1test_1_1test__basic__rule_1_1TestBasicRule"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>dragonfly.test.rule_testcase.RuleTestCase</label>
        <link refid="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>TestCase</label>
      </node>
      <node id="1">
        <label>dragonfly.test.test_basic_rule.TestBasicRule</label>
        <link refid="classdragonfly_1_1test_1_1test__basic__rule_1_1TestBasicRule"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_basic_rule.py" line="25" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_basic_rule.py" bodystart="25" bodyend="63"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase_1a6264fea87e5ff9d4021d63ee05284c55" prot="public" virt="non-virtual"><scope>dragonfly::test::test_basic_rule::TestBasicRule</scope><name>add_rule</name></member>
      <member refid="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase_1a6965e7fe66c8622880ce04d31d498be7" prot="public" virt="non-virtual"><scope>dragonfly::test::test_basic_rule::TestBasicRule</scope><name>engine</name></member>
      <member refid="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase_1ac0e05486740c77c7cdb372a22a447267" prot="public" virt="non-virtual"><scope>dragonfly::test::test_basic_rule::TestBasicRule</scope><name>grammar</name></member>
      <member refid="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase_1a32a1f8387c860f2ba559a8adf17dfe24" prot="public" virt="non-virtual"><scope>dragonfly::test::test_basic_rule::TestBasicRule</scope><name>recognize</name></member>
      <member refid="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase_1af3350ac4f29162eabc346e9d1969b0df" prot="public" virt="non-virtual"><scope>dragonfly::test::test_basic_rule::TestBasicRule</scope><name>recognize_extras</name></member>
      <member refid="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase_1a56e9001773b834c7db1d51b71c83e950" prot="public" virt="non-virtual"><scope>dragonfly::test::test_basic_rule::TestBasicRule</scope><name>recognize_node</name></member>
      <member refid="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase_1a1d6e7edcf9eff7096858702746eb6550" prot="public" virt="non-virtual"><scope>dragonfly::test::test_basic_rule::TestBasicRule</scope><name>run</name></member>
      <member refid="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase_1a2466b6a01371604a9a27a541425d1d2c" prot="public" virt="non-virtual"><scope>dragonfly::test::test_basic_rule::TestBasicRule</scope><name>tearDown</name></member>
      <member refid="classdragonfly_1_1test_1_1test__basic__rule_1_1TestBasicRule_1a65e7aed1d32fc8e0b6c4cc9c2a0c10fd" prot="public" virt="non-virtual"><scope>dragonfly::test::test_basic_rule::TestBasicRule</scope><name>test_basic_rule</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
