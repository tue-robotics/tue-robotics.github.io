<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacedragonfly_1_1grammar_1_1elements__basic" kind="namespace" language="Python">
    <compoundname>dragonfly::grammar::elements_basic</compoundname>
    <innerclass refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Alternative" prot="public">dragonfly::grammar::elements_basic::Alternative</innerclass>
    <innerclass refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Dictation" prot="public">dragonfly::grammar::elements_basic::Dictation</innerclass>
    <innerclass refid="classdragonfly_1_1grammar_1_1elements__basic_1_1DictListRef" prot="public">dragonfly::grammar::elements_basic::DictListRef</innerclass>
    <innerclass refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase" prot="public">dragonfly::grammar::elements_basic::ElementBase</innerclass>
    <innerclass refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Empty" prot="public">dragonfly::grammar::elements_basic::Empty</innerclass>
    <innerclass refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Impossible" prot="public">dragonfly::grammar::elements_basic::Impossible</innerclass>
    <innerclass refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ListRef" prot="public">dragonfly::grammar::elements_basic::ListRef</innerclass>
    <innerclass refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal" prot="public">dragonfly::grammar::elements_basic::Literal</innerclass>
    <innerclass refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Modifier" prot="public">dragonfly::grammar::elements_basic::Modifier</innerclass>
    <innerclass refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Optional" prot="public">dragonfly::grammar::elements_basic::Optional</innerclass>
    <innerclass refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Repetition" prot="public">dragonfly::grammar::elements_basic::Repetition</innerclass>
    <innerclass refid="classdragonfly_1_1grammar_1_1elements__basic_1_1RuleRef" prot="public">dragonfly::grammar::elements_basic::RuleRef</innerclass>
    <innerclass refid="classdragonfly_1_1grammar_1_1elements__basic_1_1RuleWrap" prot="public">dragonfly::grammar::elements_basic::RuleWrap</innerclass>
    <innerclass refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Sequence" prot="public">dragonfly::grammar::elements_basic::Sequence</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacedragonfly_1_1grammar_1_1elements__basic_1a2f8953802d11f2d77cf9a5ad6d33708e" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dragonfly::grammar::elements_basic.id_generator</definition>
        <argsstring></argsstring>
        <name>id_generator</name>
        <initializer>=  itertools.count()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" line="94" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" line="1" column="1"/>
  </compounddef>
</doxygen>
