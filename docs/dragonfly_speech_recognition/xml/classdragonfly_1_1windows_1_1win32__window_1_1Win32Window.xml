<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::windows::win32_window::Win32Window</compoundname>
    <basecompoundref refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow" prot="public" virt="non-virtual">dragonfly.windows.base_window.BaseWindow</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1ab79ca2fc1c4ec11a5341c96dde48c522" prot="private" static="yes" mutable="no">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window::_bring_to_top</definition>
        <argsstring></argsstring>
        <name>_bring_to_top</name>
        <initializer>=  <ref refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1ac029f133b07e1d63a509342c253b1ff4" kindref="member">_win32gui_func</ref>(&quot;BringWindowToTop&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="136" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a22e305c86f4d7287fa389a479606f989" prot="private" static="yes" mutable="no">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window::_destroy</definition>
        <argsstring></argsstring>
        <name>_destroy</name>
        <initializer>=  <ref refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1ac029f133b07e1d63a509342c253b1ff4" kindref="member">_win32gui_func</ref>(&quot;DestroyWindow&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="134" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1ad8b08ed954d7406b547a2409cc409bc3" prot="private" static="yes" mutable="no">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window::_get_class_name</definition>
        <argsstring></argsstring>
        <name>_get_class_name</name>
        <initializer>=  <ref refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1ac029f133b07e1d63a509342c253b1ff4" kindref="member">_win32gui_func</ref>(&quot;GetClassName&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="138" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a009992dc56d41ed74c6acf9f940aa99d" prot="private" static="yes" mutable="no">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window::_get_rect</definition>
        <argsstring></argsstring>
        <name>_get_rect</name>
        <initializer>=  <ref refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1ac029f133b07e1d63a509342c253b1ff4" kindref="member">_win32gui_func</ref>(&quot;GetWindowRect&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="133" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1ab5523d656053985c4a9c7ec3542f9445" prot="private" static="yes" mutable="no">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window::_get_window_text</definition>
        <argsstring></argsstring>
        <name>_get_window_text</name>
        <initializer>=  <ref refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1ac029f133b07e1d63a509342c253b1ff4" kindref="member">_win32gui_func</ref>(&quot;GetWindowText&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="137" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1ade6a25ff2a95b13f8534bc89b107b0b0" prot="private" static="yes" mutable="no">
        <type>list</type>
        <definition>list dragonfly.windows.win32_window.Win32Window::_results_box_class_names</definition>
        <argsstring></argsstring>
        <name>_results_box_class_names</name>
        <initializer>=  [&quot;#32770&quot;, &quot;DgnResultsBoxWindow&quot;]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="53" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1aae6ef90567a86b1b1fd76dcb80e31049" prot="private" static="yes" mutable="no">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window::_set_foreground</definition>
        <argsstring></argsstring>
        <name>_set_foreground</name>
        <initializer>=  <ref refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1ac029f133b07e1d63a509342c253b1ff4" kindref="member">_win32gui_func</ref>(&quot;SetForegroundWindow&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="135" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="135" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a9dd794b7113b5934a70a7b18a2375213" prot="public" static="yes" mutable="no">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window::close</definition>
        <argsstring></argsstring>
        <name>close</name>
        <initializer>=  <ref refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a910c20c5046c6fd80250635d428c656c" kindref="member">_win32gui_post</ref>(win32con.WM_CLOSE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="167" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1ae8b9f49ecdf2e8b2d90c361d30f3133d" prot="public" static="yes" mutable="no">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window::is_enabled</definition>
        <argsstring></argsstring>
        <name>is_enabled</name>
        <initializer>=  <ref refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a365d3241095d4ea07dc211e2aee7429b" kindref="member">_win32gui_test</ref>(&quot;IsWindowEnabled&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="147" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a6a9b436bd34a8d2c82e2f4e30f9f55c5" prot="public" static="yes" mutable="no">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window::is_minimized</definition>
        <argsstring></argsstring>
        <name>is_minimized</name>
        <initializer>=  <ref refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a365d3241095d4ea07dc211e2aee7429b" kindref="member">_win32gui_test</ref>(&quot;IsIconic&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="149" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a62002b9cc498d07ebc4596b741787389" prot="public" static="yes" mutable="no">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window::is_valid</definition>
        <argsstring></argsstring>
        <name>is_valid</name>
        <initializer>=  <ref refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a365d3241095d4ea07dc211e2aee7429b" kindref="member">_win32gui_test</ref>(&quot;IsWindow&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="146" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a7ab5e5d11da92df8cd90df98a146de3c" prot="public" static="yes" mutable="no">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window::is_visible</definition>
        <argsstring></argsstring>
        <name>is_visible</name>
        <initializer>=  <ref refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a365d3241095d4ea07dc211e2aee7429b" kindref="member">_win32gui_test</ref>(&quot;IsWindowVisible&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="148" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1af30caef7b2151f737d574c8b685c8dca" prot="public" static="yes" mutable="no">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window::maximize</definition>
        <argsstring></argsstring>
        <name>maximize</name>
        <initializer>=  <ref refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a36e839e5d8266f1c5653e2828fdd88ec" kindref="member">_win32gui_show_window</ref>(win32con.SW_MAXIMIZE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="161" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1ae68738440899c761458195b613155fb7" prot="public" static="yes" mutable="no">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window::minimize</definition>
        <argsstring></argsstring>
        <name>minimize</name>
        <initializer>=  <ref refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a36e839e5d8266f1c5653e2828fdd88ec" kindref="member">_win32gui_show_window</ref>(win32con.SW_MINIMIZE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="160" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a46ed2e7ab58cf03ba86b5ec2448671c4" prot="public" static="yes" mutable="no">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window::restore</definition>
        <argsstring></argsstring>
        <name>restore</name>
        <initializer>=  <ref refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a36e839e5d8266f1c5653e2828fdd88ec" kindref="member">_win32gui_show_window</ref>(win32con.SW_RESTORE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="162" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="162" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a3a5e555fe04eb1f21c0359d15d6d39a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window.__init__</definition>
        <argsstring>(self, handle)</argsstring>
        <name>__init__</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1aabd0a8a77bd6de9e4da12e2a5c7fdbe6">__init__</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a41b1b75df4528228d6a1efb88baf3b82" kindref="member">handle</ref></type>
          <defname>handle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="119" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1aca4a660ecf71ec9f70a872d3b2ecdec1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window.__repr__</definition>
        <argsstring>(self)</argsstring>
        <name>__repr__</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a3d7dfc6c1540135d3488931af373dd5a">__repr__</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="122" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a49e9668f1a10c9a1b5d9560342a8a5c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window.get_all_windows</definition>
        <argsstring>(cls)</argsstring>
        <name>get_all_windows</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1adbfb949d694a91d2b324fbeb01ed0917">get_all_windows</reimplements>
        <param>
          <type>cls</type>
          <defname>cls</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Get a list of all windows. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="67" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="67" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a957b00f8df6c06d1b2ffc6d6563dd026" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window.get_foreground</definition>
        <argsstring>(cls)</argsstring>
        <name>get_foreground</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a84081bfe7e50f0d97e95c0b9c0f4956f">get_foreground</reimplements>
        <param>
          <type>cls</type>
          <defname>cls</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Get the foreground window. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="59" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="59" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a7d39deeabdf0a4036afad473a354d7ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window.get_matching_windows</definition>
        <argsstring>(cls, executable=None, title=None)</argsstring>
        <name>get_matching_windows</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1ae63505f0d06f4f15608559fa3cdacac0">get_matching_windows</reimplements>
        <param>
          <type>cls</type>
          <defname>cls</defname>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a5e8da6c3a06d69a730966eebc18ae309" kindref="member">executable</ref></type>
          <defname>executable</defname>
          <defval>None</defval>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1aa4cccd9b2275816052dbc7b5d96ba438" kindref="member">title</ref></type>
          <defname>title</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Find windows with a matching executable or title.

Window searches are case-insensitive.

If neither parameter is be specified, then it is effectively the
same as calling :meth:`get_all_windows`.

:param executable: -- part of the filename of the application&apos;s
   executable to which the target window belongs; not case
   sensitive.
:param title: -- part of the title of the target window; not case
   sensitive.
:type executable: str
:type title: str
:rtype: list
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="75" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="75" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a83f9459a24013758398664200b2caa86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window.get_position</definition>
        <argsstring>(self)</argsstring>
        <name>get_position</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a13ea545de11bbe7b77f1bbc9ed1ce5c7">get_position</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Method to get the window&apos;s position as a :class:`Rectangle` object.

:returns: window position
:rtype: Rectangle
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="215" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="215" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a51005892718ee93c24341986f8fb7ba9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window.is_maximized</definition>
        <argsstring>(self)</argsstring>
        <name>is_maximized</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a054543ac6fa58bb2c3eaca54f1d7090b">is_maximized</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Whether the window is currently maximized. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="152" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="152" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a415949620c2bbecf0d6a7251b8b023e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window.set_focus</definition>
        <argsstring>(self)</argsstring>
        <name>set_focus</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a17184bd383bf416ff5165187615b8b10">set_focus</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Set the window as the active window without raising it.

*Note*: this method will behave like :meth:`set_foreground()` in
environments where this isn&apos;t possible.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="246" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="246" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1aee391c1998979b6b8b47bcaea75ec332" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window.set_foreground</definition>
        <argsstring>(self)</argsstring>
        <name>set_foreground</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a8853b8be6978da5ca290e38328c86e31">set_foreground</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Set the window as the foreground (active) window. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="228" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="228" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1ada6b566a47b4bb958c606e31eb60de6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window.set_position</definition>
        <argsstring>(self, rectangle)</argsstring>
        <name>set_position</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1ae0210d010dc268245814dabdd17b3715">set_position</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>rectangle</type>
          <defname>rectangle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Method to set the window&apos;s position using a :class:`Rectangle`
object.

:param rectangle: window position
:type rectangle: Rectangle
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="220" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="220" bodyend="224"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a2ac8bad98414b982a457a3210188c9aa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window._get_window_module</definition>
        <argsstring>(self)</argsstring>
        <name>_get_window_module</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a8dd171828bf9d20d782f3e4a09788685">_get_window_module</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="175" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="175" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1ac6402681775f45691fef74ff8e8417bf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window._get_window_pid</definition>
        <argsstring>(self)</argsstring>
        <name>_get_window_pid</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1aea79158ee43cebfa2bd3cd32910ba1b9">_get_window_pid</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="169" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="169" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1ac029f133b07e1d63a509342c253b1ff4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window._win32gui_func</definition>
        <argsstring>(name)</argsstring>
        <name>_win32gui_func</name>
        <param>
          <type><ref refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1af8151df04e705f0d77e580dee54b0d7e" kindref="member">name</ref></type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="129" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="129" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a910c20c5046c6fd80250635d428c656c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window._win32gui_post</definition>
        <argsstring>(message, w=0, l=0)</argsstring>
        <name>_win32gui_post</name>
        <param>
          <type>message</type>
          <defname>message</defname>
        </param>
        <param>
          <type>w</type>
          <defname>w</defname>
          <defval>0</defval>
        </param>
        <param>
          <type>l</type>
          <defname>l</defname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="164" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a36e839e5d8266f1c5653e2828fdd88ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window._win32gui_show_window</definition>
        <argsstring>(state)</argsstring>
        <name>_win32gui_show_window</name>
        <param>
          <type>state</type>
          <defname>state</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="157" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="157" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a365d3241095d4ea07dc211e2aee7429b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.win32_window.Win32Window._win32gui_test</definition>
        <argsstring>(name)</argsstring>
        <name>_win32gui_test</name>
        <param>
          <type><ref refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1af8151df04e705f0d77e580dee54b0d7e" kindref="member">name</ref></type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="140" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="140" bodyend="145"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>    The Window class is an interface to the Win32 window control
    and placement.</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>dragonfly.windows.base_window.BaseWindow</label>
        <link refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
      <node id="1">
        <label>dragonfly.windows.win32_window.Win32Window</label>
        <link refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>dragonfly.windows.base_window.BaseWindow</label>
        <link refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
      <node id="1">
        <label>dragonfly.windows.win32_window.Win32Window</label>
        <link refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" line="46" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/win32_window.py" bodystart="46" bodyend="250"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a3a5e555fe04eb1f21c0359d15d6d39a2" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1aca4a660ecf71ec9f70a872d3b2ecdec1" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>__repr__</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1ab79ca2fc1c4ec11a5341c96dde48c522" prot="private" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>_bring_to_top</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a22e305c86f4d7287fa389a479606f989" prot="private" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>_destroy</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1ad8b08ed954d7406b547a2409cc409bc3" prot="private" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>_get_class_name</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a6593032dc95a7b4e27d04892631139b6" prot="private" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>_get_name</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a009992dc56d41ed74c6acf9f940aa99d" prot="private" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>_get_rect</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a2ac8bad98414b982a457a3210188c9aa" prot="private" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>_get_window_module</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1ac6402681775f45691fef74ff8e8417bf" prot="private" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>_get_window_pid</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1ab5523d656053985c4a9c7ec3542f9445" prot="private" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>_get_window_text</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a6598c4f857f23d3069a634de4a0149ee" prot="private" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>_handle</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a10fc38af0c7bbe6f9280bfe80cab2d8d" prot="private" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>_id</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a15d67b10b96f9aeb2216c50497d62b2c" prot="private" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>_names</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1ade6a25ff2a95b13f8534bc89b107b0b0" prot="private" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>_results_box_class_names</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1aae6ef90567a86b1b1fd76dcb80e31049" prot="private" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>_set_foreground</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1adc865e2370736d8530a35d6f5685621c" prot="private" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>_set_id</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1acb76f95c3524e7ab4af217fe3503c8a5" prot="private" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>_set_name</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1ac029f133b07e1d63a509342c253b1ff4" prot="private" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>_win32gui_func</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a910c20c5046c6fd80250635d428c656c" prot="private" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>_win32gui_post</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a36e839e5d8266f1c5653e2828fdd88ec" prot="private" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>_win32gui_show_window</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a365d3241095d4ea07dc211e2aee7429b" prot="private" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>_win32gui_test</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1af5cb30f0e630414e8de4f9dd02f26d39" prot="private" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>_windows_by_id</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a0ad233d03d4e560d508b0736383db477" prot="private" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>_windows_by_name</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1ac94cb76eacb9388cd7be1c9ea68d2c5a" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>classname</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a9dd794b7113b5934a70a7b18a2375213" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>close</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a12652977c2e2439eb4018607b11d72ac" prot="public" virt="non-virtual" ambiguityscope="dragonfly::windows::base_window::BaseWindow."><scope>dragonfly::windows::win32_window::Win32Window</scope><name>close</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a84fb1bafed13d3b11bfc81bed9ff322a" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>cls_name</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a5e8da6c3a06d69a730966eebc18ae309" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>executable</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a49e9668f1a10c9a1b5d9560342a8a5c9" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>get_all_windows</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1ad8de679f418d9412a06874c1630b6534" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>get_containing_monitor</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a957b00f8df6c06d1b2ffc6d6563dd026" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>get_foreground</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a7d39deeabdf0a4036afad473a354d7ae" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>get_matching_windows</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1ab0adffc385c1b0ccf78cf6dde5c2b74a" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>get_normalized_position</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a83f9459a24013758398664200b2caa86" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>get_position</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a43e64fdfd70a455a370111b9db11fe48" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>get_window</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a41b1b75df4528228d6a1efb88baf3b82" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>handle</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1aafd3621964165a581372cf27740f88d4" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>id</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a2f7ff8a1bc21cb8aff7d979f8d40a0b7" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>id</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1afa9b8c8c3a5b8a014c687ae8daa69b19" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>id</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1ae8b9f49ecdf2e8b2d90c361d30f3133d" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>is_enabled</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a51005892718ee93c24341986f8fb7ba9" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>is_maximized</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a6a9b436bd34a8d2c82e2f4e30f9f55c5" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>is_minimized</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1ae82ec1ff8d09bfa29e532d9b6e1836ac" prot="public" virt="non-virtual" ambiguityscope="dragonfly::windows::base_window::BaseWindow."><scope>dragonfly::windows::win32_window::Win32Window</scope><name>is_minimized</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a62002b9cc498d07ebc4596b741787389" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>is_valid</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a7ab5e5d11da92df8cd90df98a146de3c" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>is_visible</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1aad542c59bde2625ef31e455d72fc575f" prot="public" virt="non-virtual" ambiguityscope="dragonfly::windows::base_window::BaseWindow."><scope>dragonfly::windows::win32_window::Win32Window</scope><name>is_visible</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a51b031395547a6e6a928b2dba548c816" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>matches</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1af30caef7b2151f737d574c8b685c8dca" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>maximize</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a2ebbc5e073901c89de326dfc0c76499f" prot="public" virt="non-virtual" ambiguityscope="dragonfly::windows::base_window::BaseWindow."><scope>dragonfly::windows::win32_window::Win32Window</scope><name>maximize</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1ae68738440899c761458195b613155fb7" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>minimize</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1ae54394ad507ce64f864183d21f799626" prot="public" virt="non-virtual" ambiguityscope="dragonfly::windows::base_window::BaseWindow."><scope>dragonfly::windows::win32_window::Win32Window</scope><name>minimize</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a9c169cac5d5606d14435f4cec535e364" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>move</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1af8151df04e705f0d77e580dee54b0d7e" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>name</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a493027bd096357de25501607bbd66b50" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>pid</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a46ed2e7ab58cf03ba86b5ec2448671c4" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>restore</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a4188b2e6ced452189f14043e9e42eb53" prot="public" virt="non-virtual" ambiguityscope="dragonfly::windows::base_window::BaseWindow."><scope>dragonfly::windows::win32_window::Win32Window</scope><name>restore</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1a415949620c2bbecf0d6a7251b8b023e0" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>set_focus</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1aee391c1998979b6b8b47bcaea75ec332" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>set_foreground</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a4801ac838456acd27b30cddf4aae609c" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>set_normalized_position</name></member>
      <member refid="classdragonfly_1_1windows_1_1win32__window_1_1Win32Window_1ada6b566a47b4bb958c606e31eb60de6c" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>set_position</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1aa4cccd9b2275816052dbc7b5d96ba438" prot="public" virt="non-virtual"><scope>dragonfly::windows::win32_window::Win32Window</scope><name>title</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
