<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1actions_1_1action__text_1_1Text" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::actions::action_text::Text</compoundname>
    <basecompoundref refid="classdragonfly_1_1actions_1_1action__base__keyboard_1_1BaseKeyboardAction" prot="public" virt="non-virtual">dragonfly.actions.action_base_keyboard.BaseKeyboardAction</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1actions_1_1action__text_1_1Text_1a1e8a28fcb8c05687ed6349998b76d568" prot="private" static="yes" mutable="no">
        <type>dictionary</type>
        <definition>dictionary dragonfly.actions.action_text.Text::_specials</definition>
        <argsstring></argsstring>
        <name>_specials</name>
        <initializer>=  {
        &quot;\n&quot;: &quot;enter&quot;,
        &quot;\t&quot;: &quot;tab&quot;,
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_text.py" line="156" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_text.py" bodystart="156" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1actions_1_1action__text_1_1Text_1a409532d8adb10cce1aa9c2373c853916" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.actions.action_text.Text::_autofmt</definition>
        <argsstring></argsstring>
        <name>_autofmt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_text.py" line="167" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_text.py" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1actions_1_1action__text_1_1Text_1a6283dbf6d6b61ba363892551993747f4" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.actions.action_text.Text::_pause</definition>
        <argsstring></argsstring>
        <name>_pause</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_text.py" line="168" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_text.py" bodystart="168" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1actions_1_1action__text_1_1Text_1a9622529e3ac08c5e8dcbc93b402777d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.actions.action_text.Text.__init__</definition>
        <argsstring>(self, spec=None, static=False, pause=None, autofmt=False, use_hardware=False)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>spec</type>
          <defname>spec</defname>
          <defval>None</defval>
        </param>
        <param>
          <type>static</type>
          <defname>static</defname>
          <defval>False</defval>
        </param>
        <param>
          <type>pause</type>
          <defname>pause</defname>
          <defval>None</defval>
        </param>
        <param>
          <type>autofmt</type>
          <defname>autofmt</defname>
          <defval>False</defval>
        </param>
        <param>
          <type>use_hardware</type>
          <defname>use_hardware</defname>
          <defval>False</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_text.py" line="161" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_text.py" bodystart="161" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1actions_1_1action__text_1_1Text_1afa666e768c24bd936c82094debd48057" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.actions.action_text.Text.__str__</definition>
        <argsstring>(self)</argsstring>
        <name>__str__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_text.py" line="244" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_text.py" bodystart="244" bodyend="246"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdragonfly_1_1actions_1_1action__text_1_1Text_1a509b9139516287671f14875addb26f61" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.actions.action_text.Text._execute_events</definition>
        <argsstring>(self, events)</argsstring>
        <name>_execute_events</name>
        <reimplements refid="classdragonfly_1_1actions_1_1action__base_1_1DynStrActionBase_1a41dddac92f6480faa2d28de34cac01d1">_execute_events</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>events</type>
          <defname>events</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Send keyboard events.

If instance was initialized with *autofmt* True,
then this method will mimic a word recognition
and analyze its formatting so as to autoformat
the text&apos;s spacing and capitalization before
sending it as keyboard events.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_text.py" line="186" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_text.py" bodystart="186" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1actions_1_1action__text_1_1Text_1ab503ed7258b3d915e74ed3a4d291e82c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.actions.action_text.Text._parse_spec</definition>
        <argsstring>(self, spec)</argsstring>
        <name>_parse_spec</name>
        <reimplements refid="classdragonfly_1_1actions_1_1action__base_1_1DynStrActionBase_1a0c1a8108e201f2f636581d10081352a5">_parse_spec</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>spec</type>
          <defname>spec</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Convert the given *spec* to keyboard events.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_text.py" line="171" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_text.py" bodystart="171" bodyend="185"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>`Action` that sends keyboard events to type text.

Arguments:
 - *spec* (*str*) -- the text to type
 - *static* (boolean) --
   if *True*, do not dynamically interpret *spec*
   when executing this action
 - *pause* (*float*) --
   the time to pause between each keystroke, given
   in seconds
 - *autofmt* (boolean) --
   if *True*, attempt to format the text with correct
   spacing and capitalization.  This is done by first mimicking
   a word recognition and then analyzing its spacing and
   capitalization and applying the same formatting to the text.
 - *use_hardware* (boolean) --
   if *True*, send keyboard events using hardware emulation instead of
   as Unicode text. This will respect the up/down status of modifier
   keys.
</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>dragonfly.actions.action_base_keyboard.BaseKeyboardAction</label>
        <link refid="classdragonfly_1_1actions_1_1action__base__keyboard_1_1BaseKeyboardAction"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>object</label>
      </node>
      <node id="4">
        <label>dragonfly.actions.action_base.ActionBase</label>
        <link refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>dragonfly.actions.action_text.Text</label>
        <link refid="classdragonfly_1_1actions_1_1action__text_1_1Text"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>dragonfly.actions.action_base.DynStrActionBase</label>
        <link refid="classdragonfly_1_1actions_1_1action__base_1_1DynStrActionBase"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>dragonfly.actions.action_base_keyboard.BaseKeyboardAction</label>
        <link refid="classdragonfly_1_1actions_1_1action__base__keyboard_1_1BaseKeyboardAction"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>object</label>
      </node>
      <node id="4">
        <label>dragonfly.actions.action_base.ActionBase</label>
        <link refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>dragonfly.actions.action_text.Text</label>
        <link refid="classdragonfly_1_1actions_1_1action__text_1_1Text"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>dragonfly.actions.action_base.DynStrActionBase</label>
        <link refid="classdragonfly_1_1actions_1_1action__base_1_1DynStrActionBase"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_text.py" line="133" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_text.py" bodystart="133" bodyend="246"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a1dfe8e16c1e8963f72c8cb04ec367e9f" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>__add__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a444ecf185c7836c8be0cf2e166a5f45a" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>__iadd__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a39afe0cb63ff97da799bd1fcc7286395" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>__imul__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__text_1_1Text_1a9622529e3ac08c5e8dcbc93b402777d3" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base__keyboard_1_1BaseKeyboardAction_1afd64e52e29c6f25f0f768c4d50edd070" prot="public" virt="non-virtual" ambiguityscope="dragonfly::actions::action_base_keyboard::BaseKeyboardAction."><scope>dragonfly::actions::action_text::Text</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1DynStrActionBase_1a9df685d99d8c0aa0dec29e480f4ad0bf" prot="public" virt="non-virtual" ambiguityscope="dragonfly::actions::action_base::DynStrActionBase."><scope>dragonfly::actions::action_text::Text</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a0afc12f5eb003b59bf4b11d3928321a2" prot="public" virt="non-virtual" ambiguityscope="dragonfly::actions::action_base::ActionBase."><scope>dragonfly::actions::action_text::Text</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a043986deb9acb1306f393f1a5cde6632" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>__ior__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1aa71fbd62af7c640fc65943c76cc09563" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>__mul__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1aa7d635f74abfc39b412c4d8f247f1fd0" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>__or__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a4ceb796f69cac0c4f601ce5916f5c91c" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>__repr__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__text_1_1Text_1afa666e768c24bd936c82094debd48057" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>__str__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a54a429d1d2bd048279e57ba5aaea2449" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>__unicode__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__text_1_1Text_1a409532d8adb10cce1aa9c2373c853916" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>_autofmt</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1DynStrActionBase_1a8f836051af528aeca522d575868f0aef" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>_events</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1DynStrActionBase_1aef10e89e151bcb5c2e7c68a40e4a6cfa" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>_execute</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__text_1_1Text_1a509b9139516287671f14875addb26f61" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>_execute_events</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base__keyboard_1_1BaseKeyboardAction_1a44deda432d697d0710bb820ac91a04a7" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>_get_typeable</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base__keyboard_1_1BaseKeyboardAction_1a239ea8dd1f84236442786b874c06d4af" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>_keyboard</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a3861efea158692698e3a4f9d79ec7395" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>_log</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a842c601698c9eb62bb03ad937afe9aa6" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>_log_exec</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a873179afc5fe4521c177e121cc6cc9ae" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>_log_init</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__text_1_1Text_1ab503ed7258b3d915e74ed3a4d291e82c" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>_parse_spec</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__text_1_1Text_1a6283dbf6d6b61ba363892551993747f4" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>_pause</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base__keyboard_1_1BaseKeyboardAction_1a888620f9a8e4b0b0e70de084ab1ba9a1" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>_pause_default</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1DynStrActionBase_1ad98662369d0517d6b46e97ad72a28442" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>_spec</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__text_1_1Text_1a1e8a28fcb8c05687ed6349998b76d568" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>_specials</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1DynStrActionBase_1a76ffcaebae4040c9b4fade8405d162c6" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>_static</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1DynStrActionBase_1a56c1afad93161194db7a0b7fd43b952c" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>_str</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base__keyboard_1_1BaseKeyboardAction_1ac71d55a87a02c28b10c327eeaf383058" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>_use_hardware</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a6d193fe1211e618673e4f4cc06ac623b" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>bind</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a3454ac5c9ab40d43bc64af73157a89df" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>copy_bind</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a86ef0362bdcfbca96ae7f69df40b43f3" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>execute</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1DynStrActionBase_1a83d4b9d1adc552c661f705a3da38905b" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>initialize</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base__keyboard_1_1BaseKeyboardAction_1a0569d7f41c01730c8c507a3b97914cd2" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_text::Text</scope><name>require_hardware_events</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
