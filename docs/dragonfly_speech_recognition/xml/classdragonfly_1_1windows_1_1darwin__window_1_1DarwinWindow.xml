<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::windows::darwin_window::DarwinWindow</compoundname>
    <basecompoundref refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow" prot="public" virt="non-virtual">dragonfly.windows.base_window.BaseWindow</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a3c7089a82a68c3ebeb7762f8ba54af41" prot="private" static="yes" mutable="no">
        <type></type>
        <definition>dragonfly.windows.darwin_window.DarwinWindow::_log</definition>
        <argsstring></argsstring>
        <name>_log</name>
        <initializer>=  logging.getLogger(&quot;window&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" line="52" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a0dc41b8e3d1b928588e8199ed4caef70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.darwin_window.DarwinWindow.__init__</definition>
        <argsstring>(self, id)</argsstring>
        <name>__init__</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1aabd0a8a77bd6de9e4da12e2a5c7fdbe6">__init__</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1aafd3621964165a581372cf27740f88d4" kindref="member">id</ref></type>
          <defname>id</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" line="101" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a678bbcb280c451cc9550e4195ebf5911" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.darwin_window.DarwinWindow.close</definition>
        <argsstring>(self)</argsstring>
        <name>close</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a12652977c2e2439eb4018607b11d72ac">close</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Close the window (if possible). </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" line="272" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" bodystart="272" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1ad4527ea2d69368acb71c1caa6b97dfe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.darwin_window.DarwinWindow.full_screen</definition>
        <argsstring>(self)</argsstring>
        <name>full_screen</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Enable full screen mode for this window.

**Note**: this doesn&apos;t allow transitioning out of full screen mode.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" line="254" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" bodystart="254" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a7aa6d86b646da04f75b30a967a54767e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.darwin_window.DarwinWindow.get_all_windows</definition>
        <argsstring>(cls)</argsstring>
        <name>get_all_windows</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1adbfb949d694a91d2b324fbeb01ed0917">get_all_windows</reimplements>
        <param>
          <type>cls</type>
          <defname>cls</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Get a list of all windows. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" line="86" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" bodystart="86" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1adbcf7204b0e4ed78c355bfe0edac36c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.darwin_window.DarwinWindow.get_attribute</definition>
        <argsstring>(self, attribute)</argsstring>
        <name>get_attribute</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>attribute</type>
          <defname>attribute</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Method to get an attribute of a macOS window.

**Note**: this method doesn&apos;t distinguish between multiple instances
of the same application.

:param attribute: attribute name
:type attribute: string
:returns: attribute value
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" line="141" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" bodystart="141" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1aa52cba709470f502f6d43a9fb827d697" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.darwin_window.DarwinWindow.get_foreground</definition>
        <argsstring>(cls)</argsstring>
        <name>get_foreground</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a84081bfe7e50f0d97e95c0b9c0f4956f">get_foreground</reimplements>
        <param>
          <type>cls</type>
          <defname>cls</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Get the foreground window. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" line="58" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" bodystart="58" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a46f4f347836deab21efb82e59d8c1f53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.darwin_window.DarwinWindow.get_matching_windows</definition>
        <argsstring>(cls, executable=None, title=None)</argsstring>
        <name>get_matching_windows</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1ae63505f0d06f4f15608559fa3cdacac0">get_matching_windows</reimplements>
        <param>
          <type>cls</type>
          <defname>cls</defname>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a5e8da6c3a06d69a730966eebc18ae309" kindref="member">executable</ref></type>
          <defname>executable</defname>
          <defval>None</defval>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1aa4cccd9b2275816052dbc7b5d96ba438" kindref="member">title</ref></type>
          <defname>title</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Find windows with a matching executable or title.

Window searches are case-insensitive.

If neither parameter is be specified, then it is effectively the
same as calling :meth:`get_all_windows`.

:param executable: -- part of the filename of the application&apos;s
   executable to which the target window belongs; not case
   sensitive.
:param title: -- part of the title of the target window; not case
   sensitive.
:type executable: str
:type title: str
:rtype: list
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" line="74" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" bodystart="74" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a676f5ae6c04e26940500056369fa011b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.darwin_window.DarwinWindow.get_position</definition>
        <argsstring>(self)</argsstring>
        <name>get_position</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a13ea545de11bbe7b77f1bbc9ed1ce5c7">get_position</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Method to get the window&apos;s position as a :class:`Rectangle` object.

:returns: window position
:rtype: Rectangle
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" line="210" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" bodystart="210" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a5475a948e90dda4e3e72be82e8980604" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.darwin_window.DarwinWindow.get_properties</definition>
        <argsstring>(self)</argsstring>
        <name>get_properties</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Method to get the properties of a macOS window.

:rtype: dict
:returns: window properties
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" line="108" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" bodystart="108" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a82364b726b3b351309481231ba4b2f34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.darwin_window.DarwinWindow.is_maximized</definition>
        <argsstring>(self)</argsstring>
        <name>is_maximized</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a054543ac6fa58bb2c3eaca54f1d7090b">is_maximized</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Whether the window is currently maximized. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" line="200" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" bodystart="200" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1acd66693a5cfe9f963c9108f33564b2cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.darwin_window.DarwinWindow.is_minimized</definition>
        <argsstring>(self)</argsstring>
        <name>is_minimized</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1ae82ec1ff8d09bfa29e532d9b6e1836ac">is_minimized</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Whether the window is currently minimized. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" line="196" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" bodystart="196" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a2984b14cc571ec46207e5701c8e1bc03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.darwin_window.DarwinWindow.is_visible</definition>
        <argsstring>(self)</argsstring>
        <name>is_visible</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1aad542c59bde2625ef31e455d72fc575f">is_visible</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Whether the window is currently visible.

This may be indeterminable for some windows.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" line="204" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" bodystart="204" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a64dee29bfa3da18f0c64636dafab28c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.darwin_window.DarwinWindow.maximize</definition>
        <argsstring>(self)</argsstring>
        <name>maximize</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a2ebbc5e073901c89de326dfc0c76499f">maximize</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Maximize the window (if possible). </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" line="250" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" bodystart="250" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a8b65fbe83f37e1bf0657bcb332a75bc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.darwin_window.DarwinWindow.minimize</definition>
        <argsstring>(self)</argsstring>
        <name>minimize</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1ae54394ad507ce64f864183d21f799626">minimize</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Minimize the window (if possible). </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" line="247" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" bodystart="247" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a32c0d77ff440af6daaf184818ddaf1d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.darwin_window.DarwinWindow.restore</definition>
        <argsstring>(self)</argsstring>
        <name>restore</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a4188b2e6ced452189f14043e9e42eb53">restore</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Restore the window if it is minimized or maximized. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" line="262" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" bodystart="262" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1ab9df0fb54d52fa45d18a38dbb4fe3986" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.darwin_window.DarwinWindow.set_focus</definition>
        <argsstring>(self)</argsstring>
        <name>set_focus</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a17184bd383bf416ff5165187615b8b10">set_focus</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Set the window as the active window without raising it.

*Note*: this method will behave like :meth:`set_foreground()` in
environments where this isn&apos;t possible.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" line="283" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" bodystart="283" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a947b7260db8405acb467611ab019fc38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.darwin_window.DarwinWindow.set_foreground</definition>
        <argsstring>(self)</argsstring>
        <name>set_foreground</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a8853b8be6978da5ca290e38328c86e31">set_foreground</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Set the window as the foreground (active) window. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" line="275" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" bodystart="275" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a9e0c45b73dca5f784f1a3e573a2a88c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.darwin_window.DarwinWindow.set_position</definition>
        <argsstring>(self, rectangle)</argsstring>
        <name>set_position</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1ae0210d010dc268245814dabdd17b3715">set_position</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>rectangle</type>
          <defname>rectangle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Method to set the window&apos;s position using a :class:`Rectangle`
object.

:param rectangle: window position
:type rectangle: Rectangle
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" line="215" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" bodystart="215" bodyend="226"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1ab78fb8a962b27955c84cd75a5234d502" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.darwin_window.DarwinWindow._get_class_name</definition>
        <argsstring>(self)</argsstring>
        <name>_get_class_name</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a6cf2c04f26483b16c62da6589c5a8b2b">_get_class_name</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" line="166" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" bodystart="166" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a320c3d5945603ce11f3dc7c5b8f1990a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.darwin_window.DarwinWindow._get_window_module</definition>
        <argsstring>(self)</argsstring>
        <name>_get_window_module</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a8dd171828bf9d20d782f3e4a09788685">_get_window_module</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" line="169" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" bodystart="169" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a68b60501f8d0566200589927f36c2658" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.darwin_window.DarwinWindow._get_window_pid</definition>
        <argsstring>(self)</argsstring>
        <name>_get_window_pid</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1aea79158ee43cebfa2bd3cd32910ba1b9">_get_window_pid</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" line="182" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" bodystart="182" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a24aa0a79c17ee0d044d09122ea096779" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.darwin_window.DarwinWindow._get_window_text</definition>
        <argsstring>(self)</argsstring>
        <name>_get_window_text</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a7076edafa3d390321a8207b10ca1877b">_get_window_text</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" line="163" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1ae3770e3fa6a9d9116467d258a5741779" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.darwin_window.DarwinWindow._press_window_button</definition>
        <argsstring>(self, button_subrole, action)</argsstring>
        <name>_press_window_button</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>button_subrole</type>
          <defname>button_subrole</defname>
        </param>
        <param>
          <type>action</type>
          <defname>action</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" line="230" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" bodystart="230" bodyend="246"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>    The Window class is an interface to the macOS window control and
    placement.</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>dragonfly.windows.base_window.BaseWindow</label>
        <link refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
      <node id="1">
        <label>dragonfly.windows.darwin_window.DarwinWindow</label>
        <link refid="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>dragonfly.windows.base_window.BaseWindow</label>
        <link refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
      <node id="1">
        <label>dragonfly.windows.darwin_window.DarwinWindow</label>
        <link refid="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" line="45" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/darwin_window.py" bodystart="45" bodyend="287"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a0dc41b8e3d1b928588e8199ed4caef70" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a3d7dfc6c1540135d3488931af373dd5a" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>__repr__</name></member>
      <member refid="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1ab78fb8a962b27955c84cd75a5234d502" prot="private" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>_get_class_name</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a6593032dc95a7b4e27d04892631139b6" prot="private" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>_get_name</name></member>
      <member refid="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a320c3d5945603ce11f3dc7c5b8f1990a" prot="private" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>_get_window_module</name></member>
      <member refid="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a68b60501f8d0566200589927f36c2658" prot="private" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>_get_window_pid</name></member>
      <member refid="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a24aa0a79c17ee0d044d09122ea096779" prot="private" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>_get_window_text</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a6598c4f857f23d3069a634de4a0149ee" prot="private" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>_handle</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a10fc38af0c7bbe6f9280bfe80cab2d8d" prot="private" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>_id</name></member>
      <member refid="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a3c7089a82a68c3ebeb7762f8ba54af41" prot="private" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>_log</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a15d67b10b96f9aeb2216c50497d62b2c" prot="private" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>_names</name></member>
      <member refid="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1ae3770e3fa6a9d9116467d258a5741779" prot="private" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>_press_window_button</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1adc865e2370736d8530a35d6f5685621c" prot="private" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>_set_id</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1acb76f95c3524e7ab4af217fe3503c8a5" prot="private" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>_set_name</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1af5cb30f0e630414e8de4f9dd02f26d39" prot="private" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>_windows_by_id</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a0ad233d03d4e560d508b0736383db477" prot="private" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>_windows_by_name</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1ac94cb76eacb9388cd7be1c9ea68d2c5a" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>classname</name></member>
      <member refid="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a678bbcb280c451cc9550e4195ebf5911" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>close</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a84fb1bafed13d3b11bfc81bed9ff322a" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>cls_name</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a5e8da6c3a06d69a730966eebc18ae309" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>executable</name></member>
      <member refid="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1ad4527ea2d69368acb71c1caa6b97dfe4" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>full_screen</name></member>
      <member refid="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a7aa6d86b646da04f75b30a967a54767e" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>get_all_windows</name></member>
      <member refid="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1adbcf7204b0e4ed78c355bfe0edac36c7" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>get_attribute</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1ad8de679f418d9412a06874c1630b6534" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>get_containing_monitor</name></member>
      <member refid="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1aa52cba709470f502f6d43a9fb827d697" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>get_foreground</name></member>
      <member refid="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a46f4f347836deab21efb82e59d8c1f53" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>get_matching_windows</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1ab0adffc385c1b0ccf78cf6dde5c2b74a" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>get_normalized_position</name></member>
      <member refid="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a676f5ae6c04e26940500056369fa011b" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>get_position</name></member>
      <member refid="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a5475a948e90dda4e3e72be82e8980604" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>get_properties</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a43e64fdfd70a455a370111b9db11fe48" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>get_window</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a41b1b75df4528228d6a1efb88baf3b82" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>handle</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1aafd3621964165a581372cf27740f88d4" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>id</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a2f7ff8a1bc21cb8aff7d979f8d40a0b7" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>id</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1afa9b8c8c3a5b8a014c687ae8daa69b19" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>id</name></member>
      <member refid="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a82364b726b3b351309481231ba4b2f34" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>is_maximized</name></member>
      <member refid="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1acd66693a5cfe9f963c9108f33564b2cb" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>is_minimized</name></member>
      <member refid="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a2984b14cc571ec46207e5701c8e1bc03" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>is_visible</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a51b031395547a6e6a928b2dba548c816" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>matches</name></member>
      <member refid="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a64dee29bfa3da18f0c64636dafab28c1" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>maximize</name></member>
      <member refid="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a8b65fbe83f37e1bf0657bcb332a75bc6" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>minimize</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a9c169cac5d5606d14435f4cec535e364" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>move</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1af8151df04e705f0d77e580dee54b0d7e" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>name</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a493027bd096357de25501607bbd66b50" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>pid</name></member>
      <member refid="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a32c0d77ff440af6daaf184818ddaf1d2" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>restore</name></member>
      <member refid="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1ab9df0fb54d52fa45d18a38dbb4fe3986" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>set_focus</name></member>
      <member refid="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a947b7260db8405acb467611ab019fc38" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>set_foreground</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1a4801ac838456acd27b30cddf4aae609c" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>set_normalized_position</name></member>
      <member refid="classdragonfly_1_1windows_1_1darwin__window_1_1DarwinWindow_1a9e0c45b73dca5f784f1a3e573a2a88c7" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>set_position</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__window_1_1BaseWindow_1aa4cccd9b2275816052dbc7b5d96ba438" prot="public" virt="non-virtual"><scope>dragonfly::windows::darwin_window::DarwinWindow</scope><name>title</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
