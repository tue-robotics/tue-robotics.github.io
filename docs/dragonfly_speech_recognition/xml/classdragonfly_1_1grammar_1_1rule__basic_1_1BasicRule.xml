<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1grammar_1_1rule__basic_1_1BasicRule" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::grammar::rule_basic::BasicRule</compoundname>
    <basecompoundref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule" prot="public" virt="non-virtual">dragonfly.grammar.rule_base.Rule</basecompoundref>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1rule__basic_1_1BasicRule_1a81aee407f8fc5e27619c70282d9a06af" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.rule_basic.BasicRule::context</definition>
        <argsstring></argsstring>
        <name>context</name>
        <initializer>=  None</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_basic.py" line="115" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_basic.py" bodystart="115" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1rule__basic_1_1BasicRule_1a3b8593b3d01a198557c5598b2850eda1" prot="private" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool dragonfly.grammar.rule_basic.BasicRule::_default_exported</definition>
        <argsstring></argsstring>
        <name>_default_exported</name>
        <initializer>=  True</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_basic.py" line="116" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_basic.py" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1rule__basic_1_1BasicRule_1a18ee344491674bede2c68394c8e5c0f5" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.rule_basic.BasicRule::_name</definition>
        <argsstring></argsstring>
        <name>_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_basic.py" line="143" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_basic.py" bodystart="143" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1rule__basic_1_1BasicRule_1abd9f66e621f2b4112336739db2460c7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.rule_basic.BasicRule.__init__</definition>
        <argsstring>(self, name=None, element=None, exported=None, context=None)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ab5401b17fbd0336bc78a3c066c5dd994" kindref="member">name</ref></type>
          <defname>name</defname>
          <defval>None</defval>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ae6c1b3c23c33d24fb8439d4ab86b83aa" kindref="member">element</ref></type>
          <defname>element</defname>
          <defval>None</defval>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a7af29ec6e071aaa4e25205ca312fdd72" kindref="member">exported</ref></type>
          <defname>exported</defname>
          <defval>None</defval>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1rule__basic_1_1BasicRule_1a81aee407f8fc5e27619c70282d9a06af" kindref="member">context</ref></type>
          <defname>context</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_basic.py" line="118" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_basic.py" bodystart="118" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1rule__basic_1_1BasicRule_1a83f87b9c10b08f42627d1f8c85952b4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.rule_basic.BasicRule.process_recognition</definition>
        <argsstring>(self, node)</argsstring>
        <name>process_recognition</name>
        <reimplements refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aa5b6bf0ae12ca48d6ad901c1d8e68b8a">process_recognition</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>node</type>
          <defname>node</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Process a recognition of this rule.

    This method is called by the containing Grammar when this
    rule is recognized.  This method collects information about
    the recognition and then calls *self._process_recognition*.

    - *node* -- The root node of the recognition parse tree.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_basic.py" line="172" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_basic.py" bodystart="172" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1rule__basic_1_1BasicRule_1addfa4042320e653c75f86267b02db414" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.rule_basic.BasicRule.value</definition>
        <argsstring>(self, node)</argsstring>
        <name>value</name>
        <reimplements refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ae7687e1ba3425cdd449733f726595961">value</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>node</type>
          <defname>node</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Start of phrase callback.

    This method is called to obtain the semantic value associated
    with a particular recognition.  It could be called from
    another rule&apos;s :meth:`.value` if
    that rule references this rule.  If also be called from this
    rule&apos;s :meth:`.process_recognition`
    if that method has been overridden to do so in a derived
    class.

    The default implementation of this method returns the value of
    this rule&apos;s root element.

    .. note::

       This is generally the method which developers should
       override in derived rule classes to change the default
       semantic value of a recognized rule.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_basic.py" line="149" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_basic.py" bodystart="149" bodyend="171"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1rule__basic_1_1BasicRule_1aee91523976d7943d664cc738683de2c1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.rule_basic.BasicRule._process_recognition</definition>
        <argsstring>(self, node, extras)</argsstring>
        <name>_process_recognition</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>node</type>
          <defname>node</defname>
        </param>
        <param>
          <type>extras</type>
          <defname>extras</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Default recognition processing.

    This is the method which should be overridden in most cases
    to provide derived classes with custom recognition
    processing functionality.

    This default processing method executes actions if the node&apos;s
    value is an action or a list of actions.

    - *node* -- The root node of the recognition parse tree.
    - *extras* -- A dictionary of elements from the
      extras list contained within this recognition.
      Maps element name -&gt; element value.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_basic.py" line="199" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_basic.py" bodystart="199" bodyend="224"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>    Rule class for implementing complete or partial voice-commands
    defined using an element.

    Constructor arguments:
     - *name* (*str*) -- the rule&apos;s name
     - *element* (*Element*) -- root element for this rule
     - *exported* (boolean) -- whether the rule is exported
     - *context* (*Context*) -- context in which the rule will be active</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dragonfly.grammar.rule_basic.BasicRule</label>
        <link refid="classdragonfly_1_1grammar_1_1rule__basic_1_1BasicRule"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>dragonfly.grammar.rule_base.Rule</label>
        <link refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>dragonfly.grammar.rule_basic.BasicRule</label>
        <link refid="classdragonfly_1_1grammar_1_1rule__basic_1_1BasicRule"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>dragonfly.grammar.rule_base.Rule</label>
        <link refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_basic.py" line="102" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_basic.py" bodystart="102" bodyend="224"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1grammar_1_1rule__basic_1_1BasicRule_1abd9f66e621f2b4112336739db2460c7e" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a576f085cc4f4ecdf154584ec8ceb3e2c" prot="public" virt="non-virtual" ambiguityscope="dragonfly::grammar::rule_base::Rule."><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a650f73cead2a52ea698531a69a242d1e" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>__repr__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5fa26e7246b883fc7e2fef8a32a931be" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>_active</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a72e22c4830016ae96b9079f1329fb02b" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>_context</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__basic_1_1BasicRule_1a3b8593b3d01a198557c5598b2850eda1" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>_default_exported</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5f244a7ccce70fbf7f2fa0fc26ebf5c5" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>_element</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1accac7d6feda0165d863fdfcdee7674fd" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>_enabled</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a9e1a66ec204cfc3e4ff43cfd26700c94" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>_exported</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a478b03a236aba8b50f2cf9ffe6119c69" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>_get_grammar</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a232f71f2b67ac6d567d349a5ae249461" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>_grammar</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1acc246f5f8cd4333fe5dfac1e24d8b131" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>_imported</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a75fdcef87114b992f3ba76c3ec19c12e" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>_log</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a63708f8b55821fc912d3c9613659c30c" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>_log_begin</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ab2392a9b9a401b2734055021cd361627" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>_log_eval</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a3bbefb0e38e96771de43401ff853e16b" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>_log_load</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ab2d4c33c6947d06f136d722a60a6ad69" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>_log_proc</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__basic_1_1BasicRule_1a18ee344491674bede2c68394c8e5c0f5" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>_name</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aac3106f975f474720ae8e2108a559176" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>_next_anonymous_id</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aee4c3167defe093caa2f816d0bac44c4" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>_process_begin</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__basic_1_1BasicRule_1aee91523976d7943d664cc738683de2c1" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>_process_recognition</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1afa435043469a44e51138758804b2f598" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>_set_grammar</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5436cd9a899ed82891f758df721ec6a6" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>activate</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aa4683441cd4d4ab5b779a47968523e57" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>active</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__basic_1_1BasicRule_1a81aee407f8fc5e27619c70282d9a06af" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>context</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a4182eda5b94f8094902ad609450ee11f" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>deactivate</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ac0b4fbdf1d22cd5e22f76cd73d9e6d3a" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>decode</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a9c1ad9ae6e3df632c27026df085975bf" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>dependencies</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a6b035ec7557e6fb3e7323d56e9f156b4" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>disable</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ae6c1b3c23c33d24fb8439d4ab86b83aa" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>element</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a9ec8b499154a709d7ddadb33f11c31b0" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>enable</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a242823b84443b08f3d27d79ec5d1bb98" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>enabled</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a7af29ec6e071aaa4e25205ca312fdd72" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>exported</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a32ba29c3a4623ac9bce6009b7efc70ce" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>grammar</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aeac96c1300b6a1ba64ef5faf23a859a2" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>gstring</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ae10a43239703a5932f08e712dd2416a7" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>imported</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ab5401b17fbd0336bc78a3c066c5dd994" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>name</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a670d76c19e2f0f59349bc01f983adf24" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>process_begin</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__basic_1_1BasicRule_1a83f87b9c10b08f42627d1f8c85952b4b" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>process_recognition</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1af25b9727d10e38f7db3f42f433f59320" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>process_results</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a7a6bda63736ee144f0e22f63185dbb1d" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>set_context</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__basic_1_1BasicRule_1addfa4042320e653c75f86267b02db414" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_basic::BasicRule</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
