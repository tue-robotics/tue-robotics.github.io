<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::grammar::rule_compound::CompoundRule</compoundname>
    <basecompoundref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule" prot="public" virt="non-virtual">dragonfly.grammar.rule_base.Rule</basecompoundref>
    <derivedcompoundref refid="class__fruit__toggle_1_1AppleRule" prot="public" virt="non-virtual">_fruit_toggle.AppleRule</derivedcompoundref>
    <derivedcompoundref refid="class__fruit__toggle_1_1BananaRule" prot="public" virt="non-virtual">_fruit_toggle.BananaRule</derivedcompoundref>
    <derivedcompoundref refid="class__notepad__foodgroups_1_1FoodGroupRule" prot="public" virt="non-virtual">_notepad_foodgroups.FoodGroupRule</derivedcompoundref>
    <derivedcompoundref refid="class__window__movement__example_1_1MoveWindowRule" prot="public" virt="non-virtual">_window_movement_example.MoveWindowRule</derivedcompoundref>
    <derivedcompoundref refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1__UserDictationSequenceRule" prot="public" virt="non-virtual">dragonfly.engines.backend_kaldi.dictation._UserDictationSequenceRule</derivedcompoundref>
    <derivedcompoundref refid="classkaldi__demo_1_1ExampleCustomRule" prot="public" virt="non-virtual">kaldi_demo.ExampleCustomRule</derivedcompoundref>
    <derivedcompoundref refid="classtest__dgn__import_1_1RecognitionAnalysisRule" prot="public" virt="non-virtual">test_dgn_import.RecognitionAnalysisRule</derivedcompoundref>
    <derivedcompoundref refid="classtest__multiple__dictation_1_1RecognitionAnalysisRule" prot="public" virt="non-virtual">test_multiple_dictation.RecognitionAnalysisRule</derivedcompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1a8bb37898f4ab63de323d8ebdc466e4d8" prot="private" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool dragonfly.grammar.rule_compound.CompoundRule::_default_exported</definition>
        <argsstring></argsstring>
        <name>_default_exported</name>
        <initializer>=  True</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_compound.py" line="96" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_compound.py" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1a88d1441bcde190775256bd06c4e49f72" prot="private" static="yes" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.rule_compound.CompoundRule::_name</definition>
        <argsstring></argsstring>
        <name>_name</name>
        <initializer>=  None</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_compound.py" line="91" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_compound.py" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1a868444bb5bf67237dbd8c7d06a62902f" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.rule_compound.CompoundRule::context</definition>
        <argsstring></argsstring>
        <name>context</name>
        <initializer>=  None</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_compound.py" line="95" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_compound.py" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1ac7d57965655ee344dcf5670767471ff8" prot="public" static="yes" mutable="no">
        <type>tuple</type>
        <definition>tuple dragonfly.grammar.rule_compound.CompoundRule::defaults</definition>
        <argsstring></argsstring>
        <name>defaults</name>
        <initializer>=  ()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_compound.py" line="94" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_compound.py" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1a838562ca8c0f3553d1071d3e4091566f" prot="public" static="yes" mutable="no">
        <type>tuple</type>
        <definition>tuple dragonfly.grammar.rule_compound.CompoundRule::extras</definition>
        <argsstring></argsstring>
        <name>extras</name>
        <initializer>=  ()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_compound.py" line="93" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_compound.py" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1a16201b58873cbf5909b9423c53935307" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.rule_compound.CompoundRule::spec</definition>
        <argsstring></argsstring>
        <name>spec</name>
        <initializer>=  None</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_compound.py" line="92" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_compound.py" bodystart="92" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1a74709dc63db3e6bac14f5f73a19ae6b3" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.rule_compound.CompoundRule::_defaults</definition>
        <argsstring></argsstring>
        <name>_defaults</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_compound.py" line="128" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_compound.py" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1a2643fc47e02ae449aa9f8b86e0e9b55c" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.rule_compound.CompoundRule::_extras</definition>
        <argsstring></argsstring>
        <name>_extras</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_compound.py" line="127" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_compound.py" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1a0bc2baeae6c9cde342df7a8466eadb2a" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.rule_compound.CompoundRule::_spec</definition>
        <argsstring></argsstring>
        <name>_spec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_compound.py" line="125" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_compound.py" bodystart="125" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1a2b41fda18470c9c69e75b436f4814881" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.rule_compound.CompoundRule.__init__</definition>
        <argsstring>(self, name=None, spec=None, extras=None, defaults=None, exported=None, context=None)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ab5401b17fbd0336bc78a3c066c5dd994" kindref="member">name</ref></type>
          <defname>name</defname>
          <defval>None</defval>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1a16201b58873cbf5909b9423c53935307" kindref="member">spec</ref></type>
          <defname>spec</defname>
          <defval>None</defval>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1a838562ca8c0f3553d1071d3e4091566f" kindref="member">extras</ref></type>
          <defname>extras</defname>
          <defval>None</defval>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1ac7d57965655ee344dcf5670767471ff8" kindref="member">defaults</ref></type>
          <defname>defaults</defname>
          <defval>None</defval>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a7af29ec6e071aaa4e25205ca312fdd72" kindref="member">exported</ref></type>
          <defname>exported</defname>
          <defval>None</defval>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1a868444bb5bf67237dbd8c7d06a62902f" kindref="member">context</ref></type>
          <defname>context</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_compound.py" line="100" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_compound.py" bodystart="100" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1ad684e0a13e66e0372017007daea9580e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.rule_compound.CompoundRule.process_recognition</definition>
        <argsstring>(self, node)</argsstring>
        <name>process_recognition</name>
        <reimplements refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aa5b6bf0ae12ca48d6ad901c1d8e68b8a">process_recognition</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>node</type>
          <defname>node</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Process a recognition of this rule.

    This method is called by the containing Grammar when this
    rule is recognized.  This method collects information about
    the recognition and then calls *self._process_recognition*.

    - *node* -- The root node of the recognition parse tree.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_compound.py" line="136" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_compound.py" bodystart="136" bodyend="162"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1a1fbad00fde085e35b15c5da4d14c721f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.rule_compound.CompoundRule._process_recognition</definition>
        <argsstring>(self, node, extras)</argsstring>
        <name>_process_recognition</name>
        <reimplementedby refid="classkaldi__demo_1_1ExampleCustomRule_1a94d21454cbd3a58b809edcf5339fcc30">_process_recognition</reimplementedby>
        <reimplementedby refid="classtest__dgn__import_1_1RecognitionAnalysisRule_1a5ae8b8c4932c9e8b0d48bacfd9d220b6">_process_recognition</reimplementedby>
        <reimplementedby refid="class__fruit__toggle_1_1AppleRule_1ad3845b101fa0a37f7650c0a398b051d5">_process_recognition</reimplementedby>
        <reimplementedby refid="class__fruit__toggle_1_1BananaRule_1aafcb39b37bbee03cda585a87598a3cda">_process_recognition</reimplementedby>
        <reimplementedby refid="classtest__multiple__dictation_1_1RecognitionAnalysisRule_1a786b7da8cc26db2abdc20410d191d6f3">_process_recognition</reimplementedby>
        <reimplementedby refid="class__window__movement__example_1_1MoveForegroundWindowRule_1a1c02e84200ec3e9600fb7c83e0520824">_process_recognition</reimplementedby>
        <reimplementedby refid="class__window__movement__example_1_1MoveNotepadWindowRule_1ad33ada84ef9e5830eb84985df21104fe">_process_recognition</reimplementedby>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>node</type>
          <defname>node</defname>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1a838562ca8c0f3553d1071d3e4091566f" kindref="member">extras</ref></type>
          <defname>extras</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Default recognition processing.

    This is the method which should be overridden in most cases
    to provide derived classes with custom recognition
    processing functionality.

    This default processing method does nothing.

    - *node* -- The root node of the recognition parse tree.
    - *extras* -- A dictionary of all elements from the
      extras list contained within this recognition.
      Maps element name -&gt; element value.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_compound.py" line="163" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_compound.py" bodystart="163" bodyend="178"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>    Rule class based on the compound element.

    Constructor arguments:
     - *name* (*str*) -- the rule&apos;s name
     - *spec* (*str*) -- compound specification for the rule&apos;s
       root element
     - *extras* (sequence) -- extras elements referenced from the
       compound spec
     - *defaults* (*dict*) -- default values for the extras
     - *exported* (boolean) -- whether the rule is exported
     - *context* (*Context*) -- context in which the rule will be active</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="18">
        <label>test_multiple_dictation.MixedDictationRule</label>
        <link refid="classtest__multiple__dictation_1_1MixedDictationRule"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>test_dgn_import.DgnDictationRule</label>
        <link refid="classtest__dgn__import_1_1DgnDictationRule"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>_fruit_toggle.BananaRule</label>
        <link refid="class__fruit__toggle_1_1BananaRule"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>test_multiple_dictation.RepeatedDictationRule</label>
        <link refid="classtest__multiple__dictation_1_1RepeatedDictationRule"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>_fruit_toggle.AppleRule</label>
        <link refid="class__fruit__toggle_1_1AppleRule"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>dragonfly.engines.backend_kaldi.dictation._UserDictationSequenceRule</label>
        <link refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1__UserDictationSequenceRule"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>test_multiple_dictation.RecognitionAnalysisRule</label>
        <link refid="classtest__multiple__dictation_1_1RecognitionAnalysisRule"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>dragonfly.grammar.rule_base.Rule</label>
        <link refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>test_dgn_import.DgnLettersRule</label>
        <link refid="classtest__dgn__import_1_1DgnLettersRule"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
      <node id="17">
        <label>test_multiple_dictation.ConsecutiveDictationRule</label>
        <link refid="classtest__multiple__dictation_1_1ConsecutiveDictationRule"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>test_dgn_import.DgnWordsRule</label>
        <link refid="classtest__dgn__import_1_1DgnWordsRule"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>_notepad_foodgroups.FoodGroupRule</label>
        <link refid="class__notepad__foodgroups_1_1FoodGroupRule"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>_window_movement_example.MoveNotepadWindowRule</label>
        <link refid="class__window__movement__example_1_1MoveNotepadWindowRule"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>_window_movement_example.MoveForegroundWindowRule</label>
        <link refid="class__window__movement__example_1_1MoveForegroundWindowRule"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>_window_movement_example.MoveWindowRule</label>
        <link refid="class__window__movement__example_1_1MoveWindowRule"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>test_dgn_import.RecognitionAnalysisRule</label>
        <link refid="classtest__dgn__import_1_1RecognitionAnalysisRule"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>dragonfly.grammar.rule_compound.CompoundRule</label>
        <link refid="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>kaldi_demo.ExampleCustomRule</label>
        <link refid="classkaldi__demo_1_1ExampleCustomRule"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>dragonfly.grammar.rule_base.Rule</label>
        <link refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
      <node id="1">
        <label>dragonfly.grammar.rule_compound.CompoundRule</label>
        <link refid="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_compound.py" line="75" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_compound.py" bodystart="75" bodyend="178"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1a2b41fda18470c9c69e75b436f4814881" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a576f085cc4f4ecdf154584ec8ceb3e2c" prot="public" virt="non-virtual" ambiguityscope="dragonfly::grammar::rule_base::Rule."><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a650f73cead2a52ea698531a69a242d1e" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>__repr__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5fa26e7246b883fc7e2fef8a32a931be" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>_active</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a72e22c4830016ae96b9079f1329fb02b" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>_context</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1a8bb37898f4ab63de323d8ebdc466e4d8" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>_default_exported</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1a74709dc63db3e6bac14f5f73a19ae6b3" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>_defaults</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5f244a7ccce70fbf7f2fa0fc26ebf5c5" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>_element</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1accac7d6feda0165d863fdfcdee7674fd" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>_enabled</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a9e1a66ec204cfc3e4ff43cfd26700c94" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>_exported</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1a2643fc47e02ae449aa9f8b86e0e9b55c" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>_extras</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a478b03a236aba8b50f2cf9ffe6119c69" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>_get_grammar</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a232f71f2b67ac6d567d349a5ae249461" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>_grammar</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1acc246f5f8cd4333fe5dfac1e24d8b131" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>_imported</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a75fdcef87114b992f3ba76c3ec19c12e" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>_log</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a63708f8b55821fc912d3c9613659c30c" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>_log_begin</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ab2392a9b9a401b2734055021cd361627" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>_log_eval</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a3bbefb0e38e96771de43401ff853e16b" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>_log_load</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ab2d4c33c6947d06f136d722a60a6ad69" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>_log_proc</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1a88d1441bcde190775256bd06c4e49f72" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>_name</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aac3106f975f474720ae8e2108a559176" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>_next_anonymous_id</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aee4c3167defe093caa2f816d0bac44c4" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>_process_begin</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1a1fbad00fde085e35b15c5da4d14c721f" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>_process_recognition</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1afa435043469a44e51138758804b2f598" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>_set_grammar</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1a0bc2baeae6c9cde342df7a8466eadb2a" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>_spec</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5436cd9a899ed82891f758df721ec6a6" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>activate</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aa4683441cd4d4ab5b779a47968523e57" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>active</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1a868444bb5bf67237dbd8c7d06a62902f" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>context</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a4182eda5b94f8094902ad609450ee11f" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>deactivate</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ac0b4fbdf1d22cd5e22f76cd73d9e6d3a" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>decode</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1ac7d57965655ee344dcf5670767471ff8" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>defaults</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a9c1ad9ae6e3df632c27026df085975bf" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>dependencies</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a6b035ec7557e6fb3e7323d56e9f156b4" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>disable</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ae6c1b3c23c33d24fb8439d4ab86b83aa" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>element</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a9ec8b499154a709d7ddadb33f11c31b0" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>enable</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a242823b84443b08f3d27d79ec5d1bb98" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>enabled</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a7af29ec6e071aaa4e25205ca312fdd72" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>exported</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1a838562ca8c0f3553d1071d3e4091566f" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>extras</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a32ba29c3a4623ac9bce6009b7efc70ce" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>grammar</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aeac96c1300b6a1ba64ef5faf23a859a2" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>gstring</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ae10a43239703a5932f08e712dd2416a7" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>imported</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ab5401b17fbd0336bc78a3c066c5dd994" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>name</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a670d76c19e2f0f59349bc01f983adf24" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>process_begin</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1ad684e0a13e66e0372017007daea9580e" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>process_recognition</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1af25b9727d10e38f7db3f42f433f59320" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>process_results</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a7a6bda63736ee144f0e22f63185dbb1d" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>set_context</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule_1a16201b58873cbf5909b9423c53935307" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>spec</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ae7687e1ba3425cdd449733f726595961" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_compound::CompoundRule</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
