<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1grammar_1_1context_1_1AppContext" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::grammar::context::AppContext</compoundname>
    <basecompoundref refid="classdragonfly_1_1grammar_1_1context_1_1Context" prot="public" virt="non-virtual">dragonfly.grammar.context.Context</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1context_1_1AppContext_1aa57895d5ec2f2031e57cacf7d5bb4da4" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.context.AppContext::_exclude</definition>
        <argsstring></argsstring>
        <name>_exclude</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" line="282" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1context_1_1AppContext_1acd6f30baeec46b1672b48ebad08377f7" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.context.AppContext::_executable</definition>
        <argsstring></argsstring>
        <name>_executable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" line="250" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1context_1_1AppContext_1adc2fb24070471a9ece8b642bbc115207" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.context.AppContext::_kwargs</definition>
        <argsstring></argsstring>
        <name>_kwargs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" line="285" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1context_1_1AppContext_1a825f1a92f1292fc7ab4e79a5e35a29cf" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.context.AppContext::_str</definition>
        <argsstring></argsstring>
        <name>_str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" line="283" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1context_1_1AppContext_1a22b9d8175a8b19ed464ba08480bd8be7" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.context.AppContext::_title</definition>
        <argsstring></argsstring>
        <name>_title</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" line="260" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" bodystart="260" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1context_1_1AppContext_1a0711586f79f3ab5d25d238c1e76b77e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.context.AppContext.__init__</definition>
        <argsstring>(self, executable=None, title=None, exclude=False, **kwargs)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>executable</type>
          <defname>executable</defname>
          <defval>None</defval>
        </param>
        <param>
          <type>title</type>
          <defname>title</defname>
          <defval>None</defval>
        </param>
        <param>
          <type>exclude</type>
          <defname>exclude</defname>
          <defval>False</defval>
        </param>
        <param>
          <type>**</type>
          <declname>kwargs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" line="243" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" bodystart="243" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1context_1_1AppContext_1af30176821cecf95b09107670eab0f53f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.context.AppContext.matches</definition>
        <argsstring>(self, executable, title, handle)</argsstring>
        <name>matches</name>
        <reimplements refid="classdragonfly_1_1grammar_1_1context_1_1Context_1a1dfdbfcc2b9e90e7b659599fc29bc26f">matches</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>executable</type>
          <defname>executable</defname>
        </param>
        <param>
          <type>title</type>
          <defname>title</defname>
        </param>
        <param>
          <type>handle</type>
          <defname>handle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Indicate whether the system is currently within this context.

    Arguments:
     - *executable* (*str*) --
       path name to the executable of the foreground application
     - *title* (*str*) -- title of the foreground window
     - *handle* (*int*) -- window handle to the foreground window

    The default implementation of this method simply returns *True*.

    .. note::

       This is generally the method which developers should
       overload to give derived context classes custom
       functionality.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" line="293" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" bodystart="293" bodyend="362"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>    Context class using foreground application details.

    This class determines whether the foreground window meets
    certain requirements.  Which requirements must be met for this
    context to match are determined by the constructor arguments.

    If multiple strings are passed in a list, True will be returned if
    the foreground window matches one or more of them. This applies to
    the *executable* and *title* arguments and key word arguments for
    most window attributes.

    Constructor arguments:
     - *executable* (*str* or *list*) --
       (part of) the path name of the foreground application&apos;s
       executable; case insensitive
     - *title* (*str* or *list*) --
       (part of) the title of the foreground window; case insensitive
     - *key word arguments* --
       optional window attributes/properties and expected values;
       case insensitive</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>dragonfly.grammar.context.Context</label>
        <link refid="classdragonfly_1_1grammar_1_1context_1_1Context"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
      <node id="1">
        <label>dragonfly.grammar.context.AppContext</label>
        <link refid="classdragonfly_1_1grammar_1_1context_1_1AppContext"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>dragonfly.grammar.context.Context</label>
        <link refid="classdragonfly_1_1grammar_1_1context_1_1Context"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
      <node id="1">
        <label>dragonfly.grammar.context.AppContext</label>
        <link refid="classdragonfly_1_1grammar_1_1context_1_1AppContext"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" line="215" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" bodystart="215" bodyend="363"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1grammar_1_1context_1_1Context_1a116d1723f457474e7b71dfa078158c24" prot="public" virt="non-virtual"><scope>dragonfly::grammar::context::AppContext</scope><name>__and__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1context_1_1AppContext_1a0711586f79f3ab5d25d238c1e76b77e9" prot="public" virt="non-virtual"><scope>dragonfly::grammar::context::AppContext</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1context_1_1Context_1abf7250a6563da475d20a639270f6ee0d" prot="public" virt="non-virtual" ambiguityscope="dragonfly::grammar::context::Context."><scope>dragonfly::grammar::context::AppContext</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1context_1_1Context_1afce9f1cfb551b64db7cc763890541053" prot="public" virt="non-virtual"><scope>dragonfly::grammar::context::AppContext</scope><name>__invert__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1context_1_1Context_1ae37d8a8b1d4b4d547305134d9a146cb7" prot="public" virt="non-virtual"><scope>dragonfly::grammar::context::AppContext</scope><name>__or__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1context_1_1Context_1a249b0ea0c83c32fc75a415b5a3fcef54" prot="public" virt="non-virtual"><scope>dragonfly::grammar::context::AppContext</scope><name>__repr__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1context_1_1AppContext_1aa57895d5ec2f2031e57cacf7d5bb4da4" prot="private" virt="non-virtual"><scope>dragonfly::grammar::context::AppContext</scope><name>_exclude</name></member>
      <member refid="classdragonfly_1_1grammar_1_1context_1_1AppContext_1acd6f30baeec46b1672b48ebad08377f7" prot="private" virt="non-virtual"><scope>dragonfly::grammar::context::AppContext</scope><name>_executable</name></member>
      <member refid="classdragonfly_1_1grammar_1_1context_1_1AppContext_1adc2fb24070471a9ece8b642bbc115207" prot="private" virt="non-virtual"><scope>dragonfly::grammar::context::AppContext</scope><name>_kwargs</name></member>
      <member refid="classdragonfly_1_1grammar_1_1context_1_1Context_1a1c45805ee6a280a09ea7f41b30627eab" prot="private" virt="non-virtual"><scope>dragonfly::grammar::context::AppContext</scope><name>_log</name></member>
      <member refid="classdragonfly_1_1grammar_1_1context_1_1Context_1aee89c812701a7622cb89cbbe81b70997" prot="private" virt="non-virtual"><scope>dragonfly::grammar::context::AppContext</scope><name>_log_match</name></member>
      <member refid="classdragonfly_1_1grammar_1_1context_1_1AppContext_1a825f1a92f1292fc7ab4e79a5e35a29cf" prot="private" virt="non-virtual"><scope>dragonfly::grammar::context::AppContext</scope><name>_str</name></member>
      <member refid="classdragonfly_1_1grammar_1_1context_1_1AppContext_1a22b9d8175a8b19ed464ba08480bd8be7" prot="private" virt="non-virtual"><scope>dragonfly::grammar::context::AppContext</scope><name>_title</name></member>
      <member refid="classdragonfly_1_1grammar_1_1context_1_1Context_1adcabeee25d6f44e9f761855d9744d716" prot="public" virt="non-virtual"><scope>dragonfly::grammar::context::AppContext</scope><name>copy</name></member>
      <member refid="classdragonfly_1_1grammar_1_1context_1_1AppContext_1af30176821cecf95b09107670eab0f53f" prot="public" virt="non-virtual"><scope>dragonfly::grammar::context::AppContext</scope><name>matches</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
