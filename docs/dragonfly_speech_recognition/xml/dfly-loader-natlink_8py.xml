<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="dfly-loader-natlink_8py" kind="file" language="Python">
    <compoundname>dfly-loader-natlink.py</compoundname>
    <innernamespace refid="namespacedfly-loader-natlink">dfly-loader-natlink</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacedfly-loader-natlink" refkind="compound"><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>file<sp/>is<sp/>a<sp/>command-module<sp/>for<sp/>Dragonfly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(c)<sp/>Copyright<sp/>2008<sp/>by<sp/>Christo<sp/>Butcher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Licensed<sp/>under<sp/>the<sp/>LGPL,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral">Command-module<sp/>loader<sp/>for<sp/>natlink</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral">=================================</highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral">This<sp/>script<sp/>can<sp/>be<sp/>used<sp/>to<sp/>look<sp/>Dragonfly<sp/>command-modules</highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral">for<sp/>use<sp/>with<sp/>Dragon<sp/>NaturallySpeaking.<sp/><sp/>It<sp/>scans<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral">directory<sp/>it&apos;s<sp/>in<sp/>and<sp/>loads<sp/>any<sp/>``_*.py``<sp/>it<sp/>finds.</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral">Some<sp/>notes</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral">----------</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral">-<sp/>Modules<sp/>loaded<sp/>by<sp/>this<sp/>script<sp/>will<sp/>**not**<sp/>be<sp/>re-loaded</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral"><sp/><sp/>automatically.</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral">-<sp/>Messages<sp/>printed<sp/>from<sp/>loaded<sp/>modules<sp/>will<sp/>**not**<sp/>show<sp/>up</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/>in<sp/>natlink&apos;s<sp/>messages<sp/>window<sp/>because<sp/>this<sp/>script<sp/>uses<sp/>a</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"><sp/><sp/>separate<sp/>process.</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral">-<sp/>Modules<sp/>loaded<sp/>normally<sp/>via<sp/>natlinkmain<sp/>will<sp/>still<sp/>work</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/>and<sp/>be<sp/>recognized<sp/>normally.</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral">-<sp/>This<sp/>script<sp/>will<sp/>open<sp/>a<sp/>small<sp/>dialog<sp/>window<sp/>via<sp/>the</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/>``natlink.waitForSpeech()``<sp/>function<sp/>and<sp/>will<sp/>terminate</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/>when<sp/>you<sp/>click<sp/>&apos;Close&apos;.</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral">-<sp/>One<sp/>use<sp/>for<sp/>this<sp/>script<sp/>is<sp/>to<sp/>control<sp/>admin<sp/>applications<sp/>with</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"><sp/><sp/>Dragon.<sp/>This<sp/>can<sp/>be<sp/>done<sp/>by<sp/>simply<sp/>running<sp/>the<sp/>script<sp/>as<sp/>the</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"><sp/><sp/>administrator<sp/>with<sp/>Dragon<sp/>running<sp/>and<sp/>dragonfly&apos;s<sp/>dependencies</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"><sp/><sp/>installed.</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os.path</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>six</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>dragonfly<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>get_engine</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1loader" kindref="compound">dragonfly.loader</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>CommandModuleDirectory</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1log" kindref="compound">dragonfly.log</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>setup_log</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Set<sp/>up<sp/>basic<sp/>logging.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><ref refid="namespacedragonfly_1_1log_1a63ebb656a7eac0e092eaf67bebccd865" kindref="member">setup_log</ref>()</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">#<sp/>logging.getLogger(&quot;compound.parse&quot;).setLevel(logging.INFO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Main<sp/>event<sp/>driving<sp/>loop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="namespacedfly-loader-natlink_1af506a30edccb7370eb4541992a57ac84" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacedfly-loader-natlink_1af506a30edccb7370eb4541992a57ac84" kindref="member">main</ref>():</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/>os.path.dirname(__file__)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>NameError:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>&quot;__file__&quot;<sp/>name<sp/>is<sp/>not<sp/>always<sp/>available,<sp/>for<sp/>example</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>when<sp/>this<sp/>module<sp/>is<sp/>run<sp/>from<sp/>PythonWin.<sp/><sp/>In<sp/>this<sp/>case<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>simply<sp/>use<sp/>the<sp/>current<sp/>working<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/>os.getcwd()</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__file__<sp/>=<sp/>os.path.join(path,<sp/></highlight><highlight class="stringliteral">&quot;dfly-loader-natlink.py&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialize<sp/>and<sp/>connect<sp/>the<sp/>engine.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>engine<sp/>=<sp/><ref refid="namespacedragonfly_1_1engines_1a54a7132d79612abdb29fac07276b5681" kindref="member">get_engine</ref>(</highlight><highlight class="stringliteral">&quot;natlink&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>engine.connect()</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>grammars.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>directory<sp/>=<sp/><ref refid="classdragonfly_1_1loader_1_1CommandModuleDirectory" kindref="compound">CommandModuleDirectory</ref>(path,<sp/>excludes=[__file__])</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>directory.load()</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Define<sp/>recognition<sp/>callback<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">on_begin():</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Speech<sp/>start<sp/>detected.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">on_recognition(words):</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">u&quot;Recognized:<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/></highlight><highlight class="stringliteral">u&quot;<sp/>&quot;</highlight><highlight class="normal">.join(words)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>only<sp/>seems<sp/>to<sp/>be<sp/>an<sp/>issue<sp/>with<sp/>Python<sp/>2.7<sp/>on<sp/>Windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>six.PY2:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encoding<sp/>=<sp/>sys.stdout.encoding<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;ascii&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>=<sp/>message.encode(encoding,<sp/>errors=</highlight><highlight class="stringliteral">&apos;replace&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(message)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">on_failure():</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Sorry,<sp/>what<sp/>was<sp/>that?&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Recognize<sp/>from<sp/>Dragon<sp/>in<sp/>a<sp/>loop<sp/>(opens<sp/>a<sp/>dialogue<sp/>window).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>engine.do_recognition(on_begin,<sp/>on_recognition,<sp/>on_failure)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>KeyboardInterrupt:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Disconnect<sp/>after<sp/>the<sp/>dialogue<sp/>is<sp/>closed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>engine.disconnect()</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacedfly-loader-natlink_1af506a30edccb7370eb4541992a57ac84" kindref="member">main</ref>()</highlight></codeline>
    </programlisting>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/examples/dfly-loader-natlink.py"/>
  </compounddef>
</doxygen>
