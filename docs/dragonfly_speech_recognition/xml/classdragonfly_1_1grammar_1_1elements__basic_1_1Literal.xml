<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::grammar::elements_basic::Literal</compoundname>
    <basecompoundref refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase" prot="public" virt="non-virtual">dragonfly.grammar.elements_basic.ElementBase</basecompoundref>
      <sectiondef kind="property">
      <memberdef kind="property" id="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal_1a153892349250307a47f4ce1691342ebe" prot="public" static="yes" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type></type>
        <definition>dragonfly.grammar.elements_basic.Literal::words</definition>
        <argsstring></argsstring>
        <name>words</name>
        <initializer>=  property(
        lambda self: self._words,
        doc=&quot;The words to be said by the speaker.&quot;
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" line="803" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" bodystart="803" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal_1ab847446236ff8e9151a78213bb37f135" prot="public" static="yes" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type></type>
        <definition>dragonfly.grammar.elements_basic.Literal::words_ext</definition>
        <argsstring></argsstring>
        <name>words_ext</name>
        <initializer>=  property(
        lambda self: self._words_ext,
        doc=&quot;The <ref refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal_1a153892349250307a47f4ce1691342ebe" kindref="member">words</ref> to be said by the speaker, with any quoted <ref refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal_1a153892349250307a47f4ce1691342ebe" kindref="member">words</ref> as &quot;
        &quot;single items. This is extends the :py:attr:`~<ref refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal_1a153892349250307a47f4ce1691342ebe" kindref="member">words</ref>` property.&quot;
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" line="808" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" bodystart="808" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal_1a6c003099a36dcf08548e2d9877069bbc" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.elements_basic.Literal::_value</definition>
        <argsstring></argsstring>
        <name>_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" line="744" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" bodystart="744" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal_1aaa4b88760bcb34d606a1af638c69a4d5" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.elements_basic.Literal::_words</definition>
        <argsstring></argsstring>
        <name>_words</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" line="792" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" bodystart="792" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal_1aaab2fbf0e0186294d7359c75e7e7f0aa" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.elements_basic.Literal::_words_ext</definition>
        <argsstring></argsstring>
        <name>_words_ext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" line="793" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" bodystart="793" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal_1a6a1e32678c34c27c0cebdf08a3bf8415" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.elements_basic.Literal.__init__</definition>
        <argsstring>(self, text, name=None, value=None, default=None, quote_start_str=&apos;&quot;&apos;,  quote_end_str=&apos;&quot;&apos;, strip_quote_strs=True)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>text</type>
          <defname>text</defname>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1a5bd1a9be70f09c0e74b86a888b813aad" kindref="member">name</ref></type>
          <defname>name</defname>
          <defval>None</defval>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal_1afb38fb1d73506956d965e768a48a9fc7" kindref="member">value</ref></type>
          <defname>value</defname>
          <defval>None</defval>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1adcd1378c9523c840349e97a6a775edad" kindref="member">default</ref></type>
          <defname>default</defname>
          <defval>None</defval>
        </param>
        <param>
          <type>quote_start_str</type>
          <defname>quote_start_str</defname>
          <defval>&apos;&quot;&apos;</defval>
        </param>
        <param>
          <type>quote_end_str</type>
          <defname>quote_end_str</defname>
          <defval>&apos;&quot;&apos;</defval>
        </param>
        <param>
          <type>strip_quote_strs</type>
          <defname>strip_quote_strs</defname>
          <defval>True</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" line="742" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" bodystart="742" bodyend="796"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal_1a584b89a49dd36477ac15a1c8ba124537" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.elements_basic.Literal.__repr__</definition>
        <argsstring>(self)</argsstring>
        <name>__repr__</name>
        <reimplements refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1a5c249a5f0b4fcfd312693aa2693646f4">__repr__</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" line="800" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" bodystart="800" bodyend="802"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal_1a86c93de38c3b126bc8e89f96805e119b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.elements_basic.Literal.decode</definition>
        <argsstring>(self, state)</argsstring>
        <name>decode</name>
        <reimplements refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1a9203f4df00c4c987d10bd8c00814bbb6">decode</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>state</type>
          <defname>state</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Attempt to decode the recognition stored in the given *state*.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" line="826" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" bodystart="826" bodyend="856"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal_1a22d0a438988976bc2f201fa1157b76dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.elements_basic.Literal.dependencies</definition>
        <argsstring>(self, memo)</argsstring>
        <name>dependencies</name>
        <reimplements refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1ae8496a9a9d3fd77702f372f0d20c3ef3">dependencies</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>memo</type>
          <defname>memo</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Returns an iterable containing the dependencies of this
    element and of this element&apos;s children.

    The dependencies are the objects that are necessary
    for this element.  These include lists and other rules.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" line="817" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" bodystart="817" bodyend="819"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal_1ae1b583264c14aebb046dfeb01ce74ef1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.elements_basic.Literal.gstring</definition>
        <argsstring>(self)</argsstring>
        <name>gstring</name>
        <reimplements refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1a55faf3b287d31d1dec9858942c75a194">gstring</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Returns a formatted grammar string of the contents
    of this element and its children.

    The grammar string is of a format similar to that used
    by Natlink to define its grammars.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" line="820" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" bodystart="820" bodyend="822"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal_1afb38fb1d73506956d965e768a48a9fc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.elements_basic.Literal.value</definition>
        <argsstring>(self, node)</argsstring>
        <name>value</name>
        <reimplements refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1a1006d0e330eda5f0f132bb3992bd8d1d">value</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>node</type>
          <defname>node</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Determine the semantic value of this element given the
    recognition results stored in the *node*.

    Argument:
     - *node* --
       a :class:`dragonfly.grammar.state.Node` instance
       representing this element within the recognition
       parse tree

    The default behavior of this method is to return
    an iterable containing the recognized words matched
    by this element (i.e. *node.words()*).</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" line="857" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" bodystart="857" bodyend="864"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>    Element class representing one or more literal words which must be
    said exactly by the speaker as given.

    Quoted words can be used to potentially improve accuracy. This
    currently only has an effect if using the Natlink SR engine
    back-end.

    Constructor arguments:
     - *text* (*str*) --
       the words to be said by the speaker
     - *name* (*str*, default: *None*) --
       the name of this element
     - *value* (*object*, default: *the recognized words*) --
       value returned when this element is successfully decoded
     - *default* (*object*, default: *None*) --
       the default value used if this element is optional and wasn&apos;t
       spoken
     - *quote_start_str* (*str*, default: \&quot;) --
       the string used for specifying the start of quoted words.
     - *quote_end_str* (*str*, default: \&quot;) --
       the string used for specifying the end of quoted words.
     - *strip_quote_strs* (*bool*, default: *True*) --
       whether the start and end quote strings should be stripped from
       this element&apos;s word lists.</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dragonfly.grammar.elements_basic.Literal</label>
        <link refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
      <node id="2">
        <label>dragonfly.grammar.elements_basic.ElementBase</label>
        <link refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>string</label>
      </node>
      <node id="1">
        <label>dragonfly.grammar.elements_basic.Literal</label>
        <link refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
      <node id="2">
        <label>dragonfly.grammar.elements_basic.ElementBase</label>
        <link refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" line="713" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" bodystart="713" bodyend="865"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal_1a6a1e32678c34c27c0cebdf08a3bf8415" prot="public" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Literal</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1a2333eeef7b754f9989301817c7a51901" prot="public" virt="non-virtual" ambiguityscope="dragonfly::grammar::elements_basic::ElementBase."><scope>dragonfly::grammar::elements_basic::Literal</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal_1a584b89a49dd36477ac15a1c8ba124537" prot="public" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Literal</scope><name>__repr__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1ac9000520c1ed2cc45e750aa4f58c33e0" prot="private" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Literal</scope><name>_copy_sequence</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1aa0bbb9c347cc144dc8ec9089b752d1fd" prot="private" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Literal</scope><name>_default</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1a13a76c99b260b6a0150352e039cc818d" prot="private" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Literal</scope><name>_get_children</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1a8b2ae3b4948ab028d4977f19db6ecd01" prot="private" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Literal</scope><name>_id</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1a3bd1a9e8cccf7ad0e8639ad6ea25e569" prot="private" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Literal</scope><name>_log_decode</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1a2a400cba074f562db1cce30ac537ca52" prot="private" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Literal</scope><name>_log_eval</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal_1a6c003099a36dcf08548e2d9877069bbc" prot="private" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Literal</scope><name>_value</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal_1aaa4b88760bcb34d606a1af638c69a4d5" prot="private" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Literal</scope><name>_words</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal_1aaab2fbf0e0186294d7359c75e7e7f0aa" prot="private" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Literal</scope><name>_words_ext</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1a474483e51e223868deafb59b6cc9f226" prot="public" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Literal</scope><name>children</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal_1a86c93de38c3b126bc8e89f96805e119b" prot="public" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Literal</scope><name>decode</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1adcd1378c9523c840349e97a6a775edad" prot="public" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Literal</scope><name>default</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal_1a22d0a438988976bc2f201fa1157b76dc" prot="public" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Literal</scope><name>dependencies</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1aa407bc864e150bd0f0c124ae71168e31" prot="public" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Literal</scope><name>element_tree_string</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal_1ae1b583264c14aebb046dfeb01ce74ef1" prot="public" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Literal</scope><name>gstring</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1acca1fd7cd9fc4bff2d96cdc0855b0ea8" prot="public" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Literal</scope><name>has_default</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1a5bd1a9be70f09c0e74b86a888b813aad" prot="public" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Literal</scope><name>name</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1aa84e3c0d7a310f6503836439a83409ab" prot="public" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Literal</scope><name>name</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal_1afb38fb1d73506956d965e768a48a9fc7" prot="public" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Literal</scope><name>value</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal_1a153892349250307a47f4ce1691342ebe" prot="public" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Literal</scope><name>words</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Literal_1ab847446236ff8e9151a78213bb37f135" prot="public" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Literal</scope><name>words_ext</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
