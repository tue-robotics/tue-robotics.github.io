<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1test_1_1test__timer_1_1TestTimer" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::test::test_timer::TestTimer</compoundname>
    <basecompoundref prot="public" virt="non-virtual">TestCase</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1test_1_1test__timer_1_1TestTimer_1aca2e130b32028215301e308b94adf3b8" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.test.test_timer.TestTimer::engine</definition>
        <argsstring></argsstring>
        <name>engine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_timer.py" line="47" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_timer.py" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1test_1_1test__timer_1_1TestTimer_1a828639dd03429f5dbc742b1decf31e6a" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.test.test_timer.TestTimer::log_capture</definition>
        <argsstring></argsstring>
        <name>log_capture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_timer.py" line="45" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_timer.py" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1test_1_1test__timer_1_1TestTimer_1a77b25de373d592ee021394b601c78b40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.test_timer.TestTimer.setUp</definition>
        <argsstring>(self)</argsstring>
        <name>setUp</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_timer.py" line="44" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_timer.py" bodystart="44" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1test_1_1test__timer_1_1TestTimer_1abb8a092527018c871b829a7c955dd802" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.test_timer.TestTimer.test_non_repeating_timers</definition>
        <argsstring>(self)</argsstring>
        <name>test_non_repeating_timers</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Test that non-repeating timers only run once. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_timer.py" line="72" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_timer.py" bodystart="72" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1test_1_1test__timer_1_1TestTimer_1aec96866c37d2248bacfd40082d02fb35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.test_timer.TestTimer.test_timer_callback_exception</definition>
        <argsstring>(self)</argsstring>
        <name>test_timer_callback_exception</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Test handling of exceptions during timer callback. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_timer.py" line="49" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_timer.py" bodystart="49" bodyend="71"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dragonfly.test.test_timer.TestTimer</label>
        <link refid="classdragonfly_1_1test_1_1test__timer_1_1TestTimer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>TestCase</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>dragonfly.test.test_timer.TestTimer</label>
        <link refid="classdragonfly_1_1test_1_1test__timer_1_1TestTimer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>TestCase</label>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_timer.py" line="42" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_timer.py" bodystart="42" bodyend="95"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1test_1_1test__timer_1_1TestTimer_1aca2e130b32028215301e308b94adf3b8" prot="public" virt="non-virtual"><scope>dragonfly::test::test_timer::TestTimer</scope><name>engine</name></member>
      <member refid="classdragonfly_1_1test_1_1test__timer_1_1TestTimer_1a828639dd03429f5dbc742b1decf31e6a" prot="public" virt="non-virtual"><scope>dragonfly::test::test_timer::TestTimer</scope><name>log_capture</name></member>
      <member refid="classdragonfly_1_1test_1_1test__timer_1_1TestTimer_1a77b25de373d592ee021394b601c78b40" prot="public" virt="non-virtual"><scope>dragonfly::test::test_timer::TestTimer</scope><name>setUp</name></member>
      <member refid="classdragonfly_1_1test_1_1test__timer_1_1TestTimer_1abb8a092527018c871b829a7c955dd802" prot="public" virt="non-virtual"><scope>dragonfly::test::test_timer::TestTimer</scope><name>test_non_repeating_timers</name></member>
      <member refid="classdragonfly_1_1test_1_1test__timer_1_1TestTimer_1aec96866c37d2248bacfd40082d02fb35" prot="public" virt="non-virtual"><scope>dragonfly::test::test_timer::TestTimer</scope><name>test_timer_callback_exception</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
