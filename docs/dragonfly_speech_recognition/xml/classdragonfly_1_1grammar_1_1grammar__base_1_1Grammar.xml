<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::grammar::grammar_base::Grammar</compoundname>
    <basecompoundref prot="public" virt="non-virtual">object</basecompoundref>
    <derivedcompoundref refid="classdragonfly_1_1grammar_1_1grammar__connection_1_1ConnectionGrammar" prot="public" virt="non-virtual">dragonfly.grammar.grammar_connection.ConnectionGrammar</derivedcompoundref>
    <derivedcompoundref refid="classdragonfly_1_1test_1_1element__tester_1_1ElementTester" prot="public" virt="non-virtual">dragonfly.test.element_tester.ElementTester</derivedcompoundref>
    <derivedcompoundref refid="classdragonfly_1_1test_1_1rule__test__grammar_1_1RuleTestGrammar" prot="public" virt="non-virtual">dragonfly.test.rule_test_grammar.RuleTestGrammar</derivedcompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a48eb79915403eded5dc49db386164e0d" prot="private" static="yes" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.grammar_base.Grammar::_log</definition>
        <argsstring></argsstring>
        <name>_log</name>
        <initializer>=  logging.getLogger(&quot;grammar&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="64" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a3b62ac3360d277f2b3f82b62d9183d6c" prot="private" static="yes" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.grammar_base.Grammar::_log_begin</definition>
        <argsstring></argsstring>
        <name>_log_begin</name>
        <initializer>=  logging.getLogger(&quot;grammar.begin&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="62" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1aa0d7803ef4a6246f27979b4cb7be93c2" prot="private" static="yes" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.grammar_base.Grammar::_log_load</definition>
        <argsstring></argsstring>
        <name>_log_load</name>
        <initializer>=  logging.getLogger(&quot;grammar.load&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="61" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1ad7a5b707b97118304c2bed60249c0c04" prot="private" static="yes" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.grammar_base.Grammar::_log_results</definition>
        <argsstring></argsstring>
        <name>_log_results</name>
        <initializer>=  logging.getLogger(&quot;grammar.results&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="63" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a53b8f0a0d04455a157f1305a40e5d7a1" prot="public" static="yes" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type></type>
        <definition>dragonfly.grammar.grammar_base.Grammar::active_rules</definition>
        <argsstring></argsstring>
        <name>active_rules</name>
        <initializer>=  property(
        lambda self: [r for r in self.rules if r.active],
        doc=&quot;List of a grammar&apos;s active rules.&quot;
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="112" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a8412944b100faef28ace162d77d69c52" prot="public" static="yes" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type></type>
        <definition>dragonfly.grammar.grammar_base.Grammar::context</definition>
        <argsstring></argsstring>
        <name>context</name>
        <initializer>=  property(lambda self: self._context,
                       doc=&quot;A grammar&apos;s context, under which it and its &quot;
                           &quot;<ref refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1af81cdde1b00f75c19fd9216971151f54" kindref="member">rules</ref> will be active and receive recognitions &quot;
                           &quot;if it is also enabled.&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="190" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a1e72033a50a269fda26bd477ae9a69c5" prot="public" static="yes" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type></type>
        <definition>dragonfly.grammar.grammar_base.Grammar::enabled</definition>
        <argsstring></argsstring>
        <name>enabled</name>
        <initializer>=  property(lambda self: self._enabled,
                       doc=&quot;Whether a grammar is active to receive &quot;
                           &quot;recognitions or not.&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="150" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1afb7b1cea641f819df439536b34808320" prot="public" static="yes" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type></type>
        <definition>dragonfly.grammar.grammar_base.Grammar::engine</definition>
        <argsstring></argsstring>
        <name>engine</name>
        <initializer>=  property(lambda self: self._engine, <ref refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a4033799db2d6664939f2e2c064a74eb7" kindref="member">_set_engine</ref>,
                      doc=&quot;A grammar&apos;s SR engine.&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="168" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1ada17ca176683ec6ce88464eda4f214c8" prot="public" static="yes" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type></type>
        <definition>dragonfly.grammar.grammar_base.Grammar::lists</definition>
        <argsstring></argsstring>
        <name>lists</name>
        <initializer>=  property(lambda self: tuple(self._lists),
                     doc=&quot;List of a grammar&apos;s lists.&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="117" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a98f357cf447c78c06bef3a369096fa3a" prot="public" static="yes" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type></type>
        <definition>dragonfly.grammar.grammar_base.Grammar::loaded</definition>
        <argsstring></argsstring>
        <name>loaded</name>
        <initializer>=  property(lambda self: self._loaded,
                      doc=&quot;Whether a grammar is loaded into&quot;
                          &quot; its SR <ref refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1afb7b1cea641f819df439536b34808320" kindref="member">engine</ref> or not.&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="120" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a0afa653c6a3bfaffcf131bf1fd71c62a" prot="public" static="yes" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type></type>
        <definition>dragonfly.grammar.grammar_base.Grammar::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <initializer>=  property(lambda self: self._name,
                    doc=&quot;A grammar&apos;s name.&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="106" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1af81cdde1b00f75c19fd9216971151f54" prot="public" static="yes" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type></type>
        <definition>dragonfly.grammar.grammar_base.Grammar::rules</definition>
        <argsstring></argsstring>
        <name>rules</name>
        <initializer>=  property(lambda self: tuple(self._rules),
                     doc=&quot;List of a grammar&apos;s rules.&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="109" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a9528d2e3055675896eff1d31b302c24f" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.grammar_base.Grammar::_context</definition>
        <argsstring></argsstring>
        <name>_context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Set the context for this grammar, under which it and its rules
    will be active and receive recognitions if it is also enabled.

    Use of this method overwrites any previous context.

    Contexts can be modified at any time, but will only be checked
    when :meth:`process_begin` is called.

    :param context: context within which to be active.  If *None*,
the grammar will always be active.
    :type context: Context|None
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="75" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1aecc7c1c58edaa4856a28a2ad1bb5aa31" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.grammar_base.Grammar::_description</definition>
        <argsstring></argsstring>
        <name>_description</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="71" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a5ce9939c173ff704c9c07d3a5a4151b1" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.grammar_base.Grammar::_enabled</definition>
        <argsstring></argsstring>
        <name>_enabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Enable this grammar so that it is active to receive
    recognitions.</verbatim></para>
<para><verbatim>    Disable this grammar so that it is not active to
    receive recognitions.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="85" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1ac36b7e98013fbfe106236eb31f6dd8f0" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.grammar_base.Grammar::_engine</definition>
        <argsstring></argsstring>
        <name>_engine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="78" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1ab344a35f9b28478d40725e2b9fb299e0" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.grammar_base.Grammar::_in_context</definition>
        <argsstring></argsstring>
        <name>_in_context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Start of phrase callback.

    *Usually derived grammar classes override
    ``Grammar._process_begin`` instead of this method, because
    this method merely wraps that method adding context matching.*

    This method is called when the speech recognition
    engine detects that the user has begun to speak a
    phrase.

    Arguments:
     - *executable* -- the full path to the module whose
       window is currently in the foreground.
     - *title* -- window title of the foreground window.
     - *handle* -- window handle to the foreground window.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="86" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1ae2af5979f64c81e36487c49508d8b6fa" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.grammar_base.Grammar::_lists</definition>
        <argsstring></argsstring>
        <name>_lists</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="83" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1aebc07024b0439d643c5c8fcc1db64766" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.grammar_base.Grammar::_loaded</definition>
        <argsstring></argsstring>
        <name>_loaded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Load this grammar into its SR engine. </verbatim></para>
<para><verbatim>Unload this grammar from its SR engine. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="84" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1ab860739a9064c337828ee589a001982a" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.grammar_base.Grammar::_name</definition>
        <argsstring></argsstring>
        <name>_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="70" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a044d14c890d71e0e704e99787487dc62" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.grammar_base.Grammar::_rules</definition>
        <argsstring></argsstring>
        <name>_rules</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="82" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a202af6755feff0000ca23341a981f62b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.grammar_base.Grammar.__del__</definition>
        <argsstring>(self)</argsstring>
        <name>__del__</name>
        <reimplementedby refid="classdragonfly_1_1grammar_1_1grammar__connection_1_1ConnectionGrammar_1aedf4bb8968c77a9ea6a03ea5f3205192">__del__</reimplementedby>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="88" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="88" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a5bd1c520a9bb28398b90d79e7c7635e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.grammar_base.Grammar.__init__</definition>
        <argsstring>(self, name, description=None, context=None, engine=None)</argsstring>
        <name>__init__</name>
        <reimplementedby refid="classdragonfly_1_1grammar_1_1grammar__connection_1_1ConnectionGrammar_1a8dc0af3651c207d430594d8607f12d4d">__init__</reimplementedby>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a0afa653c6a3bfaffcf131bf1fd71c62a" kindref="member">name</ref></type>
          <defname>name</defname>
        </param>
        <param>
          <type>description</type>
          <defname>description</defname>
          <defval>None</defval>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a8412944b100faef28ace162d77d69c52" kindref="member">context</ref></type>
          <defname>context</defname>
          <defval>None</defval>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1afb7b1cea641f819df439536b34808320" kindref="member">engine</ref></type>
          <defname>engine</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="69" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="69" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1ac57bef33c16ea922b476f9a255274a1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.grammar_base.Grammar.__repr__</definition>
        <argsstring>(self)</argsstring>
        <name>__repr__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="103" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1abbbde2b56aa525197a0103128f04882c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.grammar_base.Grammar.activate_rule</definition>
        <argsstring>(self, rule)</argsstring>
        <name>activate_rule</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>rule</type>
          <defname>rule</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Activate a rule loaded in this grammar.

    **Internal:** this method is normally *not* called
    directly by the user, but instead automatically when
    the rule itself is activated by the user.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="351" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="351" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a83df627a9bf995674853a1d69df1dee3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.grammar_base.Grammar.add_all_dependencies</definition>
        <argsstring>(self)</argsstring>
        <name>add_all_dependencies</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Iterate through the grammar&apos;s rules and add all the necessary dependencies.

    **Internal** This method is called when the grammar is loaded.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="337" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="337" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1ab25ddfe74ea1dc8f09f58ce698bcfcd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.grammar_base.Grammar.add_dependency</definition>
        <argsstring>(self, dep)</argsstring>
        <name>add_dependency</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>dep</type>
          <defname>dep</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Add a rule or list dependency to this grammar.

    **Internal:** this method is normally *not* called
    by the user, but instead automatically during
    grammar compilation.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="321" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="321" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a69f55ed3df1ee887455912826deecebc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.grammar_base.Grammar.add_list</definition>
        <argsstring>(self, lst)</argsstring>
        <name>add_list</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>lst</type>
          <defname>lst</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Add a list to this grammar.

Lists **cannot** be added to grammars that are currently loaded.

:param lst: Dragonfly list
:type lst: ListBase
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="267" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="267" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a62c4fc97b4fc78013f61901bf06953cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.grammar_base.Grammar.add_rule</definition>
        <argsstring>(self, rule)</argsstring>
        <name>add_rule</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>rule</type>
          <defname>rule</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Add a rule to this grammar.

The following rules apply when adding rules into grammars:

#. Rules **cannot** be added to grammars that are currently loaded.
#. Two or more rules with the same name are **not** allowed.

.. warning::

   Note that while adding the same ``Rule`` object to more than one
   grammar is allowed, it is **not** recommended! This is because
   the context and active/enabled states of these rules will not
   function correctly if used. It is better to use *separate*
   ``Rule`` instances for each grammar instead.

:param rule: Dragonfly rule
:type rule: Rule
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="198" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="198" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1abbfec0c9bf122c99806ad98e86ca6251" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.grammar_base.Grammar.deactivate_rule</definition>
        <argsstring>(self, rule)</argsstring>
        <name>deactivate_rule</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>rule</type>
          <defname>rule</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Deactivate a rule loaded in this grammar.

    **Internal:** this method is normally *not* called
    directly by the user, but instead automatically when
    the rule itself is deactivated by the user.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="376" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="376" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a91735348d3c3abe8fcc0205b25df37bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.grammar_base.Grammar.disable</definition>
        <argsstring>(self)</argsstring>
        <name>disable</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Disable this grammar so that it is not active to
    receive recognitions.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="142" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="142" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1aba90a6901ffd2b18f23900b17f779bbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.grammar_base.Grammar.enable</definition>
        <argsstring>(self)</argsstring>
        <name>enable</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Enable this grammar so that it is active to receive
    recognitions.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="134" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="134" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1acc57f9948744e17f0e6918e1817dee88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.grammar_base.Grammar.enter_context</definition>
        <argsstring>(self)</argsstring>
        <name>enter_context</name>
        <reimplementedby refid="classdragonfly_1_1grammar_1_1grammar__connection_1_1ConnectionGrammar_1a959bdfaf1cc723c49387a80faea4444b">enter_context</reimplementedby>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Enter context callback.

    This method is called when a phrase-start has been
    detected.  It is only called if this grammar&apos;s
    context previously did not match but now does
    match positively.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="557" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="557" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a5ba339782a6af76eb77f0d7be0d61535" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.grammar_base.Grammar.exit_context</definition>
        <argsstring>(self)</argsstring>
        <name>exit_context</name>
        <reimplementedby refid="classdragonfly_1_1grammar_1_1grammar__connection_1_1ConnectionGrammar_1a618d9ec7f400ca555705ff63076adb21">exit_context</reimplementedby>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Exit context callback.

    This method is called when a phrase-start has been
    detected.  It is only called if this grammar&apos;s
    context previously did match but now doesn&apos;t
    match positively anymore.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="568" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="568" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a4b1ff2b5d4d66a2407dbcf26ca698942" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.grammar_base.Grammar.get_complexity_string</definition>
        <argsstring>(self)</argsstring>
        <name>get_complexity_string</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Build and return a human-readable text giving insight into the
    complexity of this grammar.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="468" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="468" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1ab509b1eccad552a913ebe4748b7464c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.grammar_base.Grammar.load</definition>
        <argsstring>(self)</argsstring>
        <name>load</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Load this grammar into its SR engine. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="428" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="428" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a54804d71f4b3e1e931e4b5ba94b74b5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.grammar_base.Grammar.process_begin</definition>
        <argsstring>(self, executable, title, handle)</argsstring>
        <name>process_begin</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>executable</type>
          <defname>executable</defname>
        </param>
        <param>
          <type>title</type>
          <defname>title</defname>
        </param>
        <param>
          <type>handle</type>
          <defname>handle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Start of phrase callback.

    *Usually derived grammar classes override
    ``Grammar._process_begin`` instead of this method, because
    this method merely wraps that method adding context matching.*

    This method is called when the speech recognition
    engine detects that the user has begun to speak a
    phrase.

    Arguments:
     - *executable* -- the full path to the module whose
       window is currently in the foreground.
     - *title* -- window title of the foreground window.
     - *handle* -- window handle to the foreground window.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="505" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="505" bodyend="556"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a450e8a43f11666a7860faf74032d9636" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.grammar_base.Grammar.remove_list</definition>
        <argsstring>(self, lst)</argsstring>
        <name>remove_list</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>lst</type>
          <defname>lst</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Remove a list from this grammar.

Lists **cannot** be removed from grammars that are currently loaded.

:param lst: Dragonfly list
:type lst: ListBase
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="297" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="297" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a2e8824dc52d5e4787cc5e4c1d24bed36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.grammar_base.Grammar.remove_rule</definition>
        <argsstring>(self, rule)</argsstring>
        <name>remove_rule</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>rule</type>
          <defname>rule</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Remove a rule from this grammar.

Rules **cannot** be removed from grammars that are currently loaded.

:param rule: Dragonfly rule
:type rule: Rule
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="243" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="243" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a2309c12779a08c095dfd6db38a01e40f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.grammar_base.Grammar.rule_names</definition>
        <argsstring>(self)</argsstring>
        <name>rule_names</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>List of grammar&apos;s rule names.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="125" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="125" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1ac5c60f2d5f14b44fd8dcdf0a26fd2e73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.grammar_base.Grammar.set_context</definition>
        <argsstring>(self, context)</argsstring>
        <name>set_context</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a8412944b100faef28ace162d77d69c52" kindref="member">context</ref></type>
          <defname>context</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Set the context for this grammar, under which it and its rules
    will be active and receive recognitions if it is also enabled.

    Use of this method overwrites any previous context.

    Contexts can be modified at any time, but will only be checked
    when :meth:`process_begin` is called.

    :param context: context within which to be active.  If *None*,
the grammar will always be active.
    :type context: Context|None
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="171" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="171" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a076b97046da19c15ee435b35286a182f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.grammar_base.Grammar.set_exclusive</definition>
        <argsstring>(self, exclusive)</argsstring>
        <name>set_exclusive</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>exclusive</type>
          <defname>exclusive</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Alias of :meth:`set_exclusiveness`. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="158" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="158" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a22894096d710369a15de568a973576c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.grammar_base.Grammar.set_exclusiveness</definition>
        <argsstring>(self, exclusive)</argsstring>
        <name>set_exclusiveness</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>exclusive</type>
          <defname>exclusive</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Set the exclusiveness of this grammar. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="154" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="154" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a17e9d8f4ec23302e3e3456cbd7d17ace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.grammar_base.Grammar.unload</definition>
        <argsstring>(self)</argsstring>
        <name>unload</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Unload this grammar from its SR engine. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="456" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="456" bodyend="467"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1ae4c32fc4d958c244c3a3733a4c26ea79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.grammar_base.Grammar.update_list</definition>
        <argsstring>(self, lst)</argsstring>
        <name>update_list</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>lst</type>
          <defname>lst</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Update a list&apos;s content loaded in this grammar.

    **Internal:** this method is normally *not* called
    directly by the user, but instead automatically when
    the list itself is modified by the user.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="401" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="401" bodyend="424"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a0bed46a53b1f401e1dc2976fb9736b37" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.grammar_base.Grammar._get_element_list</definition>
        <argsstring>(self, thing)</argsstring>
        <name>_get_element_list</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>thing</type>
          <defname>thing</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="492" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="492" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1ac25945f4a202fb02f342e0f66a524e25" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.grammar_base.Grammar._process_begin</definition>
        <argsstring>(self, executable, title, handle)</argsstring>
        <name>_process_begin</name>
        <reimplementedby refid="classdragonfly_1_1grammar_1_1grammar__connection_1_1ConnectionGrammar_1a715b426c1ba2b793d497677802679d63">_process_begin</reimplementedby>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>executable</type>
          <defname>executable</defname>
        </param>
        <param>
          <type>title</type>
          <defname>title</defname>
        </param>
        <param>
          <type>handle</type>
          <defname>handle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Start of phrase callback.

    *This usually is the method which should be overridden
    to give derived grammar classes custom behavior.*

    This method is called when the speech recognition
    engine detects that the user has begun to speak a
    phrase. This method is called by the
    ``Grammar.process_begin`` method only if this
    grammar&apos;s context matches positively.

    Arguments:
     - *executable* -- the full path to the module whose
       window is currently in the foreground.
     - *title* -- window title of the foreground window.
     - *handle* -- window handle to the foreground window.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="579" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="579" bodyend="599"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a4033799db2d6664939f2e2c064a74eb7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.grammar_base.Grammar._set_engine</definition>
        <argsstring>(self, engine)</argsstring>
        <name>_set_engine</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1afb7b1cea641f819df439536b34808320" kindref="member">engine</ref></type>
          <defname>engine</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="162" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="162" bodyend="167"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>    Grammar class for managing a set of rules.

    This base grammar class takes care of the communication
    between Dragonfly&apos;s object model and the backend speech
    recognition engine.  This includes compiling rules and
    elements, loading them, activating and deactivating
    them, and unloading them.  It may, depending on the
    engine, also include receiving recognition results and
    dispatching them to the appropriate rule.

     - *name* -- name of this grammar
     - *description* (str, default: None) --
       description for this grammar
     - *context* (Context, default: None) --
       context within which to be active.  If *None*, the grammar will
       always be active.</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dragonfly.grammar.grammar_base.Grammar</label>
        <link refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>dragonfly.grammar.grammar_connection.ConnectionGrammar</label>
        <link refid="classdragonfly_1_1grammar_1_1grammar__connection_1_1ConnectionGrammar"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>object</label>
      </node>
      <node id="5">
        <label>dragonfly.test.rule_test_grammar.RuleTestGrammar</label>
        <link refid="classdragonfly_1_1test_1_1rule__test__grammar_1_1RuleTestGrammar"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>dragonfly.test.element_tester.ElementTester</label>
        <link refid="classdragonfly_1_1test_1_1element__tester_1_1ElementTester"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>dragonfly.grammar.grammar_base.Grammar</label>
        <link refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>object</label>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" line="39" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/grammar_base.py" bodystart="39" bodyend="599"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a202af6755feff0000ca23341a981f62b" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>__del__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a5bd1c520a9bb28398b90d79e7c7635e4" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1ac57bef33c16ea922b476f9a255274a1c" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>__repr__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a9528d2e3055675896eff1d31b302c24f" prot="private" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>_context</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1aecc7c1c58edaa4856a28a2ad1bb5aa31" prot="private" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>_description</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a5ce9939c173ff704c9c07d3a5a4151b1" prot="private" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>_enabled</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1ac36b7e98013fbfe106236eb31f6dd8f0" prot="private" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>_engine</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a0bed46a53b1f401e1dc2976fb9736b37" prot="private" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>_get_element_list</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1ab344a35f9b28478d40725e2b9fb299e0" prot="private" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>_in_context</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1ae2af5979f64c81e36487c49508d8b6fa" prot="private" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>_lists</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1aebc07024b0439d643c5c8fcc1db64766" prot="private" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>_loaded</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a48eb79915403eded5dc49db386164e0d" prot="private" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>_log</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a3b62ac3360d277f2b3f82b62d9183d6c" prot="private" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>_log_begin</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1aa0d7803ef4a6246f27979b4cb7be93c2" prot="private" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>_log_load</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1ad7a5b707b97118304c2bed60249c0c04" prot="private" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>_log_results</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1ab860739a9064c337828ee589a001982a" prot="private" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>_name</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1ac25945f4a202fb02f342e0f66a524e25" prot="private" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>_process_begin</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a044d14c890d71e0e704e99787487dc62" prot="private" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>_rules</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a4033799db2d6664939f2e2c064a74eb7" prot="private" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>_set_engine</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1abbbde2b56aa525197a0103128f04882c" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>activate_rule</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a53b8f0a0d04455a157f1305a40e5d7a1" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>active_rules</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a83df627a9bf995674853a1d69df1dee3" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>add_all_dependencies</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1ab25ddfe74ea1dc8f09f58ce698bcfcd0" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>add_dependency</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a69f55ed3df1ee887455912826deecebc" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>add_list</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a62c4fc97b4fc78013f61901bf06953cd" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>add_rule</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a8412944b100faef28ace162d77d69c52" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>context</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1abbfec0c9bf122c99806ad98e86ca6251" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>deactivate_rule</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a91735348d3c3abe8fcc0205b25df37bb" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>disable</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1aba90a6901ffd2b18f23900b17f779bbe" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>enable</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a1e72033a50a269fda26bd477ae9a69c5" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>enabled</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1afb7b1cea641f819df439536b34808320" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>engine</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1acc57f9948744e17f0e6918e1817dee88" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>enter_context</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a5ba339782a6af76eb77f0d7be0d61535" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>exit_context</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a4b1ff2b5d4d66a2407dbcf26ca698942" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>get_complexity_string</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1ada17ca176683ec6ce88464eda4f214c8" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>lists</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1ab509b1eccad552a913ebe4748b7464c1" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>load</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a98f357cf447c78c06bef3a369096fa3a" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>loaded</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a0afa653c6a3bfaffcf131bf1fd71c62a" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>name</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a54804d71f4b3e1e931e4b5ba94b74b5d" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>process_begin</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a450e8a43f11666a7860faf74032d9636" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>remove_list</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a2e8824dc52d5e4787cc5e4c1d24bed36" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>remove_rule</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a2309c12779a08c095dfd6db38a01e40f" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>rule_names</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1af81cdde1b00f75c19fd9216971151f54" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>rules</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1ac5c60f2d5f14b44fd8dcdf0a26fd2e73" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>set_context</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a076b97046da19c15ee435b35286a182f" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>set_exclusive</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a22894096d710369a15de568a973576c1" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>set_exclusiveness</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1a17e9d8f4ec23302e3e3456cbd7d17ace" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>unload</name></member>
      <member refid="classdragonfly_1_1grammar_1_1grammar__base_1_1Grammar_1ae4c32fc4d958c244c3a3733a4c26ea79" prot="public" virt="non-virtual"><scope>dragonfly::grammar::grammar_base::Grammar</scope><name>update_list</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
