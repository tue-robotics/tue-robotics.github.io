<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="rule__base_8py" kind="file" language="Python">
    <compoundname>rule_base.py</compoundname>
    <innerclass refid="classdragonfly_1_1grammar_1_1rule__base_1_1ImportedRule" prot="public">dragonfly::grammar::rule_base::ImportedRule</innerclass>
    <innerclass refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule" prot="public">dragonfly::grammar::rule_base::Rule</innerclass>
    <innernamespace refid="namespacedragonfly_1_1grammar_1_1rule__base">dragonfly::grammar::rule_base</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacedragonfly_1_1grammar_1_1rule__base" refkind="compound"><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Dragonfly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(c)<sp/>Copyright<sp/>2007,<sp/>2008<sp/>by<sp/>Christo<sp/>Butcher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Licensed<sp/>under<sp/>the<sp/>LGPL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Dragonfly<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Dragonfly<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>License<sp/>along<sp/>with<sp/>Dragonfly.<sp/><sp/>If<sp/>not,<sp/>see</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral">Rule<sp/>class</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral">============================================================================</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">#<sp/>pylint:<sp/>disable=unused-variable,too-many-instance-attributes,no-self-use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logging</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1grammar_1_1context" kindref="compound">dragonfly.grammar.context</ref><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Context</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1error" kindref="compound">dragonfly.error</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>GrammarError</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule" kindref="compound">Rule</ref>(object):</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rule<sp/>class<sp/>for<sp/>implementing<sp/>complete<sp/>or<sp/>partial<sp/>voice-commands.</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>rule<sp/>class<sp/>represents<sp/>a<sp/>voice-command<sp/>or<sp/>part<sp/>of<sp/>a<sp/>voice-</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command.<sp/><sp/>It<sp/>contains<sp/>a<sp/>root<sp/>element,<sp/>which<sp/>defines<sp/>the<sp/>language</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>construct<sp/>of<sp/>this<sp/>rule.</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Constructor<sp/>arguments:</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*name*<sp/>(*str*)<sp/>--<sp/>name<sp/>of<sp/>this<sp/>rule.<sp/><sp/>If<sp/>*None*,<sp/>a<sp/>unique</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>will<sp/>automatically<sp/>be<sp/>generated.</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*element*<sp/>(*Element*)<sp/>--</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root<sp/>element<sp/>for<sp/>this<sp/>rule</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*context*<sp/>(*Context*,<sp/>default:<sp/>*None*)<sp/>--</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context<sp/>within<sp/>which<sp/>to<sp/>be<sp/>active.<sp/><sp/>If<sp/>*None*,<sp/>the<sp/>rule<sp/>will</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>always<sp/>be<sp/>active<sp/>when<sp/>its<sp/>grammar<sp/>is<sp/>active.</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*imported*<sp/>(boolean,<sp/>default:<sp/>*False*)<sp/>--</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>true,<sp/>this<sp/>rule<sp/>is<sp/>imported<sp/>from<sp/>outside<sp/>its<sp/>grammar</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*exported*<sp/>(boolean,<sp/>default:<sp/>*True*)<sp/>--</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>true,<sp/>this<sp/>rule<sp/>is<sp/>a<sp/>complete<sp/>top-level<sp/>rule<sp/>which<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spoken<sp/>by<sp/>the<sp/>user.<sp/><sp/>This<sp/>should<sp/>be<sp/>*True*<sp/>for<sp/>voice-commands</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>the<sp/>user<sp/>can<sp/>speak.</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>*self._log*<sp/>logger<sp/>objects<sp/>should<sp/>be<sp/>used<sp/>in<sp/>methods<sp/>of</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>derived<sp/>classes<sp/>for<sp/>logging<sp/>purposes.<sp/><sp/>It<sp/>is<sp/>a<sp/>standard<sp/>logger</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object<sp/>from<sp/>the<sp/>*logger*<sp/>module<sp/>in<sp/>the<sp/>Python<sp/>standard<sp/>library.</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a3bbefb0e38e96771de43401ff853e16b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_log_load<sp/><sp/><sp/>=<sp/>logging.getLogger(</highlight><highlight class="stringliteral">&quot;grammar.load&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="65" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ab2392a9b9a401b2734055021cd361627" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_log_eval<sp/><sp/><sp/>=<sp/>logging.getLogger(</highlight><highlight class="stringliteral">&quot;grammar.eval&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="66" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ab2d4c33c6947d06f136d722a60a6ad69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_log_proc<sp/><sp/><sp/>=<sp/>logging.getLogger(</highlight><highlight class="stringliteral">&quot;grammar.process&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="67" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a75fdcef87114b992f3ba76c3ec19c12e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_log<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>logging.getLogger(</highlight><highlight class="stringliteral">&quot;rule&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="68" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a63708f8b55821fc912d3c9613659c30c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_log_begin<sp/><sp/>=<sp/>logging.getLogger(</highlight><highlight class="stringliteral">&quot;rule&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Counter<sp/>ID<sp/>used<sp/>for<sp/>anonymous<sp/>rules<sp/>to<sp/>give<sp/>them<sp/>a<sp/>unique<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aac3106f975f474720ae8e2108a559176" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_next_anonymous_id<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a576f085cc4f4ecdf154584ec8ceb3e2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a576f085cc4f4ecdf154584ec8ceb3e2c" kindref="member">__init__</ref>(self,<sp/>name=None,<sp/>element=None,<sp/>context=None,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imported=False,<sp/>exported=True):</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>default<sp/>argument<sp/>for<sp/>*element*<sp/>is<sp/>NOT<sp/>acceptable;<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>construction<sp/>is<sp/>used<sp/>for<sp/>backwards<sp/>compatibility<sp/>and<sp/>argument</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5f244a7ccce70fbf7f2fa0fc26ebf5c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1acc246f5f8cd4333fe5dfac1e24d8b131" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5f244a7ccce70fbf7f2fa0fc26ebf5c5" kindref="member">_element</ref><sp/>=<sp/>element</highlight></codeline>
<codeline lineno="79" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a9e1a66ec204cfc3e4ff43cfd26700c94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1acc246f5f8cd4333fe5dfac1e24d8b131" kindref="member">_imported</ref><sp/>=<sp/>imported</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a9e1a66ec204cfc3e4ff43cfd26700c94" kindref="member">_exported</ref><sp/>=<sp/>exported</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>a<sp/>unique<sp/>name<sp/>for<sp/>this<sp/>rule<sp/>if<sp/>none<sp/>is<sp/>given.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>name:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;_anonrule_%03d_%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>(Rule._next_anonymous_id,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.__class__.__name__)</highlight></codeline>
<codeline lineno="86" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aa10ab7422e75da56283a4cc1c7da6985" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rule._next_anonymous_id<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aa10ab7422e75da56283a4cc1c7da6985" kindref="member">_name</ref><sp/>=<sp/>name</highlight></codeline>
<codeline lineno="88" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5fa26e7246b883fc7e2fef8a32a931be" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1accac7d6feda0165d863fdfcdee7674fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5fa26e7246b883fc7e2fef8a32a931be" kindref="member">_active</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1accac7d6feda0165d863fdfcdee7674fd" kindref="member">_enabled</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>(isinstance(context,<sp/>Context)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>context<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;context<sp/>must<sp/>be<sp/>either<sp/>a<sp/>Context<sp/>object<sp/>or<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a72e22c4830016ae96b9079f1329fb02b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="94" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a232f71f2b67ac6d567d349a5ae249461" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a72e22c4830016ae96b9079f1329fb02b" kindref="member">_context</ref><sp/>=<sp/>context</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a232f71f2b67ac6d567d349a5ae249461" kindref="member">_grammar</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a650f73cead2a52ea698531a69a242d1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a650f73cead2a52ea698531a69a242d1e" kindref="member">__repr__</ref>(self):</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;%s(%s)&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self.__class__.__name__,<sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aa10ab7422e75da56283a4cc1c7da6985" kindref="member">_name</ref>)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Protected<sp/>attribute<sp/>access.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ab5401b17fbd0336bc78a3c066c5dd994" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/><sp/><sp/><sp/><sp/>=<sp/>property(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>self:<sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aa10ab7422e75da56283a4cc1c7da6985" kindref="member">_name</ref>,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;This<sp/>rule&apos;s<sp/>name.<sp/><sp/>(Read-only)&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="105" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ae6c1b3c23c33d24fb8439d4ab86b83aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>element<sp/><sp/>=<sp/>property(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>self:<sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5f244a7ccce70fbf7f2fa0fc26ebf5c5" kindref="member">_element</ref>,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;This<sp/>rule&apos;s<sp/>root<sp/>element.<sp/><sp/>(Read-only)&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="107" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a7af29ec6e071aaa4e25205ca312fdd72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>exported<sp/>=<sp/>property(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>self:<sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a9e1a66ec204cfc3e4ff43cfd26700c94" kindref="member">_exported</ref>,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;This<sp/>rule&apos;s<sp/>exported<sp/>status.<sp/>See&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>:ref:`RefObjectModelRulesExported`<sp/>for&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>more<sp/>info.<sp/><sp/>(Read-only)&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="111" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ae10a43239703a5932f08e712dd2416a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>imported<sp/>=<sp/>property(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>self:<sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1acc246f5f8cd4333fe5dfac1e24d8b131" kindref="member">_imported</ref>,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;This<sp/>rule&apos;s<sp/>imported<sp/>status.<sp/>See&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>:ref:`RefObjectModelRulesImported`<sp/>for&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>more<sp/>info.<sp/><sp/>(Read-only)&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="115" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aa4683441cd4d4ab5b779a47968523e57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>active<sp/><sp/><sp/>=<sp/>property(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>self:<sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5fa26e7246b883fc7e2fef8a32a931be" kindref="member">_active</ref>,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;This<sp/>rule&apos;s<sp/>active<sp/>state.<sp/><sp/>(Read-only)&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="117" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a242823b84443b08f3d27d79ec5d1bb98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>enabled<sp/><sp/>=<sp/>property(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>self:<sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1accac7d6feda0165d863fdfcdee7674fd" kindref="member">_enabled</ref>,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;This<sp/>rule&apos;s<sp/>enabled<sp/>state.<sp/>An<sp/>enabled<sp/>rule&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>active<sp/>when<sp/>its<sp/>context<sp/>matches,<sp/>a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>disabled<sp/>rule<sp/>is<sp/>never<sp/>active<sp/>regardless&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>of<sp/>context.<sp/><sp/>(Read-only)&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a9ec8b499154a709d7ddadb33f11c31b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a9ec8b499154a709d7ddadb33f11c31b0" kindref="member">enable</ref>(self):</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="125"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Enable<sp/>this<sp/>rule<sp/>so<sp/>that<sp/>it<sp/>is<sp/>active<sp/>to<sp/>receive</highlight></codeline>
<codeline lineno="126"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recognitions<sp/>when<sp/>its<sp/>context<sp/>matches.</highlight></codeline>
<codeline lineno="127"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="128"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1accac7d6feda0165d863fdfcdee7674fd" kindref="member">_enabled</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5436cd9a899ed82891f758df721ec6a6" kindref="member">activate</ref>()</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a6b035ec7557e6fb3e7323d56e9f156b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a6b035ec7557e6fb3e7323d56e9f156b4" kindref="member">disable</ref>(self):</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Disable<sp/>this<sp/>rule<sp/>so<sp/>that<sp/>it<sp/>is<sp/>never<sp/>active<sp/>to</highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>receive<sp/>recognitions,<sp/>regardless<sp/>of<sp/>whether<sp/>its<sp/>context</highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matches<sp/>or<sp/>not.</highlight></codeline>
<codeline lineno="137"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="138"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1accac7d6feda0165d863fdfcdee7674fd" kindref="member">_enabled</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5fa26e7246b883fc7e2fef8a32a931be" kindref="member">_active</ref>:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a4182eda5b94f8094902ad609450ee11f" kindref="member">deactivate</ref>()</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a478b03a236aba8b50f2cf9ffe6119c69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a478b03a236aba8b50f2cf9ffe6119c69" kindref="member">_get_grammar</ref>(self):</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a232f71f2b67ac6d567d349a5ae249461" kindref="member">_grammar</ref></highlight></codeline>
<codeline lineno="145" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1afa435043469a44e51138758804b2f598" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1afa435043469a44e51138758804b2f598" kindref="member">_set_grammar</ref>(self,<sp/>grammar):</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a232f71f2b67ac6d567d349a5ae249461" kindref="member">_grammar</ref><sp/>=<sp/>grammar</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>self._grammar<sp/>is<sp/>None:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>self._grammar<sp/>=<sp/>grammar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>elif<sp/>grammar<sp/>is<sp/>None:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>self._grammar<sp/>=<sp/>None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>elif<sp/>grammar<sp/>!=<sp/>self._grammar:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>self._log.error(&quot;rule:<sp/>%s&quot;<sp/>%<sp/>self)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>raise<sp/>TypeError(&quot;The<sp/>grammar<sp/>object<sp/>a<sp/>Dragonfly<sp/>rule&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;<sp/>cannot<sp/>be<sp/>changed<sp/>after<sp/>it<sp/>has<sp/>been<sp/>set<sp/>(%s<sp/>!=<sp/>%s).&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>(grammar,<sp/>self._grammar))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a32ba29c3a4623ac9bce6009b7efc70ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>grammar<sp/>=<sp/>property(_get_grammar,<sp/>_set_grammar,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;This<sp/>rule&apos;s<sp/>grammar<sp/>object.<sp/><sp/>(Set<sp/>once)&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a7a6bda63736ee144f0e22f63185dbb1d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a7a6bda63736ee144f0e22f63185dbb1d" kindref="member">set_context</ref>(self,<sp/>context):</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="162"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Set<sp/>the<sp/>context<sp/>for<sp/>this<sp/>rule,<sp/>under<sp/>which<sp/>it<sp/>will<sp/>be<sp/>active<sp/>and</highlight></codeline>
<codeline lineno="163"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>receive<sp/>recognitions<sp/>if<sp/>it<sp/>is<sp/>also<sp/>enabled<sp/>and<sp/>its<sp/>grammar<sp/>is</highlight></codeline>
<codeline lineno="164"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>active.</highlight></codeline>
<codeline lineno="165"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="166"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>of<sp/>this<sp/>method<sp/>overwrites<sp/>any<sp/>previous<sp/>context.</highlight></codeline>
<codeline lineno="167"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="168"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Contexts<sp/>can<sp/>be<sp/>modified<sp/>at<sp/>any<sp/>time,<sp/>but<sp/>will<sp/>only<sp/>be<sp/>checked</highlight></codeline>
<codeline lineno="169"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>:meth:`process_begin`<sp/>is<sp/>called.</highlight></codeline>
<codeline lineno="170"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="171"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>context:<sp/>context<sp/>within<sp/>which<sp/>to<sp/>be<sp/>active.<sp/><sp/>If<sp/>*None*,</highlight></codeline>
<codeline lineno="172"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>rule<sp/>will<sp/>be<sp/>active<sp/>when<sp/>its<sp/>grammar<sp/>is.</highlight></codeline>
<codeline lineno="173"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>context:<sp/>Context|None</highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>(isinstance(context,<sp/>Context)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>context<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;context<sp/>must<sp/>be<sp/>either<sp/>a<sp/>Context<sp/>object<sp/>or<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a72e22c4830016ae96b9079f1329fb02b" kindref="member">_context</ref><sp/>=<sp/>context</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ad62260e38a81f9c556a10e843ab003ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>context<sp/>=<sp/>property(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>self:<sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a72e22c4830016ae96b9079f1329fb02b" kindref="member">_context</ref>,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;This<sp/>rule&apos;s<sp/>context,<sp/>under<sp/>which<sp/>it<sp/>will<sp/>be<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;active<sp/>and<sp/>receive<sp/>recognitions<sp/>if<sp/>it<sp/>is<sp/>also<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;enabled<sp/>and<sp/>its<sp/>grammar<sp/>is<sp/>active.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Internal<sp/>methods<sp/>for<sp/>controlling<sp/>a<sp/>rules<sp/>active<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a670d76c19e2f0f59349bc01f983adf24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a670d76c19e2f0f59349bc01f983adf24" kindref="member">process_begin</ref>(self,<sp/>executable,<sp/>title,<sp/>handle):</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="189"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Start<sp/>of<sp/>phrase<sp/>callback.</highlight></codeline>
<codeline lineno="190"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="191"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/>is<sp/>called<sp/>when<sp/>the<sp/>speech<sp/>recognition</highlight></codeline>
<codeline lineno="192"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>engine<sp/>detects<sp/>that<sp/>the<sp/>user<sp/>has<sp/>begun<sp/>to<sp/>speak<sp/>a</highlight></codeline>
<codeline lineno="193"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phrase.<sp/><sp/>It<sp/>is<sp/>called<sp/>by<sp/>the<sp/>rule&apos;s<sp/>containing<sp/>grammar</highlight></codeline>
<codeline lineno="194"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>the<sp/>grammar<sp/>and<sp/>this<sp/>rule<sp/>are<sp/>active.</highlight></codeline>
<codeline lineno="195"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>default<sp/>implementation<sp/>of<sp/>this<sp/>method<sp/>checks</highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>whether<sp/>this<sp/>rule&apos;s<sp/>context<sp/>matches,<sp/>and<sp/>if<sp/>it<sp/>does</highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>method<sp/>calls</highlight></codeline>
<codeline lineno="199"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:meth:`._process_begin`.</highlight></codeline>
<codeline lineno="200"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="201"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arguments:</highlight></codeline>
<codeline lineno="202"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*executable*<sp/>--<sp/>the<sp/>full<sp/>path<sp/>to<sp/>the<sp/>module<sp/>whose</highlight></codeline>
<codeline lineno="203"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window<sp/>is<sp/>currently<sp/>in<sp/>the<sp/>foreground</highlight></codeline>
<codeline lineno="204"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*title*<sp/>--<sp/>window<sp/>title<sp/>of<sp/>the<sp/>foreground<sp/>window</highlight></codeline>
<codeline lineno="205"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*handle*<sp/>--<sp/>window<sp/>handle<sp/>to<sp/>the<sp/>foreground<sp/>window</highlight></codeline>
<codeline lineno="206"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="207"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a32ba29c3a4623ac9bce6009b7efc70ce" kindref="member">grammar</ref>:</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classdragonfly_1_1error_1_1GrammarError" kindref="compound">GrammarError</ref>(</highlight><highlight class="stringliteral">&quot;A<sp/>Dragonfly<sp/>rule<sp/>cannot<sp/>be<sp/>processed<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;before<sp/>it<sp/>is<sp/>bound<sp/>to<sp/>a<sp/>grammar.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1accac7d6feda0165d863fdfcdee7674fd" kindref="member">_enabled</ref>:</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5fa26e7246b883fc7e2fef8a32a931be" kindref="member">_active</ref>:</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a4182eda5b94f8094902ad609450ee11f" kindref="member">deactivate</ref>()</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a72e22c4830016ae96b9079f1329fb02b" kindref="member">_context</ref>:</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a72e22c4830016ae96b9079f1329fb02b" kindref="member">_context</ref>.matches(executable,<sp/>title,<sp/>handle):</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5fa26e7246b883fc7e2fef8a32a931be" kindref="member">_active</ref>:</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5436cd9a899ed82891f758df721ec6a6" kindref="member">activate</ref>()</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aee4c3167defe093caa2f816d0bac44c4" kindref="member">_process_begin</ref>()</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5fa26e7246b883fc7e2fef8a32a931be" kindref="member">_active</ref>:</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a4182eda5b94f8094902ad609450ee11f" kindref="member">deactivate</ref>()</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5fa26e7246b883fc7e2fef8a32a931be" kindref="member">_active</ref>:</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5436cd9a899ed82891f758df721ec6a6" kindref="member">activate</ref>()</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aee4c3167defe093caa2f816d0bac44c4" kindref="member">_process_begin</ref>()</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5436cd9a899ed82891f758df721ec6a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5436cd9a899ed82891f758df721ec6a6" kindref="member">activate</ref>(self,<sp/>force=False):</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a232f71f2b67ac6d567d349a5ae249461" kindref="member">_grammar</ref>:</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classdragonfly_1_1error_1_1GrammarError" kindref="compound">GrammarError</ref>(</highlight><highlight class="stringliteral">&quot;A<sp/>Dragonfly<sp/>rule<sp/>cannot<sp/>be<sp/>activated<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;before<sp/>it<sp/>is<sp/>bound<sp/>to<sp/>a<sp/>grammar.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1accac7d6feda0165d863fdfcdee7674fd" kindref="member">_enabled</ref>:</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5fa26e7246b883fc7e2fef8a32a931be" kindref="member">_active</ref>:</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a4182eda5b94f8094902ad609450ee11f" kindref="member">deactivate</ref>()</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5fa26e7246b883fc7e2fef8a32a931be" kindref="member">_active</ref><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>force:</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a232f71f2b67ac6d567d349a5ae249461" kindref="member">_grammar</ref>.activate_rule(self)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5fa26e7246b883fc7e2fef8a32a931be" kindref="member">_active</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a4182eda5b94f8094902ad609450ee11f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a4182eda5b94f8094902ad609450ee11f" kindref="member">deactivate</ref>(self):</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a232f71f2b67ac6d567d349a5ae249461" kindref="member">_grammar</ref>:</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classdragonfly_1_1error_1_1GrammarError" kindref="compound">GrammarError</ref>(</highlight><highlight class="stringliteral">&quot;A<sp/>Dragonfly<sp/>rule<sp/>cannot<sp/>be<sp/>deactivated<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;before<sp/>it<sp/>is<sp/>bound<sp/>to<sp/>a<sp/>grammar.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5fa26e7246b883fc7e2fef8a32a931be" kindref="member">_active</ref>:</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a232f71f2b67ac6d567d349a5ae249461" kindref="member">_grammar</ref>.deactivate_rule(self)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a75fdcef87114b992f3ba76c3ec19c12e" kindref="member">_log</ref>.warning(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>deactivate<sp/>rule:<sp/>%s<sp/>(%s)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self,<sp/>e)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5fa26e7246b883fc7e2fef8a32a931be" kindref="member">_active</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compilation<sp/>related<sp/>methods.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aeac96c1300b6a1ba64ef5faf23a859a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aeac96c1300b6a1ba64ef5faf23a859a2" kindref="member">gstring</ref>(self):</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&lt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ab5401b17fbd0336bc78a3c066c5dd994" kindref="member">name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ae10a43239703a5932f08e712dd2416a7" kindref="member">imported</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>imported;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a7af29ec6e071aaa4e25205ca312fdd72" kindref="member">exported</ref>:<sp/>s<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>exported&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ae6c1b3c23c33d24fb8439d4ab86b83aa" kindref="member">element</ref>.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aeac96c1300b6a1ba64ef5faf23a859a2" kindref="member">gstring</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a9c1ad9ae6e3df632c27026df085975bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a9c1ad9ae6e3df632c27026df085975bf" kindref="member">dependencies</ref>(self,<sp/>memo):</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aa10ab7422e75da56283a4cc1c7da6985" kindref="member">_name</ref><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>memo:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memo.add(self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aa10ab7422e75da56283a4cc1c7da6985" kindref="member">_name</ref>)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5f244a7ccce70fbf7f2fa0fc26ebf5c5" kindref="member">_element</ref>:</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5f244a7ccce70fbf7f2fa0fc26ebf5c5" kindref="member">_element</ref>.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a9c1ad9ae6e3df632c27026df085975bf" kindref="member">dependencies</ref>(memo)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Methods<sp/>for<sp/>decoding<sp/>and<sp/>evaluating<sp/>recognitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ac0b4fbdf1d22cd5e22f76cd73d9e6d3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ac0b4fbdf1d22cd5e22f76cd73d9e6d3a" kindref="member">decode</ref>(self,<sp/>state):</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_attempt(self)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>result<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5f244a7ccce70fbf7f2fa0fc26ebf5c5" kindref="member">_element</ref>.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ac0b4fbdf1d22cd5e22f76cd73d9e6d3a" kindref="member">decode</ref>(state):</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_success(self)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>state</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_retry(self)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.decode_failure(self)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ae7687e1ba3425cdd449733f726595961" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ae7687e1ba3425cdd449733f726595961" kindref="member">value</ref>(self,<sp/>node):</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="286"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Start<sp/>of<sp/>phrase<sp/>callback.</highlight></codeline>
<codeline lineno="287"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="288"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/>is<sp/>called<sp/>to<sp/>obtain<sp/>the<sp/>semantic<sp/>value<sp/>associated</highlight></codeline>
<codeline lineno="289"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>a<sp/>particular<sp/>recognition.<sp/><sp/>It<sp/>could<sp/>be<sp/>called<sp/>from</highlight></codeline>
<codeline lineno="290"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>another<sp/>rule&apos;s<sp/>:meth:`.value`<sp/>if</highlight></codeline>
<codeline lineno="291"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>rule<sp/>references<sp/>this<sp/>rule.<sp/><sp/>If<sp/>also<sp/>be<sp/>called<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="292"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rule&apos;s<sp/>:meth:`.process_recognition`</highlight></codeline>
<codeline lineno="293"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>that<sp/>method<sp/>has<sp/>been<sp/>overridden<sp/>to<sp/>do<sp/>so<sp/>in<sp/>a<sp/>derived</highlight></codeline>
<codeline lineno="294"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class.</highlight></codeline>
<codeline lineno="295"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="296"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>default<sp/>implementation<sp/>of<sp/>this<sp/>method<sp/>returns<sp/>the<sp/>value<sp/>of</highlight></codeline>
<codeline lineno="297"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>rule&apos;s<sp/>root<sp/>element.</highlight></codeline>
<codeline lineno="298"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="299"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>..<sp/>note::</highlight></codeline>
<codeline lineno="300"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="301"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>generally<sp/>the<sp/>method<sp/>which<sp/>developers<sp/>should</highlight></codeline>
<codeline lineno="302"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>override<sp/>in<sp/>derived<sp/>rule<sp/>classes<sp/>to<sp/>change<sp/>the<sp/>default</highlight></codeline>
<codeline lineno="303"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>semantic<sp/>value<sp/>of<sp/>a<sp/>recognized<sp/>rule.</highlight></codeline>
<codeline lineno="304"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="305"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node.children[0].<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ae7687e1ba3425cdd449733f726595961" kindref="member">value</ref>()</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Methods<sp/>for<sp/>processing<sp/>before-and-after<sp/>utterances.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aee4c3167defe093caa2f816d0bac44c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aee4c3167defe093caa2f816d0bac44c4" kindref="member">_process_begin</ref>(self):</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="313"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Start<sp/>of<sp/>phrase<sp/>detection<sp/>callback.</highlight></codeline>
<codeline lineno="314"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="315"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/>is<sp/>called<sp/>when<sp/>the<sp/>speech<sp/>recognition</highlight></codeline>
<codeline lineno="316"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>engine<sp/>detects<sp/>that<sp/>the<sp/>user<sp/>has<sp/>begun<sp/>to<sp/>speak<sp/>a</highlight></codeline>
<codeline lineno="317"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phrase.<sp/><sp/>It<sp/>is<sp/>called<sp/>by<sp/>this<sp/>rule&apos;s</highlight></codeline>
<codeline lineno="318"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:meth:`.process_begin`</highlight></codeline>
<codeline lineno="319"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>after<sp/>some<sp/>context<sp/>checks.</highlight></codeline>
<codeline lineno="320"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="321"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>default<sp/>implementation<sp/>of<sp/>this<sp/>method<sp/>does<sp/>nothing.</highlight></codeline>
<codeline lineno="322"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="323"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>..<sp/>note::</highlight></codeline>
<codeline lineno="324"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="325"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>generally<sp/>the<sp/>method<sp/>which<sp/>developers<sp/>should</highlight></codeline>
<codeline lineno="326"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>override<sp/>in<sp/>derived<sp/>rule<sp/>classes<sp/>to<sp/>give<sp/>them<sp/>custom</highlight></codeline>
<codeline lineno="327"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functionality<sp/>when<sp/>the<sp/>start<sp/>of<sp/>a<sp/>phrase<sp/>is<sp/>detected.</highlight></codeline>
<codeline lineno="328"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="329"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1af25b9727d10e38f7db3f42f433f59320" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1af25b9727d10e38f7db3f42f433f59320" kindref="member">process_results</ref>(self,<sp/>data):</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aa5b6bf0ae12ca48d6ad901c1d8e68b8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aa5b6bf0ae12ca48d6ad901c1d8e68b8a" kindref="member">process_recognition</ref>(self,<sp/>node):</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="336"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rule<sp/>recognition<sp/>callback.</highlight></codeline>
<codeline lineno="337"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="338"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/>is<sp/>called<sp/>when<sp/>the<sp/>user<sp/>has<sp/>spoken<sp/>words<sp/>matching</highlight></codeline>
<codeline lineno="339"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>rule&apos;s<sp/>contents.<sp/><sp/>This<sp/>method<sp/>is<sp/>called<sp/>only<sp/>once<sp/>for</highlight></codeline>
<codeline lineno="340"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>each<sp/>recognition,<sp/>and<sp/>only<sp/>for<sp/>the<sp/>matching<sp/>top-level<sp/>rule.</highlight></codeline>
<codeline lineno="341"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="342"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>default<sp/>implementation<sp/>of<sp/>this<sp/>method<sp/>does<sp/>nothing.</highlight></codeline>
<codeline lineno="343"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="344"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>..<sp/>note::</highlight></codeline>
<codeline lineno="345"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="346"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>generally<sp/>the<sp/>method<sp/>which<sp/>developers<sp/>should</highlight></codeline>
<codeline lineno="347"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>override<sp/>in<sp/>derived<sp/>rule<sp/>classes<sp/>to<sp/>give<sp/>them<sp/>custom</highlight></codeline>
<codeline lineno="348"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functionality<sp/>when<sp/>a<sp/>top-level<sp/>rule<sp/>is<sp/>recognized.</highlight></codeline>
<codeline lineno="349"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="350"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="classdragonfly_1_1grammar_1_1rule__base_1_1ImportedRule" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImportedRule(<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule" kindref="compound">Rule</ref>):</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="classdragonfly_1_1grammar_1_1rule__base_1_1ImportedRule_1a12aaf26f19e17027734aae8b23704eab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1ImportedRule_1a12aaf26f19e17027734aae8b23704eab" kindref="member">__init__</ref>(self,<sp/>name):</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rule.__init__(self)</highlight></codeline>
<codeline lineno="357" refid="classdragonfly_1_1grammar_1_1rule__base_1_1ImportedRule_1ad967ec4685fe0fa72659974b8a3729b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aa10ab7422e75da56283a4cc1c7da6985" kindref="member">_name</ref><sp/>=<sp/>name</highlight></codeline>
<codeline lineno="358" refid="classdragonfly_1_1grammar_1_1rule__base_1_1ImportedRule_1a64ecd5e8f02194242e3b9f551b98ca9f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1acc246f5f8cd4333fe5dfac1e24d8b131" kindref="member">_imported</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359" refid="classdragonfly_1_1grammar_1_1rule__base_1_1ImportedRule_1a8857046b7ef4bbd01a8f56723473289a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a9e1a66ec204cfc3e4ff43cfd26700c94" kindref="member">_exported</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="classdragonfly_1_1grammar_1_1rule__base_1_1ImportedRule_1a6407e2aa4f422594a76adc273e387b40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5fa26e7246b883fc7e2fef8a32a931be" kindref="member">_active</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="classdragonfly_1_1grammar_1_1rule__base_1_1ImportedRule_1a03773e3c4564550080005973876195ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a232f71f2b67ac6d567d349a5ae249461" kindref="member">_grammar</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compilation<sp/>related<sp/>methods.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="classdragonfly_1_1grammar_1_1rule__base_1_1ImportedRule_1a743e7790abe69456bb7c5756d474fe6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1ImportedRule_1a743e7790abe69456bb7c5756d474fe6a" kindref="member">dependencies</ref>(self,<sp/>memo):</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>()</highlight></codeline>
    </programlisting>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_base.py"/>
  </compounddef>
</doxygen>
