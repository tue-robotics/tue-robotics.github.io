<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::test::test_rpc::RPCTestCase</compoundname>
    <basecompoundref prot="public" virt="non-virtual">TestCase</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1a88c4b9dd8d263d33662edc77eaf4a873" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.test.test_rpc.RPCTestCase::current_response</definition>
        <argsstring></argsstring>
        <name>current_response</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" line="47" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1a314b075f910ecdbf0f0d8d625f908b20" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.test.test_rpc.RPCTestCase::server</definition>
        <argsstring></argsstring>
        <name>server</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" line="50" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1aa309f8cc1f4b45df9328052e7313e25a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.test_rpc.RPCTestCase.send_request</definition>
        <argsstring>(self, method, params, id=0)</argsstring>
        <name>send_request</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>method</type>
          <defname>method</defname>
        </param>
        <param>
          <type>params</type>
          <defname>params</defname>
        </param>
        <param>
          <type>id</type>
          <defname>id</defname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" line="75" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" bodystart="75" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1af1d67d1bd4f24112b1f83f6a8f56ebce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.test_rpc.RPCTestCase.setUpClass</definition>
        <argsstring>(cls)</argsstring>
        <name>setUpClass</name>
        <param>
          <type>cls</type>
          <defname>cls</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" line="46" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" bodystart="46" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1ad0cb8638f6b46e0167e6281216bdefe1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.test_rpc.RPCTestCase.tearDownClass</definition>
        <argsstring>(cls)</argsstring>
        <name>tearDownClass</name>
        <param>
          <type>cls</type>
          <defname>cls</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" line="54" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1a7c21a59899d808e2e358b183a799f57a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.test_rpc.RPCTestCase.test_add_method</definition>
        <argsstring>(self)</argsstring>
        <name>test_add_method</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Verify that RPC methods can be added and replaced.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" line="86" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" bodystart="86" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1a76c54a507a16a7798e858f2e17fcde01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.test_rpc.RPCTestCase.test_errors</definition>
        <argsstring>(self)</argsstring>
        <name>test_errors</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Verify that the server handles errors from RPC methods. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" line="115" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" bodystart="115" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1a229eeab0c85a2a5b1b7aa8e66cd65843" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.test_rpc.RPCTestCase.test_get_engine_language</definition>
        <argsstring>(self)</argsstring>
        <name>test_get_engine_language</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Verify that the &apos;speak&apos; RPC method works correctly. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" line="268" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" bodystart="268" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1a7ea857eab4a98bc0dcb05d9b6f1c90a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.test_rpc.RPCTestCase.test_list_grammars</definition>
        <argsstring>(self)</argsstring>
        <name>test_list_grammars</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Verify that the &apos;list_grammars&apos; RPC method works correctly. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" line="207" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" bodystart="207" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1af37a48bfb56e7e90cc34e6163a7f5d7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.test_rpc.RPCTestCase.test_mimic</definition>
        <argsstring>(self)</argsstring>
        <name>test_mimic</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Verify that the &apos;mimic&apos; RPC method works correctly. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" line="242" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" bodystart="242" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1a745ec24d6c6bcbd4c63c734aa6328923" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.test_rpc.RPCTestCase.test_recognition_history_methods</definition>
        <argsstring>(self)</argsstring>
        <name>test_recognition_history_methods</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Verify that the recognition history RPC methods work correctly.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" line="274" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" bodystart="274" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1acfb31242e885f2bb11c8e1e2af4eb6cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.test_rpc.RPCTestCase.test_remove_method</definition>
        <argsstring>(self)</argsstring>
        <name>test_remove_method</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Verify that RPC methods can be removed.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" line="97" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" bodystart="97" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1a87946f915aa562ce1e6b41c08eea35f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.test_rpc.RPCTestCase.test_security_tokens</definition>
        <argsstring>(self)</argsstring>
        <name>test_security_tokens</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Verify that security tokens must match for RPC execution to occur.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" line="136" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" bodystart="136" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1a8d8ae86980ba317c65f19cb185a06de2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.test_rpc.RPCTestCase.test_speak</definition>
        <argsstring>(self)</argsstring>
        <name>test_speak</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" line="263" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" bodystart="263" bodyend="267"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1a1978820532f8ce08ecac15a89e9869e4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.test_rpc.RPCTestCase._send_request</definition>
        <argsstring>(self, request_function)</argsstring>
        <name>_send_request</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>request_function</type>
          <defname>request_function</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" line="57" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" bodystart="57" bodyend="74"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Tests for RPC server methods.
</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dragonfly.test.test_rpc.RPCTestCase</label>
        <link refid="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>TestCase</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>dragonfly.test.test_rpc.RPCTestCase</label>
        <link refid="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>TestCase</label>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" line="40" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_rpc.py" bodystart="40" bodyend="313"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1a1978820532f8ce08ecac15a89e9869e4" prot="private" virt="non-virtual"><scope>dragonfly::test::test_rpc::RPCTestCase</scope><name>_send_request</name></member>
      <member refid="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1a88c4b9dd8d263d33662edc77eaf4a873" prot="public" virt="non-virtual"><scope>dragonfly::test::test_rpc::RPCTestCase</scope><name>current_response</name></member>
      <member refid="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1aa309f8cc1f4b45df9328052e7313e25a" prot="public" virt="non-virtual"><scope>dragonfly::test::test_rpc::RPCTestCase</scope><name>send_request</name></member>
      <member refid="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1a314b075f910ecdbf0f0d8d625f908b20" prot="public" virt="non-virtual"><scope>dragonfly::test::test_rpc::RPCTestCase</scope><name>server</name></member>
      <member refid="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1af1d67d1bd4f24112b1f83f6a8f56ebce" prot="public" virt="non-virtual"><scope>dragonfly::test::test_rpc::RPCTestCase</scope><name>setUpClass</name></member>
      <member refid="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1ad0cb8638f6b46e0167e6281216bdefe1" prot="public" virt="non-virtual"><scope>dragonfly::test::test_rpc::RPCTestCase</scope><name>tearDownClass</name></member>
      <member refid="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1a7c21a59899d808e2e358b183a799f57a" prot="public" virt="non-virtual"><scope>dragonfly::test::test_rpc::RPCTestCase</scope><name>test_add_method</name></member>
      <member refid="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1a76c54a507a16a7798e858f2e17fcde01" prot="public" virt="non-virtual"><scope>dragonfly::test::test_rpc::RPCTestCase</scope><name>test_errors</name></member>
      <member refid="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1a229eeab0c85a2a5b1b7aa8e66cd65843" prot="public" virt="non-virtual"><scope>dragonfly::test::test_rpc::RPCTestCase</scope><name>test_get_engine_language</name></member>
      <member refid="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1a7ea857eab4a98bc0dcb05d9b6f1c90a6" prot="public" virt="non-virtual"><scope>dragonfly::test::test_rpc::RPCTestCase</scope><name>test_list_grammars</name></member>
      <member refid="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1af37a48bfb56e7e90cc34e6163a7f5d7d" prot="public" virt="non-virtual"><scope>dragonfly::test::test_rpc::RPCTestCase</scope><name>test_mimic</name></member>
      <member refid="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1a745ec24d6c6bcbd4c63c734aa6328923" prot="public" virt="non-virtual"><scope>dragonfly::test::test_rpc::RPCTestCase</scope><name>test_recognition_history_methods</name></member>
      <member refid="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1acfb31242e885f2bb11c8e1e2af4eb6cf" prot="public" virt="non-virtual"><scope>dragonfly::test::test_rpc::RPCTestCase</scope><name>test_remove_method</name></member>
      <member refid="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1a87946f915aa562ce1e6b41c08eea35f6" prot="public" virt="non-virtual"><scope>dragonfly::test::test_rpc::RPCTestCase</scope><name>test_security_tokens</name></member>
      <member refid="classdragonfly_1_1test_1_1test__rpc_1_1RPCTestCase_1a8d8ae86980ba317c65f19cb185a06de2" prot="public" virt="non-virtual"><scope>dragonfly::test::test_rpc::RPCTestCase</scope><name>test_speak</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
