<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1actions_1_1keyboard_1_1__win32_1_1Win32Keyboard" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::actions::keyboard::_win32::Win32Keyboard</compoundname>
    <basecompoundref refid="classdragonfly_1_1actions_1_1keyboard_1_1__base_1_1BaseKeyboard" prot="public" virt="non-virtual">dragonfly.actions.keyboard._base.BaseKeyboard</basecompoundref>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1actions_1_1keyboard_1_1__win32_1_1Win32Keyboard_1a8679974f6c8ac3529938e06ba6cc131c" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>dragonfly.actions.keyboard._win32.Win32Keyboard::alt_code</definition>
        <argsstring></argsstring>
        <name>alt_code</name>
        <initializer>=  win32con.VK_MENU</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/keyboard/_win32.py" line="239" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/keyboard/_win32.py" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1actions_1_1keyboard_1_1__win32_1_1Win32Keyboard_1a4790e2075f00658a5665fed7592e2cf7" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>dragonfly.actions.keyboard._win32.Win32Keyboard::ctrl_code</definition>
        <argsstring></argsstring>
        <name>ctrl_code</name>
        <initializer>=  win32con.VK_CONTROL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/keyboard/_win32.py" line="238" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/keyboard/_win32.py" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1actions_1_1keyboard_1_1__win32_1_1Win32Keyboard_1aa476dbe2392fd09413c65da1786cde25" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>dragonfly.actions.keyboard._win32.Win32Keyboard::shift_code</definition>
        <argsstring></argsstring>
        <name>shift_code</name>
        <initializer>=  win32con.VK_SHIFT</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/keyboard/_win32.py" line="237" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/keyboard/_win32.py" bodystart="237" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1actions_1_1keyboard_1_1__win32_1_1Win32Keyboard_1aea0615e6f5852053992f355b3a2c75c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.actions.keyboard._win32.Win32Keyboard.get_current_layout</definition>
        <argsstring>(cls)</argsstring>
        <name>get_current_layout</name>
        <param>
          <type>cls</type>
          <defname>cls</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/keyboard/_win32.py" line="242" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/keyboard/_win32.py" bodystart="242" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1actions_1_1keyboard_1_1__win32_1_1Win32Keyboard_1ad8b8a4d9652362e6e0dc16235e22394e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.actions.keyboard._win32.Win32Keyboard.get_keycode_and_modifiers</definition>
        <argsstring>(cls, char, char_vk_fallback=True)</argsstring>
        <name>get_keycode_and_modifiers</name>
        <param>
          <type>cls</type>
          <defname>cls</defname>
        </param>
        <param>
          <type>char</type>
          <defname>char</defname>
        </param>
        <param>
          <type>char_vk_fallback</type>
          <defname>char_vk_fallback</defname>
          <defval>True</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/keyboard/_win32.py" line="333" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/keyboard/_win32.py" bodystart="333" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1actions_1_1keyboard_1_1__win32_1_1Win32Keyboard_1a86eba2ee1dac636997db4853bce1fe00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.actions.keyboard._win32.Win32Keyboard.get_typeable</definition>
        <argsstring>(cls, char, is_text=False)</argsstring>
        <name>get_typeable</name>
        <reimplements refid="classdragonfly_1_1actions_1_1keyboard_1_1__base_1_1BaseKeyboard_1a94acb99db7137f75ba68bc0e13600265">get_typeable</reimplements>
        <param>
          <type>cls</type>
          <defname>cls</defname>
        </param>
        <param>
          <type>char</type>
          <defname>char</defname>
        </param>
        <param>
          <type>is_text</type>
          <defname>is_text</defname>
          <defval>False</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Get a Typeable object. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/keyboard/_win32.py" line="345" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/keyboard/_win32.py" bodystart="345" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1actions_1_1keyboard_1_1__win32_1_1Win32Keyboard_1a213c040f9941774cc4d24e20d8ac646b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.actions.keyboard._win32.Win32Keyboard.send_keyboard_events</definition>
        <argsstring>(cls, events)</argsstring>
        <name>send_keyboard_events</name>
        <reimplements refid="classdragonfly_1_1actions_1_1keyboard_1_1__base_1_1BaseKeyboard_1a5496c90e974326ac403045042b4ef261">send_keyboard_events</reimplements>
        <param>
          <type>cls</type>
          <defname>cls</defname>
        </param>
        <param>
          <type>events</type>
          <defname>events</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Send a sequence of keyboard events.

Positional arguments:
events -- a sequence of tuples of the form
    (keycode, down, timeout), where
keycode (int): Win32 Virtual Key code.
down (boolean): True means the key will be pressed down,
    False means the key will be released.
timeout (int): number of seconds to sleep after
    the keyboard event.
    or
    (character, down, timeout, is_text), where
character (str): Unicode character.
down (boolean): True means the key will be pressed down,
    False means the key will be released.
timeout (int): number of seconds to sleep after
    the keyboard event.
is_text (boolean): True means that the keypress is targeted
    at a window or control that accepts Unicode text.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/keyboard/_win32.py" line="250" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/keyboard/_win32.py" bodystart="250" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1actions_1_1keyboard_1_1__win32_1_1Win32Keyboard_1ac6047c62f717a2c080c9bf8823ac3480" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.actions.keyboard._win32.Win32Keyboard.xget_virtual_keycode</definition>
        <argsstring>(cls, char, char_vk_fallback=True)</argsstring>
        <name>xget_virtual_keycode</name>
        <param>
          <type>cls</type>
          <defname>cls</defname>
        </param>
        <param>
          <type>char</type>
          <defname>char</defname>
        </param>
        <param>
          <type>char_vk_fallback</type>
          <defname>char_vk_fallback</defname>
          <defval>True</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/keyboard/_win32.py" line="322" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/keyboard/_win32.py" bodystart="322" bodyend="331"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdragonfly_1_1actions_1_1keyboard_1_1__win32_1_1Win32Keyboard_1a76a182c88f7b04c20daa03a504fbf386" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.actions.keyboard._win32.Win32Keyboard._get_initial_keycode</definition>
        <argsstring>(cls, char, char_vk_fallback=True)</argsstring>
        <name>_get_initial_keycode</name>
        <param>
          <type>cls</type>
          <defname>cls</defname>
        </param>
        <param>
          <type>char</type>
          <defname>char</defname>
        </param>
        <param>
          <type>char_vk_fallback</type>
          <defname>char_vk_fallback</defname>
          <defval>True</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/keyboard/_win32.py" line="301" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/keyboard/_win32.py" bodystart="301" bodyend="320"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Static class wrapper around SendInput.</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>object</label>
      </node>
      <node id="2">
        <label>dragonfly.actions.keyboard._base.BaseKeyboard</label>
        <link refid="classdragonfly_1_1actions_1_1keyboard_1_1__base_1_1BaseKeyboard"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>dragonfly.actions.keyboard._win32.Win32Keyboard</label>
        <link refid="classdragonfly_1_1actions_1_1keyboard_1_1__win32_1_1Win32Keyboard"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>object</label>
      </node>
      <node id="2">
        <label>dragonfly.actions.keyboard._base.BaseKeyboard</label>
        <link refid="classdragonfly_1_1actions_1_1keyboard_1_1__base_1_1BaseKeyboard"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>dragonfly.actions.keyboard._win32.Win32Keyboard</label>
        <link refid="classdragonfly_1_1actions_1_1keyboard_1_1__win32_1_1Win32Keyboard"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/keyboard/_win32.py" line="234" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/keyboard/_win32.py" bodystart="234" bodyend="354"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1actions_1_1keyboard_1_1__win32_1_1Win32Keyboard_1a76a182c88f7b04c20daa03a504fbf386" prot="private" virt="non-virtual"><scope>dragonfly::actions::keyboard::_win32::Win32Keyboard</scope><name>_get_initial_keycode</name></member>
      <member refid="classdragonfly_1_1actions_1_1keyboard_1_1__base_1_1BaseKeyboard_1a92d064f15ee808faed3126f722637aad" prot="private" virt="non-virtual"><scope>dragonfly::actions::keyboard::_win32::Win32Keyboard</scope><name>_log</name></member>
      <member refid="classdragonfly_1_1actions_1_1keyboard_1_1__win32_1_1Win32Keyboard_1a8679974f6c8ac3529938e06ba6cc131c" prot="public" virt="non-virtual"><scope>dragonfly::actions::keyboard::_win32::Win32Keyboard</scope><name>alt_code</name></member>
      <member refid="classdragonfly_1_1actions_1_1keyboard_1_1__win32_1_1Win32Keyboard_1a4790e2075f00658a5665fed7592e2cf7" prot="public" virt="non-virtual"><scope>dragonfly::actions::keyboard::_win32::Win32Keyboard</scope><name>ctrl_code</name></member>
      <member refid="classdragonfly_1_1actions_1_1keyboard_1_1__win32_1_1Win32Keyboard_1aea0615e6f5852053992f355b3a2c75c6" prot="public" virt="non-virtual"><scope>dragonfly::actions::keyboard::_win32::Win32Keyboard</scope><name>get_current_layout</name></member>
      <member refid="classdragonfly_1_1actions_1_1keyboard_1_1__win32_1_1Win32Keyboard_1ad8b8a4d9652362e6e0dc16235e22394e" prot="public" virt="non-virtual"><scope>dragonfly::actions::keyboard::_win32::Win32Keyboard</scope><name>get_keycode_and_modifiers</name></member>
      <member refid="classdragonfly_1_1actions_1_1keyboard_1_1__win32_1_1Win32Keyboard_1a86eba2ee1dac636997db4853bce1fe00" prot="public" virt="non-virtual"><scope>dragonfly::actions::keyboard::_win32::Win32Keyboard</scope><name>get_typeable</name></member>
      <member refid="classdragonfly_1_1actions_1_1keyboard_1_1__win32_1_1Win32Keyboard_1a213c040f9941774cc4d24e20d8ac646b" prot="public" virt="non-virtual"><scope>dragonfly::actions::keyboard::_win32::Win32Keyboard</scope><name>send_keyboard_events</name></member>
      <member refid="classdragonfly_1_1actions_1_1keyboard_1_1__win32_1_1Win32Keyboard_1aa476dbe2392fd09413c65da1786cde25" prot="public" virt="non-virtual"><scope>dragonfly::actions::keyboard::_win32::Win32Keyboard</scope><name>shift_code</name></member>
      <member refid="classdragonfly_1_1actions_1_1keyboard_1_1__win32_1_1Win32Keyboard_1ac6047c62f717a2c080c9bf8823ac3480" prot="public" virt="non-virtual"><scope>dragonfly::actions::keyboard::_win32::Win32Keyboard</scope><name>xget_virtual_keycode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
