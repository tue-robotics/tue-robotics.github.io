<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1grammar_1_1context_1_1Context" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::grammar::context::Context</compoundname>
    <basecompoundref prot="public" virt="non-virtual">object</basecompoundref>
    <derivedcompoundref refid="classdragonfly_1_1grammar_1_1context_1_1AppContext" prot="public" virt="non-virtual">dragonfly.grammar.context.AppContext</derivedcompoundref>
    <derivedcompoundref refid="classdragonfly_1_1grammar_1_1context_1_1FuncContext" prot="public" virt="non-virtual">dragonfly.grammar.context.FuncContext</derivedcompoundref>
    <derivedcompoundref refid="classdragonfly_1_1grammar_1_1context_1_1LogicAndContext" prot="public" virt="non-virtual">dragonfly.grammar.context.LogicAndContext</derivedcompoundref>
    <derivedcompoundref refid="classdragonfly_1_1grammar_1_1context_1_1LogicNotContext" prot="public" virt="non-virtual">dragonfly.grammar.context.LogicNotContext</derivedcompoundref>
    <derivedcompoundref refid="classdragonfly_1_1grammar_1_1context_1_1LogicOrContext" prot="public" virt="non-virtual">dragonfly.grammar.context.LogicOrContext</derivedcompoundref>
    <derivedcompoundref refid="classdragonfly_1_1test_1_1infrastructure_1_1TestContext" prot="public" virt="non-virtual">dragonfly.test.infrastructure.TestContext</derivedcompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1context_1_1Context_1a1c45805ee6a280a09ea7f41b30627eab" prot="private" static="yes" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.context.Context::_log</definition>
        <argsstring></argsstring>
        <name>_log</name>
        <initializer>=  logging.getLogger(&quot;context.match&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" line="118" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1context_1_1Context_1aee89c812701a7622cb89cbbe81b70997" prot="private" static="yes" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.context.Context::_log_match</definition>
        <argsstring></argsstring>
        <name>_log_match</name>
        <initializer>=  <ref refid="classdragonfly_1_1grammar_1_1context_1_1Context_1a1c45805ee6a280a09ea7f41b30627eab" kindref="member">_log</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" line="119" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" bodystart="119" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1context_1_1Context_1af2798dd4a94ec5cbff8dc0d39c98f903" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.context.Context::_str</definition>
        <argsstring></argsstring>
        <name>_str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" line="125" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" bodystart="125" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1context_1_1Context_1a116d1723f457474e7b71dfa078158c24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.context.Context.__and__</definition>
        <argsstring>(self, other)</argsstring>
        <name>__and__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>other</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" line="136" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" bodystart="136" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1context_1_1Context_1abf7250a6563da475d20a639270f6ee0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.context.Context.__init__</definition>
        <argsstring>(self)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" line="124" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" bodystart="124" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1context_1_1Context_1afce9f1cfb551b64db7cc763890541053" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.context.Context.__invert__</definition>
        <argsstring>(self)</argsstring>
        <name>__invert__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" line="142" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" bodystart="142" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1context_1_1Context_1ae37d8a8b1d4b4d547305134d9a146cb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.context.Context.__or__</definition>
        <argsstring>(self, other)</argsstring>
        <name>__or__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>other</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" line="139" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" bodystart="139" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1context_1_1Context_1a249b0ea0c83c32fc75a415b5a3fcef54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.context.Context.__repr__</definition>
        <argsstring>(self)</argsstring>
        <name>__repr__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" line="127" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1context_1_1Context_1adcabeee25d6f44e9f761855d9744d716" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.context.Context.copy</definition>
        <argsstring>(self)</argsstring>
        <name>copy</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" line="130" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" bodystart="130" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1context_1_1Context_1a1dfdbfcc2b9e90e7b659599fc29bc26f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.context.Context.matches</definition>
        <argsstring>(self, executable, title, handle)</argsstring>
        <name>matches</name>
        <reimplementedby refid="classdragonfly_1_1test_1_1infrastructure_1_1TestContext_1a8ed7d806ffb0f6841a6b7129d1642c93">matches</reimplementedby>
        <reimplementedby refid="classdragonfly_1_1grammar_1_1context_1_1LogicAndContext_1a895a1f80900fc3b3e9b60823d95b9f26">matches</reimplementedby>
        <reimplementedby refid="classdragonfly_1_1grammar_1_1context_1_1LogicOrContext_1a8b466ce37167f916b1108c9a1bf20c28">matches</reimplementedby>
        <reimplementedby refid="classdragonfly_1_1grammar_1_1context_1_1LogicNotContext_1a951eb6b6a1a6a9a3c7cd98732412c346">matches</reimplementedby>
        <reimplementedby refid="classdragonfly_1_1grammar_1_1context_1_1AppContext_1af30176821cecf95b09107670eab0f53f">matches</reimplementedby>
        <reimplementedby refid="classdragonfly_1_1grammar_1_1context_1_1FuncContext_1ae8be50c17f403d1f673641b8c888aea4">matches</reimplementedby>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>executable</type>
          <defname>executable</defname>
        </param>
        <param>
          <type>title</type>
          <defname>title</defname>
        </param>
        <param>
          <type>handle</type>
          <defname>handle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Indicate whether the system is currently within this context.

    Arguments:
     - *executable* (*str*) --
       path name to the executable of the foreground application
     - *title* (*str*) -- title of the foreground window
     - *handle* (*int*) -- window handle to the foreground window

    The default implementation of this method simply returns *True*.

    .. note::

       This is generally the method which developers should
       overload to give derived context classes custom
       functionality.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" line="148" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" bodystart="148" bodyend="173"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>    Base class for other context classes.

    This base class implements some basic
    infrastructure, including what&apos;s required for
    logical operations on context objects.  Derived
    classes should at least do the following things:

     - During initialization, set *self._str* to some descriptive,
       human readable value.  This attribute is used by the
       ``__str__()`` method.
     - Overload the :meth:`Context.matches` method to implement
       the logic to determine when to be active.

    The *self._log* logger objects should be used in methods of
    derived classes for logging purposes.  It is a standard logger
    object from the *logger* module in the Python standard library.</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>dragonfly.grammar.context.LogicAndContext</label>
        <link refid="classdragonfly_1_1grammar_1_1context_1_1LogicAndContext"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>dragonfly.test.infrastructure.TestContext</label>
        <link refid="classdragonfly_1_1test_1_1infrastructure_1_1TestContext"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>dragonfly.grammar.context.LogicOrContext</label>
        <link refid="classdragonfly_1_1grammar_1_1context_1_1LogicOrContext"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>dragonfly.grammar.context.LogicNotContext</label>
        <link refid="classdragonfly_1_1grammar_1_1context_1_1LogicNotContext"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>dragonfly.grammar.context.FuncContext</label>
        <link refid="classdragonfly_1_1grammar_1_1context_1_1FuncContext"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>dragonfly.grammar.context.Context</label>
        <link refid="classdragonfly_1_1grammar_1_1context_1_1Context"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>object</label>
      </node>
      <node id="3">
        <label>dragonfly.grammar.context.AppContext</label>
        <link refid="classdragonfly_1_1grammar_1_1context_1_1AppContext"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>dragonfly.grammar.context.Context</label>
        <link refid="classdragonfly_1_1grammar_1_1context_1_1Context"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>object</label>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" line="97" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/context.py" bodystart="97" bodyend="174"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1grammar_1_1context_1_1Context_1a116d1723f457474e7b71dfa078158c24" prot="public" virt="non-virtual"><scope>dragonfly::grammar::context::Context</scope><name>__and__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1context_1_1Context_1abf7250a6563da475d20a639270f6ee0d" prot="public" virt="non-virtual"><scope>dragonfly::grammar::context::Context</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1context_1_1Context_1afce9f1cfb551b64db7cc763890541053" prot="public" virt="non-virtual"><scope>dragonfly::grammar::context::Context</scope><name>__invert__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1context_1_1Context_1ae37d8a8b1d4b4d547305134d9a146cb7" prot="public" virt="non-virtual"><scope>dragonfly::grammar::context::Context</scope><name>__or__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1context_1_1Context_1a249b0ea0c83c32fc75a415b5a3fcef54" prot="public" virt="non-virtual"><scope>dragonfly::grammar::context::Context</scope><name>__repr__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1context_1_1Context_1a1c45805ee6a280a09ea7f41b30627eab" prot="private" virt="non-virtual"><scope>dragonfly::grammar::context::Context</scope><name>_log</name></member>
      <member refid="classdragonfly_1_1grammar_1_1context_1_1Context_1aee89c812701a7622cb89cbbe81b70997" prot="private" virt="non-virtual"><scope>dragonfly::grammar::context::Context</scope><name>_log_match</name></member>
      <member refid="classdragonfly_1_1grammar_1_1context_1_1Context_1af2798dd4a94ec5cbff8dc0d39c98f903" prot="private" virt="non-virtual"><scope>dragonfly::grammar::context::Context</scope><name>_str</name></member>
      <member refid="classdragonfly_1_1grammar_1_1context_1_1Context_1adcabeee25d6f44e9f761855d9744d716" prot="public" virt="non-virtual"><scope>dragonfly::grammar::context::Context</scope><name>copy</name></member>
      <member refid="classdragonfly_1_1grammar_1_1context_1_1Context_1a1dfdbfcc2b9e90e7b659599fc29bc26f" prot="public" virt="non-virtual"><scope>dragonfly::grammar::context::Context</scope><name>matches</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
