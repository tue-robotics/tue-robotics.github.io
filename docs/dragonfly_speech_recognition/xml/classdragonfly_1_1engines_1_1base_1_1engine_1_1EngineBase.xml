<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::engines::base::engine::EngineBase</compoundname>
    <basecompoundref prot="public" virt="non-virtual">object</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a8edbecbdeaf95e177f2001bb2af8233f" prot="private" static="yes" mutable="no">
        <type>dictionary</type>
        <definition>dictionary dragonfly.engines.base.engine.EngineBase::_language_tags</definition>
        <argsstring></argsstring>
        <name>_language_tags</name>
        <initializer>=  {
                      0x0c09: (&quot;en&quot;, &quot;AustralianEnglish&quot;),
                      0xf00a: (&quot;es&quot;, &quot;CastilianSpanish&quot;),
                      0xf809: (&quot;en&quot;, &quot;CAEnglish&quot;),
                      0x0004: (&quot;zh&quot;, &quot;Chinese&quot;),
                      0x0413: (&quot;nl&quot;, &quot;Dutch&quot;),
                      0x0009: (&quot;en&quot;, &quot;English&quot;),
                      0x040c: (&quot;fr&quot;, &quot;French&quot;),
                      0x0407: (&quot;de&quot;, &quot;German&quot;),
                      0xf009: (&quot;en&quot;, &quot;IndianEnglish&quot;),
                      0x0410: (&quot;it&quot;, &quot;Italian&quot;),
                      0x0411: (&quot;jp&quot;, &quot;Japanese&quot;),
                      0xf40a: (&quot;es&quot;, &quot;LatinAmericanSpanish&quot;),
                      0x0416: (&quot;pt&quot;, &quot;Portuguese&quot;),
                      0xf409: (&quot;en&quot;, &quot;SingaporeanEnglish&quot;),
                      0x040a: (&quot;es&quot;, &quot;Spanish&quot;),
                      0x0809: (&quot;en&quot;, &quot;UKEnglish&quot;),
                      0x0409: (&quot;en&quot;, &quot;USEnglish&quot;),
                     }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="353" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1afb5176bc2e640ac4b2dbfbf658e35959" prot="private" static="yes" mutable="no">
        <type></type>
        <definition>dragonfly.engines.base.engine.EngineBase::_log</definition>
        <argsstring></argsstring>
        <name>_log</name>
        <initializer>=  logging.getLogger(&quot;engine&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="64" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a1d734cce4c0ede45663b795104128939" prot="private" static="yes" mutable="no">
        <type>string</type>
        <definition>string dragonfly.engines.base.engine.EngineBase::_name</definition>
        <argsstring></argsstring>
        <name>_name</name>
        <initializer>=  &quot;base&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="65" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a3de55a7b39306f8792fb1da500471271" prot="private" static="yes" mutable="no">
        <type></type>
        <definition>dragonfly.engines.base.engine.EngineBase::_timer_manager</definition>
        <argsstring></argsstring>
        <name>_timer_manager</name>
        <initializer>=  None</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="66" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1ad6408d99af2554b55e4965619120c979" prot="public" static="yes" mutable="no">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase::recognise_forever</definition>
        <argsstring></argsstring>
        <name>recognise_forever</name>
        <initializer>=  <ref refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1ae84ede599c31de61c0f07049caf24d3a" kindref="member">do_recognition</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="278" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1af77cb4634b7dcc98a503c561e2c4eb00" prot="public" static="yes" mutable="no">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase::recognize_forever</definition>
        <argsstring></argsstring>
        <name>recognize_forever</name>
        <initializer>=  <ref refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1ae84ede599c31de61c0f07049caf24d3a" kindref="member">do_recognition</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="275" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="275" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a4148d5027a315ad2b1c855c839c1fd79" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.engines.base.engine.EngineBase::_grammar_wrappers</definition>
        <argsstring></argsstring>
        <name>_grammar_wrappers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="74" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1ac34c56d1537ddd292919808db2be093e" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.engines.base.engine.EngineBase::_recognition_observer_manager</definition>
        <argsstring></argsstring>
        <name>_recognition_observer_manager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="75" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1abeedcb3212d4a7de5f8ebe528b096162" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase.__init__</definition>
        <argsstring>(self)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="70" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="70" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a13db6fffc59f318d44f7a308b6c86298" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase.__repr__</definition>
        <argsstring>(self)</argsstring>
        <name>__repr__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="86" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="86" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a92154369a52220159f25ab1a92ef4543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase.activate_grammar</definition>
        <argsstring>(self, grammar)</argsstring>
        <name>activate_grammar</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>grammar</type>
          <defname>grammar</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="164" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="164" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a09ebff7e9f5f21123eae6545be99a16d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase.activate_rule</definition>
        <argsstring>(self, rule, grammar)</argsstring>
        <name>activate_rule</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>rule</type>
          <defname>rule</defname>
        </param>
        <param>
          <type>grammar</type>
          <defname>grammar</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="172" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="172" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a42c906be8d8941a4467e61cd1cec9706" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase.connect</definition>
        <argsstring>(self)</argsstring>
        <name>connect</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Connect to back-end SR engine. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="103" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="103" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a1b90b22adcb9b07c78714882516dc45a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase.connection</definition>
        <argsstring>(self)</argsstring>
        <name>connection</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Context manager for a connection to the back-end SR engine. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="113" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1ab1796a331ed3abe3fd2d25df29e7b8e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase.create_timer</definition>
        <argsstring>(self, callback, interval, repeating=True)</argsstring>
        <name>create_timer</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>callback</type>
          <defname>callback</defname>
        </param>
        <param>
          <type>interval</type>
          <defname>interval</defname>
        </param>
        <param>
          <type>repeating</type>
          <defname>repeating</defname>
          <defval>True</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Create and return a timer using the specified callback and
    repeat interval. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="120" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="120" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1ae270a1100980ede659df3faaa341b0c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase.deactivate_grammar</definition>
        <argsstring>(self, grammar)</argsstring>
        <name>deactivate_grammar</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>grammar</type>
          <defname>grammar</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="168" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="168" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a1929cf6c4672d7edd46bf19905a2256a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase.deactivate_rule</definition>
        <argsstring>(self, rule, grammar)</argsstring>
        <name>deactivate_rule</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>rule</type>
          <defname>rule</defname>
        </param>
        <param>
          <type>grammar</type>
          <defname>grammar</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="176" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a7fbee45c2ebe5b0d70c42fe4f41e9b17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase.disable_recognition_observers</definition>
        <argsstring>(self)</argsstring>
        <name>disable_recognition_observers</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="208" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="208" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1aa6837642ca917477c2f6ad7b8eb31e34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase.disconnect</definition>
        <argsstring>(self)</argsstring>
        <name>disconnect</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Disconnect from back-end SR engine. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="108" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="108" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1ae84ede599c31de61c0f07049caf24d3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase.do_recognition</definition>
        <argsstring>(self, begin_callback=None, recognition_callback=None, failure_callback=None, end_callback=None, post_recognition_callback=None, *args, **kwargs)</argsstring>
        <name>do_recognition</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>begin_callback</type>
          <defname>begin_callback</defname>
          <defval>None</defval>
        </param>
        <param>
          <type>recognition_callback</type>
          <defname>recognition_callback</defname>
          <defval>None</defval>
        </param>
        <param>
          <type>failure_callback</type>
          <defname>failure_callback</defname>
          <defval>None</defval>
        </param>
        <param>
          <type>end_callback</type>
          <defname>end_callback</defname>
          <defval>None</defval>
        </param>
        <param>
          <type>post_recognition_callback</type>
          <defname>post_recognition_callback</defname>
          <defval>None</defval>
        </param>
        <param>
          <type>*</type>
          <declname>args</declname>
        </param>
        <param>
          <type>**</type>
          <declname>kwargs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Recognize speech in a loop until interrupted or :meth:`disconnect`
is called.

Recognition callback functions can optionally be registered.

Extra positional and key word arguments are passed to
:meth:`_do_recognition`.

:param begin_callback: optional function to be called when speech
    starts.
:type begin_callback: callable | None
:param recognition_callback: optional function to be called on
    recognition success.
:type recognition_callback: callable | None
:param failure_callback: optional function to be called on
    recognition failure.
:type failure_callback: callable | None
:param end_callback: optional function to be called when speech
    ends, either successfully (after calling the recognition
    callback) or in failure (after calling the failure callback).
:type end_callback: callable | None
:param post_recognition_callback: optional function to be called
    after all rule processing has completed.
:type post_recognition_callback: callable | None
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="215" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="215" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a640ba69e3a6a63fce4ea6e10068ce37d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase.enable_recognition_observers</definition>
        <argsstring>(self)</argsstring>
        <name>enable_recognition_observers</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="205" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="205" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a3b16eb648b8d1d7ff28c802b4ba39d8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase.grammars</definition>
        <argsstring>(self)</argsstring>
        <name>grammars</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Grammars loaded into this engine. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="95" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="95" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a09d24b21677f7d553c9a1567fa94914b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase.language</definition>
        <argsstring>(self)</argsstring>
        <name>language</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Current user language of the SR engine. (Read-only)

:rtype: str
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="326" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="326" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1aba98905b9b469fca78df9bf5c373a910" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase.load_grammar</definition>
        <argsstring>(self, grammar)</argsstring>
        <name>load_grammar</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>grammar</type>
          <defname>grammar</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="135" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="135" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a592c35e2691e0d410a31a309a2029fc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase.mimic</definition>
        <argsstring>(self, words)</argsstring>
        <name>mimic</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>words</type>
          <defname>words</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Mimic a recognition of the given *words*. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="317" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="317" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1ae04d82803f390fcdc735e2ba85256379" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase.name</definition>
        <argsstring>(self)</argsstring>
        <name>name</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>The human-readable name of this engine. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="90" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a4e8001c34ac5608822e6149876f55201" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase.process_grammars_context</definition>
        <argsstring>(self, window=None)</argsstring>
        <name>process_grammars_context</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>window</type>
          <defname>window</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Enable/disable grammars &amp; rules based on their current contexts.

    This must be done preemptively for some SR engine back-ends,
    such as WSR, that don&apos;t apply context changes upon/after the
    utterance start has been detected. The WSR engine should call
    this automatically whenever the foreground application (or its
    title) changes. The user may want to call this manually to
    update when custom contexts.

    The *window* parameter is optional window information, which can
    be passed in as an optimization if it has already been gathered.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="280" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="280" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1ac2119a5444404c17cc642f7d6c5eafc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase.quoted_words_support</definition>
        <argsstring>(self)</argsstring>
        <name>quoted_words_support</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Whether this engine can compile and recognize quoted words.

:rtype: bool
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="377" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="377" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1af1644c79841bec1bf857af1fe9bbaf00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase.register_recognition_observer</definition>
        <argsstring>(self, observer)</argsstring>
        <name>register_recognition_observer</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>observer</type>
          <defname>observer</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="199" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="199" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1aeb5538bd43da94cb55ab532dc1db2b90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase.set_exclusive</definition>
        <argsstring>(self, grammar, exclusive)</argsstring>
        <name>set_exclusive</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>grammar</type>
          <defname>grammar</defname>
        </param>
        <param>
          <type>exclusive</type>
          <defname>exclusive</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Alias of :meth:`set_exclusiveness`. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="185" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="185" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a3007a6563808a139ea8420d43e30f949" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase.set_exclusiveness</definition>
        <argsstring>(self, grammar, exclusive)</argsstring>
        <name>set_exclusiveness</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>grammar</type>
          <defname>grammar</defname>
        </param>
        <param>
          <type>exclusive</type>
          <defname>exclusive</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Set the exclusiveness of a grammar. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="180" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="180" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1ae787f2ad5535a14d6092a5b4d0ba8722" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase.speak</definition>
        <argsstring>(self, text)</argsstring>
        <name>speak</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>text</type>
          <defname>text</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Speak the given *text* using text-to-speech. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="321" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="321" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1ae7c27095d629b2f20441e98014882a8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase.unload_grammar</definition>
        <argsstring>(self, grammar)</argsstring>
        <name>unload_grammar</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>grammar</type>
          <defname>grammar</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="148" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="148" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1ae3bc40a6e752535ddcc534eac9ad80b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase.unregister_recognition_observer</definition>
        <argsstring>(self, observer)</argsstring>
        <name>unregister_recognition_observer</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>observer</type>
          <defname>observer</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="202" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="202" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1abe930f784523b91f002710149298944f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase.update_list</definition>
        <argsstring>(self, lst, grammar)</argsstring>
        <name>update_list</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>lst</type>
          <defname>lst</defname>
        </param>
        <param>
          <type>grammar</type>
          <defname>grammar</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="160" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="160" bodyend="163"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a07e88c830f4b7d8246b71418d4a43cd8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase._build_grammar_wrapper</definition>
        <argsstring>(self, grammar)</argsstring>
        <name>_build_grammar_wrapper</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>grammar</type>
          <defname>grammar</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="128" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a4e9bdcca26a64371d9ca3e51bda1988a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase._do_recognition</definition>
        <argsstring>(self, *args, **kwargs)</argsstring>
        <name>_do_recognition</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>*</type>
          <declname>args</declname>
        </param>
        <param>
          <type>**</type>
          <declname>kwargs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Recognize speech in a loop until interrupted or :meth:`disconnect`
is called.

This method should be implemented by engine sub-classes.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="265" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="265" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1aa9a4c00e08c361712b46248381633f3c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase._get_grammar_wrapper</definition>
        <argsstring>(self, grammar)</argsstring>
        <name>_get_grammar_wrapper</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>grammar</type>
          <defname>grammar</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="189" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="189" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a6912e6a9a0e7da9fa7d690c2a09031f8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase._get_language</definition>
        <argsstring>(self)</argsstring>
        <name>_get_language</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="373" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="373" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a926b22ae2a376e5fa4d805819f23fe2c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase._get_language_tag</definition>
        <argsstring>(cls, language_id)</argsstring>
        <name>_get_language_tag</name>
        <param>
          <type>cls</type>
          <defname>cls</defname>
        </param>
        <param>
          <type>language_id</type>
          <defname>language_id</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="335" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="335" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a249959c59db8ae49b1cc9067b54a021b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase._get_words_rules</definition>
        <argsstring>(cls, words, rule_id)</argsstring>
        <name>_get_words_rules</name>
        <param>
          <type>cls</type>
          <defname>cls</defname>
        </param>
        <param>
          <type>words</type>
          <defname>words</defname>
        </param>
        <param>
          <type>rule_id</type>
          <defname>rule_id</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="307" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="307" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a1939bd0af0cd8a1d9c8ca6c1103f6251" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase._has_quoted_words_support</definition>
        <argsstring>(self)</argsstring>
        <name>_has_quoted_words_support</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="385" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="385" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a4476da61c6f88f79edf11db6878cc03e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase._load_grammar</definition>
        <argsstring>(self, grammar)</argsstring>
        <name>_load_grammar</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>grammar</type>
          <defname>grammar</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="144" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1aaa940bcbb54853a5689df9279a09d10f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.engine.EngineBase._unload_grammar</definition>
        <argsstring>(self, grammar, wrapper)</argsstring>
        <name>_unload_grammar</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>grammar</type>
          <defname>grammar</defname>
        </param>
        <param>
          <type>wrapper</type>
          <defname>wrapper</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="156" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="156" bodyend="159"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Base class for engine-specific back-ends. </verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>object</label>
      </node>
      <node id="1">
        <label>dragonfly.engines.base.engine.EngineBase</label>
        <link refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>string</label>
      </node>
      <node id="2">
        <label>object</label>
      </node>
      <node id="1">
        <label>dragonfly.engines.base.engine.EngineBase</label>
        <link refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>_name</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" line="61" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/engine.py" bodystart="61" bodyend="387"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1abeedcb3212d4a7de5f8ebe528b096162" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a13db6fffc59f318d44f7a308b6c86298" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>__repr__</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a07e88c830f4b7d8246b71418d4a43cd8" prot="private" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>_build_grammar_wrapper</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a4e9bdcca26a64371d9ca3e51bda1988a" prot="private" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>_do_recognition</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1aa9a4c00e08c361712b46248381633f3c" prot="private" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>_get_grammar_wrapper</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a6912e6a9a0e7da9fa7d690c2a09031f8" prot="private" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>_get_language</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a926b22ae2a376e5fa4d805819f23fe2c" prot="private" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>_get_language_tag</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a249959c59db8ae49b1cc9067b54a021b" prot="private" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>_get_words_rules</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a4148d5027a315ad2b1c855c839c1fd79" prot="private" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>_grammar_wrappers</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a1939bd0af0cd8a1d9c8ca6c1103f6251" prot="private" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>_has_quoted_words_support</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a8edbecbdeaf95e177f2001bb2af8233f" prot="private" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>_language_tags</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a4476da61c6f88f79edf11db6878cc03e" prot="private" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>_load_grammar</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1afb5176bc2e640ac4b2dbfbf658e35959" prot="private" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>_log</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a1d734cce4c0ede45663b795104128939" prot="private" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>_name</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1ac34c56d1537ddd292919808db2be093e" prot="private" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>_recognition_observer_manager</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a3de55a7b39306f8792fb1da500471271" prot="private" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>_timer_manager</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1aaa940bcbb54853a5689df9279a09d10f" prot="private" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>_unload_grammar</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a92154369a52220159f25ab1a92ef4543" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>activate_grammar</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a09ebff7e9f5f21123eae6545be99a16d" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>activate_rule</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a42c906be8d8941a4467e61cd1cec9706" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>connect</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a1b90b22adcb9b07c78714882516dc45a" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>connection</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1ab1796a331ed3abe3fd2d25df29e7b8e9" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>create_timer</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1ae270a1100980ede659df3faaa341b0c3" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>deactivate_grammar</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a1929cf6c4672d7edd46bf19905a2256a" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>deactivate_rule</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a7fbee45c2ebe5b0d70c42fe4f41e9b17" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>disable_recognition_observers</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1aa6837642ca917477c2f6ad7b8eb31e34" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>disconnect</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1ae84ede599c31de61c0f07049caf24d3a" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>do_recognition</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a640ba69e3a6a63fce4ea6e10068ce37d" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>enable_recognition_observers</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a3b16eb648b8d1d7ff28c802b4ba39d8c" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>grammars</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a09d24b21677f7d553c9a1567fa94914b" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>language</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1aba98905b9b469fca78df9bf5c373a910" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>load_grammar</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a592c35e2691e0d410a31a309a2029fc3" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>mimic</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1ae04d82803f390fcdc735e2ba85256379" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>name</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a4e8001c34ac5608822e6149876f55201" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>process_grammars_context</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1ac2119a5444404c17cc642f7d6c5eafc5" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>quoted_words_support</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1ad6408d99af2554b55e4965619120c979" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>recognise_forever</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1af77cb4634b7dcc98a503c561e2c4eb00" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>recognize_forever</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1af1644c79841bec1bf857af1fe9bbaf00" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>register_recognition_observer</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1aeb5538bd43da94cb55ab532dc1db2b90" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>set_exclusive</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1a3007a6563808a139ea8420d43e30f949" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>set_exclusiveness</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1ae787f2ad5535a14d6092a5b4d0ba8722" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>speak</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1ae7c27095d629b2f20441e98014882a8b" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>unload_grammar</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1ae3bc40a6e752535ddcc534eac9ad80b5" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>unregister_recognition_observer</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1engine_1_1EngineBase_1abe930f784523b91f002710149298944f" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::engine::EngineBase</scope><name>update_list</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
