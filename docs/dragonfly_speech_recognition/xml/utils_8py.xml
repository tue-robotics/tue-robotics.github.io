<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="utils_8py" kind="file" language="Python">
    <compoundname>utils.py</compoundname>
    <innerclass refid="classdragonfly_1_1accessibility_1_1utils_1_1CursorPosition" prot="public">dragonfly::accessibility::utils::CursorPosition</innerclass>
    <innerclass refid="classdragonfly_1_1accessibility_1_1utils_1_1TextInfo" prot="public">dragonfly::accessibility::utils::TextInfo</innerclass>
    <innerclass refid="classdragonfly_1_1accessibility_1_1utils_1_1TextQuery" prot="public">dragonfly::accessibility::utils::TextQuery</innerclass>
    <innernamespace refid="namespacedragonfly_1_1accessibility_1_1utils">dragonfly::accessibility::utils</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacedragonfly_1_1accessibility_1_1utils" refkind="compound"><highlight class="stringliteral">&quot;&quot;&quot;This<sp/>module<sp/>contains<sp/>OS-independent<sp/>functionality<sp/>*which<sp/>does<sp/>not<sp/>depend<sp/>on</highlight></codeline>
<codeline lineno="2"><highlight class="stringliteral">other<sp/>Dragonfly<sp/>functionality*.<sp/>Functionality<sp/>which<sp/>does<sp/>depend<sp/>on<sp/>Dragonfly</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral">classes<sp/>such<sp/>as<sp/>actions<sp/>should<sp/>go<sp/>into<sp/>controller.py.<sp/>This<sp/>separation<sp/>is<sp/>done<sp/>to</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral">make<sp/>it<sp/>easier<sp/>in<sp/>the<sp/>future<sp/>to<sp/>extract<sp/>this<sp/>functionality<sp/>as<sp/>a<sp/>general<sp/>Python</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral">library<sp/>independent<sp/>of<sp/>Dragonfly.</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>regex</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>enum</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logging</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="namespacedragonfly_1_1accessibility_1_1utils_1a653ba5aa5a4c7ba438cf2c58b2c4feb6" refkind="member"><highlight class="normal">_log<sp/>=<sp/>logging.getLogger(</highlight><highlight class="stringliteral">&quot;accessibility&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classdragonfly_1_1accessibility_1_1utils_1_1CursorPosition" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1accessibility_1_1utils_1_1CursorPosition" kindref="compound">CursorPosition</ref>(enum.Enum):</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;The<sp/>cursor<sp/>position<sp/>relative<sp/>to<sp/>a<sp/>range<sp/>of<sp/>text.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classdragonfly_1_1accessibility_1_1utils_1_1CursorPosition_1ae0ffddc43d14403e3af9faeff95c2a13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>BEFORE<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;The<sp/>position<sp/>before<sp/>the<sp/>text.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classdragonfly_1_1accessibility_1_1utils_1_1CursorPosition_1a3883f9823dcc07520a212b46fcce6b84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>AFTER<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;The<sp/>position<sp/>after<sp/>the<sp/>text.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classdragonfly_1_1accessibility_1_1utils_1_1TextQuery" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1accessibility_1_1utils_1_1TextQuery" kindref="compound">TextQuery</ref>(object):</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;A<sp/>query<sp/>to<sp/>match<sp/>a<sp/>range<sp/>of<sp/>text.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classdragonfly_1_1accessibility_1_1utils_1_1TextQuery_1ae9b102f2cf1683bbf259be0cd0350c67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1accessibility_1_1utils_1_1TextQuery_1ae9b102f2cf1683bbf259be0cd0350c67" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_phrase=&quot;&quot;,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_relative_position=None,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_relative_phrase=&quot;&quot;,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>through=False,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_phrase=&quot;&quot;,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_relative_position=None,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_relative_phrase=&quot;&quot;):</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>(end_phrase<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>end_relative_phrase):</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Must<sp/>specify<sp/>end<sp/>(relative)<sp/>phrase&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="40" refid="classdragonfly_1_1accessibility_1_1utils_1_1TextQuery_1ae699eb8b16f35d19e4a9adfbf0ab4180" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>through<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(start_phrase<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>start_relative_phrase):</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Must<sp/>specify<sp/>&apos;through&apos;<sp/>if<sp/>start<sp/>is<sp/>specified.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>start_relative_phrase<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>start_relative_position:</highlight></codeline>
<codeline lineno="43" refid="classdragonfly_1_1accessibility_1_1utils_1_1TextQuery_1a5fb3b08768f80cba77adf3ee59b6635a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Must<sp/>specify<sp/>before<sp/>or<sp/>after<sp/>for<sp/>start_relative_phrase&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>end_relative_phrase<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>end_relative_position:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Must<sp/>specify<sp/>before<sp/>or<sp/>after<sp/>for<sp/>end_relative_phrase&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="46" refid="classdragonfly_1_1accessibility_1_1utils_1_1TextQuery_1a56d6224b3c22c9a671f6871afd9d75da" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1accessibility_1_1utils_1_1TextQuery_1ae699eb8b16f35d19e4a9adfbf0ab4180" kindref="member">start_phrase</ref><sp/>=<sp/>start_phrase</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;The<sp/>phrase<sp/>at<sp/>the<sp/>start<sp/>of<sp/>the<sp/>match.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classdragonfly_1_1accessibility_1_1utils_1_1TextQuery_1a36f3656bc916f93cd84da43f6bb1be69" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1accessibility_1_1utils_1_1TextQuery_1a5fb3b08768f80cba77adf3ee59b6635a" kindref="member">start_relative_position</ref><sp/>=<sp/>start_relative_position</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Whether<sp/>to<sp/>match<sp/>before<sp/>or<sp/>after<sp/>the<sp/>:attr:`start_relative_phrase`.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classdragonfly_1_1accessibility_1_1utils_1_1TextQuery_1ab010b960c56dae51c22a68ee9d44eeba" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1accessibility_1_1utils_1_1TextQuery_1a56d6224b3c22c9a671f6871afd9d75da" kindref="member">start_relative_phrase</ref><sp/>=<sp/>start_relative_phrase</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;The<sp/>phrase<sp/>to<sp/>match<sp/>before<sp/>or<sp/>after<sp/>at<sp/>the<sp/>start.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classdragonfly_1_1accessibility_1_1utils_1_1TextQuery_1a3de6f7e2930f90731752e207d96d600c" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1accessibility_1_1utils_1_1TextQuery_1a36f3656bc916f93cd84da43f6bb1be69" kindref="member">through</ref><sp/>=<sp/>through</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;True<sp/>if<sp/>matching<sp/>from<sp/>a<sp/>start<sp/>point<sp/>to<sp/>the<sp/>end<sp/>phrase.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classdragonfly_1_1accessibility_1_1utils_1_1TextQuery_1a03aef65c2d28ead91050416c05f25d31" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1accessibility_1_1utils_1_1TextQuery_1ab010b960c56dae51c22a68ee9d44eeba" kindref="member">end_phrase</ref><sp/>=<sp/>end_phrase</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;The<sp/>phrase<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>match<sp/>(or<sp/>the<sp/>sole<sp/>phrase).&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1accessibility_1_1utils_1_1TextQuery_1a3de6f7e2930f90731752e207d96d600c" kindref="member">end_relative_position</ref><sp/>=<sp/>end_relative_position</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Whether<sp/>to<sp/>match<sp/>before<sp/>or<sp/>after<sp/>the<sp/>:attr:`end_relative_phrase`.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1accessibility_1_1utils_1_1TextQuery_1a03aef65c2d28ead91050416c05f25d31" kindref="member">end_relative_phrase</ref><sp/>=<sp/>end_relative_phrase</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;The<sp/>phrase<sp/>to<sp/>match<sp/>before<sp/>or<sp/>after<sp/>at<sp/>the<sp/>end.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classdragonfly_1_1accessibility_1_1utils_1_1TextQuery_1a22fcc0b620cb7ef1c19cb200cbeb6b97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1accessibility_1_1utils_1_1TextQuery_1a22fcc0b620cb7ef1c19cb200cbeb6b97" kindref="member">__repr__</ref>(self):</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str(dict([(k,<sp/>v)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k,<sp/>v)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.__dict__.items()<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>v]))</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classdragonfly_1_1accessibility_1_1utils_1_1TextInfo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1accessibility_1_1utils_1_1TextInfo" kindref="compound">TextInfo</ref>(object):</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Information<sp/>about<sp/>a<sp/>range<sp/>of<sp/>text.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classdragonfly_1_1accessibility_1_1utils_1_1TextInfo_1a23c9dd232dc7bcadcec5951457cc7d62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1accessibility_1_1utils_1_1TextInfo_1a23c9dd232dc7bcadcec5951457cc7d62" kindref="member">__init__</ref>(self,<sp/>start,<sp/>end,<sp/>text,<sp/>start_coordinates=None,<sp/>end_coordinates=None):</highlight></codeline>
<codeline lineno="76" refid="classdragonfly_1_1accessibility_1_1utils_1_1TextInfo_1ac2565eff464773d592502169cd4bf62f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1accessibility_1_1utils_1_1TextInfo_1ac2565eff464773d592502169cd4bf62f" kindref="member">start</ref><sp/>=<sp/>start</highlight></codeline>
<codeline lineno="77" refid="classdragonfly_1_1accessibility_1_1utils_1_1TextInfo_1ad5a211fdab97916296cbc4d7423ded2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1accessibility_1_1utils_1_1TextInfo_1ad5a211fdab97916296cbc4d7423ded2a" kindref="member">end</ref><sp/>=<sp/>end</highlight></codeline>
<codeline lineno="78" refid="classdragonfly_1_1accessibility_1_1utils_1_1TextInfo_1ab66b3213e49653d605027ea53cf75437" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1accessibility_1_1utils_1_1TextInfo_1ab66b3213e49653d605027ea53cf75437" kindref="member">text</ref><sp/>=<sp/>text</highlight></codeline>
<codeline lineno="79" refid="classdragonfly_1_1accessibility_1_1utils_1_1TextInfo_1ac81bf6ac10ec2c022dd5681ba26d12cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1accessibility_1_1utils_1_1TextInfo_1ac81bf6ac10ec2c022dd5681ba26d12cf" kindref="member">start_coordinates</ref><sp/>=<sp/>start_coordinates</highlight></codeline>
<codeline lineno="80" refid="classdragonfly_1_1accessibility_1_1utils_1_1TextInfo_1aff1ee7340ac9c1d807cf6d983d55025a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1accessibility_1_1utils_1_1TextInfo_1aff1ee7340ac9c1d807cf6d983d55025a" kindref="member">end_coordinates</ref><sp/>=<sp/>end_coordinates</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="namespacedragonfly_1_1accessibility_1_1utils_1ad1fb9434f6c552590e728e3bbc1ba796" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacedragonfly_1_1accessibility_1_1utils_1ad1fb9434f6c552590e728e3bbc1ba796" kindref="member">_phrase_to_regex</ref>(phrase):</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Treat<sp/>whitespace<sp/>between<sp/>words<sp/>as<sp/>meaning<sp/>anything<sp/>other<sp/>than<sp/>alphanumeric</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>characters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>pattern<sp/>=<sp/></highlight><highlight class="stringliteral">r&quot;[^\w--_]+&quot;</highlight><highlight class="normal">.join(regex.escape(word)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>word<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>phrase.split())</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Treat<sp/>spaces<sp/>at<sp/>the<sp/>beginning<sp/>or<sp/>end<sp/>of<sp/>the<sp/>phrase<sp/>as<sp/>matching<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>whitespace<sp/>character.<sp/>This<sp/>makes<sp/>it<sp/>easy<sp/>to<sp/>select<sp/>stuff<sp/>like<sp/>non-breaking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>space,<sp/>which<sp/>occurs<sp/>frequently<sp/>in<sp/>browsers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO<sp/>Support<sp/>newlines.<sp/>Note<sp/>that<sp/>these<sp/>are<sp/>frequently<sp/>implemented<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>separate<sp/>text<sp/>nodes<sp/>in<sp/>the<sp/>accessibility<sp/>tree,<sp/>so<sp/>the<sp/>obvious</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>implementation<sp/>would<sp/>not<sp/>work<sp/>well.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>phrase<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern<sp/>=<sp/></highlight><highlight class="stringliteral">r&quot;\s&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>phrase.startswith(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern<sp/>=<sp/></highlight><highlight class="stringliteral">r&quot;\s&quot;</highlight><highlight class="normal"><sp/>+<sp/>pattern</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>phrase.endswith(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern<sp/>=<sp/>pattern<sp/>+<sp/></highlight><highlight class="stringliteral">r&quot;\s&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Only<sp/>match<sp/>at<sp/>boundaries<sp/>of<sp/>alphanumeric<sp/>sequences<sp/>if<sp/>the<sp/>phrase<sp/>ends</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>are<sp/>alphanumeric.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>regex.search(</highlight><highlight class="stringliteral">r&quot;^[\w--_]&quot;</highlight><highlight class="normal">,<sp/>phrase,<sp/>regex.VERSION1<sp/>|<sp/>regex.UNICODE):</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern<sp/>=<sp/></highlight><highlight class="stringliteral">r&quot;(?&lt;![\w--_])&quot;</highlight><highlight class="normal"><sp/>+<sp/>pattern</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>regex.search(</highlight><highlight class="stringliteral">r&quot;[\w--_]$&quot;</highlight><highlight class="normal">,<sp/>phrase,<sp/>regex.VERSION1<sp/>|<sp/>regex.UNICODE):</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern<sp/>=<sp/>pattern<sp/>+<sp/></highlight><highlight class="stringliteral">r&quot;(?![\w--_])&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pattern</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="namespacedragonfly_1_1accessibility_1_1utils_1a2d2dc771d7915c5eca64758f4f94c267" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacedragonfly_1_1accessibility_1_1utils_1a2d2dc771d7915c5eca64758f4f94c267" kindref="member">_find_text</ref>(query,<sp/>expanded_text,<sp/>cursor_offset):</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Convert<sp/>query<sp/>to<sp/>regex<sp/>with<sp/>a<sp/>single<sp/>matching<sp/>group.<sp/>Note<sp/>that<sp/>this<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>to<sp/>be<sp/>simpler<sp/>but<sp/>buggy,<sp/>and<sp/>is<sp/>now<sp/>is<sp/>complicated<sp/>because<sp/>lookbehind<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>lookahead<sp/>regular<sp/>expressions<sp/>must<sp/>be<sp/>fixed-width,<sp/>so<sp/>we<sp/>have<sp/>to<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>their<sp/>usage<sp/>and<sp/>use<sp/>a<sp/>matching<sp/>group<sp/>instead,<sp/>which<sp/>requires<sp/>matching<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>parens<sp/>surrounding<sp/>the<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>pattern<sp/>=<sp/></highlight><highlight class="stringliteral">r&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>the<sp/>start<sp/>phrases,<sp/>if<sp/>present.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>query.start_phrase<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>query.start_relative_phrase:</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>query.start_relative_phrase<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>query.start_relative_position<sp/>==<sp/>CursorPosition.AFTER:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern<sp/>+=<sp/><ref refid="namespacedragonfly_1_1accessibility_1_1utils_1ad1fb9434f6c552590e728e3bbc1ba796" kindref="member">_phrase_to_regex</ref>(query.start_relative_phrase)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>query.start_phrase:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern<sp/>+=<sp/></highlight><highlight class="stringliteral">r&quot;[^\w--_]*&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern<sp/>+=<sp/></highlight><highlight class="stringliteral">r&quot;(&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacedragonfly_1_1accessibility_1_1utils_1ad1fb9434f6c552590e728e3bbc1ba796" kindref="member">_phrase_to_regex</ref>(query.start_phrase)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>query.start_relative_phrase<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>query.start_relative_position<sp/>==<sp/>CursorPosition.BEFORE:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>query.start_phrase:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern<sp/>+=<sp/></highlight><highlight class="stringliteral">r&quot;[^\w--_]*&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern<sp/>+=<sp/><ref refid="namespacedragonfly_1_1accessibility_1_1utils_1ad1fb9434f6c552590e728e3bbc1ba796" kindref="member">_phrase_to_regex</ref>(query.start_relative_phrase)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern<sp/>+=<sp/></highlight><highlight class="stringliteral">r&quot;.*?&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>the<sp/>end<sp/>phrases.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>query.end_relative_phrase<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>query.end_relative_position<sp/>==<sp/>CursorPosition.AFTER:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern<sp/>+=<sp/><ref refid="namespacedragonfly_1_1accessibility_1_1utils_1ad1fb9434f6c552590e728e3bbc1ba796" kindref="member">_phrase_to_regex</ref>(query.end_relative_phrase)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>query.end_phrase:</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern<sp/>+=<sp/></highlight><highlight class="stringliteral">r&quot;[^\w--_]*&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>the<sp/>initial<sp/>&quot;(&quot;<sp/>if<sp/>we<sp/>haven&apos;t<sp/>already.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>(query.start_phrase<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>query.start_relative_phrase):</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern<sp/>+=<sp/></highlight><highlight class="stringliteral">r&quot;(&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>pattern<sp/>+=<sp/><ref refid="namespacedragonfly_1_1accessibility_1_1utils_1ad1fb9434f6c552590e728e3bbc1ba796" kindref="member">_phrase_to_regex</ref>(query.end_phrase)<sp/>+<sp/></highlight><highlight class="stringliteral">r&quot;)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>query.end_relative_phrase<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>query.end_relative_position<sp/>==<sp/>CursorPosition.BEFORE:</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>query.end_phrase:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern<sp/>+=<sp/></highlight><highlight class="stringliteral">r&quot;[^\w--_]*&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern<sp/>+=<sp/><ref refid="namespacedragonfly_1_1accessibility_1_1utils_1ad1fb9434f6c552590e728e3bbc1ba796" kindref="member">_phrase_to_regex</ref>(query.end_relative_phrase)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Find<sp/>all<sp/>matches.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>matches<sp/>=<sp/>regex.finditer(pattern,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expanded_text,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>regex.IGNORECASE<sp/>|<sp/>regex.VERSION1<sp/>|<sp/>regex.UNICODE,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>overlapped=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>ranges<sp/>=<sp/>[(match.start(1),<sp/>match.end(1))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>match<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>matches]</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>ranges:</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_log.warning(</highlight><highlight class="stringliteral">&quot;Not<sp/>found:<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>query)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>start_with_cursor<sp/>=<sp/>(query.through<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>(query.start_phrase<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>query.start_relative_phrase))</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cursor_offset<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_log.warning(</highlight><highlight class="stringliteral">&quot;Cursor<sp/>not<sp/>found.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>start_with_cursor:</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_log.warning(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>perform<sp/>cursor-relative<sp/>query<sp/>without<sp/>cursor.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Pick<sp/>arbitrary<sp/>match<sp/>(the<sp/>first<sp/>one).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ranges[0]</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Find<sp/>nearest<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range<sp/>=<sp/>min(ranges,<sp/>key=</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/>abs((x[0]<sp/>+<sp/>x[1])<sp/>/<sp/>2<sp/>-<sp/>cursor_offset))</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>start_with_cursor:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>range[0]<sp/>&lt;<sp/>cursor_offset:</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(range[0],<sp/>cursor_offset)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(cursor_offset,<sp/>range[1])</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>range</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="namespacedragonfly_1_1accessibility_1_1utils_1a1e9f0d8bfa384eba170b241a2f0e54fc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacedragonfly_1_1accessibility_1_1utils_1a1e9f0d8bfa384eba170b241a2f0e54fc" kindref="member">_get_focused_text</ref>(context):</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>context.focused:</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_log.warning(</highlight><highlight class="stringliteral">&quot;Nothing<sp/>is<sp/>focused.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>focused_text<sp/>=<sp/>context.focused.as_text()</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>focused_text:</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_log.warning(</highlight><highlight class="stringliteral">&quot;Focused<sp/>element<sp/>is<sp/>not<sp/>text.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>focused_text</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="namespacedragonfly_1_1accessibility_1_1utils_1aa5bcc22d4d14558cb08d059824a95a70" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacedragonfly_1_1accessibility_1_1utils_1aa5bcc22d4d14558cb08d059824a95a70" kindref="member">get_cursor_offset</ref>(controller):</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">closure(context):</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focused_text<sp/>=<sp/><ref refid="namespacedragonfly_1_1accessibility_1_1utils_1a1e9f0d8bfa384eba170b241a2f0e54fc" kindref="member">_get_focused_text</ref>(context)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>focused_text:</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>focused_text.cursor</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>controller.run_sync(closure)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="namespacedragonfly_1_1accessibility_1_1utils_1acee2eb63f06c1c7f2b1187573a650040" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacedragonfly_1_1accessibility_1_1utils_1acee2eb63f06c1c7f2b1187573a650040" kindref="member">set_cursor_offset</ref>(controller,<sp/>offset):</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">closure(context):</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focused_text<sp/>=<sp/><ref refid="namespacedragonfly_1_1accessibility_1_1utils_1a1e9f0d8bfa384eba170b241a2f0e54fc" kindref="member">_get_focused_text</ref>(context)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>focused_text:</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focused_text.set_cursor(offset)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>controller.run_sync(closure)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="namespacedragonfly_1_1accessibility_1_1utils_1ae956a1e400a3865728c9d43c38101897" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacedragonfly_1_1accessibility_1_1utils_1ae956a1e400a3865728c9d43c38101897" kindref="member">get_text_info</ref>(controller,<sp/>query):</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>_log.debug(</highlight><highlight class="stringliteral">&quot;Getting<sp/>text<sp/>info:<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>query)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">closure(context):</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focused_text<sp/>=<sp/><ref refid="namespacedragonfly_1_1accessibility_1_1utils_1a1e9f0d8bfa384eba170b241a2f0e54fc" kindref="member">_get_focused_text</ref>(context)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>focused_text:</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nearest<sp/>=<sp/><ref refid="namespacedragonfly_1_1accessibility_1_1utils_1a2d2dc771d7915c5eca64758f4f94c267" kindref="member">_find_text</ref>(query,<sp/>focused_text.expanded_text,<sp/>focused_text.cursor)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>nearest:</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_info<sp/>=<sp/><ref refid="classdragonfly_1_1accessibility_1_1utils_1_1TextInfo" kindref="compound">TextInfo</ref>(nearest[0],<sp/>nearest[1],</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focused_text.expanded_text[nearest[0]:nearest[1]])</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_box<sp/>=<sp/>focused_text.get_bounding_box(nearest[0])</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_box<sp/>=<sp/>focused_text.get_bounding_box(nearest[1]<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Ignore<sp/>offscreen<sp/>coordinates.<sp/>Google<sp/>Docs<sp/>returns<sp/>these,<sp/>and<sp/>we<sp/>handle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>it<sp/>here<sp/>to<sp/>avoid<sp/>further<sp/>trouble.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>start_box.x<sp/>&lt;<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>start_box.y<sp/>&lt;<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>end_box.x<sp/>&lt;<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>end_box.y<sp/>&lt;<sp/>0:</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_log.warning(</highlight><highlight class="stringliteral">&quot;Text<sp/>selection<sp/>points<sp/>were<sp/>offscreen,<sp/>ignoring.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_info.start_coordinates<sp/>=<sp/>start_box.x,<sp/>start_box.y<sp/>+<sp/>start_box.height<sp/>/<sp/>2</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_info.end_coordinates<sp/>=<sp/>end_box.x<sp/>+<sp/>end_box.width,<sp/>end_box.y<sp/>+<sp/>end_box.height<sp/>/<sp/>2</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>text_info</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>controller.run_sync(closure)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="namespacedragonfly_1_1accessibility_1_1utils_1ab72b8e0f6beb45e4073af1d1639b80eb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacedragonfly_1_1accessibility_1_1utils_1ab72b8e0f6beb45e4073af1d1639b80eb" kindref="member">move_cursor</ref>(controller,<sp/>query,<sp/>position):</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Moves<sp/>the<sp/>cursor<sp/>before<sp/>or<sp/>after<sp/>the<sp/>provided<sp/>phrase.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>_log.info(</highlight><highlight class="stringliteral">&quot;Moving<sp/>cursor<sp/>%s<sp/>phrase:<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>(position.name,<sp/>query))</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">closure(context):</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focused_text<sp/>=<sp/><ref refid="namespacedragonfly_1_1accessibility_1_1utils_1a1e9f0d8bfa384eba170b241a2f0e54fc" kindref="member">_get_focused_text</ref>(context)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>focused_text:</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nearest<sp/>=<sp/><ref refid="namespacedragonfly_1_1accessibility_1_1utils_1a2d2dc771d7915c5eca64758f4f94c267" kindref="member">_find_text</ref>(query,<sp/>focused_text.expanded_text,<sp/>focused_text.cursor)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>nearest:</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focused_text.set_cursor(nearest[0]<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>position<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>CursorPosition.BEFORE<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>nearest[1])</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_log.info(</highlight><highlight class="stringliteral">&quot;Moved<sp/>cursor&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>controller.run_sync(closure)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="namespacedragonfly_1_1accessibility_1_1utils_1ab66ed661ffae2d24a294b7da9e7c6a8f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacedragonfly_1_1accessibility_1_1utils_1ab66ed661ffae2d24a294b7da9e7c6a8f" kindref="member">select_text</ref>(controller,<sp/>query):</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>_log.info(</highlight><highlight class="stringliteral">&quot;Selecting<sp/>text:<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>query)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">closure(context):</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focused_text<sp/>=<sp/><ref refid="namespacedragonfly_1_1accessibility_1_1utils_1a1e9f0d8bfa384eba170b241a2f0e54fc" kindref="member">_get_focused_text</ref>(context)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>focused_text:</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nearest<sp/>=<sp/><ref refid="namespacedragonfly_1_1accessibility_1_1utils_1a2d2dc771d7915c5eca64758f4f94c267" kindref="member">_find_text</ref>(query,<sp/>focused_text.expanded_text,<sp/>focused_text.cursor)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>nearest:</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focused_text.select_range(*nearest)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_log.info(</highlight><highlight class="stringliteral">&quot;Selected<sp/>text&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>controller.run_sync(closure)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="namespacedragonfly_1_1accessibility_1_1utils_1a74102efebdd9ef62abcca880015fd08f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacedragonfly_1_1accessibility_1_1utils_1a74102efebdd9ef62abcca880015fd08f" kindref="member">is_editable_focused</ref>(controller):</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>true<sp/>if<sp/>an<sp/>editable<sp/>object<sp/>is<sp/>focused.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">closure(context):</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>context.focused<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>context.focused.is_editable()</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>controller.run_sync(closure)</highlight></codeline>
    </programlisting>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/accessibility/utils.py"/>
  </compounddef>
</doxygen>
