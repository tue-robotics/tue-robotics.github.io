<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="recobs__callbacks_8py" kind="file" language="Python">
    <compoundname>recobs_callbacks.py</compoundname>
    <innerclass refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver" prot="public">dragonfly::grammar::recobs_callbacks::CallbackRecognitionObserver</innerclass>
    <innernamespace refid="namespacedragonfly_1_1grammar_1_1recobs__callbacks">dragonfly::grammar::recobs_callbacks</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacedragonfly_1_1grammar_1_1recobs__callbacks" refkind="compound"><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Dragonfly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(c)<sp/>Copyright<sp/>2007,<sp/>2008<sp/>by<sp/>Christo<sp/>Butcher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Licensed<sp/>under<sp/>the<sp/>LGPL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Dragonfly<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Dragonfly<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>License<sp/>along<sp/>with<sp/>Dragonfly.<sp/><sp/>If<sp/>not,<sp/>see</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral">Recognition<sp/>state<sp/>change<sp/>callbacks</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral">----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1grammar_1_1recobs" kindref="compound">dragonfly.grammar.recobs</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>RecognitionObserver</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>inspect<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>getfullargspec<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>getargspec</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ImportError:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Fallback<sp/>on<sp/>the<sp/>deprecated<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>inspect<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>getargspec</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver" kindref="compound">CallbackRecognitionObserver</ref>(<ref refid="classdragonfly_1_1grammar_1_1recobs_1_1RecognitionObserver" kindref="compound">RecognitionObserver</ref>):</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Observer<sp/>class<sp/>for<sp/>calling<sp/>recognition<sp/>state<sp/>change<sp/>callbacks.</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>is<sp/>used<sp/>by<sp/>the<sp/>``register_*_callback``<sp/>functions<sp/>and<sp/>is</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>registered<sp/>with<sp/>the<sp/>current<sp/>engine<sp/>on<sp/>initialization.</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Constructor<sp/>arguments:</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/>-<sp/>*event*<sp/>(*str*)<sp/>--<sp/>the<sp/>name<sp/>of<sp/>the<sp/>recognition<sp/>event<sp/>to<sp/>register<sp/>for</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(e.g.<sp/>``&quot;on_begin&quot;``).</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/>-<sp/>*function*<sp/>(*callable*)<sp/>--<sp/>function<sp/>to<sp/>call<sp/>on<sp/>the<sp/>specified</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recognition<sp/>event.</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver_1a73666b66ae079bafc94d7b60f6e8351d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver_1a73666b66ae079bafc94d7b60f6e8351d" kindref="member">__init__</ref>(self,<sp/>event,<sp/>function):</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RecognitionObserver.__init__(self)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>hasattr(self,<sp/>event):</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;&apos;%s&apos;<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>recognition<sp/>event&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>event)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>callable(function):</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;callback<sp/>function<sp/>for<sp/>event<sp/>&apos;%s&apos;<sp/>is<sp/>not<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;callable&quot;</highlight><highlight class="normal"><sp/>%<sp/>event)</highlight></codeline>
<codeline lineno="58" refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver_1af17eae2f0da5ec1f249e23fbc7c81851" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver_1af17eae2f0da5ec1f249e23fbc7c81851" kindref="member">_function</ref><sp/>=<sp/>function</highlight></codeline>
<codeline lineno="59" refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver_1ae7d16117c7325e9b0587a2125c91f6cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver_1ae7d16117c7325e9b0587a2125c91f6cf" kindref="member">_event</ref><sp/>=<sp/>event</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1recobs_1_1RecognitionObserver_1af93bd67b35f9e677a04926d513d2f037" kindref="member">register</ref>()</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver_1ae82a732fa2cc21d61fdee9e8f9f37899" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver_1ae82a732fa2cc21d61fdee9e8f9f37899" kindref="member">_process_recognition_event</ref>(self,<sp/>cb_name,<sp/>required_names,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>(self.<ref refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver_1ae7d16117c7325e9b0587a2125c91f6cf" kindref="member">_event</ref><sp/>==<sp/>cb_name<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>callable(self.<ref refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver_1af17eae2f0da5ec1f249e23fbc7c81851" kindref="member">_function</ref>)):</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>the<sp/>callback<sp/>function<sp/>takes<sp/>keyword<sp/>arguments,<sp/>only<sp/>send<sp/>those</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>that<sp/>it<sp/>accepts.<sp/>Always<sp/>pass<sp/>required<sp/>names.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func_kwargs<sp/>=<sp/>kwargs</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>func_kwargs:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argspec<sp/>=<sp/>getargspec(self.<ref refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver_1af17eae2f0da5ec1f249e23fbc7c81851" kindref="member">_function</ref>)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_names,<sp/>kwargs_names<sp/>=<sp/>argspec[0],<sp/>argspec[2]</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>kwargs_names:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func_kwargs<sp/>=<sp/>{k:<sp/>v<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k,<sp/>v)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>func_kwargs.items()</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>arg_names<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>required_names}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Call<sp/>the<sp/>callback<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver_1af17eae2f0da5ec1f249e23fbc7c81851" kindref="member">_function</ref>(**func_kwargs)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver_1afc44fc7e370e545c447ea59594293b57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver_1afc44fc7e370e545c447ea59594293b57" kindref="member">on_begin</ref>(self):</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver_1ae82a732fa2cc21d61fdee9e8f9f37899" kindref="member">_process_recognition_event</ref>(</highlight><highlight class="stringliteral">&quot;on_begin&quot;</highlight><highlight class="normal">,<sp/>[])</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver_1ae457f3030646cc01cea39acbde1ea7d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver_1ae457f3030646cc01cea39acbde1ea7d0" kindref="member">on_recognition</ref>(self,<sp/>words,<sp/>rule,<sp/>node,<sp/>results):</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver_1ae82a732fa2cc21d61fdee9e8f9f37899" kindref="member">_process_recognition_event</ref>(</highlight><highlight class="stringliteral">&quot;on_recognition&quot;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&quot;words&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>words=words,<sp/>rule=rule,<sp/>node=node,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results=results)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver_1a1684a54afa2a2d788ca81847c87b4c46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver_1a1684a54afa2a2d788ca81847c87b4c46" kindref="member">on_failure</ref>(self,<sp/>results):</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver_1ae82a732fa2cc21d61fdee9e8f9f37899" kindref="member">_process_recognition_event</ref>(</highlight><highlight class="stringliteral">&quot;on_failure&quot;</highlight><highlight class="normal">,<sp/>[],<sp/>results=results)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver_1aecc986f8bed9d345efbf4203af37e475" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver_1aecc986f8bed9d345efbf4203af37e475" kindref="member">on_end</ref>(self,<sp/>results):</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver_1ae82a732fa2cc21d61fdee9e8f9f37899" kindref="member">_process_recognition_event</ref>(</highlight><highlight class="stringliteral">&quot;on_end&quot;</highlight><highlight class="normal">,<sp/>[],<sp/>results=results)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver_1a2da3e84ab055b981cb13d4c82e2d870c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver_1a2da3e84ab055b981cb13d4c82e2d870c" kindref="member">on_post_recognition</ref>(self,<sp/>words,<sp/>rule,<sp/>node,<sp/>results):</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver_1ae82a732fa2cc21d61fdee9e8f9f37899" kindref="member">_process_recognition_event</ref>(</highlight><highlight class="stringliteral">&quot;on_post_recognition&quot;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&quot;words&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>words=words,<sp/>rule=rule,<sp/>node=node,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results=results)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="namespacedragonfly_1_1grammar_1_1recobs__callbacks_1a236b540cbed1e00390d6bddad3a19b5d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacedragonfly_1_1grammar_1_1recobs__callbacks_1a236b540cbed1e00390d6bddad3a19b5d" kindref="member">register_beginning_callback</ref>(function):</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Register<sp/>a<sp/>callback<sp/>function<sp/>to<sp/>be<sp/>called<sp/>when<sp/>speech<sp/>starts.</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>:class:`CallbackRecognitionObserver`<sp/>object<sp/>returned<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>can<sp/>be<sp/>used<sp/>to<sp/>unregister<sp/>the<sp/>callback<sp/>function.</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>function:<sp/>callback<sp/>function</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>function:<sp/>callable</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:returns:<sp/>recognition<sp/>observer</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:rtype:<sp/>CallbackRecognitionObserver</highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver" kindref="compound">CallbackRecognitionObserver</ref>(</highlight><highlight class="stringliteral">&quot;on_begin&quot;</highlight><highlight class="normal">,<sp/>function)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="namespacedragonfly_1_1grammar_1_1recobs__callbacks_1a37954238bdaee2b124e298b8aad31522" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacedragonfly_1_1grammar_1_1recobs__callbacks_1a37954238bdaee2b124e298b8aad31522" kindref="member">register_recognition_callback</ref>(function):</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="121"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Register<sp/>a<sp/>callback<sp/>function<sp/>to<sp/>be<sp/>called<sp/>on<sp/>recognition<sp/>success.</highlight></codeline>
<codeline lineno="122"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="123"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>:class:`CallbackRecognitionObserver`<sp/>object<sp/>returned<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="124"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>can<sp/>be<sp/>used<sp/>to<sp/>unregister<sp/>the<sp/>callback<sp/>function.</highlight></codeline>
<codeline lineno="125"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="126"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>function:<sp/>callback<sp/>function</highlight></codeline>
<codeline lineno="127"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>function:<sp/>callable</highlight></codeline>
<codeline lineno="128"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:returns:<sp/>recognition<sp/>observer</highlight></codeline>
<codeline lineno="129"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:rtype:<sp/>CallbackRecognitionObserver</highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver" kindref="compound">CallbackRecognitionObserver</ref>(</highlight><highlight class="stringliteral">&quot;on_recognition&quot;</highlight><highlight class="normal">,<sp/>function)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="namespacedragonfly_1_1grammar_1_1recobs__callbacks_1a0aadc85b5599544f3d2e3346e451c780" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacedragonfly_1_1grammar_1_1recobs__callbacks_1a0aadc85b5599544f3d2e3346e451c780" kindref="member">register_failure_callback</ref>(function):</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Register<sp/>a<sp/>callback<sp/>function<sp/>to<sp/>be<sp/>called<sp/>on<sp/>recognition<sp/>failures.</highlight></codeline>
<codeline lineno="137"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="138"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>:class:`CallbackRecognitionObserver`<sp/>object<sp/>returned<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>can<sp/>be<sp/>used<sp/>to<sp/>unregister<sp/>the<sp/>callback<sp/>function.</highlight></codeline>
<codeline lineno="140"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="141"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>function:<sp/>callback<sp/>function</highlight></codeline>
<codeline lineno="142"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>function:<sp/>callable</highlight></codeline>
<codeline lineno="143"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:returns:<sp/>recognition<sp/>observer</highlight></codeline>
<codeline lineno="144"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:rtype:<sp/>CallbackRecognitionObserver</highlight></codeline>
<codeline lineno="145"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver" kindref="compound">CallbackRecognitionObserver</ref>(</highlight><highlight class="stringliteral">&quot;on_failure&quot;</highlight><highlight class="normal">,<sp/>function)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="namespacedragonfly_1_1grammar_1_1recobs__callbacks_1ad8b59ee287219786b05506bfc17dbf92" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacedragonfly_1_1grammar_1_1recobs__callbacks_1ad8b59ee287219786b05506bfc17dbf92" kindref="member">register_ending_callback</ref>(function):</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Register<sp/>a<sp/>callback<sp/>function<sp/>to<sp/>be<sp/>called<sp/>when<sp/>speech<sp/>ends,<sp/>either</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>successfully<sp/>(after<sp/>calling<sp/>the<sp/>recognition<sp/>callback)<sp/>or<sp/>in<sp/>failure</highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>(after<sp/>calling<sp/>the<sp/>failure<sp/>callback).</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>:class:`CallbackRecognitionObserver`<sp/>object<sp/>returned<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>can<sp/>be<sp/>used<sp/>to<sp/>unregister<sp/>the<sp/>callback<sp/>function.</highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>function:<sp/>callback<sp/>function</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>function:<sp/>callable</highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:returns:<sp/>recognition<sp/>observer</highlight></codeline>
<codeline lineno="161"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:rtype:<sp/>CallbackRecognitionObserver</highlight></codeline>
<codeline lineno="162"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver" kindref="compound">CallbackRecognitionObserver</ref>(</highlight><highlight class="stringliteral">&quot;on_end&quot;</highlight><highlight class="normal">,<sp/>function)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="namespacedragonfly_1_1grammar_1_1recobs__callbacks_1a80c156432dd6c567c750189ed458a79a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacedragonfly_1_1grammar_1_1recobs__callbacks_1a80c156432dd6c567c750189ed458a79a" kindref="member">register_post_recognition_callback</ref>(function):</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="168"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Register<sp/>a<sp/>callback<sp/>function<sp/>to<sp/>be<sp/>called<sp/>after<sp/>all<sp/>rule<sp/>processing</highlight></codeline>
<codeline lineno="169"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>has<sp/>completed<sp/>after<sp/>recognition<sp/>success.</highlight></codeline>
<codeline lineno="170"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="171"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>:class:`CallbackRecognitionObserver`<sp/>object<sp/>returned<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="172"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>can<sp/>be<sp/>used<sp/>to<sp/>unregister<sp/>the<sp/>callback<sp/>function.</highlight></codeline>
<codeline lineno="173"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>function:<sp/>callback<sp/>function</highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>function:<sp/>callable</highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:returns:<sp/>recognition<sp/>observer</highlight></codeline>
<codeline lineno="177"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:rtype:<sp/>CallbackRecognitionObserver</highlight></codeline>
<codeline lineno="178"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdragonfly_1_1grammar_1_1recobs__callbacks_1_1CallbackRecognitionObserver" kindref="compound">CallbackRecognitionObserver</ref>(</highlight><highlight class="stringliteral">&quot;on_post_recognition&quot;</highlight><highlight class="normal">,<sp/>function)</highlight></codeline>
    </programlisting>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/recobs_callbacks.py"/>
  </compounddef>
</doxygen>
