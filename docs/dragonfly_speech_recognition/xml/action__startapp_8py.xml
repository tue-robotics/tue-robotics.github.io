<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="action__startapp_8py" kind="file" language="Python">
    <compoundname>action_startapp.py</compoundname>
    <innerclass refid="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp" prot="public">dragonfly::actions::action_startapp::BringApp</innerclass>
    <innerclass refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp" prot="public">dragonfly::actions::action_startapp::StartApp</innerclass>
    <innernamespace refid="namespacedragonfly_1_1actions_1_1action__startapp">dragonfly::actions::action_startapp</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacedragonfly_1_1actions_1_1action__startapp" refkind="compound"><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Dragonfly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(c)<sp/>Copyright<sp/>2007,<sp/>2008<sp/>by<sp/>Christo<sp/>Butcher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Licensed<sp/>under<sp/>the<sp/>LGPL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Dragonfly<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Dragonfly<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>License<sp/>along<sp/>with<sp/>Dragonfly.<sp/><sp/>If<sp/>not,<sp/>see</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral">BringApp<sp/>and<sp/>StartApp<sp/>actions</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral">============================================================================</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral">The<sp/>:class:`StartApp`<sp/>and<sp/>:class:`BringApp`<sp/>action<sp/>classes<sp/>are<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral">start<sp/>an<sp/>application<sp/>and<sp/>bring<sp/>it<sp/>to<sp/>the<sp/>foreground.<sp/><sp/>:class:`StartApp`</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral">starts<sp/>an<sp/>application<sp/>by<sp/>running<sp/>an<sp/>executable<sp/>file,<sp/>while</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral">:class:`BringApp`<sp/>first<sp/>checks<sp/>whether<sp/>the<sp/>application<sp/>is<sp/>already<sp/>running</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral">and<sp/>if<sp/>so<sp/>brings<sp/>it<sp/>to<sp/>the<sp/>foreground,<sp/>otherwise<sp/>starts<sp/>it<sp/>by<sp/>running<sp/>the</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral">executable<sp/>file.</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral">Example<sp/>usage</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral">----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral">The<sp/>following<sp/>example<sp/>brings<sp/>Notepad<sp/>to<sp/>the<sp/>foreground<sp/>if<sp/>it<sp/>is<sp/>already</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral">open,<sp/>otherwise<sp/>it<sp/>starts<sp/>Notepad::</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/><sp/>BringApp(r&quot;C:\\Windows\\system32\\notepad.exe&quot;).execute()</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral">Note<sp/>that<sp/>the<sp/>path<sp/>to<sp/>*notepad.exe*<sp/>given<sp/>above<sp/>might<sp/>not<sp/>be<sp/>correct<sp/>for</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral">your<sp/>computer,<sp/>since<sp/>it<sp/>depends<sp/>on<sp/>the<sp/>operating<sp/>system<sp/>and<sp/>its</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral">configuration.</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral">In<sp/>some<sp/>cases<sp/>an<sp/>application<sp/>might<sp/>be<sp/>accessible<sp/>simply<sp/>through<sp/>the<sp/>file</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral">name<sp/>of<sp/>its<sp/>executable,<sp/>without<sp/>specifying<sp/>the<sp/>directory.<sp/><sp/>This<sp/>depends<sp/>on</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral">the<sp/>operating<sp/>system&apos;s<sp/>path<sp/>configuration.<sp/><sp/>For<sp/>example,<sp/>on<sp/>the<sp/>author&apos;s</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral">computer<sp/>the<sp/>following<sp/>command<sp/>successfully<sp/>starts<sp/>Notepad::</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"><sp/><sp/><sp/>BringApp(&quot;notepad&quot;).execute()</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral">Applications<sp/>on<sp/>MacOS<sp/>are<sp/>started<sp/>and<sp/>switched<sp/>to<sp/>using<sp/>the<sp/>application</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral">name::</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/>BringApp(&quot;System<sp/>Preferences&quot;).execute()</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral">Class<sp/>reference</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral">----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>locale</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os.path</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>subprocess<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Popen</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>six</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1actions_1_1action__base" kindref="compound">dragonfly.actions.action_base</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ActionBase,<sp/>ActionError</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1actions_1_1action__focuswindow" kindref="compound">dragonfly.actions.action_focuswindow</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>FocusWindow</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1actions_1_1action__waitwindow" kindref="compound">dragonfly.actions.action_waitwindow</ref><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>WaitWindow</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1windows_1_1window" kindref="compound">dragonfly.windows.window</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Window</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp" kindref="compound">StartApp</ref>(<ref refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase" kindref="compound">ActionBase</ref>):</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Start<sp/>an<sp/>application.</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>When<sp/>this<sp/>action<sp/>is<sp/>executed,<sp/>it<sp/>runs<sp/>a<sp/>file<sp/>(executable),</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optionally<sp/>with<sp/>commandline<sp/>arguments.</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1ab59ccf3b7ba563862726701f417ade3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1ab59ccf3b7ba563862726701f417ade3d" kindref="member">__init__</ref>(self,<sp/>*args,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Constructor<sp/>arguments:</highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*args*<sp/>(variable<sp/>argument<sp/>list<sp/>of<sp/>*str*&apos;s)<sp/>--</highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>these<sp/>strings<sp/>are<sp/>passed<sp/>to<sp/>subprocess.Popen()</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>start<sp/>the<sp/>application<sp/>as<sp/>a<sp/>child<sp/>process</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*cwd*<sp/>(*str*,<sp/>default<sp/>*None*)<sp/>--</highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>not<sp/>*None*,<sp/>then<sp/>start<sp/>the<sp/>application<sp/>in<sp/>this</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>directory</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*focus_after_start*<sp/>(*bool*,<sp/>default<sp/>*False*)<sp/>--</highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>*True*,<sp/>then<sp/>attempt<sp/>to<sp/>bring<sp/>the<sp/>window<sp/>to<sp/>the<sp/>foreground</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>after<sp/>starting<sp/>the<sp/>application.</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>single<sp/>*list*<sp/>or<sp/>*tuple*<sp/>argument<sp/>can<sp/>be<sp/>used<sp/>instead<sp/>of</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variable<sp/>arguments.</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActionBase.__init__(self)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>==<sp/>1<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>isinstance(args[0],<sp/>(tuple,<sp/>list)):</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args<sp/>=<sp/>args[0]<sp/><sp/></highlight><highlight class="comment">#<sp/>use<sp/>the<sp/>sub-list<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1abafd8af1b415a0d86bd36be83d2c93be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1abafd8af1b415a0d86bd36be83d2c93be" kindref="member">_args</ref><sp/>=<sp/>args</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1ad524bb51b02ee691eeebc1df3cdb511f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1ad524bb51b02ee691eeebc1df3cdb511f" kindref="member">_cwd</ref><sp/>=<sp/>kwargs.pop(</highlight><highlight class="stringliteral">&quot;cwd&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="112" refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1a6d8386b1125ecf727ca3f74f3c9d04a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1a6d8386b1125ecf727ca3f74f3c9d04a9" kindref="member">_focus_after_start</ref><sp/>=<sp/>kwargs.pop(</highlight><highlight class="stringliteral">&quot;focus_after_start&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>kwargs:</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classdragonfly_1_1actions_1_1action__base_1_1ActionError" kindref="compound">ActionError</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>keyword<sp/>arguments:<sp/>%r&quot;</highlight><highlight class="normal"><sp/>%<sp/>kwargs)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Expand<sp/>any<sp/>variables<sp/>within<sp/>path<sp/>names.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1abafd8af1b415a0d86bd36be83d2c93be" kindref="member">_args</ref><sp/>=<sp/>[self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1a7e2e2fa56fb2bdcfafe96dfe5346516d" kindref="member">_interpret</ref>(a)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1abafd8af1b415a0d86bd36be83d2c93be" kindref="member">_args</ref>]</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1ad524bb51b02ee691eeebc1df3cdb511f" kindref="member">_cwd</ref>:</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1ad524bb51b02ee691eeebc1df3cdb511f" kindref="member">_cwd</ref><sp/>=<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1a7e2e2fa56fb2bdcfafe96dfe5346516d" kindref="member">_interpret</ref>(self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1ad524bb51b02ee691eeebc1df3cdb511f" kindref="member">_cwd</ref>)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1a112aee1310a87b7ebbead3fd3bc23599" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1ac68cfe7357d983686ceaaa2da818357e" kindref="member">_str</ref><sp/>=<sp/>str(</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">.join(repr(a)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1abafd8af1b415a0d86bd36be83d2c93be" kindref="member">_args</ref>))</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>@classmethod</highlight></codeline>
<codeline lineno="124" refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1a7e2e2fa56fb2bdcfafe96dfe5346516d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1a7e2e2fa56fb2bdcfafe96dfe5346516d" kindref="member">_interpret</ref>(cls,<sp/>path):</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(path,<sp/>six.string_types):</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;expected<sp/>string<sp/>argument<sp/>for<sp/>path,<sp/>but<sp/>got<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>path)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Encode<sp/>text<sp/>strings<sp/>if<sp/>this<sp/>is<sp/>Python<sp/>2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>six.PY2<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>isinstance(path,<sp/>six.text_type):</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encoding<sp/>=<sp/>locale.getpreferredencoding()</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/>path.encode(encoding)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os.path.expanduser(os.path.expandvars(path))</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1ad707cd8ff1d6aaa5d13410cddcb2244b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1ad707cd8ff1d6aaa5d13410cddcb2244b" kindref="member">_start_app_process</ref>(self):</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Popen(self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1abafd8af1b415a0d86bd36be83d2c93be" kindref="member">_args</ref>,<sp/>cwd=self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1ad524bb51b02ee691eeebc1df3cdb511f" kindref="member">_cwd</ref>)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classdragonfly_1_1actions_1_1action__base_1_1ActionError" kindref="compound">ActionError</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>start<sp/>app<sp/>%s:<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self.<ref refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1ac68cfe7357d983686ceaaa2da818357e" kindref="member">_str</ref>,<sp/>e))</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1a2f5f380c10311d8013499f1c5f0b631a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1a2f5f380c10311d8013499f1c5f0b631a" kindref="member">_focus_window_after_starting</ref>(self,<sp/>pid):</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exe<sp/>=<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1abafd8af1b415a0d86bd36be83d2c93be" kindref="member">_args</ref>[0]</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Wait<sp/>for<sp/>the<sp/>window<sp/>to<sp/>appear<sp/>for<sp/>N<sp/>seconds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action<sp/>=<sp/><ref refid="classdragonfly_1_1actions_1_1action__waitwindow_1_1WaitWindow" kindref="compound">WaitWindow</ref>(executable=exe,<sp/>timeout=timeout)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>action.execute():</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Bring<sp/>the<sp/>window<sp/>to<sp/>the<sp/>foreground.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Window.get_foreground().set_foreground()</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>application<sp/>window<sp/>wasn&apos;t<sp/>focused,<sp/>so<sp/>try<sp/>to<sp/>focus<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target<sp/>=<sp/>pid</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>time.time()</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>time.time()<sp/>-<sp/>start<sp/>&lt;<sp/>timeout:</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>window<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>Window.get_matching_windows(exe):</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>target<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>window.pid<sp/>==<sp/>target:</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window.set_foreground()</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>found:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1a4add9e605f74b5a867cbb3942c21f2fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1a4add9e605f74b5a867cbb3942c21f2fd" kindref="member">_darwin_start_app</ref>(self):</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Try<sp/>to<sp/>use<sp/>the<sp/>macOS<sp/>&apos;open&apos;<sp/>command-line<sp/>program<sp/>to<sp/>start<sp/>a<sp/>new</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>instance<sp/>of<sp/>the<sp/>specified<sp/>application.<sp/>Return<sp/>False<sp/>if<sp/>this<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>either<sp/>not<sp/>applicable<sp/>or<sp/>doesn&apos;t<sp/>work.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try_using_open<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.platform<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;darwin&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>len(self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1abafd8af1b415a0d86bd36be83d2c93be" kindref="member">_args</ref>)<sp/>==<sp/>1<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>os.path.isabs(self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1abafd8af1b415a0d86bd36be83d2c93be" kindref="member">_args</ref>[0])</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>try_using_open:</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>process<sp/>=<sp/>Popen([</highlight><highlight class="stringliteral">&apos;open&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;-n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;-a&apos;</highlight><highlight class="normal">,<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1abafd8af1b415a0d86bd36be83d2c93be" kindref="member">_args</ref>[0]])</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>process.wait()<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1a64fc2f9f68e768a8bde05e38e0fecf32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1a64fc2f9f68e768a8bde05e38e0fecf32" kindref="member">_execute</ref>(self,<sp/>data=None):</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a3861efea158692698e3a4f9d79ec7395" kindref="member">_log</ref>.debug(</highlight><highlight class="stringliteral">&quot;Starting<sp/>app:<sp/>%r&quot;</highlight><highlight class="normal">,<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1abafd8af1b415a0d86bd36be83d2c93be" kindref="member">_args</ref>)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1a4add9e605f74b5a867cbb3942c21f2fd" kindref="member">_darwin_start_app</ref>():</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>either<sp/>isn&apos;t<sp/>macOS<sp/>or<sp/>the<sp/>&apos;open&apos;<sp/>program<sp/>didn&apos;t<sp/>work,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>start<sp/>the<sp/>application<sp/>as<sp/>normal<sp/>and<sp/>get<sp/>the<sp/>process<sp/>ID.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid<sp/>=<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1ad707cd8ff1d6aaa5d13410cddcb2244b" kindref="member">_start_app_process</ref>().pid</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>specified,<sp/>focus<sp/>the<sp/>application<sp/>after<sp/>starting<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1a6d8386b1125ecf727ca3f74f3c9d04a9" kindref="member">_focus_after_start</ref>:</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1a2f5f380c10311d8013499f1c5f0b631a" kindref="member">_focus_window_after_starting</ref>(pid)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp" kindref="compound">BringApp</ref>(<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp" kindref="compound">StartApp</ref>):</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Bring<sp/>an<sp/>application<sp/>to<sp/>the<sp/>foreground,<sp/>starting<sp/>it<sp/>if<sp/>it<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yet<sp/>running.</highlight></codeline>
<codeline lineno="199"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="200"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>When<sp/>this<sp/>action<sp/>is<sp/>executed,<sp/>it<sp/>looks<sp/>for<sp/>an<sp/>existing<sp/>window<sp/>of</highlight></codeline>
<codeline lineno="201"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>application<sp/>specified<sp/>in<sp/>the<sp/>constructor<sp/>arguments.<sp/><sp/>If<sp/>an</highlight></codeline>
<codeline lineno="202"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>existing<sp/>window<sp/>is<sp/>found,<sp/>that<sp/>window<sp/>is<sp/>brought<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="203"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foreground.<sp/><sp/>On<sp/>the<sp/>other<sp/>hand,<sp/>if<sp/>no<sp/>window<sp/>is<sp/>found<sp/>the</highlight></codeline>
<codeline lineno="204"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>application<sp/>is<sp/>started.</highlight></codeline>
<codeline lineno="205"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="206"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Note<sp/>that<sp/>the<sp/>constructor<sp/>arguments<sp/>are<sp/>identical<sp/>to<sp/>those<sp/>used<sp/>by</highlight></codeline>
<codeline lineno="207"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>:class:`StartApp`<sp/>action<sp/>class.</highlight></codeline>
<codeline lineno="208"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="209"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp_1a14f18744e1659a6b58e42141b829dac5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp_1a14f18744e1659a6b58e42141b829dac5" kindref="member">__init__</ref>(self,<sp/>*args,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="213"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Constructor<sp/>arguments:</highlight></codeline>
<codeline lineno="214"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*args*<sp/>(variable<sp/>argument<sp/>list<sp/>of<sp/>*str*&apos;s)<sp/>--</highlight></codeline>
<codeline lineno="215"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>these<sp/>strings<sp/>are<sp/>passed<sp/>to<sp/>:meth:`subprocess.Popen`</highlight></codeline>
<codeline lineno="216"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>start<sp/>the<sp/>application<sp/>as<sp/>a<sp/>child<sp/>process</highlight></codeline>
<codeline lineno="217"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*cwd*<sp/>(*str*,<sp/>default<sp/>*None*)<sp/>--</highlight></codeline>
<codeline lineno="218"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>not<sp/>*None*,<sp/>then<sp/>start<sp/>the<sp/>application<sp/>in<sp/>this</highlight></codeline>
<codeline lineno="219"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>directory</highlight></codeline>
<codeline lineno="220"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*title*<sp/>(*str*,<sp/>default<sp/>*None*)<sp/>--</highlight></codeline>
<codeline lineno="221"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>not<sp/>*None*,<sp/>then<sp/>match<sp/>existing<sp/>windows<sp/>using<sp/>this</highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title.</highlight></codeline>
<codeline lineno="223"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*index*<sp/>(*str*<sp/>or<sp/>*int*)<sp/>--<sp/>zero-based<sp/>index<sp/>of<sp/>the<sp/>target</highlight></codeline>
<codeline lineno="224"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window,<sp/>for<sp/>multiple<sp/>matching<sp/>windows;<sp/>can<sp/>be<sp/>a<sp/>string<sp/>(for</highlight></codeline>
<codeline lineno="225"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>substitution)<sp/>but<sp/>must<sp/>be<sp/>convertible<sp/>to<sp/>an<sp/>integer.</highlight></codeline>
<codeline lineno="226"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*filter_func*<sp/>(*callable*)<sp/>--<sp/>called<sp/>with<sp/>a<sp/>single<sp/>argument</highlight></codeline>
<codeline lineno="227"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(the<sp/>window<sp/>object),<sp/>and<sp/>should<sp/>return<sp/>``True``<sp/>for<sp/>your</highlight></codeline>
<codeline lineno="228"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target<sp/>windows;<sp/>example:</highlight></codeline>
<codeline lineno="229"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``lambda<sp/>window:<sp/>window.get_position().dy<sp/>&gt;<sp/>100``.</highlight></codeline>
<codeline lineno="230"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*focus_after_start*<sp/>(*bool*,<sp/>default<sp/>*False*)<sp/>--</highlight></codeline>
<codeline lineno="231"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>*True*,<sp/>then<sp/>attempt<sp/>to<sp/>bring<sp/>the<sp/>window<sp/>to<sp/>the<sp/>foreground</highlight></codeline>
<codeline lineno="232"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>after<sp/>starting<sp/>the<sp/>application.<sp/>Does<sp/>nothing<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="233"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>application<sp/>is<sp/>already<sp/>running.</highlight></codeline>
<codeline lineno="234"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*focus_only*<sp/>(*bool*,<sp/>default<sp/>*False*)<sp/>--<sp/>if<sp/>*True*,<sp/>then</highlight></codeline>
<codeline lineno="235"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attempt<sp/>to<sp/>focus<sp/>a<sp/>matching<sp/>window<sp/>without<sp/>raising<sp/>it<sp/>by</highlight></codeline>
<codeline lineno="236"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>using<sp/>the<sp/>*set_focus()*<sp/>method<sp/>instead<sp/>of<sp/>*set_foreground()*.</highlight></codeline>
<codeline lineno="237"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>argument<sp/>may<sp/>do<sp/>nothing<sp/>depending<sp/>on<sp/>the<sp/>platform.</highlight></codeline>
<codeline lineno="238"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="239"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp_1a7e4ea4f4c2ac501e0b33e5aa506bd5ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp_1a7e4ea4f4c2ac501e0b33e5aa506bd5ae" kindref="member">_title</ref><sp/>=<sp/>kwargs.pop(</highlight><highlight class="stringliteral">&quot;title&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="241" refid="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp_1afdd66e7a83a229ba2300adacc2ee3c11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp_1afdd66e7a83a229ba2300adacc2ee3c11" kindref="member">_index</ref><sp/>=<sp/>kwargs.pop(</highlight><highlight class="stringliteral">&quot;index&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="242" refid="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp_1ad3635da4453c1bd645d86200773d6145" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp_1ad3635da4453c1bd645d86200773d6145" kindref="member">_filter_func</ref><sp/>=<sp/>kwargs.pop(</highlight><highlight class="stringliteral">&quot;filter_func&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="243" refid="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp_1a6adb7f9dc093bc1ece85843c0126ee85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp_1a6adb7f9dc093bc1ece85843c0126ee85" kindref="member">_focus_only</ref><sp/>=<sp/>kwargs.pop(</highlight><highlight class="stringliteral">&quot;focus_only&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartApp.__init__(self,<sp/>*args,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp_1a720ccc0563558104552ece8232392585" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp_1a720ccc0563558104552ece8232392585" kindref="member">_execute</ref>(self,<sp/>data=None):</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a3861efea158692698e3a4f9d79ec7395" kindref="member">_log</ref>.debug(</highlight><highlight class="stringliteral">&quot;Bringing<sp/>app:<sp/>%r&quot;</highlight><highlight class="normal">,<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1abafd8af1b415a0d86bd36be83d2c93be" kindref="member">_args</ref>)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target<sp/>=<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1abafd8af1b415a0d86bd36be83d2c93be" kindref="member">_args</ref>[0].lower()</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title<sp/>=<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp_1a7e4ea4f4c2ac501e0b33e5aa506bd5ae" kindref="member">_title</ref></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp_1afdd66e7a83a229ba2300adacc2ee3c11" kindref="member">_index</ref></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filter_func<sp/>=<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp_1ad3635da4453c1bd645d86200773d6145" kindref="member">_filter_func</ref></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focus_only<sp/>=<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp_1a6adb7f9dc093bc1ece85843c0126ee85" kindref="member">_focus_only</ref></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focus_action<sp/>=<sp/><ref refid="classdragonfly_1_1actions_1_1action__focuswindow_1_1FocusWindow" kindref="compound">FocusWindow</ref>(executable=target,<sp/>title=title,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index=index,<sp/>filter_func=filter_func,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focus_only=focus_only)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Attempt<sp/>to<sp/>focus<sp/>on<sp/>an<sp/>existing<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>focus_action.execute():</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Failed<sp/>to<sp/>focus<sp/>on<sp/>an<sp/>existing<sp/>window,<sp/>so<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>the<sp/>application.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartApp._execute(self,<sp/>data)</highlight></codeline>
    </programlisting>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_startapp.py"/>
  </compounddef>
</doxygen>
