<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::test::rule_testcase::RuleTestCase</compoundname>
    <basecompoundref prot="public" virt="non-virtual">TestCase</basecompoundref>
    <derivedcompoundref refid="classdragonfly_1_1test_1_1test__basic__rule_1_1TestBasicRule" prot="public" virt="non-virtual">dragonfly.test.test_basic_rule.TestBasicRule</derivedcompoundref>
    <derivedcompoundref refid="classdragonfly_1_1test_1_1test__contexts_1_1TestRules" prot="public" virt="non-virtual">dragonfly.test.test_contexts.TestRules</derivedcompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase_1a6965e7fe66c8622880ce04d31d498be7" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.test.rule_testcase.RuleTestCase::engine</definition>
        <argsstring></argsstring>
        <name>engine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/rule_testcase.py" line="37" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/rule_testcase.py" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase_1ac0e05486740c77c7cdb372a22a447267" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.test.rule_testcase.RuleTestCase::grammar</definition>
        <argsstring></argsstring>
        <name>grammar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/rule_testcase.py" line="38" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/rule_testcase.py" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase_1a6264fea87e5ff9d4021d63ee05284c55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.rule_testcase.RuleTestCase.add_rule</definition>
        <argsstring>(self, rule)</argsstring>
        <name>add_rule</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>rule</type>
          <defname>rule</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/rule_testcase.py" line="48" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/rule_testcase.py" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase_1a32a1f8387c860f2ba559a8adf17dfe24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.rule_testcase.RuleTestCase.recognize</definition>
        <argsstring>(self, words)</argsstring>
        <name>recognize</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>words</type>
          <defname>words</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/rule_testcase.py" line="51" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/rule_testcase.py" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase_1af3350ac4f29162eabc346e9d1969b0df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.rule_testcase.RuleTestCase.recognize_extras</definition>
        <argsstring>(self, words)</argsstring>
        <name>recognize_extras</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>words</type>
          <defname>words</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/rule_testcase.py" line="57" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/rule_testcase.py" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase_1a56e9001773b834c7db1d51b71c83e950" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.rule_testcase.RuleTestCase.recognize_node</definition>
        <argsstring>(self, words)</argsstring>
        <name>recognize_node</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>words</type>
          <defname>words</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/rule_testcase.py" line="54" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/rule_testcase.py" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase_1a1d6e7edcf9eff7096858702746eb6550" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.rule_testcase.RuleTestCase.run</definition>
        <argsstring>(self, result=None)</argsstring>
        <name>run</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>result</type>
          <defname>result</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/rule_testcase.py" line="36" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/rule_testcase.py" bodystart="36" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase_1a2466b6a01371604a9a27a541425d1d2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.rule_testcase.RuleTestCase.tearDown</definition>
        <argsstring>(self)</argsstring>
        <name>tearDown</name>
        <reimplementedby refid="classdragonfly_1_1test_1_1test__contexts_1_1TestRules_1a41429534a7d11c96eb427219dac40ead">tearDown</reimplementedby>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/rule_testcase.py" line="41" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/rule_testcase.py" bodystart="41" bodyend="47"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim></verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dragonfly.test.rule_testcase.RuleTestCase</label>
        <link refid="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>TestCase</label>
      </node>
      <node id="3">
        <label>dragonfly.test.test_basic_rule.TestBasicRule</label>
        <link refid="classdragonfly_1_1test_1_1test__basic__rule_1_1TestBasicRule"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>dragonfly.test.test_contexts.TestRules</label>
        <link refid="classdragonfly_1_1test_1_1test__contexts_1_1TestRules"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>dragonfly.test.rule_testcase.RuleTestCase</label>
        <link refid="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>TestCase</label>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/rule_testcase.py" line="32" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/rule_testcase.py" bodystart="32" bodyend="59"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase_1a6264fea87e5ff9d4021d63ee05284c55" prot="public" virt="non-virtual"><scope>dragonfly::test::rule_testcase::RuleTestCase</scope><name>add_rule</name></member>
      <member refid="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase_1a6965e7fe66c8622880ce04d31d498be7" prot="public" virt="non-virtual"><scope>dragonfly::test::rule_testcase::RuleTestCase</scope><name>engine</name></member>
      <member refid="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase_1ac0e05486740c77c7cdb372a22a447267" prot="public" virt="non-virtual"><scope>dragonfly::test::rule_testcase::RuleTestCase</scope><name>grammar</name></member>
      <member refid="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase_1a32a1f8387c860f2ba559a8adf17dfe24" prot="public" virt="non-virtual"><scope>dragonfly::test::rule_testcase::RuleTestCase</scope><name>recognize</name></member>
      <member refid="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase_1af3350ac4f29162eabc346e9d1969b0df" prot="public" virt="non-virtual"><scope>dragonfly::test::rule_testcase::RuleTestCase</scope><name>recognize_extras</name></member>
      <member refid="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase_1a56e9001773b834c7db1d51b71c83e950" prot="public" virt="non-virtual"><scope>dragonfly::test::rule_testcase::RuleTestCase</scope><name>recognize_node</name></member>
      <member refid="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase_1a1d6e7edcf9eff7096858702746eb6550" prot="public" virt="non-virtual"><scope>dragonfly::test::rule_testcase::RuleTestCase</scope><name>run</name></member>
      <member refid="classdragonfly_1_1test_1_1rule__testcase_1_1RuleTestCase_1a2466b6a01371604a9a27a541425d1d2c" prot="public" virt="non-virtual"><scope>dragonfly::test::rule_testcase::RuleTestCase</scope><name>tearDown</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
