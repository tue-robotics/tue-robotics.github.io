<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="action__mouse_8py" kind="file" language="Python">
    <compoundname>action_mouse.py</compoundname>
    <innerclass refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse" prot="public">dragonfly::actions::action_mouse::Mouse</innerclass>
    <innernamespace refid="namespacedragonfly_1_1actions_1_1action__mouse">dragonfly::actions::action_mouse</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacedragonfly_1_1actions_1_1action__mouse" refkind="compound"><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Dragonfly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(c)<sp/>Copyright<sp/>2007,<sp/>2008<sp/>by<sp/>Christo<sp/>Butcher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Licensed<sp/>under<sp/>the<sp/>LGPL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Dragonfly<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Dragonfly<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>License<sp/>along<sp/>with<sp/>Dragonfly.<sp/><sp/>If<sp/>not,<sp/>see</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral">Mouse<sp/>action</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral">============================================================================</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral">This<sp/>section<sp/>describes<sp/>the<sp/>:class:`Mouse`<sp/>action<sp/>object.<sp/><sp/>This<sp/>type<sp/>of</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral">action<sp/>is<sp/>used<sp/>for<sp/>controlling<sp/>the<sp/>mouse<sp/>cursor<sp/>and<sp/>clicking<sp/>mouse</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral">button.</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral">Below<sp/>you&apos;ll<sp/>find<sp/>some<sp/>simple<sp/>examples<sp/>of<sp/>:class:`Mouse`<sp/>usage,<sp/>followed</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral">by<sp/>a<sp/>detailed<sp/>description<sp/>of<sp/>the<sp/>available<sp/>mouse<sp/>events.</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral">Example<sp/>mouse<sp/>actions</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral">............................................................................</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral">The<sp/>following<sp/>code<sp/>moves<sp/>the<sp/>mouse<sp/>cursor<sp/>to<sp/>the<sp/>center<sp/>of<sp/>the<sp/>foreground</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral">window<sp/>(``(0.5,<sp/>0.5)``)<sp/>and<sp/>then<sp/>clicks<sp/>the<sp/>left<sp/>mouse<sp/>button<sp/>once</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral">(``left``)::</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>Parentheses<sp/>(&quot;(...)&quot;)<sp/>give<sp/>foreground-window-relative<sp/>locations.</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>Fractional<sp/>locations<sp/>(&quot;0.5&quot;,<sp/>&quot;0.9&quot;)<sp/>denote<sp/>a<sp/>location<sp/>relative<sp/>to</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/><sp/>the<sp/>window<sp/>or<sp/>desktop,<sp/>where<sp/>&quot;0.0,<sp/>0.0&quot;<sp/>is<sp/>the<sp/>top-left<sp/>corner</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/><sp/>and<sp/>&quot;1.0,<sp/>1.0&quot;<sp/>is<sp/>the<sp/>bottom-right<sp/>corner.</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>action<sp/>=<sp/>Mouse(&quot;(0.5,<sp/>0.5),<sp/>left&quot;)</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>action.execute()</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral">The<sp/>line<sp/>below<sp/>moves<sp/>the<sp/>mouse<sp/>cursor<sp/>to<sp/>100<sp/>pixels<sp/>left<sp/>of<sp/>the<sp/>primary</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral">monitor&apos;s<sp/>left<sp/>edge<sp/>(if<sp/>possible)<sp/>and<sp/>250<sp/>pixels<sp/>down<sp/>from<sp/>its<sp/>top<sp/>edge</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral">(``[-100,<sp/>250]``),<sp/>and<sp/>then<sp/>double<sp/>clicks<sp/>the<sp/>right<sp/>mouse<sp/>button</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral">(``right:2``)::</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>Square<sp/>brackets<sp/>(&quot;[...]&quot;)<sp/>give<sp/>desktop-relative<sp/>locations.</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>Integer<sp/>locations<sp/>(&quot;1&quot;,<sp/>&quot;100&quot;,<sp/>etc.)<sp/>denote<sp/>numbers<sp/>of<sp/>pixels.</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>Negative<sp/>numbers<sp/>(&quot;-100&quot;)<sp/>are<sp/>counted<sp/>from<sp/>the<sp/>left-edge<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/><sp/>primary<sp/>monitor.<sp/>They<sp/>are<sp/>used<sp/>to<sp/>access<sp/>monitors<sp/>above<sp/>or<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/><sp/>left<sp/>of<sp/>the<sp/>primary<sp/>monitor.</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Mouse(&quot;[-100,<sp/>250],<sp/>right:2&quot;).execute()</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral">The<sp/>following<sp/>command<sp/>drags<sp/>the<sp/>mouse<sp/>from<sp/>the<sp/>top<sp/>right<sp/>corner<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral">foreground<sp/>window<sp/>(``(0.9,<sp/>10),<sp/>left:down``)<sp/>to<sp/>the<sp/>bottom<sp/>left<sp/>corner</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral">(``(25,<sp/>-0.1),<sp/>left:up``)::</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Mouse(&quot;(0.9,<sp/>10),<sp/>left:down,<sp/>(25,<sp/>-0.1),<sp/>left:up&quot;).execute()</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral">The<sp/>code<sp/>below<sp/>moves<sp/>the<sp/>mouse<sp/>cursor<sp/>25<sp/>pixels<sp/>right<sp/>and<sp/>25<sp/>pixels<sp/>up</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral">(``&lt;25,<sp/>-25&gt;``)::</highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>Angle<sp/>brackets<sp/>(&quot;&lt;...&gt;&quot;)<sp/>move<sp/>the<sp/>cursor<sp/>from<sp/>its<sp/>current<sp/>position</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/><sp/>by<sp/>the<sp/>given<sp/>number<sp/>of<sp/>pixels.</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Mouse(&quot;&lt;25,<sp/>-25&gt;&quot;).execute()</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral">Mouse<sp/>specification<sp/>format</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral">............................................................................</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral">The<sp/>*spec*<sp/>argument<sp/>passed<sp/>to<sp/>the<sp/>:class:`Mouse`<sp/>constructor<sp/>specifies</highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral">which<sp/>mouse<sp/>events<sp/>will<sp/>be<sp/>emulated.<sp/><sp/>It<sp/>is<sp/>a<sp/>string<sp/>consisting<sp/>of<sp/>one<sp/>or</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral">more<sp/>comma-separated<sp/>elements.<sp/><sp/>Each<sp/>of<sp/>these<sp/>elements<sp/>has<sp/>one<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral">following<sp/>possible<sp/>formats:</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral">Mouse<sp/>movement<sp/>actions:</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"><sp/>-<sp/>move<sp/>the<sp/>cursor<sp/>relative<sp/>to<sp/>the<sp/>top-left<sp/>corner<sp/>of<sp/>the<sp/>desktop<sp/>monitor</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/><sp/><sp/>containing<sp/>coordinates<sp/>``[0,<sp/>0]``<sp/>(i.e.<sp/>the<sp/>primary<sp/>monitor):</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/>``[``<sp/>*number*<sp/>``,``<sp/>*number*<sp/>``]``</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/>-<sp/>move<sp/>the<sp/>cursor<sp/>relative<sp/>to<sp/>the<sp/>foreground<sp/>window:</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/>``(``<sp/>*number*<sp/>``,``<sp/>*number*<sp/>``)``</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"><sp/>-<sp/>move<sp/>the<sp/>cursor<sp/>relative<sp/>to<sp/>its<sp/>current<sp/>position:</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/>``&lt;``<sp/>*pixels*<sp/>``,``<sp/>*pixels*<sp/>``&gt;``</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral">In<sp/>the<sp/>above<sp/>specifications,<sp/>the<sp/>*number*<sp/>and<sp/>*pixels*<sp/>have<sp/>the</highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral">following<sp/>meanings:</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"><sp/>-<sp/>*number*<sp/>--<sp/>can<sp/>specify<sp/>a<sp/>number<sp/>of<sp/>pixels<sp/>or<sp/>a<sp/>fraction<sp/>of</highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"><sp/><sp/><sp/>the<sp/>reference<sp/>window<sp/>or<sp/>desktop.<sp/><sp/>For<sp/>example:</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>``(10,<sp/>10)``<sp/>--<sp/>10<sp/>pixels<sp/>to<sp/>the<sp/>right<sp/>and<sp/>down<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>foreground<sp/>window&apos;s<sp/>left-top<sp/>corner</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>``(0.5,<sp/>0.5)``<sp/>--<sp/>center<sp/>of<sp/>the<sp/>foreground<sp/>window</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/>-<sp/>*pixels*<sp/>--<sp/>specifies<sp/>the<sp/>number<sp/>of<sp/>pixels</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral">Mouse<sp/>button-press<sp/>action:</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"><sp/><sp/><sp/>*keyname*<sp/>[``:``<sp/>*repeat*]<sp/>[``/``<sp/>*pause*]</highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"><sp/>-<sp/>*keyname*<sp/>--<sp/>Specifies<sp/>which<sp/>mouse<sp/>button<sp/>to<sp/>click:</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>``left``<sp/>--<sp/>left<sp/>mouse<sp/>button<sp/>key</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>``middle``<sp/>--<sp/>middle<sp/>mouse<sp/>button<sp/>key</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>``right``<sp/>--<sp/>right<sp/>mouse<sp/>button<sp/>key</highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>``four``<sp/>--<sp/>fourth<sp/>mouse<sp/>button<sp/>key</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>``five``<sp/>--<sp/>fifth<sp/>mouse<sp/>button<sp/>key</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>``wheelup``<sp/>--<sp/>mouse<sp/>wheel<sp/>up</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>``stepup``<sp/>--<sp/>mouse<sp/>wheel<sp/>up<sp/>1/3</highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>``wheeldown``<sp/>--<sp/>mouse<sp/>wheel<sp/>down</highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>``stepdown``<sp/>--<sp/>mouse<sp/>wheel<sp/>down<sp/>1/3</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>``wheelright``<sp/>--<sp/>mouse<sp/>wheel<sp/>right</highlight></codeline>
<codeline lineno="118"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>``stepright``<sp/>--<sp/>mouse<sp/>wheel<sp/>right<sp/>1/3</highlight></codeline>
<codeline lineno="119"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>``wheelleft``<sp/>--<sp/>mouse<sp/>wheel<sp/>left</highlight></codeline>
<codeline lineno="120"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>``stepleft``<sp/>--<sp/>mouse<sp/>wheel<sp/>left<sp/>1/3</highlight></codeline>
<codeline lineno="121"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="122"><highlight class="stringliteral"><sp/>-<sp/>*repeat*<sp/>--<sp/>Specifies<sp/>how<sp/>many<sp/>times<sp/>the<sp/>button<sp/>should<sp/>be<sp/>clicked:</highlight></codeline>
<codeline lineno="123"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="124"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>``0``<sp/>--<sp/>don&apos;t<sp/>click<sp/>the<sp/>button,<sp/>this<sp/>is<sp/>a<sp/>no-op</highlight></codeline>
<codeline lineno="125"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>``1``<sp/>--<sp/>normal<sp/>button<sp/>click</highlight></codeline>
<codeline lineno="126"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>``2``<sp/>--<sp/>double-click</highlight></codeline>
<codeline lineno="127"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>``3``<sp/>--<sp/>triple-click</highlight></codeline>
<codeline lineno="128"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="129"><highlight class="stringliteral"><sp/>-<sp/>*pause*<sp/>--</highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"><sp/><sp/><sp/>Specifies<sp/>how<sp/>long<sp/>to<sp/>pause<sp/>*after*<sp/>clicking<sp/>the<sp/>button.<sp/><sp/>The<sp/>value</highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/><sp/><sp/>should<sp/>be<sp/>an<sp/>integer<sp/>giving<sp/>in<sp/>hundredths<sp/>of<sp/>a<sp/>second.<sp/><sp/>For<sp/>example,</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"><sp/><sp/><sp/>``/100``<sp/>would<sp/>mean<sp/>one<sp/>second,<sp/>and<sp/>``/50``<sp/>half<sp/>a<sp/>second.</highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral">Mouse<sp/>button-hold<sp/>or<sp/>button-release<sp/>action:</highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral"><sp/><sp/><sp/>*keyname*<sp/>``:``<sp/>*hold-or-release*<sp/>[``/``<sp/>*pause*]</highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="137"><highlight class="stringliteral"><sp/>-<sp/>*keyname*<sp/>--<sp/>Specifies<sp/>which<sp/>mouse<sp/>button<sp/>to<sp/>click;<sp/>same<sp/>as<sp/>above.</highlight></codeline>
<codeline lineno="138"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"><sp/>-<sp/>*hold-or-release*<sp/>--</highlight></codeline>
<codeline lineno="140"><highlight class="stringliteral"><sp/><sp/><sp/>Specified<sp/>whether<sp/>the<sp/>button<sp/>will<sp/>be<sp/>held<sp/>down<sp/>or<sp/>released:</highlight></codeline>
<codeline lineno="141"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="142"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>``down``<sp/>--<sp/>hold<sp/>the<sp/>button<sp/>down</highlight></codeline>
<codeline lineno="143"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>``up``<sp/>--<sp/>release<sp/>the<sp/>button</highlight></codeline>
<codeline lineno="144"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="145"><highlight class="stringliteral"><sp/>-<sp/>*pause*<sp/>--</highlight></codeline>
<codeline lineno="146"><highlight class="stringliteral"><sp/><sp/><sp/>Specifies<sp/>how<sp/>long<sp/>to<sp/>pause<sp/>*after*<sp/>clicking<sp/>the<sp/>button;<sp/>same<sp/>as<sp/>above.</highlight></codeline>
<codeline lineno="147"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral">Mouse<sp/>across<sp/>platforms</highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral">............................................................................</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral">Please<sp/>note<sp/>that<sp/>there<sp/>are<sp/>some<sp/>platforms<sp/>which<sp/>do<sp/>not<sp/>support<sp/>emulating</highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral">every<sp/>mouse<sp/>button<sp/>listed<sp/>above.<sp/><sp/>If<sp/>an<sp/>unsupported<sp/>mouse<sp/>button<sp/>(*keyname*)</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral">is<sp/>specified<sp/>and<sp/>the<sp/>:class:`Mouse`<sp/>action<sp/>executed,<sp/>an<sp/>error<sp/>is<sp/>raised.<sp/>For</highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral">instance,<sp/>scrolling<sp/>the<sp/>mouse<sp/>wheel<sp/>horizontally<sp/>(e.g.<sp/>*wheelleft*)<sp/>is<sp/>not,</highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral">by<sp/>default,<sp/>a<sp/>supported<sp/>operation<sp/>on<sp/>X11::</highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/>ValueError:<sp/>Unsupported<sp/>scroll<sp/>event:<sp/>wheelleft</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral">Fortunately,<sp/>this<sp/>particular<sp/>problem<sp/>can<sp/>be<sp/>fixed<sp/>by<sp/>installing<sp/>the<sp/>*pynput*</highlight></codeline>
<codeline lineno="161"><highlight class="stringliteral">library::</highlight></codeline>
<codeline lineno="162"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="163"><highlight class="stringliteral"><sp/><sp/><sp/>pip<sp/>install<sp/>pynput</highlight></codeline>
<codeline lineno="164"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="165"><highlight class="stringliteral">On<sp/>MacOS,<sp/>however,<sp/>Dragonfly<sp/>cannot<sp/>be<sp/>used<sp/>to<sp/>scroll<sp/>horizontally.</highlight></codeline>
<codeline lineno="166"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="167"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="168"><highlight class="stringliteral">Mouse<sp/>class<sp/>reference</highlight></codeline>
<codeline lineno="169"><highlight class="stringliteral">............................................................................</highlight></codeline>
<codeline lineno="170"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="171"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">#<sp/>pylint:<sp/>disable=R0201</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Suppress<sp/>warnings<sp/>about<sp/>handler<sp/>functions<sp/>defined<sp/>as<sp/>Mouse<sp/>methods.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1actions_1_1action__base" kindref="compound">dragonfly.actions.action_base</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>DynStrActionBase,<sp/>ActionError</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1windows_1_1window" kindref="compound">dragonfly.windows.window</ref><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Window</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1actions_1_1mouse" kindref="compound">dragonfly.actions.mouse</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>ButtonEvent,<sp/>PauseEvent,<sp/>MoveRelativeEvent,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>MoveScreenEvent,<sp/>MoveWindowEvent,<sp/>PLATFORM_BUTTON_FLAGS,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>PLATFORM_WHEEL_FLAGS</highlight></codeline>
<codeline lineno="182"><highlight class="normal">)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Imported<sp/>for<sp/>backwards-compatibility:<sp/>these<sp/>functions<sp/>used<sp/>to<sp/>live<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1actions_1_1mouse" kindref="compound">dragonfly.actions.mouse</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>get_cursor_position,<sp/>set_cursor_position</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse" kindref="compound">Mouse</ref>(<ref refid="classdragonfly_1_1actions_1_1action__base_1_1DynStrActionBase" kindref="compound">DynStrActionBase</ref>):</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Action<sp/>that<sp/>sends<sp/>mouse<sp/>events.<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1a821e1544203d047f80e311258cbdd797" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1a821e1544203d047f80e311258cbdd797" kindref="member">__init__</ref>(self,<sp/>spec=None,<sp/>static=False):</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="193"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arguments:</highlight></codeline>
<codeline lineno="194"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*spec*<sp/>(*str*)<sp/>--<sp/>the<sp/>mouse<sp/>actions<sp/>to<sp/>execute</highlight></codeline>
<codeline lineno="195"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*static*<sp/>(boolean)<sp/>--</highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>*True*,<sp/>do<sp/>not<sp/>dynamically<sp/>interpret<sp/>*spec*</highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>executing<sp/>this<sp/>action</highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="199"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DynStrActionBase.__init__(self,<sp/>spec=spec,<sp/>static=static)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1a6dd2a4646891caefc3d77f5acd48ef53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1a6dd2a4646891caefc3d77f5acd48ef53" kindref="member">_parse_spec</ref>(self,<sp/>spec):</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Convert<sp/>the<sp/>given<sp/>*spec*<sp/>to<sp/>keyboard<sp/>events.<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parts<sp/>=<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1ad74f464d26daad671d28509f46bb3e89" kindref="member">_split_parts</ref>(spec)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>part<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>parts:</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handled<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>handler<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1aa7076b4bd5b6680d64afca69558cdfb5" kindref="member">_handlers</ref>:</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>handler(self,<sp/>part,<sp/>events):</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handled<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception:</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>handled:</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classdragonfly_1_1actions_1_1action__base_1_1ActionError" kindref="compound">ActionError</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>mouse<sp/>spec:<sp/>%r<sp/>(in<sp/>%r)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>(part,<sp/>spec))</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>events</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1a62e5de49896102f1c02ec7be1c366cd1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1a62e5de49896102f1c02ec7be1c366cd1" kindref="member">_parse_position_pair</ref>(self,<sp/>spec):</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parts<sp/>=<sp/>spec.split(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(parts)<sp/>!=<sp/>2:</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>position<sp/>pair<sp/>spec:<sp/>%r&quot;</highlight><highlight class="normal"><sp/>%<sp/>spec)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_origin,<sp/>h_value<sp/>=<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1af184afef7cd27fed1836cfc1fc856ad0" kindref="member">_parse_position</ref>(parts[0])</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_origin,<sp/>v_value<sp/>=<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1af184afef7cd27fed1836cfc1fc856ad0" kindref="member">_parse_position</ref>(parts[1])</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(h_origin,<sp/>h_value,<sp/>v_origin,<sp/>v_value)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1a14d52cfb830b773d6d7e830132e7eb93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1a14d52cfb830b773d6d7e830132e7eb93" kindref="member">_process_window_position</ref>(self,<sp/>spec,<sp/>events):</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>spec.startswith(</highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>spec.endswith(</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_origin,<sp/>h_value,<sp/>v_origin,<sp/>v_value<sp/>=<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1a62e5de49896102f1c02ec7be1c366cd1" kindref="member">_parse_position_pair</ref>(spec[1:-1])</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event<sp/>=<sp/>MoveWindowEvent(h_origin,<sp/>h_value,<sp/>v_origin,<sp/>v_value)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events.append(event)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1a5064f291efe5c972228e247a6da6ac97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1a5064f291efe5c972228e247a6da6ac97" kindref="member">_process_screen_position</ref>(self,<sp/>spec,<sp/>events):</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>spec.startswith(</highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>spec.endswith(</highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_,<sp/>h_value,<sp/>_,<sp/>v_value<sp/>=<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1a62e5de49896102f1c02ec7be1c366cd1" kindref="member">_parse_position_pair</ref>(spec[1:-1])</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event<sp/>=<sp/>MoveScreenEvent(</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>h_value,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>v_value)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events.append(event)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1aab7c60efd03b602462348e0e7f89fb57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1aab7c60efd03b602462348e0e7f89fb57" kindref="member">_process_relative_position</ref>(self,<sp/>spec,<sp/>events):</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>spec.startswith(</highlight><highlight class="stringliteral">&quot;&lt;&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>spec.endswith(</highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parts<sp/>=<sp/>spec[1:-1].split(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(parts)<sp/>!=<sp/>2:</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>horizontal<sp/>=<sp/>int(parts[0])</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertical<sp/><sp/><sp/>=<sp/>int(parts[1])</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event<sp/>=<sp/>MoveRelativeEvent(horizontal,<sp/>vertical)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events.append(event)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1a6568e09b6b9556dfdd63690eb4cc7983" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_button_flags<sp/>=<sp/>PLATFORM_BUTTON_FLAGS</highlight></codeline>
<codeline lineno="259" refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1ab823bd61615ceac83436b801b0d7ff92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_wheel_flags<sp/>=<sp/>PLATFORM_WHEEL_FLAGS</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1acf0df2d71a9c3efada62315cbcb9bd26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1acf0df2d71a9c3efada62315cbcb9bd26" kindref="member">_process_button</ref>(self,<sp/>spec,<sp/>events):</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parts<sp/>=<sp/>spec.split(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">,<sp/>1)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>button<sp/>=<sp/>parts[0].strip()</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(parts)<sp/>==<sp/>1:<sp/><sp/>special<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>special<sp/>=<sp/>parts[1].strip()</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>button<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1a6568e09b6b9556dfdd63690eb4cc7983" kindref="member">_button_flags</ref>:</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag_down,<sp/>flag_up<sp/>=<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1a6568e09b6b9556dfdd63690eb4cc7983" kindref="member">_button_flags</ref>[button]</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>special<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;down&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event<sp/>=<sp/>ButtonEvent(flag_down)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>special<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;up&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event<sp/>=<sp/>ButtonEvent(flag_up)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repeat<sp/>=<sp/>int(special)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ValueError:</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag_series<sp/>=<sp/>(flag_down,<sp/>flag_up)<sp/>*<sp/>repeat</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event<sp/>=<sp/>ButtonEvent(*flag_series)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>button<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1ab823bd61615ceac83436b801b0d7ff92" kindref="member">_wheel_flags</ref>:</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1ab823bd61615ceac83436b801b0d7ff92" kindref="member">_wheel_flags</ref>[button]</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repeat<sp/>=<sp/>int(special)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ValueError:</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/>(flag[0],<sp/>repeat<sp/>*<sp/>flag[1])</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event<sp/>=<sp/>ButtonEvent(flag)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events.append(event)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1ae1ff26215358d11bf1d9c4d76b6497e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1ae1ff26215358d11bf1d9c4d76b6497e1" kindref="member">_process_pause</ref>(self,<sp/>spec,<sp/>events):</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>spec.startswith(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interval<sp/>=<sp/>float(spec[1:])<sp/>/<sp/>100</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event<sp/>=<sp/>PauseEvent(interval)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events.append(event)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1aa7076b4bd5b6680d64afca69558cdfb5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_handlers<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_process_window_position,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_process_screen_position,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_process_relative_position,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_process_button,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_process_pause,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1af184afef7cd27fed1836cfc1fc856ad0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1af184afef7cd27fed1836cfc1fc856ad0" kindref="member">_parse_position</ref>(self,<sp/>spec):</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec<sp/>=<sp/>spec.strip()</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>spec.startswith(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">):<sp/><sp/>origin<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origin<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>spec.find(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>-1:<sp/><sp/>value<sp/>=<sp/>float(spec)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>int(spec)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(origin,<sp/>value)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1ad74f464d26daad671d28509f46bb3e89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1ad74f464d26daad671d28509f46bb3e89" kindref="member">_split_parts</ref>(self,<sp/>spec):</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delimiters<sp/>=<sp/>[</highlight><highlight class="stringliteral">&quot;()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[]&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&lt;&gt;&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parts<sp/>=<sp/>spec.split(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>parts:</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part<sp/>=<sp/>parts.pop(0).strip()</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found_delimiter<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>begin,<sp/>end<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>delimiters:</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>begin<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>part:</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>[part]</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>parts:</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part<sp/>=<sp/>parts.pop(0)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item.append(part)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>end<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>part:</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>end<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>part:</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;No<sp/>closing<sp/>delimiter<sp/>found<sp/>for<sp/>%r&quot;</highlight><highlight class="normal"><sp/>%<sp/>item[0])</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_item<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">.join(item)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found_delimiter<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>found_delimiter:</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_item<sp/>=<sp/>part</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>new_item:</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>before,<sp/>after<sp/>=<sp/>new_item.split(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">,<sp/>1)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items.append(before.strip())</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items.append(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>after.strip())</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items.append(new_item)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>items</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1a6014849de48db59aadbc877f8cb9d668" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1a6014849de48db59aadbc877f8cb9d668" kindref="member">_execute_events</ref>(self,<sp/>events):</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Send<sp/>events.<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window<sp/>=<sp/>Window.get_foreground()</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>event<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>events:</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event.execute(window)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370" refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1a2654df96e701e7a4418d4c593977ddca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__mouse_1_1Mouse_1a2654df96e701e7a4418d4c593977ddca" kindref="member">__str__</ref>(self):</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;&lt;{}&gt;&apos;</highlight><highlight class="normal">.<ref refid="namespacedragonfly__speech__recognition_1_1dragonfly__client_1a5c5aeb1fdc09eb0375a6080813d84cd5" kindref="member">format</ref>(self.<ref refid="classdragonfly_1_1actions_1_1action__base_1_1DynStrActionBase_1ad98662369d0517d6b46e97ad72a28442" kindref="member">_spec</ref>)</highlight></codeline>
    </programlisting>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_mouse.py"/>
  </compounddef>
</doxygen>
