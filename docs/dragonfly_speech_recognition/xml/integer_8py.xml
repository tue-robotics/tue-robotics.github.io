<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="integer_8py" kind="file" language="Python">
    <compoundname>integer.py</compoundname>
    <innerclass refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer" prot="public">dragonfly::language::base::integer::Integer</innerclass>
    <innerclass refid="classdragonfly_1_1language_1_1base_1_1integer_1_1IntegerRef" prot="public">dragonfly::language::base::integer::IntegerRef</innerclass>
    <innerclass refid="classdragonfly_1_1language_1_1base_1_1integer_1_1ShortIntegerRef" prot="public">dragonfly::language::base::integer::ShortIntegerRef</innerclass>
    <innernamespace refid="namespacedragonfly_1_1language_1_1base_1_1integer">dragonfly::language::base::integer</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacedragonfly_1_1language_1_1base_1_1integer" refkind="compound"><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Dragonfly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(c)<sp/>Copyright<sp/>2007,<sp/>2008<sp/>by<sp/>Christo<sp/>Butcher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Licensed<sp/>under<sp/>the<sp/>LGPL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Dragonfly<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Dragonfly<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>License<sp/>along<sp/>with<sp/>Dragonfly.<sp/><sp/>If<sp/>not,<sp/>see</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral">This<sp/>file<sp/>implements<sp/>base<sp/>classes<sp/>for<sp/>structured<sp/>integer<sp/>grammar</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral">elements.</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1language_1_1loader" kindref="compound">dragonfly.language.loader</ref><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>language</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1grammar_1_1elements" kindref="compound">dragonfly.grammar.elements</ref><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>(Alternative,<sp/>Sequence,<sp/>Optional,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Compound,<sp/>ListRef,<sp/>RuleWrap)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1grammar_1_1list" kindref="compound">dragonfly.grammar.list</ref><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><sp/>List</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Base<sp/>class<sp/>for<sp/>integer<sp/>element<sp/>classes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer" kindref="compound">Integer</ref>(<ref refid="namespacedragonfly_1_1grammar_1_1elements_1a5fae346809679996270fdc08704d01e0" kindref="member">Alternative</ref>):</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer_1a82962db0e89f75cf3c076b23b9080ce3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_content<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>@classmethod</highlight></codeline>
<codeline lineno="41" refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer_1ab902bb71dae315eeca179f63460f4bab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer_1ab902bb71dae315eeca179f63460f4bab" kindref="member">_set_content</ref>(cls,<sp/>content):</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Set<sp/>the<sp/>Integer<sp/>class&apos;<sp/>language-specific<sp/>contents.</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>an<sp/>internal<sp/>class<sp/>method.<sp/><sp/>However,<sp/>it<sp/>is<sp/>also<sp/>useful</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>testing<sp/>the<sp/>Integer<sp/>framework,<sp/>as<sp/>tests<sp/>for<sp/>different</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>languages<sp/>can<sp/>each<sp/>use<sp/>this<sp/>method<sp/>to<sp/>force<sp/>a<sp/>particular</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Integer<sp/>language<sp/>implementation.</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cls.<ref refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer_1a82962db0e89f75cf3c076b23b9080ce3" kindref="member">_content</ref><sp/>=<sp/>content</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer_1a8418e000d5fc3e11e1f0e29c992994f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer_1a8418e000d5fc3e11e1f0e29c992994f6" kindref="member">__init__</ref>(self,<sp/>name=None,<sp/>min=None,<sp/>max=None,<sp/>default=None,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>content=None):</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>content:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer_1a82962db0e89f75cf3c076b23b9080ce3" kindref="member">_content</ref><sp/>=<sp/>content</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer_1a82962db0e89f75cf3c076b23b9080ce3" kindref="member">_content</ref>:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Language-specific<sp/>integer<sp/>content<sp/>has<sp/>not<sp/>been<sp/>set<sp/>yet,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>we<sp/>set<sp/>it<sp/>by<sp/>retrieving<sp/>the<sp/>current<sp/>speaker<sp/>language<sp/>content.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer_1a22ad15359f62209a389eaf8d08dab261" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer_1ab902bb71dae315eeca179f63460f4bab" kindref="member">_set_content</ref>(language.IntegerContent)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer_1a22ad15359f62209a389eaf8d08dab261" kindref="member">_builders</ref><sp/>=<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer_1a82962db0e89f75cf3c076b23b9080ce3" kindref="member">_content</ref>.builders</highlight></codeline>
<codeline lineno="62" refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer_1aef6bfda0cff511b7653fb92c0f2c790d" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer_1aef6bfda0cff511b7653fb92c0f2c790d" kindref="member">_min</ref><sp/>=<sp/>min;<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer_1a802e9f7cef3fdeaac541710e2e5b86a2" kindref="member">_max</ref><sp/>=<sp/>max</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>children<sp/>=<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer_1adfef1fddce9b7f359beafab0462ff7f1" kindref="member">_build_children</ref>(min,<sp/>max)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Alternative.__init__(self,<sp/>children,<sp/>name=name,<sp/>default=default)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Methods<sp/>for<sp/>runtime<sp/>introspection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer_1a61812f0c74336c776a567af1b2dc795f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer_1a61812f0c74336c776a567af1b2dc795f" kindref="member">__repr__</ref>(self):</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arguments<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.name<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arguments<sp/>=<sp/>[</highlight><highlight class="stringliteral">&quot;%r&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.name]</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer_1aef6bfda0cff511b7653fb92c0f2c790d" kindref="member">_min</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer_1a802e9f7cef3fdeaac541710e2e5b86a2" kindref="member">_max</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arguments.append(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer_1aef6bfda0cff511b7653fb92c0f2c790d" kindref="member">_min</ref>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arguments.append(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer_1a802e9f7cef3fdeaac541710e2e5b86a2" kindref="member">_max</ref>)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;%s(%s)&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self.__class__.__name__,<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">.join(arguments))</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Methods<sp/>for<sp/>load-time<sp/>setup.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer_1adfef1fddce9b7f359beafab0462ff7f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer_1adfef1fddce9b7f359beafab0462ff7f1" kindref="member">_build_children</ref>(self,<sp/>min,<sp/>max):</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memo<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>children<sp/>=<sp/>[c.build_element(min,<sp/>max,<sp/>memo)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer_1a22ad15359f62209a389eaf8d08dab261" kindref="member">_builders</ref>]</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[c<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>children<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>c]</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Integer<sp/>reference<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="classdragonfly_1_1language_1_1base_1_1integer_1_1IntegerRef" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer_1_1IntegerRef" kindref="compound">IntegerRef</ref>(<ref refid="namespacedragonfly_1_1grammar_1_1elements_1ae1e5941b197b66edc33ece9090951592" kindref="member">RuleWrap</ref>):</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="classdragonfly_1_1language_1_1base_1_1integer_1_1IntegerRef_1a5f7c426a2c22d4b02608be380ce911f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer_1_1IntegerRef_1a5f7c426a2c22d4b02608be380ce911f6" kindref="member">__init__</ref>(self,<sp/>name,<sp/>min,<sp/>max,<sp/>default=None):</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element<sp/>=<sp/><ref refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer" kindref="compound">Integer</ref>(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>min,<sp/>max)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RuleWrap.__init__(self,<sp/>name,<sp/>element,<sp/>default=default)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="classdragonfly_1_1language_1_1base_1_1integer_1_1ShortIntegerRef" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer_1_1ShortIntegerRef" kindref="compound">ShortIntegerRef</ref>(<ref refid="namespacedragonfly_1_1grammar_1_1elements_1ae1e5941b197b66edc33ece9090951592" kindref="member">RuleWrap</ref>):</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="classdragonfly_1_1language_1_1base_1_1integer_1_1ShortIntegerRef_1afd8c95ee4218131ae7685e0b4bf67ff0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1language_1_1base_1_1integer_1_1ShortIntegerRef_1afd8c95ee4218131ae7685e0b4bf67ff0" kindref="member">__init__</ref>(self,<sp/>name,<sp/>min,<sp/>max,<sp/>default=None):</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element<sp/>=<sp/><ref refid="classdragonfly_1_1language_1_1base_1_1integer_1_1Integer" kindref="compound">Integer</ref>(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>min,<sp/>max,<sp/>content=language.ShortIntegerContent)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RuleWrap.__init__(self,<sp/>name,<sp/>element,<sp/>default=default)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/language/base/integer.py"/>
  </compounddef>
</doxygen>
