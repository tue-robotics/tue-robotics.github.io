<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="server_8py" kind="file" language="Python">
    <compoundname>server.py</compoundname>
    <innerclass refid="classdragonfly_1_1rpc_1_1server_1_1Dispatcher" prot="public">dragonfly::rpc::server::Dispatcher</innerclass>
    <innerclass refid="classdragonfly_1_1rpc_1_1server_1_1PermissionDeniedError" prot="public">dragonfly::rpc::server::PermissionDeniedError</innerclass>
    <innerclass refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer" prot="public">dragonfly::rpc::server::RPCServer</innerclass>
    <innernamespace refid="namespacedragonfly_1_1rpc_1_1server">dragonfly::rpc::server</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacedragonfly_1_1rpc_1_1server" refkind="compound"><highlight class="comment">#<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Dragonfly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(c)<sp/>Copyright<sp/>2007,<sp/>2008<sp/>by<sp/>Christo<sp/>Butcher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Licensed<sp/>under<sp/>the<sp/>LGPL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Dragonfly<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Dragonfly<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>License<sp/>along<sp/>with<sp/>Dragonfly.<sp/><sp/>If<sp/>not,<sp/>see</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral">RPC<sp/>server</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral">----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral">Dragonfly&apos;s<sp/>RPC<sp/>server<sp/>handles<sp/>requests<sp/>by<sp/>processing<sp/>each<sp/>method<sp/>through</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral">the<sp/>current<sp/>engine&apos;s<sp/>:ref:`multiplexing<sp/>timer<sp/>interface<sp/>&lt;RefEngineTimers&gt;`.</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral">This<sp/>allows<sp/>engines<sp/>to<sp/>handle<sp/>requests<sp/>safely<sp/>and<sp/>keeps<sp/>engine-specific</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral">implementation<sp/>details<sp/>out<sp/>of<sp/>the<sp/>*dragonfly.rpc*<sp/>sub-package.</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral">Security<sp/>tokens</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral">============================================================================</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral">The<sp/>RPC<sp/>server<sp/>uses<sp/>mandatory<sp/>security<sp/>tokens<sp/>to<sp/>authenticate<sp/>client</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral">requests.<sp/>This<sp/>avoids<sp/>some<sp/>security<sp/>issues<sp/>where,<sp/>for<sp/>example,<sp/>malicious<sp/>web</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral">pages<sp/>could<sp/>send<sp/>POST<sp/>requests<sp/>to<sp/>the<sp/>server,<sp/>even<sp/>if<sp/>running<sp/>on<sp/>localhost.</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral">If<sp/>sending<sp/>requests<sp/>over<sp/>an<sp/>open<sp/>network,<sp/>please<sp/>ensure<sp/>that<sp/>the<sp/>connection</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral">is<sp/>secure<sp/>by<sp/>using<sp/>TLS<sp/>or<sp/>SSH<sp/>port<sp/>forwarding.</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral">If<sp/>the<sp/>server&apos;s<sp/>:code:`security_token`<sp/>constructor<sp/>parameter<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral">specified,<sp/>a<sp/>new<sp/>token<sp/>will<sp/>be<sp/>generated<sp/>and<sp/>printed<sp/>to<sp/>the<sp/>console.<sp/>Clients</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral">must<sp/>specify<sp/>the<sp/>security<sp/>token<sp/>either<sp/>as<sp/>the<sp/>last<sp/>positional<sp/>argument<sp/>or<sp/>as</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral">the<sp/>:code:`security_token`<sp/>keyword<sp/>argument.</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral">Errors<sp/>will<sp/>be<sp/>raised<sp/>if<sp/>clients<sp/>send<sp/>no<sp/>security<sp/>token<sp/>or<sp/>a<sp/>token<sp/>that</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral">doesn&apos;t<sp/>match<sp/>the<sp/>server&apos;s.</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral">Class<sp/>reference</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral">============================================================================</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>functools</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logging</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>threading</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>decorator<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>decorator</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>jsonrpc.dispatcher<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Dispatcher<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>BaseDispatcher</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>jsonrpc.manager<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>JSONRPCResponseManager</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>werkzeug.wrappers<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Request,<sp/>Response</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>werkzeug.serving<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>run_simple</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1engines" kindref="compound">dragonfly.engines</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>get_engine</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1rpc_1_1methods" kindref="compound">dragonfly.rpc.methods</ref><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>methods</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1rpc_1_1security" kindref="compound">dragonfly.rpc.security</ref><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>(compare_security_token,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generate_security_token)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1rpc_1_1util" kindref="compound">dragonfly.rpc.util</ref><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>send_rpc_request</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classdragonfly_1_1rpc_1_1server_1_1PermissionDeniedError" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1rpc_1_1server_1_1PermissionDeniedError" kindref="compound">PermissionDeniedError</ref>(Exception):</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Error<sp/>raised<sp/>if<sp/>clients<sp/>send<sp/>security<sp/>tokens<sp/>that<sp/>don&apos;t<sp/>match<sp/>the</highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>server&apos;s.</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="namespacedragonfly_1_1rpc_1_1server_1a8e56bb8cc3a3e8f3ae6dd04c01e411f8" refkind="member"><highlight class="normal">_log<sp/>=<sp/>logging.getLogger(</highlight><highlight class="stringliteral">&quot;rpc.methods&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">#<sp/>--------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">#<sp/>RPC<sp/>method<sp/>decorator<sp/>used<sp/>by<sp/>the<sp/>server<sp/>internally.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">@decorator</highlight></codeline>
<codeline lineno="83" refid="namespacedragonfly_1_1rpc_1_1server_1a3337c5dc2c984e2b69c6fd321c93f784" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacedragonfly_1_1rpc_1_1server_1a3337c5dc2c984e2b69c6fd321c93f784" kindref="member">_rpc_method</ref>(method,<sp/>*args,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>a<sp/>thread<sp/>condition<sp/>for<sp/>waiting<sp/>for<sp/>the<sp/>method&apos;s<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>condition<sp/>=<sp/>threading.Condition()</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>closure<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">timer_func():</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closure.append(method(*args,<sp/>**kwargs))</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Log<sp/>any<sp/>exceptions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_log.exception(</highlight><highlight class="stringliteral">&quot;Exception<sp/>occurred<sp/>during<sp/>RPC<sp/>method<sp/>&apos;%s&apos;:<sp/>%s&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>(method.__name__,<sp/>e))</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closure.append(e)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Notify<sp/>the<sp/>waiting<sp/>thread<sp/>that<sp/>the<sp/>result<sp/>is<sp/>ready.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>condition:</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>condition.notify()</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Start<sp/>a<sp/>non-repeating<sp/>timer<sp/>to<sp/>execute<sp/>timer_func().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacedragonfly_1_1engines_1a54a7132d79612abdb29fac07276b5681" kindref="member">get_engine</ref>().create_timer(timer_func,<sp/>0,<sp/>repeating=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Wait<sp/>for<sp/>the<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>condition:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>condition.wait()</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Raise<sp/>an<sp/>error<sp/>if<sp/>it&apos;s<sp/>an<sp/>exception<sp/>(json-rpc<sp/>handles<sp/>this),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>otherwise<sp/>return<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>closure[0]</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(result,<sp/>Exception):</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">#<sp/>--------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">#<sp/>JSONRPC<sp/>Dispatcher<sp/>sub-class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="classdragonfly_1_1rpc_1_1server_1_1Dispatcher" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1rpc_1_1server_1_1Dispatcher" kindref="compound">Dispatcher</ref>(BaseDispatcher):</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="classdragonfly_1_1rpc_1_1server_1_1Dispatcher_1ac9cb06b4c2e5f70ee53c8572ce60db43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1rpc_1_1server_1_1Dispatcher_1ac9cb06b4c2e5f70ee53c8572ce60db43" kindref="member">__init__</ref>(self,<sp/>server):</highlight></codeline>
<codeline lineno="123" refid="classdragonfly_1_1rpc_1_1server_1_1Dispatcher_1aac1b6734b77c1a6d3cd8abff249d57ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1Dispatcher_1aac1b6734b77c1a6d3cd8abff249d57ab" kindref="member">server</ref><sp/>=<sp/>server</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(Dispatcher,<sp/>self).<ref refid="classdragonfly_1_1rpc_1_1server_1_1Dispatcher_1ac9cb06b4c2e5f70ee53c8572ce60db43" kindref="member">__init__</ref>()</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="classdragonfly_1_1rpc_1_1server_1_1Dispatcher_1aa57739489d1d39464be435c086401921" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1rpc_1_1server_1_1Dispatcher_1aa57739489d1d39464be435c086401921" kindref="member">add_method</ref>(self,<sp/>f=None,<sp/>name=None):</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>name<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functools.partial(self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1Dispatcher_1aa57739489d1d39464be435c086401921" kindref="member">add_method</ref>,<sp/>name=name)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>name<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>f.__name__</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>callable(f):</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;f<sp/>must<sp/>be<sp/>callable&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">checked_rpc_method(*args,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>(args<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>kwargs)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Pop<sp/>the<sp/>security<sp/>token<sp/>from<sp/>args<sp/>or<sp/>kwargs.<sp/>Raise<sp/>an<sp/>error<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>there<sp/>is<sp/>no<sp/>token.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>args:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args<sp/>=<sp/>list(args)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rpc_security_token<sp/>=<sp/>args.pop(len(args)<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;security_token&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kwargs:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rpc_security_token<sp/>=<sp/>kwargs.pop(</highlight><highlight class="stringliteral">&quot;security_token&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>=<sp/>(</highlight><highlight class="stringliteral">&quot;client<sp/>did<sp/>not<sp/>send<sp/>the<sp/>required<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;security_token&apos;<sp/>argument&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_log.error(message)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(message)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>if<sp/>the<sp/>received<sp/>token<sp/>matches<sp/>the<sp/>server&apos;s<sp/>token.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1rpc_1_1security_1a603d5717d7d6dd834e29150e9052edda" kindref="member">compare_security_token</ref>(self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1Dispatcher_1aac1b6734b77c1a6d3cd8abff249d57ab" kindref="member">server</ref>.security_token,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rpc_security_token):</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>=<sp/>(</highlight><highlight class="stringliteral">&quot;Client<sp/>sent<sp/>a<sp/>security<sp/>token<sp/>that<sp/>did<sp/>not<sp/>match&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>the<sp/>server\&apos;s&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_log.error(message)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classdragonfly_1_1rpc_1_1server_1_1PermissionDeniedError" kindref="compound">PermissionDeniedError</ref>(message)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>security<sp/>tokens<sp/>match,<sp/>so<sp/>execute<sp/>the<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f(*args,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checked_rpc_method.__name__<sp/>=<sp/>name</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.method_map[name]<sp/>=<sp/>checked_rpc_method</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">#<sp/>--------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">#<sp/>RPC<sp/>server<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer" kindref="compound">RPCServer</ref>(object):</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="173"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>RPC<sp/>server<sp/>class.</highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>will<sp/>run<sp/>a<sp/>local<sp/>web<sp/>server<sp/>on<sp/>port<sp/>50051<sp/>by<sp/>default.<sp/>The</highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>server<sp/>expects<sp/>requests<sp/>using</highlight></codeline>
<codeline lineno="177"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>`JSON-RPC<sp/>2.0<sp/>&lt;https://www.jsonrpc.org/specification&gt;`__.</highlight></codeline>
<codeline lineno="178"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="179"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Constructor<sp/>arguments:</highlight></codeline>
<codeline lineno="180"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="181"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>*address*<sp/>--<sp/>address<sp/>to<sp/>use<sp/>(*str*,<sp/>default:<sp/>&quot;127.0.0.1&quot;)</highlight></codeline>
<codeline lineno="182"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>*port*<sp/>--<sp/>port<sp/>to<sp/>use<sp/>(*int*,<sp/>default:<sp/>50051)</highlight></codeline>
<codeline lineno="183"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>*ssl_context*<sp/>--<sp/>SSL<sp/>context<sp/>object<sp/>to<sp/>pass<sp/>to</highlight></codeline>
<codeline lineno="184"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>*werkzeug.serving.run_simple*<sp/>(*SSLContext*,<sp/>default:<sp/>None).</highlight></codeline>
<codeline lineno="185"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>*threaded*<sp/>--<sp/>whether<sp/>to<sp/>use<sp/>a<sp/>separate<sp/>thread<sp/>to<sp/>process<sp/>each<sp/>request</highlight></codeline>
<codeline lineno="186"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>(*bool*,<sp/>default:<sp/>True).</highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>*security_token*<sp/>--<sp/>security<sp/>token<sp/>for<sp/>authenticating<sp/>clients</highlight></codeline>
<codeline lineno="188"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>(*str*,<sp/>default:<sp/>None).<sp/>A<sp/>new<sp/>token<sp/>will<sp/>be<sp/>generated<sp/>and<sp/>printed<sp/>if</highlight></codeline>
<codeline lineno="189"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>parameter<sp/>is<sp/>unspecified.</highlight></codeline>
<codeline lineno="190"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="191"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>*ssl_context*<sp/>parameter<sp/>is<sp/>explained<sp/>in<sp/>more<sp/>detail<sp/>in<sp/>Werkzeug&apos;s</highlight></codeline>
<codeline lineno="192"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>`SSL<sp/>serving<sp/>documentation</highlight></codeline>
<codeline lineno="193"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&lt;http://werkzeug.pocoo.org/docs/0.14/serving/#ssl&gt;`__.</highlight></codeline>
<codeline lineno="194"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="195"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Secure<sp/>connections<sp/>can<sp/>also<sp/>be<sp/>set<sp/>up<sp/>using<sp/>OpenSSH<sp/>port<sp/>forwarding<sp/>with</highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>a<sp/>command<sp/>such<sp/>as::</highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$<sp/>ssh<sp/>-NTf<sp/>-L<sp/>50051:127.0.0.1:50051<sp/>&lt;system-with-rpc-server&gt;</highlight></codeline>
<codeline lineno="199"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="200"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>*Minor<sp/>note*:<sp/>using<sp/>an<sp/>IP<sp/>address<sp/>instead<sp/>of<sp/>a<sp/>hostname<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="201"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>*address*<sp/>parameter<sp/>should<sp/>increase<sp/>performance<sp/>somewhat,<sp/>e.g.</highlight></codeline>
<codeline lineno="202"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;127.0.0.1&quot;<sp/>instead<sp/>of<sp/>&quot;localhost&quot;.</highlight></codeline>
<codeline lineno="203"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="204"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>warning::</highlight></codeline>
<codeline lineno="205"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="206"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Do<sp/>**not**<sp/>send<sp/>requests<sp/>to<sp/>the<sp/>server<sp/>from<sp/>the<sp/>main<sp/>engine<sp/>thread;</highlight></codeline>
<codeline lineno="207"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread<sp/>deadlocks<sp/>*will*<sp/>occur<sp/>if<sp/>you<sp/>do<sp/>this<sp/>because<sp/>the<sp/>main<sp/>thread</highlight></codeline>
<codeline lineno="208"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cannot<sp/>call<sp/>timer<sp/>functions<sp/>and<sp/>wait<sp/>for<sp/>a<sp/>response<sp/>at<sp/>the<sp/>same<sp/>time.</highlight></codeline>
<codeline lineno="209"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>RPC<sp/>framework<sp/>was<sp/>designed<sp/>to<sp/>be<sp/>used<sp/>from<sp/>*remote*<sp/>processes.</highlight></codeline>
<codeline lineno="210"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="211"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Requests<sp/>will<sp/>not<sp/>be<sp/>processed<sp/>if<sp/>the<sp/>engine<sp/>is<sp/>not<sp/>connected<sp/>and</highlight></codeline>
<codeline lineno="212"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processing<sp/>speech.</highlight></codeline>
<codeline lineno="213"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="214"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="215"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a63af5f756749f8e7fe82407946e09880" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_log<sp/>=<sp/>logging.getLogger(</highlight><highlight class="stringliteral">&quot;rpc.server&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1ab1988565ca2643d403d6018e63d5832d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1ab1988565ca2643d403d6018e63d5832d" kindref="member">__init__</ref>(self,<sp/>address=&quot;127.0.0.1&quot;,<sp/>port=50051,<sp/>ssl_context=None,</highlight></codeline>
<codeline lineno="220" refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a421a63a47fd1b3f610221cb39c5fa479" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threaded=True,<sp/>security_token=None):</highlight></codeline>
<codeline lineno="221" refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a65aef045e17b5502a563d3e5ad3b263b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a421a63a47fd1b3f610221cb39c5fa479" kindref="member">_address</ref><sp/>=<sp/>address</highlight></codeline>
<codeline lineno="222" refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1aab705f793805be31b75f3a2156196c71" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a65aef045e17b5502a563d3e5ad3b263b" kindref="member">_port</ref><sp/>=<sp/>port</highlight></codeline>
<codeline lineno="223" refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1af14d0ec1b8c2d04de8584c5b3918c132" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1aab705f793805be31b75f3a2156196c71" kindref="member">_ssl_context</ref><sp/>=<sp/>ssl_context</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1af14d0ec1b8c2d04de8584c5b3918c132" kindref="member">_threaded</ref><sp/>=<sp/>threaded</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>security_token<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>security_token<sp/>=<sp/><ref refid="namespacedragonfly_1_1rpc_1_1security_1a96131e86d9e2f7c1bf2132500cbc1ad3" kindref="member">generate_security_token</ref>()</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a63af5f756749f8e7fe82407946e09880" kindref="member">_log</ref>.warning(</highlight><highlight class="stringliteral">&quot;Generating<sp/>a<sp/>new<sp/>security<sp/>token<sp/>because<sp/>the<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;security_token&apos;<sp/>parameter<sp/>was<sp/>unspecified.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;The<sp/>generated<sp/>security<sp/>token<sp/>is<sp/>&apos;%s&apos;.&quot;</highlight><highlight class="normal"><sp/>%<sp/>security_token)</highlight></codeline>
<codeline lineno="230" refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a2d05c48982b8a2995c681b8049b547a5" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a34342184bbc5aa878c484a072bd9c46c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a2d05c48982b8a2995c681b8049b547a5" kindref="member">security_token</ref><sp/>=<sp/>security_token</highlight></codeline>
<codeline lineno="232" refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a1e9e55cf4e27616f419ed2287cddfa34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a34342184bbc5aa878c484a072bd9c46c" kindref="member">_thread</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a1e9e55cf4e27616f419ed2287cddfa34" kindref="member">_dispatcher</ref><sp/>=<sp/><ref refid="classdragonfly_1_1rpc_1_1server_1_1Dispatcher" kindref="compound">Dispatcher</ref>(self)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>the<sp/>built-in<sp/>RPC<sp/>methods<sp/>defined<sp/>in<sp/>methods.py.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>method<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>methods:</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a303d342cce69a6d651f00866b8f23f7e" kindref="member">add_method</ref>(method)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>@Request.application</highlight></codeline>
<codeline lineno="240" refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1ae8c62331542164b753ef39082a44c2e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1ae8c62331542164b753ef39082a44c2e3" kindref="member">_application</ref>(self,<sp/>request):</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>the<sp/>shutdown<sp/>method<sp/>if<sp/>it<sp/>is<sp/>available<sp/>and<sp/>has<sp/>not<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>been<sp/>added.<sp/>This<sp/>won&apos;t<sp/>be<sp/>executed<sp/>via<sp/>the<sp/>engine<sp/>timers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shutdown_func<sp/>=<sp/>request.environ.get(</highlight><highlight class="stringliteral">&apos;werkzeug.server.shutdown&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shutdown_func_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;shutdown_rpc_server&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>shutdown_func<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>shutdown_func_name<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a1e9e55cf4e27616f419ed2287cddfa34" kindref="member">_dispatcher</ref>:</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>it<sp/>to<sp/>the<sp/>dispatcher<sp/>directly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a1e9e55cf4e27616f419ed2287cddfa34" kindref="member">_dispatcher</ref>.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a303d342cce69a6d651f00866b8f23f7e" kindref="member">add_method</ref>(shutdown_func,<sp/>shutdown_func_name)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>a<sp/>response<sp/>using<sp/>the<sp/>method<sp/>dispatcher<sp/>and<sp/>return<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response<sp/>=<sp/>JSONRPCResponseManager.handle(</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request.data,<sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a1e9e55cf4e27616f419ed2287cddfa34" kindref="member">_dispatcher</ref></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Response(response.json,<sp/>mimetype=</highlight><highlight class="stringliteral">&apos;application/json&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="256" refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a588e6a01a7a895a258101f24d6923fd1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a588e6a01a7a895a258101f24d6923fd1" kindref="member">url</ref>(self):</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="258"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>URL<sp/>to<sp/>send<sp/>JSON-RPC<sp/>requests<sp/>to.</highlight></codeline>
<codeline lineno="259"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Note:<sp/>this<sp/>assumes<sp/>any<sp/>non-null<sp/>SSL<sp/>context<sp/>is<sp/>valid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>protocol<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;https&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1aab705f793805be31b75f3a2156196c71" kindref="member">_ssl_context</ref><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;http&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;%s://%s:%d/jsonrpc&quot;</highlight><highlight class="normal"><sp/>%<sp/>(protocol,<sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a421a63a47fd1b3f610221cb39c5fa479" kindref="member">_address</ref>,<sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a65aef045e17b5502a563d3e5ad3b263b" kindref="member">_port</ref>)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a996603e69fa2e2eb1ac5a3adf8376829" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a996603e69fa2e2eb1ac5a3adf8376829" kindref="member">send_request</ref>(self,<sp/>method,<sp/>params,<sp/>id=0):</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="266"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Utility<sp/>method<sp/>to<sp/>send<sp/>a<sp/>JSON-RPC<sp/>request<sp/>to<sp/>the<sp/>server.<sp/>This<sp/>will</highlight></codeline>
<codeline lineno="267"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>the<sp/>current<sp/>thread<sp/>until<sp/>a<sp/>response<sp/>is<sp/>received.</highlight></codeline>
<codeline lineno="268"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="269"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/>is<sp/>mostly<sp/>used<sp/>for<sp/>testing.<sp/>If<sp/>called<sp/>from<sp/>the<sp/>engine&apos;s</highlight></codeline>
<codeline lineno="270"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>main<sp/>thread,<sp/>a<sp/>deadlock<sp/>*will*<sp/>occur.</highlight></codeline>
<codeline lineno="271"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="272"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>will<sp/>raise<sp/>an<sp/>error<sp/>if<sp/>the<sp/>request<sp/>fails<sp/>with<sp/>an<sp/>error<sp/>or<sp/>if</highlight></codeline>
<codeline lineno="273"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>server<sp/>is<sp/>unreachable.</highlight></codeline>
<codeline lineno="274"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="275"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>server&apos;s<sp/>security<sp/>token<sp/>will<sp/>automatically<sp/>be<sp/>added<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="276"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``params``<sp/>list/dictionary.</highlight></codeline>
<codeline lineno="277"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="278"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>method:<sp/>name<sp/>of<sp/>the<sp/>RPC<sp/>method<sp/>to<sp/>call.</highlight></codeline>
<codeline lineno="279"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>params:<sp/>parameters<sp/>of<sp/>the<sp/>RPC<sp/>method<sp/>to<sp/>call.</highlight></codeline>
<codeline lineno="280"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>id:<sp/>ID<sp/>of<sp/>the<sp/>JSON-RPC<sp/>request<sp/>(default:<sp/>0).</highlight></codeline>
<codeline lineno="281"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>method:<sp/>str</highlight></codeline>
<codeline lineno="282"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>params:<sp/>list<sp/>|<sp/>dict</highlight></codeline>
<codeline lineno="283"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>id:<sp/>int</highlight></codeline>
<codeline lineno="284"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:returns:<sp/>JSON-RPC<sp/>response</highlight></codeline>
<codeline lineno="285"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:rtype:<sp/>dict</highlight></codeline>
<codeline lineno="286"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:raises:<sp/>RuntimeError</highlight></codeline>
<codeline lineno="287"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>the<sp/>server&apos;s<sp/>security<sp/>token<sp/>to<sp/>params.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>security_token<sp/>=<sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a2d05c48982b8a2995c681b8049b547a5" kindref="member">security_token</ref></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(params,<sp/>dict):</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params[</highlight><highlight class="stringliteral">&quot;security_token&quot;</highlight><highlight class="normal">]<sp/>=<sp/>security_token</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.append(security_token)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1rpc_1_1util_1ac57f43e55f3ae555ebd67017105c720d" kindref="member">send_rpc_request</ref>(self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a588e6a01a7a895a258101f24d6923fd1" kindref="member">url</ref>,<sp/>method,<sp/>params,<sp/>id)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a12e12ed80544f76af1430ccbd678d71f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a12e12ed80544f76af1430ccbd678d71f" kindref="member">start</ref>(self):</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="299"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Start<sp/>the<sp/>server.</highlight></codeline>
<codeline lineno="300"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="301"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/>is<sp/>non-blocking,<sp/>the<sp/>RPC<sp/>server<sp/>will<sp/>run<sp/>on<sp/>a<sp/>separate</highlight></codeline>
<codeline lineno="302"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daemon<sp/>thread.<sp/>This<sp/>way<sp/>it<sp/>is<sp/>not<sp/>necessary<sp/>to<sp/>call<sp/>:meth:`stop`</highlight></codeline>
<codeline lineno="303"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>before<sp/>the<sp/>main<sp/>thread<sp/>terminates.</highlight></codeline>
<codeline lineno="304"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Handle<sp/>a<sp/>previous<sp/>Thread.join()<sp/>timeout.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a34342184bbc5aa878c484a072bd9c46c" kindref="member">_thread</ref><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a34342184bbc5aa878c484a072bd9c46c" kindref="member">_thread</ref>.is_alive():</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a34342184bbc5aa878c484a072bd9c46c" kindref="member">_thread</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Return<sp/>if<sp/>the<sp/>server<sp/>thread<sp/>is<sp/>already<sp/>running.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a34342184bbc5aa878c484a072bd9c46c" kindref="member">_thread</ref>:</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">run():</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Note:<sp/>&apos;threaded&apos;<sp/>means<sp/>that<sp/>each<sp/>request<sp/>is<sp/>handled<sp/>using<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>separate<sp/>thread.<sp/>This<sp/>introduces<sp/>some<sp/>overhead<sp/>costs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>run_simple(self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a421a63a47fd1b3f610221cb39c5fa479" kindref="member">_address</ref>,<sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a65aef045e17b5502a563d3e5ad3b263b" kindref="member">_port</ref>,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1ae8c62331542164b753ef39082a44c2e3" kindref="member">_application</ref>,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssl_context=self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1aab705f793805be31b75f3a2156196c71" kindref="member">_ssl_context</ref>,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threaded=self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1af14d0ec1b8c2d04de8584c5b3918c132" kindref="member">_threaded</ref>)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a63af5f756749f8e7fe82407946e09880" kindref="member">_log</ref>.exception(</highlight><highlight class="stringliteral">&quot;Exception<sp/>caught<sp/>on<sp/>RPC<sp/>server<sp/>thread:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>e)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a34342184bbc5aa878c484a072bd9c46c" kindref="member">_thread</ref><sp/>=<sp/>threading.Thread(target=run)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a34342184bbc5aa878c484a072bd9c46c" kindref="member">_thread</ref>.setDaemon(</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a34342184bbc5aa878c484a072bd9c46c" kindref="member">_thread</ref>.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a12e12ed80544f76af1430ccbd678d71f" kindref="member">start</ref>()</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Wait<sp/>a<sp/>few<sp/>milliseconds<sp/>to<sp/>allow<sp/>the<sp/>server<sp/>to<sp/>start<sp/>properly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time.sleep(0.1)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a574035b3183ccb337d204bfff0d138c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a574035b3183ccb337d204bfff0d138c0" kindref="member">stop</ref>(self):</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="334"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Stop<sp/>the<sp/>server<sp/>if<sp/>it<sp/>is<sp/>running.</highlight></codeline>
<codeline lineno="335"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Handle<sp/>a<sp/>previous<sp/>Thread.join()<sp/>timeout.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a34342184bbc5aa878c484a072bd9c46c" kindref="member">_thread</ref><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a34342184bbc5aa878c484a072bd9c46c" kindref="member">_thread</ref>.is_alive():</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a34342184bbc5aa878c484a072bd9c46c" kindref="member">_thread</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Return<sp/>if<sp/>the<sp/>server<sp/>isn&apos;t<sp/>currently<sp/>running.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a34342184bbc5aa878c484a072bd9c46c" kindref="member">_thread</ref>:</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>werkzeug<sp/>is<sp/>normally<sp/>stopped<sp/>through<sp/>a<sp/>request<sp/>to<sp/>the<sp/>server.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a996603e69fa2e2eb1ac5a3adf8376829" kindref="member">send_request</ref>(</highlight><highlight class="stringliteral">&quot;shutdown_rpc_server&quot;</highlight><highlight class="normal">,<sp/>[])</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/>5</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a34342184bbc5aa878c484a072bd9c46c" kindref="member">_thread</ref>.join(timeout)</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a34342184bbc5aa878c484a072bd9c46c" kindref="member">_thread</ref>.is_alive():</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a63af5f756749f8e7fe82407946e09880" kindref="member">_log</ref>.warning(</highlight><highlight class="stringliteral">&quot;RPC<sp/>server<sp/>thread<sp/>failed<sp/>to<sp/>stop<sp/>after<sp/>%d<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;seconds&quot;</highlight><highlight class="normal"><sp/>%<sp/>timeout)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a34342184bbc5aa878c484a072bd9c46c" kindref="member">_thread</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a303d342cce69a6d651f00866b8f23f7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a303d342cce69a6d651f00866b8f23f7e" kindref="member">add_method</ref>(self,<sp/>method,<sp/>name=None):</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="356"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Add<sp/>an<sp/>RPC<sp/>method<sp/>to<sp/>the<sp/>server.</highlight></codeline>
<codeline lineno="357"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="358"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Restarting<sp/>the<sp/>server<sp/>is<sp/>*not*<sp/>required<sp/>for<sp/>the<sp/>new<sp/>method<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="359"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>available.</highlight></codeline>
<codeline lineno="360"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="361"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>can<sp/>be<sp/>used<sp/>to<sp/>override<sp/>method<sp/>implementations<sp/>if<sp/>that<sp/>is</highlight></codeline>
<codeline lineno="362"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desirable.</highlight></codeline>
<codeline lineno="363"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="364"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/>can<sp/>also<sp/>be<sp/>used<sp/>as<sp/>a<sp/>decorator.</highlight></codeline>
<codeline lineno="365"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="366"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>method:<sp/>the<sp/>implementation<sp/>of<sp/>the<sp/>RPC<sp/>method<sp/>to<sp/>add.</highlight></codeline>
<codeline lineno="367"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>name:<sp/>optional<sp/>name<sp/>of<sp/>the<sp/>RPC<sp/>method<sp/>to<sp/>add.<sp/>If<sp/>this<sp/>is</highlight></codeline>
<codeline lineno="368"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>None,<sp/>then<sp/>:code:`method.__name__`<sp/>will<sp/>be<sp/>used<sp/>instead.</highlight></codeline>
<codeline lineno="369"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>method:<sp/>callable</highlight></codeline>
<codeline lineno="370"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>name:<sp/>str</highlight></codeline>
<codeline lineno="371"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>name<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>method:</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functools.partial(self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a303d342cce69a6d651f00866b8f23f7e" kindref="member">add_method</ref>,<sp/>name=name)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_method<sp/>=<sp/><ref refid="namespacedragonfly_1_1rpc_1_1server_1a3337c5dc2c984e2b69c6fd321c93f784" kindref="member">_rpc_method</ref>(method)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a1e9e55cf4e27616f419ed2287cddfa34" kindref="member">_dispatcher</ref>.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a303d342cce69a6d651f00866b8f23f7e" kindref="member">add_method</ref>(new_method,<sp/>name)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Return<sp/>the<sp/>original<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>method</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1ade861d1ef706838a5418580e7c71a8f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1ade861d1ef706838a5418580e7c71a8f2" kindref="member">remove_method</ref>(self,<sp/>name):</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="383"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Remove<sp/>an<sp/>RPC<sp/>method<sp/>from<sp/>the<sp/>server.<sp/>This<sp/>will<sp/>not<sp/>raise<sp/>an<sp/>error</highlight></codeline>
<codeline lineno="384"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>the<sp/>method<sp/>does<sp/>not<sp/>exist.</highlight></codeline>
<codeline lineno="385"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="386"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Restarting<sp/>the<sp/>server<sp/>is<sp/>*not*<sp/>required<sp/>for<sp/>the<sp/>change<sp/>to<sp/>take</highlight></codeline>
<codeline lineno="387"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>effect.</highlight></codeline>
<codeline lineno="388"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="389"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>name:<sp/>the<sp/>name<sp/>of<sp/>the<sp/>RPC<sp/>method<sp/>to<sp/>remove.</highlight></codeline>
<codeline lineno="390"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>name:<sp/>str</highlight></codeline>
<codeline lineno="391"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a1e9e55cf4e27616f419ed2287cddfa34" kindref="member">_dispatcher</ref>.pop(name,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394" refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1ab653f90cf42a03eceddc6d3d1ad26ecf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1ab653f90cf42a03eceddc6d3d1ad26ecf" kindref="member">__enter__</ref>(self):</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a12e12ed80544f76af1430ccbd678d71f" kindref="member">start</ref>()</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397" refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1aa46d8f8e943d3538323c61ce377909d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1aa46d8f8e943d3538323c61ce377909d5" kindref="member">__exit__</ref>(self,<sp/>exc_type,<sp/>exc_val,<sp/>exc_tb):</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1rpc_1_1server_1_1RPCServer_1a574035b3183ccb337d204bfff0d138c0" kindref="member">stop</ref>()</highlight></codeline>
    </programlisting>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/rpc/server.py"/>
  </compounddef>
</doxygen>
