<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1actions_1_1action__focuswindow_1_1FocusWindow" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::actions::action_focuswindow::FocusWindow</compoundname>
    <basecompoundref refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase" prot="public" virt="non-virtual">dragonfly.actions.action_base.ActionBase</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1actions_1_1action__focuswindow_1_1FocusWindow_1a9431b4fb564f2153eeee17e940e3eacd" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.actions.action_focuswindow.FocusWindow::executable</definition>
        <argsstring></argsstring>
        <name>executable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_focuswindow.py" line="61" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_focuswindow.py" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1actions_1_1action__focuswindow_1_1FocusWindow_1a6bbb1d5b4656a80573703823a9a29ec6" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.actions.action_focuswindow.FocusWindow::filter_func</definition>
        <argsstring></argsstring>
        <name>filter_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_focuswindow.py" line="66" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_focuswindow.py" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1actions_1_1action__focuswindow_1_1FocusWindow_1a5c8444082d7211c45fbf398fbc7775bb" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.actions.action_focuswindow.FocusWindow::focus_only</definition>
        <argsstring></argsstring>
        <name>focus_only</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_focuswindow.py" line="67" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_focuswindow.py" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1actions_1_1action__focuswindow_1_1FocusWindow_1aa398074d2d7f9018dba4273abdbf0c17" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.actions.action_focuswindow.FocusWindow::index</definition>
        <argsstring></argsstring>
        <name>index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_focuswindow.py" line="65" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_focuswindow.py" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1actions_1_1action__focuswindow_1_1FocusWindow_1a9e73ce39c5d1153c06c75432519519d7" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.actions.action_focuswindow.FocusWindow::title</definition>
        <argsstring></argsstring>
        <name>title</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_focuswindow.py" line="63" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_focuswindow.py" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1actions_1_1action__focuswindow_1_1FocusWindow_1a2212bedef2078b8a4806d01d121eb75c" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.actions.action_focuswindow.FocusWindow::_str</definition>
        <argsstring></argsstring>
        <name>_str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_focuswindow.py" line="76" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_focuswindow.py" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1actions_1_1action__focuswindow_1_1FocusWindow_1a2f5d210d23c2d5ea19829e2471661b00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.actions.action_focuswindow.FocusWindow.__init__</definition>
        <argsstring>(self, executable=None, title=None, index=None, filter_func=None, focus_only=False)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1actions_1_1action__focuswindow_1_1FocusWindow_1a9431b4fb564f2153eeee17e940e3eacd" kindref="member">executable</ref></type>
          <defname>executable</defname>
          <defval>None</defval>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1actions_1_1action__focuswindow_1_1FocusWindow_1a9e73ce39c5d1153c06c75432519519d7" kindref="member">title</ref></type>
          <defname>title</defname>
          <defval>None</defval>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1actions_1_1action__focuswindow_1_1FocusWindow_1aa398074d2d7f9018dba4273abdbf0c17" kindref="member">index</ref></type>
          <defname>index</defname>
          <defval>None</defval>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1actions_1_1action__focuswindow_1_1FocusWindow_1a6bbb1d5b4656a80573703823a9a29ec6" kindref="member">filter_func</ref></type>
          <defname>filter_func</defname>
          <defval>None</defval>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1actions_1_1action__focuswindow_1_1FocusWindow_1a5c8444082d7211c45fbf398fbc7775bb" kindref="member">focus_only</ref></type>
          <defname>focus_only</defname>
          <defval>False</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_focuswindow.py" line="60" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_focuswindow.py" bodystart="60" bodyend="78"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdragonfly_1_1actions_1_1action__focuswindow_1_1FocusWindow_1a4ec0f59a1dc58b86ef8b28c0e58c3ab2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.actions.action_focuswindow.FocusWindow._execute</definition>
        <argsstring>(self, data=None)</argsstring>
        <name>_execute</name>
        <reimplements refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a180101e50972f99fca9ca74009ce175f">_execute</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>data</type>
          <defname>data</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Virtual method. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_focuswindow.py" line="79" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_focuswindow.py" bodystart="79" bodyend="103"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>    Bring a window to the foreground action.

    Constructor arguments:
     - *executable* (*str*) -- part of the filename of the
       application&apos;s executable to which the target window belongs;
       not case sensitive.
     - *title* (*str*) -- part of the title of the target window;
       not case sensitive.
     - *index* (*str* or *int*) -- zero-based index of the target
       window, for multiple matching windows; can be a string (for
       substitution) but must be convertible to an integer.
     - *filter_func* (*callable*) -- called with a single argument
       (the window object), and should return ``True`` for your
       target windows; example:
       ``lambda window: window.get_position().dy &gt; 100``.
     - *focus_only* (*bool*, default *False*) -- if *True*, then
       attempt to focus the window without raising it by using the
       *Window.set_focus()* method instead of *set_foreground()*.
       This argument may do nothing depending on the platform.

    This action searches all visible windows for a window which
    matches the given parameters.</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dragonfly.actions.action_focuswindow.FocusWindow</label>
        <link refid="classdragonfly_1_1actions_1_1action__focuswindow_1_1FocusWindow"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
      <node id="2">
        <label>dragonfly.actions.action_base.ActionBase</label>
        <link refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>dragonfly.actions.action_focuswindow.FocusWindow</label>
        <link refid="classdragonfly_1_1actions_1_1action__focuswindow_1_1FocusWindow"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
      <node id="2">
        <label>dragonfly.actions.action_base.ActionBase</label>
        <link refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_focuswindow.py" line="33" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_focuswindow.py" bodystart="33" bodyend="103"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a1dfe8e16c1e8963f72c8cb04ec367e9f" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_focuswindow::FocusWindow</scope><name>__add__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a444ecf185c7836c8be0cf2e166a5f45a" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_focuswindow::FocusWindow</scope><name>__iadd__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a39afe0cb63ff97da799bd1fcc7286395" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_focuswindow::FocusWindow</scope><name>__imul__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__focuswindow_1_1FocusWindow_1a2f5d210d23c2d5ea19829e2471661b00" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_focuswindow::FocusWindow</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a0afc12f5eb003b59bf4b11d3928321a2" prot="public" virt="non-virtual" ambiguityscope="dragonfly::actions::action_base::ActionBase."><scope>dragonfly::actions::action_focuswindow::FocusWindow</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a043986deb9acb1306f393f1a5cde6632" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_focuswindow::FocusWindow</scope><name>__ior__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1aa71fbd62af7c640fc65943c76cc09563" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_focuswindow::FocusWindow</scope><name>__mul__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1aa7d635f74abfc39b412c4d8f247f1fd0" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_focuswindow::FocusWindow</scope><name>__or__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a4ceb796f69cac0c4f601ce5916f5c91c" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_focuswindow::FocusWindow</scope><name>__repr__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a54a429d1d2bd048279e57ba5aaea2449" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_focuswindow::FocusWindow</scope><name>__unicode__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__focuswindow_1_1FocusWindow_1a4ec0f59a1dc58b86ef8b28c0e58c3ab2" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_focuswindow::FocusWindow</scope><name>_execute</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a3861efea158692698e3a4f9d79ec7395" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_focuswindow::FocusWindow</scope><name>_log</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a842c601698c9eb62bb03ad937afe9aa6" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_focuswindow::FocusWindow</scope><name>_log_exec</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a873179afc5fe4521c177e121cc6cc9ae" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_focuswindow::FocusWindow</scope><name>_log_init</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__focuswindow_1_1FocusWindow_1a2212bedef2078b8a4806d01d121eb75c" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_focuswindow::FocusWindow</scope><name>_str</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a6d193fe1211e618673e4f4cc06ac623b" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_focuswindow::FocusWindow</scope><name>bind</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a3454ac5c9ab40d43bc64af73157a89df" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_focuswindow::FocusWindow</scope><name>copy_bind</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__focuswindow_1_1FocusWindow_1a9431b4fb564f2153eeee17e940e3eacd" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_focuswindow::FocusWindow</scope><name>executable</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a86ef0362bdcfbca96ae7f69df40b43f3" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_focuswindow::FocusWindow</scope><name>execute</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__focuswindow_1_1FocusWindow_1a6bbb1d5b4656a80573703823a9a29ec6" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_focuswindow::FocusWindow</scope><name>filter_func</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__focuswindow_1_1FocusWindow_1a5c8444082d7211c45fbf398fbc7775bb" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_focuswindow::FocusWindow</scope><name>focus_only</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__focuswindow_1_1FocusWindow_1aa398074d2d7f9018dba4273abdbf0c17" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_focuswindow::FocusWindow</scope><name>index</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__focuswindow_1_1FocusWindow_1a9e73ce39c5d1153c06c75432519519d7" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_focuswindow::FocusWindow</scope><name>title</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
