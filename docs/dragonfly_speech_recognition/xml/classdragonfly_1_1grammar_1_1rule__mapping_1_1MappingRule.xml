<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::grammar::rule_mapping::MappingRule</compoundname>
    <basecompoundref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule" prot="public" virt="non-virtual">dragonfly.grammar.rule_base.Rule</basecompoundref>
    <derivedcompoundref refid="class__functions__example_1_1FunctionExamplesRule" prot="public" virt="non-virtual">_functions_example.FunctionExamplesRule</derivedcompoundref>
    <derivedcompoundref refid="class__sphinx__engine__example_1_1ExampleRule" prot="public" virt="non-virtual">_sphinx_engine_example.ExampleRule</derivedcompoundref>
    <derivedcompoundref refid="classkaldi__demo_1_1ExampleDictationRule" prot="public" virt="non-virtual">kaldi_demo.ExampleDictationRule</derivedcompoundref>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1a3fa9abb876869484d38598326483f8f2" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.rule_mapping.MappingRule::context</definition>
        <argsstring></argsstring>
        <name>context</name>
        <initializer>=  None</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" line="106" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1a71ec4b75d6a730bc03dd3dbc36ec96f0" prot="public" static="yes" mutable="no">
        <type>dictionary</type>
        <definition>dictionary dragonfly.grammar.rule_mapping.MappingRule::defaults</definition>
        <argsstring></argsstring>
        <name>defaults</name>
        <initializer>=  {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" line="105" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1afd857e4ab67ab71c0b076d7b41260c28" prot="public" static="yes" mutable="no">
        <type>list</type>
        <definition>list dragonfly.grammar.rule_mapping.MappingRule::extras</definition>
        <argsstring></argsstring>
        <name>extras</name>
        <initializer>=  []</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" line="104" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1a914bceba3a7e84a0c796710d67da5ad9" prot="public" static="yes" mutable="no">
        <type>dictionary</type>
        <definition>dictionary dragonfly.grammar.rule_mapping.MappingRule::mapping</definition>
        <argsstring></argsstring>
        <name>mapping</name>
        <initializer>=  {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" line="103" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" bodystart="103" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1a3177d9b6380255b535d89cb3c512b32b" prot="private" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool dragonfly.grammar.rule_mapping.MappingRule::_default_exported</definition>
        <argsstring></argsstring>
        <name>_default_exported</name>
        <initializer>=  True</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" line="107" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1a2f9d225c4848b573fa6bf37af7f637cf" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.rule_mapping.MappingRule::_defaults</definition>
        <argsstring></argsstring>
        <name>_defaults</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" line="143" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1a52ace9bd271b687e38f42dce3bfd62e2" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.rule_mapping.MappingRule::_extras</definition>
        <argsstring></argsstring>
        <name>_extras</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" line="142" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1aa962d9bfdb39b14bb260cc31c4207eb6" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.rule_mapping.MappingRule::_mapping</definition>
        <argsstring></argsstring>
        <name>_mapping</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" line="141" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1abb7ddbe0bcfc45480a467a5d60ce45ed" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.rule_mapping.MappingRule::_name</definition>
        <argsstring></argsstring>
        <name>_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" line="140" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" bodystart="140" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1a9df42bb82637e5d7317591bcd4a6c5c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.rule_mapping.MappingRule.__init__</definition>
        <argsstring>(self, name=None, mapping=None, extras=None, defaults=None, exported=None, context=None)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ab5401b17fbd0336bc78a3c066c5dd994" kindref="member">name</ref></type>
          <defname>name</defname>
          <defval>None</defval>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1a914bceba3a7e84a0c796710d67da5ad9" kindref="member">mapping</ref></type>
          <defname>mapping</defname>
          <defval>None</defval>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1afd857e4ab67ab71c0b076d7b41260c28" kindref="member">extras</ref></type>
          <defname>extras</defname>
          <defval>None</defval>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1a71ec4b75d6a730bc03dd3dbc36ec96f0" kindref="member">defaults</ref></type>
          <defname>defaults</defname>
          <defval>None</defval>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a7af29ec6e071aaa4e25205ca312fdd72" kindref="member">exported</ref></type>
          <defname>exported</defname>
          <defval>None</defval>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1a3fa9abb876869484d38598326483f8f2" kindref="member">context</ref></type>
          <defname>context</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" line="111" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" bodystart="111" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1a77090703fbc13fae33e278a11938caa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.rule_mapping.MappingRule.process_recognition</definition>
        <argsstring>(self, node)</argsstring>
        <name>process_recognition</name>
        <reimplements refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aa5b6bf0ae12ca48d6ad901c1d8e68b8a">process_recognition</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>node</type>
          <defname>node</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Process a recognition of this rule.

    This method is called by the containing Grammar when
    this rule is recognized.  This method collects information
    about the recognition and then calls
    MappingRule._process_recognition.

    - *node* -- The root node of the recognition parse tree.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" line="189" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" bodystart="189" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1a1b0ddbb47e44608f74ed02b0d0747077" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.rule_mapping.MappingRule.specs</definition>
        <argsstring>(self)</argsstring>
        <name>specs</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Each spoken-form in the rule.
:rtype: list
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" line="159" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" bodystart="159" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1ac3e8517ea595895ea1a2518dcefad4f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.rule_mapping.MappingRule.value</definition>
        <argsstring>(self, node)</argsstring>
        <name>value</name>
        <reimplements refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ae7687e1ba3425cdd449733f726595961">value</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>node</type>
          <defname>node</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Start of phrase callback.

    This method is called to obtain the semantic value associated
    with a particular recognition.  It could be called from
    another rule&apos;s :meth:`.value` if
    that rule references this rule.  If also be called from this
    rule&apos;s :meth:`.process_recognition`
    if that method has been overridden to do so in a derived
    class.

    The default implementation of this method returns the value of
    this rule&apos;s root element.

    .. note::

       This is generally the method which developers should
       override in derived rule classes to change the default
       semantic value of a recognized rule.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" line="166" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" bodystart="166" bodyend="188"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1ae50fa6a97521e45babe2db4b6c533e0d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.rule_mapping.MappingRule._process_recognition</definition>
        <argsstring>(self, value, extras)</argsstring>
        <name>_process_recognition</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1ac3e8517ea595895ea1a2518dcefad4f5" kindref="member">value</ref></type>
          <defname>value</defname>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1afd857e4ab67ab71c0b076d7b41260c28" kindref="member">extras</ref></type>
          <defname>extras</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Default recognition processing.

    This is the method which should be overridden in most cases
    to provide derived classes with custom recognition
    processing functionality.

    This default processing method takes the mapping value
    from the recognition and, if it is an action, executes it
    with the given extras as a dynamic values.

    - *value* -- The mapping value recognized.
    - *extras* -- A dictionary of all elements from the
      extras list contained within this recognition.
      Maps element name -&gt; element value.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" line="219" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" bodystart="219" bodyend="241"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>    Rule class based on a mapping of spoken-forms to semantic values.

    Constructor arguments:
     - *name* (*str*) -- the rule&apos;s name
     - *mapping* (*dict*) -- mapping of spoken-forms to semantic
       values
     - *extras* (sequence) -- extras elements referenced from the
       spoken-forms in *mapping*
     - *defaults* (*dict*) -- default values for the extras
     - *exported* (boolean) -- whether the rule is exported
     - *context* (*Context*) -- context in which the rule will be active</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="6">
        <label>kaldi_demo.ExampleDictationRule</label>
        <link refid="classkaldi__demo_1_1ExampleDictationRule"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>dragonfly.grammar.rule_base.Rule</label>
        <link refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>dragonfly.grammar.rule_mapping.MappingRule</label>
        <link refid="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>_functions_example.FunctionExamplesRule</label>
        <link refid="class__functions__example_1_1FunctionExamplesRule"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
      <node id="5">
        <label>_sphinx_engine_example.ExampleRule</label>
        <link refid="class__sphinx__engine__example_1_1ExampleRule"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>dragonfly.grammar.rule_base.Rule</label>
        <link refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>dragonfly.grammar.rule_mapping.MappingRule</label>
        <link refid="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" line="87" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/rule_mapping.py" bodystart="87" bodyend="241"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1a9df42bb82637e5d7317591bcd4a6c5c9" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a576f085cc4f4ecdf154584ec8ceb3e2c" prot="public" virt="non-virtual" ambiguityscope="dragonfly::grammar::rule_base::Rule."><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a650f73cead2a52ea698531a69a242d1e" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>__repr__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5fa26e7246b883fc7e2fef8a32a931be" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>_active</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a72e22c4830016ae96b9079f1329fb02b" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>_context</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1a3177d9b6380255b535d89cb3c512b32b" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>_default_exported</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1a2f9d225c4848b573fa6bf37af7f637cf" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>_defaults</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5f244a7ccce70fbf7f2fa0fc26ebf5c5" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>_element</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1accac7d6feda0165d863fdfcdee7674fd" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>_enabled</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a9e1a66ec204cfc3e4ff43cfd26700c94" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>_exported</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1a52ace9bd271b687e38f42dce3bfd62e2" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>_extras</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a478b03a236aba8b50f2cf9ffe6119c69" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>_get_grammar</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a232f71f2b67ac6d567d349a5ae249461" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>_grammar</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1acc246f5f8cd4333fe5dfac1e24d8b131" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>_imported</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a75fdcef87114b992f3ba76c3ec19c12e" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>_log</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a63708f8b55821fc912d3c9613659c30c" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>_log_begin</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ab2392a9b9a401b2734055021cd361627" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>_log_eval</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a3bbefb0e38e96771de43401ff853e16b" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>_log_load</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ab2d4c33c6947d06f136d722a60a6ad69" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>_log_proc</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1aa962d9bfdb39b14bb260cc31c4207eb6" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>_mapping</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1abb7ddbe0bcfc45480a467a5d60ce45ed" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>_name</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aac3106f975f474720ae8e2108a559176" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>_next_anonymous_id</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aee4c3167defe093caa2f816d0bac44c4" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>_process_begin</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1ae50fa6a97521e45babe2db4b6c533e0d" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>_process_recognition</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1afa435043469a44e51138758804b2f598" prot="private" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>_set_grammar</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5436cd9a899ed82891f758df721ec6a6" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>activate</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aa4683441cd4d4ab5b779a47968523e57" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>active</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1a3fa9abb876869484d38598326483f8f2" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>context</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a4182eda5b94f8094902ad609450ee11f" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>deactivate</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ac0b4fbdf1d22cd5e22f76cd73d9e6d3a" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>decode</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1a71ec4b75d6a730bc03dd3dbc36ec96f0" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>defaults</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a9c1ad9ae6e3df632c27026df085975bf" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>dependencies</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a6b035ec7557e6fb3e7323d56e9f156b4" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>disable</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ae6c1b3c23c33d24fb8439d4ab86b83aa" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>element</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a9ec8b499154a709d7ddadb33f11c31b0" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>enable</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a242823b84443b08f3d27d79ec5d1bb98" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>enabled</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a7af29ec6e071aaa4e25205ca312fdd72" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>exported</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1afd857e4ab67ab71c0b076d7b41260c28" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>extras</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a32ba29c3a4623ac9bce6009b7efc70ce" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>grammar</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aeac96c1300b6a1ba64ef5faf23a859a2" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>gstring</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ae10a43239703a5932f08e712dd2416a7" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>imported</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1a914bceba3a7e84a0c796710d67da5ad9" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>mapping</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ab5401b17fbd0336bc78a3c066c5dd994" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>name</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a670d76c19e2f0f59349bc01f983adf24" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>process_begin</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1a77090703fbc13fae33e278a11938caa0" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>process_recognition</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1af25b9727d10e38f7db3f42f433f59320" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>process_results</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a7a6bda63736ee144f0e22f63185dbb1d" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>set_context</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1a1b0ddbb47e44608f74ed02b0d0747077" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>specs</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__mapping_1_1MappingRule_1ac3e8517ea595895ea1a2518dcefad4f5" prot="public" virt="non-virtual"><scope>dragonfly::grammar::rule_mapping::MappingRule</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
