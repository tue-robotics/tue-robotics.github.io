<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1engines_1_1backend__text_1_1speaker_1_1TextSpeaker" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::engines::backend_text::speaker::TextSpeaker</compoundname>
    <basecompoundref refid="classdragonfly_1_1engines_1_1base_1_1speaker_1_1SpeakerBase" prot="public" virt="non-virtual">dragonfly.engines.base.speaker.SpeakerBase</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1engines_1_1backend__text_1_1speaker_1_1TextSpeaker_1a260b0aded10e909bac30637bf02eed8b" prot="private" static="yes" mutable="no">
        <type>string</type>
        <definition>string dragonfly.engines.backend_text.speaker.TextSpeaker::_name</definition>
        <argsstring></argsstring>
        <name>_name</name>
        <initializer>=  &quot;text&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_text/speaker.py" line="38" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_text/speaker.py" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1backend__text_1_1speaker_1_1TextSpeaker_1a1ab462ee8407ac3a63e7b61efc4389c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.backend_text.speaker.TextSpeaker.__init__</definition>
        <argsstring>(self)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_text/speaker.py" line="40" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_text/speaker.py" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1backend__text_1_1speaker_1_1TextSpeaker_1a1b763ded2580ab574c1d9aa4e40ada78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.backend_text.speaker.TextSpeaker.speak</definition>
        <argsstring>(self, text)</argsstring>
        <name>speak</name>
        <reimplements refid="classdragonfly_1_1engines_1_1base_1_1speaker_1_1SpeakerBase_1a0f4567738615daecb1a987b35837f6ee">speak</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>text</type>
          <defname>text</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Speak the given *text* using text-to-speech. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_text/speaker.py" line="43" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_text/speaker.py" bodystart="43" bodyend="47"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>This speaker class is used as a fallback when no real speaker
implementation is available.  Specified text is written to *stdout*,
i.e., it is printed to the console.
</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>object</label>
      </node>
      <node id="1">
        <label>dragonfly.engines.backend_text.speaker.TextSpeaker</label>
        <link refid="classdragonfly_1_1engines_1_1backend__text_1_1speaker_1_1TextSpeaker"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>dragonfly.engines.base.speaker.SpeakerBase</label>
        <link refid="classdragonfly_1_1engines_1_1base_1_1speaker_1_1SpeakerBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>string</label>
      </node>
      <node id="3">
        <label>object</label>
      </node>
      <node id="1">
        <label>dragonfly.engines.backend_text.speaker.TextSpeaker</label>
        <link refid="classdragonfly_1_1engines_1_1backend__text_1_1speaker_1_1TextSpeaker"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>_name</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>dragonfly.engines.base.speaker.SpeakerBase</label>
        <link refid="classdragonfly_1_1engines_1_1base_1_1speaker_1_1SpeakerBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>_name</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_text/speaker.py" line="31" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_text/speaker.py" bodystart="31" bodyend="47"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1engines_1_1backend__text_1_1speaker_1_1TextSpeaker_1a1ab462ee8407ac3a63e7b61efc4389c7" prot="public" virt="non-virtual"><scope>dragonfly::engines::backend_text::speaker::TextSpeaker</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1speaker_1_1SpeakerBase_1ae9de603758eb40d970959127f4cd8530" prot="private" virt="non-virtual"><scope>dragonfly::engines::backend_text::speaker::TextSpeaker</scope><name>_log</name></member>
      <member refid="classdragonfly_1_1engines_1_1backend__text_1_1speaker_1_1TextSpeaker_1a260b0aded10e909bac30637bf02eed8b" prot="private" virt="non-virtual"><scope>dragonfly::engines::backend_text::speaker::TextSpeaker</scope><name>_name</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1speaker_1_1SpeakerBase_1a5fe5bd4cb4f8ad2c7813e2062606501f" prot="private" virt="non-virtual"><scope>dragonfly::engines::backend_text::speaker::TextSpeaker</scope><name>_register</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1speaker_1_1SpeakerBase_1a2da220dbf174a7938513e7e7a191a1a2" prot="public" virt="non-virtual"><scope>dragonfly::engines::backend_text::speaker::TextSpeaker</scope><name>name</name></member>
      <member refid="classdragonfly_1_1engines_1_1backend__text_1_1speaker_1_1TextSpeaker_1a1b763ded2580ab574c1d9aa4e40ada78" prot="public" virt="non-virtual"><scope>dragonfly::engines::backend_text::speaker::TextSpeaker</scope><name>speak</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
