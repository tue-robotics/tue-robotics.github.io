<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="action__key_8py" kind="file" language="Python">
    <compoundname>action_key.py</compoundname>
    <innerclass refid="classdragonfly_1_1actions_1_1action__key_1_1Key" prot="public">dragonfly::actions::action_key::Key</innerclass>
    <innernamespace refid="namespacedragonfly_1_1actions_1_1action__key">dragonfly::actions::action_key</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacedragonfly_1_1actions_1_1action__key" refkind="compound"><highlight class="comment">#<sp/>encoding:<sp/>utf-8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Dragonfly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(c)<sp/>Copyright<sp/>2007,<sp/>2008<sp/>by<sp/>Christo<sp/>Butcher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Licensed<sp/>under<sp/>the<sp/>LGPL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Dragonfly<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Dragonfly<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>License<sp/>along<sp/>with<sp/>Dragonfly.<sp/><sp/>If<sp/>not,<sp/>see</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral">..<sp/>_RefKey:</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral">Key<sp/>action</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral">============================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral">This<sp/>section<sp/>describes<sp/>the<sp/>:class:`Key`<sp/>action<sp/>object.<sp/><sp/>This</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral">type<sp/>of<sp/>action<sp/>is<sp/>used<sp/>for<sp/>sending<sp/>keystrokes<sp/>to<sp/>the<sp/>foreground</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral">application.<sp/><sp/>This<sp/>works<sp/>on<sp/>Windows,<sp/>Mac<sp/>OS<sp/>and<sp/>with<sp/>X11<sp/>(e.g.<sp/>on<sp/>Linux).</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral">Examples<sp/>of<sp/>how<sp/>to<sp/>use<sp/>this<sp/>class<sp/>are<sp/>given<sp/>in<sp/>:ref:`RefKeySpecExamples`.</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral">To<sp/>use<sp/>this<sp/>class<sp/>on<sp/>X11/Linux,<sp/>the</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral">`xdotool<sp/>&lt;https://www.semicomplete.com/projects/xdotool/&gt;`__<sp/>program<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral">installed<sp/>and<sp/>the<sp/>``DISPLAY``<sp/>environment<sp/>variable<sp/>set.<sp/><sp/>This<sp/>class<sp/>does</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral">**not**<sp/>support<sp/>typing<sp/>keys<sp/>in<sp/>Wayland<sp/>sessions.</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral">..<sp/>_RefKeySpec:</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral">Keystroke<sp/>specification<sp/>format</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral">............................................................................</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral">The<sp/>*spec*<sp/>argument<sp/>passed<sp/>to<sp/>the<sp/>:class:`Key`<sp/>constructor<sp/>specifies<sp/>which</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral">keystroke<sp/>events<sp/>will<sp/>be<sp/>emulated.<sp/><sp/>It<sp/>is<sp/>a<sp/>string<sp/>consisting<sp/>of<sp/>one<sp/>or</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral">more<sp/>comma-separated<sp/>keystroke<sp/>elements.<sp/><sp/>Each<sp/>of<sp/>these<sp/>elements<sp/>has<sp/>one</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral">of<sp/>the<sp/>following<sp/>two<sp/>possible<sp/>formats:</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral">Normal<sp/>press-release<sp/>key<sp/>action,<sp/>optionally<sp/>repeated<sp/>several<sp/>times:</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"><sp/><sp/><sp/>[*modifiers*<sp/>``-``]<sp/>*keyname*<sp/>[``/``<sp/>*innerpause*]<sp/>[``:``<sp/>*repeat*]<sp/>[``/``<sp/>*outerpause*]</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral">Press-and-hold<sp/>a<sp/>key,<sp/>or<sp/>release<sp/>a<sp/>held-down<sp/>key:</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/>[*modifiers*<sp/>``-``]<sp/>*keyname*<sp/>``:``<sp/>*direction*<sp/>[``/``<sp/>*outerpause*]</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral">The<sp/>different<sp/>parts<sp/>of<sp/>the<sp/>keystroke<sp/>specification<sp/>are<sp/>as<sp/>follows.<sp/><sp/>Note</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral">that<sp/>only<sp/>*keyname*<sp/>is<sp/>required;<sp/>the<sp/>other<sp/>fields<sp/>are<sp/>optional.</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/>-<sp/>*modifiers*<sp/>--</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/>Modifiers<sp/>for<sp/>this<sp/>keystroke.<sp/><sp/>These<sp/>keys<sp/>are<sp/>held<sp/>down</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/>while<sp/>pressing<sp/>the<sp/>main<sp/>keystroke.</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/>Can<sp/>be<sp/>zero<sp/>or<sp/>more<sp/>of<sp/>the<sp/>following:</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>``a``<sp/>--<sp/>alt<sp/>key</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>``c``<sp/>--<sp/>control<sp/>key</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>``s``<sp/>--<sp/>shift<sp/>key</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>``w``<sp/>--<sp/>Windows<sp/>key</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"><sp/>-<sp/>*keyname*<sp/>--</highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral"><sp/><sp/><sp/>Name<sp/>of<sp/>the<sp/>keystroke.<sp/><sp/>Valid<sp/>names<sp/>are<sp/>listed<sp/>in</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/>:ref:`RefKeySpecNames`.</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/>-<sp/>*innerpause*<sp/>--</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"><sp/><sp/><sp/>The<sp/>time<sp/>to<sp/>pause<sp/>between<sp/>repetitions<sp/>of<sp/>this<sp/>keystroke.</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"><sp/><sp/><sp/>It<sp/>should<sp/>be<sp/>given<sp/>in<sp/>hundredths<sp/>of<sp/>a<sp/>second.<sp/><sp/>For</highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/><sp/><sp/>example,<sp/>&quot;20&quot;<sp/>will<sp/>pause<sp/>for<sp/>20/100s<sp/>=<sp/>0.2<sp/>seconds.</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/>-<sp/>*repeat*<sp/>--</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/><sp/>The<sp/>number<sp/>of<sp/>times<sp/>this<sp/>keystroke<sp/>should<sp/>be<sp/>repeated.</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"><sp/><sp/><sp/>If<sp/>not<sp/>specified,<sp/>the<sp/>key<sp/>will<sp/>be<sp/>pressed<sp/>and<sp/>released<sp/>once.</highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/>-<sp/>*outerpause*<sp/>--</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/><sp/>The<sp/>time<sp/>to<sp/>pause<sp/>after<sp/>this<sp/>keystroke.</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"><sp/><sp/><sp/>It<sp/>should<sp/>be<sp/>given<sp/>in<sp/>hundredths<sp/>of<sp/>a<sp/>second.<sp/><sp/>For</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"><sp/><sp/><sp/>example,<sp/>&quot;20&quot;<sp/>will<sp/>pause<sp/>for<sp/>20/100s<sp/>=<sp/>0.2<sp/>seconds.</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/>-<sp/>*direction*<sp/>--</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/>Whether<sp/>to<sp/>press-and-hold<sp/>or<sp/>release<sp/>the<sp/>key.<sp/><sp/>Must<sp/>be</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"><sp/><sp/><sp/>one<sp/>of<sp/>the<sp/>following:</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>``down``<sp/>--<sp/>press<sp/>and<sp/>hold<sp/>the<sp/>key</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>``up``<sp/>--<sp/>release<sp/>the<sp/>key</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"><sp/><sp/><sp/>Note<sp/>that<sp/>releasing<sp/>a<sp/>key<sp/>which<sp/>is<sp/>*not*<sp/>being<sp/>held<sp/>down<sp/>does<sp/>*not*</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/>cause<sp/>an<sp/>error.<sp/><sp/>It<sp/>harmlessly<sp/>does<sp/>nothing.</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral">..<sp/>_RefKeySpecNames:</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral">Key<sp/>names</highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral">............................................................................</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"><sp/>-<sp/>Lowercase<sp/>letter<sp/>keys:<sp/>``a``<sp/>or<sp/>``alpha``,<sp/>``b``<sp/>or<sp/>``bravo``,</highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/><sp/>``c``<sp/>or<sp/>``charlie``,<sp/>``d``<sp/>or<sp/>``delta``,<sp/>``e``<sp/>or<sp/>``echo``,</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/><sp/>``f``<sp/>or<sp/>``foxtrot``,<sp/>``g``<sp/>or<sp/>``golf``,<sp/>``h``<sp/>or<sp/>``hotel``,</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/><sp/>``i``<sp/>or<sp/>``india``,<sp/>``j``<sp/>or<sp/>``juliet``,<sp/>``k``<sp/>or<sp/>``kilo``,</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/><sp/>``l``<sp/>or<sp/>``lima``,<sp/>``m``<sp/>or<sp/>``mike``,<sp/>``n``<sp/>or<sp/>``november``,</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/><sp/>``o``<sp/>or<sp/>``oscar``,<sp/>``p``<sp/>or<sp/>``papa``,<sp/>``q``<sp/>or<sp/>``quebec``,</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/><sp/>``r``<sp/>or<sp/>``romeo``,<sp/>``s``<sp/>or<sp/>``sierra``,<sp/>``t``<sp/>or<sp/>``tango``,</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"><sp/><sp/><sp/>``u``<sp/>or<sp/>``uniform``,<sp/>``v``<sp/>or<sp/>``victor``,<sp/>``w``<sp/>or<sp/>``whisky``,</highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral"><sp/><sp/><sp/>``x``<sp/>or<sp/>``xray``,<sp/>``y``<sp/>or<sp/>``yankee``,<sp/>``z``<sp/>or<sp/>``zulu``</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"><sp/>-<sp/>Uppercase<sp/>letter<sp/>keys:<sp/>``A``<sp/>or<sp/>``Alpha``,<sp/>``B``<sp/>or<sp/>``Bravo``,</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/><sp/>``C``<sp/>or<sp/>``Charlie``,<sp/>``D``<sp/>or<sp/>``Delta``,<sp/>``E``<sp/>or<sp/>``Echo``,</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/><sp/>``F``<sp/>or<sp/>``Foxtrot``,<sp/>``G``<sp/>or<sp/>``Golf``,<sp/>``H``<sp/>or<sp/>``Hotel``,</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"><sp/><sp/><sp/>``I``<sp/>or<sp/>``India``,<sp/>``J``<sp/>or<sp/>``Juliet``,<sp/>``K``<sp/>or<sp/>``Kilo``,</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"><sp/><sp/><sp/>``L``<sp/>or<sp/>``Lima``,<sp/>``M``<sp/>or<sp/>``Mike``,<sp/>``N``<sp/>or<sp/>``November``,</highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"><sp/><sp/><sp/>``O``<sp/>or<sp/>``Oscar``,<sp/>``P``<sp/>or<sp/>``Papa``,<sp/>``Q``<sp/>or<sp/>``Quebec``,</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/><sp/>``R``<sp/>or<sp/>``Romeo``,<sp/>``S``<sp/>or<sp/>``Sierra``,<sp/>``T``<sp/>or<sp/>``Tango``,</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/>``U``<sp/>or<sp/>``Uniform``,<sp/>``V``<sp/>or<sp/>``Victor``,<sp/>``W``<sp/>or<sp/>``Whisky``,</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"><sp/><sp/><sp/>``X``<sp/>or<sp/>``Xray``,<sp/>``Y``<sp/>or<sp/>``Yankee``,<sp/>``Z``<sp/>or<sp/>``Zulu``</highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"><sp/>-<sp/>Number<sp/>keys:<sp/>``0``<sp/>or<sp/>``zero``,<sp/>``1``<sp/>or<sp/>``one``,<sp/>``2``<sp/>or<sp/>``two``,</highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/><sp/>``3``<sp/>or<sp/>``three``,<sp/>``4``<sp/>or<sp/>``four``,<sp/>``5``<sp/>or<sp/>``five``,</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"><sp/><sp/><sp/>``6``<sp/>or<sp/>``six``,<sp/>``7``<sp/>or<sp/>``seven``,<sp/>``8``<sp/>or<sp/>``eight``,</highlight></codeline>
<codeline lineno="118"><highlight class="stringliteral"><sp/><sp/><sp/>``9``<sp/>or<sp/>``nine``</highlight></codeline>
<codeline lineno="119"><highlight class="stringliteral"><sp/>-<sp/>Symbol<sp/>keys:<sp/>``!``<sp/>or<sp/>``bang``<sp/>or<sp/>``exclamation``,<sp/>``@``<sp/>or<sp/>``at``,</highlight></codeline>
<codeline lineno="120"><highlight class="stringliteral"><sp/><sp/><sp/>``#``<sp/>or<sp/>``hash``,<sp/>``$``<sp/>or<sp/>``dollar``,<sp/>``%``<sp/>or<sp/>``percent``,</highlight></codeline>
<codeline lineno="121"><highlight class="stringliteral"><sp/><sp/><sp/>``^``<sp/>or<sp/>``caret``,<sp/>``&amp;``<sp/>or<sp/>``and``<sp/>or<sp/>``ampersand``,</highlight></codeline>
<codeline lineno="122"><highlight class="stringliteral"><sp/><sp/><sp/>``*``<sp/>or<sp/>``star``<sp/>or<sp/>``asterisk``,</highlight></codeline>
<codeline lineno="123"><highlight class="stringliteral"><sp/><sp/><sp/>``(``<sp/>or<sp/>``leftparen``<sp/>or<sp/>``lparen``,</highlight></codeline>
<codeline lineno="124"><highlight class="stringliteral"><sp/><sp/><sp/>``)``<sp/>or<sp/>``rightparen``<sp/>or<sp/>``rparen``,<sp/>``minus``<sp/>or<sp/>``hyphen``,</highlight></codeline>
<codeline lineno="125"><highlight class="stringliteral"><sp/><sp/><sp/>``_``<sp/>or<sp/>``underscore``,<sp/>``+``<sp/>or<sp/>``plus``,<sp/>`````<sp/>or<sp/>``backtick``,</highlight></codeline>
<codeline lineno="126"><highlight class="stringliteral"><sp/><sp/><sp/>``~``<sp/>or<sp/>``tilde``,<sp/>``[``<sp/>or<sp/>``leftbracket``<sp/>or<sp/>``lbracket``,</highlight></codeline>
<codeline lineno="127"><highlight class="stringliteral"><sp/><sp/><sp/>``]``<sp/>or<sp/>``rightbracket``<sp/>or<sp/>``rbracket``,</highlight></codeline>
<codeline lineno="128"><highlight class="stringliteral"><sp/><sp/><sp/>``{``<sp/>or<sp/>``leftbrace``<sp/>or<sp/>``lbrace``,</highlight></codeline>
<codeline lineno="129"><highlight class="stringliteral"><sp/><sp/><sp/>``}``<sp/>or<sp/>``rightbrace``<sp/>or<sp/>``rbrace``,<sp/>``\\``<sp/>or<sp/>``backslash``,</highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"><sp/><sp/><sp/>``|``<sp/>or<sp/>``bar``,<sp/>``colon``,<sp/>``;``<sp/>or<sp/>``semicolon``,</highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/><sp/><sp/>``&apos;``<sp/>or<sp/>``apostrophe``<sp/>or<sp/>``singlequote``<sp/>or<sp/>``squote``,</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"><sp/><sp/><sp/>``&quot;``<sp/>or<sp/>``quote``<sp/>or<sp/>``doublequote``<sp/>or<sp/>``dquote``,<sp/>``comma``,</highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"><sp/><sp/><sp/>``.``<sp/>or<sp/>``dot``,<sp/>``slash``,</highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"><sp/><sp/><sp/>``&lt;``<sp/>or<sp/>``lessthan``<sp/>or<sp/>``leftangle``<sp/>or<sp/>``langle``,</highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral"><sp/><sp/><sp/>``&gt;``<sp/>or<sp/>``greaterthan``<sp/>or<sp/>``rightangle``<sp/>or<sp/>``rangle``,</highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"><sp/><sp/><sp/>``?``<sp/>or<sp/>``question``,<sp/>``=``<sp/>or<sp/>``equal``<sp/>or<sp/>``equals``</highlight></codeline>
<codeline lineno="137"><highlight class="stringliteral"><sp/>-<sp/>Whitespace<sp/>and<sp/>editing<sp/>keys:<sp/>``enter``,<sp/>``tab``,<sp/>``space``,</highlight></codeline>
<codeline lineno="138"><highlight class="stringliteral"><sp/><sp/><sp/>``backspace``,<sp/>``delete``<sp/>or<sp/>``del``</highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"><sp/>-<sp/>Main<sp/>modifier<sp/>keys:<sp/>``shift``,<sp/>``control``<sp/>or<sp/>``ctrl``,<sp/>``alt``</highlight></codeline>
<codeline lineno="140"><highlight class="stringliteral"><sp/>-<sp/>Right<sp/>modifier<sp/>keys:<sp/>``rshift``,<sp/>``rcontrol``<sp/>or<sp/>``rctrl``,<sp/>``ralt``</highlight></codeline>
<codeline lineno="141"><highlight class="stringliteral"><sp/>-<sp/>Special<sp/>keys:<sp/>``escape``,<sp/>``insert``,<sp/>``pause``,<sp/>``win``,<sp/>``rwin``,</highlight></codeline>
<codeline lineno="142"><highlight class="stringliteral"><sp/><sp/><sp/>``apps``<sp/>or<sp/>``popup``,<sp/>``snapshot``<sp/>or<sp/>``printscreen``</highlight></codeline>
<codeline lineno="143"><highlight class="stringliteral"><sp/>-<sp/>Lock<sp/>keys:<sp/>``scrolllock``,<sp/>``numlock``,<sp/>``capslock``</highlight></codeline>
<codeline lineno="144"><highlight class="stringliteral"><sp/>-<sp/>Navigation<sp/>keys:<sp/>``up``,<sp/>``down``,<sp/>``left``,<sp/>``right``,</highlight></codeline>
<codeline lineno="145"><highlight class="stringliteral"><sp/><sp/><sp/>``pageup``<sp/>or<sp/>``pgup``,<sp/>``pagedown``<sp/>or<sp/>``pgdown``,<sp/>``home``,<sp/>``end``</highlight></codeline>
<codeline lineno="146"><highlight class="stringliteral"><sp/>-<sp/>Number<sp/>pad<sp/>keys:<sp/>``npmul``,<sp/>``npadd``,<sp/>``npsep``,<sp/>``npsub``,</highlight></codeline>
<codeline lineno="147"><highlight class="stringliteral"><sp/><sp/><sp/>``npdec``,<sp/>``npdiv``,<sp/>``numpad0``<sp/>or<sp/>``np0``,<sp/>``numpad1``<sp/>or<sp/>``np1``,</highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral"><sp/><sp/><sp/>``numpad2``<sp/>or<sp/>``np2``,<sp/>``numpad3``<sp/>or<sp/>``np3``,</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"><sp/><sp/><sp/>``numpad4``<sp/>or<sp/>``np4``,<sp/>``numpad5``<sp/>or<sp/>``np5``,</highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/><sp/>``numpad6``<sp/>or<sp/>``np6``,<sp/>``numpad7``<sp/>or<sp/>``np7``,</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/>``numpad8``<sp/>or<sp/>``np8``,<sp/>``numpad9``<sp/>or<sp/>``np9``</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"><sp/>-<sp/>Function<sp/>keys:<sp/>``f1``,<sp/>``f2``,<sp/>``f3``,<sp/>``f4``,<sp/>``f5``,<sp/>``f6``,</highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/><sp/><sp/>``f7``,<sp/>``f8``,<sp/>``f9``,<sp/>``f10``,<sp/>``f11``,<sp/>``f12``,<sp/>``f13``,<sp/>``f14``,</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"><sp/><sp/><sp/>``f15``,<sp/>``f16``,<sp/>``f17``,<sp/>``f18``,<sp/>``f19``,<sp/>``f20``,<sp/>``f21``,</highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"><sp/><sp/><sp/>``f22``,<sp/>``f23``,<sp/>``f24``</highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral"><sp/>-<sp/>Multimedia<sp/>keys:<sp/>``volumeup``<sp/>or<sp/>``volup``,</highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"><sp/><sp/><sp/>``volumedown``<sp/>or<sp/>``voldown``,<sp/>``volumemute``<sp/>or<sp/>``volmute``,</highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/>``tracknext``,<sp/>``trackprev``,<sp/>``playpause``,<sp/>``browserback``,</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"><sp/><sp/><sp/>``browserforward``</highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="161"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="162"><highlight class="stringliteral">..<sp/>_RefKeySpecExamples:</highlight></codeline>
<codeline lineno="163"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="164"><highlight class="stringliteral">Example<sp/>key<sp/>actions</highlight></codeline>
<codeline lineno="165"><highlight class="stringliteral">............................................................................</highlight></codeline>
<codeline lineno="166"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="167"><highlight class="stringliteral">The<sp/>following<sp/>code<sp/>types<sp/>the<sp/>text<sp/>&quot;Hello<sp/>world!&quot;<sp/>into<sp/>the<sp/>foreground</highlight></codeline>
<codeline lineno="168"><highlight class="stringliteral">application:<sp/>::</highlight></codeline>
<codeline lineno="169"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="170"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Key(&quot;H,<sp/>e,<sp/>l,<sp/>l,<sp/>o,<sp/>space,<sp/>w,<sp/>o,<sp/>r,<sp/>l,<sp/>d,<sp/>exclamation&quot;).execute()</highlight></codeline>
<codeline lineno="171"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="172"><highlight class="stringliteral">The<sp/>following<sp/>code<sp/>is<sp/>a<sp/>bit<sp/>more<sp/>useful,<sp/>as<sp/>it<sp/>saves<sp/>the<sp/>current<sp/>file<sp/>with</highlight></codeline>
<codeline lineno="173"><highlight class="stringliteral">the<sp/>name<sp/>&quot;dragonfly.txt&quot;<sp/>(this<sp/>works<sp/>for<sp/>many<sp/>English-language</highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral">applications):<sp/>::</highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>action<sp/>=<sp/>Key(&quot;a-f,<sp/>a/50&quot;)<sp/>+<sp/>Text(&quot;dragonfly.txt&quot;)<sp/>+<sp/>Key(&quot;enter&quot;)</highlight></codeline>
<codeline lineno="177"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>action.execute()</highlight></codeline>
<codeline lineno="178"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="179"><highlight class="stringliteral">The<sp/>following<sp/>code<sp/>selects<sp/>the<sp/>next<sp/>four<sp/>lines<sp/>by<sp/>holding<sp/>down<sp/>the<sp/>*shift*</highlight></codeline>
<codeline lineno="180"><highlight class="stringliteral">key,<sp/>slowly<sp/>moving<sp/>down<sp/>4<sp/>lines,<sp/>and<sp/>then<sp/>releasing<sp/>the<sp/>*shift*<sp/>key:<sp/>::</highlight></codeline>
<codeline lineno="181"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="182"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Key(&quot;shift:down,<sp/>down/25:4,<sp/>shift:up&quot;).execute()</highlight></codeline>
<codeline lineno="183"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="184"><highlight class="stringliteral">The<sp/>following<sp/>code<sp/>locks<sp/>the<sp/>screen<sp/>by<sp/>pressing<sp/>the<sp/>*Windows*<sp/>key<sp/>together</highlight></codeline>
<codeline lineno="185"><highlight class="stringliteral">with<sp/>the<sp/>*l*<sp/>key:<sp/>::</highlight></codeline>
<codeline lineno="186"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Key(&quot;w-l&quot;).execute()</highlight></codeline>
<codeline lineno="188"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="189"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="190"><highlight class="stringliteral">Windows<sp/>key<sp/>support</highlight></codeline>
<codeline lineno="191"><highlight class="stringliteral">............................................................................</highlight></codeline>
<codeline lineno="192"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="193"><highlight class="stringliteral">Keyboard<sp/>events<sp/>sent<sp/>by<sp/>:class:`Key`<sp/>actions<sp/>on<sp/>Windows<sp/>are<sp/>calculated<sp/>using</highlight></codeline>
<codeline lineno="194"><highlight class="stringliteral">the<sp/>current<sp/>foreground<sp/>window&apos;s<sp/>keyboard<sp/>layout.<sp/>The<sp/>class<sp/>will<sp/>fallback<sp/>on</highlight></codeline>
<codeline lineno="195"><highlight class="stringliteral">Unicode<sp/>events<sp/>for<sp/>keys<sp/>not<sp/>typeable<sp/>with<sp/>the<sp/>current<sp/>layout.</highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral">The<sp/>:class:`Key`<sp/>action<sp/>can<sp/>be<sp/>used<sp/>to<sp/>type<sp/>arbitrary<sp/>Unicode<sp/>characters<sp/>on</highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral">Windows<sp/>using<sp/>the<sp/>`relevant<sp/>Windows<sp/>API</highlight></codeline>
<codeline lineno="199"><highlight class="stringliteral">&lt;https://docs.microsoft.com/en-us/windows/desktop/api/winuser/ns-winuser-tagkeybdinput#remarks&gt;`__.</highlight></codeline>
<codeline lineno="200"><highlight class="stringliteral">This<sp/>is<sp/>disabled<sp/>by<sp/>default<sp/>because<sp/>it<sp/>ignores<sp/>the<sp/>up/down<sp/>status<sp/>of</highlight></codeline>
<codeline lineno="201"><highlight class="stringliteral">modifier<sp/>keys<sp/>(e.g.<sp/>ctrl).</highlight></codeline>
<codeline lineno="202"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="203"><highlight class="stringliteral">It<sp/>can<sp/>be<sp/>enabled<sp/>by<sp/>changing<sp/>the<sp/>``unicode_keyboard``<sp/>setting<sp/>in</highlight></codeline>
<codeline lineno="204"><highlight class="stringliteral">`~/.dragonfly2-speech/settings.cfg`<sp/>to<sp/>``True``:<sp/>::</highlight></codeline>
<codeline lineno="205"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="206"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>unicode_keyboard<sp/>=<sp/>True</highlight></codeline>
<codeline lineno="207"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="208"><highlight class="stringliteral">The<sp/>``use_hardware``<sp/>parameter<sp/>can<sp/>be<sp/>set<sp/>to<sp/>``True``<sp/>if<sp/>you<sp/>need<sp/>to</highlight></codeline>
<codeline lineno="209"><highlight class="stringliteral">selectively<sp/>require<sp/>hardware<sp/>events<sp/>for<sp/>a<sp/>:class:`Key`<sp/>action:<sp/>::</highlight></codeline>
<codeline lineno="210"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="211"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>Passing<sp/>use_hardware=True<sp/>will<sp/>guarantee<sp/>that<sp/>Ctrl+C<sp/>is<sp/>always</highlight></codeline>
<codeline lineno="212"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>pressed,<sp/>regardless<sp/>of<sp/>the<sp/>layout.<sp/>See<sp/>below.</highlight></codeline>
<codeline lineno="213"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Key(&quot;c-c&quot;,<sp/>use_hardware=True).execute()</highlight></codeline>
<codeline lineno="214"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="215"><highlight class="stringliteral">If<sp/>the<sp/>Unicode<sp/>keyboard<sp/>is<sp/>not<sp/>enabled<sp/>or<sp/>the<sp/>``use_hardware``<sp/>parameter<sp/>is</highlight></codeline>
<codeline lineno="216"><highlight class="stringliteral">``True``,<sp/>then<sp/>no<sp/>keys<sp/>will<sp/>be<sp/>typed<sp/>and<sp/>an<sp/>error<sp/>will<sp/>be<sp/>logged<sp/>for</highlight></codeline>
<codeline lineno="217"><highlight class="stringliteral">untypeable<sp/>keys:<sp/>::</highlight></codeline>
<codeline lineno="218"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="219"><highlight class="stringliteral"><sp/><sp/><sp/>action.exec<sp/>(ERROR):<sp/>Execution<sp/>failed:<sp/>Keyboard<sp/>interface<sp/>cannot<sp/>type<sp/>this<sp/>character:<sp/>&apos;μ&apos;</highlight></codeline>
<codeline lineno="220"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="221"><highlight class="stringliteral">Keys<sp/>in<sp/>ranges<sp/>0-9,<sp/>a-z<sp/>and<sp/>A-Z<sp/>are<sp/>always<sp/>typeable.<sp/>If<sp/>keys<sp/>in<sp/>these<sp/>ranges</highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral">cannot<sp/>be<sp/>typed<sp/>using<sp/>the<sp/>current<sp/>keyboard<sp/>layout,<sp/>then<sp/>the<sp/>equivalent<sp/>key</highlight></codeline>
<codeline lineno="223"><highlight class="stringliteral">will<sp/>be<sp/>used<sp/>instead.<sp/>For<sp/>example,<sp/>the<sp/>following<sp/>code<sp/>will<sp/>result<sp/>in<sp/>the<sp/>&apos;я&apos;</highlight></codeline>
<codeline lineno="224"><highlight class="stringliteral">key<sp/>being<sp/>pressed<sp/>when<sp/>using<sp/>the<sp/>main<sp/>Cyrillic<sp/>keyboard<sp/>layout:<sp/>::</highlight></codeline>
<codeline lineno="225"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="226"><highlight class="stringliteral"><sp/><sp/><sp/>#<sp/>This<sp/>is<sp/>equivalent<sp/>to<sp/>Key(u&quot;я,<sp/>Я,<sp/>c-я&quot;).</highlight></codeline>
<codeline lineno="227"><highlight class="stringliteral"><sp/><sp/><sp/>Key(&quot;z,<sp/>Z,<sp/>c-z&quot;,<sp/>use_hardware=True).execute()</highlight></codeline>
<codeline lineno="228"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="229"><highlight class="stringliteral">Unlike<sp/>the<sp/>:class:`Text`<sp/>action,<sp/>individual<sp/>:class:`Key`<sp/>actions<sp/>can<sp/>send</highlight></codeline>
<codeline lineno="230"><highlight class="stringliteral">both<sp/>hardware<sp/>*and*<sp/>Unicode<sp/>events.<sp/>So<sp/>the<sp/>following<sp/>example<sp/>will<sp/>work<sp/>if</highlight></codeline>
<codeline lineno="231"><highlight class="stringliteral">the<sp/>Unicode<sp/>keyboard<sp/>is<sp/>enabled:<sp/>::</highlight></codeline>
<codeline lineno="232"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="233"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>Type<sp/>&apos;σμ&apos;<sp/>and<sp/>then<sp/>press<sp/>Ctrl+Z.</highlight></codeline>
<codeline lineno="234"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Key(u&quot;σ,<sp/>μ,<sp/>c-z&quot;).execute()</highlight></codeline>
<codeline lineno="235"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="236"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="237"><highlight class="stringliteral">X11<sp/>key<sp/>support</highlight></codeline>
<codeline lineno="238"><highlight class="stringliteral">............................................................................</highlight></codeline>
<codeline lineno="239"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="240"><highlight class="stringliteral">The<sp/>:class:`Key`<sp/>action<sp/>can<sp/>be<sp/>used<sp/>to<sp/>type<sp/>arbitrary<sp/>keys<sp/>and<sp/>Unicode</highlight></codeline>
<codeline lineno="241"><highlight class="stringliteral">characters<sp/>on<sp/>X11/Linux.<sp/>It<sp/>is<sp/>not<sp/>limited<sp/>to<sp/>the<sp/>key<sp/>names<sp/>listed<sp/>above,</highlight></codeline>
<codeline lineno="242"><highlight class="stringliteral">although<sp/>all<sp/>of<sp/>them<sp/>will<sp/>work<sp/>too.</highlight></codeline>
<codeline lineno="243"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="244"><highlight class="stringliteral">Unicode<sp/>characters<sp/>are<sp/>supported<sp/>on<sp/>X11<sp/>by<sp/>passing<sp/>their<sp/>Unicode<sp/>code<sp/>point</highlight></codeline>
<codeline lineno="245"><highlight class="stringliteral">to<sp/>the<sp/>keyboard<sp/>implementation.<sp/>For<sp/>example,<sp/>the<sp/>character<sp/>``&apos;€&apos;``<sp/>is</highlight></codeline>
<codeline lineno="246"><highlight class="stringliteral">converted<sp/>to<sp/>``&apos;U20AC&apos;``.<sp/>The<sp/>Unicode<sp/>code<sp/>point<sp/>can<sp/>also<sp/>be<sp/>passed</highlight></codeline>
<codeline lineno="247"><highlight class="stringliteral">directly,<sp/>e.g.<sp/>with<sp/>``Key(&apos;U20AC&apos;)``.</highlight></codeline>
<codeline lineno="248"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="249"><highlight class="stringliteral">Unlike<sp/>on<sp/>Windows,<sp/>the<sp/>:class:`Key`<sp/>action<sp/>is<sp/>able<sp/>to<sp/>use<sp/>modifiers<sp/>with</highlight></codeline>
<codeline lineno="250"><highlight class="stringliteral">Unicode<sp/>characters<sp/>on<sp/>X11.</highlight></codeline>
<codeline lineno="251"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="252"><highlight class="stringliteral">This<sp/>class<sp/>does<sp/>**not**<sp/>support<sp/>typing<sp/>keys<sp/>in<sp/>Wayland<sp/>sessions.</highlight></codeline>
<codeline lineno="253"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="254"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="255"><highlight class="stringliteral">Example<sp/>X11<sp/>key<sp/>actions</highlight></codeline>
<codeline lineno="256"><highlight class="stringliteral">----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="257"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="258"><highlight class="stringliteral">In<sp/>addition<sp/>to<sp/>the<sp/>examples<sp/>in<sp/>the<sp/>previous<sp/>section,<sp/>the<sp/>following<sp/>example</highlight></codeline>
<codeline lineno="259"><highlight class="stringliteral">will<sp/>work<sp/>on<sp/>X11/Linux.</highlight></codeline>
<codeline lineno="260"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="261"><highlight class="stringliteral">The<sp/>following<sp/>code<sp/>will<sp/>type<sp/>&apos;σμ&apos;<sp/>into<sp/>the<sp/>foreground<sp/>application<sp/>and<sp/>then</highlight></codeline>
<codeline lineno="262"><highlight class="stringliteral">press<sp/>ctrl+z:<sp/>::</highlight></codeline>
<codeline lineno="263"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="264"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Key(&quot;σ,μ,c-z&quot;).execute()</highlight></codeline>
<codeline lineno="265"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="266"><highlight class="stringliteral">The<sp/>following<sp/>code<sp/>will<sp/>press<sp/>&apos;µ&apos;<sp/>while<sp/>holding<sp/>control<sp/>and<sp/>alt:<sp/>::</highlight></codeline>
<codeline lineno="267"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="268"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Key(&quot;ca-μ&quot;).execute()</highlight></codeline>
<codeline lineno="269"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="270"><highlight class="stringliteral">The<sp/>following<sp/>code<sp/>will<sp/>press<sp/>the<sp/>browser<sp/>refresh<sp/>multimedia<sp/>key:<sp/>::</highlight></codeline>
<codeline lineno="271"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="272"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Key(&quot;XF86Refresh&quot;).execute()</highlight></codeline>
<codeline lineno="273"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="274"><highlight class="stringliteral">Although<sp/>this<sp/>key<sp/>is<sp/>not<sp/>defined<sp/>in<sp/>dragonfly&apos;s<sp/>typeables<sp/>list,<sp/>it<sp/>still</highlight></codeline>
<codeline lineno="275"><highlight class="stringliteral">works<sp/>because<sp/>it<sp/>is<sp/>passed<sp/>directly<sp/>to<sp/>xdotool.<sp/>X11<sp/>(Xorg)<sp/>multimedia<sp/>keys</highlight></codeline>
<codeline lineno="276"><highlight class="stringliteral">can<sp/>be<sp/>found<sp/>online:<sp/>`XF86<sp/>keyboard<sp/>symbols</highlight></codeline>
<codeline lineno="277"><highlight class="stringliteral">&lt;https://wiki.linuxquestions.org/wiki/XF86_keyboard_symbols&gt;`__.</highlight></codeline>
<codeline lineno="278"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="279"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="280"><highlight class="stringliteral">Key<sp/>class<sp/>reference</highlight></codeline>
<codeline lineno="281"><highlight class="stringliteral">............................................................................</highlight></codeline>
<codeline lineno="282"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="283"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>collections</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1actions_1_1action__base" kindref="compound">dragonfly.actions.action_base</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ActionError</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1actions_1_1action__base__keyboard" kindref="compound">dragonfly.actions.action_base_keyboard</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>BaseKeyboardAction</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1actions_1_1typeables" kindref="compound">dragonfly.actions.typeables</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>typeables</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="classdragonfly_1_1actions_1_1action__key_1_1Key" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__key_1_1Key" kindref="compound">Key</ref>(<ref refid="classdragonfly_1_1actions_1_1action__base__keyboard_1_1BaseKeyboardAction" kindref="compound">BaseKeyboardAction</ref>):</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="296"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Keystroke<sp/>emulation<sp/>action.</highlight></codeline>
<codeline lineno="297"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="298"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Constructor<sp/>arguments:</highlight></codeline>
<codeline lineno="299"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*spec*<sp/>(*str*)<sp/>--<sp/>keystroke<sp/>specification</highlight></codeline>
<codeline lineno="300"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*static*<sp/>(boolean)<sp/>--<sp/>flag<sp/>indicating<sp/>whether<sp/>the</highlight></codeline>
<codeline lineno="301"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specification<sp/>contains<sp/>dynamic<sp/>elements</highlight></codeline>
<codeline lineno="302"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*use_hardware*<sp/>(boolean)<sp/>--</highlight></codeline>
<codeline lineno="303"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>*True*,<sp/>send<sp/>keyboard<sp/>events<sp/>using<sp/>hardware<sp/>emulation<sp/>instead</highlight></codeline>
<codeline lineno="304"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>as<sp/>Unicode<sp/>text.<sp/>This<sp/>will<sp/>respect<sp/>the<sp/>up/down<sp/>status<sp/>of</highlight></codeline>
<codeline lineno="305"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifier<sp/>keys.</highlight></codeline>
<codeline lineno="306"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="307"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>format<sp/>of<sp/>the<sp/>keystroke<sp/>specification<sp/>*spec*<sp/>is<sp/>described<sp/>in</highlight></codeline>
<codeline lineno="308"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:ref:`RefKeySpec`.</highlight></codeline>
<codeline lineno="309"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="310"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>class<sp/>emulates<sp/>keyboard<sp/>activity<sp/>by<sp/>sending<sp/>keystrokes<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="311"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foreground<sp/>application.<sp/><sp/>It<sp/>does<sp/>this<sp/>using<sp/>Dragonfly&apos;s<sp/>keyboard</highlight></codeline>
<codeline lineno="312"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interface<sp/>for<sp/>the<sp/>current<sp/>platform.<sp/><sp/>The<sp/>implementation<sp/>for<sp/>Windows</highlight></codeline>
<codeline lineno="313"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uses<sp/>the<sp/>``sendinput()``<sp/>Win32<sp/>API<sp/>function.<sp/><sp/>The<sp/>implementation</highlight></codeline>
<codeline lineno="314"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>Mac<sp/>OS<sp/>uses</highlight></codeline>
<codeline lineno="315"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`pynput<sp/>&lt;https://pynput.readthedocs.io/en/latest/&gt;`__.<sp/>The</highlight></codeline>
<codeline lineno="316"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>implementation<sp/>for<sp/>X11/Linux<sp/>uses<sp/>`xdotool</highlight></codeline>
<codeline lineno="317"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;https://www.semicomplete.com/projects/xdotool/&gt;`__.</highlight></codeline>
<codeline lineno="318"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="319"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Various<sp/>keystroke<sp/>specification<sp/>format<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1a3eef454838098e867691911587545950" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_key_separator<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1a9d30bbe247ba001a53ddccfb84057f48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_delimiter_characters<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;:/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324" refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1a62b2d729033da594286253ef8686267e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_modifier_prefix_delimiter<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1a0723296a4ce93ce2ad4fc5b8a662d6da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_modifier_prefix_characters<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">:<sp/>typeables[</highlight><highlight class="stringliteral">&quot;alt&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;c&apos;</highlight><highlight class="normal">:<sp/>typeables[</highlight><highlight class="stringliteral">&quot;control&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;s&apos;</highlight><highlight class="normal">:<sp/>typeables[</highlight><highlight class="stringliteral">&quot;shift&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">:<sp/>typeables[</highlight><highlight class="stringliteral">&quot;win&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331" refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1a5713bb442e32f8f4d3543c7b73be66c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>interval_factor<sp/>=<sp/>0.01</highlight></codeline>
<codeline lineno="332" refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1a7d0e0c48364131ab31b3dfec6d2a9ad8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>interval_default<sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Keystroke<sp/>event<sp/>data<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1abdc4f00f0c6369d1aadcd022ddedfd37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>EventData<sp/>=<sp/>collections.namedtuple(</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;EventData&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;keyname<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;direction<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;modifiers<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;inner_pause<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;repeat<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;outer_pause<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1a2409070d9b6dbaf4e39f6ecbed02b59c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1a2409070d9b6dbaf4e39f6ecbed02b59c" kindref="member">_parse_spec</ref>(self,<sp/>spec):</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Iterate<sp/>through<sp/>the<sp/>keystrokes<sp/>specified<sp/>in<sp/>spec,<sp/>parsing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>each<sp/>individually.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>single<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>spec.split(self.<ref refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1a3eef454838098e867691911587545950" kindref="member">_key_separator</ref>):</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event_data<sp/>=<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1a0ce62a05365ef8c122cdd34252d2ee48" kindref="member">_parse_single</ref>(single)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>event_data:</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events.append(event_data)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>events</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1a0ce62a05365ef8c122cdd34252d2ee48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1a0ce62a05365ef8c122cdd34252d2ee48" kindref="member">_parse_single</ref>(self,<sp/>spec):</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pylint:<sp/>disable=R0912,R0914,R0915</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Suppress<sp/>warnings<sp/>about<sp/>too<sp/>many<sp/>branches,<sp/>variables<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>statements.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Remove<sp/>leading<sp/>and<sp/>trailing<sp/>whitespace.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec<sp/>=<sp/>spec.strip()</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>spec:</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Parse<sp/>modifier<sp/>prefix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>spec.find(self.<ref refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1a62b2d729033da594286253ef8686267e" kindref="member">_modifier_prefix_delimiter</ref>)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>index<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>spec[:index]</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifiers<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>s:</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1a0723296a4ce93ce2ad4fc5b8a662d6da" kindref="member">_modifier_prefix_characters</ref>:</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classdragonfly_1_1actions_1_1action__base_1_1ActionError" kindref="compound">ActionError</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>modifier&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>prefix<sp/>character:<sp/>%r&quot;</highlight><highlight class="normal"><sp/>%<sp/>c)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1a0723296a4ce93ce2ad4fc5b8a662d6da" kindref="member">_modifier_prefix_characters</ref>[c]</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>m<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>modifiers:</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classdragonfly_1_1actions_1_1action__base_1_1ActionError" kindref="compound">ActionError</ref>(</highlight><highlight class="stringliteral">&quot;Double<sp/>modifier&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>prefix<sp/>character:<sp/>%r&quot;</highlight><highlight class="normal"><sp/>%<sp/>c)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifiers.append(m)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifiers<sp/>=<sp/>()</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inner_pause<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>special<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outer_pause<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delimiters<sp/>=<sp/>[(c,<sp/>i<sp/>+<sp/>index)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(spec[index:])</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1a9d30bbe247ba001a53ddccfb84057f48" kindref="member">_delimiter_characters</ref>]</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delimiter_sequence<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">.join([d[0]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>d<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>delimiters])</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delimiter_index<sp/>=<sp/>[d[1]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>d<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>delimiters]</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>delimiter_sequence<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyname<sp/>=<sp/>spec[index:]</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>delimiter_sequence<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyname<sp/>=<sp/>spec[index:delimiter_index[0]]</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outer_pause<sp/>=<sp/>spec[delimiter_index[0]+1:]</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>delimiter_sequence<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;/:&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyname<sp/>=<sp/>spec[index:delimiter_index[0]]</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inner_pause<sp/>=<sp/>spec[delimiter_index[0]+1:delimiter_index[1]]</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>special<sp/>=<sp/>spec[delimiter_index[1]+1:]</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>delimiter_sequence<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;/:/&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyname<sp/>=<sp/>spec[index:delimiter_index[0]]</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inner_pause<sp/>=<sp/>spec[delimiter_index[0]+1:delimiter_index[1]]</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>special<sp/>=<sp/>spec[delimiter_index[1]+1:delimiter_index[2]]</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outer_pause<sp/>=<sp/>spec[delimiter_index[2]+1:]</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>delimiter_sequence<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyname<sp/>=<sp/>spec[index:delimiter_index[0]]</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>special<sp/>=<sp/>spec[delimiter_index[0]+1:]</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>delimiter_sequence<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;:/&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyname<sp/>=<sp/>spec[index:delimiter_index[0]]</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>special<sp/>=<sp/>spec[delimiter_index[0]+1:delimiter_index[1]]</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outer_pause<sp/>=<sp/>spec[delimiter_index[1]+1:]</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classdragonfly_1_1actions_1_1action__base_1_1ActionError" kindref="compound">ActionError</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>key<sp/>spec:<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>spec)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>inner_pause<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>inner_pause</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inner_pause<sp/>=<sp/>float(s)<sp/>*<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1a5713bb442e32f8f4d3543c7b73be66c9" kindref="member">interval_factor</ref></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>inner_pause<sp/>&lt;<sp/>0:<sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ValueError:</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classdragonfly_1_1actions_1_1action__base_1_1ActionError" kindref="compound">ActionError</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>inner<sp/>pause<sp/>value:<sp/>%r,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>should<sp/>be<sp/>a<sp/>positive<sp/>number.&quot;</highlight><highlight class="normal"><sp/>%<sp/>s)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>outer_pause<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>outer_pause</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outer_pause<sp/>=<sp/>float(s)<sp/>*<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1a5713bb442e32f8f4d3543c7b73be66c9" kindref="member">interval_factor</ref></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>outer_pause<sp/>&lt;<sp/>0:<sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ValueError:</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classdragonfly_1_1actions_1_1action__base_1_1ActionError" kindref="compound">ActionError</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>outer<sp/>pause<sp/>value:<sp/>%r,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>should<sp/>be<sp/>a<sp/>positive<sp/>number.&quot;</highlight><highlight class="normal"><sp/>%<sp/>s)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outer_pause<sp/>=<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1a7d0e0c48364131ab31b3dfec6d2a9ad8" kindref="member">interval_default</ref><sp/>*<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1a5713bb442e32f8f4d3543c7b73be66c9" kindref="member">interval_factor</ref></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>direction<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">;<sp/>repeat<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>special<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>special<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;down&quot;</highlight><highlight class="normal">:<sp/><sp/><sp/>direction<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>special<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;up&quot;</highlight><highlight class="normal">:<sp/><sp/><sp/>direction<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>special</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repeat<sp/>=<sp/>int(s)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>repeat<sp/>&lt;<sp/>0:<sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ValueError:</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classdragonfly_1_1actions_1_1action__base_1_1ActionError" kindref="compound">ActionError</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>repeat<sp/>value:<sp/>%r,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>should<sp/>be<sp/>a<sp/>positive<sp/>integer.&quot;</highlight><highlight class="normal"><sp/>%<sp/>s)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>direction<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>modifiers:</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classdragonfly_1_1actions_1_1action__base_1_1ActionError" kindref="compound">ActionError</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>use<sp/>direction<sp/>with<sp/>modifiers.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>inner_pause<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classdragonfly_1_1actions_1_1action__base_1_1ActionError" kindref="compound">ActionError</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>use<sp/>direction<sp/>with<sp/>inner<sp/>pause.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1abdc4f00f0c6369d1aadcd022ddedfd37" kindref="member">EventData</ref>(keyname,<sp/>direction,<sp/>modifiers,<sp/>inner_pause,</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repeat,<sp/>outer_pause)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458" refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1a9f19c5bcd0969964e0b37b8287bf6b9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1a9f19c5bcd0969964e0b37b8287bf6b9b" kindref="member">_execute_events</ref>(self,<sp/>events):</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Calculate<sp/>keyboard<sp/>events<sp/>from<sp/>events<sp/>(event<sp/>data).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_hardware<sp/>=<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__base__keyboard_1_1BaseKeyboardAction_1a0569d7f41c01730c8c507a3b97914cd2" kindref="member">require_hardware_events</ref>()</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyboard_events<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>event_data<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>events:</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events_single<sp/>=<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1a95f3eb4e9fe078ed3914b85695077166" kindref="member">_calc_events_single</ref>(event_data,</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_hardware)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyboard_events.extend(events_single)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Send<sp/>keyboard<sp/>events.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__base__keyboard_1_1BaseKeyboardAction_1a239ea8dd1f84236442786b874c06d4af" kindref="member">_keyboard</ref>.send_keyboard_events(keyboard_events)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1a95f3eb4e9fe078ed3914b85695077166" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1a95f3eb4e9fe078ed3914b85695077166" kindref="member">_calc_events_single</ref>(self,<sp/>event_data,<sp/>use_hardware):</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(keyname,<sp/>direction,<sp/>modifiers,<sp/>inner_pause,<sp/>repeat,</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outer_pause)<sp/>=<sp/>event_data</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>a<sp/>Typeable<sp/>object<sp/>for<sp/>the<sp/>key,<sp/>if<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typeable<sp/>=<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__base__keyboard_1_1BaseKeyboardAction_1a44deda432d697d0710bb820ac91a04a7" kindref="member">_get_typeable</ref>(event_data.keyname,<sp/>use_hardware)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Raise<sp/>an<sp/>error<sp/>message<sp/>if<sp/>a<sp/>Typeable<sp/>could<sp/>not<sp/>be<sp/>retrieved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>typeable<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_message<sp/>=<sp/>(</highlight><highlight class="stringliteral">&quot;Keyboard<sp/>interface<sp/>cannot<sp/>type<sp/>this<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;character:<sp/>%r<sp/>(in<sp/>%r)&quot;</highlight><highlight class="normal"><sp/>%</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(keyname,<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__base_1_1DynStrActionBase_1ad98662369d0517d6b46e97ad72a28442" kindref="member">_spec</ref>))</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classdragonfly_1_1actions_1_1action__base_1_1ActionError" kindref="compound">ActionError</ref>(error_message)</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Calculate<sp/>keyboard<sp/>events<sp/>using<sp/>the<sp/>Typeable<sp/>and<sp/>event<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>direction<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>inner_pause<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inner_pause<sp/>=<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1a7d0e0c48364131ab31b3dfec6d2a9ad8" kindref="member">interval_default</ref><sp/>*<sp/>self.<ref refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1a5713bb442e32f8f4d3543c7b73be66c9" kindref="member">interval_factor</ref></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>repeat<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>m<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>modifiers:</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events.extend(m.on_events())</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(repeat<sp/>-<sp/>1):</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events.extend(typeable.events(inner_pause))</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events.extend(typeable.events(outer_pause))</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>m<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>modifiers[-1::-1]:</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events.extend(m.off_events())</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>direction:</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events<sp/>=<sp/>typeable.on_events(outer_pause)</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events<sp/>=<sp/>typeable.off_events(outer_pause)</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>events</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507" refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1aa1e82003bde383a03e12a917f1f271de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1actions_1_1action__key_1_1Key_1aa1e82003bde383a03e12a917f1f271de" kindref="member">__str__</ref>(self):</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;[{!r}]&apos;</highlight><highlight class="normal">.<ref refid="namespacedragonfly__speech__recognition_1_1dragonfly__client_1a5c5aeb1fdc09eb0375a6080813d84cd5" kindref="member">format</ref>(self.<ref refid="classdragonfly_1_1actions_1_1action__base_1_1DynStrActionBase_1ad98662369d0517d6b46e97ad72a28442" kindref="member">_spec</ref>)</highlight></codeline>
    </programlisting>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_key.py"/>
  </compounddef>
</doxygen>
