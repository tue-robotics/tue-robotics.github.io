<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="dragonfly__client_8py" kind="file" language="Python">
    <compoundname>dragonfly_client.py</compoundname>
    <innerclass refid="classdragonfly__speech__recognition_1_1dragonfly__client_1_1DragonflyClient" prot="public">dragonfly_speech_recognition::dragonfly_client::DragonflyClient</innerclass>
    <innernamespace refid="namespacedragonfly__speech__recognition_1_1dragonfly__client">dragonfly_speech_recognition::dragonfly_client</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacedragonfly__speech__recognition_1_1dragonfly__client" refkind="compound"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>multiprocessing.connection</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logging</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.name<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;nt&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>sys.path.append(os.path.dirname(os.path.realpath(__file__))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/grammar_parser/src/&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacegrammar__parser_1_1cfgparser" kindref="compound">grammar_parser.cfgparser</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>CFGParser</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="namespacedragonfly__speech__recognition_1_1dragonfly__client_1a00ff7cc2b4027b8d3ba145d6f68ee5b7" refkind="member"><highlight class="normal">FORMAT<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;%(asctime)s<sp/>%(module)s<sp/>[%(levelname)s]<sp/>%(message)s&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="namespacedragonfly__speech__recognition_1_1dragonfly__client_1a5c5aeb1fdc09eb0375a6080813d84cd5" refkind="member"><highlight class="normal">logging.basicConfig(format=FORMAT)</highlight></codeline>
<codeline lineno="14"><highlight class="normal">logging.getLogger().setLevel(logging.DEBUG)</highlight></codeline>
<codeline lineno="15" refid="namespacedragonfly__speech__recognition_1_1dragonfly__client_1a9cbd652d3ad6bf85ef078bc26b5f8358" refkind="member"><highlight class="normal">logger<sp/>=<sp/>logging.getLogger(__name__)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="classdragonfly__speech__recognition_1_1dragonfly__client_1_1DragonflyClient" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly__speech__recognition_1_1dragonfly__client_1_1DragonflyClient" kindref="compound">DragonflyClient</ref>:</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classdragonfly__speech__recognition_1_1dragonfly__client_1_1DragonflyClient_1accf74e3a3ca9ef757cb5ebf73dfb9b5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly__speech__recognition_1_1dragonfly__client_1_1DragonflyClient_1accf74e3a3ca9ef757cb5ebf73dfb9b5c" kindref="member">__init__</ref>(self,<sp/>ip,<sp/>port):</highlight></codeline>
<codeline lineno="21" refid="classdragonfly__speech__recognition_1_1dragonfly__client_1_1DragonflyClient_1aedde9cce69e1af3f8c07802d87b21143" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly__speech__recognition_1_1dragonfly__client_1_1DragonflyClient_1aedde9cce69e1af3f8c07802d87b21143" kindref="member">_address</ref><sp/>=<sp/>(ip,<sp/>port)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classdragonfly__speech__recognition_1_1dragonfly__client_1_1DragonflyClient_1a7526af26203f170f4ad30a004cbd4cb2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly__speech__recognition_1_1dragonfly__client_1_1DragonflyClient_1a7526af26203f170f4ad30a004cbd4cb2" kindref="member">recognize</ref>(self,<sp/>grammar,<sp/>target,<sp/>is_preempt_requested=None):</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grammar_parser<sp/>=<sp/>CFGParser.fromstring(grammar)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grammar_parser.verify(target)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn<sp/>=<sp/>multiprocessing.connection.Client(self.<ref refid="classdragonfly__speech__recognition_1_1dragonfly__client_1_1DragonflyClient_1aedde9cce69e1af3f8c07802d87b21143" kindref="member">_address</ref>)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn.send((grammar,<sp/>target))</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>conn.poll(.1):</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>is_preempt_requested<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>is_preempt_requested():</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn.send(0)<sp/><sp/></highlight><highlight class="comment">#<sp/>Send<sp/>a<sp/>cancel<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Now<sp/>wait<sp/>for<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sentence<sp/>=<sp/>conn.recv()</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logging.info(</highlight><highlight class="stringliteral">&quot;Dragonfly<sp/>Client<sp/>received<sp/>sentence<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>sentence)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>grammar_parser.parse(target,<sp/>sentence),<sp/>sentence</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classdragonfly__speech__recognition_1_1dragonfly__client_1_1DragonflyClient_1a20595c7226c923ecc7e55f4adc51e5be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly__speech__recognition_1_1dragonfly__client_1_1DragonflyClient_1a20595c7226c923ecc7e55f4adc51e5be" kindref="member">restart_node</ref>(self):</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logging.info(</highlight><highlight class="stringliteral">&quot;Sending<sp/>the<sp/>restart<sp/>command&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn<sp/>=<sp/>multiprocessing.connection.Client(self.<ref refid="classdragonfly__speech__recognition_1_1dragonfly__client_1_1DragonflyClient_1aedde9cce69e1af3f8c07802d87b21143" kindref="member">_address</ref>)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn.send(</highlight><highlight class="stringliteral">&apos;restart_node&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/dragonfly_speech_recognition/dragonfly_client.py"/>
  </compounddef>
</doxygen>
