<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="config_8py" kind="file" language="Python">
    <compoundname>config.py</compoundname>
    <innerclass refid="classdragonfly_1_1config_1_1Config" prot="public">dragonfly::config::Config</innerclass>
    <innerclass refid="classdragonfly_1_1config_1_1Item" prot="public">dragonfly::config::Item</innerclass>
    <innerclass refid="classdragonfly_1_1config_1_1Section" prot="public">dragonfly::config::Section</innerclass>
    <innernamespace refid="namespacedragonfly_1_1config">dragonfly::config</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacedragonfly_1_1config" refkind="compound"><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Dragonfly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(c)<sp/>Copyright<sp/>2007,<sp/>2008<sp/>by<sp/>Christo<sp/>Butcher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Licensed<sp/>under<sp/>the<sp/>LGPL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Dragonfly<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Dragonfly<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>License<sp/>along<sp/>with<sp/>Dragonfly.<sp/><sp/>If<sp/>not,<sp/>see</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral">Configuration<sp/>toolkit</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral">============================================================================</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral">Dragonfly&apos;s<sp/>configuration<sp/>toolkit<sp/>makes<sp/>it<sp/>very<sp/>easy<sp/>to<sp/>store</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral">program<sp/>data<sp/>in<sp/>a<sp/>separate<sp/>file<sp/>from<sp/>the<sp/>main<sp/>program<sp/>logic.<sp/><sp/>It<sp/>uses</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral">a<sp/>three-phase<sp/>*setup<sp/>--<sp/>load<sp/>--<sp/>use*<sp/>system:</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/>-<sp/>*setup*<sp/>--<sp/>a<sp/>Config<sp/>object<sp/>is<sp/>created<sp/>and<sp/>its<sp/>structure<sp/>and</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/><sp/>default<sp/>contents<sp/>are<sp/>defined.</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"><sp/>-<sp/>*load*<sp/>--<sp/>a<sp/>separate<sp/>file<sp/>containing<sp/>the<sp/>user&apos;s<sp/>configuration</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"><sp/><sp/><sp/>settings<sp/>is<sp/>looked<sp/>for<sp/>and,<sp/>if<sp/>found,<sp/>its<sp/>values<sp/>are<sp/>loaded</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"><sp/><sp/><sp/>into<sp/>the<sp/>Config<sp/>object.</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"><sp/>-<sp/>*use*<sp/>--<sp/>the<sp/>program<sp/>directly<sp/>accesses<sp/>the<sp/>configuration</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"><sp/><sp/><sp/>through<sp/>easy<sp/>Config<sp/>object<sp/>attributes.</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral">This<sp/>configuration<sp/>toolkit<sp/>uses<sp/>the<sp/>following<sp/>three<sp/>classes:</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/>-<sp/>:class:`Config`<sp/>--<sp/>a<sp/>collection<sp/>of<sp/>configuration<sp/>settings,<sp/>grouped</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/><sp/>within<sp/>one<sp/>or<sp/>more<sp/>sections</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/>-<sp/>:class:`Section`<sp/>--<sp/>a<sp/>group<sp/>of<sp/>items<sp/>and/or<sp/>subsections</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/>-<sp/>:class:`Item`<sp/>--<sp/>a<sp/>single<sp/>configuration<sp/>setting</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral">Usage<sp/>example</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral">----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral">The<sp/>main<sp/>program<sp/>using<sp/>Dragonfly&apos;s<sp/>configuration<sp/>toolkit<sp/>would</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral">normally<sp/>look<sp/>something<sp/>like<sp/>this:<sp/>::</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>from<sp/>dragonfly<sp/>import<sp/>Config,<sp/>Section,<sp/>Item</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>*Setup*<sp/>phase.</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>This<sp/>defines<sp/>a<sp/>configuration<sp/>object<sp/>with<sp/>the<sp/>name<sp/>&quot;Example</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/><sp/>configuration&quot;.<sp/><sp/>It<sp/>contains<sp/>one<sp/>section<sp/>with<sp/>the<sp/>title</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/><sp/>&quot;Test<sp/>section&quot;,<sp/>which<sp/>has<sp/>two<sp/>configuration<sp/>items.<sp/><sp/>Both</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/><sp/>these<sp/>items<sp/>have<sp/>a<sp/>default<sp/>value<sp/>and<sp/>a<sp/>docstring.</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>config<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Config(&quot;Example<sp/>configuration&quot;)</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>config.test<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Section(&quot;Test<sp/>section&quot;)</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>config.test.fruit<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Item(&quot;apple&quot;,<sp/>doc=&quot;Must<sp/>eat<sp/>fruit.&quot;)</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>config.test.color<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Item(&quot;blue&quot;,<sp/>doc=&quot;The<sp/>color<sp/>of<sp/>life.&quot;)</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>*Load*<sp/>phase.</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>This<sp/>searches<sp/>for<sp/>a<sp/>file<sp/>with<sp/>the<sp/>same<sp/>name<sp/>as<sp/>the<sp/>main<sp/>program,</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/><sp/>but<sp/>with<sp/>the<sp/>extension<sp/>&quot;.py&quot;<sp/>replaced<sp/>by<sp/>&quot;.txt&quot;.<sp/><sp/>It<sp/>is<sp/>also</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/><sp/>possible<sp/>to<sp/>explicitly<sp/>specify<sp/>the<sp/>configuration<sp/>file&apos;s<sp/>path.</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/><sp/>See<sp/>Config.load()<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>config.load()</highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>*Use*<sp/>phase.</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>The<sp/>configuration<sp/>values<sp/>can<sp/>now<sp/>be<sp/>accessed<sp/>through<sp/>the</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/><sp/>configuration<sp/>object<sp/>as<sp/>follows.</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>print<sp/>&quot;The<sp/>color<sp/>of<sp/>life<sp/>is&quot;,<sp/>config.test.color</highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>print<sp/>&quot;You<sp/>must<sp/>eat<sp/>an<sp/>%s<sp/>every<sp/>day&quot;<sp/>%<sp/>config.test.fruit</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral">The<sp/>configuration<sp/>defined<sp/>above<sp/>is<sp/>basically<sp/>complete.<sp/><sp/>Every</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral">configuration<sp/>item<sp/>has<sp/>a<sp/>default<sp/>value<sp/>and<sp/>can<sp/>be<sp/>accessed<sp/>by</highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral">the<sp/>program.<sp/><sp/>But<sp/>if<sp/>the<sp/>user<sp/>would<sp/>like<sp/>to<sp/>modify<sp/>some<sp/>or<sp/>all</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral">of<sp/>these<sp/>settings,<sp/>he<sp/>can<sp/>do<sp/>so<sp/>in<sp/>an<sp/>external<sp/>configuration<sp/>file</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral">without<sp/>modifying<sp/>the<sp/>main<sp/>program<sp/>code.</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral">This<sp/>external<sp/>configuration<sp/>file<sp/>is<sp/>interpreted<sp/>as<sp/>Python<sp/>code.</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral">This<sp/>gives<sp/>its<sp/>author<sp/>powerful<sp/>tools<sp/>for<sp/>determining<sp/>the<sp/>desired</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral">configuration<sp/>settings.<sp/><sp/>However,<sp/>it<sp/>will<sp/>usually<sp/>consist<sp/>merely</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral">of<sp/>variable<sp/>assignments.<sp/>The<sp/>configuration<sp/>file<sp/>for<sp/>the<sp/>program</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral">above<sp/>might<sp/>look<sp/>something<sp/>like<sp/>this:<sp/>::</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>Test<sp/>section</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>test.fruit<sp/>=<sp/>&quot;banana&quot;<sp/><sp/><sp/>#<sp/>Bananas<sp/>have<sp/>more<sp/>potassium.</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>test.color<sp/>=<sp/>&quot;white&quot;<sp/><sp/><sp/><sp/>#<sp/>I<sp/>like<sp/>light<sp/>colors.</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral">Example<sp/>command<sp/>modules</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral">----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral">The<sp/>configuration<sp/>toolkit<sp/>is<sp/>utilized<sp/>in<sp/>a<sp/>number<sp/>of<sp/>command<sp/>modules<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral">*t4ngo/dragonfly-modules*<sp/>repository,<sp/>available<sp/>on<sp/>GitHub.<sp/><sp/>See</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral">:ref:`Related<sp/>Resources:<sp/>Command<sp/>modules<sp/>&lt;RefCommandModulesList&gt;`.</highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral">Implementation<sp/>details</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral">----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral">This<sp/>configuration<sp/>toolkit<sp/>makes<sp/>use<sp/>of<sp/>Python&apos;s<sp/>special<sp/>methods</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral">for<sp/>setting<sp/>and<sp/>retrieving<sp/>object<sp/>attributes.<sp/><sp/>This<sp/>makes<sp/>it<sp/>much</highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral">easier<sp/>to<sp/>use,<sp/>as<sp/>there<sp/>is<sp/>no<sp/>need<sp/>to<sp/>use<sp/>functions<sp/>such<sp/>as</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral">*value<sp/>=<sp/>get_config_value(&quot;item_name&quot;)*;<sp/>instead<sp/>the<sp/>configuration</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral">values<sp/>are<sp/>immediately<sp/>accessible<sp/>as<sp/>Python<sp/>objects.<sp/><sp/>It<sp/>also<sp/>allows</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral">for<sp/>more<sp/>extensive<sp/>error<sp/>checking;<sp/>it<sp/>is<sp/>for<sp/>example<sp/>trivial<sp/>to</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral">implement<sp/>custom<sp/>*Item*<sp/>classes<sp/>which<sp/>only<sp/>allow<sp/>specific<sp/>values</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral">or<sp/>value<sp/>types,<sp/>such<sp/>as<sp/>integers,<sp/>boolean<sp/>values,<sp/>etc.</highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral">Configuration<sp/>class<sp/>reference</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral">----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os.path</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>inspect</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>textwrap</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>traceback</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logging</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Config<sp/>processing<sp/>modes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>-<sp/>initializing<sp/>--<sp/>Config<sp/>is<sp/>being<sp/>set<sp/>up<sp/>and<sp/>populated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>-<sp/>loading<sp/>--<sp/>Config<sp/>setup<sp/>is<sp/>complete,<sp/>loading<sp/>from<sp/>user<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>-<sp/>done<sp/>--<sp/>Config<sp/>initialization<sp/>and<sp/>loading<sp/>complete,<sp/>ready<sp/>to<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="namespacedragonfly_1_1config_1a9a0e06c3ea38440fccc23fe52953e945" refkind="member"><highlight class="normal">_init,<sp/>_load,<sp/>_done<sp/>=<sp/>range(3)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Config<sp/>class;<sp/>this<sp/>manages<sp/>a<sp/>command<sp/>module&apos;s<sp/>configuration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="classdragonfly_1_1config_1_1Config" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1config_1_1Config" kindref="compound">Config</ref>(object):</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="141"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Configuration<sp/>class<sp/>for<sp/>storing<sp/>program<sp/>settings.</highlight></codeline>
<codeline lineno="142"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="143"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Constructor<sp/>argument:</highlight></codeline>
<codeline lineno="144"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*name*<sp/>(*str*)<sp/>--</highlight></codeline>
<codeline lineno="145"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>name<sp/>of<sp/>this<sp/>configuration<sp/>object.</highlight></codeline>
<codeline lineno="146"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="147"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>class<sp/>can<sp/>contain<sp/>zero<sp/>or<sp/>more<sp/>:class:`Section`<sp/>instances,</highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>each<sp/>of<sp/>which<sp/>can<sp/>contain<sp/>zero<sp/>or<sp/>more<sp/>:class:`Item`<sp/>instances.</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>It<sp/>is<sp/>these<sp/>items<sp/>which<sp/>store<sp/>the<sp/>actual<sp/>configuration<sp/>settings.</highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>sections<sp/>merely<sp/>divide<sp/>the<sp/>items<sp/>up<sp/>into<sp/>groups,<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>different<sp/>configuration<sp/>topics<sp/>can<sp/>be<sp/>split<sp/>for<sp/>easy<sp/>readability.</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="classdragonfly_1_1config_1_1Config_1a0708835fd26c10de8abc722de5bef70a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_configs_by_name<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="156" refid="classdragonfly_1_1config_1_1Config_1ad5307140590430a22330ab55f6668802" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_log<sp/>=<sp/>logging.getLogger(</highlight><highlight class="stringliteral">&quot;config&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>@classmethod</highlight></codeline>
<codeline lineno="162" refid="classdragonfly_1_1config_1_1Config_1a67e31d054f03649abe73e171e4e93e16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1config_1_1Config_1a67e31d054f03649abe73e171e4e93e16" kindref="member">get_by_name</ref>(cls,<sp/>name):</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cls.<ref refid="classdragonfly_1_1config_1_1Config_1a0708835fd26c10de8abc722de5bef70a" kindref="member">_configs_by_name</ref>[name]</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>KeyError:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>@classmethod</highlight></codeline>
<codeline lineno="169" refid="classdragonfly_1_1config_1_1Config_1a01ca6acc98e5daac8105ba42bb944a86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1config_1_1Config_1a01ca6acc98e5daac8105ba42bb944a86" kindref="member">get_instances</ref>(cls):</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instances<sp/>=<sp/>list(cls.<ref refid="classdragonfly_1_1config_1_1Config_1a0708835fd26c10de8abc722de5bef70a" kindref="member">_configs_by_name</ref>.items())</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instances.sort()</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[instance<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>name,<sp/>instance<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>instances]</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="classdragonfly_1_1config_1_1Config_1af0d9275698886660d0de19d564fb1076" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1config_1_1Config_1af0d9275698886660d0de19d564fb1076" kindref="member">__init__</ref>(self,<sp/>name):</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_<sp/>=<sp/>object.__setattr__</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_(self,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>name)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_(self,<sp/></highlight><highlight class="stringliteral">&quot;_sections&quot;</highlight><highlight class="normal">,<sp/>{})</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_(self,<sp/></highlight><highlight class="stringliteral">&quot;_sections_list&quot;</highlight><highlight class="normal">,<sp/>[])</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_(self,<sp/></highlight><highlight class="stringliteral">&quot;_mode&quot;</highlight><highlight class="normal">,<sp/>_init)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_(self,<sp/></highlight><highlight class="stringliteral">&quot;module_path&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_(self,<sp/></highlight><highlight class="stringliteral">&quot;config_path&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Config._configs_by_name[name]<sp/>=<sp/>self</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="classdragonfly_1_1config_1_1Config_1a4c405648d7b5f18adb7c2350bb142e0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1config_1_1Config_1a4c405648d7b5f18adb7c2350bb142e0d" kindref="member">_set_mode</ref>(self,<sp/>mode):</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object.__setattr__(self,<sp/></highlight><highlight class="stringliteral">&quot;_mode&quot;</highlight><highlight class="normal">,<sp/>mode)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>n,<sp/>s<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._sections_list:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s._set_mode(mode)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="classdragonfly_1_1config_1_1Config_1ac88a642b563c2c6a4d058c3c26bc746c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1config_1_1Config_1ac88a642b563c2c6a4d058c3c26bc746c" kindref="member">__getattr__</ref>(self,<sp/>name):</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._sections:</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self._sections[name]</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>AttributeError(name)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="classdragonfly_1_1config_1_1Config_1a57b0dce6ab294e714e3ff2d9d6ae08d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1config_1_1Config_1a57b0dce6ab294e714e3ff2d9d6ae08d2" kindref="member">__setattr__</ref>(self,<sp/>name,<sp/>value):</highlight></codeline>
<codeline lineno="200" refid="classdragonfly_1_1config_1_1Config_1afcdc3e46117f07df763fad0ab57b6a60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1config_1_1Config_1afcdc3e46117f07df763fad0ab57b6a60" kindref="member">_mode</ref><sp/>==<sp/>_init:</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(value,<sp/>Section):</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._sections[name]<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._sections_list.append((name,<sp/>value))</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>type<sp/>%s,<sp/>expecting<sp/>Section.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/><ref refid="namespacetest__grammar_1a2d627203d6cca5b11d2cc4fa9c3e00cd" kindref="member">type</ref>(value))</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>AttributeError(name)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="classdragonfly_1_1config_1_1Config_1aa5eea4c8aa4b0cb37fafe33b995c9559" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1config_1_1Config_1aa5eea4c8aa4b0cb37fafe33b995c9559" kindref="member">load</ref>(self,<sp/>path=None):</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="211"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Load<sp/>the<sp/>configuration<sp/>file<sp/>at<sp/>the<sp/>given<sp/>*path*,<sp/>or</highlight></codeline>
<codeline lineno="212"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>look<sp/>for<sp/>a<sp/>configuration<sp/>file<sp/>associated<sp/>with<sp/>the<sp/>calling</highlight></codeline>
<codeline lineno="213"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>module.</highlight></codeline>
<codeline lineno="214"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="215"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*path*<sp/>(*str*,<sp/>default:<sp/>*None*)<sp/>--</highlight></codeline>
<codeline lineno="216"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>to<sp/>the<sp/>configuration<sp/>file<sp/>to<sp/>load.<sp/><sp/>If<sp/>*None*,</highlight></codeline>
<codeline lineno="217"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>then<sp/>a<sp/>path<sp/>is<sp/>generated<sp/>from<sp/>the<sp/>calling<sp/>module&apos;s</highlight></codeline>
<codeline lineno="218"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file<sp/>name<sp/>by<sp/>replacing<sp/>its<sp/>extension<sp/>with<sp/>&quot;.txt&quot;.</highlight></codeline>
<codeline lineno="219"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="220"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>the<sp/>*path*<sp/>is<sp/>a<sp/>file,<sp/>it<sp/>is<sp/>loaded.<sp/><sp/>On<sp/>the<sp/>other<sp/>hand,</highlight></codeline>
<codeline lineno="221"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>it<sp/>does<sp/>not<sp/>exist<sp/>or<sp/>is<sp/>not<sp/>a<sp/>file,<sp/>nothing<sp/>is<sp/>loaded</highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>this<sp/>configuration&apos;s<sp/>defaults<sp/>remain<sp/>in<sp/>place.</highlight></codeline>
<codeline lineno="223"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="224"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1config_1_1Config_1a4c405648d7b5f18adb7c2350bb142e0d" kindref="member">_set_mode</ref>(_load)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>path:</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caller_frame<sp/>=<sp/>inspect.currentframe().f_back</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caller_file<sp/>=<sp/>caller_frame.f_globals[</highlight><highlight class="stringliteral">&quot;__file__&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>module_base,<sp/>module_ext<sp/>=<sp/>os.path.splitext(caller_file)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/>module_base<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>module_ext<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;.pyc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;.pyo&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>module_ext<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;.py&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object.__setattr__(self,<sp/></highlight><highlight class="stringliteral">&quot;module_path&quot;</highlight><highlight class="normal">,<sp/>module_base<sp/>+<sp/>module_ext)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object.__setattr__(self,<sp/></highlight><highlight class="stringliteral">&quot;config_path&quot;</highlight><highlight class="normal">,<sp/>path)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.exists(path):</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespace<sp/>=<sp/>self.<ref refid="classdragonfly_1_1config_1_1Config_1a938f7ca5b6b70d55071a9a9d405252ae" kindref="member">load_from_file</ref>(path)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespace<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1config_1_1Config_1a4c405648d7b5f18adb7c2350bb142e0d" kindref="member">_set_mode</ref>(_done)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>namespace</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="classdragonfly_1_1config_1_1Config_1a938f7ca5b6b70d55071a9a9d405252ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1config_1_1Config_1a938f7ca5b6b70d55071a9a9d405252ae" kindref="member">load_from_file</ref>(self,<sp/>path):</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespace<sp/>=<sp/>dict(self._sections)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>name,<sp/>section<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._sections_list:</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>section.update_namespace(namespace)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(path)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>file:</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exec(compile(file.read(),<sp/>path,<sp/></highlight><highlight class="stringliteral">&apos;exec&apos;</highlight><highlight class="normal">),<sp/>namespace)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>except<sp/>ConfigError,<sp/>e:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;exception:&quot;</highlight><highlight class="normal">,<sp/>e)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t,<sp/>v,<sp/>tb<sp/>=<sp/>sys.exc_info()</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frames<sp/>=<sp/>traceback.extract_tb(tb)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>relevant_frames<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_line<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&lt;unknown&gt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>include_all<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>frame<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>frames:</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename,<sp/>line,<sp/>function,<sp/>text<sp/>=<sp/>frame</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;frame:&quot;</highlight><highlight class="normal">,<sp/>frame)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>include_all:</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file1<sp/>=<sp/>os.path.basename(filename)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file2<sp/>=<sp/>os.path.basename(path)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>file1<sp/>==<sp/>file2:</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>include_all<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_line<sp/>=<sp/>line</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>include_all:</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>relevant_frames.append(frame)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1config_1_1Config_1ad5307140590430a22330ab55f6668802" kindref="member">_log</ref>.error(</highlight><highlight class="stringliteral">&quot;An<sp/>error<sp/>occurred<sp/>in<sp/>the<sp/>%s<sp/>file<sp/>at<sp/>line<sp/>%s.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>(path,<sp/>error_line))</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1config_1_1Config_1ad5307140590430a22330ab55f6668802" kindref="member">_log</ref>.error(</highlight><highlight class="stringliteral">&quot;The<sp/>error<sp/>message<sp/>was:<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>e)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>formatted<sp/>=<sp/>traceback.format_list(relevant_frames)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">.join(formatted).splitlines()</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lines:</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1config_1_1Config_1ad5307140590430a22330ab55f6668802" kindref="member">_log</ref>.error(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>line)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>namespace</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="classdragonfly_1_1config_1_1Config_1a20e4e2e741b2d713382b56ff98889d20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_comment_indent<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">*20</highlight></codeline>
<codeline lineno="285" refid="classdragonfly_1_1config_1_1Config_1a9eb0a65bbc125c59d0fb6de5f8d73e90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_comment_wrapper<sp/>=<sp/>textwrap.TextWrapper(</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width=70,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break_long_words=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initial_indent=_comment_indent+</highlight><highlight class="stringliteral">&quot;#<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subsequent_indent=_comment_indent+</highlight><highlight class="stringliteral">&quot;#<sp/><sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="classdragonfly_1_1config_1_1Config_1a57a994c2a1e2033935cb181eb5d6efbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1config_1_1Config_1a57a994c2a1e2033935cb181eb5d6efbd" kindref="member">_format_file_head</ref>(self):</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Dragonfly<sp/>config<sp/>for<sp/>%(config_name)s&quot;</highlight><highlight class="normal"><sp/>%<sp/>{</highlight><highlight class="stringliteral">&quot;config_name&quot;</highlight><highlight class="normal">:<sp/>self.name}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/>=<sp/>self.<ref refid="classdragonfly_1_1config_1_1Config_1a9eb0a65bbc125c59d0fb6de5f8d73e90" kindref="member">_comment_wrapper</ref>.wrap(header)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines.insert(0,<sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines.append(</highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines.append(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lines</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="classdragonfly_1_1config_1_1Config_1a85b776337869e3eb885f50721fa770ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1config_1_1Config_1a85b776337869e3eb885f50721fa770ec" kindref="member">_format_section_head</ref>(self,<sp/>name,<sp/>section,<sp/>names):</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>76</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#---<sp/>%s<sp/>&quot;</highlight><highlight class="normal"><sp/>%<sp/>section.doc</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>width<sp/>-<sp/>len(header)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>length<sp/>&gt;<sp/>0:<sp/>header<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal"><sp/>*<sp/>length</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[header,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="classdragonfly_1_1config_1_1Config_1aa7a4c50757d2dff8adec5da2205005be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1config_1_1Config_1aa7a4c50757d2dff8adec5da2205005be" kindref="member">_format_item</ref>(self,<sp/>name,<sp/>item,<sp/>names):</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">.join(list(names)<sp/>+<sp/>[name])</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;doc&quot;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/>item.doc,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal">:<sp/><sp/>item.default,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/>item.value,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;path&quot;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/>path,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines.append(</highlight><highlight class="stringliteral">&quot;%(path)s<sp/>=<sp/>%(value)r&quot;</highlight><highlight class="normal"><sp/>%<sp/>data)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>item.doc:</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;%(doc)s&quot;</highlight><highlight class="normal"><sp/>%<sp/>data</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines.extend(self.<ref refid="classdragonfly_1_1config_1_1Config_1a9eb0a65bbc125c59d0fb6de5f8d73e90" kindref="member">_comment_wrapper</ref>.wrap(header))</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines.extend(self.<ref refid="classdragonfly_1_1config_1_1Config_1a9eb0a65bbc125c59d0fb6de5f8d73e90" kindref="member">_comment_wrapper</ref>.wrap(</highlight><highlight class="stringliteral">&quot;Default:<sp/>%(default)r&quot;</highlight><highlight class="normal"><sp/>%<sp/>data))</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines.append(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lines</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324" refid="classdragonfly_1_1config_1_1Config_1ab6ae44a42c540e4ed9b91f5b6910be0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1config_1_1Config_1ab6ae44a42c540e4ed9b91f5b6910be0e" kindref="member">generate_config_file</ref>(self,<sp/>path=None):</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="326"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Create<sp/>a<sp/>configuration<sp/>file<sp/>containing<sp/>this</highlight></codeline>
<codeline lineno="327"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configuration<sp/>object&apos;s<sp/>current<sp/>settings.</highlight></codeline>
<codeline lineno="328"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="329"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*path*<sp/>(*str*,<sp/>default:<sp/>*None*)<sp/>--</highlight></codeline>
<codeline lineno="330"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>to<sp/>the<sp/>configuration<sp/>file<sp/>to<sp/>load.<sp/><sp/>If<sp/>*None*,</highlight></codeline>
<codeline lineno="331"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>then<sp/>a<sp/>path<sp/>is<sp/>generated<sp/>from<sp/>the<sp/>calling<sp/>module&apos;s</highlight></codeline>
<codeline lineno="332"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file<sp/>name<sp/>by<sp/>replacing<sp/>its<sp/>extension<sp/>with<sp/>&quot;.txt&quot;.</highlight></codeline>
<codeline lineno="333"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="334"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Config<sp/>file<sp/>header.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/>self.<ref refid="classdragonfly_1_1config_1_1Config_1a57a994c2a1e2033935cb181eb5d6efbd" kindref="member">_format_file_head</ref>()</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Iterates<sp/>through<sp/>the<sp/>sections.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack<sp/>=<sp/>[iter(self._sections_list)]</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>names<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>stack:</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Try<sp/>to<sp/>retrieve<sp/>the<sp/>next<sp/>section<sp/>from<sp/>the<sp/>top<sp/>of<sp/>the<sp/>stack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>section_name,<sp/>section<sp/>=<sp/>next(stack[-1])</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>names.append(section_name)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>StopIteration:</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>No<sp/>more<sp/>subsections,<sp/>remove<sp/>section<sp/>from<sp/>top<sp/>of<sp/>stack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>for<sp/>names<sp/>needed<sp/>for<sp/>when<sp/>the<sp/>root<sp/>Config<sp/>is<sp/>popped.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack.pop()</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>names:<sp/>names.pop()</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>section<sp/>head.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>section_head<sp/>=<sp/>self.<ref refid="classdragonfly_1_1config_1_1Config_1a85b776337869e3eb885f50721fa770ec" kindref="member">_format_section_head</ref>(section_name,<sp/>section,<sp/>names)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.extend(section_head)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Output<sp/>section<sp/>items.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>item_name,<sp/>item<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>section._items_list:</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item_output<sp/>=<sp/>self.<ref refid="classdragonfly_1_1config_1_1Config_1aa7a4c50757d2dff8adec5da2205005be" kindref="member">_format_item</ref>(item_name,<sp/>item,<sp/>names)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.extend(item_output)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Push<sp/>section<sp/>onto<sp/>the<sp/>stack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack.append(iter(section._sections_list))</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>path:</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caller_frame<sp/>=<sp/>inspect.currentframe().f_back</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caller_file<sp/>=<sp/>caller_frame.f_globals[</highlight><highlight class="stringliteral">&quot;__file__&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>module_base<sp/>=<sp/>os.path.splitext(caller_file)[0]</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/>module_base<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>open(path,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">.join(output))</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.close()</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Section<sp/>class;<sp/>this<sp/>represents<sp/>a<sp/>section<sp/>within<sp/>a<sp/>Config<sp/>hierarchy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="classdragonfly_1_1config_1_1Section" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1config_1_1Section" kindref="compound">Section</ref>(object):</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="382"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Section<sp/>of<sp/>a<sp/>configuration<sp/>for<sp/>grouping<sp/>items.</highlight></codeline>
<codeline lineno="383"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="384"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Constructor<sp/>argument:</highlight></codeline>
<codeline lineno="385"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*doc*<sp/>(*str*)<sp/>--</highlight></codeline>
<codeline lineno="386"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>name<sp/>of<sp/>this<sp/>configuration<sp/>section.</highlight></codeline>
<codeline lineno="387"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="388"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>section<sp/>can<sp/>contain<sp/>zero<sp/>or<sp/>more<sp/>subsections<sp/>and<sp/>zero<sp/>or<sp/>more</highlight></codeline>
<codeline lineno="389"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configuration<sp/>items.</highlight></codeline>
<codeline lineno="390"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="391"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="classdragonfly_1_1config_1_1Section_1ad54740907b78984ca0dfbd52e69ab3c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1config_1_1Section_1ad54740907b78984ca0dfbd52e69ab3c2" kindref="member">__init__</ref>(self,<sp/>doc):</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_<sp/>=<sp/>object.__setattr__</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_(self,<sp/></highlight><highlight class="stringliteral">&quot;doc&quot;</highlight><highlight class="normal">,<sp/>doc)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_(self,<sp/></highlight><highlight class="stringliteral">&quot;_items&quot;</highlight><highlight class="normal">,<sp/>{})</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_(self,<sp/></highlight><highlight class="stringliteral">&quot;_items_list&quot;</highlight><highlight class="normal">,<sp/>[])</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_(self,<sp/></highlight><highlight class="stringliteral">&quot;_sections&quot;</highlight><highlight class="normal">,<sp/>{})</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_(self,<sp/></highlight><highlight class="stringliteral">&quot;_sections_list&quot;</highlight><highlight class="normal">,<sp/>[])</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_(self,<sp/></highlight><highlight class="stringliteral">&quot;_mode&quot;</highlight><highlight class="normal">,<sp/>_init)</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="classdragonfly_1_1config_1_1Section_1aa79dc309b5483bba21910730a6e45bc4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1config_1_1Section_1aa79dc309b5483bba21910730a6e45bc4" kindref="member">_set_mode</ref>(self,<sp/>mode):</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object.__setattr__(self,<sp/></highlight><highlight class="stringliteral">&quot;_mode&quot;</highlight><highlight class="normal">,<sp/>mode)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>n,<sp/>s<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._sections_list:</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s._set_mode(mode)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="classdragonfly_1_1config_1_1Section_1a9b2fa7e4e944a5d470b84668fc50761d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1config_1_1Section_1a9b2fa7e4e944a5d470b84668fc50761d" kindref="member">__getattr__</ref>(self,<sp/>name):</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._items:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self._items[name].value</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._sections:<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self._sections[name]</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>AttributeError(name)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412" refid="classdragonfly_1_1config_1_1Section_1ac2a9320d4f62e7964f937cc486cded1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1config_1_1Section_1ac2a9320d4f62e7964f937cc486cded1c" kindref="member">__setattr__</ref>(self,<sp/>name,<sp/>value):</highlight></codeline>
<codeline lineno="413" refid="classdragonfly_1_1config_1_1Section_1a1661c6762342e30cc61b3559fedb015c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1config_1_1Section_1a1661c6762342e30cc61b3559fedb015c" kindref="member">_mode</ref><sp/>==<sp/>_init:</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(value,<sp/>Item):</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._items[name]<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._items_list.append((name,<sp/>value))</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(value,<sp/>Section):</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._sections[name]<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._sections_list.append((name,<sp/>value))</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>type<sp/>%s,<sp/>expecting<sp/>Item<sp/>or<sp/>Section.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/><ref refid="namespacetest__grammar_1a2d627203d6cca5b11d2cc4fa9c3e00cd" kindref="member">type</ref>(value))</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1config_1_1Section_1a1661c6762342e30cc61b3559fedb015c" kindref="member">_mode</ref><sp/>==<sp/>_load:</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._items:<sp/><sp/><sp/><sp/>self._items[name].value<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>AttributeError(name)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>AttributeError(name)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429" refid="classdragonfly_1_1config_1_1Section_1af8f99e40328d702a879612a6692d01d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1config_1_1Section_1af8f99e40328d702a879612a6692d01d5" kindref="member">update_namespace</ref>(self,<sp/>namespace):</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>name,<sp/>item<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._items_list:</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item.update_namespace(namespace)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>name,<sp/>section<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self._sections_list:</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>section.update_namespace(namespace)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Item<sp/>classes<sp/>which<sp/>represent<sp/>config<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="classdragonfly_1_1config_1_1Item" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1config_1_1Item" kindref="compound">Item</ref>(object):</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="441"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Configuration<sp/>item<sp/>for<sp/>storing<sp/>configuration<sp/>settings.</highlight></codeline>
<codeline lineno="442"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="443"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Constructor<sp/>arguments:</highlight></codeline>
<codeline lineno="444"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*default*<sp/>--</highlight></codeline>
<codeline lineno="445"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>default<sp/>value<sp/>for<sp/>this<sp/>item</highlight></codeline>
<codeline lineno="446"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*doc*<sp/>(*str*,<sp/>default:<sp/>*None*)<sp/>--</highlight></codeline>
<codeline lineno="447"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>an<sp/>optional<sp/>description<sp/>of<sp/>this<sp/>item</highlight></codeline>
<codeline lineno="448"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>*namespace*<sp/>(*dict*,<sp/>default:<sp/>*None*)<sp/>--</highlight></codeline>
<codeline lineno="449"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>an<sp/>optional<sp/>namespace<sp/>dictionary<sp/>which<sp/>will<sp/>be<sp/>made<sp/>available</highlight></codeline>
<codeline lineno="450"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>the<sp/>Python<sp/>code<sp/>in<sp/>the<sp/>external<sp/>configuration<sp/>file</highlight></codeline>
<codeline lineno="451"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>during<sp/>loading</highlight></codeline>
<codeline lineno="452"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="453"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>configuration<sp/>item<sp/>is<sp/>the<sp/>object<sp/>that<sp/>stores<sp/>the<sp/>actual</highlight></codeline>
<codeline lineno="454"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configuration<sp/>settings.<sp/><sp/>Each<sp/>item<sp/>has<sp/>a<sp/>default<sp/>value,<sp/>a<sp/>current</highlight></codeline>
<codeline lineno="455"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value,<sp/>an<sp/>optional<sp/>description,<sp/>and<sp/>an<sp/>optional<sp/>namespace.</highlight></codeline>
<codeline lineno="456"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="457"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>class<sp/>performs<sp/>the<sp/>checking<sp/>of<sp/>configuration<sp/>values<sp/>assigned</highlight></codeline>
<codeline lineno="458"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>it<sp/>during<sp/>loading<sp/>of<sp/>the<sp/>configuration<sp/>file.<sp/><sp/>The<sp/>default</highlight></codeline>
<codeline lineno="459"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>behavior<sp/>of<sp/>this<sp/>class<sp/>is<sp/>to<sp/>only<sp/>accept<sp/>values<sp/>of<sp/>the<sp/>same<sp/>Python</highlight></codeline>
<codeline lineno="460"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>as<sp/>the<sp/>item&apos;s<sp/>default<sp/>value.<sp/><sp/>So,<sp/>if<sp/>the<sp/>default<sp/>value<sp/>is<sp/>a</highlight></codeline>
<codeline lineno="461"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string,<sp/>then<sp/>the<sp/>value<sp/>assigned<sp/>in<sp/>the<sp/>configuration<sp/>file<sp/>must</highlight></codeline>
<codeline lineno="462"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>also<sp/>be<sp/>a<sp/>string.<sp/><sp/>Otherwise<sp/>an<sp/>exception<sp/>will<sp/>be<sp/>raised<sp/>and</highlight></codeline>
<codeline lineno="463"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loading<sp/>will<sp/>fail.</highlight></codeline>
<codeline lineno="464"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="465"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Developers<sp/>who<sp/>want<sp/>other<sp/>kinds<sp/>of<sp/>value<sp/>checking<sp/>should<sp/>override</highlight></codeline>
<codeline lineno="466"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>:meth:`Item.validate`<sp/>method<sp/>of<sp/>this<sp/>class.</highlight></codeline>
<codeline lineno="467"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="468"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="classdragonfly_1_1config_1_1Item_1af00c9a95addfd074e0fbe1ca67834257" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1config_1_1Item_1af00c9a95addfd074e0fbe1ca67834257" kindref="member">__init__</ref>(self,<sp/>default,<sp/>doc=None,<sp/>namespace=None):</highlight></codeline>
<codeline lineno="472" refid="classdragonfly_1_1config_1_1Item_1a4c1d0c7329c8f55cb8d6bf00147ad7d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1config_1_1Item_1a4c1d0c7329c8f55cb8d6bf00147ad7d8" kindref="member">_default</ref><sp/>=<sp/>default</highlight></codeline>
<codeline lineno="473" refid="classdragonfly_1_1config_1_1Item_1a8e59e6c2166143923e0edf66abce9f17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1config_1_1Item_1a8e59e6c2166143923e0edf66abce9f17" kindref="member">_value</ref><sp/>=<sp/>default</highlight></codeline>
<codeline lineno="474" refid="classdragonfly_1_1config_1_1Item_1a842ded994cf697972815cb36db97a2bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1config_1_1Item_1a842ded994cf697972815cb36db97a2bf" kindref="member">doc</ref><sp/>=<sp/>doc</highlight></codeline>
<codeline lineno="475" refid="classdragonfly_1_1config_1_1Item_1ab0e6007eef1f9e0c1f58b39a6564f372" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1config_1_1Item_1ab0e6007eef1f9e0c1f58b39a6564f372" kindref="member">_namespace</ref><sp/>=<sp/>namespace</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="classdragonfly_1_1config_1_1Item_1ae128f179af99e0b150153b9d4e9b2fb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1config_1_1Item_1ae128f179af99e0b150153b9d4e9b2fb8" kindref="member">get_default</ref>(self):</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1config_1_1Item_1a4c1d0c7329c8f55cb8d6bf00147ad7d8" kindref="member">_default</ref></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="classdragonfly_1_1config_1_1Item_1a5bb5649d8cdfefc2f42e629bfea3cacc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1config_1_1Item_1a5bb5649d8cdfefc2f42e629bfea3cacc" kindref="member">get_value</ref>(self):</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1config_1_1Item_1a8e59e6c2166143923e0edf66abce9f17" kindref="member">_value</ref></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="classdragonfly_1_1config_1_1Item_1ab14cc152c25b713c97e5d59a04e095a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1config_1_1Item_1ab14cc152c25b713c97e5d59a04e095a5" kindref="member">set_value</ref>(self,<sp/>value):</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1config_1_1Item_1aed60b6822f79f3ff4664ea07c2bf6452" kindref="member">validate</ref>(value)</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1config_1_1Item_1a8e59e6c2166143923e0edf66abce9f17" kindref="member">_value</ref><sp/>=<sp/>value</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487" refid="classdragonfly_1_1config_1_1Item_1aed60b6822f79f3ff4664ea07c2bf6452" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1config_1_1Item_1aed60b6822f79f3ff4664ea07c2bf6452" kindref="member">validate</ref>(self,<sp/>value):</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="489"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Determine<sp/>whether<sp/>the<sp/>given<sp/>*value*<sp/>is<sp/>valid.</highlight></codeline>
<codeline lineno="490"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="491"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/>performs<sp/>validity<sp/>checking<sp/>of<sp/>the<sp/>configuration</highlight></codeline>
<codeline lineno="492"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>assigned<sp/>to<sp/>this<sp/>item<sp/>during<sp/>loading<sp/>of<sp/>the<sp/>external</highlight></codeline>
<codeline lineno="493"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configuration<sp/>file.<sp/><sp/>If<sp/>the<sp/>default<sp/>behavior<sp/>is<sp/>to<sp/>raise<sp/>a</highlight></codeline>
<codeline lineno="494"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*TypeError*<sp/>if<sp/>the<sp/>type<sp/>of<sp/>the<sp/>assigned<sp/>value<sp/>is<sp/>not<sp/>the<sp/>same</highlight></codeline>
<codeline lineno="495"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>the<sp/>type<sp/>of<sp/>the<sp/>default<sp/>value.</highlight></codeline>
<codeline lineno="496"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="497"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(value,<sp/><ref refid="namespacetest__grammar_1a2d627203d6cca5b11d2cc4fa9c3e00cd" kindref="member">type</ref>(self.<ref refid="classdragonfly_1_1config_1_1Item_1a4c1d0c7329c8f55cb8d6bf00147ad7d8" kindref="member">_default</ref>)):</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>type<sp/>%s,<sp/>expecting<sp/>%s.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>(<ref refid="namespacetest__grammar_1a2d627203d6cca5b11d2cc4fa9c3e00cd" kindref="member">type</ref>(value),<sp/><ref refid="namespacetest__grammar_1a2d627203d6cca5b11d2cc4fa9c3e00cd" kindref="member">type</ref>(self.<ref refid="classdragonfly_1_1config_1_1Item_1a4c1d0c7329c8f55cb8d6bf00147ad7d8" kindref="member">_default</ref>)))</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502" refid="classdragonfly_1_1config_1_1Item_1ab13d416ce5450a92702949b636500fd6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>property(get_value,<sp/>set_value)</highlight></codeline>
<codeline lineno="503" refid="classdragonfly_1_1config_1_1Item_1ab1a673a192c7abb96fe860736ed0dfee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>default<sp/>=<sp/>property(get_default)</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505" refid="classdragonfly_1_1config_1_1Item_1a15415d314eef5f26fb06cfdfdc8ed849" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1config_1_1Item_1a15415d314eef5f26fb06cfdfdc8ed849" kindref="member">update_namespace</ref>(self,<sp/>namespace):</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1config_1_1Item_1ab0e6007eef1f9e0c1f58b39a6564f372" kindref="member">_namespace</ref>:</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespace.update(self.<ref refid="classdragonfly_1_1config_1_1Item_1ab0e6007eef1f9e0c1f58b39a6564f372" kindref="member">_namespace</ref>)</highlight></codeline>
    </programlisting>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/config.py"/>
  </compounddef>
</doxygen>
