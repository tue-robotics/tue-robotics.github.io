<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::actions::action_startapp::BringApp</compoundname>
    <basecompoundref refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp" prot="public" virt="non-virtual">dragonfly.actions.action_startapp.StartApp</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp_1ad3635da4453c1bd645d86200773d6145" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.actions.action_startapp.BringApp::_filter_func</definition>
        <argsstring></argsstring>
        <name>_filter_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_startapp.py" line="242" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_startapp.py" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp_1a6adb7f9dc093bc1ece85843c0126ee85" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.actions.action_startapp.BringApp::_focus_only</definition>
        <argsstring></argsstring>
        <name>_focus_only</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_startapp.py" line="243" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_startapp.py" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp_1afdd66e7a83a229ba2300adacc2ee3c11" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.actions.action_startapp.BringApp::_index</definition>
        <argsstring></argsstring>
        <name>_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_startapp.py" line="241" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_startapp.py" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp_1a7e4ea4f4c2ac501e0b33e5aa506bd5ae" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.actions.action_startapp.BringApp::_title</definition>
        <argsstring></argsstring>
        <name>_title</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_startapp.py" line="240" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_startapp.py" bodystart="240" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp_1a14f18744e1659a6b58e42141b829dac5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.actions.action_startapp.BringApp.__init__</definition>
        <argsstring>(self, *args, **kwargs)</argsstring>
        <name>__init__</name>
        <reimplements refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1ab59ccf3b7ba563862726701f417ade3d">__init__</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>*</type>
          <declname>args</declname>
        </param>
        <param>
          <type>**</type>
          <declname>kwargs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Constructor arguments:
     - *args* (variable argument list of *str*&apos;s) --
       these strings are passed to :meth:`subprocess.Popen`
       to start the application as a child process
     - *cwd* (*str*, default *None*) --
       if not *None*, then start the application in this
       directory
     - *title* (*str*, default *None*) --
       if not *None*, then match existing windows using this
       title.
     - *index* (*str* or *int*) -- zero-based index of the target
       window, for multiple matching windows; can be a string (for
       substitution) but must be convertible to an integer.
     - *filter_func* (*callable*) -- called with a single argument
       (the window object), and should return ``True`` for your
       target windows; example:
       ``lambda window: window.get_position().dy &gt; 100``.
     - *focus_after_start* (*bool*, default *False*) --
       if *True*, then attempt to bring the window to the foreground
       after starting the application. Does nothing if the
       application is already running.
     - *focus_only* (*bool*, default *False*) -- if *True*, then
       attempt to focus a matching window without raising it by
       using the *set_focus()* method instead of *set_foreground()*.
       This argument may do nothing depending on the platform.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_startapp.py" line="211" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_startapp.py" bodystart="211" bodyend="245"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp_1a720ccc0563558104552ece8232392585" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.actions.action_startapp.BringApp._execute</definition>
        <argsstring>(self, data=None)</argsstring>
        <name>_execute</name>
        <reimplements refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1a64fc2f9f68e768a8bde05e38e0fecf32">_execute</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>data</type>
          <defname>data</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Virtual method. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_startapp.py" line="246" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_startapp.py" bodystart="246" bodyend="261"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>    Bring an application to the foreground, starting it if it is not
    yet running.

    When this action is executed, it looks for an existing window of
    the application specified in the constructor arguments.  If an
    existing window is found, that window is brought to the
    foreground.  On the other hand, if no window is found the
    application is started.

    Note that the constructor arguments are identical to those used by
    the :class:`StartApp` action class.</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dragonfly.actions.action_startapp.BringApp</label>
        <link refid="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>object</label>
      </node>
      <node id="3">
        <label>dragonfly.actions.action_base.ActionBase</label>
        <link refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>dragonfly.actions.action_startapp.StartApp</label>
        <link refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>dragonfly.actions.action_startapp.BringApp</label>
        <link refid="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>object</label>
      </node>
      <node id="3">
        <label>dragonfly.actions.action_base.ActionBase</label>
        <link refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>dragonfly.actions.action_startapp.StartApp</label>
        <link refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_startapp.py" line="195" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_startapp.py" bodystart="195" bodyend="261"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a1dfe8e16c1e8963f72c8cb04ec367e9f" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_startapp::BringApp</scope><name>__add__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a444ecf185c7836c8be0cf2e166a5f45a" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_startapp::BringApp</scope><name>__iadd__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a39afe0cb63ff97da799bd1fcc7286395" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_startapp::BringApp</scope><name>__imul__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp_1a14f18744e1659a6b58e42141b829dac5" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_startapp::BringApp</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a0afc12f5eb003b59bf4b11d3928321a2" prot="public" virt="non-virtual" ambiguityscope="dragonfly::actions::action_base::ActionBase."><scope>dragonfly::actions::action_startapp::BringApp</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a043986deb9acb1306f393f1a5cde6632" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_startapp::BringApp</scope><name>__ior__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1aa71fbd62af7c640fc65943c76cc09563" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_startapp::BringApp</scope><name>__mul__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1aa7d635f74abfc39b412c4d8f247f1fd0" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_startapp::BringApp</scope><name>__or__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a4ceb796f69cac0c4f601ce5916f5c91c" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_startapp::BringApp</scope><name>__repr__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a54a429d1d2bd048279e57ba5aaea2449" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_startapp::BringApp</scope><name>__unicode__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1abafd8af1b415a0d86bd36be83d2c93be" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_startapp::BringApp</scope><name>_args</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1ad524bb51b02ee691eeebc1df3cdb511f" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_startapp::BringApp</scope><name>_cwd</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1a4add9e605f74b5a867cbb3942c21f2fd" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_startapp::BringApp</scope><name>_darwin_start_app</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp_1a720ccc0563558104552ece8232392585" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_startapp::BringApp</scope><name>_execute</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp_1ad3635da4453c1bd645d86200773d6145" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_startapp::BringApp</scope><name>_filter_func</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1a6d8386b1125ecf727ca3f74f3c9d04a9" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_startapp::BringApp</scope><name>_focus_after_start</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp_1a6adb7f9dc093bc1ece85843c0126ee85" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_startapp::BringApp</scope><name>_focus_only</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1a2f5f380c10311d8013499f1c5f0b631a" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_startapp::BringApp</scope><name>_focus_window_after_starting</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp_1afdd66e7a83a229ba2300adacc2ee3c11" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_startapp::BringApp</scope><name>_index</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1a7e2e2fa56fb2bdcfafe96dfe5346516d" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_startapp::BringApp</scope><name>_interpret</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a3861efea158692698e3a4f9d79ec7395" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_startapp::BringApp</scope><name>_log</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a842c601698c9eb62bb03ad937afe9aa6" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_startapp::BringApp</scope><name>_log_exec</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a873179afc5fe4521c177e121cc6cc9ae" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_startapp::BringApp</scope><name>_log_init</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1ad707cd8ff1d6aaa5d13410cddcb2244b" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_startapp::BringApp</scope><name>_start_app_process</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__startapp_1_1StartApp_1a112aee1310a87b7ebbead3fd3bc23599" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_startapp::BringApp</scope><name>_str</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__startapp_1_1BringApp_1a7e4ea4f4c2ac501e0b33e5aa506bd5ae" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_startapp::BringApp</scope><name>_title</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a6d193fe1211e618673e4f4cc06ac623b" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_startapp::BringApp</scope><name>bind</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a3454ac5c9ab40d43bc64af73157a89df" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_startapp::BringApp</scope><name>copy_bind</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a86ef0362bdcfbca96ae7f69df40b43f3" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_startapp::BringApp</scope><name>execute</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
