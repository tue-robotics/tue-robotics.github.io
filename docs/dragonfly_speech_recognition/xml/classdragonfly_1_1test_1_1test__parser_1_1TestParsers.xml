<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1test_1_1test__parser_1_1TestParsers" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::test::test_parser::TestParsers</compoundname>
    <basecompoundref prot="public" virt="non-virtual">TestCase</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1test_1_1test__parser_1_1TestParsers_1a2f5590f32cca50162708a56f73825a57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.test_parser.TestParsers.setUp</definition>
        <argsstring>(self)</argsstring>
        <name>setUp</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_parser.py" line="34" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_parser.py" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1test_1_1test__parser_1_1TestParsers_1a5a19d52615ca5a44fbff12bb11f98d80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.test_parser.TestParsers.test_character_series</definition>
        <argsstring>(self)</argsstring>
        <name>test_character_series</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Test CharacterSeries parser classes. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_parser.py" line="37" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_parser.py" bodystart="37" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1test_1_1test__parser_1_1TestParsers_1a605ec79156b8b4922b5bd72f880b0883" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.test_parser.TestParsers.test_compound_element</definition>
        <argsstring>(self)</argsstring>
        <name>test_compound_element</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Test the dragonfly Compound element. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_parser.py" line="84" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_parser.py" bodystart="84" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1test_1_1test__parser_1_1TestParsers_1a1fdee9e83b1a356a1a91724b78ce5530" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.test_parser.TestParsers.test_optional_greedy</definition>
        <argsstring>(self)</argsstring>
        <name>test_optional_greedy</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Test greedy setting of optional parser class. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_parser.py" line="121" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_parser.py" bodystart="121" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1test_1_1test__parser_1_1TestParsers_1aaadfc7e565b5b5059d90e07223d987a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.test_parser.TestParsers.test_other_alphabets</definition>
        <argsstring>(self)</argsstring>
        <name>test_other_alphabets</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Test that other alphabets also work. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_parser.py" line="68" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_parser.py" bodystart="68" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1test_1_1test__parser_1_1TestParsers_1acaf4b6a17821b22adc87209ee078a390" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.test_parser.TestParsers.test_repetition</definition>
        <argsstring>(self)</argsstring>
        <name>test_repetition</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Test repetition parser class. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_parser.py" line="97" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_parser.py" bodystart="97" bodyend="120"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdragonfly_1_1test_1_1test__parser_1_1TestParsers_1ad660ad75d4edd73f50bcb7318f917a56" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.test_parser.TestParsers._test_multiple</definition>
        <argsstring>(self, parser_element, input_outputs, must_finish=True)</argsstring>
        <name>_test_multiple</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>parser_element</type>
          <defname>parser_element</defname>
        </param>
        <param>
          <type>input_outputs</type>
          <defname>input_outputs</defname>
        </param>
        <param>
          <type>must_finish</type>
          <defname>must_finish</defname>
          <defval>True</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_parser.py" line="152" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_parser.py" bodystart="152" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1test_1_1test__parser_1_1TestParsers_1a06c20bb6836c14a5567c359c4d47446f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.test_parser.TestParsers._test_single</definition>
        <argsstring>(self, parser_element, input_output)</argsstring>
        <name>_test_single</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>parser_element</type>
          <defname>parser_element</defname>
        </param>
        <param>
          <type>input_output</type>
          <defname>input_output</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_parser.py" line="146" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_parser.py" bodystart="146" bodyend="151"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dragonfly.test.test_parser.TestParsers</label>
        <link refid="classdragonfly_1_1test_1_1test__parser_1_1TestParsers"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>TestCase</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>dragonfly.test.test_parser.TestParsers</label>
        <link refid="classdragonfly_1_1test_1_1test__parser_1_1TestParsers"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>TestCase</label>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_parser.py" line="32" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/test_parser.py" bodystart="32" bodyend="165"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1test_1_1test__parser_1_1TestParsers_1ad660ad75d4edd73f50bcb7318f917a56" prot="private" virt="non-virtual"><scope>dragonfly::test::test_parser::TestParsers</scope><name>_test_multiple</name></member>
      <member refid="classdragonfly_1_1test_1_1test__parser_1_1TestParsers_1a06c20bb6836c14a5567c359c4d47446f" prot="private" virt="non-virtual"><scope>dragonfly::test::test_parser::TestParsers</scope><name>_test_single</name></member>
      <member refid="classdragonfly_1_1test_1_1test__parser_1_1TestParsers_1a2f5590f32cca50162708a56f73825a57" prot="public" virt="non-virtual"><scope>dragonfly::test::test_parser::TestParsers</scope><name>setUp</name></member>
      <member refid="classdragonfly_1_1test_1_1test__parser_1_1TestParsers_1a5a19d52615ca5a44fbff12bb11f98d80" prot="public" virt="non-virtual"><scope>dragonfly::test::test_parser::TestParsers</scope><name>test_character_series</name></member>
      <member refid="classdragonfly_1_1test_1_1test__parser_1_1TestParsers_1a605ec79156b8b4922b5bd72f880b0883" prot="public" virt="non-virtual"><scope>dragonfly::test::test_parser::TestParsers</scope><name>test_compound_element</name></member>
      <member refid="classdragonfly_1_1test_1_1test__parser_1_1TestParsers_1a1fdee9e83b1a356a1a91724b78ce5530" prot="public" virt="non-virtual"><scope>dragonfly::test::test_parser::TestParsers</scope><name>test_optional_greedy</name></member>
      <member refid="classdragonfly_1_1test_1_1test__parser_1_1TestParsers_1aaadfc7e565b5b5059d90e07223d987a3" prot="public" virt="non-virtual"><scope>dragonfly::test::test_parser::TestParsers</scope><name>test_other_alphabets</name></member>
      <member refid="classdragonfly_1_1test_1_1test__parser_1_1TestParsers_1acaf4b6a17821b22adc87209ee078a390" prot="public" virt="non-virtual"><scope>dragonfly::test::test_parser::TestParsers</scope><name>test_repetition</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
