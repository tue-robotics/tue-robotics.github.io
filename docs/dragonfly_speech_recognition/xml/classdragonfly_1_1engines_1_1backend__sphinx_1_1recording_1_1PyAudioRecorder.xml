<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::engines::backend_sphinx::recording::PyAudioRecorder</compoundname>
    <basecompoundref prot="public" virt="non-virtual">object</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1a44c57bfe0fbd5229a1ccddbe11accbf7" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.engines.backend_sphinx.recording.PyAudioRecorder::config</definition>
        <argsstring></argsstring>
        <name>config</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" line="39" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1a2738782dd2fd5a5c78fc35f33f0b020d" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.engines.backend_sphinx.recording.PyAudioRecorder::read_interval</definition>
        <argsstring></argsstring>
        <name>read_interval</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" line="40" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1a73b59098260e4795bd97af7903640da6" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.engines.backend_sphinx.recording.PyAudioRecorder::_buffers</definition>
        <argsstring></argsstring>
        <name>_buffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" line="43" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1a7f084a19651ed68c6f3a348e05431a52" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.engines.backend_sphinx.recording.PyAudioRecorder::_condition</definition>
        <argsstring></argsstring>
        <name>_condition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" line="44" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1a67aed6d4d3c989e3836aa17d948cca45" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.engines.backend_sphinx.recording.PyAudioRecorder::_lock</definition>
        <argsstring></argsstring>
        <name>_lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" line="45" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1ab72f6f957c0dc4031ba099982a8d8c57" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.engines.backend_sphinx.recording.PyAudioRecorder::_recording</definition>
        <argsstring></argsstring>
        <name>_recording</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" line="41" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1a729a960a4245ff0afc51d71ba02e537f" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.engines.backend_sphinx.recording.PyAudioRecorder::_thread</definition>
        <argsstring></argsstring>
        <name>_thread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" line="42" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1a8249d88099937d86583b550d69741706" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.backend_sphinx.recording.PyAudioRecorder.__init__</definition>
        <argsstring>(self, config, read_interval=0.05)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1a44c57bfe0fbd5229a1ccddbe11accbf7" kindref="member">config</ref></type>
          <defname>config</defname>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1a2738782dd2fd5a5c78fc35f33f0b020d" kindref="member">read_interval</ref></type>
          <defname>read_interval</defname>
          <defval>0.05</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" line="38" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" bodystart="38" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1aaf092fe9a7f2710ede69ede82c5bcd4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.backend_sphinx.recording.PyAudioRecorder.clear_buffers</definition>
        <argsstring>(self)</argsstring>
        <name>clear_buffers</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Clear the internal buffer list.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" line="91" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" bodystart="91" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1aa4245962fc491477a17fcad904ca3806" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.backend_sphinx.recording.PyAudioRecorder.get_buffers</definition>
        <argsstring>(self, clear=True)</argsstring>
        <name>get_buffers</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>clear</type>
          <defname>clear</defname>
          <defval>True</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Return any stored audio data, optionally clearing the internal list.

:param clear: whether to clear the internal buffer list.
:type clear: bool
:returns: audio buffer list
:rtype: list
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" line="69" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" bodystart="69" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1ac4957a3a8674814edc17b4ad40f6eda6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.backend_sphinx.recording.PyAudioRecorder.recording</definition>
        <argsstring>(self)</argsstring>
        <name>recording</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Whether audio is currently being recorded.

:rtype: bool
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" line="48" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" bodystart="48" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1a3c64ec82abcca9f10cd6d0c55dbf502b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.backend_sphinx.recording.PyAudioRecorder.start</definition>
        <argsstring>(self)</argsstring>
        <name>start</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Start recording audio in another thread until :meth:`stop` is
called.

Audio buffers can be accessed with :meth:`get_buffers`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" line="56" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" bodystart="56" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1a4d892940d6d2a76b012b66e6cc63c23b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.backend_sphinx.recording.PyAudioRecorder.stop</definition>
        <argsstring>(self)</argsstring>
        <name>stop</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Stop recording audio.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" line="98" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" bodystart="98" bodyend="107"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1ac518c003559799c997d8ce6d421cb948" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.backend_sphinx.recording.PyAudioRecorder._record</definition>
        <argsstring>(self)</argsstring>
        <name>_record</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" line="108" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" bodystart="108" bodyend="133"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Class for recording audio from a pyaudio input stream.

This class records on another thread to minimise dropped frames.
</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>object</label>
      </node>
      <node id="1">
        <label>dragonfly.engines.backend_sphinx.recording.PyAudioRecorder</label>
        <link refid="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>object</label>
      </node>
      <node id="1">
        <label>dragonfly.engines.backend_sphinx.recording.PyAudioRecorder</label>
        <link refid="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" line="31" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/recording.py" bodystart="31" bodyend="133"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1a8249d88099937d86583b550d69741706" prot="public" virt="non-virtual"><scope>dragonfly::engines::backend_sphinx::recording::PyAudioRecorder</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1a73b59098260e4795bd97af7903640da6" prot="private" virt="non-virtual"><scope>dragonfly::engines::backend_sphinx::recording::PyAudioRecorder</scope><name>_buffers</name></member>
      <member refid="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1a7f084a19651ed68c6f3a348e05431a52" prot="private" virt="non-virtual"><scope>dragonfly::engines::backend_sphinx::recording::PyAudioRecorder</scope><name>_condition</name></member>
      <member refid="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1a67aed6d4d3c989e3836aa17d948cca45" prot="private" virt="non-virtual"><scope>dragonfly::engines::backend_sphinx::recording::PyAudioRecorder</scope><name>_lock</name></member>
      <member refid="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1ac518c003559799c997d8ce6d421cb948" prot="private" virt="non-virtual"><scope>dragonfly::engines::backend_sphinx::recording::PyAudioRecorder</scope><name>_record</name></member>
      <member refid="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1ab72f6f957c0dc4031ba099982a8d8c57" prot="private" virt="non-virtual"><scope>dragonfly::engines::backend_sphinx::recording::PyAudioRecorder</scope><name>_recording</name></member>
      <member refid="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1a729a960a4245ff0afc51d71ba02e537f" prot="private" virt="non-virtual"><scope>dragonfly::engines::backend_sphinx::recording::PyAudioRecorder</scope><name>_thread</name></member>
      <member refid="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1aaf092fe9a7f2710ede69ede82c5bcd4b" prot="public" virt="non-virtual"><scope>dragonfly::engines::backend_sphinx::recording::PyAudioRecorder</scope><name>clear_buffers</name></member>
      <member refid="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1a44c57bfe0fbd5229a1ccddbe11accbf7" prot="public" virt="non-virtual"><scope>dragonfly::engines::backend_sphinx::recording::PyAudioRecorder</scope><name>config</name></member>
      <member refid="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1aa4245962fc491477a17fcad904ca3806" prot="public" virt="non-virtual"><scope>dragonfly::engines::backend_sphinx::recording::PyAudioRecorder</scope><name>get_buffers</name></member>
      <member refid="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1a2738782dd2fd5a5c78fc35f33f0b020d" prot="public" virt="non-virtual"><scope>dragonfly::engines::backend_sphinx::recording::PyAudioRecorder</scope><name>read_interval</name></member>
      <member refid="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1ac4957a3a8674814edc17b4ad40f6eda6" prot="public" virt="non-virtual"><scope>dragonfly::engines::backend_sphinx::recording::PyAudioRecorder</scope><name>recording</name></member>
      <member refid="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1a3c64ec82abcca9f10cd6d0c55dbf502b" prot="public" virt="non-virtual"><scope>dragonfly::engines::backend_sphinx::recording::PyAudioRecorder</scope><name>start</name></member>
      <member refid="classdragonfly_1_1engines_1_1backend__sphinx_1_1recording_1_1PyAudioRecorder_1a4d892940d6d2a76b012b66e6cc63c23b" prot="public" virt="non-virtual"><scope>dragonfly::engines::backend_sphinx::recording::PyAudioRecorder</scope><name>stop</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
