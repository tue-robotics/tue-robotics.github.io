<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1engines_1_1base_1_1speaker__stdin_1_1EspeakSpeaker" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::engines::base::speaker_stdin::EspeakSpeaker</compoundname>
    <basecompoundref refid="classdragonfly_1_1engines_1_1base_1_1speaker__stdin_1_1StdinSpeakerBase" prot="public" virt="non-virtual">dragonfly.engines.base.speaker_stdin.StdinSpeakerBase</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1engines_1_1base_1_1speaker__stdin_1_1EspeakSpeaker_1ad2bdd1d8b415f61ebab3df9cfb8aed76" prot="private" static="yes" mutable="no">
        <type>string</type>
        <definition>string dragonfly.engines.base.speaker_stdin.EspeakSpeaker::_name</definition>
        <argsstring></argsstring>
        <name>_name</name>
        <initializer>=  &quot;espeak&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/speaker_stdin.py" line="85" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/speaker_stdin.py" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1engines_1_1base_1_1speaker__stdin_1_1EspeakSpeaker_1a4b4283edf73bc95f6d735b678a2aeb66" prot="private" static="yes" mutable="no">
        <type>list</type>
        <definition>list dragonfly.engines.base.speaker_stdin.EspeakSpeaker::_read_stdin_command</definition>
        <argsstring></argsstring>
        <name>_read_stdin_command</name>
        <initializer>=  [&quot;espeak&quot;, &quot;--stdin&quot;]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/speaker_stdin.py" line="86" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/speaker_stdin.py" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1speaker__stdin_1_1EspeakSpeaker_1ae3bf0b254d9a6653527f69a39c1cba59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.speaker_stdin.EspeakSpeaker.__init__</definition>
        <argsstring>(self)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/speaker_stdin.py" line="98" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/speaker_stdin.py" bodystart="98" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1engines_1_1base_1_1speaker__stdin_1_1EspeakSpeaker_1a8dc5652d168ca273281d033571586b79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.base.speaker_stdin.EspeakSpeaker.is_available</definition>
        <argsstring>(cls)</argsstring>
        <name>is_available</name>
        <reimplements refid="classdragonfly_1_1engines_1_1base_1_1speaker__stdin_1_1StdinSpeakerBase_1aa82e86867c49d0c4cd39f38bc07c5c96">is_available</reimplements>
        <param>
          <type>cls</type>
          <defname>cls</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/speaker_stdin.py" line="89" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/speaker_stdin.py" bodystart="89" bodyend="97"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>This speaker class uses eSpeak to synthesize specified text into speech.

The ``espeak`` command-line program must be installed in order to use
this implementation.  eSpeak is available on most platforms.
</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>dragonfly.engines.base.speaker_stdin.StdinSpeakerBase</label>
        <link refid="classdragonfly_1_1engines_1_1base_1_1speaker__stdin_1_1StdinSpeakerBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>dragonfly.engines.base.speaker_stdin.EspeakSpeaker</label>
        <link refid="classdragonfly_1_1engines_1_1base_1_1speaker__stdin_1_1EspeakSpeaker"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>object</label>
      </node>
      <node id="3">
        <label>dragonfly.engines.base.speaker.SpeakerBase</label>
        <link refid="classdragonfly_1_1engines_1_1base_1_1speaker_1_1SpeakerBase"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>string</label>
      </node>
      <node id="2">
        <label>dragonfly.engines.base.speaker_stdin.StdinSpeakerBase</label>
        <link refid="classdragonfly_1_1engines_1_1base_1_1speaker__stdin_1_1StdinSpeakerBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>dragonfly.engines.base.speaker_stdin.EspeakSpeaker</label>
        <link refid="classdragonfly_1_1engines_1_1base_1_1speaker__stdin_1_1EspeakSpeaker"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>_name</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>object</label>
      </node>
      <node id="3">
        <label>dragonfly.engines.base.speaker.SpeakerBase</label>
        <link refid="classdragonfly_1_1engines_1_1base_1_1speaker_1_1SpeakerBase"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>_name</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/speaker_stdin.py" line="77" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/speaker_stdin.py" bodystart="77" bodyend="104"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1engines_1_1base_1_1speaker__stdin_1_1EspeakSpeaker_1ae3bf0b254d9a6653527f69a39c1cba59" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::speaker_stdin::EspeakSpeaker</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1speaker_1_1SpeakerBase_1ae9de603758eb40d970959127f4cd8530" prot="private" virt="non-virtual"><scope>dragonfly::engines::base::speaker_stdin::EspeakSpeaker</scope><name>_log</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1speaker__stdin_1_1EspeakSpeaker_1ad2bdd1d8b415f61ebab3df9cfb8aed76" prot="private" virt="non-virtual"><scope>dragonfly::engines::base::speaker_stdin::EspeakSpeaker</scope><name>_name</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1speaker__stdin_1_1EspeakSpeaker_1a4b4283edf73bc95f6d735b678a2aeb66" prot="private" virt="non-virtual"><scope>dragonfly::engines::base::speaker_stdin::EspeakSpeaker</scope><name>_read_stdin_command</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1speaker_1_1SpeakerBase_1a5fe5bd4cb4f8ad2c7813e2062606501f" prot="private" virt="non-virtual"><scope>dragonfly::engines::base::speaker_stdin::EspeakSpeaker</scope><name>_register</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1speaker__stdin_1_1EspeakSpeaker_1a8dc5652d168ca273281d033571586b79" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::speaker_stdin::EspeakSpeaker</scope><name>is_available</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1speaker_1_1SpeakerBase_1a2da220dbf174a7938513e7e7a191a1a2" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::speaker_stdin::EspeakSpeaker</scope><name>name</name></member>
      <member refid="classdragonfly_1_1engines_1_1base_1_1speaker__stdin_1_1StdinSpeakerBase_1a1a3fcc6171aacecbd02983ecfb65d9d7" prot="public" virt="non-virtual"><scope>dragonfly::engines::base::speaker_stdin::EspeakSpeaker</scope><name>speak</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
