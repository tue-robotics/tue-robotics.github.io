<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1engines_1_1backend__natlink_1_1dictation__format_1_1StateFlags" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::engines::backend_natlink::dictation_format::StateFlags</compoundname>
    <basecompoundref refid="classdragonfly_1_1engines_1_1backend__natlink_1_1dictation__format_1_1FlagContainer" prot="public" virt="non-virtual">dragonfly.engines.backend_natlink.dictation_format.FlagContainer</basecompoundref>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1engines_1_1backend__natlink_1_1dictation__format_1_1StateFlags_1ae32b19bf3dfbfddebe61b122aee043e1" prot="public" static="yes" mutable="no">
        <type>tuple</type>
        <definition>tuple dragonfly.engines.backend_natlink.dictation_format.StateFlags::flag_names</definition>
        <argsstring></argsstring>
        <name>flag_names</name>
        <initializer>=  (
        # Flags related to spacing
        &quot;no_space_before&quot;,       # No space before next word
        &quot;two_spaces_before&quot;,     # Two spaces before next word
        &quot;no_space_between&quot;,      # No space before next word if it has no_space_between flag
        &quot;no_space_mode&quot;,         # No-spacing mode is active

        # Flags related to capitalization
        &quot;cap_next&quot;,              # Normally capitalize next word
        &quot;cap_next_force&quot;,        # Always capitalize next word
        &quot;lower_next&quot;,            # Lowercase next word
        &quot;upper_next&quot;,            # Uppercase next word
        &quot;cap_mode&quot;,              # Capitalization mode is active
        &quot;lower_mode&quot;,            # Lowercase mode is active
        &quot;upper_mode&quot;,            # Uppercase mode is active

        # Miscellaneous flags
        &quot;prev_ended_in_period&quot;,  # Previous word ended in period
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_natlink/dictation_format.py" line="161" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_natlink/dictation_format.py" bodystart="161" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>    Container for keeping state for inter-word formatting.

    The flags defined by this class are used by Dragonfly to store
    formatting state between words as a formatter consumes
    consecutive words.</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>dragonfly.engines.backend_natlink.dictation_format.FlagContainer</label>
        <link refid="classdragonfly_1_1engines_1_1backend__natlink_1_1dictation__format_1_1FlagContainer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>dragonfly.engines.backend_natlink.dictation_format.StateFlags</label>
        <link refid="classdragonfly_1_1engines_1_1backend__natlink_1_1dictation__format_1_1StateFlags"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>dragonfly.engines.backend_natlink.dictation_format.FlagContainer</label>
        <link refid="classdragonfly_1_1engines_1_1backend__natlink_1_1dictation__format_1_1FlagContainer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>dragonfly.engines.backend_natlink.dictation_format.StateFlags</label>
        <link refid="classdragonfly_1_1engines_1_1backend__natlink_1_1dictation__format_1_1StateFlags"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_natlink/dictation_format.py" line="150" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_natlink/dictation_format.py" bodystart="150" bodyend="184"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1engines_1_1backend__natlink_1_1dictation__format_1_1FlagContainer_1a054ef4df5af9b39de819a86c4fdc2230" prot="public" virt="non-virtual"><scope>dragonfly::engines::backend_natlink::dictation_format::StateFlags</scope><name>__getattr__</name></member>
      <member refid="classdragonfly_1_1engines_1_1backend__natlink_1_1dictation__format_1_1FlagContainer_1a08586244afd9a29193c6228c4915551a" prot="public" virt="non-virtual"><scope>dragonfly::engines::backend_natlink::dictation_format::StateFlags</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1engines_1_1backend__natlink_1_1dictation__format_1_1FlagContainer_1a190ca0ffbfdfd7188fc4e55ea4740ce2" prot="public" virt="non-virtual"><scope>dragonfly::engines::backend_natlink::dictation_format::StateFlags</scope><name>__repr__</name></member>
      <member refid="classdragonfly_1_1engines_1_1backend__natlink_1_1dictation__format_1_1FlagContainer_1a7299a29728453642c57c107a98505414" prot="public" virt="non-virtual"><scope>dragonfly::engines::backend_natlink::dictation_format::StateFlags</scope><name>__setattr__</name></member>
      <member refid="classdragonfly_1_1engines_1_1backend__natlink_1_1dictation__format_1_1FlagContainer_1a49900eed49cd0c851ab060113089e80f" prot="public" virt="non-virtual"><scope>dragonfly::engines::backend_natlink::dictation_format::StateFlags</scope><name>__unicode__</name></member>
      <member refid="classdragonfly_1_1engines_1_1backend__natlink_1_1dictation__format_1_1FlagContainer_1a1607945b4f967d8280b296314c498a84" prot="private" virt="non-virtual"><scope>dragonfly::engines::backend_natlink::dictation_format::StateFlags</scope><name>_flags_true</name></member>
      <member refid="classdragonfly_1_1engines_1_1backend__natlink_1_1dictation__format_1_1FlagContainer_1ad3158fdff147ce776c5d8db6e5bf24b1" prot="public" virt="non-virtual"><scope>dragonfly::engines::backend_natlink::dictation_format::StateFlags</scope><name>clone</name></member>
      <member refid="classdragonfly_1_1engines_1_1backend__natlink_1_1dictation__format_1_1StateFlags_1ae32b19bf3dfbfddebe61b122aee043e1" prot="public" virt="non-virtual"><scope>dragonfly::engines::backend_natlink::dictation_format::StateFlags</scope><name>flag_names</name></member>
      <member refid="classdragonfly_1_1engines_1_1backend__natlink_1_1dictation__format_1_1FlagContainer_1a3072f30265c7af2a3f667968d9614d3f" prot="public" virt="non-virtual"><scope>dragonfly::engines::backend_natlink::dictation_format::StateFlags</scope><name>flags_string</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
