<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1actions_1_1action__waitwindow_1_1WaitWindow" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::actions::action_waitwindow::WaitWindow</compoundname>
    <basecompoundref refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase" prot="public" virt="non-virtual">dragonfly.actions.action_base.ActionBase</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1actions_1_1action__waitwindow_1_1WaitWindow_1a2707865126092565b6349de757f49120" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.actions.action_waitwindow.WaitWindow::_executable</definition>
        <argsstring></argsstring>
        <name>_executable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_waitwindow.py" line="75" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_waitwindow.py" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1actions_1_1action__waitwindow_1_1WaitWindow_1a9f71c3e831d9a81e4abe07c7a2890dad" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.actions.action_waitwindow.WaitWindow::_match_functions</definition>
        <argsstring></argsstring>
        <name>_match_functions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_waitwindow.py" line="64" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_waitwindow.py" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1actions_1_1action__waitwindow_1_1WaitWindow_1a7e91094b11c8a053ed6863f7bfd307f9" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.actions.action_waitwindow.WaitWindow::_str</definition>
        <argsstring></argsstring>
        <name>_str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_waitwindow.py" line="84" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_waitwindow.py" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1actions_1_1action__waitwindow_1_1WaitWindow_1af3b241614209a60916fc7da34437cd06" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.actions.action_waitwindow.WaitWindow::_timeout</definition>
        <argsstring></argsstring>
        <name>_timeout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_waitwindow.py" line="81" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_waitwindow.py" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdragonfly_1_1actions_1_1action__waitwindow_1_1WaitWindow_1a05fbabd9857e8683d443529f72b9899d" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.actions.action_waitwindow.WaitWindow::_title</definition>
        <argsstring></argsstring>
        <name>_title</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_waitwindow.py" line="68" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_waitwindow.py" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1actions_1_1action__waitwindow_1_1WaitWindow_1aa58781f9392e39400b53e7b7aa0fe80e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.actions.action_waitwindow.WaitWindow.__init__</definition>
        <argsstring>(self, title=None, executable=None, timeout=15)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>title</type>
          <defname>title</defname>
          <defval>None</defval>
        </param>
        <param>
          <type>executable</type>
          <defname>executable</defname>
          <defval>None</defval>
        </param>
        <param>
          <type>timeout</type>
          <defname>timeout</defname>
          <defval>15</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_waitwindow.py" line="63" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_waitwindow.py" bodystart="63" bodyend="86"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdragonfly_1_1actions_1_1action__waitwindow_1_1WaitWindow_1adfd2e3db45f395bfa32fb827b60833c2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.actions.action_waitwindow.WaitWindow._execute</definition>
        <argsstring>(self, data=None)</argsstring>
        <name>_execute</name>
        <reimplements refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a180101e50972f99fca9ca74009ce175f">_execute</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>data</type>
          <defname>data</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Virtual method. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_waitwindow.py" line="87" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_waitwindow.py" bodystart="87" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1actions_1_1action__waitwindow_1_1WaitWindow_1a51bde39ba43c9f40f598fbaaa2b1be90" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.actions.action_waitwindow.WaitWindow._match_executable</definition>
        <argsstring>(self, foreground)</argsstring>
        <name>_match_executable</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>foreground</type>
          <defname>foreground</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_waitwindow.py" line="111" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_waitwindow.py" bodystart="111" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1actions_1_1action__waitwindow_1_1WaitWindow_1ae20703d5af7ed97624b9d80789ac8637" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.actions.action_waitwindow.WaitWindow._match_title</definition>
        <argsstring>(self, foreground)</argsstring>
        <name>_match_title</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>foreground</type>
          <defname>foreground</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_waitwindow.py" line="103" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_waitwindow.py" bodystart="103" bodyend="110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>    Wait for a specific window context action.

    Constructor arguments:
     - *title* (*str*) --
       part of the window title: not case sensitive
     - *executable* (*str*) --
       part of the file name of the executable; not case sensitive
     - *timeout* (*int* or *float*) --
       the maximum number of seconds to wait for the correct
       context, after which an :class:`ActionError` will
       be raised.

    When this action is executed, it waits until the correct window
    context is present.  This window context is specified by the
    desired window title of the foreground window and/or the
    executable name of the foreground application.  These are
    specified using the constructor arguments listed above.  The
    substring search used is *not* case sensitive.

    If the correct window context is not found within *timeout*
    seconds, then this action will raise an :class:`ActionError` to
    indicate the timeout.</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>object</label>
      </node>
      <node id="2">
        <label>dragonfly.actions.action_base.ActionBase</label>
        <link refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>dragonfly.actions.action_waitwindow.WaitWindow</label>
        <link refid="classdragonfly_1_1actions_1_1action__waitwindow_1_1WaitWindow"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>object</label>
      </node>
      <node id="2">
        <label>dragonfly.actions.action_base.ActionBase</label>
        <link refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>dragonfly.actions.action_waitwindow.WaitWindow</label>
        <link refid="classdragonfly_1_1actions_1_1action__waitwindow_1_1WaitWindow"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_waitwindow.py" line="36" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/actions/action_waitwindow.py" bodystart="36" bodyend="118"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a1dfe8e16c1e8963f72c8cb04ec367e9f" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_waitwindow::WaitWindow</scope><name>__add__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a444ecf185c7836c8be0cf2e166a5f45a" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_waitwindow::WaitWindow</scope><name>__iadd__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a39afe0cb63ff97da799bd1fcc7286395" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_waitwindow::WaitWindow</scope><name>__imul__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__waitwindow_1_1WaitWindow_1aa58781f9392e39400b53e7b7aa0fe80e" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_waitwindow::WaitWindow</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a0afc12f5eb003b59bf4b11d3928321a2" prot="public" virt="non-virtual" ambiguityscope="dragonfly::actions::action_base::ActionBase."><scope>dragonfly::actions::action_waitwindow::WaitWindow</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a043986deb9acb1306f393f1a5cde6632" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_waitwindow::WaitWindow</scope><name>__ior__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1aa71fbd62af7c640fc65943c76cc09563" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_waitwindow::WaitWindow</scope><name>__mul__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1aa7d635f74abfc39b412c4d8f247f1fd0" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_waitwindow::WaitWindow</scope><name>__or__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a4ceb796f69cac0c4f601ce5916f5c91c" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_waitwindow::WaitWindow</scope><name>__repr__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a54a429d1d2bd048279e57ba5aaea2449" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_waitwindow::WaitWindow</scope><name>__unicode__</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__waitwindow_1_1WaitWindow_1a2707865126092565b6349de757f49120" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_waitwindow::WaitWindow</scope><name>_executable</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__waitwindow_1_1WaitWindow_1adfd2e3db45f395bfa32fb827b60833c2" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_waitwindow::WaitWindow</scope><name>_execute</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a3861efea158692698e3a4f9d79ec7395" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_waitwindow::WaitWindow</scope><name>_log</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a842c601698c9eb62bb03ad937afe9aa6" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_waitwindow::WaitWindow</scope><name>_log_exec</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a873179afc5fe4521c177e121cc6cc9ae" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_waitwindow::WaitWindow</scope><name>_log_init</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__waitwindow_1_1WaitWindow_1a51bde39ba43c9f40f598fbaaa2b1be90" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_waitwindow::WaitWindow</scope><name>_match_executable</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__waitwindow_1_1WaitWindow_1a9f71c3e831d9a81e4abe07c7a2890dad" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_waitwindow::WaitWindow</scope><name>_match_functions</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__waitwindow_1_1WaitWindow_1ae20703d5af7ed97624b9d80789ac8637" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_waitwindow::WaitWindow</scope><name>_match_title</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__waitwindow_1_1WaitWindow_1a7e91094b11c8a053ed6863f7bfd307f9" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_waitwindow::WaitWindow</scope><name>_str</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__waitwindow_1_1WaitWindow_1af3b241614209a60916fc7da34437cd06" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_waitwindow::WaitWindow</scope><name>_timeout</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__waitwindow_1_1WaitWindow_1a05fbabd9857e8683d443529f72b9899d" prot="private" virt="non-virtual"><scope>dragonfly::actions::action_waitwindow::WaitWindow</scope><name>_title</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a6d193fe1211e618673e4f4cc06ac623b" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_waitwindow::WaitWindow</scope><name>bind</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a3454ac5c9ab40d43bc64af73157a89df" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_waitwindow::WaitWindow</scope><name>copy_bind</name></member>
      <member refid="classdragonfly_1_1actions_1_1action__base_1_1ActionBase_1a86ef0362bdcfbca96ae7f69df40b43f3" prot="public" virt="non-virtual"><scope>dragonfly::actions::action_waitwindow::WaitWindow</scope><name>execute</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
