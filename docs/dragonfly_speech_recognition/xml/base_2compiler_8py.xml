<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="base_2compiler_8py" kind="file" language="Python">
    <compoundname>base/compiler.py</compoundname>
    <innerclass refid="classdragonfly_1_1engines_1_1base_1_1compiler_1_1CompilerBase" prot="public">dragonfly::engines::base::compiler::CompilerBase</innerclass>
    <innerclass refid="classdragonfly_1_1engines_1_1base_1_1compiler_1_1CompilerError" prot="public">dragonfly::engines::base::compiler::CompilerError</innerclass>
    <innernamespace refid="namespacedragonfly_1_1engines_1_1base_1_1compiler">dragonfly::engines::base::compiler</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacedragonfly_1_1engines_1_1base_1_1compiler" refkind="compound"><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Dragonfly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(c)<sp/>Copyright<sp/>2007,<sp/>2008<sp/>by<sp/>Christo<sp/>Butcher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Licensed<sp/>under<sp/>the<sp/>LGPL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Dragonfly<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Dragonfly<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>License<sp/>along<sp/>with<sp/>Dragonfly.<sp/><sp/>If<sp/>not,<sp/>see</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>implements<sp/>the<sp/>compiler<sp/>base<sp/>class.</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logging</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1grammar_1_1elements" kindref="compound">dragonfly.grammar.elements</ref><sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>elements_</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classdragonfly_1_1engines_1_1base_1_1compiler_1_1CompilerError" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1engines_1_1base_1_1compiler_1_1CompilerError" kindref="compound">CompilerError</ref>(Exception):</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classdragonfly_1_1engines_1_1base_1_1compiler_1_1CompilerBase" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1engines_1_1base_1_1compiler_1_1CompilerBase" kindref="compound">CompilerBase</ref>(object):</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classdragonfly_1_1engines_1_1base_1_1compiler_1_1CompilerBase_1a4f665cceb505a48748d11fd67328a2d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_log<sp/>=<sp/>logging.getLogger(</highlight><highlight class="stringliteral">&quot;engine.compiler&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classdragonfly_1_1engines_1_1base_1_1compiler_1_1CompilerBase_1a0a40fed1bd06547354aab506b36eec72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>element_compilers<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elements_.Sequence,<sp/><sp/><sp/><sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>s,e,*a,**k:<sp/>s._compile_sequence(e,*a,**k)),</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elements_.Alternative,<sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>s,e,*a,**k:<sp/>s._compile_alternative(e,*a,**k)),</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elements_.Optional,<sp/><sp/><sp/><sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>s,e,*a,**k:<sp/>s._compile_optional(e,*a,**k)),</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elements_.Literal,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>s,e,*a,**k:<sp/>s._compile_literal(e,*a,**k)),</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elements_.RuleRef,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>s,e,*a,**k:<sp/>s._compile_rule_ref(e,*a,**k)),</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elements_.ListRef,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>s,e,*a,**k:<sp/>s._compile_list_ref(e,*a,**k)),</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elements_.Dictation,<sp/><sp/><sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>s,e,*a,**k:<sp/>s._compile_dictation(e,*a,**k)),</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elements_.Impossible,<sp/><sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>s,e,*a,**k:<sp/>s._compile_impossible(e,*a,**k)),</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elements_.Empty,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>s,e,*a,**k:<sp/>s._compile_empty(e,*a,**k)),</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classdragonfly_1_1engines_1_1base_1_1compiler_1_1CompilerBase_1a7fdfc6b076baaa76ccfb2c4aadff8ce4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1engines_1_1base_1_1compiler_1_1CompilerBase_1a7fdfc6b076baaa76ccfb2c4aadff8ce4" kindref="member">__repr__</ref>(self):</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;%s()&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.__class__.__name__</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Methods<sp/>for<sp/>compiling<sp/>grammars.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classdragonfly_1_1engines_1_1base_1_1compiler_1_1CompilerBase_1a0bf7cd23d6906184b5c09416711733e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1engines_1_1base_1_1compiler_1_1CompilerBase_1a0bf7cd23d6906184b5c09416711733e8" kindref="member">compile_grammar</ref>(self,<sp/>grammar,<sp/>*args,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;Compiler<sp/>%s<sp/>not<sp/>implemented.&quot;</highlight><highlight class="normal"><sp/>%<sp/>self)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Methods<sp/>for<sp/>compiling<sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classdragonfly_1_1engines_1_1base_1_1compiler_1_1CompilerBase_1a3e8b8748b6ccc125198031970c8c6683" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1engines_1_1base_1_1compiler_1_1CompilerBase_1a3e8b8748b6ccc125198031970c8c6683" kindref="member">compile_element</ref>(self,<sp/>element,<sp/>*args,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Look<sp/>for<sp/>a<sp/>compiler<sp/>method<sp/>to<sp/>handle<sp/>the<sp/>given<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>element_type,<sp/>compiler<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1engines_1_1base_1_1compiler_1_1CompilerBase_1a0a40fed1bd06547354aab506b36eec72" kindref="member">element_compilers</ref>:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(element,<sp/>element_type):</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compiler(self,<sp/>element,<sp/>*args,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Didn&apos;t<sp/>find<sp/>a<sp/>compiler<sp/>method<sp/>for<sp/>this<sp/>element<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;Compiler<sp/>%s<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>element<sp/>type<sp/>%s.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>(self,<sp/>element))</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classdragonfly_1_1engines_1_1base_1_1compiler_1_1CompilerBase_1abd3297dc115912fbd2d0784fec989ec3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1engines_1_1base_1_1compiler_1_1CompilerBase_1abd3297dc115912fbd2d0784fec989ec3" kindref="member">_compile_unknown_element</ref>(self,<sp/>element,<sp/>*args,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;Compiler<sp/>%s<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>element<sp/>type<sp/>%s.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>(self,<sp/>element))</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="classdragonfly_1_1engines_1_1base_1_1compiler_1_1CompilerBase_1acf115730b3988a9cd49c7c682154fce5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_compile_sequence<sp/><sp/><sp/><sp/><sp/>=<sp/>_compile_unknown_element</highlight></codeline>
<codeline lineno="88" refid="classdragonfly_1_1engines_1_1base_1_1compiler_1_1CompilerBase_1a93e9e7fcab4cd4faad95918902590d67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_compile_alternative<sp/><sp/>=<sp/>_compile_unknown_element</highlight></codeline>
<codeline lineno="89" refid="classdragonfly_1_1engines_1_1base_1_1compiler_1_1CompilerBase_1acfaeb9531d3e389dc935525f57695c1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_compile_optional<sp/><sp/><sp/><sp/><sp/>=<sp/>_compile_unknown_element</highlight></codeline>
<codeline lineno="90" refid="classdragonfly_1_1engines_1_1base_1_1compiler_1_1CompilerBase_1a8b049993b48d6a5202689e0156efadbf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_compile_literal<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>_compile_unknown_element</highlight></codeline>
<codeline lineno="91" refid="classdragonfly_1_1engines_1_1base_1_1compiler_1_1CompilerBase_1a127a40b9cefb9a0013745a1c26d0b82e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_compile_rule_ref<sp/><sp/><sp/><sp/><sp/>=<sp/>_compile_unknown_element</highlight></codeline>
<codeline lineno="92" refid="classdragonfly_1_1engines_1_1base_1_1compiler_1_1CompilerBase_1abd5f77e4e8ce421f83fe45743779a37b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_compile_list_ref<sp/><sp/><sp/><sp/><sp/>=<sp/>_compile_unknown_element</highlight></codeline>
<codeline lineno="93" refid="classdragonfly_1_1engines_1_1base_1_1compiler_1_1CompilerBase_1a508f463cc88e33ce2305d5fdab5451a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_compile_dictation<sp/><sp/><sp/><sp/>=<sp/>_compile_unknown_element</highlight></codeline>
<codeline lineno="94" refid="classdragonfly_1_1engines_1_1base_1_1compiler_1_1CompilerBase_1ae7e99da2ea3f3ce0232780015f807e7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_compile_impossible<sp/><sp/><sp/>=<sp/>_compile_unknown_element</highlight></codeline>
<codeline lineno="95" refid="classdragonfly_1_1engines_1_1base_1_1compiler_1_1CompilerBase_1adbc5cf6e70a3eb0998f1e76645da1dd1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_compile_empty<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>_compile_unknown_element</highlight></codeline>
    </programlisting>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/base/compiler.py"/>
  </compounddef>
</doxygen>
