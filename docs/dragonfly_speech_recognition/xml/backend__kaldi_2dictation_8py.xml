<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="backend__kaldi_2dictation_8py" kind="file" language="Python">
    <compoundname>backend_kaldi/dictation.py</compoundname>
    <innerclass refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1__UserDictationSequenceRule" prot="public">dragonfly::engines::backend_kaldi::dictation::_UserDictationSequenceRule</innerclass>
    <innerclass refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1AlternativeDictation" prot="public">dragonfly::engines::backend_kaldi::dictation::AlternativeDictation</innerclass>
    <innerclass refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1DefaultDictation" prot="public">dragonfly::engines::backend_kaldi::dictation::DefaultDictation</innerclass>
    <innerclass refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1UserDictation" prot="public">dragonfly::engines::backend_kaldi::dictation::UserDictation</innerclass>
    <innernamespace refid="namespacedragonfly_1_1engines_1_1backend__kaldi_1_1dictation">dragonfly::engines::backend_kaldi::dictation</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacedragonfly_1_1engines_1_1backend__kaldi_1_1dictation" refkind="compound"><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Dragonfly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(c)<sp/>Copyright<sp/>2007,<sp/>2008<sp/>by<sp/>Christo<sp/>Butcher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Licensed<sp/>under<sp/>the<sp/>LGPL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Dragonfly<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Dragonfly<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>License<sp/>along<sp/>with<sp/>Dragonfly.<sp/><sp/>If<sp/>not,<sp/>see</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral">Dictation<sp/>container<sp/>for<sp/>the<sp/>Kaldi<sp/>engine.</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>itertools</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1grammar_1_1elements__basic" kindref="compound">dragonfly.grammar.elements_basic</ref><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Dictation<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>BaseDictation</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1grammar_1_1elements__basic" kindref="compound">dragonfly.grammar.elements_basic</ref><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>(RuleRef,<sp/>Alternative,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ListRef,<sp/>DictListRef,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Repetition)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1grammar_1_1list" kindref="compound">dragonfly.grammar.list</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>List,<sp/>DictList</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedragonfly_1_1grammar_1_1rule__compound" kindref="compound">dragonfly.grammar.rule_compound</ref><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>CompoundRule</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">#<sp/>User<sp/>dictation<sp/>class<sp/>--<sp/>elements<sp/>capable<sp/>of<sp/>also<sp/>recognizing<sp/>user<sp/>words.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1UserDictation" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1UserDictation" kindref="compound">UserDictation</ref>(<ref refid="classdragonfly_1_1grammar_1_1elements__basic_1_1RuleRef" kindref="compound">RuleRef</ref>):</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Imitates<sp/>the<sp/>standard<sp/>Dictation<sp/>element<sp/>class,<sp/>using<sp/>individual<sp/>chunks</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>Dictation<sp/>or<sp/>the<sp/>user&apos;s<sp/>added<sp/>terminology.</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Partially<sp/>copied<sp/>from<sp/>BaseDictation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1UserDictation_1acdfe70ca2def791ee1d2ff32d09cdf4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1UserDictation_1acdfe70ca2def791ee1d2ff32d09cdf4e" kindref="member">__init__</ref>(self,<sp/>name=None,<sp/>format=True,<sp/>default=None):</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RuleRef.__init__(self,<sp/>rule=_user_dictation_sequence_rule,<sp/>name=name,<sp/>default=default)</highlight></codeline>
<codeline lineno="48" refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1UserDictation_1ab764f4d873e5a08c0d5944d96487e280" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1UserDictation_1ab764f4d873e5a08c0d5944d96487e280" kindref="member">_format_words</ref><sp/>=<sp/>format</highlight></codeline>
<codeline lineno="49" refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1UserDictation_1a094727599b8221db5207d357c317c7ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1UserDictation_1a094727599b8221db5207d357c317c7ea" kindref="member">_string_methods</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Use<sp/>BaseDictation<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1UserDictation_1abfa91861bfdffb199c3a0a11ce06aed9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>__repr__<sp/>=<sp/>BaseDictation.__repr__</highlight></codeline>
<codeline lineno="53" refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1UserDictation_1a976ea5a2a267e17f70a1e5b41806b8b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>__getattr__<sp/>=<sp/>BaseDictation.__getattr__</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Partially<sp/>copied<sp/>from<sp/>BaseDictation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1UserDictation_1a7e95b1c6ad26e4d4a4f9975b4880f3a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1UserDictation_1a7e95b1c6ad26e4d4a4f9975b4880f3a0" kindref="member">value</ref>(self,<sp/>node):</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>words<sp/>=<sp/>node.children[0].<ref refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1UserDictation_1a7e95b1c6ad26e4d4a4f9975b4880f3a0" kindref="member">value</ref>()</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1UserDictation_1ab764f4d873e5a08c0d5944d96487e280" kindref="member">_format_words</ref>:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node.engine.DictationContainer(words,<sp/>self.<ref refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1UserDictation_1a094727599b8221db5207d357c317c7ea" kindref="member">_string_methods</ref>)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>words</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="namespacedragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1a2015f9c7f124aa66dc8bff1258fdad01" refkind="member"><highlight class="normal">user_dictation_list<sp/>=<sp/><ref refid="classdragonfly_1_1grammar_1_1list_1_1List" kindref="compound">List</ref>(</highlight><highlight class="stringliteral">&apos;__kaldi_user_dictation_list&apos;</highlight><highlight class="normal">,<sp/>[])</highlight></codeline>
<codeline lineno="64" refid="namespacedragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1abeaf734904befff02bd6b13f9451502b" refkind="member"><highlight class="normal">user_dictation_dictlist<sp/>=<sp/><ref refid="classdragonfly_1_1grammar_1_1list_1_1DictList" kindref="compound">DictList</ref>(</highlight><highlight class="stringliteral">&apos;__kaldi_user_dictation_dictlist&apos;</highlight><highlight class="normal">,<sp/>{})</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1__UserDictationSequenceRule" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1__UserDictationSequenceRule" kindref="compound">_UserDictationSequenceRule</ref>(<ref refid="classdragonfly_1_1grammar_1_1rule__compound_1_1CompoundRule" kindref="compound">CompoundRule</ref>):</highlight></codeline>
<codeline lineno="67" refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1__UserDictationSequenceRule_1a6d72d657653b252016764e704206c484" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>spec<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&lt;__kaldi_user_dictation_sequence&gt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1__UserDictationSequenceRule_1ad38b0882388784259c027bc147c5856d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>extras<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Repetition" kindref="compound">Repetition</ref>(<ref refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Alternative" kindref="compound">Alternative</ref>([</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseDictation(format=</highlight><highlight class="keyword">False</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ListRef" kindref="compound">ListRef</ref>(</highlight><highlight class="stringliteral">&apos;__kaldi_user_dictation_listref&apos;</highlight><highlight class="normal">,<sp/>user_dictation_list),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classdragonfly_1_1grammar_1_1elements__basic_1_1DictListRef" kindref="compound">DictListRef</ref>(</highlight><highlight class="stringliteral">&apos;__kaldi_user_dictation_dictlistref&apos;</highlight><highlight class="normal">,<sp/>user_dictation_dictlist),</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]),<sp/>min=1,<sp/>max=16,<sp/>name=</highlight><highlight class="stringliteral">&quot;__kaldi_user_dictation_sequence&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="75" refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1__UserDictationSequenceRule_1a3d0b80b8800481c67587f8d6ee8e6b0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>exported<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1__UserDictationSequenceRule_1a658fa6d7aa5548bf2d20d7341fb29c82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1__UserDictationSequenceRule_1a658fa6d7aa5548bf2d20d7341fb29c82" kindref="member">value</ref>(self,<sp/>node):</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>method<sp/>returns<sp/>the<sp/>value<sp/>of<sp/>the<sp/>root<sp/>Repetition:<sp/>a<sp/>list<sp/>of<sp/>values<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Alternatives,<sp/>each<sp/>(dictation<sp/>or<sp/>listref<sp/>or<sp/>dictlistref)<sp/>being<sp/>a<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunks<sp/>=<sp/>node.children[0].<ref refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1__UserDictationSequenceRule_1a658fa6d7aa5548bf2d20d7341fb29c82" kindref="member">value</ref>()</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Make<sp/>sure<sp/>each<sp/>chunk<sp/>is<sp/>a<sp/>list<sp/>(of<sp/>strings),<sp/>then<sp/>concat<sp/>them<sp/>together.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list(itertools.chain.from_iterable([chunk]<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(chunk,<sp/>list)<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>chunk<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>chunk<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>chunks))</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="namespacedragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1a542c6c57b3f60732d44ee727c7c420da" refkind="member"><highlight class="normal">_user_dictation_sequence_rule<sp/>=<sp/><ref refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1__UserDictationSequenceRule" kindref="compound">_UserDictationSequenceRule</ref>()</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">#---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Alternative<sp/>dictation<sp/>classes<sp/>--<sp/>elements<sp/>capable<sp/>of<sp/>default<sp/>or<sp/>alternative<sp/>dictation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1AlternativeDictation" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1AlternativeDictation" kindref="compound">AlternativeDictation</ref>(BaseDictation):</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1AlternativeDictation_1a4ab25fdabed5f7415176c27769d3af5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>alternative_default<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1AlternativeDictation_1acd60b410b8499f8ba9bff6e2712e2e61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1AlternativeDictation_1acd60b410b8499f8ba9bff6e2712e2e61" kindref="member">__init__</ref>(self,<sp/>*args,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="94" refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1AlternativeDictation_1abc3a3cee09f8984768a563439c35eeac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1AlternativeDictation_1abc3a3cee09f8984768a563439c35eeac" kindref="member">alternative</ref><sp/>=<sp/>kwargs.pop(</highlight><highlight class="stringliteral">&apos;alternative&apos;</highlight><highlight class="normal">,<sp/>self.<ref refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1AlternativeDictation_1a4ab25fdabed5f7415176c27769d3af5f" kindref="member">alternative_default</ref>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseDictation.__init__(self,<sp/>*args,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1DefaultDictation" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1DefaultDictation" kindref="compound">DefaultDictation</ref>(BaseDictation):</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1DefaultDictation_1a56667f4a336231118b86d9cab5d11d40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>alternative_default<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1DefaultDictation_1a6e27d522f4ee4564d6ac8b03f156f02e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1DefaultDictation_1a6e27d522f4ee4564d6ac8b03f156f02e" kindref="member">__init__</ref>(self,<sp/>*args,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="102" refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1DefaultDictation_1a3d8321de1170d90edcce7b6191d4a0a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1DefaultDictation_1a3d8321de1170d90edcce7b6191d4a0a3" kindref="member">alternative</ref><sp/>=<sp/>kwargs.pop(</highlight><highlight class="stringliteral">&apos;alternative&apos;</highlight><highlight class="normal">,<sp/>self.<ref refid="classdragonfly_1_1engines_1_1backend__kaldi_1_1dictation_1_1DefaultDictation_1a56667f4a336231118b86d9cab5d11d40" kindref="member">alternative_default</ref>)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseDictation.__init__(self,<sp/>*args,<sp/>**kwargs)</highlight></codeline>
    </programlisting>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_kaldi/dictation.py"/>
  </compounddef>
</doxygen>
