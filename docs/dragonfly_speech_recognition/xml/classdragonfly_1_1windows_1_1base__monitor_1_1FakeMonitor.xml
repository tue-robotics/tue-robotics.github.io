<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1windows_1_1base__monitor_1_1FakeMonitor" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::windows::base_monitor::FakeMonitor</compoundname>
    <basecompoundref refid="classdragonfly_1_1windows_1_1base__monitor_1_1BaseMonitor" prot="public" virt="non-virtual">dragonfly.windows.base_monitor.BaseMonitor</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1base__monitor_1_1FakeMonitor_1ad1a3d29c58f0e7c263b65aa5401650bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.base_monitor.FakeMonitor.get_all_monitors</definition>
        <argsstring>(cls)</argsstring>
        <name>get_all_monitors</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__monitor_1_1BaseMonitor_1a7ffdec31851696df3ac7cd1a5715af0a">get_all_monitors</reimplements>
        <param>
          <type>cls</type>
          <defname>cls</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Get a list containing each connected monitor.

:rtype: list
:returns: monitors
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/base_monitor.py" line="137" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/base_monitor.py" bodystart="137" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1windows_1_1base__monitor_1_1FakeMonitor_1a8a1aeeb76e03f543e2ab8353c3d42f9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.windows.base_monitor.FakeMonitor.name</definition>
        <argsstring>(self)</argsstring>
        <name>name</name>
        <reimplements refid="classdragonfly_1_1windows_1_1base__monitor_1_1BaseMonitor_1a038a34233a8af4fa7b5f7046e750f15e">name</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>The name of this monitor.

:rtype: str
:returns: monitor name
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/base_monitor.py" line="141" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/base_monitor.py" bodystart="141" bodyend="149"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>The monitor class used on unsupported platforms.
</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>dragonfly.windows.base_monitor.BaseMonitor</label>
        <link refid="classdragonfly_1_1windows_1_1base__monitor_1_1BaseMonitor"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
      <node id="1">
        <label>dragonfly.windows.base_monitor.FakeMonitor</label>
        <link refid="classdragonfly_1_1windows_1_1base__monitor_1_1FakeMonitor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>dragonfly.windows.base_monitor.BaseMonitor</label>
        <link refid="classdragonfly_1_1windows_1_1base__monitor_1_1BaseMonitor"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
      <node id="1">
        <label>dragonfly.windows.base_monitor.FakeMonitor</label>
        <link refid="classdragonfly_1_1windows_1_1base__monitor_1_1FakeMonitor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/base_monitor.py" line="131" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/windows/base_monitor.py" bodystart="131" bodyend="149"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1windows_1_1base__monitor_1_1BaseMonitor_1adf3bc9ac98755896a6be554a167ce74e" prot="public" virt="non-virtual"><scope>dragonfly::windows::base_monitor::FakeMonitor</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__monitor_1_1BaseMonitor_1afd1c6a1188fe3a53cc3fbb4489f99c46" prot="public" virt="non-virtual"><scope>dragonfly::windows::base_monitor::FakeMonitor</scope><name>__repr__</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__monitor_1_1BaseMonitor_1ab91eb244ca8e4c746836085e492d7752" prot="private" virt="non-virtual"><scope>dragonfly::windows::base_monitor::FakeMonitor</scope><name>_handle</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__monitor_1_1BaseMonitor_1aadb5c3f9256800380dda6cdec123a762" prot="private" virt="non-virtual"><scope>dragonfly::windows::base_monitor::FakeMonitor</scope><name>_log</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__monitor_1_1BaseMonitor_1a40888851da6c75252ba690c7e2142a9f" prot="private" virt="non-virtual"><scope>dragonfly::windows::base_monitor::FakeMonitor</scope><name>_monitors_by_handle</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__monitor_1_1BaseMonitor_1aa13be21b7f04ef909b95efb60d472723" prot="private" virt="non-virtual"><scope>dragonfly::windows::base_monitor::FakeMonitor</scope><name>_rectangle</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__monitor_1_1BaseMonitor_1a70c02140ad1161a3e23c9c62632750e9" prot="private" virt="non-virtual"><scope>dragonfly::windows::base_monitor::FakeMonitor</scope><name>_set_handle</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__monitor_1_1BaseMonitor_1a9d0c0d0d48252a975a6ed526019c920d" prot="private" virt="non-virtual"><scope>dragonfly::windows::base_monitor::FakeMonitor</scope><name>_set_rectangle</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__monitor_1_1FakeMonitor_1ad1a3d29c58f0e7c263b65aa5401650bd" prot="public" virt="non-virtual"><scope>dragonfly::windows::base_monitor::FakeMonitor</scope><name>get_all_monitors</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__monitor_1_1BaseMonitor_1acf78160b30fe1eec8112966bd1646544" prot="public" virt="non-virtual"><scope>dragonfly::windows::base_monitor::FakeMonitor</scope><name>get_monitor</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__monitor_1_1BaseMonitor_1aa0ea849594e018769fcd47a0d7cf0099" prot="public" virt="non-virtual"><scope>dragonfly::windows::base_monitor::FakeMonitor</scope><name>handle</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__monitor_1_1BaseMonitor_1a3f3ee738b24a902966e24dd49131bfa0" prot="public" virt="non-virtual"><scope>dragonfly::windows::base_monitor::FakeMonitor</scope><name>is_primary</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__monitor_1_1FakeMonitor_1a8a1aeeb76e03f543e2ab8353c3d42f9a" prot="public" virt="non-virtual"><scope>dragonfly::windows::base_monitor::FakeMonitor</scope><name>name</name></member>
      <member refid="classdragonfly_1_1windows_1_1base__monitor_1_1BaseMonitor_1a30b7d5a9b3a39f3033ec079b60a0e211" prot="public" virt="non-virtual"><scope>dragonfly::windows::base_monitor::FakeMonitor</scope><name>rectangle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
