<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacedragonfly_1_1engines_1_1backend__sphinx_1_1training" kind="namespace" language="Python">
    <compoundname>dragonfly::engines::backend_sphinx::training</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacedragonfly_1_1engines_1_1backend__sphinx_1_1training_1ad87afb0d58be6d3b6435a9d10e78b8fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.backend_sphinx.training.write_training_data</definition>
        <argsstring>(config, frames, hypothesis)</argsstring>
        <name>write_training_data</name>
        <param>
          <type>config</type>
          <defname>config</defname>
        </param>
        <param>
          <type>frames</type>
          <defname>frames</defname>
        </param>
        <param>
          <type>hypothesis</type>
          <defname>hypothesis</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Write audio frames and the speech hypothesis to new files.

Audio frames for null hypotheses will not be recorded.

:raises: IOError | OSError
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/training.py" line="11" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/training.py" bodystart="11" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="namespacedragonfly_1_1engines_1_1backend__sphinx_1_1training_1a568c4f0754c6a0a7f09bc8579d27031e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.engines.backend_sphinx.training.write_transcript_files</definition>
        <argsstring>(config, fileids_path, transcriptions_path)</argsstring>
        <name>write_transcript_files</name>
        <param>
          <type>config</type>
          <defname>config</defname>
        </param>
        <param>
          <type>fileids_path</type>
          <defname>fileids_path</defname>
        </param>
        <param>
          <type>transcriptions_path</type>
          <defname>transcriptions_path</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Write .fileids and .transcriptions using the files in a directory.

:raises: IOError | OSError
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/training.py" line="47" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/training.py" bodystart="47" bodyend="92"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Utilities for training CMU Pocket Sphinx acoustic models.
</verbatim> </para>
    </detaileddescription>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/engines/backend_sphinx/training.py" line="1" column="1"/>
  </compounddef>
</doxygen>
