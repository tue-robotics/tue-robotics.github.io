<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1parser_1_1QuotedString" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::parser::QuotedString</compoundname>
    <basecompoundref refid="classdragonfly_1_1parser_1_1Alternative" prot="public" virt="non-virtual">dragonfly.parser.Alternative</basecompoundref>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1parser_1_1QuotedString_1a641b18fb998ab9ec724fd4cd5ca0fc12" prot="public" static="yes" mutable="no">
        <type>tuple</type>
        <definition>tuple dragonfly.parser.QuotedString::default_delimiters</definition>
        <argsstring></argsstring>
        <name>default_delimiters</name>
        <initializer>=  (
                          (&apos;&quot;&apos;, &apos;&quot;&apos;),
                          (&quot;&apos;&quot;, &quot;&apos;&quot;),
                         )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/parser.py" line="942" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/parser.py" bodystart="942" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1parser_1_1QuotedString_1a91297e1e776125971ee9d2ef67accbdb" prot="public" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.parser.QuotedString::delimiters</definition>
        <argsstring></argsstring>
        <name>delimiters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/parser.py" line="948" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/parser.py" bodystart="948" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1parser_1_1QuotedString_1a57a28e6ea8d201c7b8a44de090d490b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.parser.QuotedString.__init__</definition>
        <argsstring>(self, delimiters=default_delimiters, name=None)</argsstring>
        <name>__init__</name>
        <reimplements refid="classdragonfly_1_1parser_1_1Alternative_1ac8175d70497abe32777458aa15b935d3">__init__</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1parser_1_1QuotedString_1a91297e1e776125971ee9d2ef67accbdb" kindref="member">delimiters</ref></type>
          <defname>delimiters</defname>
          <defval><ref refid="classdragonfly_1_1parser_1_1QuotedString_1a641b18fb998ab9ec724fd4cd5ca0fc12" kindref="member">default_delimiters</ref></defval>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1parser_1_1ParserElementBase_1a7a4d0aead4bf527b6bcdd1073e6cf93b" kindref="member">name</ref></type>
          <defname>name</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/parser.py" line="947" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/parser.py" bodystart="947" bodyend="959"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1parser_1_1QuotedString_1a31b71b6e63948d81a92fb4ffdccae053" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.parser.QuotedString.value</definition>
        <argsstring>(self, node)</argsstring>
        <name>value</name>
        <reimplements refid="classdragonfly_1_1parser_1_1Alternative_1a618188f3ca3d5855c0ac411e58bbae15">value</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>node</type>
          <defname>node</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/parser.py" line="960" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/parser.py" bodystart="960" bodyend="965"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>    Parser element for quoted strings.

    Simple usage showing default delimiters:
    &gt;&gt;&gt; parser = Parser(QuotedString())
    &gt;&gt;&gt; parser.parse(&quot;&apos;&apos;&quot;)
    &apos;&apos;
    &gt;&gt;&gt; parser.parse(&quot;&apos;Hello world!&apos;&quot;)
    &apos;Hello world!&apos;
    &gt;&gt;&gt; parser.parse(&apos;&quot;Hello world!&quot;&apos;)
    &apos;Hello world!&apos;

    Special characters within the quoted string can be escaped.
    &gt;&gt;&gt; parser.parse(r&apos;&quot;Hello \&quot;world\&quot;!&quot;&apos;)  #doctest: +SKIP
    Note back to get these escaping examples to run using doctest
    they must include double escapes, which are obviously not required
    in actual code.
    &gt;&gt;&gt; parser.parse(r&apos;&quot;Hello \\&quot;world\\&quot;!&quot;&apos;)
    &apos;Hello &quot;world&quot;!&apos;
    &gt;&gt;&gt; print(parser.parse(r&apos;&quot;Hello \\\\ \\&quot;world\\&quot;!\\nGoodbye \\&apos;universe\\&apos;...&quot;&apos;))
    Hello \ &quot;world&quot;!
    Goodbye &apos;universe&apos;...

    This element supports asymmetric open-close delimiters:
    &gt;&gt;&gt; parser = Parser(QuotedString([(&quot;[[&quot;, &quot;]]&quot;)]))
    &gt;&gt;&gt; parser.parse(&quot;[[Hello world!]]&quot;)
    &apos;Hello world!&apos;
    &gt;&gt;&gt; parser.parse(&quot;[[Hello world!]] Goodbye.&quot;, must_finish=False)
    &apos;Hello world!&apos;</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>dragonfly.parser.ParserElementBase</label>
        <link refid="classdragonfly_1_1parser_1_1ParserElementBase"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>dragonfly.parser.QuotedString</label>
        <link refid="classdragonfly_1_1parser_1_1QuotedString"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>object</label>
      </node>
      <node id="2">
        <label>dragonfly.parser.Alternative</label>
        <link refid="classdragonfly_1_1parser_1_1Alternative"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>dragonfly.parser.ParserElementBase</label>
        <link refid="classdragonfly_1_1parser_1_1ParserElementBase"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>dragonfly.parser.QuotedString</label>
        <link refid="classdragonfly_1_1parser_1_1QuotedString"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>object</label>
      </node>
      <node id="2">
        <label>dragonfly.parser.Alternative</label>
        <link refid="classdragonfly_1_1parser_1_1Alternative"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/parser.py" line="908" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/parser.py" bodystart="908" bodyend="966"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1parser_1_1QuotedString_1a57a28e6ea8d201c7b8a44de090d490b2" prot="public" virt="non-virtual"><scope>dragonfly::parser::QuotedString</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1parser_1_1ParserElementBase_1aa1ff390bf5e884177e2202a93d3614a5" prot="public" virt="non-virtual" ambiguityscope="dragonfly::parser::ParserElementBase."><scope>dragonfly::parser::QuotedString</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1parser_1_1Alternative_1a136490f9e0c947a646d21738bcb54bd0" prot="public" virt="non-virtual"><scope>dragonfly::parser::QuotedString</scope><name>__repr__</name></member>
      <member refid="classdragonfly_1_1parser_1_1Alternative_1a5f5587d749f2c505588ef50a6814191b" prot="private" virt="non-virtual"><scope>dragonfly::parser::QuotedString</scope><name>_children</name></member>
      <member refid="classdragonfly_1_1parser_1_1Alternative_1a9df3a433495b5cafe6f29e0d02791b8f" prot="private" virt="non-virtual"><scope>dragonfly::parser::QuotedString</scope><name>_get_children</name></member>
      <member refid="classdragonfly_1_1parser_1_1ParserElementBase_1a109df787d791a869e1f276f8d9daace2" prot="private" virt="non-virtual"><scope>dragonfly::parser::QuotedString</scope><name>_name</name></member>
      <member refid="classdragonfly_1_1parser_1_1ParserElementBase_1a4b1466b45c10811c34e3a7c1ed57bac6" prot="private" virt="non-virtual"><scope>dragonfly::parser::QuotedString</scope><name>_str</name></member>
      <member refid="classdragonfly_1_1parser_1_1Alternative_1a636dbd41932652b7f7314e33fa6a5b98" prot="public" virt="non-virtual"><scope>dragonfly::parser::QuotedString</scope><name>child_list</name></member>
      <member refid="classdragonfly_1_1parser_1_1ParserElementBase_1af3eeea42ce234398557ba35ef366542c" prot="public" virt="non-virtual"><scope>dragonfly::parser::QuotedString</scope><name>children</name></member>
      <member refid="classdragonfly_1_1parser_1_1QuotedString_1a641b18fb998ab9ec724fd4cd5ca0fc12" prot="public" virt="non-virtual"><scope>dragonfly::parser::QuotedString</scope><name>default_delimiters</name></member>
      <member refid="classdragonfly_1_1parser_1_1QuotedString_1a91297e1e776125971ee9d2ef67accbdb" prot="public" virt="non-virtual"><scope>dragonfly::parser::QuotedString</scope><name>delimiters</name></member>
      <member refid="classdragonfly_1_1parser_1_1ParserElementBase_1a7a4d0aead4bf527b6bcdd1073e6cf93b" prot="public" virt="non-virtual"><scope>dragonfly::parser::QuotedString</scope><name>name</name></member>
      <member refid="classdragonfly_1_1parser_1_1Alternative_1a8dfa68eb0d93b63fd70db53c48b010f9" prot="public" virt="non-virtual"><scope>dragonfly::parser::QuotedString</scope><name>parse</name></member>
      <member refid="classdragonfly_1_1parser_1_1QuotedString_1a31b71b6e63948d81a92fb4ffdccae053" prot="public" virt="non-virtual"><scope>dragonfly::parser::QuotedString</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
