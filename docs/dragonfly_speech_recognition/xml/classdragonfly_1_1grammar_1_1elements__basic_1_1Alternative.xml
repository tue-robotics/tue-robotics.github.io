<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1grammar_1_1elements__basic_1_1Alternative" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::grammar::elements_basic::Alternative</compoundname>
    <basecompoundref refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase" prot="public" virt="non-virtual">dragonfly.grammar.elements_basic.ElementBase</basecompoundref>
    <derivedcompoundref refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Modifier" prot="public" virt="non-virtual">dragonfly.grammar.elements_basic.Modifier</derivedcompoundref>
    <derivedcompoundref refid="classdragonfly_1_1grammar_1_1elements__compound_1_1Choice" prot="public" virt="non-virtual">dragonfly.grammar.elements_compound.Choice</derivedcompoundref>
    <derivedcompoundref refid="classdragonfly_1_1grammar_1_1elements__compound_1_1Compound" prot="public" virt="non-virtual">dragonfly.grammar.elements_compound.Compound</derivedcompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1grammar_1_1elements__basic_1_1Alternative_1a437c38560300c589522540ba22e3f8bb" prot="private" static="no" mutable="no">
        <type></type>
        <definition>dragonfly.grammar.elements_basic.Alternative::_children</definition>
        <argsstring></argsstring>
        <name>_children</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" line="489" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" bodystart="489" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1elements__basic_1_1Alternative_1a9e25bbe284f390caccca1ae9aaef4f9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.elements_basic.Alternative.__init__</definition>
        <argsstring>(self, children=(), name=None, default=None)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1a474483e51e223868deafb59b6cc9f226" kindref="member">children</ref></type>
          <defname>children</defname>
          <defval>()</defval>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1a5bd1a9be70f09c0e74b86a888b813aad" kindref="member">name</ref></type>
          <defname>name</defname>
          <defval>None</defval>
        </param>
        <param>
          <type><ref refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1adcd1378c9523c840349e97a6a775edad" kindref="member">default</ref></type>
          <defname>default</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" line="487" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" bodystart="487" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1elements__basic_1_1Alternative_1a2726d9e6a2f228b3d6624f02cc15a7af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.elements_basic.Alternative.decode</definition>
        <argsstring>(self, state)</argsstring>
        <name>decode</name>
        <reimplements refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1a9203f4df00c4c987d10bd8c00814bbb6">decode</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>state</type>
          <defname>state</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Attempt to decode the recognition stored in the given *state*.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" line="519" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" bodystart="519" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1elements__basic_1_1Alternative_1a6d76e5368b8c08b50bde508936f66cf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.elements_basic.Alternative.dependencies</definition>
        <argsstring>(self, memo)</argsstring>
        <name>dependencies</name>
        <reimplements refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1ae8496a9a9d3fd77702f372f0d20c3ef3">dependencies</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>memo</type>
          <defname>memo</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Returns an iterable containing the dependencies of this
    element and of this element&apos;s children.

    The dependencies are the objects that are necessary
    for this element.  These include lists and other rules.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" line="507" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" bodystart="507" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1elements__basic_1_1Alternative_1a872ec6512f38a67cadc97aee1690e3e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.elements_basic.Alternative.gstring</definition>
        <argsstring>(self)</argsstring>
        <name>gstring</name>
        <reimplements refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1a55faf3b287d31d1dec9858942c75a194">gstring</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Returns a formatted grammar string of the contents
    of this element and its children.

    The grammar string is of a format similar to that used
    by Natlink to define its grammars.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" line="502" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" bodystart="502" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1elements__basic_1_1Alternative_1a73c4989dc996948804dfcb8401bb0664" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.elements_basic.Alternative.value</definition>
        <argsstring>(self, node)</argsstring>
        <name>value</name>
        <reimplements refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1a1006d0e330eda5f0f132bb3992bd8d1d">value</reimplements>
        <reimplementedby refid="classdragonfly_1_1grammar_1_1elements__compound_1_1Compound_1a2361d340f5025eceb5ba5e1473c9c646">value</reimplementedby>
        <reimplementedby refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Modifier_1adbe90b51c030c15ff8b5f42fef517dff">value</reimplementedby>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>node</type>
          <defname>node</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    The *value* of an :class:`Alternative` is the value of its
    child that matched the recognition.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" line="549" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" bodystart="549" bodyend="559"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdragonfly_1_1grammar_1_1elements__basic_1_1Alternative_1a39ccda58f04793a62168180b757a7d52" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.grammar.elements_basic.Alternative._get_children</definition>
        <argsstring>(self)</argsstring>
        <name>_get_children</name>
        <reimplements refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1a13a76c99b260b6a0150352e039cc818d">_get_children</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Returns the alternative child elements. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" line="495" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" bodystart="495" bodyend="498"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>    Element class representing several child elements of which only
    one will match.

    Constructor arguments:
     - *children* (iterable, default: *()*) --
       the child elements of this element
     - *name* (*str*, default: *None*) --
       the name of this element
     - *default* (*object*, default: *None*) --
       the default value used if this element is optional and wasn&apos;t
       spoken

    For a recognition to match, at least one of the child elements
    must match the recognition.  The first matching child is
    used.  Child elements are searched in the order they are given
    in the *children* constructor argument.</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="6">
        <label>dragonfly.grammar.elements_compound.Compound</label>
        <link refid="classdragonfly_1_1grammar_1_1elements__compound_1_1Compound"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>dragonfly.grammar.elements_compound.Choice</label>
        <link refid="classdragonfly_1_1grammar_1_1elements__compound_1_1Choice"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>dragonfly.grammar.elements_basic.Modifier</label>
        <link refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Modifier"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
      <node id="2">
        <label>dragonfly.grammar.elements_basic.ElementBase</label>
        <link refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>dragonfly.grammar.elements_basic.Alternative</label>
        <link refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Alternative"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>string</label>
      </node>
      <node id="3">
        <label>object</label>
      </node>
      <node id="2">
        <label>dragonfly.grammar.elements_basic.ElementBase</label>
        <link refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>dragonfly.grammar.elements_basic.Alternative</label>
        <link refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Alternative"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" line="466" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/grammar/elements_basic.py" bodystart="466" bodyend="560"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Alternative_1a9e25bbe284f390caccca1ae9aaef4f9f" prot="public" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Alternative</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1a2333eeef7b754f9989301817c7a51901" prot="public" virt="non-virtual" ambiguityscope="dragonfly::grammar::elements_basic::ElementBase."><scope>dragonfly::grammar::elements_basic::Alternative</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1a5c249a5f0b4fcfd312693aa2693646f4" prot="public" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Alternative</scope><name>__repr__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Alternative_1a437c38560300c589522540ba22e3f8bb" prot="private" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Alternative</scope><name>_children</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1ac9000520c1ed2cc45e750aa4f58c33e0" prot="private" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Alternative</scope><name>_copy_sequence</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1aa0bbb9c347cc144dc8ec9089b752d1fd" prot="private" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Alternative</scope><name>_default</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Alternative_1a39ccda58f04793a62168180b757a7d52" prot="private" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Alternative</scope><name>_get_children</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1a8b2ae3b4948ab028d4977f19db6ecd01" prot="private" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Alternative</scope><name>_id</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1a3bd1a9e8cccf7ad0e8639ad6ea25e569" prot="private" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Alternative</scope><name>_log_decode</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1a2a400cba074f562db1cce30ac537ca52" prot="private" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Alternative</scope><name>_log_eval</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1a474483e51e223868deafb59b6cc9f226" prot="public" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Alternative</scope><name>children</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Alternative_1a2726d9e6a2f228b3d6624f02cc15a7af" prot="public" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Alternative</scope><name>decode</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1adcd1378c9523c840349e97a6a775edad" prot="public" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Alternative</scope><name>default</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Alternative_1a6d76e5368b8c08b50bde508936f66cf6" prot="public" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Alternative</scope><name>dependencies</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1aa407bc864e150bd0f0c124ae71168e31" prot="public" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Alternative</scope><name>element_tree_string</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Alternative_1a872ec6512f38a67cadc97aee1690e3e2" prot="public" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Alternative</scope><name>gstring</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1acca1fd7cd9fc4bff2d96cdc0855b0ea8" prot="public" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Alternative</scope><name>has_default</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1a5bd1a9be70f09c0e74b86a888b813aad" prot="public" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Alternative</scope><name>name</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1ElementBase_1aa84e3c0d7a310f6503836439a83409ab" prot="public" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Alternative</scope><name>name</name></member>
      <member refid="classdragonfly_1_1grammar_1_1elements__basic_1_1Alternative_1a73c4989dc996948804dfcb8401bb0664" prot="public" virt="non-virtual"><scope>dragonfly::grammar::elements_basic::Alternative</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
