<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdragonfly_1_1test_1_1element__tester_1_1ElementTester_1_1__ElementTestRule" kind="class" language="Python" prot="public">
    <compoundname>dragonfly::test::element_tester::ElementTester::_ElementTestRule</compoundname>
    <basecompoundref refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule" prot="public" virt="non-virtual">dragonfly.grammar.rule_base.Rule</basecompoundref>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classdragonfly_1_1test_1_1element__tester_1_1ElementTester_1_1__ElementTestRule_1aad99eca7d8fa2763a272169c891c07cd" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool dragonfly.test.element_tester.ElementTester._ElementTestRule::exported</definition>
        <argsstring></argsstring>
        <name>exported</name>
        <initializer>=  True</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/element_tester.py" line="44" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/element_tester.py" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdragonfly_1_1test_1_1element__tester_1_1ElementTester_1_1__ElementTestRule_1a2caf2a169500994c014b6b9f5d9a9685" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dragonfly.test.element_tester.ElementTester._ElementTestRule.process_recognition</definition>
        <argsstring>(self, node)</argsstring>
        <name>process_recognition</name>
        <reimplements refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aa5b6bf0ae12ca48d6ad901c1d8e68b8a">process_recognition</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>node</type>
          <defname>node</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Rule recognition callback.

    This method is called when the user has spoken words matching
    this rule&apos;s contents.  This method is called only once for
    each recognition, and only for the matching top-level rule.

    The default implementation of this method does nothing.

    .. note::

       This is generally the method which developers should
       override in derived rule classes to give them custom
       functionality when a top-level rule is recognized.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/element_tester.py" line="45" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/element_tester.py" bodystart="45" bodyend="48"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dragonfly.test.element_tester.ElementTester._ElementTestRule</label>
        <link refid="classdragonfly_1_1test_1_1element__tester_1_1ElementTester_1_1__ElementTestRule"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>dragonfly.grammar.rule_base.Rule</label>
        <link refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>dragonfly.test.element_tester.ElementTester._ElementTestRule</label>
        <link refid="classdragonfly_1_1test_1_1element__tester_1_1ElementTester_1_1__ElementTestRule"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>dragonfly.grammar.rule_base.Rule</label>
        <link refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
    </collaborationgraph>
    <location file="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/element_tester.py" line="43" column="1" bodyfile="src/dragonfly_speech_recognition/dragonfly/dragonfly/test/element_tester.py" bodystart="43" bodyend="47"/>
    <listofallmembers>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a576f085cc4f4ecdf154584ec8ceb3e2c" prot="public" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>__init__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a650f73cead2a52ea698531a69a242d1e" prot="public" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>__repr__</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5fa26e7246b883fc7e2fef8a32a931be" prot="private" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>_active</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a72e22c4830016ae96b9079f1329fb02b" prot="private" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>_context</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5f244a7ccce70fbf7f2fa0fc26ebf5c5" prot="private" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>_element</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1accac7d6feda0165d863fdfcdee7674fd" prot="private" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>_enabled</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a9e1a66ec204cfc3e4ff43cfd26700c94" prot="private" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>_exported</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a478b03a236aba8b50f2cf9ffe6119c69" prot="private" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>_get_grammar</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a232f71f2b67ac6d567d349a5ae249461" prot="private" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>_grammar</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1acc246f5f8cd4333fe5dfac1e24d8b131" prot="private" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>_imported</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a75fdcef87114b992f3ba76c3ec19c12e" prot="private" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>_log</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a63708f8b55821fc912d3c9613659c30c" prot="private" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>_log_begin</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ab2392a9b9a401b2734055021cd361627" prot="private" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>_log_eval</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a3bbefb0e38e96771de43401ff853e16b" prot="private" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>_log_load</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ab2d4c33c6947d06f136d722a60a6ad69" prot="private" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>_log_proc</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aa10ab7422e75da56283a4cc1c7da6985" prot="private" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>_name</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aac3106f975f474720ae8e2108a559176" prot="private" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>_next_anonymous_id</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aee4c3167defe093caa2f816d0bac44c4" prot="private" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>_process_begin</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1afa435043469a44e51138758804b2f598" prot="private" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>_set_grammar</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a5436cd9a899ed82891f758df721ec6a6" prot="public" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>activate</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aa4683441cd4d4ab5b779a47968523e57" prot="public" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>active</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ad62260e38a81f9c556a10e843ab003ad" prot="public" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>context</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a4182eda5b94f8094902ad609450ee11f" prot="public" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>deactivate</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ac0b4fbdf1d22cd5e22f76cd73d9e6d3a" prot="public" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>decode</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a9c1ad9ae6e3df632c27026df085975bf" prot="public" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>dependencies</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a6b035ec7557e6fb3e7323d56e9f156b4" prot="public" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>disable</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ae6c1b3c23c33d24fb8439d4ab86b83aa" prot="public" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>element</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a9ec8b499154a709d7ddadb33f11c31b0" prot="public" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>enable</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a242823b84443b08f3d27d79ec5d1bb98" prot="public" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>enabled</name></member>
      <member refid="classdragonfly_1_1test_1_1element__tester_1_1ElementTester_1_1__ElementTestRule_1aad99eca7d8fa2763a272169c891c07cd" prot="public" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>exported</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a32ba29c3a4623ac9bce6009b7efc70ce" prot="public" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>grammar</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1aeac96c1300b6a1ba64ef5faf23a859a2" prot="public" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>gstring</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ae10a43239703a5932f08e712dd2416a7" prot="public" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>imported</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ab5401b17fbd0336bc78a3c066c5dd994" prot="public" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>name</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a670d76c19e2f0f59349bc01f983adf24" prot="public" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>process_begin</name></member>
      <member refid="classdragonfly_1_1test_1_1element__tester_1_1ElementTester_1_1__ElementTestRule_1a2caf2a169500994c014b6b9f5d9a9685" prot="public" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>process_recognition</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1af25b9727d10e38f7db3f42f433f59320" prot="public" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>process_results</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1a7a6bda63736ee144f0e22f63185dbb1d" prot="public" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>set_context</name></member>
      <member refid="classdragonfly_1_1grammar_1_1rule__base_1_1Rule_1ae7687e1ba3425cdd449733f726595961" prot="public" virt="non-virtual"><scope>dragonfly::test::element_tester::ElementTester::_ElementTestRule</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
