<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacegrammar__parser_1_1cfgparser" kind="namespace" language="Python">
    <compoundname>grammar_parser::cfgparser</compoundname>
    <innerclass refid="classgrammar__parser_1_1cfgparser_1_1bcolors" prot="public">grammar_parser::cfgparser::bcolors</innerclass>
    <innerclass refid="classgrammar__parser_1_1cfgparser_1_1CFGParser" prot="public">grammar_parser::cfgparser::CFGParser</innerclass>
    <innerclass refid="classgrammar__parser_1_1cfgparser_1_1Conjunct" prot="public">grammar_parser::cfgparser::Conjunct</innerclass>
    <innerclass refid="classgrammar__parser_1_1cfgparser_1_1GrammarError" prot="public">grammar_parser::cfgparser::GrammarError</innerclass>
    <innerclass refid="classgrammar__parser_1_1cfgparser_1_1Option" prot="public">grammar_parser::cfgparser::Option</innerclass>
    <innerclass refid="classgrammar__parser_1_1cfgparser_1_1ParseError" prot="public">grammar_parser::cfgparser::ParseError</innerclass>
    <innerclass refid="classgrammar__parser_1_1cfgparser_1_1Rule" prot="public">grammar_parser::cfgparser::Rule</innerclass>
    <innerclass refid="classgrammar__parser_1_1cfgparser_1_1Tree" prot="public">grammar_parser::cfgparser::Tree</innerclass>
    <innerclass refid="classgrammar__parser_1_1cfgparser_1_1Visualizer" prot="public">grammar_parser::cfgparser::Visualizer</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacegrammar__parser_1_1cfgparser_1aa7ff86f3e26c3f5ba8427f1399404c31" prot="public" static="no" mutable="no">
        <type></type>
        <definition>grammar_parser::cfgparser.depth</definition>
        <argsstring></argsstring>
        <name>depth</name>
        <initializer>=  int(sys.argv[3])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/grammar_parser/src/grammar_parser/cfgparser.py" line="726" column="1" bodyfile="src/dragonfly_speech_recognition/grammar_parser/src/grammar_parser/cfgparser.py" bodystart="726" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegrammar__parser_1_1cfgparser_1a8c17657891cb6fac9077d45182d19dcf" prot="public" static="no" mutable="no">
        <type></type>
        <definition>grammar_parser::cfgparser.grammar_file</definition>
        <argsstring></argsstring>
        <name>grammar_file</name>
        <initializer>=  sys.argv[1]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/grammar_parser/src/grammar_parser/cfgparser.py" line="724" column="1" bodyfile="src/dragonfly_speech_recognition/grammar_parser/src/grammar_parser/cfgparser.py" bodystart="724" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegrammar__parser_1_1cfgparser_1a67dd590c752878b114c708a382b96cb4" prot="public" static="no" mutable="no">
        <type></type>
        <definition>grammar_parser::cfgparser.rule</definition>
        <argsstring></argsstring>
        <name>rule</name>
        <initializer>=  sys.argv[2]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/grammar_parser/src/grammar_parser/cfgparser.py" line="725" column="1" bodyfile="src/dragonfly_speech_recognition/grammar_parser/src/grammar_parser/cfgparser.py" bodystart="725" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegrammar__parser_1_1cfgparser_1a4f309abc23df1f9a1709c344ae1ff343" prot="public" static="no" mutable="no">
        <type></type>
        <definition>grammar_parser::cfgparser.tester</definition>
        <argsstring></argsstring>
        <name>tester</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/grammar_parser/src/grammar_parser/cfgparser.py" line="743" column="1" bodyfile="src/dragonfly_speech_recognition/grammar_parser/src/grammar_parser/cfgparser.py" bodystart="743" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacegrammar__parser_1_1cfgparser_1ac20401fd2a7ace93c6f0ad562fdeaddd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def grammar_parser.cfgparser.parse_next_atom</definition>
        <argsstring>(s)</argsstring>
        <name>parse_next_atom</name>
        <param>
          <type>s</type>
          <defname>s</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Returns (name, semantics, remaining_str)
For example for &quot;VP[X, Y] foo bar&quot; it returns:
     (&quot;VP&quot;, &quot;X, Y&quot;, &quot;foo bar&quot;)
:param s:
:return: Tuple with the rule&apos;s lname, the variables involved and the remaining text: (&quot;VP&quot;, &quot;X, Y&quot;, &quot;foo bar&quot;)
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dragonfly_speech_recognition/grammar_parser/src/grammar_parser/cfgparser.py" line="295" column="1" bodyfile="src/dragonfly_speech_recognition/grammar_parser/src/grammar_parser/cfgparser.py" bodystart="295" bodyend="320"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/dragonfly_speech_recognition/grammar_parser/src/grammar_parser/cfgparser.py" line="1" column="1"/>
  </compounddef>
</doxygen>
