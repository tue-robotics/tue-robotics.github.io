<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classPortAudioWrapper" kind="class" language="C++" prot="public">
    <compoundname>PortAudioWrapper</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classPortAudioWrapper_1a192e461505d5065549f387fed56a868a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int PortAudioWrapper::min_read_samples_</definition>
        <argsstring></argsstring>
        <name>min_read_samples_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/examples/C++/demo.cc" line="159" column="7" bodyfile="3rdparty/snowboy/examples/C++/demo.cc" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPortAudioWrapper_1af450a06c9a36cc9a9ac7aa891b5ebe4c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int PortAudioWrapper::num_lost_samples_</definition>
        <argsstring></argsstring>
        <name>num_lost_samples_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/examples/C++/demo.cc" line="156" column="7" bodyfile="3rdparty/snowboy/examples/C++/demo.cc" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPortAudioWrapper_1aaa7d54a05d51f37c695b6040e99bc175" prot="private" static="no" mutable="no">
        <type>PaUtilRingBuffer</type>
        <definition>PaUtilRingBuffer PortAudioWrapper::pa_ringbuffer_</definition>
        <argsstring></argsstring>
        <name>pa_ringbuffer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/examples/C++/demo.cc" line="150" column="20" bodyfile="3rdparty/snowboy/examples/C++/demo.cc" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPortAudioWrapper_1a0b75d4ee343a27444c30ea93ae685509" prot="private" static="no" mutable="no">
        <type>PaStream *</type>
        <definition>PaStream* PortAudioWrapper::pa_stream_</definition>
        <argsstring></argsstring>
        <name>pa_stream_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/examples/C++/demo.cc" line="153" column="12" bodyfile="3rdparty/snowboy/examples/C++/demo.cc" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPortAudioWrapper_1a9e16bb191e59685d59933d70ec831bae" prot="private" static="no" mutable="no">
        <type>char *</type>
        <definition>char* PortAudioWrapper::ringbuffer_</definition>
        <argsstring></argsstring>
        <name>ringbuffer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/examples/C++/demo.cc" line="147" column="8" bodyfile="3rdparty/snowboy/examples/C++/demo.cc" bodystart="147" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classPortAudioWrapper_1a5994b8399a8767d9b926178dc661eb92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int PortAudioWrapper::Callback</definition>
        <argsstring>(const void *input, void *output, unsigned long frame_count, const PaStreamCallbackTimeInfo *time_info, PaStreamCallbackFlags status_flags)</argsstring>
        <name>Callback</name>
        <param>
          <type>const void *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>frame_count</declname>
        </param>
        <param>
          <type>const PaStreamCallbackTimeInfo *</type>
          <declname>time_info</declname>
        </param>
        <param>
          <type>PaStreamCallbackFlags</type>
          <declname>status_flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/examples/C++/demo.cc" line="65" column="7" bodyfile="3rdparty/snowboy/examples/C++/demo.cc" bodystart="65" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classPortAudioWrapper_1a26449c6c1932fcc797227cbd16ed6a6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PortAudioWrapper::PortAudioWrapper</definition>
        <argsstring>(int sample_rate, int num_channels, int bits_per_sample)</argsstring>
        <name>PortAudioWrapper</name>
        <param>
          <type>int</type>
          <declname>sample_rate</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_channels</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bits_per_sample</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/examples/C++/demo.cc" line="26" column="3" bodyfile="3rdparty/snowboy/examples/C++/demo.cc" bodystart="26" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classPortAudioWrapper_1aafa4427e0060cec6b60e1f8a512599c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void PortAudioWrapper::Read</definition>
        <argsstring>(std::vector&lt; T &gt; *data)</argsstring>
        <name>Read</name>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; T &gt; *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/examples/C++/demo.cc" line="34" column="8" bodyfile="3rdparty/snowboy/examples/C++/demo.cc" bodystart="34" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classPortAudioWrapper_1a61b9b6f951fe46cc77c27c600bab6236" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PortAudioWrapper::~PortAudioWrapper</definition>
        <argsstring>()</argsstring>
        <name>~PortAudioWrapper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/examples/C++/demo.cc" line="76" column="3" bodyfile="3rdparty/snowboy/examples/C++/demo.cc" bodystart="76" bodyend="81"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classPortAudioWrapper_1a46b1c64693229864bf3df718a6d8fed2" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool PortAudioWrapper::Init</definition>
        <argsstring>(int sample_rate, int num_channels, int bits_per_sample)</argsstring>
        <name>Init</name>
        <param>
          <type>int</type>
          <declname>sample_rate</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_channels</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bits_per_sample</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/examples/C++/demo.cc" line="85" column="8" bodyfile="3rdparty/snowboy/examples/C++/demo.cc" bodystart="85" bodyend="143"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="3rdparty/snowboy/examples/C++/demo.cc" line="23" column="23" bodyfile="3rdparty/snowboy/examples/C++/demo.cc" bodystart="23" bodyend="160"/>
    <listofallmembers>
      <member refid="classPortAudioWrapper_1a5994b8399a8767d9b926178dc661eb92" prot="public" virt="non-virtual"><scope>PortAudioWrapper</scope><name>Callback</name></member>
      <member refid="classPortAudioWrapper_1a46b1c64693229864bf3df718a6d8fed2" prot="private" virt="non-virtual"><scope>PortAudioWrapper</scope><name>Init</name></member>
      <member refid="classPortAudioWrapper_1a192e461505d5065549f387fed56a868a" prot="private" virt="non-virtual"><scope>PortAudioWrapper</scope><name>min_read_samples_</name></member>
      <member refid="classPortAudioWrapper_1af450a06c9a36cc9a9ac7aa891b5ebe4c" prot="private" virt="non-virtual"><scope>PortAudioWrapper</scope><name>num_lost_samples_</name></member>
      <member refid="classPortAudioWrapper_1aaa7d54a05d51f37c695b6040e99bc175" prot="private" virt="non-virtual"><scope>PortAudioWrapper</scope><name>pa_ringbuffer_</name></member>
      <member refid="classPortAudioWrapper_1a0b75d4ee343a27444c30ea93ae685509" prot="private" virt="non-virtual"><scope>PortAudioWrapper</scope><name>pa_stream_</name></member>
      <member refid="classPortAudioWrapper_1a26449c6c1932fcc797227cbd16ed6a6e" prot="public" virt="non-virtual"><scope>PortAudioWrapper</scope><name>PortAudioWrapper</name></member>
      <member refid="classPortAudioWrapper_1aafa4427e0060cec6b60e1f8a512599c6" prot="public" virt="non-virtual"><scope>PortAudioWrapper</scope><name>Read</name></member>
      <member refid="classPortAudioWrapper_1a9e16bb191e59685d59933d70ec831bae" prot="private" virt="non-virtual"><scope>PortAudioWrapper</scope><name>ringbuffer_</name></member>
      <member refid="classPortAudioWrapper_1a61b9b6f951fe46cc77c27c600bab6236" prot="public" virt="non-virtual"><scope>PortAudioWrapper</scope><name>~PortAudioWrapper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
