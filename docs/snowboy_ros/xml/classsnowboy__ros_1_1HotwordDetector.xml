<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsnowboy__ros_1_1HotwordDetector" kind="class" language="C++" prot="public">
    <compoundname>snowboy_ros::HotwordDetector</compoundname>
    <includes refid="hotword__detector_8h" local="no">hotword_detector.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsnowboy__ros_1_1HotwordDetector_1aea33ed0c203dcefde90dff37a072ffba" prot="private" static="no" mutable="no">
        <type><ref refid="classsnowboy_1_1SnowboyDetect" kindref="compound">snowboy::SnowboyDetect</ref> *</type>
        <definition>snowboy::SnowboyDetect* snowboy_ros::HotwordDetector::detector_</definition>
        <argsstring></argsstring>
        <name>detector_</name>
        <briefdescription>
<para>detector_ Instance of Snowboy detect </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/snowboy_ros/hotword_detector.h" line="48" column="26" bodyfile="include/snowboy_ros/hotword_detector.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsnowboy__ros_1_1HotwordDetector_1a7e45c90591659da86b7766ac88858fde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool snowboy_ros::HotwordDetector::configure</definition>
        <argsstring>(double sensitivity, double audio_gain)</argsstring>
        <name>configure</name>
        <param>
          <type>double</type>
          <declname>sensitivity</declname>
        </param>
        <param>
          <type>double</type>
          <declname>audio_gain</declname>
        </param>
        <briefdescription>
<para>configure Configure the detector on runtime </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sensitivity</parametername>
</parameternamelist>
<parameterdescription>
<para>Hotword sensitivity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>audio_gain</parametername>
</parameternamelist>
<parameterdescription>
<para>Fixed gain to the input audio. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if success, False otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/snowboy_ros/hotword_detector.h" line="33" column="8" bodyfile="src/hotword_detector.cpp" bodystart="29" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classsnowboy__ros_1_1HotwordDetector_1a91b6033c05e638c13cb710879eaf3b96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>snowboy_ros::HotwordDetector::HotwordDetector</definition>
        <argsstring>()</argsstring>
        <name>HotwordDetector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/snowboy_ros/hotword_detector.h" line="17" column="3" bodyfile="src/hotword_detector.cpp" bodystart="10" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="classsnowboy__ros_1_1HotwordDetector_1ab9345482f351593529fcffe00618b36f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snowboy_ros::HotwordDetector::initialize</definition>
        <argsstring>(const char *resource_filename, const char *model_filename)</argsstring>
        <name>initialize</name>
        <param>
          <type>const char *</type>
          <declname>resource_filename</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>model_filename</declname>
        </param>
        <briefdescription>
<para>initialize Initializes the Snowbody </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">resource_filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Filename of resource file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">model_filename</parametername>
</parameternamelist>
<parameterdescription>
<para>A string of multiple hotword models </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/snowboy_ros/hotword_detector.h" line="25" column="8" bodyfile="src/hotword_detector.cpp" bodystart="14" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classsnowboy__ros_1_1HotwordDetector_1a7dcab256a244ab967eed30ac00337b12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snowboy_ros::HotwordDetector::runDetection</definition>
        <argsstring>(const int16_t *const data, const int array_length)</argsstring>
        <name>runDetection</name>
        <param>
          <type>const int16_t *const</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>array_length</declname>
        </param>
        <briefdescription>
<para>runDetection Runs hotword detection of Snowboy, see Snowboy API for more docs </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Small chunk of data to be detected </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the data array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>-3 not initialized, -2 Silence, -1 Error, 0 No event, 1 Hotword triggered </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/snowboy_ros/hotword_detector.h" line="41" column="7" bodyfile="src/hotword_detector.cpp" bodystart="53" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classsnowboy__ros_1_1HotwordDetector_1a551979ba56eede8388f0d9613540c066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>snowboy_ros::HotwordDetector::~HotwordDetector</definition>
        <argsstring>()</argsstring>
        <name>~HotwordDetector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/snowboy_ros/hotword_detector.h" line="18" column="3" bodyfile="src/hotword_detector.cpp" bodystart="45" bodyend="51"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classsnowboy__ros_1_1HotwordDetector" kindref="compound">HotwordDetector</ref> class wraps Snowboy detect so we can use C++ 11. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4">
        <label>std::unique_ptr&lt; PipelineDetect &gt;</label>
        <link refid="cpp/memory/unique_ptr" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="2">
        <label>snowboy::SnowboyDetect</label>
        <link refid="classsnowboy_1_1SnowboyDetect"/>
        <childnode refid="3" relation="usage">
          <edgelabel>wave_header_</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>detect_pipeline_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>snowboy_ros::HotwordDetector</label>
        <link refid="classsnowboy__ros_1_1HotwordDetector"/>
        <childnode refid="2" relation="usage">
          <edgelabel>detector_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::unique_ptr&lt; WaveHeader &gt;</label>
        <link refid="cpp/memory/unique_ptr" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="include/snowboy_ros/hotword_detector.h" line="13" column="1" bodyfile="include/snowboy_ros/hotword_detector.h" bodystart="12" bodyend="49"/>
    <listofallmembers>
      <member refid="classsnowboy__ros_1_1HotwordDetector_1a7e45c90591659da86b7766ac88858fde" prot="public" virt="non-virtual"><scope>snowboy_ros::HotwordDetector</scope><name>configure</name></member>
      <member refid="classsnowboy__ros_1_1HotwordDetector_1aea33ed0c203dcefde90dff37a072ffba" prot="private" virt="non-virtual"><scope>snowboy_ros::HotwordDetector</scope><name>detector_</name></member>
      <member refid="classsnowboy__ros_1_1HotwordDetector_1a91b6033c05e638c13cb710879eaf3b96" prot="public" virt="non-virtual"><scope>snowboy_ros::HotwordDetector</scope><name>HotwordDetector</name></member>
      <member refid="classsnowboy__ros_1_1HotwordDetector_1ab9345482f351593529fcffe00618b36f" prot="public" virt="non-virtual"><scope>snowboy_ros::HotwordDetector</scope><name>initialize</name></member>
      <member refid="classsnowboy__ros_1_1HotwordDetector_1a7dcab256a244ab967eed30ac00337b12" prot="public" virt="non-virtual"><scope>snowboy_ros::HotwordDetector</scope><name>runDetection</name></member>
      <member refid="classsnowboy__ros_1_1HotwordDetector_1a551979ba56eede8388f0d9613540c066" prot="public" virt="non-virtual"><scope>snowboy_ros::HotwordDetector</scope><name>~HotwordDetector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
