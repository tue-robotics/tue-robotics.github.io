<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="snowboy_8cc" kind="file" language="C++">
    <compoundname>snowboy.cc</compoundname>
    <includes local="no">nan.h</includes>
    <includes refid="snowboy-detect_8h" local="no">snowboy-detect.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="1">
        <label>snowboy.cc</label>
        <link refid="snowboy_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nan.h</label>
      </node>
      <node id="6">
        <label>iostream</label>
        <link refid="cpp/header/iostream" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="4">
        <label>memory</label>
        <link refid="cpp/header/memory" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="3">
        <label>snowboy-detect.h</label>
        <link refid="snowboy-detect_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>string</label>
        <link refid="cpp/header/string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </incdepgraph>
    <innerclass refid="classSnowboyDetect" prot="public">SnowboyDetect</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="snowboy_8cc_1a4b660ebe61fb2df0d11c167c38797340" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NAN_METHOD</definition>
        <argsstring>(SnowboyDetect::BitsPerSample)</argsstring>
        <name>NAN_METHOD</name>
        <param>
          <type>SnowboyDetect::BitsPerSample</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/swig/Node/snowboy.cc" line="166" column="1" bodyfile="3rdparty/snowboy/swig/Node/snowboy.cc" bodystart="166" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="snowboy_8cc_1afd3dad614cfea2db4d18278b5fd37179" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NAN_METHOD</definition>
        <argsstring>(SnowboyDetect::GetSensitivity)</argsstring>
        <name>NAN_METHOD</name>
        <param>
          <type>SnowboyDetect::GetSensitivity</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/swig/Node/snowboy.cc" line="126" column="1" bodyfile="3rdparty/snowboy/swig/Node/snowboy.cc" bodystart="126" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="snowboy_8cc_1aa79fb05080001a7fa93c1ee4888f4c51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NAN_METHOD</definition>
        <argsstring>(SnowboyDetect::New)</argsstring>
        <name>NAN_METHOD</name>
        <param>
          <type>SnowboyDetect::New</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/swig/Node/snowboy.cc" line="68" column="1" bodyfile="3rdparty/snowboy/swig/Node/snowboy.cc" bodystart="68" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="snowboy_8cc_1a29479dfbf399da347806229b3bd8ae01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NAN_METHOD</definition>
        <argsstring>(SnowboyDetect::NumChannels)</argsstring>
        <name>NAN_METHOD</name>
        <param>
          <type>SnowboyDetect::NumChannels</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/swig/Node/snowboy.cc" line="160" column="1" bodyfile="3rdparty/snowboy/swig/Node/snowboy.cc" bodystart="160" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="snowboy_8cc_1aba66cc59f8e4ad3d24a5faee2ab55150" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NAN_METHOD</definition>
        <argsstring>(SnowboyDetect::NumHotwords)</argsstring>
        <name>NAN_METHOD</name>
        <param>
          <type>SnowboyDetect::NumHotwords</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/swig/Node/snowboy.cc" line="148" column="1" bodyfile="3rdparty/snowboy/swig/Node/snowboy.cc" bodystart="148" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="snowboy_8cc_1a223e4bdef772fdb5fa6e4d74a9bec381" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NAN_METHOD</definition>
        <argsstring>(SnowboyDetect::Reset)</argsstring>
        <name>NAN_METHOD</name>
        <param>
          <type>SnowboyDetect::Reset</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/swig/Node/snowboy.cc" line="90" column="1" bodyfile="3rdparty/snowboy/swig/Node/snowboy.cc" bodystart="90" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="snowboy_8cc_1a64544017ce3852005f7a420d14341879" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NAN_METHOD</definition>
        <argsstring>(SnowboyDetect::RunDetection)</argsstring>
        <name>NAN_METHOD</name>
        <param>
          <type>SnowboyDetect::RunDetection</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/swig/Node/snowboy.cc" line="96" column="1" bodyfile="3rdparty/snowboy/swig/Node/snowboy.cc" bodystart="96" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="snowboy_8cc_1ade46c942f3e0e779e146fba5d224b0a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NAN_METHOD</definition>
        <argsstring>(SnowboyDetect::SampleRate)</argsstring>
        <name>NAN_METHOD</name>
        <param>
          <type>SnowboyDetect::SampleRate</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/swig/Node/snowboy.cc" line="154" column="1" bodyfile="3rdparty/snowboy/swig/Node/snowboy.cc" bodystart="154" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="snowboy_8cc_1a878c58a6c52e69a5f31ab8b1174208ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NAN_METHOD</definition>
        <argsstring>(SnowboyDetect::SetAudioGain)</argsstring>
        <name>NAN_METHOD</name>
        <param>
          <type>SnowboyDetect::SetAudioGain</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/swig/Node/snowboy.cc" line="132" column="1" bodyfile="3rdparty/snowboy/swig/Node/snowboy.cc" bodystart="132" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="snowboy_8cc_1aeee2d5a8c138f86b265e8978cfb9bc58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NAN_METHOD</definition>
        <argsstring>(SnowboyDetect::SetSensitivity)</argsstring>
        <name>NAN_METHOD</name>
        <param>
          <type>SnowboyDetect::SetSensitivity</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/swig/Node/snowboy.cc" line="113" column="1" bodyfile="3rdparty/snowboy/swig/Node/snowboy.cc" bodystart="113" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="snowboy_8cc_1aa20304653c9712b74a905abb09d960a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NAN_METHOD</definition>
        <argsstring>(SnowboyDetect::UpdateModel)</argsstring>
        <name>NAN_METHOD</name>
        <param>
          <type>SnowboyDetect::UpdateModel</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/swig/Node/snowboy.cc" line="143" column="1" bodyfile="3rdparty/snowboy/swig/Node/snowboy.cc" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="snowboy_8cc_1a2fc5c4d0bb5dfbc505ac9e7bb034104b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NAN_MODULE_INIT</definition>
        <argsstring>(SnowboyDetect::Init)</argsstring>
        <name>NAN_MODULE_INIT</name>
        <param>
          <type>SnowboyDetect::Init</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/swig/Node/snowboy.cc" line="47" column="1" bodyfile="3rdparty/snowboy/swig/Node/snowboy.cc" bodystart="47" bodyend="66"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;nan.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="snowboy-detect_8h" kindref="compound">snowboy-detect.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cpp/header/iostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">iostream</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="classSnowboyDetect" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classSnowboyDetect" kindref="compound">SnowboyDetect</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Nan::ObjectWrap<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classSnowboyDetect_1a01fe293f1ecbdb1f9c3ed8634e3b872d" kindref="member">NAN_MODULE_INIT</ref>(Init);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classSnowboyDetect_1a9007a63cf7a81fe9dde029a9a79fa19a" kindref="member">SnowboyDetect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>resource_filename,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>model_str);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSnowboyDetect_1a28e5d8ebe057e70ce0d076de90308c71" kindref="member">~SnowboyDetect</ref>();</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classSnowboyDetect_1ab5addc0ab9c54369b0688f99bcada243" kindref="member">NAN_METHOD</ref>(New);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classSnowboyDetect_1ab5addc0ab9c54369b0688f99bcada243" kindref="member">NAN_METHOD</ref>(Reset);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classSnowboyDetect_1ab5addc0ab9c54369b0688f99bcada243" kindref="member">NAN_METHOD</ref>(RunDetection);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classSnowboyDetect_1ab5addc0ab9c54369b0688f99bcada243" kindref="member">NAN_METHOD</ref>(SetSensitivity);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classSnowboyDetect_1ab5addc0ab9c54369b0688f99bcada243" kindref="member">NAN_METHOD</ref>(GetSensitivity);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classSnowboyDetect_1ab5addc0ab9c54369b0688f99bcada243" kindref="member">NAN_METHOD</ref>(SetAudioGain);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classSnowboyDetect_1ab5addc0ab9c54369b0688f99bcada243" kindref="member">NAN_METHOD</ref>(UpdateModel);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classSnowboyDetect_1ab5addc0ab9c54369b0688f99bcada243" kindref="member">NAN_METHOD</ref>(NumHotwords);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classSnowboyDetect_1ab5addc0ab9c54369b0688f99bcada243" kindref="member">NAN_METHOD</ref>(SampleRate);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classSnowboyDetect_1ab5addc0ab9c54369b0688f99bcada243" kindref="member">NAN_METHOD</ref>(NumChannels);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classSnowboyDetect_1ab5addc0ab9c54369b0688f99bcada243" kindref="member">NAN_METHOD</ref>(BitsPerSample);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classSnowboyDetect_1a848e03a7ad85aedff63db3e83812d5a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Nan::Persistent&lt;v8::Function&gt;<sp/><ref refid="classSnowboyDetect_1a848e03a7ad85aedff63db3e83812d5a3" kindref="member">constructor</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classSnowboyDetect_1aedecd368895e785c00b3f5a259fb1ec1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsnowboy_1_1SnowboyDetect" kindref="compound">snowboy::SnowboyDetect</ref>*<sp/><ref refid="classSnowboyDetect_1aedecd368895e785c00b3f5a259fb1ec1" kindref="member">detector</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">Nan::Persistent&lt;v8::Function&gt;<sp/><ref refid="classSnowboyDetect_1a848e03a7ad85aedff63db3e83812d5a3" kindref="member">SnowboyDetect::constructor</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classSnowboyDetect_1a9007a63cf7a81fe9dde029a9a79fa19a" refkind="member"><highlight class="normal"><ref refid="classSnowboyDetect_1a9007a63cf7a81fe9dde029a9a79fa19a" kindref="member">SnowboyDetect::SnowboyDetect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>resource_filename,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>model_str)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classSnowboyDetect_1aedecd368895e785c00b3f5a259fb1ec1" kindref="member">detector</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsnowboy_1_1SnowboyDetect" kindref="compound">snowboy::SnowboyDetect</ref>(resource_filename,<sp/>model_str);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<ref refid="cpp/error/runtime_error" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::runtime_error</ref><sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>Nan::ThrowError(e.<ref refid="cpp/error/exception/what" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">what</ref>());</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41" refid="classSnowboyDetect_1a28e5d8ebe057e70ce0d076de90308c71" refkind="member"><highlight class="normal"><ref refid="classSnowboyDetect_1a28e5d8ebe057e70ce0d076de90308c71" kindref="member">SnowboyDetect::~SnowboyDetect</ref>()<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classSnowboyDetect_1aedecd368895e785c00b3f5a259fb1ec1" kindref="member">detector</ref>)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classSnowboyDetect_1aedecd368895e785c00b3f5a259fb1ec1" kindref="member">detector</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="snowboy_8cc_1a2fc5c4d0bb5dfbc505ac9e7bb034104b" refkind="member"><highlight class="normal"><ref refid="snowboy_8cc_1a2fc5c4d0bb5dfbc505ac9e7bb034104b" kindref="member">NAN_MODULE_INIT</ref>(SnowboyDetect::Init)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>v8::Local&lt;v8::FunctionTemplate&gt;<sp/>tpl<sp/>=<sp/>Nan::New&lt;v8::FunctionTemplate&gt;(New);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>tpl-&gt;SetClassName(Nan::New(</highlight><highlight class="stringliteral">&quot;SnowboyDetect&quot;</highlight><highlight class="normal">).ToLocalChecked());</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>tpl-&gt;InstanceTemplate()-&gt;SetInternalFieldCount(1);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>SetPrototypeMethod(tpl,<sp/></highlight><highlight class="stringliteral">&quot;Reset&quot;</highlight><highlight class="normal">,<sp/>Reset);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>SetPrototypeMethod(tpl,<sp/></highlight><highlight class="stringliteral">&quot;RunDetection&quot;</highlight><highlight class="normal">,<sp/>RunDetection);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>SetPrototypeMethod(tpl,<sp/></highlight><highlight class="stringliteral">&quot;SetSensitivity&quot;</highlight><highlight class="normal">,<sp/>SetSensitivity);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>SetPrototypeMethod(tpl,<sp/></highlight><highlight class="stringliteral">&quot;GetSensitivity&quot;</highlight><highlight class="normal">,<sp/>GetSensitivity);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>SetPrototypeMethod(tpl,<sp/></highlight><highlight class="stringliteral">&quot;SetAudioGain&quot;</highlight><highlight class="normal">,<sp/>SetAudioGain);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>SetPrototypeMethod(tpl,<sp/></highlight><highlight class="stringliteral">&quot;UpdateModel&quot;</highlight><highlight class="normal">,<sp/>UpdateModel);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>SetPrototypeMethod(tpl,<sp/></highlight><highlight class="stringliteral">&quot;NumHotwords&quot;</highlight><highlight class="normal">,<sp/>NumHotwords);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>SetPrototypeMethod(tpl,<sp/></highlight><highlight class="stringliteral">&quot;SampleRate&quot;</highlight><highlight class="normal">,<sp/>SampleRate);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>SetPrototypeMethod(tpl,<sp/></highlight><highlight class="stringliteral">&quot;NumChannels&quot;</highlight><highlight class="normal">,<sp/>NumChannels);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>SetPrototypeMethod(tpl,<sp/></highlight><highlight class="stringliteral">&quot;BitsPerSample&quot;</highlight><highlight class="normal">,<sp/>BitsPerSample);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>constructor.Reset(Nan::GetFunction(tpl).ToLocalChecked());</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>Nan::Set(target,<sp/>Nan::New(</highlight><highlight class="stringliteral">&quot;SnowboyDetect&quot;</highlight><highlight class="normal">).ToLocalChecked(),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>Nan::GetFunction(tpl).ToLocalChecked());</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="snowboy_8cc_1aa79fb05080001a7fa93c1ee4888f4c51" refkind="member"><highlight class="normal"><ref refid="snowboy_8cc_1aa79fb05080001a7fa93c1ee4888f4c51" kindref="member">NAN_METHOD</ref>(SnowboyDetect::New)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info.IsConstructCall())<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>Nan::ThrowError(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>call<sp/>constructor<sp/>as<sp/>function,<sp/>you<sp/>need<sp/>to<sp/>use<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;new&apos;<sp/>keyword&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info[0]-&gt;IsString())<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>Nan::ThrowTypeError(</highlight><highlight class="stringliteral">&quot;resource<sp/>must<sp/>be<sp/>a<sp/>string&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info[1]-&gt;IsString())<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>Nan::ThrowTypeError(</highlight><highlight class="stringliteral">&quot;model<sp/>must<sp/>be<sp/>a<sp/>string&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>Nan::MaybeLocal&lt;v8::Object&gt;<sp/>resource<sp/>=<sp/>Nan::To&lt;v8::Object&gt;(info[0]);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>Nan::MaybeLocal&lt;v8::Object&gt;<sp/><ref refid="namespacedemo_1afdaa6b6d6a72de879b40e4d6824a0c35" kindref="member">model</ref><sp/>=<sp/>Nan::To&lt;v8::Object&gt;(info[1]);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>Nan::Utf8String<sp/>resourceString(resource.ToLocalChecked());</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>Nan::Utf8String<sp/>modelString(<ref refid="namespacedemo_1afdaa6b6d6a72de879b40e4d6824a0c35" kindref="member">model</ref>.ToLocalChecked());</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="classSnowboyDetect" kindref="compound">SnowboyDetect</ref>*<sp/>obj<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classSnowboyDetect" kindref="compound">SnowboyDetect</ref>(*resourceString,<sp/>*modelString);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>obj-&gt;Wrap(info.This());</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>info.GetReturnValue().Set(info.This());</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="snowboy_8cc_1a223e4bdef772fdb5fa6e4d74a9bec381" refkind="member"><highlight class="normal"><ref refid="snowboy_8cc_1aa79fb05080001a7fa93c1ee4888f4c51" kindref="member">NAN_METHOD</ref>(SnowboyDetect::Reset)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="classSnowboyDetect" kindref="compound">SnowboyDetect</ref>*<sp/>ptr<sp/>=<sp/>Nan::ObjectWrap::Unwrap&lt;SnowboyDetect&gt;(info.Holder());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>ptr-&gt;<ref refid="classSnowboyDetect_1aedecd368895e785c00b3f5a259fb1ec1" kindref="member">detector</ref>-&gt;<ref refid="classsnowboy_1_1SnowboyDetect_1abfe4e91394ae31cbaf3222f6239ea5fb" kindref="member">Reset</ref>();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>info.GetReturnValue().Set(Nan::New(ret));</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="snowboy_8cc_1a64544017ce3852005f7a420d14341879" refkind="member"><highlight class="normal"><ref refid="snowboy_8cc_1aa79fb05080001a7fa93c1ee4888f4c51" kindref="member">NAN_METHOD</ref>(SnowboyDetect::RunDetection)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info[0]-&gt;IsObject())<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>Nan::ThrowTypeError(</highlight><highlight class="stringliteral">&quot;data<sp/>must<sp/>be<sp/>a<sp/>buffer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>Nan::MaybeLocal&lt;v8::Object&gt;<sp/>buffer<sp/>=<sp/>Nan::To&lt;v8::Object&gt;(info[0]);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>bufferData<sp/>=<sp/>node::Buffer::Data(buffer.ToLocalChecked());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bufferLength<sp/>=<sp/>node::Buffer::Length(buffer.ToLocalChecked());</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/><ref refid="namespacetraining__service_1aa2e72dd62a77982b353a0c86ebd14506" kindref="member">data</ref>(bufferData,<sp/>bufferLength);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="classSnowboyDetect" kindref="compound">SnowboyDetect</ref>*<sp/>ptr<sp/>=<sp/>Nan::ObjectWrap::Unwrap&lt;SnowboyDetect&gt;(info.Holder());</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>ptr-&gt;<ref refid="classSnowboyDetect_1aedecd368895e785c00b3f5a259fb1ec1" kindref="member">detector</ref>-&gt;<ref refid="classsnowboy_1_1SnowboyDetect_1aaa796336b277d2d12e6cc8f9d1a5061f" kindref="member">RunDetection</ref>(<ref refid="namespacetraining__service_1aa2e72dd62a77982b353a0c86ebd14506" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>info.GetReturnValue().Set(Nan::New(ret));</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="snowboy_8cc_1aeee2d5a8c138f86b265e8978cfb9bc58" refkind="member"><highlight class="normal"><ref refid="snowboy_8cc_1aa79fb05080001a7fa93c1ee4888f4c51" kindref="member">NAN_METHOD</ref>(SnowboyDetect::SetSensitivity)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info[0]-&gt;IsString())<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>Nan::ThrowTypeError(</highlight><highlight class="stringliteral">&quot;sensitivity<sp/>must<sp/>be<sp/>a<sp/>string&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>Nan::MaybeLocal&lt;v8::Object&gt;<sp/><ref refid="namespacedemo2_1ac2437e87ad06df169096d586fb339503" kindref="member">sensitivity</ref><sp/>=<sp/>Nan::To&lt;v8::Object&gt;(info[0]);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>Nan::Utf8String<sp/>sensitivityString(<ref refid="namespacedemo2_1ac2437e87ad06df169096d586fb339503" kindref="member">sensitivity</ref>.ToLocalChecked());</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><ref refid="classSnowboyDetect" kindref="compound">SnowboyDetect</ref>*<sp/>ptr<sp/>=<sp/>Nan::ObjectWrap::Unwrap&lt;SnowboyDetect&gt;(info.Holder());</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>ptr-&gt;<ref refid="classSnowboyDetect_1aedecd368895e785c00b3f5a259fb1ec1" kindref="member">detector</ref>-&gt;<ref refid="classsnowboy_1_1SnowboyDetect_1a321450db9feb625c1e68b957e1db9d3b" kindref="member">SetSensitivity</ref>(*sensitivityString);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="snowboy_8cc_1afd3dad614cfea2db4d18278b5fd37179" refkind="member"><highlight class="normal"><ref refid="snowboy_8cc_1aa79fb05080001a7fa93c1ee4888f4c51" kindref="member">NAN_METHOD</ref>(SnowboyDetect::GetSensitivity)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><ref refid="classSnowboyDetect" kindref="compound">SnowboyDetect</ref>*<sp/>ptr<sp/>=<sp/>Nan::ObjectWrap::Unwrap&lt;SnowboyDetect&gt;(info.Holder());</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/><ref refid="namespacedemo2_1ac2437e87ad06df169096d586fb339503" kindref="member">sensitivity</ref><sp/>=<sp/>ptr-&gt;<ref refid="classSnowboyDetect_1aedecd368895e785c00b3f5a259fb1ec1" kindref="member">detector</ref>-&gt;<ref refid="classsnowboy_1_1SnowboyDetect_1a03393a9a7012e5a73cafe1fbdd5bcfe8" kindref="member">GetSensitivity</ref>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>info.GetReturnValue().Set(Nan::New(<ref refid="namespacedemo2_1ac2437e87ad06df169096d586fb339503" kindref="member">sensitivity</ref>).ToLocalChecked());</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="snowboy_8cc_1a878c58a6c52e69a5f31ab8b1174208ed" refkind="member"><highlight class="normal"><ref refid="snowboy_8cc_1aa79fb05080001a7fa93c1ee4888f4c51" kindref="member">NAN_METHOD</ref>(SnowboyDetect::SetAudioGain)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info[0]-&gt;IsNumber())<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>Nan::ThrowTypeError(</highlight><highlight class="stringliteral">&quot;gain<sp/>must<sp/>be<sp/>a<sp/>number&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>Nan::MaybeLocal&lt;v8::Number&gt;<sp/>gain<sp/>=<sp/>Nan::To&lt;v8::Number&gt;(info[0]);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="classSnowboyDetect" kindref="compound">SnowboyDetect</ref>*<sp/>ptr<sp/>=<sp/>Nan::ObjectWrap::Unwrap&lt;SnowboyDetect&gt;(info.Holder());</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>ptr-&gt;<ref refid="classSnowboyDetect_1aedecd368895e785c00b3f5a259fb1ec1" kindref="member">detector</ref>-&gt;<ref refid="classsnowboy_1_1SnowboyDetect_1a96f13fc5d1116b5b753b8f40e4efbed1" kindref="member">SetAudioGain</ref>(gain.ToLocalChecked()-&gt;Value());</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="snowboy_8cc_1aa20304653c9712b74a905abb09d960a0" refkind="member"><highlight class="normal"><ref refid="snowboy_8cc_1aa79fb05080001a7fa93c1ee4888f4c51" kindref="member">NAN_METHOD</ref>(SnowboyDetect::UpdateModel)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><ref refid="classSnowboyDetect" kindref="compound">SnowboyDetect</ref>*<sp/>ptr<sp/>=<sp/>Nan::ObjectWrap::Unwrap&lt;SnowboyDetect&gt;(info.Holder());</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>ptr-&gt;<ref refid="classSnowboyDetect_1aedecd368895e785c00b3f5a259fb1ec1" kindref="member">detector</ref>-&gt;<ref refid="classsnowboy_1_1SnowboyDetect_1a32cc1153122d4b66ddbf9e9eb781c334" kindref="member">UpdateModel</ref>();</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="snowboy_8cc_1aba66cc59f8e4ad3d24a5faee2ab55150" refkind="member"><highlight class="normal"><ref refid="snowboy_8cc_1aa79fb05080001a7fa93c1ee4888f4c51" kindref="member">NAN_METHOD</ref>(SnowboyDetect::NumHotwords)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><ref refid="classSnowboyDetect" kindref="compound">SnowboyDetect</ref>*<sp/>ptr<sp/>=<sp/>Nan::ObjectWrap::Unwrap&lt;SnowboyDetect&gt;(info.Holder());</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numHotwords<sp/>=<sp/>ptr-&gt;<ref refid="classSnowboyDetect_1aedecd368895e785c00b3f5a259fb1ec1" kindref="member">detector</ref>-&gt;<ref refid="classsnowboy_1_1SnowboyDetect_1a365477359a1ff8a3aed1d4c9953ad2da" kindref="member">NumHotwords</ref>();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>info.GetReturnValue().Set(Nan::New(numHotwords));</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="snowboy_8cc_1ade46c942f3e0e779e146fba5d224b0a5" refkind="member"><highlight class="normal"><ref refid="snowboy_8cc_1aa79fb05080001a7fa93c1ee4888f4c51" kindref="member">NAN_METHOD</ref>(SnowboyDetect::SampleRate)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><ref refid="classSnowboyDetect" kindref="compound">SnowboyDetect</ref>*<sp/>ptr<sp/>=<sp/>Nan::ObjectWrap::Unwrap&lt;SnowboyDetect&gt;(info.Holder());</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sampleRate<sp/>=<sp/>ptr-&gt;<ref refid="classSnowboyDetect_1aedecd368895e785c00b3f5a259fb1ec1" kindref="member">detector</ref>-&gt;<ref refid="classsnowboy_1_1SnowboyDetect_1a7552785e3d3747b3a0d96b6343299cea" kindref="member">SampleRate</ref>();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>info.GetReturnValue().Set(Nan::New(sampleRate));</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="snowboy_8cc_1a29479dfbf399da347806229b3bd8ae01" refkind="member"><highlight class="normal"><ref refid="snowboy_8cc_1aa79fb05080001a7fa93c1ee4888f4c51" kindref="member">NAN_METHOD</ref>(SnowboyDetect::NumChannels)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><ref refid="classSnowboyDetect" kindref="compound">SnowboyDetect</ref>*<sp/>ptr<sp/>=<sp/>Nan::ObjectWrap::Unwrap&lt;SnowboyDetect&gt;(info.Holder());</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numChannels<sp/>=<sp/>ptr-&gt;<ref refid="classSnowboyDetect_1aedecd368895e785c00b3f5a259fb1ec1" kindref="member">detector</ref>-&gt;<ref refid="classsnowboy_1_1SnowboyDetect_1a9a403ad321b346c55f3bd93e08452e6d" kindref="member">NumChannels</ref>();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>info.GetReturnValue().Set(Nan::New(numChannels));</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="snowboy_8cc_1a4b660ebe61fb2df0d11c167c38797340" refkind="member"><highlight class="normal"><ref refid="snowboy_8cc_1aa79fb05080001a7fa93c1ee4888f4c51" kindref="member">NAN_METHOD</ref>(SnowboyDetect::BitsPerSample)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><ref refid="classSnowboyDetect" kindref="compound">SnowboyDetect</ref>*<sp/>ptr<sp/>=<sp/>Nan::ObjectWrap::Unwrap&lt;SnowboyDetect&gt;(info.Holder());</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitsPerSample<sp/>=<sp/>ptr-&gt;<ref refid="classSnowboyDetect_1aedecd368895e785c00b3f5a259fb1ec1" kindref="member">detector</ref>-&gt;<ref refid="classsnowboy_1_1SnowboyDetect_1a56ce3da0094b7a21618d0309656ab5a6" kindref="member">BitsPerSample</ref>();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>info.GetReturnValue().Set(Nan::New(bitsPerSample));</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">NODE_MODULE(<ref refid="classSnowboyDetect" kindref="compound">SnowboyDetect</ref>,<sp/>SnowboyDetect::Init)</highlight></codeline>
    </programlisting>
    <location file="3rdparty/snowboy/swig/Node/snowboy.cc"/>
  </compounddef>
</doxygen>
