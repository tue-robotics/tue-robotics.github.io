<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="hotword__detector__node_8cpp" kind="file" language="C++">
    <compoundname>hotword_detector_node.cpp</compoundname>
    <includes refid="hotword__detector_8h" local="yes">snowboy_ros/hotword_detector.h</includes>
    <includes local="no">ros/node_handle.h</includes>
    <includes local="no">ros/debug.h</includes>
    <includes local="no">audio_common_msgs/AudioData.h</includes>
    <includes local="no">std_msgs/String.h</includes>
    <includes local="no">dynamic_reconfigure/server.h</includes>
    <includes local="no">snowboy_ros/SnowboyReconfigureConfig.h</includes>
    <includes local="no">boost/filesystem.hpp</includes>
    <incdepgraph>
      <node id="7">
        <label>ros/debug.h</label>
      </node>
      <node id="4">
        <label>memory</label>
        <link refid="cpp/header/memory" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="10">
        <label>dynamic_reconfigure/server.h</label>
      </node>
      <node id="3">
        <label>snowboy/include/snowboy-detect.h</label>
        <link refid="snowboy-detect_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>snowboy_ros/hotword_detector.h</label>
        <link refid="hotword__detector_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>snowboy_ros/SnowboyReconfigureConfig.h</label>
      </node>
      <node id="12">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="1">
        <label>hotword_detector_node.cpp</label>
        <link refid="hotword__detector__node_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>std_msgs/String.h</label>
      </node>
      <node id="5">
        <label>string</label>
        <link refid="cpp/header/string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="6">
        <label>ros/node_handle.h</label>
      </node>
      <node id="8">
        <label>audio_common_msgs/AudioData.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="classsnowboy__ros_1_1HotwordDetectorNode" prot="public">snowboy_ros::HotwordDetectorNode</innerclass>
    <innernamespace refid="namespacesnowboy__ros">snowboy_ros</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="hotword__detector__node_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hotword_detector_node.cpp" line="176" column="5" bodyfile="src/hotword_detector_node.cpp" bodystart="176" bodyend="193"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hotword__detector_8h" kindref="compound">snowboy_ros/hotword_detector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/node_handle.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/debug.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;audio_common_msgs/AudioData.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;std_msgs/String.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dynamic_reconfigure/server.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;snowboy_ros/SnowboyReconfigureConfig.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/filesystem.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesnowboy__ros" kindref="compound">snowboy_ros</ref></highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="classsnowboy__ros_1_1HotwordDetectorNode" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsnowboy__ros_1_1HotwordDetectorNode" kindref="compound">HotwordDetectorNode</ref></highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22" refid="classsnowboy__ros_1_1HotwordDetectorNode_1a7fa10cb89214daad1d69008bb62d6200" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1a7fa10cb89214daad1d69008bb62d6200" kindref="member">HotwordDetectorNode</ref>():</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1a28dceb25549ce3b00bf67a6ac65ab81f" kindref="member">nh_</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1a3e99af88323b1d5cc928b5e86c265229" kindref="member">nh_p_</ref>(</highlight><highlight class="stringliteral">&quot;~&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classsnowboy__ros_1_1HotwordDetectorNode_1a95f50f63fb6be84186c0cd7bdd892c2a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1a95f50f63fb6be84186c0cd7bdd892c2a" kindref="member">initialize</ref>()</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1ad12c05be682dedb7ebc1f7e4fcc18ee3" kindref="member">audio_sub_</ref><sp/>=<sp/><ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1a28dceb25549ce3b00bf67a6ac65ab81f" kindref="member">nh_</ref>.subscribe(</highlight><highlight class="stringliteral">&quot;microphone&quot;</highlight><highlight class="normal">,<sp/>1000,<sp/>&amp;<ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1a7f752752402beea26f93a7d7c24e00af" kindref="member">HotwordDetectorNode::audioCallback</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1afb1744144cb4bdd445b9989f78eb3f91" kindref="member">hotword_pub_</ref><sp/>=<sp/><ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1a28dceb25549ce3b00bf67a6ac65ab81f" kindref="member">nh_</ref>.advertise&lt;std_msgs::String&gt;(</highlight><highlight class="stringliteral">&quot;hotword_detection&quot;</highlight><highlight class="normal">,<sp/>10);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>resource_filename;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1a3e99af88323b1d5cc928b5e86c265229" kindref="member">nh_p_</ref>.getParam(</highlight><highlight class="stringliteral">&quot;resource_filename&quot;</highlight><highlight class="normal">,<sp/>resource_filename))</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;Mandatory<sp/>parameter<sp/>&apos;resource_filename&apos;<sp/>not<sp/>present<sp/>on<sp/>the<sp/>parameter<sp/>server&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!boost::filesystem::exists(<sp/>resource_filename<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;Resource<sp/>&apos;%s&apos;<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal">,<sp/>resource_filename.c_str());</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>resource_extension<sp/>=<sp/>boost::filesystem::extension(resource_filename);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>resource_extension<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;.res&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;&apos;%s&apos;<sp/>not<sp/>a<sp/>valid<sp/>Snowboy<sp/>resource<sp/>extension<sp/>(&apos;.res&apos;).&quot;</highlight><highlight class="normal">,<sp/>resource_filename.c_str());</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>model_filename;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1a3e99af88323b1d5cc928b5e86c265229" kindref="member">nh_p_</ref>.getParam(</highlight><highlight class="stringliteral">&quot;model_filename&quot;</highlight><highlight class="normal">,<sp/>model_filename))</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;Mandatory<sp/>parameter<sp/>&apos;model_filename&apos;<sp/>not<sp/>present<sp/>on<sp/>the<sp/>parameter<sp/>server&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!boost::filesystem::exists(<sp/>model_filename<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;Model<sp/>&apos;%s&apos;<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal">,<sp/>model_filename.<ref refid="cpp/string/basic_string/c_str" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">c_str</ref>());</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>model_extension<sp/>=<sp/>boost::filesystem::extension(model_filename);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>model_extension<sp/><sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;.pmdl&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>model_extension<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;.umdl&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;Model<sp/>&apos;%s&apos;,<sp/>not<sp/>a<sp/>valid<sp/>Snowboy<sp/>model<sp/>extension<sp/>(&apos;.pmdl&apos;,<sp/>&apos;.umdl&apos;).&quot;</highlight><highlight class="normal">,<sp/>resource_filename.c_str());</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1a53b503af7fdf2820b1498e45900a2d1b" kindref="member">hotword_string_</ref><sp/>=<sp/><ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1a3e99af88323b1d5cc928b5e86c265229" kindref="member">nh_p_</ref>.param(</highlight><highlight class="stringliteral">&quot;hotword_string&quot;</highlight><highlight class="normal">,<sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>(</highlight><highlight class="stringliteral">&quot;hotword_detection&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1a24b4eb7b1216876011d715955e3cbcf8" kindref="member">detector_</ref>.<ref refid="classsnowboy__ros_1_1HotwordDetector_1ab9345482f351593529fcffe00618b36f" kindref="member">initialize</ref>(resource_filename.c_str(),<sp/>model_filename.<ref refid="cpp/string/basic_string/c_str" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">c_str</ref>());</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1ab235512b6ceb28f92d8237de8897f7a9" kindref="member">dynamic_reconfigure_server_</ref>.setCallback(boost::bind(&amp;<ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1a13e592472121f6b07a34d11b311b16f8" kindref="member">HotwordDetectorNode::reconfigureCallback</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_1,<sp/>_2));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="classsnowboy__ros_1_1HotwordDetectorNode_1a28dceb25549ce3b00bf67a6ac65ab81f" refkind="member"><highlight class="normal"><sp/><sp/>ros::NodeHandle<sp/><ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1a28dceb25549ce3b00bf67a6ac65ab81f" kindref="member">nh_</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="classsnowboy__ros_1_1HotwordDetectorNode_1a3e99af88323b1d5cc928b5e86c265229" refkind="member"><highlight class="normal"><sp/><sp/>ros::NodeHandle<sp/><ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1a3e99af88323b1d5cc928b5e86c265229" kindref="member">nh_p_</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classsnowboy__ros_1_1HotwordDetectorNode_1ad12c05be682dedb7ebc1f7e4fcc18ee3" refkind="member"><highlight class="normal"><sp/><sp/>ros::Subscriber<sp/><ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1ad12c05be682dedb7ebc1f7e4fcc18ee3" kindref="member">audio_sub_</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classsnowboy__ros_1_1HotwordDetectorNode_1afb1744144cb4bdd445b9989f78eb3f91" refkind="member"><highlight class="normal"><sp/><sp/>ros::Publisher<sp/><ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1afb1744144cb4bdd445b9989f78eb3f91" kindref="member">hotword_pub_</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="classsnowboy__ros_1_1HotwordDetectorNode_1ab235512b6ceb28f92d8237de8897f7a9" refkind="member"><highlight class="normal"><sp/><sp/>dynamic_reconfigure::Server&lt;SnowboyReconfigureConfig&gt;<sp/><ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1ab235512b6ceb28f92d8237de8897f7a9" kindref="member">dynamic_reconfigure_server_</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classsnowboy__ros_1_1HotwordDetectorNode_1a53b503af7fdf2820b1498e45900a2d1b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/><ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1a53b503af7fdf2820b1498e45900a2d1b" kindref="member">hotword_string_</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="classsnowboy__ros_1_1HotwordDetectorNode_1a24b4eb7b1216876011d715955e3cbcf8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsnowboy__ros_1_1HotwordDetector" kindref="compound">HotwordDetector</ref><sp/><ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1a24b4eb7b1216876011d715955e3cbcf8" kindref="member">detector_</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="classsnowboy__ros_1_1HotwordDetectorNode_1a13e592472121f6b07a34d11b311b16f8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1a13e592472121f6b07a34d11b311b16f8" kindref="member">reconfigureCallback</ref>(SnowboyReconfigureConfig<sp/>cfg,<sp/>uint32_t<sp/></highlight><highlight class="comment">/*level*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1a24b4eb7b1216876011d715955e3cbcf8" kindref="member">detector_</ref>.<ref refid="classsnowboy__ros_1_1HotwordDetector_1a7e45c90591659da86b7766ac88858fde" kindref="member">configure</ref>(cfg.sensitivity,<sp/>cfg.audio_gain);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;SnowboyROS<sp/>(Re)Configured&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="classsnowboy__ros_1_1HotwordDetectorNode_1a7f752752402beea26f93a7d7c24e00af" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1a7f752752402beea26f93a7d7c24e00af" kindref="member">audioCallback</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>audio_common_msgs::AudioDataConstPtr&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg-&gt;data.size()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sound<sp/>signal<sp/>is<sp/>encoded<sp/>with<sp/>bit<sp/>depth<sp/>16<sp/>and<sp/>cut<sp/>up<sp/>in<sp/>a<sp/>byte<sp/>array.<sp/>RunDetection<sp/>wants<sp/>it<sp/>as<sp/>an<sp/>array<sp/>of</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>int16_t.<sp/>Therefore,<sp/>we<sp/>bit<sp/>shift<sp/>the<sp/>second<sp/>(MSB)<sp/>byte<sp/>of<sp/>a<sp/>sample<sp/>by<sp/>8<sp/>and<sp/>cast<sp/>it<sp/>to<sp/>an<sp/>int16_t<sp/>and<sp/>add<sp/>the</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>first<sp/>(LSB)<sp/>byte<sp/>of<sp/>the<sp/>sample<sp/>to<sp/>the<sp/>result<sp/>(also<sp/>after<sp/>typecast).</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>msg-&gt;data.size()<sp/>%<sp/>2<sp/>)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;Not<sp/>an<sp/>even<sp/>number<sp/>of<sp/>bytes<sp/>in<sp/>this<sp/>message!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>sample_array[msg-&gt;data.size()/2];</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>msg-&gt;data.size();<sp/>i+=2<sp/>)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample_array[i/2]<sp/>=<sp/>((int16_t)<sp/>(msg-&gt;data[i+1])<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>(int16_t)<sp/>(msg-&gt;data[i]);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1a24b4eb7b1216876011d715955e3cbcf8" kindref="member">detector_</ref>.<ref refid="classsnowboy__ros_1_1HotwordDetector_1a7dcab256a244ab967eed30ac00337b12" kindref="member">runDetection</ref>(<sp/>&amp;sample_array[0],<sp/>msg-&gt;data.size()/2);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_DEBUG(</highlight><highlight class="stringliteral">&quot;Hotword<sp/>detected!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std_msgs::String<sp/>hotword_msg;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hotword_msg.data<sp/>=<sp/><ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1a53b503af7fdf2820b1498e45900a2d1b" kindref="member">hotword_string_</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1afb1744144cb4bdd445b9989f78eb3f91" kindref="member">hotword_pub_</ref>.publish(hotword_msg);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>-3)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;Hotword<sp/>detector<sp/>not<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;Snowboy<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal">};</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="hotword__detector__node_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="hotword__detector__node_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>ros::init(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;snowboy_node&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><ref refid="classsnowboy__ros_1_1HotwordDetectorNode" kindref="compound">snowboy_ros::HotwordDetectorNode</ref><sp/>ros_hotword_detector_node;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ros_hotword_detector_node.<ref refid="classsnowboy__ros_1_1HotwordDetectorNode_1a95f50f63fb6be84186c0cd7bdd892c2a" kindref="member">initialize</ref>())</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::spin();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>snowboy_node&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/hotword_detector_node.cpp"/>
  </compounddef>
</doxygen>
