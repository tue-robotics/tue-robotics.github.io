<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="demo_8cc" kind="file" language="C++">
    <compoundname>demo.cc</compoundname>
    <includes local="no">cassert</includes>
    <includes local="no">csignal</includes>
    <includes local="no">iostream</includes>
    <includes local="no">pa_ringbuffer.h</includes>
    <includes local="no">pa_util.h</includes>
    <includes local="no">portaudio.h</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes refid="snowboy-detect_8h" local="yes">include/snowboy-detect.h</includes>
    <incdepgraph>
      <node id="5">
        <label>pa_ringbuffer.h</label>
      </node>
      <node id="9">
        <label>vector</label>
        <link refid="cpp/header/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="4">
        <label>iostream</label>
        <link refid="cpp/header/iostream" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="11">
        <label>memory</label>
        <link refid="cpp/header/memory" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="6">
        <label>pa_util.h</label>
      </node>
      <node id="10">
        <label>include/snowboy-detect.h</label>
        <link refid="snowboy-detect_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>csignal</label>
        <link refid="cpp/header/csignal" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="2">
        <label>cassert</label>
        <link refid="cpp/header/cassert" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="7">
        <label>portaudio.h</label>
      </node>
      <node id="8">
        <label>string</label>
        <link refid="cpp/header/string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="1">
        <label>demo.cc</label>
        <link refid="demo_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classPortAudioWrapper" prot="public">PortAudioWrapper</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="demo_8cc_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/examples/C++/demo.cc" line="178" column="5" bodyfile="3rdparty/snowboy/examples/C++/demo.cc" bodystart="178" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="demo_8cc_1aed44d686402ba3bc41a248d834d1fcce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PortAudioCallback</definition>
        <argsstring>(const void *input, void *output, unsigned long frame_count, const PaStreamCallbackTimeInfo *time_info, PaStreamCallbackFlags status_flags, void *user_data)</argsstring>
        <name>PortAudioCallback</name>
        <param>
          <type>const void *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>frame_count</declname>
        </param>
        <param>
          <type>const PaStreamCallbackTimeInfo *</type>
          <declname>time_info</declname>
        </param>
        <param>
          <type>PaStreamCallbackFlags</type>
          <declname>status_flags</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/examples/C++/demo.cc" line="162" column="5" bodyfile="3rdparty/snowboy/examples/C++/demo.cc" bodystart="162" bodyend="171" declfile="3rdparty/snowboy/examples/C++/demo.cc" declline="16" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="demo_8cc_1a01af5df9d4270d594f2a4391b5a775ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SignalHandler</definition>
        <argsstring>(int signal)</argsstring>
        <name>SignalHandler</name>
        <param>
          <type>int</type>
          <declname>signal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/examples/C++/demo.cc" line="173" column="6" bodyfile="3rdparty/snowboy/examples/C++/demo.cc" bodystart="173" bodyend="176"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>example/C++/demo.cc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/><sp/>KITT.AI<sp/>(author:<sp/>Guoguo<sp/>Chen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cpp/header/cassert" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">cassert</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cpp/header/csignal" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">csignal</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cpp/header/iostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">iostream</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pa_ringbuffer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pa_util.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;portaudio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cpp/header/string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">string</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cpp/header/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">vector</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="snowboy-detect_8h" kindref="compound">include/snowboy-detect.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="demo_8cc_1aed44d686402ba3bc41a248d834d1fcce" kindref="member">PortAudioCallback</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>input,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>output,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frame_count,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PaStreamCallbackTimeInfo*<sp/>time_info,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PaStreamCallbackFlags<sp/>status_flags,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classPortAudioWrapper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classPortAudioWrapper" kindref="compound">PortAudioWrapper</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classPortAudioWrapper_1a26449c6c1932fcc797227cbd16ed6a6e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classPortAudioWrapper_1a26449c6c1932fcc797227cbd16ed6a6e" kindref="member">PortAudioWrapper</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sample_rate,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_channels,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits_per_sample)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPortAudioWrapper_1af450a06c9a36cc9a9ac7aa891b5ebe4c" kindref="member">num_lost_samples_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPortAudioWrapper_1a192e461505d5065549f387fed56a868a" kindref="member">min_read_samples_</ref><sp/>=<sp/>sample_rate<sp/>*<sp/>0.1;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPortAudioWrapper_1a46b1c64693229864bf3df718a6d8fed2" kindref="member">Init</ref>(sample_rate,<sp/>num_channels,<sp/>bits_per_sample);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reads<sp/>data<sp/>from<sp/>ring<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="34" refid="classPortAudioWrapper_1aafa4427e0060cec6b60e1f8a512599c6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPortAudioWrapper_1aafa4427e0060cec6b60e1f8a512599c6" kindref="member">Read</ref>(<ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;T&gt;</ref>*<sp/><ref refid="namespacetraining__service_1aa2e72dd62a77982b353a0c86ebd14506" kindref="member">data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacetraining__service_1aa2e72dd62a77982b353a0c86ebd14506" kindref="member">data</ref><sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Checks<sp/>ring<sp/>buffer<sp/>overflow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classPortAudioWrapper_1af450a06c9a36cc9a9ac7aa891b5ebe4c" kindref="member">num_lost_samples_</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/io/cerr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cerr</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Lost<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classPortAudioWrapper_1af450a06c9a36cc9a9ac7aa891b5ebe4c" kindref="member">num_lost_samples_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>samples<sp/>due<sp/>to<sp/>ring&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>buffer<sp/>overflow.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPortAudioWrapper_1af450a06c9a36cc9a9ac7aa891b5ebe4c" kindref="member">num_lost_samples_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>ring_buffer_size_t<sp/>num_available_samples<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_available_samples<sp/>=</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PaUtil_GetRingBufferReadAvailable(&amp;<ref refid="classPortAudioWrapper_1aaa7d54a05d51f37c695b6040e99bc175" kindref="member">pa_ringbuffer_</ref>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_available_samples<sp/>&gt;=<sp/><ref refid="classPortAudioWrapper_1a192e461505d5065549f387fed56a868a" kindref="member">min_read_samples_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Pa_Sleep(5);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reads<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>num_available_samples<sp/>=<sp/>PaUtil_GetRingBufferReadAvailable(&amp;<ref refid="classPortAudioWrapper_1aaa7d54a05d51f37c695b6040e99bc175" kindref="member">pa_ringbuffer_</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetraining__service_1aa2e72dd62a77982b353a0c86ebd14506" kindref="member">data</ref>-&gt;resize(num_available_samples);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>ring_buffer_size_t<sp/>num_read_samples<sp/>=<sp/>PaUtil_ReadRingBuffer(</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classPortAudioWrapper_1aaa7d54a05d51f37c695b6040e99bc175" kindref="member">pa_ringbuffer_</ref>,<sp/><ref refid="namespacetraining__service_1aa2e72dd62a77982b353a0c86ebd14506" kindref="member">data</ref>-&gt;data(),<sp/>num_available_samples);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_read_samples<sp/>!=<sp/>num_available_samples)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/io/cerr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cerr</ref><sp/>&lt;&lt;<sp/>num_available_samples<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>samples<sp/>were<sp/>available,<sp/><sp/>but<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;only<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>num_read_samples<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>samples<sp/>were<sp/>read.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classPortAudioWrapper_1a5994b8399a8767d9b926178dc661eb92" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classPortAudioWrapper_1a5994b8399a8767d9b926178dc661eb92" kindref="member">Callback</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>input,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>output,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frame_count,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PaStreamCallbackTimeInfo*<sp/>time_info,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PaStreamCallbackFlags<sp/>status_flags)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input<sp/>audio.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>ring_buffer_size_t<sp/>num_written_samples<sp/>=</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PaUtil_WriteRingBuffer(&amp;<ref refid="classPortAudioWrapper_1aaa7d54a05d51f37c695b6040e99bc175" kindref="member">pa_ringbuffer_</ref>,<sp/>input,<sp/>frame_count);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPortAudioWrapper_1af450a06c9a36cc9a9ac7aa891b5ebe4c" kindref="member">num_lost_samples_</ref><sp/>+=<sp/>frame_count<sp/>-<sp/>num_written_samples;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>paContinue;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classPortAudioWrapper_1a61b9b6f951fe46cc77c27c600bab6236" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classPortAudioWrapper_1a61b9b6f951fe46cc77c27c600bab6236" kindref="member">~PortAudioWrapper</ref>()<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>Pa_StopStream(<ref refid="classPortAudioWrapper_1a0b75d4ee343a27444c30ea93ae685509" kindref="member">pa_stream_</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>Pa_CloseStream(<ref refid="classPortAudioWrapper_1a0b75d4ee343a27444c30ea93ae685509" kindref="member">pa_stream_</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>Pa_Terminate();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>PaUtil_FreeMemory(<ref refid="classPortAudioWrapper_1a9e16bb191e59685d59933d70ec831bae" kindref="member">ringbuffer_</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="classPortAudioWrapper_1a46b1c64693229864bf3df718a6d8fed2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classPortAudioWrapper_1a46b1c64693229864bf3df718a6d8fed2" kindref="member">Init</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sample_rate,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_channels,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits_per_sample)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocates<sp/>ring<sp/>buffer<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ringbuffer_size<sp/>=<sp/>16384;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPortAudioWrapper_1a9e16bb191e59685d59933d70ec831bae" kindref="member">ringbuffer_</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PaUtil_AllocateMemory(bits_per_sample<sp/>/<sp/>8<sp/>*<sp/>ringbuffer_size));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classPortAudioWrapper_1a9e16bb191e59685d59933d70ec831bae" kindref="member">ringbuffer_</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/io/cerr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cerr</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Fail<sp/>to<sp/>allocate<sp/>memory<sp/>for<sp/>ring<sp/>buffer.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initializes<sp/>PortAudio<sp/>ring<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>ring_buffer_size_t<sp/>rb_init_ans<sp/>=</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PaUtil_InitializeRingBuffer(&amp;<ref refid="classPortAudioWrapper_1aaa7d54a05d51f37c695b6040e99bc175" kindref="member">pa_ringbuffer_</ref>,<sp/>bits_per_sample<sp/>/<sp/>8,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ringbuffer_size,<sp/><ref refid="classPortAudioWrapper_1a9e16bb191e59685d59933d70ec831bae" kindref="member">ringbuffer_</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rb_init_ans<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/io/cerr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cerr</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Ring<sp/>buffer<sp/>size<sp/>is<sp/>not<sp/>power<sp/>of<sp/>2.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initializes<sp/>PortAudio.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>PaError<sp/>pa_init_ans<sp/>=<sp/>Pa_Initialize();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pa_init_ans<sp/>!=<sp/>paNoError)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/io/cerr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cerr</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Fail<sp/>to<sp/>initialize<sp/>PortAudio,<sp/>error<sp/>message<sp/>is<sp/>\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>Pa_GetErrorText(pa_init_ans)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>PaError<sp/>pa_open_ans;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bits_per_sample<sp/>==<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pa_open_ans<sp/>=<sp/>Pa_OpenDefaultStream(</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classPortAudioWrapper_1a0b75d4ee343a27444c30ea93ae685509" kindref="member">pa_stream_</ref>,<sp/>num_channels,<sp/>0,<sp/>paUInt8,<sp/>sample_rate,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paFramesPerBufferUnspecified,<sp/><ref refid="demo_8cc_1aed44d686402ba3bc41a248d834d1fcce" kindref="member">PortAudioCallback</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bits_per_sample<sp/>==<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pa_open_ans<sp/>=<sp/>Pa_OpenDefaultStream(</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classPortAudioWrapper_1a0b75d4ee343a27444c30ea93ae685509" kindref="member">pa_stream_</ref>,<sp/>num_channels,<sp/>0,<sp/>paInt16,<sp/>sample_rate,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paFramesPerBufferUnspecified,<sp/><ref refid="demo_8cc_1aed44d686402ba3bc41a248d834d1fcce" kindref="member">PortAudioCallback</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bits_per_sample<sp/>==<sp/>32)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pa_open_ans<sp/>=<sp/>Pa_OpenDefaultStream(</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classPortAudioWrapper_1a0b75d4ee343a27444c30ea93ae685509" kindref="member">pa_stream_</ref>,<sp/>num_channels,<sp/>0,<sp/>paInt32,<sp/>sample_rate,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paFramesPerBufferUnspecified,<sp/><ref refid="demo_8cc_1aed44d686402ba3bc41a248d834d1fcce" kindref="member">PortAudioCallback</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/io/cerr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cerr</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>BitsPerSample:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>bits_per_sample</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pa_open_ans<sp/>!=<sp/>paNoError)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/io/cerr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cerr</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Fail<sp/>to<sp/>open<sp/>PortAudio<sp/>stream,<sp/>error<sp/>message<sp/>is<sp/>\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>Pa_GetErrorText(pa_open_ans)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>PaError<sp/>pa_stream_start_ans<sp/>=<sp/>Pa_StartStream(<ref refid="classPortAudioWrapper_1a0b75d4ee343a27444c30ea93ae685509" kindref="member">pa_stream_</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pa_stream_start_ans<sp/>!=<sp/>paNoError)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/io/cerr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cerr</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Fail<sp/>to<sp/>start<sp/>PortAudio<sp/>stream,<sp/>error<sp/>message<sp/>is<sp/>\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>Pa_GetErrorText(pa_stream_start_ans)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pointer<sp/>to<sp/>the<sp/>ring<sp/>buffer<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="classPortAudioWrapper_1a9e16bb191e59685d59933d70ec831bae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classPortAudioWrapper_1a9e16bb191e59685d59933d70ec831bae" kindref="member">ringbuffer_</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Ring<sp/>buffer<sp/>wrapper<sp/>used<sp/>in<sp/>PortAudio.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="classPortAudioWrapper_1aaa7d54a05d51f37c695b6040e99bc175" refkind="member"><highlight class="normal"><sp/><sp/>PaUtilRingBuffer<sp/><ref refid="classPortAudioWrapper_1aaa7d54a05d51f37c695b6040e99bc175" kindref="member">pa_ringbuffer_</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pointer<sp/>to<sp/>PortAudio<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="classPortAudioWrapper_1a0b75d4ee343a27444c30ea93ae685509" refkind="member"><highlight class="normal"><sp/><sp/>PaStream*<sp/><ref refid="classPortAudioWrapper_1a0b75d4ee343a27444c30ea93ae685509" kindref="member">pa_stream_</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>lost<sp/>samples<sp/>at<sp/>each<sp/>Read()<sp/>due<sp/>to<sp/>ring<sp/>buffer<sp/>overflow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="classPortAudioWrapper_1af450a06c9a36cc9a9ac7aa891b5ebe4c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classPortAudioWrapper_1af450a06c9a36cc9a9ac7aa891b5ebe4c" kindref="member">num_lost_samples_</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>this<sp/>number<sp/>of<sp/>samples<sp/>in<sp/>each<sp/>Read()<sp/>call.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="classPortAudioWrapper_1a192e461505d5065549f387fed56a868a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classPortAudioWrapper_1a192e461505d5065549f387fed56a868a" kindref="member">min_read_samples_</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="demo_8cc_1aed44d686402ba3bc41a248d834d1fcce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="demo_8cc_1aed44d686402ba3bc41a248d834d1fcce" kindref="member">PortAudioCallback</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>input,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>output,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frame_count,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PaStreamCallbackTimeInfo*<sp/>time_info,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PaStreamCallbackFlags<sp/>status_flags,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><ref refid="classPortAudioWrapper" kindref="compound">PortAudioWrapper</ref>*<sp/>pa_wrapper<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="classPortAudioWrapper" kindref="compound">PortAudioWrapper</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(user_data);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>pa_wrapper-&gt;<ref refid="classPortAudioWrapper_1a5994b8399a8767d9b926178dc661eb92" kindref="member">Callback</ref>(input,<sp/>output,<sp/>frame_count,<sp/>time_info,<sp/>status_flags);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>paContinue;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="demo_8cc_1a01af5df9d4270d594f2a4391b5a775ec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="demo_8cc_1a01af5df9d4270d594f2a4391b5a775ec" kindref="member">SignalHandler</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>signal){</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><ref refid="cpp/io/cerr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cerr</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Caught<sp/>signal<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>signal<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>terminating...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="demo_8cc_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="demo_8cc_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv[])<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>usage<sp/>=</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Example<sp/>that<sp/>shows<sp/>how<sp/>to<sp/>use<sp/>Snowboy<sp/>in<sp/>C++.<sp/>Parameters<sp/>are\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;hard-coded<sp/>in<sp/>the<sp/>parameter<sp/>section.<sp/>Please<sp/>check<sp/>the<sp/>source<sp/>code<sp/>for\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;more<sp/>details.<sp/>Audio<sp/>is<sp/>captured<sp/>by<sp/>PortAudio.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;To<sp/>run<sp/>the<sp/>example:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>./demo\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Checks<sp/>the<sp/>command.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/io/cerr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cerr</ref><sp/>&lt;&lt;<sp/>usage;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Configures<sp/>signal<sp/>handling.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sigaction<sp/>sig_int_handler;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/>sig_int_handler.sa_handler<sp/>=<sp/><ref refid="demo_8cc_1a01af5df9d4270d594f2a4391b5a775ec" kindref="member">SignalHandler</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/>sigemptyset(&amp;sig_int_handler.sa_mask);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/>sig_int_handler.sa_flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/>sigaction(SIGINT,<sp/>&amp;sig_int_handler,<sp/>NULL);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameter<sp/>section.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>have<sp/>multiple<sp/>hotword<sp/>models<sp/>(e.g.,<sp/>2),<sp/>you<sp/>should<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;model_filename&gt;<sp/>and<sp/>&lt;sensitivity_str&gt;<sp/>as<sp/>follows:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>model_filename<sp/>=<sp/>&quot;resources/snowboy.umdl,resources/alexa.pmdl&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>sensitivity_str<sp/>=<sp/>&quot;0.4,0.4&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>resource_filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;resources/common.res&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>model_filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;resources/snowboy.umdl&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>sensitivity_str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0.5&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>audio_gain<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initializes<sp/>Snowboy<sp/>detector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><ref refid="classsnowboy_1_1SnowboyDetect" kindref="compound">snowboy::SnowboyDetect</ref><sp/><ref refid="namespacedemo_1a0c7129f681af48871b446575a26698de" kindref="member">detector</ref>(resource_filename,<sp/>model_filename);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><ref refid="namespacedemo_1a0c7129f681af48871b446575a26698de" kindref="member">detector</ref>.SetSensitivity(sensitivity_str);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><ref refid="namespacedemo_1a0c7129f681af48871b446575a26698de" kindref="member">detector</ref>.SetAudioGain(audio_gain);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initializes<sp/>PortAudio.<sp/>You<sp/>may<sp/>use<sp/>other<sp/>tools<sp/>to<sp/>capture<sp/>the<sp/>audio.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><ref refid="classPortAudioWrapper" kindref="compound">PortAudioWrapper</ref><sp/>pa_wrapper(<ref refid="namespacedemo_1a0c7129f681af48871b446575a26698de" kindref="member">detector</ref>.SampleRate(),</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacedemo_1a0c7129f681af48871b446575a26698de" kindref="member">detector</ref>.NumChannels(),<sp/><ref refid="namespacedemo_1a0c7129f681af48871b446575a26698de" kindref="member">detector</ref>.BitsPerSample());</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Runs<sp/>the<sp/>detection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>I<sp/>hard-coded<sp/>&lt;int16_t&gt;<sp/>as<sp/>data<sp/>type<sp/>because<sp/>detector.BitsPerSample()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>returns<sp/>16.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Listening...<sp/>Press<sp/>Ctrl+C<sp/>to<sp/>exit&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;int16_t&gt;</ref><sp/><ref refid="namespacetraining__service_1aa2e72dd62a77982b353a0c86ebd14506" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>pa_wrapper.<ref refid="classPortAudioWrapper_1aafa4427e0060cec6b60e1f8a512599c6" kindref="member">Read</ref>(&amp;<ref refid="namespacetraining__service_1aa2e72dd62a77982b353a0c86ebd14506" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacetraining__service_1aa2e72dd62a77982b353a0c86ebd14506" kindref="member">data</ref>.size()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="namespacedemo_1a0c7129f681af48871b446575a26698de" kindref="member">detector</ref>.RunDetection(<ref refid="namespacetraining__service_1aa2e72dd62a77982b353a0c86ebd14506" kindref="member">data</ref>.data(),<sp/><ref refid="namespacetraining__service_1aa2e72dd62a77982b353a0c86ebd14506" kindref="member">data</ref>.size());</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Hotword<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>result<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>detected!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="3rdparty/snowboy/examples/C++/demo.cc"/>
  </compounddef>
</doxygen>
