<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="snowboydecoder_8py" kind="file" language="Python">
    <compoundname>snowboydecoder.py</compoundname>
    <innerclass refid="classsnowboydecoder_1_1HotwordDetector" prot="public">snowboydecoder::HotwordDetector</innerclass>
    <innerclass refid="classsnowboydecoder_1_1RingBuffer" prot="public">snowboydecoder::RingBuffer</innerclass>
    <innernamespace refid="namespacesnowboydecoder">snowboydecoder</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacesnowboydecoder" refkind="compound"><highlight class="comment">#!/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>collections</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pyaudio</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>snowboydetect</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>wave</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logging</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">logging.basicConfig()</highlight></codeline>
<codeline lineno="12" refid="namespacesnowboydecoder_1a0a9e17da91fa38e4980d70341f1af701" refkind="member"><highlight class="normal">logger<sp/>=<sp/>logging.getLogger(</highlight><highlight class="stringliteral">&quot;snowboy&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13"><highlight class="normal">logger.setLevel(logging.INFO)</highlight></codeline>
<codeline lineno="14" refid="namespacesnowboydecoder_1a1e552ae6ff3e3ebc614f0a9256394cce" refkind="member"><highlight class="normal">TOP_DIR<sp/>=<sp/>os.path.dirname(os.path.abspath(__file__))</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="namespacesnowboydecoder_1ae9aa648d909800942df02cc34b56b83a" refkind="member"><highlight class="normal">RESOURCE_FILE<sp/>=<sp/>os.path.join(TOP_DIR,<sp/></highlight><highlight class="stringliteral">&quot;resources/common.res&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17" refid="namespacesnowboydecoder_1ae78f17cd44cb19906efdf4e4b57f1553" refkind="member"><highlight class="normal">DETECT_DING<sp/>=<sp/>os.path.join(TOP_DIR,<sp/></highlight><highlight class="stringliteral">&quot;resources/ding.wav&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18" refid="namespacesnowboydecoder_1a4c632caea64a9aaa6e1433c4253f7753" refkind="member"><highlight class="normal">DETECT_DONG<sp/>=<sp/>os.path.join(TOP_DIR,<sp/></highlight><highlight class="stringliteral">&quot;resources/dong.wav&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="classsnowboydecoder_1_1RingBuffer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsnowboydecoder_1_1RingBuffer" kindref="compound">RingBuffer</ref>(object):</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Ring<sp/>buffer<sp/>to<sp/>hold<sp/>audio<sp/>from<sp/>PortAudio&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classsnowboydecoder_1_1RingBuffer_1a0e81257f8756886d0fbfb195ccd5b681" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsnowboydecoder_1_1RingBuffer_1a0e81257f8756886d0fbfb195ccd5b681" kindref="member">__init__</ref>(self,<sp/>size<sp/>=<sp/>4096):</highlight></codeline>
<codeline lineno="24" refid="classsnowboydecoder_1_1RingBuffer_1affa1b97d95de05e29aed5966ac005569" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsnowboydecoder_1_1RingBuffer_1affa1b97d95de05e29aed5966ac005569" kindref="member">_buf</ref><sp/>=<sp/>collections.deque(maxlen=size)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classsnowboydecoder_1_1RingBuffer_1a8abd8bc5da6f36309861332258669790" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsnowboydecoder_1_1RingBuffer_1a8abd8bc5da6f36309861332258669790" kindref="member">extend</ref>(self,<sp/>data):</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Adds<sp/>data<sp/>to<sp/>the<sp/>end<sp/>of<sp/>buffer&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsnowboydecoder_1_1RingBuffer_1affa1b97d95de05e29aed5966ac005569" kindref="member">_buf</ref>.<ref refid="classsnowboydecoder_1_1RingBuffer_1a8abd8bc5da6f36309861332258669790" kindref="member">extend</ref>(data)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classsnowboydecoder_1_1RingBuffer_1ad083eb25f13fa3d7947caf62ca0d7353" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsnowboydecoder_1_1RingBuffer_1ad083eb25f13fa3d7947caf62ca0d7353" kindref="member">get</ref>(self):</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Retrieves<sp/>data<sp/>from<sp/>the<sp/>beginning<sp/>of<sp/>buffer<sp/>and<sp/>clears<sp/>it&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>bytes(bytearray(self.<ref refid="classsnowboydecoder_1_1RingBuffer_1affa1b97d95de05e29aed5966ac005569" kindref="member">_buf</ref>))</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsnowboydecoder_1_1RingBuffer_1affa1b97d95de05e29aed5966ac005569" kindref="member">_buf</ref>.clear()</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="namespacesnowboydecoder_1a828506a06fcca3526430747208f904aa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacesnowboydecoder_1a828506a06fcca3526430747208f904aa" kindref="member">play_audio_file</ref>(fname=DETECT_DING):</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Simple<sp/>callback<sp/>function<sp/>to<sp/>play<sp/>a<sp/>wave<sp/>file.<sp/>By<sp/>default<sp/>it<sp/>plays</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>a<sp/>Ding<sp/>sound.</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>str<sp/>fname:<sp/>wave<sp/>file<sp/>name</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:return:<sp/>None</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>ding_wav<sp/>=<sp/>wave.open(fname,<sp/></highlight><highlight class="stringliteral">&apos;rb&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>ding_data<sp/>=<sp/>ding_wav.readframes(ding_wav.getnframes())</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>audio<sp/>=<sp/>pyaudio.PyAudio()</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>stream_out<sp/>=<sp/>audio.open(</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format=audio.get_format_from_width(ding_wav.getsampwidth()),</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channels=ding_wav.getnchannels(),</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rate=ding_wav.getframerate(),<sp/>input=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>output=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>stream_out.start_stream()</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>stream_out.write(ding_data)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>time.sleep(0.2)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>stream_out.stop_stream()</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>stream_out.close()</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>audio.terminate()</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classsnowboydecoder_1_1HotwordDetector" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsnowboydecoder_1_1HotwordDetector" kindref="compound">HotwordDetector</ref>(object):</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Snowboy<sp/>decoder<sp/>to<sp/>detect<sp/>whether<sp/>a<sp/>keyword<sp/>specified<sp/>by<sp/>`decoder_model`</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>exists<sp/>in<sp/>a<sp/>microphone<sp/>input<sp/>stream.</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>decoder_model:<sp/>decoder<sp/>model<sp/>file<sp/>path,<sp/>a<sp/>string<sp/>or<sp/>a<sp/>list<sp/>of<sp/>strings</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>resource:<sp/>resource<sp/>file<sp/>path.</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>sensitivity:<sp/>decoder<sp/>sensitivity,<sp/>a<sp/>float<sp/>of<sp/>a<sp/>list<sp/>of<sp/>floats.</highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>bigger<sp/>the<sp/>value,<sp/>the<sp/>more<sp/>senstive<sp/>the</highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoder.<sp/>If<sp/>an<sp/>empty<sp/>list<sp/>is<sp/>provided,<sp/>then<sp/>the</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default<sp/>sensitivity<sp/>in<sp/>the<sp/>model<sp/>will<sp/>be<sp/>used.</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>audio_gain:<sp/>multiply<sp/>input<sp/>volume<sp/>by<sp/>this<sp/>factor.</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classsnowboydecoder_1_1HotwordDetector_1a22091f02a8fea2f6065f8bc45addf7fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsnowboydecoder_1_1HotwordDetector_1a22091f02a8fea2f6065f8bc45addf7fc" kindref="member">__init__</ref>(self,<sp/>decoder_model,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource=RESOURCE_FILE,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensitivity=[],</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>audio_gain=1):</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">audio_callback(in_data,<sp/>frame_count,<sp/>time_info,<sp/>status):</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsnowboydecoder_1_1HotwordDetector_1ae5f5881d045e26f9e750b5e03c99f29c" kindref="member">ring_buffer</ref>.extend(in_data)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>play_data<sp/>=<sp/>chr(0)<sp/>*<sp/>len(in_data)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>play_data,<sp/>pyaudio.paContinue</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tm<sp/>=<sp/>type(decoder_model)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ts<sp/>=<sp/>type(sensitivity)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>tm<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>list:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoder_model<sp/>=<sp/>[decoder_model]</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ts<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>list:</highlight></codeline>
<codeline lineno="87" refid="classsnowboydecoder_1_1HotwordDetector_1a443f1b4a74ff9e6dab682d9161b7aa52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensitivity<sp/>=<sp/>[sensitivity]</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">.join(decoder_model)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classsnowboydecoder_1_1HotwordDetector_1a45759e8fb8047abaf3697071cb88364c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsnowboydecoder_1_1HotwordDetector_1a443f1b4a74ff9e6dab682d9161b7aa52" kindref="member">detector</ref><sp/>=<sp/>snowboydetect.SnowboyDetect(</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource_filename=resource.encode(),<sp/>model_str=model_str.encode())</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsnowboydecoder_1_1HotwordDetector_1a443f1b4a74ff9e6dab682d9161b7aa52" kindref="member">detector</ref>.SetAudioGain(audio_gain)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsnowboydecoder_1_1HotwordDetector_1a45759e8fb8047abaf3697071cb88364c" kindref="member">num_hotwords</ref><sp/>=<sp/>self.<ref refid="classsnowboydecoder_1_1HotwordDetector_1a443f1b4a74ff9e6dab682d9161b7aa52" kindref="member">detector</ref>.NumHotwords()</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(decoder_model)<sp/>&gt;<sp/>1<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>len(sensitivity)<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensitivity<sp/>=<sp/>sensitivity*self.<ref refid="classsnowboydecoder_1_1HotwordDetector_1a45759e8fb8047abaf3697071cb88364c" kindref="member">num_hotwords</ref></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(sensitivity)<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>self.<ref refid="classsnowboydecoder_1_1HotwordDetector_1a45759e8fb8047abaf3697071cb88364c" kindref="member">num_hotwords</ref><sp/>==<sp/>len(sensitivity),<sp/>\</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;number<sp/>of<sp/>hotwords<sp/>in<sp/>decoder_model<sp/>(%d)<sp/>and<sp/>sensitivity<sp/>&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(%d)<sp/>does<sp/>not<sp/>match&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self.<ref refid="classsnowboydecoder_1_1HotwordDetector_1a45759e8fb8047abaf3697071cb88364c" kindref="member">num_hotwords</ref>,<sp/>len(sensitivity))</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensitivity_str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">.join([str(t)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>t<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sensitivity])</highlight></codeline>
<codeline lineno="102" refid="classsnowboydecoder_1_1HotwordDetector_1ae5f5881d045e26f9e750b5e03c99f29c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(sensitivity)<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsnowboydecoder_1_1HotwordDetector_1a443f1b4a74ff9e6dab682d9161b7aa52" kindref="member">detector</ref>.SetSensitivity(sensitivity_str.encode())</highlight></codeline>
<codeline lineno="104" refid="classsnowboydecoder_1_1HotwordDetector_1a747f6301374f25541183bd2b7f0baac6" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="classsnowboydecoder_1_1HotwordDetector_1a2658be70bb0b1939517e24f008d392a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsnowboydecoder_1_1HotwordDetector_1ae5f5881d045e26f9e750b5e03c99f29c" kindref="member">ring_buffer</ref><sp/>=<sp/><ref refid="classsnowboydecoder_1_1RingBuffer" kindref="compound">RingBuffer</ref>(</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsnowboydecoder_1_1HotwordDetector_1a443f1b4a74ff9e6dab682d9161b7aa52" kindref="member">detector</ref>.NumChannels()<sp/>*<sp/>self.<ref refid="classsnowboydecoder_1_1HotwordDetector_1a443f1b4a74ff9e6dab682d9161b7aa52" kindref="member">detector</ref>.SampleRate()<sp/>*<sp/>5)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsnowboydecoder_1_1HotwordDetector_1a747f6301374f25541183bd2b7f0baac6" kindref="member">audio</ref><sp/>=<sp/>pyaudio.PyAudio()</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsnowboydecoder_1_1HotwordDetector_1a2658be70bb0b1939517e24f008d392a2" kindref="member">stream_in</ref><sp/>=<sp/>self.<ref refid="classsnowboydecoder_1_1HotwordDetector_1a747f6301374f25541183bd2b7f0baac6" kindref="member">audio</ref>.open(</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>output=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format=self.<ref refid="classsnowboydecoder_1_1HotwordDetector_1a747f6301374f25541183bd2b7f0baac6" kindref="member">audio</ref>.get_format_from_width(</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsnowboydecoder_1_1HotwordDetector_1a443f1b4a74ff9e6dab682d9161b7aa52" kindref="member">detector</ref>.BitsPerSample()<sp/>/<sp/>8),</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channels=self.<ref refid="classsnowboydecoder_1_1HotwordDetector_1a443f1b4a74ff9e6dab682d9161b7aa52" kindref="member">detector</ref>.NumChannels(),</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rate=self.<ref refid="classsnowboydecoder_1_1HotwordDetector_1a443f1b4a74ff9e6dab682d9161b7aa52" kindref="member">detector</ref>.SampleRate(),</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frames_per_buffer=2048,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream_callback=audio_callback)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="classsnowboydecoder_1_1HotwordDetector_1a0b753c51c1a02be091a7673870cd74e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsnowboydecoder_1_1HotwordDetector_1a0b753c51c1a02be091a7673870cd74e6" kindref="member">start</ref>(self,<sp/>detected_callback=play_audio_file,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interrupt_check=lambda:<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sleep_time=0.03):</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="122"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Start<sp/>the<sp/>voice<sp/>detector.<sp/>For<sp/>every<sp/>`sleep_time`<sp/>second<sp/>it<sp/>checks<sp/>the</highlight></codeline>
<codeline lineno="123"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>audio<sp/>buffer<sp/>for<sp/>triggering<sp/>keywords.<sp/>If<sp/>detected,<sp/>then<sp/>call</highlight></codeline>
<codeline lineno="124"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>corresponding<sp/>function<sp/>in<sp/>`detected_callback`,<sp/>which<sp/>can<sp/>be<sp/>a<sp/>single</highlight></codeline>
<codeline lineno="125"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function<sp/>(single<sp/>model)<sp/>or<sp/>a<sp/>list<sp/>of<sp/>callback<sp/>functions<sp/>(multiple</highlight></codeline>
<codeline lineno="126"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>models).<sp/>Every<sp/>loop<sp/>it<sp/>also<sp/>calls<sp/>`interrupt_check`<sp/>--<sp/>if<sp/>it<sp/>returns</highlight></codeline>
<codeline lineno="127"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>True,<sp/>then<sp/>breaks<sp/>from<sp/>the<sp/>loop<sp/>and<sp/>return.</highlight></codeline>
<codeline lineno="128"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="129"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>detected_callback:<sp/>a<sp/>function<sp/>or<sp/>list<sp/>of<sp/>functions.<sp/>The<sp/>number<sp/>of</highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items<sp/>must<sp/>match<sp/>the<sp/>number<sp/>of<sp/>models<sp/>in</highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`decoder_model`.</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>interrupt_check:<sp/>a<sp/>function<sp/>that<sp/>returns<sp/>True<sp/>if<sp/>the<sp/>main<sp/>loop</highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>needs<sp/>to<sp/>stop.</highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>float<sp/>sleep_time:<sp/>how<sp/>much<sp/>time<sp/>in<sp/>second<sp/>every<sp/>loop<sp/>waits.</highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:return:<sp/>None</highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="namespacedemo_1a236c8e69020c6ce53d7c456d4a1def35" kindref="member">interrupt_check</ref>():</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;detect<sp/>voice<sp/>return&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tc<sp/>=<sp/>type(detected_callback)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>tc<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>list:</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detected_callback<sp/>=<sp/>[detected_callback]</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(detected_callback)<sp/>==<sp/>1<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classsnowboydecoder_1_1HotwordDetector_1a45759e8fb8047abaf3697071cb88364c" kindref="member">num_hotwords</ref><sp/>&gt;<sp/>1:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detected_callback<sp/>*=<sp/>self.<ref refid="classsnowboydecoder_1_1HotwordDetector_1a45759e8fb8047abaf3697071cb88364c" kindref="member">num_hotwords</ref></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>self.<ref refid="classsnowboydecoder_1_1HotwordDetector_1a45759e8fb8047abaf3697071cb88364c" kindref="member">num_hotwords</ref><sp/>==<sp/>len(detected_callback),<sp/>\</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>hotwords<sp/>in<sp/>your<sp/>models<sp/>(%d)<sp/>do<sp/>not<sp/>match<sp/>the<sp/>number<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;callbacks<sp/>(%d)&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self.<ref refid="classsnowboydecoder_1_1HotwordDetector_1a45759e8fb8047abaf3697071cb88364c" kindref="member">num_hotwords</ref>,<sp/>len(detected_callback))</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;detecting...&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="namespacedemo_1a236c8e69020c6ce53d7c456d4a1def35" kindref="member">interrupt_check</ref>():</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;detect<sp/>voice<sp/>break&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>self.<ref refid="classsnowboydecoder_1_1HotwordDetector_1ae5f5881d045e26f9e750b5e03c99f29c" kindref="member">ring_buffer</ref>.get()</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(data)<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time.sleep(sleep_time)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ans<sp/>=<sp/>self.<ref refid="classsnowboydecoder_1_1HotwordDetector_1a443f1b4a74ff9e6dab682d9161b7aa52" kindref="member">detector</ref>.RunDetection(data)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ans<sp/>==<sp/>-1:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.warning(</highlight><highlight class="stringliteral">&quot;Error<sp/>initializing<sp/>streams<sp/>or<sp/>reading<sp/>audio<sp/>data&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>ans<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Keyword<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(ans)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>detected<sp/>at<sp/>time:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>+=<sp/>time.strftime(</highlight><highlight class="stringliteral">&quot;%Y-%m-%d<sp/>%H:%M:%S&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time.localtime(time.time()))</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(message)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback<sp/>=<sp/>detected_callback[ans-1]</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>callback<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback()</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;finished.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="classsnowboydecoder_1_1HotwordDetector_1a1ab6e303be1e4dbd5adaa9b9d29dfa1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsnowboydecoder_1_1HotwordDetector_1a1ab6e303be1e4dbd5adaa9b9d29dfa1a" kindref="member">terminate</ref>(self):</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="178"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Terminate<sp/>audio<sp/>stream.<sp/>Users<sp/>cannot<sp/>call<sp/>start()<sp/>again<sp/>to<sp/>detect.</highlight></codeline>
<codeline lineno="179"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:return:<sp/>None</highlight></codeline>
<codeline lineno="180"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsnowboydecoder_1_1HotwordDetector_1a2658be70bb0b1939517e24f008d392a2" kindref="member">stream_in</ref>.stop_stream()</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsnowboydecoder_1_1HotwordDetector_1a2658be70bb0b1939517e24f008d392a2" kindref="member">stream_in</ref>.close()</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsnowboydecoder_1_1HotwordDetector_1a747f6301374f25541183bd2b7f0baac6" kindref="member">audio</ref>.<ref refid="classsnowboydecoder_1_1HotwordDetector_1a1ab6e303be1e4dbd5adaa9b9d29dfa1a" kindref="member">terminate</ref>()</highlight></codeline>
    </programlisting>
    <location file="3rdparty/snowboy/examples/Python/snowboydecoder.py"/>
  </compounddef>
</doxygen>
