<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsnowboy_1_1SnowboyDetect" kind="class" language="C++" prot="public">
    <compoundname>snowboy::SnowboyDetect</compoundname>
    <includes refid="snowboy-detect_8h" local="no">snowboy-detect.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsnowboy_1_1SnowboyDetect_1a288c1e71ec3da4bccc5239de35892a14" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/memory/unique_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::unique_ptr</ref>&lt; PipelineDetect &gt;</type>
        <definition>std::unique_ptr&lt;PipelineDetect&gt; snowboy::SnowboyDetect::detect_pipeline_</definition>
        <argsstring></argsstring>
        <name>detect_pipeline_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/include/snowboy-detect.h" line="126" column="19" bodyfile="3rdparty/snowboy/include/snowboy-detect.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsnowboy_1_1SnowboyDetect_1a7a352f782103adfbb14407639b9608cb" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/memory/unique_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::unique_ptr</ref>&lt; WaveHeader &gt;</type>
        <definition>std::unique_ptr&lt;WaveHeader&gt; snowboy::SnowboyDetect::wave_header_</definition>
        <argsstring></argsstring>
        <name>wave_header_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/include/snowboy-detect.h" line="125" column="19" bodyfile="3rdparty/snowboy/include/snowboy-detect.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsnowboy_1_1SnowboyDetect_1afe9cc77361c9ba992f3839ed1e62f90b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snowboy::SnowboyDetect::ApplyFrontend</definition>
        <argsstring>(const bool apply_frontend)</argsstring>
        <name>ApplyFrontend</name>
        <param>
          <type>const bool</type>
          <declname>apply_frontend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/include/snowboy-detect.h" line="113" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classsnowboy_1_1SnowboyDetect_1a56ce3da0094b7a21618d0309656ab5a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snowboy::SnowboyDetect::BitsPerSample</definition>
        <argsstring>() const</argsstring>
        <name>BitsPerSample</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/include/snowboy-detect.h" line="120" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classsnowboy_1_1SnowboyDetect_1a03393a9a7012e5a73cafe1fbdd5bcfe8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>std::string snowboy::SnowboyDetect::GetSensitivity</definition>
        <argsstring>() const</argsstring>
        <name>GetSensitivity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/include/snowboy-detect.h" line="94" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classsnowboy_1_1SnowboyDetect_1a9a403ad321b346c55f3bd93e08452e6d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snowboy::SnowboyDetect::NumChannels</definition>
        <argsstring>() const</argsstring>
        <name>NumChannels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/include/snowboy-detect.h" line="119" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classsnowboy_1_1SnowboyDetect_1a365477359a1ff8a3aed1d4c9953ad2da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snowboy::SnowboyDetect::NumHotwords</definition>
        <argsstring>() const</argsstring>
        <name>NumHotwords</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/include/snowboy-detect.h" line="109" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classsnowboy_1_1SnowboyDetect_1abfe4e91394ae31cbaf3222f6239ea5fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool snowboy::SnowboyDetect::Reset</definition>
        <argsstring>()</argsstring>
        <name>Reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/include/snowboy-detect.h" line="48" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classsnowboy_1_1SnowboyDetect_1aaa0bd363f4a1fcab8cf54b340b5af91b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snowboy::SnowboyDetect::RunDetection</definition>
        <argsstring>(const float *const data, const int array_length)</argsstring>
        <name>RunDetection</name>
        <param>
          <type>const float *const</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>array_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/include/snowboy-detect.h" line="80" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classsnowboy_1_1SnowboyDetect_1a070b3d15e1e44ad7a8bb7ff544331914" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snowboy::SnowboyDetect::RunDetection</definition>
        <argsstring>(const int16_t *const data, const int array_length)</argsstring>
        <name>RunDetection</name>
        <param>
          <type>const int16_t *const</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>array_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/include/snowboy-detect.h" line="81" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classsnowboy_1_1SnowboyDetect_1abd749852aa1560422a147960013c759f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snowboy::SnowboyDetect::RunDetection</definition>
        <argsstring>(const int32_t *const data, const int array_length)</argsstring>
        <name>RunDetection</name>
        <param>
          <type>const int32_t *const</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>array_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/include/snowboy-detect.h" line="82" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classsnowboy_1_1SnowboyDetect_1aaa796336b277d2d12e6cc8f9d1a5061f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snowboy::SnowboyDetect::RunDetection</definition>
        <argsstring>(const std::string &amp;data)</argsstring>
        <name>RunDetection</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/include/snowboy-detect.h" line="68" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classsnowboy_1_1SnowboyDetect_1a7552785e3d3747b3a0d96b6343299cea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snowboy::SnowboyDetect::SampleRate</definition>
        <argsstring>() const</argsstring>
        <name>SampleRate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/include/snowboy-detect.h" line="118" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classsnowboy_1_1SnowboyDetect_1a96f13fc5d1116b5b753b8f40e4efbed1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snowboy::SnowboyDetect::SetAudioGain</definition>
        <argsstring>(const float audio_gain)</argsstring>
        <name>SetAudioGain</name>
        <param>
          <type>const float</type>
          <declname>audio_gain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/include/snowboy-detect.h" line="98" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classsnowboy_1_1SnowboyDetect_1a321450db9feb625c1e68b957e1db9d3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snowboy::SnowboyDetect::SetSensitivity</definition>
        <argsstring>(const std::string &amp;sensitivity_str)</argsstring>
        <name>SetSensitivity</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>sensitivity_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/include/snowboy-detect.h" line="91" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classsnowboy_1_1SnowboyDetect_1a02c916d503f409a0321c23febf6711a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>snowboy::SnowboyDetect::SnowboyDetect</definition>
        <argsstring>(const std::string &amp;resource_filename, const std::string &amp;model_str)</argsstring>
        <name>SnowboyDetect</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>resource_filename</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>model_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/include/snowboy-detect.h" line="42" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classsnowboy_1_1SnowboyDetect_1a32cc1153122d4b66ddbf9e9eb781c334" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snowboy::SnowboyDetect::UpdateModel</definition>
        <argsstring>() const</argsstring>
        <name>UpdateModel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/include/snowboy-detect.h" line="105" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classsnowboy_1_1SnowboyDetect_1a77ca423eadcccc53f6a1c43eb489eec4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>snowboy::SnowboyDetect::~SnowboyDetect</definition>
        <argsstring>()</argsstring>
        <name>~SnowboyDetect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3rdparty/snowboy/include/snowboy-detect.h" line="122" column="3"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>std::unique_ptr&lt; PipelineDetect &gt;</label>
        <link refid="cpp/memory/unique_ptr" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="1">
        <label>snowboy::SnowboyDetect</label>
        <link refid="classsnowboy_1_1SnowboyDetect"/>
        <childnode refid="2" relation="usage">
          <edgelabel>wave_header_</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>detect_pipeline_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::unique_ptr&lt; WaveHeader &gt;</label>
        <link refid="cpp/memory/unique_ptr" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="3rdparty/snowboy/include/snowboy-detect.h" line="22" column="20" bodyfile="3rdparty/snowboy/include/snowboy-detect.h" bodystart="22" bodyend="127"/>
    <listofallmembers>
      <member refid="classsnowboy_1_1SnowboyDetect_1afe9cc77361c9ba992f3839ed1e62f90b" prot="public" virt="non-virtual"><scope>snowboy::SnowboyDetect</scope><name>ApplyFrontend</name></member>
      <member refid="classsnowboy_1_1SnowboyDetect_1a56ce3da0094b7a21618d0309656ab5a6" prot="public" virt="non-virtual"><scope>snowboy::SnowboyDetect</scope><name>BitsPerSample</name></member>
      <member refid="classsnowboy_1_1SnowboyDetect_1a288c1e71ec3da4bccc5239de35892a14" prot="private" virt="non-virtual"><scope>snowboy::SnowboyDetect</scope><name>detect_pipeline_</name></member>
      <member refid="classsnowboy_1_1SnowboyDetect_1a03393a9a7012e5a73cafe1fbdd5bcfe8" prot="public" virt="non-virtual"><scope>snowboy::SnowboyDetect</scope><name>GetSensitivity</name></member>
      <member refid="classsnowboy_1_1SnowboyDetect_1a9a403ad321b346c55f3bd93e08452e6d" prot="public" virt="non-virtual"><scope>snowboy::SnowboyDetect</scope><name>NumChannels</name></member>
      <member refid="classsnowboy_1_1SnowboyDetect_1a365477359a1ff8a3aed1d4c9953ad2da" prot="public" virt="non-virtual"><scope>snowboy::SnowboyDetect</scope><name>NumHotwords</name></member>
      <member refid="classsnowboy_1_1SnowboyDetect_1abfe4e91394ae31cbaf3222f6239ea5fb" prot="public" virt="non-virtual"><scope>snowboy::SnowboyDetect</scope><name>Reset</name></member>
      <member refid="classsnowboy_1_1SnowboyDetect_1aaa796336b277d2d12e6cc8f9d1a5061f" prot="public" virt="non-virtual"><scope>snowboy::SnowboyDetect</scope><name>RunDetection</name></member>
      <member refid="classsnowboy_1_1SnowboyDetect_1aaa0bd363f4a1fcab8cf54b340b5af91b" prot="public" virt="non-virtual"><scope>snowboy::SnowboyDetect</scope><name>RunDetection</name></member>
      <member refid="classsnowboy_1_1SnowboyDetect_1a070b3d15e1e44ad7a8bb7ff544331914" prot="public" virt="non-virtual"><scope>snowboy::SnowboyDetect</scope><name>RunDetection</name></member>
      <member refid="classsnowboy_1_1SnowboyDetect_1abd749852aa1560422a147960013c759f" prot="public" virt="non-virtual"><scope>snowboy::SnowboyDetect</scope><name>RunDetection</name></member>
      <member refid="classsnowboy_1_1SnowboyDetect_1a7552785e3d3747b3a0d96b6343299cea" prot="public" virt="non-virtual"><scope>snowboy::SnowboyDetect</scope><name>SampleRate</name></member>
      <member refid="classsnowboy_1_1SnowboyDetect_1a96f13fc5d1116b5b753b8f40e4efbed1" prot="public" virt="non-virtual"><scope>snowboy::SnowboyDetect</scope><name>SetAudioGain</name></member>
      <member refid="classsnowboy_1_1SnowboyDetect_1a321450db9feb625c1e68b957e1db9d3b" prot="public" virt="non-virtual"><scope>snowboy::SnowboyDetect</scope><name>SetSensitivity</name></member>
      <member refid="classsnowboy_1_1SnowboyDetect_1a02c916d503f409a0321c23febf6711a4" prot="public" virt="non-virtual"><scope>snowboy::SnowboyDetect</scope><name>SnowboyDetect</name></member>
      <member refid="classsnowboy_1_1SnowboyDetect_1a32cc1153122d4b66ddbf9e9eb781c334" prot="public" virt="non-virtual"><scope>snowboy::SnowboyDetect</scope><name>UpdateModel</name></member>
      <member refid="classsnowboy_1_1SnowboyDetect_1a7a352f782103adfbb14407639b9608cb" prot="private" virt="non-virtual"><scope>snowboy::SnowboyDetect</scope><name>wave_header_</name></member>
      <member refid="classsnowboy_1_1SnowboyDetect_1a77ca423eadcccc53f6a1c43eb489eec4" prot="public" virt="non-virtual"><scope>snowboy::SnowboyDetect</scope><name>~SnowboyDetect</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
