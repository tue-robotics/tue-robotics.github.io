<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classtue_1_1LoopTimer" kind="class" language="C++" prot="public">
    <compoundname>tue::LoopTimer</compoundname>
    <includes refid="loop__timer_8h" local="no">loop_timer.h</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classtue_1_1LoopTimer_1a7eda6542b79e2f4d6000125064104d1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long double</type>
        <definition>long double tue::LoopTimer::getTotalLoopTime</definition>
        <argsstring>()</argsstring>
        <name>getTotalLoopTime</name>
        <briefdescription>
<para>Get total elapsed time during the loops. Stops the current iteration when running. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Elapsed time in seconds </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/profiling/loop_timer.h" line="55" column="17" bodyfile="src/loop_timer.cpp" bodystart="40" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1LoopTimer_1ad853eebab09f39259667cd01196a5c10" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>long double</type>
        <definition>long double tue::LoopTimer::getTotalLoopTime</definition>
        <argsstring>() const</argsstring>
        <name>getTotalLoopTime</name>
        <briefdescription>
<para>const version which excludes the current loop iteration when running </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/profiling/loop_timer.h" line="57" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classtue_1_1LoopTimer_1a11b563b6762df6a198bff39831ef3ca8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long double</type>
        <definition>long double tue::LoopTimer::getAverageLoopTime</definition>
        <argsstring>()</argsstring>
        <name>getAverageLoopTime</name>
        <briefdescription>
<para>Get average time per loop iteration. Stops the current iteration when running. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Average time per loop iteration in seconds </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/profiling/loop_timer.h" line="66" column="17" bodyfile="src/loop_timer.cpp" bodystart="56" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1LoopTimer_1a3b2871d4cd22c66bbc9f564f946bc76c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>long double</type>
        <definition>long double tue::LoopTimer::getAverageLoopTime</definition>
        <argsstring>() const</argsstring>
        <name>getAverageLoopTime</name>
        <briefdescription>
<para>const version which excludes the current loop iteration when running </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/profiling/loop_timer.h" line="68" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classtue_1_1LoopTimer_1abe1b8a7a4e0e6157c47c822ea5bb73f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tue::LoopTimer::getLoopUsagePercentage</definition>
        <argsstring>()</argsstring>
        <name>getLoopUsagePercentage</name>
        <briefdescription>
<para>Get average percentage of total time used by the loop. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Percentage in range [0-1] </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/profiling/loop_timer.h" line="82" column="12" bodyfile="src/loop_timer.cpp" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1LoopTimer_1ae8b33725feb4e46b42904dbf6604cdd2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tue::LoopTimer::getLoopUsagePercentage</definition>
        <argsstring>() const</argsstring>
        <name>getLoopUsagePercentage</name>
        <briefdescription>
<para>const version which excludes the current loop iteration when running </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/profiling/loop_timer.h" line="84" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtue_1_1LoopTimer_1a9ed7704cc66995d6dbef2b8091edb607" prot="private" static="no" mutable="no">
        <type>long double</type>
        <definition>long double tue::LoopTimer::c_</definition>
        <argsstring></argsstring>
        <name>c_</name>
        <briefdescription>
<para>Compensation for lost low-order bits. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/profiling/loop_timer.h" line="30" column="17" bodyfile="include/tue/profiling/loop_timer.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtue_1_1LoopTimer_1a8675785f7caf427fa7c1126a1977ff75" prot="private" static="no" mutable="no">
        <type>long unsigned int</type>
        <definition>long unsigned int tue::LoopTimer::counts_</definition>
        <argsstring></argsstring>
        <name>counts_</name>
        <briefdescription>
<para>loop counter </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/profiling/loop_timer.h" line="20" column="23" bodyfile="include/tue/profiling/loop_timer.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtue_1_1LoopTimer_1a760af0009652486e933dade22c4b6091" prot="private" static="no" mutable="no">
        <type>long double</type>
        <definition>long double tue::LoopTimer::sum_</definition>
        <argsstring></argsstring>
        <name>sum_</name>
        <briefdescription>
<para>Sum so far. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/profiling/loop_timer.h" line="25" column="17" bodyfile="include/tue/profiling/loop_timer.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtue_1_1LoopTimer_1aac9474a45a44be3ba5afd64daded79e7" prot="private" static="no" mutable="no">
        <type><ref refid="classtue_1_1Timer" kindref="compound">tue::Timer</ref></type>
        <definition>tue::Timer tue::LoopTimer::timer_</definition>
        <argsstring></argsstring>
        <name>timer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/profiling/loop_timer.h" line="14" column="16" bodyfile="include/tue/profiling/loop_timer.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtue_1_1LoopTimer_1a90a0282a312fb2137c76b39f86fa05ac" prot="private" static="no" mutable="no">
        <type><ref refid="classtue_1_1Timer" kindref="compound">tue::Timer</ref></type>
        <definition>tue::Timer tue::LoopTimer::total_timer_</definition>
        <argsstring></argsstring>
        <name>total_timer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/profiling/loop_timer.h" line="15" column="16" bodyfile="include/tue/profiling/loop_timer.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtue_1_1LoopTimer_1a5aaace052532a2c51e3bed62ee344530" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>long unsigned int</type>
        <definition>long unsigned int tue::LoopTimer::getIterationCount</definition>
        <argsstring>() const</argsstring>
        <name>getIterationCount</name>
        <briefdescription>
<para>Get total number of loop iterations. When running, the current iteration is included. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Number of loop iterations </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/profiling/loop_timer.h" line="48" column="30" bodyfile="include/tue/profiling/loop_timer.h" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1LoopTimer_1a1d91d2b71c78d8573ca52c2dce1f7e02" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>long double</type>
        <definition>long double tue::LoopTimer::getTotalTime</definition>
        <argsstring>() const</argsstring>
        <name>getTotalTime</name>
        <briefdescription>
<para>Get the total elapsed time since the first start.Stops the current iteration when running. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Total time since start in seconds </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/profiling/loop_timer.h" line="75" column="17" bodyfile="src/loop_timer.cpp" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1LoopTimer_1ad9edbc77f37a564d0dac9bba7010d7e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tue::LoopTimer::LoopTimer</definition>
        <argsstring>()</argsstring>
        <name>LoopTimer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/profiling/loop_timer.h" line="33" column="5" bodyfile="src/loop_timer.cpp" bodystart="9" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1LoopTimer_1adfdf89b84000ebc9fd5b9900171eb220" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tue::LoopTimer::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
<para>Stop the timer and reset all counters to zero. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/profiling/loop_timer.h" line="42" column="10" bodyfile="src/loop_timer.cpp" bodystart="31" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1LoopTimer_1a41840045a5a7616394fdae6a9152fb3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tue::LoopTimer::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/profiling/loop_timer.h" line="36" column="10" bodyfile="src/loop_timer.cpp" bodystart="13" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1LoopTimer_1a6137d4f050df6af3ab0db1bb567978da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tue::LoopTimer::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/profiling/loop_timer.h" line="37" column="10" bodyfile="src/loop_timer.cpp" bodystart="21" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1LoopTimer_1ab47aba2e89a6318747efc5826628953a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tue::LoopTimer::~LoopTimer</definition>
        <argsstring>()=default</argsstring>
        <name>~LoopTimer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/profiling/loop_timer.h" line="34" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>tue::LoopTimer</label>
        <link refid="classtue_1_1LoopTimer"/>
        <childnode refid="2" relation="usage">
          <edgelabel>timer_</edgelabel>
          <edgelabel>total_timer_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>tue::Timer</label>
        <link refid="classtue_1_1Timer"/>
      </node>
    </collaborationgraph>
    <location file="include/tue/profiling/loop_timer.h" line="12" column="1" bodyfile="include/tue/profiling/loop_timer.h" bodystart="11" bodyend="86"/>
    <listofallmembers>
      <member refid="classtue_1_1LoopTimer_1a9ed7704cc66995d6dbef2b8091edb607" prot="private" virt="non-virtual"><scope>tue::LoopTimer</scope><name>c_</name></member>
      <member refid="classtue_1_1LoopTimer_1a8675785f7caf427fa7c1126a1977ff75" prot="private" virt="non-virtual"><scope>tue::LoopTimer</scope><name>counts_</name></member>
      <member refid="classtue_1_1LoopTimer_1a11b563b6762df6a198bff39831ef3ca8" prot="public" virt="non-virtual"><scope>tue::LoopTimer</scope><name>getAverageLoopTime</name></member>
      <member refid="classtue_1_1LoopTimer_1a3b2871d4cd22c66bbc9f564f946bc76c" prot="public" virt="non-virtual"><scope>tue::LoopTimer</scope><name>getAverageLoopTime</name></member>
      <member refid="classtue_1_1LoopTimer_1a5aaace052532a2c51e3bed62ee344530" prot="public" virt="non-virtual"><scope>tue::LoopTimer</scope><name>getIterationCount</name></member>
      <member refid="classtue_1_1LoopTimer_1abe1b8a7a4e0e6157c47c822ea5bb73f9" prot="public" virt="non-virtual"><scope>tue::LoopTimer</scope><name>getLoopUsagePercentage</name></member>
      <member refid="classtue_1_1LoopTimer_1ae8b33725feb4e46b42904dbf6604cdd2" prot="public" virt="non-virtual"><scope>tue::LoopTimer</scope><name>getLoopUsagePercentage</name></member>
      <member refid="classtue_1_1LoopTimer_1a7eda6542b79e2f4d6000125064104d1f" prot="public" virt="non-virtual"><scope>tue::LoopTimer</scope><name>getTotalLoopTime</name></member>
      <member refid="classtue_1_1LoopTimer_1ad853eebab09f39259667cd01196a5c10" prot="public" virt="non-virtual"><scope>tue::LoopTimer</scope><name>getTotalLoopTime</name></member>
      <member refid="classtue_1_1LoopTimer_1a1d91d2b71c78d8573ca52c2dce1f7e02" prot="public" virt="non-virtual"><scope>tue::LoopTimer</scope><name>getTotalTime</name></member>
      <member refid="classtue_1_1LoopTimer_1ad9edbc77f37a564d0dac9bba7010d7e1" prot="public" virt="non-virtual"><scope>tue::LoopTimer</scope><name>LoopTimer</name></member>
      <member refid="classtue_1_1LoopTimer_1adfdf89b84000ebc9fd5b9900171eb220" prot="public" virt="non-virtual"><scope>tue::LoopTimer</scope><name>reset</name></member>
      <member refid="classtue_1_1LoopTimer_1a41840045a5a7616394fdae6a9152fb3d" prot="public" virt="non-virtual"><scope>tue::LoopTimer</scope><name>start</name></member>
      <member refid="classtue_1_1LoopTimer_1a6137d4f050df6af3ab0db1bb567978da" prot="public" virt="non-virtual"><scope>tue::LoopTimer</scope><name>stop</name></member>
      <member refid="classtue_1_1LoopTimer_1a760af0009652486e933dade22c4b6091" prot="private" virt="non-virtual"><scope>tue::LoopTimer</scope><name>sum_</name></member>
      <member refid="classtue_1_1LoopTimer_1aac9474a45a44be3ba5afd64daded79e7" prot="private" virt="non-virtual"><scope>tue::LoopTimer</scope><name>timer_</name></member>
      <member refid="classtue_1_1LoopTimer_1a90a0282a312fb2137c76b39f86fa05ac" prot="private" virt="non-virtual"><scope>tue::LoopTimer</scope><name>total_timer_</name></member>
      <member refid="classtue_1_1LoopTimer_1ab47aba2e89a6318747efc5826628953a" prot="public" virt="non-virtual"><scope>tue::LoopTimer</scope><name>~LoopTimer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
