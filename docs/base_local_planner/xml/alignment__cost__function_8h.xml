<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="alignment__cost__function_8h" kind="file" language="C++">
    <compoundname>alignment_cost_function.h</compoundname>
    <includes refid="trajectory__cost__function_8h" local="yes">trajectory_cost_function.h</includes>
    <includes local="no">Eigen/Core</includes>
    <includedby refid="alignment__cost__function_8cpp" local="yes">alignment_cost_function.cpp</includedby>
    <incdepgraph>
      <node id="4">
        <label>vector</label>
        <link refid="cpp/header/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="3">
        <label>base_local_planner/trajectory.h</label>
        <link refid="trajectory_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Eigen/Core</label>
      </node>
      <node id="2">
        <label>trajectory_cost_function.h</label>
        <link refid="trajectory__cost__function_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>alignment_cost_function.h</label>
        <link refid="alignment__cost__function_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>alignment_cost_function.cpp</label>
        <link refid="alignment__cost__function_8cpp"/>
      </node>
      <node id="1">
        <label>alignment_cost_function.h</label>
        <link refid="alignment__cost__function_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classbase__local__planner_1_1AlignmentCostFunction" prot="public">base_local_planner::AlignmentCostFunction</innerclass>
    <innernamespace refid="namespacebase__local__planner">base_local_planner</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>base_local_planner_alignment_cost_function_h_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>base_local_planner_alignment_cost_function_h_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="trajectory__cost__function_8h" kindref="compound">trajectory_cost_function.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Core&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="namespacebase__local__planner" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacebase__local__planner" kindref="compound">base_local_planner</ref></highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="classbase__local__planner_1_1AlignmentCostFunction" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbase__local__planner_1_1AlignmentCostFunction" kindref="compound">AlignmentCostFunction</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classbase__local__planner_1_1TrajectoryCostFunction" kindref="compound">TrajectoryCostFunction</ref></highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><ref refid="classbase__local__planner_1_1AlignmentCostFunction_1aa3f3d6cbfbab5f09fafcaf31a63ada94" kindref="member">AlignmentCostFunction</ref>();</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classbase__local__planner_1_1AlignmentCostFunction_1a6c42027ffd19926337708c893105d15e" kindref="member">~AlignmentCostFunction</ref>();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classbase__local__planner_1_1AlignmentCostFunction_1a3594e7aa99aadf0b3eee17f3f5717db9" kindref="member">scoreTrajectory</ref>(<ref refid="classbase__local__planner_1_1Trajectory" kindref="compound">Trajectory</ref><sp/>&amp;traj);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classbase__local__planner_1_1AlignmentCostFunction_1af806ca21ecf2306a48f787d7d4b19c76" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classbase__local__planner_1_1AlignmentCostFunction_1af806ca21ecf2306a48f787d7d4b19c76" kindref="member">prepare</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classbase__local__planner_1_1AlignmentCostFunction_1a59bf4ad532d165c255fa0163ba09ace4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classbase__local__planner_1_1AlignmentCostFunction_1a59bf4ad532d165c255fa0163ba09ace4" kindref="member">setDesiredOrientation</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta)<sp/>{<ref refid="classbase__local__planner_1_1AlignmentCostFunction_1ad39632cce5823317d213a8bfbe8b3c15" kindref="member">theta_desired_</ref><sp/>=<sp/>theta;}</highlight></codeline>
<codeline lineno="23" refid="classbase__local__planner_1_1AlignmentCostFunction_1a493e5c17bdf28de44334576438093884" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classbase__local__planner_1_1AlignmentCostFunction_1a493e5c17bdf28de44334576438093884" kindref="member">getDesiredOrientation</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classbase__local__planner_1_1AlignmentCostFunction_1ad39632cce5823317d213a8bfbe8b3c15" kindref="member">theta_desired_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classbase__local__planner_1_1AlignmentCostFunction_1ad39632cce5823317d213a8bfbe8b3c15" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classbase__local__planner_1_1AlignmentCostFunction_1ad39632cce5823317d213a8bfbe8b3c15" kindref="member">theta_desired_</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/base_local_planner/alignment_cost_function.h"/>
  </compounddef>
</doxygen>
