<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classbase__local__planner_1_1MapGridCostFunction" kind="class" language="C++" prot="public">
    <compoundname>base_local_planner::MapGridCostFunction</compoundname>
    <basecompoundref refid="classbase__local__planner_1_1TrajectoryCostFunction" prot="public" virt="non-virtual">base_local_planner::TrajectoryCostFunction</basecompoundref>
    <includes refid="map__grid__cost__function_8h" local="no">map_grid_cost_function.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classbase__local__planner_1_1MapGridCostFunction_1abc402c1c11dafcb69ec5d82480b89296" prot="private" static="no" mutable="no">
        <type><ref refid="namespacebase__local__planner_1a5b9cbdd645f780317faf39a970c3824c" kindref="member">CostAggregationType</ref></type>
        <definition>CostAggregationType base_local_planner::MapGridCostFunction::aggregationType_</definition>
        <argsstring></argsstring>
        <name>aggregationType_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid_cost_function.h" line="161" column="23" bodyfile="include/base_local_planner/map_grid_cost_function.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1MapGridCostFunction_1a852583e42ce771a6741116986a063a64" prot="private" static="no" mutable="no">
        <type><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">costmap_2d::Costmap2D</ref> *</type>
        <definition>costmap_2d::Costmap2D* base_local_planner::MapGridCostFunction::costmap_</definition>
        <argsstring></argsstring>
        <name>costmap_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid_cost_function.h" line="158" column="25" bodyfile="include/base_local_planner/map_grid_cost_function.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1MapGridCostFunction_1a99f2abca88bdc9f339a76704f25d6654" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool base_local_planner::MapGridCostFunction::is_local_goal_function_</definition>
        <argsstring></argsstring>
        <name>is_local_goal_function_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid_cost_function.h" line="169" column="8" bodyfile="include/base_local_planner/map_grid_cost_function.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1MapGridCostFunction_1a01f719e06199db21bc4aec99efe7ab2f" prot="private" static="no" mutable="no">
        <type><ref refid="classbase__local__planner_1_1MapGrid" kindref="compound">base_local_planner::MapGrid</ref></type>
        <definition>base_local_planner::MapGrid base_local_planner::MapGridCostFunction::map_</definition>
        <argsstring></argsstring>
        <name>map_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid_cost_function.h" line="160" column="31" bodyfile="include/base_local_planner/map_grid_cost_function.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1MapGridCostFunction_1a2d1f1bed6814ca5557eb2a9e04c2c670" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool base_local_planner::MapGridCostFunction::stop_on_failure_</definition>
        <argsstring></argsstring>
        <name>stop_on_failure_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid_cost_function.h" line="170" column="8" bodyfile="include/base_local_planner/map_grid_cost_function.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1MapGridCostFunction_1a22d5b7bb371a8b5593830029db9151a9" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::PoseStamped &gt;</type>
        <definition>std::vector&lt;geometry_msgs::PoseStamped&gt; base_local_planner::MapGridCostFunction::target_poses_</definition>
        <argsstring></argsstring>
        <name>target_poses_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid_cost_function.h" line="157" column="15" bodyfile="include/base_local_planner/map_grid_cost_function.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1MapGridCostFunction_1af72819f98ac6695d4ea025f0566bf1b5" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::MapGridCostFunction::xshift_</definition>
        <argsstring></argsstring>
        <name>xshift_</name>
        <briefdescription>
<para>xshift and yshift allow scoring for different </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid_cost_function.h" line="166" column="10" bodyfile="include/base_local_planner/map_grid_cost_function.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1MapGridCostFunction_1a3153c7d93524431e69f4fc5d72a6b4e6" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::MapGridCostFunction::yshift_</definition>
        <argsstring></argsstring>
        <name>yshift_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid_cost_function.h" line="167" column="10" bodyfile="include/base_local_planner/map_grid_cost_function.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classbase__local__planner_1_1MapGridCostFunction_1a0a9cdd8ffef9d7cfe3c7a8c38a6e6e33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double base_local_planner::MapGridCostFunction::getCellCosts</definition>
        <argsstring>(unsigned int cx, unsigned int cy)</argsstring>
        <name>getCellCosts</name>
        <param>
          <type>unsigned int</type>
          <declname>cx</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>cy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid_cost_function.h" line="154" column="10" bodyfile="src/map_grid_cost_function.cpp" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1MapGridCostFunction_1a37e0fd0048db78bb703946b56daafe25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>base_local_planner::MapGridCostFunction::MapGridCostFunction</definition>
        <argsstring>(costmap_2d::Costmap2D *costmap, double xshift=0.0, double yshift=0.0, bool is_local_goal_function=false, CostAggregationType aggregationType=Last)</argsstring>
        <name>MapGridCostFunction</name>
        <param>
          <type><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">costmap_2d::Costmap2D</ref> *</type>
          <declname>costmap</declname>
        </param>
        <param>
          <type>double</type>
          <declname>xshift</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>yshift</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>is_local_goal_function</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="namespacebase__local__planner_1a5b9cbdd645f780317faf39a970c3824c" kindref="member">CostAggregationType</ref></type>
          <declname>aggregationType</declname>
          <defval><ref refid="namespacebase__local__planner_1a5b9cbdd645f780317faf39a970c3824ca10a1a85cd52631b78010d22d9e0876c6" kindref="member">Last</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid_cost_function.h" line="110" column="3" bodyfile="src/map_grid_cost_function.cpp" bodystart="77" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1MapGridCostFunction_1a14783081aef0e5f4702edf317a10c167" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double base_local_planner::MapGridCostFunction::obstacleCosts</definition>
        <argsstring>()</argsstring>
        <name>obstacleCosts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return a value that indicates cell is in obstacle </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid_cost_function.h" line="141" column="10" bodyfile="include/base_local_planner/map_grid_cost_function.h" bodystart="141" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1MapGridCostFunction_1af3f80d67ddeefec5871b4828ddafb5dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool base_local_planner::MapGridCostFunction::prepare</definition>
        <argsstring>()</argsstring>
        <name>prepare</name>
        <reimplements refid="classbase__local__planner_1_1TrajectoryCostFunction_1a351dddca226f210a09bd10c151e2975f">prepare</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>propagate distances </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid_cost_function.h" line="134" column="8" bodyfile="src/map_grid_cost_function.cpp" bodystart="94" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1MapGridCostFunction_1a4332b1fd1c72795c87fb5d3a427df476" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double base_local_planner::MapGridCostFunction::scoreTrajectory</definition>
        <argsstring>(Trajectory &amp;traj)</argsstring>
        <name>scoreTrajectory</name>
        <reimplements refid="classbase__local__planner_1_1TrajectoryCostFunction_1a6908a8071270b455fc25b48db76e2d3c">scoreTrajectory</reimplements>
        <param>
          <type><ref refid="classbase__local__planner_1_1Trajectory" kindref="compound">Trajectory</ref> &amp;</type>
          <declname>traj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return a score for trajectory traj </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid_cost_function.h" line="136" column="10" bodyfile="src/map_grid_cost_function.cpp" bodystart="110" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1MapGridCostFunction_1a02c1cdf742342db135a15eaaad3a8d86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::MapGridCostFunction::setStopOnFailure</definition>
        <argsstring>(bool stop_on_failure)</argsstring>
        <name>setStopOnFailure</name>
        <param>
          <type>bool</type>
          <declname>stop_on_failure</declname>
        </param>
        <briefdescription>
<para>If true, failures along the path cause the entire path to be rejected. </para>
        </briefdescription>
        <detaileddescription>
<para>Default is true. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid_cost_function.h" line="129" column="8" bodyfile="include/base_local_planner/map_grid_cost_function.h" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1MapGridCostFunction_1a07f336c23114bcd9ea8fa24462465277" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::MapGridCostFunction::setTargetPoses</definition>
        <argsstring>(std::vector&lt; geometry_msgs::PoseStamped &gt; target_poses)</argsstring>
        <name>setTargetPoses</name>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::PoseStamped &gt;</type>
          <declname>target_poses</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set line segments on the grid with distance 0, resets the grid </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid_cost_function.h" line="121" column="8" bodyfile="src/map_grid_cost_function.cpp" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1MapGridCostFunction_1a7a3d73260adc793dde0317b532b29f8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::MapGridCostFunction::setXShift</definition>
        <argsstring>(double xshift)</argsstring>
        <name>setXShift</name>
        <param>
          <type>double</type>
          <declname>xshift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid_cost_function.h" line="123" column="8" bodyfile="include/base_local_planner/map_grid_cost_function.h" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1MapGridCostFunction_1a08fbe47f2c31ea241b86d5e61b47428a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::MapGridCostFunction::setYShift</definition>
        <argsstring>(double yshift)</argsstring>
        <name>setYShift</name>
        <param>
          <type>double</type>
          <declname>yshift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid_cost_function.h" line="124" column="8" bodyfile="include/base_local_planner/map_grid_cost_function.h" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1MapGridCostFunction_1a9e561793dbbb51118834f19673e17892" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double base_local_planner::MapGridCostFunction::unreachableCellCosts</definition>
        <argsstring>()</argsstring>
        <name>unreachableCellCosts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a value indicating cell was not reached by wavefront propagation of set cells. (is behind walls, regarding the region covered by grid) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid_cost_function.h" line="149" column="10" bodyfile="include/base_local_planner/map_grid_cost_function.h" bodystart="149" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1MapGridCostFunction_1a3615fe05f64fd08e33133ebdf0059dfa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>base_local_planner::MapGridCostFunction::~MapGridCostFunction</definition>
        <argsstring>()</argsstring>
        <name>~MapGridCostFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid_cost_function.h" line="116" column="3" bodyfile="include/base_local_planner/map_grid_cost_function.h" bodystart="116" bodyend="116"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class provides cost based on a map_grid of a small area of the world. The map_grid covers a the costmap, the costmap containing the information about sensed obstacles. The map_grid is used by setting certain cells to distance 0, and then propagating distances around them, filling up the area reachable around them.</para>
<para>The approach using grid_maps is used for computational efficiency, allowing to score hundreds of trajectories very quickly.</para>
<para>This can be used to favor trajectories which stay on a given path, or which approach a given goal. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>costmap_ros</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to object giving updates of obstacles around robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xshift</parametername>
</parameternamelist>
<parameterdescription>
<para>where the scoring point is with respect to robot center pose </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yshift</parametername>
</parameternamelist>
<parameterdescription>
<para>where the scoring point is with respect to robot center pose </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_local_goal_function</parametername>
<parametername>scores</parametername>
</parameternamelist>
<parameterdescription>
<para>for local goal rather than whole path </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aggregationType</parametername>
</parameternamelist>
<parameterdescription>
<para>how to combine costs along trajectory </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>base_local_planner::MapGridCostFunction</label>
        <link refid="classbase__local__planner_1_1MapGridCostFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>base_local_planner::TrajectoryCostFunction</label>
        <link refid="classbase__local__planner_1_1TrajectoryCostFunction"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>base_local_planner::MapGrid</label>
        <link refid="classbase__local__planner_1_1MapGrid"/>
        <childnode refid="5" relation="usage">
          <edgelabel>map_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>base_local_planner::MapGridCostFunction</label>
        <link refid="classbase__local__planner_1_1MapGridCostFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>target_poses_</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>map_</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>costmap_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::vector&lt; geometry_msgs::PoseStamped &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="6">
        <label>costmap_2d::Costmap2D</label>
        <link refid="classcostmap__2d_1_1Costmap2D" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags"/>
      </node>
      <node id="2">
        <label>base_local_planner::TrajectoryCostFunction</label>
        <link refid="classbase__local__planner_1_1TrajectoryCostFunction"/>
      </node>
      <node id="5">
        <label>std::vector&lt; base_local_planner::MapCell &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="include/base_local_planner/map_grid_cost_function.h" line="108" column="76" bodyfile="include/base_local_planner/map_grid_cost_function.h" bodystart="108" bodyend="171"/>
    <listofallmembers>
      <member refid="classbase__local__planner_1_1MapGridCostFunction_1abc402c1c11dafcb69ec5d82480b89296" prot="private" virt="non-virtual"><scope>base_local_planner::MapGridCostFunction</scope><name>aggregationType_</name></member>
      <member refid="classbase__local__planner_1_1MapGridCostFunction_1a852583e42ce771a6741116986a063a64" prot="private" virt="non-virtual"><scope>base_local_planner::MapGridCostFunction</scope><name>costmap_</name></member>
      <member refid="classbase__local__planner_1_1MapGridCostFunction_1a0a9cdd8ffef9d7cfe3c7a8c38a6e6e33" prot="public" virt="non-virtual"><scope>base_local_planner::MapGridCostFunction</scope><name>getCellCosts</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryCostFunction_1abaae8d899bd41d8baf02bf7aa175ded9" prot="public" virt="non-virtual"><scope>base_local_planner::MapGridCostFunction</scope><name>getScale</name></member>
      <member refid="classbase__local__planner_1_1MapGridCostFunction_1a99f2abca88bdc9f339a76704f25d6654" prot="private" virt="non-virtual"><scope>base_local_planner::MapGridCostFunction</scope><name>is_local_goal_function_</name></member>
      <member refid="classbase__local__planner_1_1MapGridCostFunction_1a01f719e06199db21bc4aec99efe7ab2f" prot="private" virt="non-virtual"><scope>base_local_planner::MapGridCostFunction</scope><name>map_</name></member>
      <member refid="classbase__local__planner_1_1MapGridCostFunction_1a37e0fd0048db78bb703946b56daafe25" prot="public" virt="non-virtual"><scope>base_local_planner::MapGridCostFunction</scope><name>MapGridCostFunction</name></member>
      <member refid="classbase__local__planner_1_1MapGridCostFunction_1a14783081aef0e5f4702edf317a10c167" prot="public" virt="non-virtual"><scope>base_local_planner::MapGridCostFunction</scope><name>obstacleCosts</name></member>
      <member refid="classbase__local__planner_1_1MapGridCostFunction_1af3f80d67ddeefec5871b4828ddafb5dc" prot="public" virt="virtual"><scope>base_local_planner::MapGridCostFunction</scope><name>prepare</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryCostFunction_1a8773ccf955aaca24cb37c4855ca4d582" prot="private" virt="non-virtual"><scope>base_local_planner::MapGridCostFunction</scope><name>scale_</name></member>
      <member refid="classbase__local__planner_1_1MapGridCostFunction_1a4332b1fd1c72795c87fb5d3a427df476" prot="public" virt="virtual"><scope>base_local_planner::MapGridCostFunction</scope><name>scoreTrajectory</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryCostFunction_1a816da4ed3c9be419fc00abb271d5a8b5" prot="public" virt="non-virtual"><scope>base_local_planner::MapGridCostFunction</scope><name>setScale</name></member>
      <member refid="classbase__local__planner_1_1MapGridCostFunction_1a02c1cdf742342db135a15eaaad3a8d86" prot="public" virt="non-virtual"><scope>base_local_planner::MapGridCostFunction</scope><name>setStopOnFailure</name></member>
      <member refid="classbase__local__planner_1_1MapGridCostFunction_1a07f336c23114bcd9ea8fa24462465277" prot="public" virt="non-virtual"><scope>base_local_planner::MapGridCostFunction</scope><name>setTargetPoses</name></member>
      <member refid="classbase__local__planner_1_1MapGridCostFunction_1a7a3d73260adc793dde0317b532b29f8a" prot="public" virt="non-virtual"><scope>base_local_planner::MapGridCostFunction</scope><name>setXShift</name></member>
      <member refid="classbase__local__planner_1_1MapGridCostFunction_1a08fbe47f2c31ea241b86d5e61b47428a" prot="public" virt="non-virtual"><scope>base_local_planner::MapGridCostFunction</scope><name>setYShift</name></member>
      <member refid="classbase__local__planner_1_1MapGridCostFunction_1a2d1f1bed6814ca5557eb2a9e04c2c670" prot="private" virt="non-virtual"><scope>base_local_planner::MapGridCostFunction</scope><name>stop_on_failure_</name></member>
      <member refid="classbase__local__planner_1_1MapGridCostFunction_1a22d5b7bb371a8b5593830029db9151a9" prot="private" virt="non-virtual"><scope>base_local_planner::MapGridCostFunction</scope><name>target_poses_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryCostFunction_1a5a80d6bb3fade55e28d8cb234936c43a" prot="protected" virt="non-virtual"><scope>base_local_planner::MapGridCostFunction</scope><name>TrajectoryCostFunction</name></member>
      <member refid="classbase__local__planner_1_1MapGridCostFunction_1a9e561793dbbb51118834f19673e17892" prot="public" virt="non-virtual"><scope>base_local_planner::MapGridCostFunction</scope><name>unreachableCellCosts</name></member>
      <member refid="classbase__local__planner_1_1MapGridCostFunction_1af72819f98ac6695d4ea025f0566bf1b5" prot="private" virt="non-virtual"><scope>base_local_planner::MapGridCostFunction</scope><name>xshift_</name></member>
      <member refid="classbase__local__planner_1_1MapGridCostFunction_1a3153c7d93524431e69f4fc5d72a6b4e6" prot="private" virt="non-virtual"><scope>base_local_planner::MapGridCostFunction</scope><name>yshift_</name></member>
      <member refid="classbase__local__planner_1_1MapGridCostFunction_1a3615fe05f64fd08e33133ebdf0059dfa" prot="public" virt="non-virtual"><scope>base_local_planner::MapGridCostFunction</scope><name>~MapGridCostFunction</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryCostFunction_1ac606d6ffc0a09f96d04cbb671c903d68" prot="public" virt="virtual"><scope>base_local_planner::MapGridCostFunction</scope><name>~TrajectoryCostFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
