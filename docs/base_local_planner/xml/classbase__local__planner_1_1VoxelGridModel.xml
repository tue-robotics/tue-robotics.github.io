<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classbase__local__planner_1_1VoxelGridModel" kind="class" language="C++" prot="public">
    <compoundname>base_local_planner::VoxelGridModel</compoundname>
    <basecompoundref refid="classbase__local__planner_1_1WorldModel" prot="public" virt="non-virtual">base_local_planner::WorldModel</basecompoundref>
    <includes refid="voxel__grid__model_8h" local="no">voxel_grid_model.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classbase__local__planner_1_1VoxelGridModel_1aa9d5f978d8eb185e9fcdc325212fda46" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::VoxelGridModel::max_z_</definition>
        <argsstring></argsstring>
        <name>max_z_</name>
        <briefdescription>
<para>The height cutoff for adding points as obstacles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/voxel_grid_model.h" line="209" column="14" bodyfile="include/base_local_planner/voxel_grid_model.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1VoxelGridModel_1ad8bd0fed79e42f431c92cb8916e049f9" prot="private" static="no" mutable="no">
        <type>voxel_grid::VoxelGrid</type>
        <definition>voxel_grid::VoxelGrid base_local_planner::VoxelGridModel::obstacle_grid_</definition>
        <argsstring></argsstring>
        <name>obstacle_grid_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/voxel_grid_model.h" line="203" column="29" bodyfile="include/base_local_planner/voxel_grid_model.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1VoxelGridModel_1a50ccc7fead8cd105840c9858c5ef001f" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::VoxelGridModel::origin_x_</definition>
        <argsstring></argsstring>
        <name>origin_x_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/voxel_grid_model.h" line="206" column="14" bodyfile="include/base_local_planner/voxel_grid_model.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1VoxelGridModel_1ae2d0311c5a1c6110b929d0111fb1ce79" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::VoxelGridModel::origin_y_</definition>
        <argsstring></argsstring>
        <name>origin_y_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/voxel_grid_model.h" line="207" column="14" bodyfile="include/base_local_planner/voxel_grid_model.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1VoxelGridModel_1a867dabbafce30cdaa5f7f736445abfeb" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::VoxelGridModel::origin_z_</definition>
        <argsstring></argsstring>
        <name>origin_z_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/voxel_grid_model.h" line="208" column="14" bodyfile="include/base_local_planner/voxel_grid_model.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1VoxelGridModel_1a61791d30cb1403e93f3e3659743abd74" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::VoxelGridModel::sq_obstacle_range_</definition>
        <argsstring></argsstring>
        <name>sq_obstacle_range_</name>
        <briefdescription>
<para>The square distance at which we no longer add obstacles to the grid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/voxel_grid_model.h" line="210" column="14" bodyfile="include/base_local_planner/voxel_grid_model.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1VoxelGridModel_1a9a2a512520fcb62c8ea1f1f8c91094b9" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::VoxelGridModel::xy_resolution_</definition>
        <argsstring></argsstring>
        <name>xy_resolution_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/voxel_grid_model.h" line="204" column="14" bodyfile="include/base_local_planner/voxel_grid_model.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1VoxelGridModel_1a30df42099cd22d24e1b7d9900c1b60e0" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::VoxelGridModel::z_resolution_</definition>
        <argsstring></argsstring>
        <name>z_resolution_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/voxel_grid_model.h" line="205" column="14" bodyfile="include/base_local_planner/voxel_grid_model.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classbase__local__planner_1_1VoxelGridModel_1affcef4b1c4c95dd4209d36bd0d24fc14" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double base_local_planner::VoxelGridModel::footprintCost</definition>
        <argsstring>(const geometry_msgs::Point &amp;position, const std::vector&lt; geometry_msgs::Point &gt; &amp;footprint, double inscribed_radius, double circumscribed_radius)</argsstring>
        <name>footprintCost</name>
        <reimplements refid="classbase__local__planner_1_1WorldModel_1a36d4c808bc441e2b87b0ac038099993a">footprintCost</reimplements>
        <param>
          <type>const geometry_msgs::Point &amp;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::Point &gt; &amp;</type>
          <declname>footprint</declname>
        </param>
        <param>
          <type>double</type>
          <declname>inscribed_radius</declname>
        </param>
        <param>
          <type>double</type>
          <declname>circumscribed_radius</declname>
        </param>
        <briefdescription>
<para>Checks if any obstacles in the voxel grid lie inside a convex footprint that is rasterized into the grid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The position of the robot in world coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>footprint</parametername>
</parameternamelist>
<parameterdescription>
<para>The specification of the footprint of the robot in world coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inscribed_radius</parametername>
</parameternamelist>
<parameterdescription>
<para>The radius of the inscribed circle of the robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>circumscribed_radius</parametername>
</parameternamelist>
<parameterdescription>
<para>The radius of the circumscribed circle of the robot </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Positive if all the points lie outside the footprint, negative otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/voxel_grid_model.h" line="121" column="22" bodyfile="src/voxel_grid_model.cpp" bodystart="50" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1VoxelGridModel_1a36d4c808bc441e2b87b0ac038099993a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>virtual double base_local_planner::WorldModel::footprintCost</definition>
        <argsstring>(const geometry_msgs::Point &amp;position, const std::vector&lt; geometry_msgs::Point &gt; &amp;footprint, double inscribed_radius, double circumscribed_radius)=0</argsstring>
        <name>footprintCost</name>
        <param>
          <type>const geometry_msgs::Point &amp;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::Point &gt; &amp;</type>
          <declname>footprint</declname>
        </param>
        <param>
          <type>double</type>
          <declname>inscribed_radius</declname>
        </param>
        <param>
          <type>double</type>
          <declname>circumscribed_radius</declname>
        </param>
        <briefdescription>
<para>Subclass will implement this method to check a footprint at a given position and orientation for legality in the world. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The position of the robot in world coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>footprint</parametername>
</parameternamelist>
<parameterdescription>
<para>The specification of the footprint of the robot in world coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inscribed_radius</parametername>
</parameternamelist>
<parameterdescription>
<para>The radius of the inscribed circle of the robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>circumscribed_radius</parametername>
</parameternamelist>
<parameterdescription>
<para>The radius of the circumscribed circle of the robot </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Positive if all the points lie outside the footprint, negative otherwise: -1 if footprint covers at least a lethal obstacle cell, or -2 if footprint covers at least a no-information cell, or -3 if footprint is partially or totally outside of the map </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/voxel_grid_model.h" line="124" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1VoxelGridModel_1a358fe0d75fefe46dda134ee6e3305f71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double base_local_planner::WorldModel::footprintCost</definition>
        <argsstring>(const geometry_msgs::Point &amp;position, const std::vector&lt; geometry_msgs::Point &gt; &amp;footprint, double inscribed_radius, double circumscribed_radius, double extra)</argsstring>
        <name>footprintCost</name>
        <param>
          <type>const geometry_msgs::Point &amp;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::Point &gt; &amp;</type>
          <declname>footprint</declname>
        </param>
        <param>
          <type>double</type>
          <declname>inscribed_radius</declname>
        </param>
        <param>
          <type>double</type>
          <declname>circumscribed_radius</declname>
        </param>
        <param>
          <type>double</type>
          <declname>extra</declname>
        </param>
        <briefdescription>
<para>Checks if any obstacles in the costmap lie inside a convex footprint that is rasterized into the grid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The position of the robot in world coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>footprint</parametername>
</parameternamelist>
<parameterdescription>
<para>The specification of the footprint of the robot in world coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inscribed_radius</parametername>
</parameternamelist>
<parameterdescription>
<para>The radius of the inscribed circle of the robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>circumscribed_radius</parametername>
</parameternamelist>
<parameterdescription>
<para>The radius of the circumscribed circle of the robot </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Positive if all the points lie outside the footprint, negative otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/voxel_grid_model.h" line="124" column="7" bodyfile="include/base_local_planner/world_model.h" bodystart="134" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1VoxelGridModel_1ac7e8dc9c77a2dd2fa77f5a27d812fd43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double base_local_planner::WorldModel::footprintCost</definition>
        <argsstring>(double x, double y, double theta, const std::vector&lt; geometry_msgs::Point &gt; &amp;footprint_spec, double inscribed_radius=0.0, double circumscribed_radius=0.0)</argsstring>
        <name>footprintCost</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::Point &gt; &amp;</type>
          <declname>footprint_spec</declname>
        </param>
        <param>
          <type>double</type>
          <declname>inscribed_radius</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>circumscribed_radius</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/voxel_grid_model.h" line="124" column="7" bodyfile="include/base_local_planner/world_model.h" bodystart="103" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1VoxelGridModel_1ae64342a63e8e7360997aba566b5f0ed1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::VoxelGridModel::getPoints</definition>
        <argsstring>(sensor_msgs::PointCloud2 &amp;cloud)</argsstring>
        <name>getPoints</name>
        <param>
          <type>sensor_msgs::PointCloud2 &amp;</type>
          <declname>cloud</declname>
        </param>
        <briefdescription>
<para>Function copying the Voxel points into a point cloud. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cloud</parametername>
</parameternamelist>
<parameterdescription>
<para>the point cloud to copy data to. It has the usual x,y,z channels </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/voxel_grid_model.h" line="139" column="12" bodyfile="src/voxel_grid_model.cpp" bodystart="280" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1VoxelGridModel_1a3a5b2c042a813dc06a9fdbfcd0bd6291" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::VoxelGridModel::updateWorld</definition>
        <argsstring>(const std::vector&lt; geometry_msgs::Point &gt; &amp;footprint, const std::vector&lt; costmap_2d::Observation &gt; &amp;observations, const std::vector&lt; PlanarLaserScan &gt; &amp;laser_scans)</argsstring>
        <name>updateWorld</name>
        <param>
          <type>const <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::Point &gt; &amp;</type>
          <declname>footprint</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="classcostmap__2d_1_1Observation" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">costmap_2d::Observation</ref> &gt; &amp;</type>
          <declname>observations</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="classbase__local__planner_1_1PlanarLaserScan" kindref="compound">PlanarLaserScan</ref> &gt; &amp;</type>
          <declname>laser_scans</declname>
        </param>
        <briefdescription>
<para>The costmap already keeps track of world observations, so for this world model this method does nothing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>footprint</parametername>
</parameternamelist>
<parameterdescription>
<para>The footprint of the robot in its current location </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>observations</parametername>
</parameternamelist>
<parameterdescription>
<para>The observations from various sensors </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>laser_scan</parametername>
</parameternamelist>
<parameterdescription>
<para>The scans used to clear freespace </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/voxel_grid_model.h" line="132" column="12" bodyfile="src/voxel_grid_model.cpp" bodystart="183" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1VoxelGridModel_1a41482cba0c408053ef433d486693d8b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>base_local_planner::VoxelGridModel::VoxelGridModel</definition>
        <argsstring>(double size_x, double size_y, double size_z, double xy_resolution, double z_resolution, double origin_x, double origin_y, double origin_z, double max_z, double obstacle_range)</argsstring>
        <name>VoxelGridModel</name>
        <param>
          <type>double</type>
          <declname>size_x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>size_y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>size_z</declname>
        </param>
        <param>
          <type>double</type>
          <declname>xy_resolution</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z_resolution</declname>
        </param>
        <param>
          <type>double</type>
          <declname>origin_x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>origin_y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>origin_z</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max_z</declname>
        </param>
        <param>
          <type>double</type>
          <declname>obstacle_range</declname>
        </param>
        <briefdescription>
<para>Constructor for the <ref refid="classbase__local__planner_1_1VoxelGridModel" kindref="compound">VoxelGridModel</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x size of the map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size_y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y size of the map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size_z</parametername>
</parameternamelist>
<parameterdescription>
<para>The z size of the map... up to 32 cells </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xy_resolution</parametername>
</parameternamelist>
<parameterdescription>
<para>The horizontal resolution of the map in meters/cell </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z_resolution</parametername>
</parameternamelist>
<parameterdescription>
<para>The vertical resolution of the map in meters/cell </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>origin_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x value of the origin of the map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>origin_y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y value of the origin of the map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>origin_z</parametername>
</parameternamelist>
<parameterdescription>
<para>The z value of the origin of the map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_z</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum height for an obstacle to be added to the grid </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obstacle_range</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum distance for obstacles to be added to the grid </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/voxel_grid_model.h" line="105" column="7" bodyfile="src/voxel_grid_model.cpp" bodystart="44" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1VoxelGridModel_1ab9d0a3a6fa8ea481c8b3911b90236c3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual base_local_planner::VoxelGridModel::~VoxelGridModel</definition>
        <argsstring>()</argsstring>
        <name>~VoxelGridModel</name>
        <briefdescription>
<para>Destructor for the world model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/voxel_grid_model.h" line="111" column="15" bodyfile="include/base_local_planner/voxel_grid_model.h" bodystart="111" bodyend="111"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classbase__local__planner_1_1VoxelGridModel_1a1c2c7a677f931ae95969ebf5bfcccd3d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double base_local_planner::VoxelGridModel::dist</definition>
        <argsstring>(double x0, double y0, double z0, double x1, double y1, double z1)</argsstring>
        <name>dist</name>
        <param>
          <type>double</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/voxel_grid_model.h" line="192" column="21" bodyfile="include/base_local_planner/voxel_grid_model.h" bodystart="192" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1VoxelGridModel_1a393524da3d207d7d7d1ac4979fa759ac" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::VoxelGridModel::insert</definition>
        <argsstring>(const geometry_msgs::Point32 &amp;pt)</argsstring>
        <name>insert</name>
        <param>
          <type>const geometry_msgs::Point32 &amp;</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/voxel_grid_model.h" line="196" column="19" bodyfile="include/base_local_planner/voxel_grid_model.h" bodystart="196" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1VoxelGridModel_1a5d23209def60ddb1e49b2ab5b38b57b1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double base_local_planner::VoxelGridModel::lineCost</definition>
        <argsstring>(int x0, int x1, int y0, int y1)</argsstring>
        <name>lineCost</name>
        <param>
          <type>int</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y1</declname>
        </param>
        <briefdescription>
<para>Rasterizes a line in the costmap grid and checks for collisions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x0</parametername>
</parameternamelist>
<parameterdescription>
<para>The x position of the first cell in grid coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y0</parametername>
</parameternamelist>
<parameterdescription>
<para>The y position of the first cell in grid coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x1</parametername>
</parameternamelist>
<parameterdescription>
<para>The x position of the second cell in grid coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y1</parametername>
</parameternamelist>
<parameterdescription>
<para>The y position of the second cell in grid coordinates </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A positive cost for a legal line... negative otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/voxel_grid_model.h" line="150" column="14" bodyfile="src/voxel_grid_model.cpp" bodystart="95" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1VoxelGridModel_1af8f524f9f74e572c83b04ce82f5a4608" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::VoxelGridModel::mapToWorld2D</definition>
        <argsstring>(unsigned int mx, unsigned int my, double &amp;wx, double &amp;wy)</argsstring>
        <name>mapToWorld2D</name>
        <param>
          <type>unsigned int</type>
          <declname>mx</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>my</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>wx</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>wy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/voxel_grid_model.h" line="186" column="19" bodyfile="include/base_local_planner/voxel_grid_model.h" bodystart="186" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1VoxelGridModel_1acef8400483d48cae6e563cfcb79bbc7c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::VoxelGridModel::mapToWorld3D</definition>
        <argsstring>(unsigned int mx, unsigned int my, unsigned int mz, double &amp;wx, double &amp;wy, double &amp;wz)</argsstring>
        <name>mapToWorld3D</name>
        <param>
          <type>unsigned int</type>
          <declname>mx</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>my</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>mz</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>wx</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>wy</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>wz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/voxel_grid_model.h" line="179" column="19" bodyfile="include/base_local_planner/voxel_grid_model.h" bodystart="179" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1VoxelGridModel_1a4fd267d8b1e15639cde041ce9a57c505" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double base_local_planner::VoxelGridModel::pointCost</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>pointCost</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Checks the cost of a point in the costmap. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x position of the point in cell coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y position of the point in cell coordinates </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A positive cost for a legal point... negative otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/voxel_grid_model.h" line="158" column="14" bodyfile="src/voxel_grid_model.cpp" bodystart="174" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1VoxelGridModel_1a1ec57951ccb153b2a2a2e997e703e13f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::VoxelGridModel::removePointsInScanBoundry</definition>
        <argsstring>(const PlanarLaserScan &amp;laser_scan, double raytrace_range)</argsstring>
        <name>removePointsInScanBoundry</name>
        <param>
          <type>const <ref refid="classbase__local__planner_1_1PlanarLaserScan" kindref="compound">PlanarLaserScan</ref> &amp;</type>
          <declname>laser_scan</declname>
        </param>
        <param>
          <type>double</type>
          <declname>raytrace_range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/voxel_grid_model.h" line="160" column="12" bodyfile="src/voxel_grid_model.cpp" bodystart="226" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1VoxelGridModel_1a186435fb11fac84f700c65c9d09f1c66" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool base_local_planner::VoxelGridModel::worldToMap2D</definition>
        <argsstring>(double wx, double wy, unsigned int &amp;mx, unsigned int &amp;my)</argsstring>
        <name>worldToMap2D</name>
        <param>
          <type>double</type>
          <declname>wx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wy</declname>
        </param>
        <param>
          <type>unsigned int &amp;</type>
          <declname>mx</declname>
        </param>
        <param>
          <type>unsigned int &amp;</type>
          <declname>my</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/voxel_grid_model.h" line="171" column="19" bodyfile="include/base_local_planner/voxel_grid_model.h" bodystart="171" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1VoxelGridModel_1a3a709a7c0a5b7715cc4ffd3f5b9ce739" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool base_local_planner::VoxelGridModel::worldToMap3D</definition>
        <argsstring>(double wx, double wy, double wz, unsigned int &amp;mx, unsigned int &amp;my, unsigned int &amp;mz)</argsstring>
        <name>worldToMap3D</name>
        <param>
          <type>double</type>
          <declname>wx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wz</declname>
        </param>
        <param>
          <type>unsigned int &amp;</type>
          <declname>mx</declname>
        </param>
        <param>
          <type>unsigned int &amp;</type>
          <declname>my</declname>
        </param>
        <param>
          <type>unsigned int &amp;</type>
          <declname>mz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/voxel_grid_model.h" line="162" column="19" bodyfile="include/base_local_planner/voxel_grid_model.h" bodystart="162" bodyend="169"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A class that implements the <ref refid="classbase__local__planner_1_1WorldModel" kindref="compound">WorldModel</ref> interface to provide grid based collision checks for the trajectory controller using a 3D voxel grid. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>base_local_planner::VoxelGridModel</label>
        <link refid="classbase__local__planner_1_1VoxelGridModel"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>base_local_planner::WorldModel</label>
        <link refid="classbase__local__planner_1_1WorldModel"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>base_local_planner::VoxelGridModel</label>
        <link refid="classbase__local__planner_1_1VoxelGridModel"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>base_local_planner::WorldModel</label>
        <link refid="classbase__local__planner_1_1WorldModel"/>
      </node>
    </collaborationgraph>
    <location file="include/base_local_planner/voxel_grid_model.h" line="90" column="41" bodyfile="include/base_local_planner/voxel_grid_model.h" bodystart="90" bodyend="212"/>
    <listofallmembers>
      <member refid="classbase__local__planner_1_1VoxelGridModel_1a1c2c7a677f931ae95969ebf5bfcccd3d" prot="private" virt="non-virtual"><scope>base_local_planner::VoxelGridModel</scope><name>dist</name></member>
      <member refid="classbase__local__planner_1_1VoxelGridModel_1affcef4b1c4c95dd4209d36bd0d24fc14" prot="public" virt="virtual"><scope>base_local_planner::VoxelGridModel</scope><name>footprintCost</name></member>
      <member refid="classbase__local__planner_1_1VoxelGridModel_1a36d4c808bc441e2b87b0ac038099993a" prot="public" virt="non-virtual"><scope>base_local_planner::VoxelGridModel</scope><name>footprintCost</name></member>
      <member refid="classbase__local__planner_1_1VoxelGridModel_1ac7e8dc9c77a2dd2fa77f5a27d812fd43" prot="public" virt="non-virtual"><scope>base_local_planner::VoxelGridModel</scope><name>footprintCost</name></member>
      <member refid="classbase__local__planner_1_1VoxelGridModel_1a358fe0d75fefe46dda134ee6e3305f71" prot="public" virt="non-virtual"><scope>base_local_planner::VoxelGridModel</scope><name>footprintCost</name></member>
      <member refid="classbase__local__planner_1_1WorldModel_1ac7e8dc9c77a2dd2fa77f5a27d812fd43" prot="public" virt="non-virtual" ambiguityscope="base_local_planner::WorldModel::"><scope>base_local_planner::VoxelGridModel</scope><name>footprintCost</name></member>
      <member refid="classbase__local__planner_1_1WorldModel_1a358fe0d75fefe46dda134ee6e3305f71" prot="public" virt="non-virtual" ambiguityscope="base_local_planner::WorldModel::"><scope>base_local_planner::VoxelGridModel</scope><name>footprintCost</name></member>
      <member refid="classbase__local__planner_1_1VoxelGridModel_1ae64342a63e8e7360997aba566b5f0ed1" prot="public" virt="non-virtual"><scope>base_local_planner::VoxelGridModel</scope><name>getPoints</name></member>
      <member refid="classbase__local__planner_1_1VoxelGridModel_1a393524da3d207d7d7d1ac4979fa759ac" prot="private" virt="non-virtual"><scope>base_local_planner::VoxelGridModel</scope><name>insert</name></member>
      <member refid="classbase__local__planner_1_1VoxelGridModel_1a5d23209def60ddb1e49b2ab5b38b57b1" prot="private" virt="non-virtual"><scope>base_local_planner::VoxelGridModel</scope><name>lineCost</name></member>
      <member refid="classbase__local__planner_1_1VoxelGridModel_1af8f524f9f74e572c83b04ce82f5a4608" prot="private" virt="non-virtual"><scope>base_local_planner::VoxelGridModel</scope><name>mapToWorld2D</name></member>
      <member refid="classbase__local__planner_1_1VoxelGridModel_1acef8400483d48cae6e563cfcb79bbc7c" prot="private" virt="non-virtual"><scope>base_local_planner::VoxelGridModel</scope><name>mapToWorld3D</name></member>
      <member refid="classbase__local__planner_1_1VoxelGridModel_1aa9d5f978d8eb185e9fcdc325212fda46" prot="private" virt="non-virtual"><scope>base_local_planner::VoxelGridModel</scope><name>max_z_</name></member>
      <member refid="classbase__local__planner_1_1VoxelGridModel_1ad8bd0fed79e42f431c92cb8916e049f9" prot="private" virt="non-virtual"><scope>base_local_planner::VoxelGridModel</scope><name>obstacle_grid_</name></member>
      <member refid="classbase__local__planner_1_1VoxelGridModel_1a50ccc7fead8cd105840c9858c5ef001f" prot="private" virt="non-virtual"><scope>base_local_planner::VoxelGridModel</scope><name>origin_x_</name></member>
      <member refid="classbase__local__planner_1_1VoxelGridModel_1ae2d0311c5a1c6110b929d0111fb1ce79" prot="private" virt="non-virtual"><scope>base_local_planner::VoxelGridModel</scope><name>origin_y_</name></member>
      <member refid="classbase__local__planner_1_1VoxelGridModel_1a867dabbafce30cdaa5f7f736445abfeb" prot="private" virt="non-virtual"><scope>base_local_planner::VoxelGridModel</scope><name>origin_z_</name></member>
      <member refid="classbase__local__planner_1_1VoxelGridModel_1a4fd267d8b1e15639cde041ce9a57c505" prot="private" virt="non-virtual"><scope>base_local_planner::VoxelGridModel</scope><name>pointCost</name></member>
      <member refid="classbase__local__planner_1_1VoxelGridModel_1a1ec57951ccb153b2a2a2e997e703e13f" prot="private" virt="non-virtual"><scope>base_local_planner::VoxelGridModel</scope><name>removePointsInScanBoundry</name></member>
      <member refid="classbase__local__planner_1_1VoxelGridModel_1a61791d30cb1403e93f3e3659743abd74" prot="private" virt="non-virtual"><scope>base_local_planner::VoxelGridModel</scope><name>sq_obstacle_range_</name></member>
      <member refid="classbase__local__planner_1_1VoxelGridModel_1a3a5b2c042a813dc06a9fdbfcd0bd6291" prot="public" virt="non-virtual"><scope>base_local_planner::VoxelGridModel</scope><name>updateWorld</name></member>
      <member refid="classbase__local__planner_1_1VoxelGridModel_1a41482cba0c408053ef433d486693d8b4" prot="public" virt="non-virtual"><scope>base_local_planner::VoxelGridModel</scope><name>VoxelGridModel</name></member>
      <member refid="classbase__local__planner_1_1WorldModel_1a577351de9f26b9fc6f702e1cceed84e4" prot="protected" virt="non-virtual"><scope>base_local_planner::VoxelGridModel</scope><name>WorldModel</name></member>
      <member refid="classbase__local__planner_1_1VoxelGridModel_1a186435fb11fac84f700c65c9d09f1c66" prot="private" virt="non-virtual"><scope>base_local_planner::VoxelGridModel</scope><name>worldToMap2D</name></member>
      <member refid="classbase__local__planner_1_1VoxelGridModel_1a3a709a7c0a5b7715cc4ffd3f5b9ce739" prot="private" virt="non-virtual"><scope>base_local_planner::VoxelGridModel</scope><name>worldToMap3D</name></member>
      <member refid="classbase__local__planner_1_1VoxelGridModel_1a9a2a512520fcb62c8ea1f1f8c91094b9" prot="private" virt="non-virtual"><scope>base_local_planner::VoxelGridModel</scope><name>xy_resolution_</name></member>
      <member refid="classbase__local__planner_1_1VoxelGridModel_1a30df42099cd22d24e1b7d9900c1b60e0" prot="private" virt="non-virtual"><scope>base_local_planner::VoxelGridModel</scope><name>z_resolution_</name></member>
      <member refid="classbase__local__planner_1_1VoxelGridModel_1ab9d0a3a6fa8ea481c8b3911b90236c3b" prot="public" virt="virtual"><scope>base_local_planner::VoxelGridModel</scope><name>~VoxelGridModel</name></member>
      <member refid="classbase__local__planner_1_1WorldModel_1a87c45611143fde55c4a2efb4d078471d" prot="public" virt="virtual"><scope>base_local_planner::VoxelGridModel</scope><name>~WorldModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
