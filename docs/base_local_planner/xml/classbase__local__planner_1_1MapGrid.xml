<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classbase__local__planner_1_1MapGrid" kind="class" language="C++" prot="public">
    <compoundname>base_local_planner::MapGrid</compoundname>
    <includes refid="map__grid_8h" local="no">map_grid.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classbase__local__planner_1_1MapGrid_1a6153b07220fff0cad38a82491d288510" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::MapGrid::goal_x_</definition>
        <argsstring></argsstring>
        <name>goal_x_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid.h" line="221" column="14" bodyfile="include/base_local_planner/map_grid.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1MapGrid_1ab53586ea5096453439256dd47545559b" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::MapGrid::goal_y_</definition>
        <argsstring></argsstring>
        <name>goal_y_</name>
        <briefdescription>
<para>The goal distance was last computed from. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid.h" line="221" column="22" bodyfile="include/base_local_planner/map_grid.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1MapGrid_1a41702016ab4edc01a0b23fc05a9c64de" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int base_local_planner::MapGrid::size_x_</definition>
        <argsstring></argsstring>
        <name>size_x_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid.h" line="223" column="20" bodyfile="include/base_local_planner/map_grid.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1MapGrid_1afac1b094ef9469b56c59c3ab1008de47" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int base_local_planner::MapGrid::size_y_</definition>
        <argsstring></argsstring>
        <name>size_y_</name>
        <briefdescription>
<para>The dimensions of the grid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid.h" line="223" column="28" bodyfile="include/base_local_planner/map_grid.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classbase__local__planner_1_1MapGrid_1a8e42b62548d1e12c82db5a7e843a0b0e" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="classbase__local__planner_1_1MapCell" kindref="compound">MapCell</ref> &gt;</type>
        <definition>std::vector&lt;MapCell&gt; base_local_planner::MapGrid::map_</definition>
        <argsstring></argsstring>
        <name>map_</name>
        <briefdescription>
<para>Storage for the MapCells. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid.h" line="227" column="19" bodyfile="include/base_local_planner/map_grid.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classbase__local__planner_1_1MapGrid_1a68495bea908d9bf692ef8520ca4fb432" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::MapGrid::commonInit</definition>
        <argsstring>()</argsstring>
        <name>commonInit</name>
        <briefdescription>
<para>Utility to share initialization code across constructors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid.h" line="155" column="12" bodyfile="src/map_grid.cpp" bodystart="57" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1MapGrid_1a35b47e664abc157ef47e8a1ed5d0d357" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::MapGrid::computeGoalDistance</definition>
        <argsstring>(std::queue&lt; MapCell * &gt; &amp;dist_queue, const costmap_2d::Costmap2D &amp;costmap)</argsstring>
        <name>computeGoalDistance</name>
        <param>
          <type><ref refid="cpp/container/queue" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::queue</ref>&lt; <ref refid="classbase__local__planner_1_1MapCell" kindref="compound">MapCell</ref> * &gt; &amp;</type>
          <declname>dist_queue</declname>
        </param>
        <param>
          <type>const <ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">costmap_2d::Costmap2D</ref> &amp;</type>
          <declname>costmap</declname>
        </param>
        <briefdescription>
<para>Compute the distance from each cell in the local map grid to the local goal point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>goal_queue</parametername>
</parameternamelist>
<parameterdescription>
<para>A queue containing the local goal cell </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid.h" line="208" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1MapGrid_1ab29d565af28ed4dc377ac997c70070f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::MapGrid::computeTargetDistance</definition>
        <argsstring>(std::queue&lt; MapCell * &gt; &amp;dist_queue, const costmap_2d::Costmap2D &amp;costmap)</argsstring>
        <name>computeTargetDistance</name>
        <param>
          <type><ref refid="cpp/container/queue" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::queue</ref>&lt; <ref refid="classbase__local__planner_1_1MapCell" kindref="compound">MapCell</ref> * &gt; &amp;</type>
          <declname>dist_queue</declname>
        </param>
        <param>
          <type>const <ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">costmap_2d::Costmap2D</ref> &amp;</type>
          <declname>costmap</declname>
        </param>
        <briefdescription>
<para>Compute the distance from each cell in the local map grid to the planned path. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dist_queue</parametername>
</parameternamelist>
<parameterdescription>
<para>A queue of the initial cells on the path </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid.h" line="202" column="12" bodyfile="src/map_grid.cpp" bodystart="254" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1MapGrid_1acbeadc4a517c19334f36831931019ec1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__local__planner_1_1MapCell" kindref="compound">MapCell</ref> &amp;</type>
        <definition>MapCell&amp; base_local_planner::MapGrid::getCell</definition>
        <argsstring>(unsigned int x, unsigned int y)</argsstring>
        <name>getCell</name>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid.h" line="119" column="22" bodyfile="include/base_local_planner/map_grid.h" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1MapGrid_1a3fd22c28f3c45c9336ec7f1ecb33d423" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cpp/types/size_t" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size_t</ref></type>
        <definition>size_t base_local_planner::MapGrid::getIndex</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>getIndex</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Returns a 1D index into the <ref refid="classbase__local__planner_1_1MapCell" kindref="compound">MapCell</ref> array for a 2D index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired x coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired y coordinate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The associated 1D index </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid.h" line="163" column="14" bodyfile="src/map_grid.cpp" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1MapGrid_1ad10445cf88357f857c8e03b47262b732" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>base_local_planner::MapGrid::MapGrid</definition>
        <argsstring>()</argsstring>
        <name>MapGrid</name>
        <briefdescription>
<para>Creates a 0x0 map by default. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid.h" line="89" column="7" bodyfile="src/map_grid.cpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1MapGrid_1a374361ae0ac1a7e046ff0013af4285b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>base_local_planner::MapGrid::MapGrid</definition>
        <argsstring>(const MapGrid &amp;mg)</argsstring>
        <name>MapGrid</name>
        <param>
          <type>const <ref refid="classbase__local__planner_1_1MapGrid" kindref="compound">MapGrid</ref> &amp;</type>
          <declname>mg</declname>
        </param>
        <briefdescription>
<para>Copy constructor for a <ref refid="classbase__local__planner_1_1MapGrid" kindref="compound">MapGrid</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mg</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classbase__local__planner_1_1MapGrid" kindref="compound">MapGrid</ref> to copy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid.h" line="132" column="7" bodyfile="src/map_grid.cpp" bodystart="51" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1MapGrid_1a55e83a26cdb3c6614d9ca4635da5dc92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>base_local_planner::MapGrid::MapGrid</definition>
        <argsstring>(unsigned int size_x, unsigned int size_y)</argsstring>
        <name>MapGrid</name>
        <param>
          <type>unsigned int</type>
          <declname>size_x</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>size_y</declname>
        </param>
        <briefdescription>
<para>Creates a map of size_x by size_y. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The width of the map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size_y</parametername>
</parameternamelist>
<parameterdescription>
<para>The height of the map </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid.h" line="96" column="7" bodyfile="src/map_grid.cpp" bodystart="45" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1MapGrid_1af3db024faefa9420ec75b18d4da90cfe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double base_local_planner::MapGrid::obstacleCosts</definition>
        <argsstring>()</argsstring>
        <name>obstacleCosts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return a value that indicates cell is in obstacle </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid.h" line="168" column="21" bodyfile="include/base_local_planner/map_grid.h" bodystart="168" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1MapGrid_1a4656eac311da1aad984f1e39e96f0bfa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__local__planner_1_1MapCell" kindref="compound">MapCell</ref> &amp;</type>
        <definition>MapCell&amp; base_local_planner::MapGrid::operator()</definition>
        <argsstring>(unsigned int x, unsigned int y)</argsstring>
        <name>operator()</name>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Returns a map cell accessed by (col, row) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x coordinate of the cell </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y coordinate of the cell </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the desired cell </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid.h" line="105" column="22" bodyfile="include/base_local_planner/map_grid.h" bodystart="105" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1MapGrid_1a28b6b750b5eae5778c55b9cb4bfca04f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbase__local__planner_1_1MapCell" kindref="compound">MapCell</ref></type>
        <definition>MapCell base_local_planner::MapGrid::operator()</definition>
        <argsstring>(unsigned int x, unsigned int y) const</argsstring>
        <name>operator()</name>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Returns a map cell accessed by (col, row) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x coordinate of the cell </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y coordinate of the cell </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A copy of the desired cell </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid.h" line="115" column="22" bodyfile="include/base_local_planner/map_grid.h" bodystart="115" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1MapGrid_1a058863c16849dab1495f4206bed28321" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbase__local__planner_1_1MapGrid" kindref="compound">MapGrid</ref> &amp;</type>
        <definition>MapGrid &amp; base_local_planner::MapGrid::operator=</definition>
        <argsstring>(const MapGrid &amp;mg)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classbase__local__planner_1_1MapGrid" kindref="compound">MapGrid</ref> &amp;</type>
          <declname>mg</declname>
        </param>
        <briefdescription>
<para>Assignment operator for a <ref refid="classbase__local__planner_1_1MapGrid" kindref="compound">MapGrid</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mg</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classbase__local__planner_1_1MapGrid" kindref="compound">MapGrid</ref> to assign from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid.h" line="138" column="15" bodyfile="src/map_grid.cpp" bodystart="77" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1MapGrid_1aaede39518e77d4eb1f7fc7766da5cb11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::MapGrid::resetPathDist</definition>
        <argsstring>()</argsstring>
        <name>resetPathDist</name>
        <briefdescription>
<para>reset path distance fields for all cells </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid.h" line="143" column="12" bodyfile="src/map_grid.cpp" bodystart="124" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1MapGrid_1ab73fe99a7ad21b36a3178e26296945d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::MapGrid::setLocalGoal</definition>
        <argsstring>(const costmap_2d::Costmap2D &amp;costmap, const std::vector&lt; geometry_msgs::PoseStamped &gt; &amp;global_plan)</argsstring>
        <name>setLocalGoal</name>
        <param>
          <type>const <ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">costmap_2d::Costmap2D</ref> &amp;</type>
          <declname>costmap</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::PoseStamped &gt; &amp;</type>
          <declname>global_plan</declname>
        </param>
        <briefdescription>
<para>Update what cell is considered the next local goal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid.h" line="218" column="12" bodyfile="src/map_grid.cpp" bodystart="209" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1MapGrid_1a8e3227190b9f67376ee2890f493079d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::MapGrid::setTargetCells</definition>
        <argsstring>(const costmap_2d::Costmap2D &amp;costmap, const std::vector&lt; geometry_msgs::PoseStamped &gt; &amp;global_plan)</argsstring>
        <name>setTargetCells</name>
        <param>
          <type>const <ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">costmap_2d::Costmap2D</ref> &amp;</type>
          <declname>costmap</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::PoseStamped &gt; &amp;</type>
          <declname>global_plan</declname>
        </param>
        <briefdescription>
<para>Update what cells are considered path based on the global plan. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid.h" line="213" column="12" bodyfile="src/map_grid.cpp" bodystart="170" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1MapGrid_1ada7418321ccc809a6dfa8e45ada16c6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::MapGrid::sizeCheck</definition>
        <argsstring>(unsigned int size_x, unsigned int size_y)</argsstring>
        <name>sizeCheck</name>
        <param>
          <type>unsigned int</type>
          <declname>size_x</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>size_y</declname>
        </param>
        <briefdescription>
<para>check if we need to resize </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired width </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size_y</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired height </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid.h" line="150" column="12" bodyfile="src/map_grid.cpp" bodystart="84" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1MapGrid_1a1b7145c6781d0d3703a1003b9f753420" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double base_local_planner::MapGrid::unreachableCellCosts</definition>
        <argsstring>()</argsstring>
        <name>unreachableCellCosts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a value indicating cell was not reached by wavefront propagation of set cells. (is behind walls, regarding the region covered by grid) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid.h" line="176" column="21" bodyfile="include/base_local_planner/map_grid.h" bodystart="176" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1MapGrid_1a88efaf02a2735770450745f47239f0d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool base_local_planner::MapGrid::updatePathCell</definition>
        <argsstring>(MapCell *current_cell, MapCell *check_cell, const costmap_2d::Costmap2D &amp;costmap)</argsstring>
        <name>updatePathCell</name>
        <param>
          <type><ref refid="classbase__local__planner_1_1MapCell" kindref="compound">MapCell</ref> *</type>
          <declname>current_cell</declname>
        </param>
        <param>
          <type><ref refid="classbase__local__planner_1_1MapCell" kindref="compound">MapCell</ref> *</type>
          <declname>check_cell</declname>
        </param>
        <param>
          <type>const <ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">costmap_2d::Costmap2D</ref> &amp;</type>
          <declname>costmap</declname>
        </param>
        <briefdescription>
<para>Used to update the distance of a cell in path distance computation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>current_cell</parametername>
</parameternamelist>
<parameterdescription>
<para>The cell we&apos;re currently in </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>check_cell</parametername>
</parameternamelist>
<parameterdescription>
<para>The cell to be updated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid.h" line="185" column="19" bodyfile="src/map_grid.cpp" bodystart="103" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1MapGrid_1a8efc6461e975c937560ef8e68b471a78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>base_local_planner::MapGrid::~MapGrid</definition>
        <argsstring>()</argsstring>
        <name>~MapGrid</name>
        <briefdescription>
<para>Destructor for a <ref refid="classbase__local__planner_1_1MapGrid" kindref="compound">MapGrid</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid.h" line="126" column="7" bodyfile="include/base_local_planner/map_grid.h" bodystart="126" bodyend="126"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classbase__local__planner_1_1MapGrid_1a0af367c6272d3c4b7c16dde4a41c306a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::MapGrid::adjustPlanResolution</definition>
        <argsstring>(const std::vector&lt; geometry_msgs::PoseStamped &gt; &amp;global_plan_in, std::vector&lt; geometry_msgs::PoseStamped &gt; &amp;global_plan_out, double resolution)</argsstring>
        <name>adjustPlanResolution</name>
        <param>
          <type>const <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::PoseStamped &gt; &amp;</type>
          <declname>global_plan_in</declname>
        </param>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::PoseStamped &gt; &amp;</type>
          <declname>global_plan_out</declname>
        </param>
        <param>
          <type>double</type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>increase global plan resolution to match that of the costmap by adding points linearly between global plan points This is necessary where global planners produce plans with few points. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>global_plan_in</parametername>
</parameternamelist>
<parameterdescription>
<para>input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>global_plan_output</parametername>
</parameternamelist>
<parameterdescription>
<para>output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resolution</parametername>
</parameternamelist>
<parameterdescription>
<para>desired distance between waypoints </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/map_grid.h" line="195" column="19" bodyfile="src/map_grid.cpp" bodystart="132" bodyend="167"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A grid of <ref refid="classbase__local__planner_1_1MapCell" kindref="compound">MapCell</ref> cells that is used to propagate path and goal distances for the trajectory controller. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>base_local_planner::MapGrid</label>
        <link refid="classbase__local__planner_1_1MapGrid"/>
        <childnode refid="2" relation="usage">
          <edgelabel>map_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::vector&lt; base_local_planner::MapCell &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="include/base_local_planner/map_grid.h" line="84" column="16" bodyfile="include/base_local_planner/map_grid.h" bodystart="84" bodyend="229"/>
    <listofallmembers>
      <member refid="classbase__local__planner_1_1MapGrid_1a0af367c6272d3c4b7c16dde4a41c306a" prot="public" virt="non-virtual"><scope>base_local_planner::MapGrid</scope><name>adjustPlanResolution</name></member>
      <member refid="classbase__local__planner_1_1MapGrid_1a68495bea908d9bf692ef8520ca4fb432" prot="public" virt="non-virtual"><scope>base_local_planner::MapGrid</scope><name>commonInit</name></member>
      <member refid="classbase__local__planner_1_1MapGrid_1a35b47e664abc157ef47e8a1ed5d0d357" prot="public" virt="non-virtual"><scope>base_local_planner::MapGrid</scope><name>computeGoalDistance</name></member>
      <member refid="classbase__local__planner_1_1MapGrid_1ab29d565af28ed4dc377ac997c70070f2" prot="public" virt="non-virtual"><scope>base_local_planner::MapGrid</scope><name>computeTargetDistance</name></member>
      <member refid="classbase__local__planner_1_1MapGrid_1acbeadc4a517c19334f36831931019ec1" prot="public" virt="non-virtual"><scope>base_local_planner::MapGrid</scope><name>getCell</name></member>
      <member refid="classbase__local__planner_1_1MapGrid_1a3fd22c28f3c45c9336ec7f1ecb33d423" prot="public" virt="non-virtual"><scope>base_local_planner::MapGrid</scope><name>getIndex</name></member>
      <member refid="classbase__local__planner_1_1MapGrid_1a6153b07220fff0cad38a82491d288510" prot="public" virt="non-virtual"><scope>base_local_planner::MapGrid</scope><name>goal_x_</name></member>
      <member refid="classbase__local__planner_1_1MapGrid_1ab53586ea5096453439256dd47545559b" prot="public" virt="non-virtual"><scope>base_local_planner::MapGrid</scope><name>goal_y_</name></member>
      <member refid="classbase__local__planner_1_1MapGrid_1a8e42b62548d1e12c82db5a7e843a0b0e" prot="private" virt="non-virtual"><scope>base_local_planner::MapGrid</scope><name>map_</name></member>
      <member refid="classbase__local__planner_1_1MapGrid_1ad10445cf88357f857c8e03b47262b732" prot="public" virt="non-virtual"><scope>base_local_planner::MapGrid</scope><name>MapGrid</name></member>
      <member refid="classbase__local__planner_1_1MapGrid_1a55e83a26cdb3c6614d9ca4635da5dc92" prot="public" virt="non-virtual"><scope>base_local_planner::MapGrid</scope><name>MapGrid</name></member>
      <member refid="classbase__local__planner_1_1MapGrid_1a374361ae0ac1a7e046ff0013af4285b6" prot="public" virt="non-virtual"><scope>base_local_planner::MapGrid</scope><name>MapGrid</name></member>
      <member refid="classbase__local__planner_1_1MapGrid_1af3db024faefa9420ec75b18d4da90cfe" prot="public" virt="non-virtual"><scope>base_local_planner::MapGrid</scope><name>obstacleCosts</name></member>
      <member refid="classbase__local__planner_1_1MapGrid_1a4656eac311da1aad984f1e39e96f0bfa" prot="public" virt="non-virtual"><scope>base_local_planner::MapGrid</scope><name>operator()</name></member>
      <member refid="classbase__local__planner_1_1MapGrid_1a28b6b750b5eae5778c55b9cb4bfca04f" prot="public" virt="non-virtual"><scope>base_local_planner::MapGrid</scope><name>operator()</name></member>
      <member refid="classbase__local__planner_1_1MapGrid_1a058863c16849dab1495f4206bed28321" prot="public" virt="non-virtual"><scope>base_local_planner::MapGrid</scope><name>operator=</name></member>
      <member refid="classbase__local__planner_1_1MapGrid_1aaede39518e77d4eb1f7fc7766da5cb11" prot="public" virt="non-virtual"><scope>base_local_planner::MapGrid</scope><name>resetPathDist</name></member>
      <member refid="classbase__local__planner_1_1MapGrid_1ab73fe99a7ad21b36a3178e26296945d5" prot="public" virt="non-virtual"><scope>base_local_planner::MapGrid</scope><name>setLocalGoal</name></member>
      <member refid="classbase__local__planner_1_1MapGrid_1a8e3227190b9f67376ee2890f493079d5" prot="public" virt="non-virtual"><scope>base_local_planner::MapGrid</scope><name>setTargetCells</name></member>
      <member refid="classbase__local__planner_1_1MapGrid_1a41702016ab4edc01a0b23fc05a9c64de" prot="public" virt="non-virtual"><scope>base_local_planner::MapGrid</scope><name>size_x_</name></member>
      <member refid="classbase__local__planner_1_1MapGrid_1afac1b094ef9469b56c59c3ab1008de47" prot="public" virt="non-virtual"><scope>base_local_planner::MapGrid</scope><name>size_y_</name></member>
      <member refid="classbase__local__planner_1_1MapGrid_1ada7418321ccc809a6dfa8e45ada16c6d" prot="public" virt="non-virtual"><scope>base_local_planner::MapGrid</scope><name>sizeCheck</name></member>
      <member refid="classbase__local__planner_1_1MapGrid_1a1b7145c6781d0d3703a1003b9f753420" prot="public" virt="non-virtual"><scope>base_local_planner::MapGrid</scope><name>unreachableCellCosts</name></member>
      <member refid="classbase__local__planner_1_1MapGrid_1a88efaf02a2735770450745f47239f0d9" prot="public" virt="non-virtual"><scope>base_local_planner::MapGrid</scope><name>updatePathCell</name></member>
      <member refid="classbase__local__planner_1_1MapGrid_1a8efc6461e975c937560ef8e68b471a78" prot="public" virt="non-virtual"><scope>base_local_planner::MapGrid</scope><name>~MapGrid</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
