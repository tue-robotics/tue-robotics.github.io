<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classbase__local__planner_1_1TrajectoryPlanner" kind="class" language="C++" prot="public">
    <compoundname>base_local_planner::TrajectoryPlanner</compoundname>
    <includes refid="trajectory__planner_8h" local="no">trajectory_planner.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classbase__local__planner_1_1TrajectoryPlanner_1a156887bf956f38e1462db6dfbbe523a1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TrajectoryPlannerTest</definition>
        <argsstring></argsstring>
        <name>TrajectoryPlannerTest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="102" column="5" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1af212f9a9ecc07a1db91a97d0482074e0" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::acc_lim_theta_</definition>
        <argsstring></argsstring>
        <name>acc_lim_theta_</name>
        <briefdescription>
<para>The acceleration limits of the robot. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="325" column="36" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a82433daefdecb2f33b5cafdcc361af4f" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::acc_lim_x_</definition>
        <argsstring></argsstring>
        <name>acc_lim_x_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="325" column="14" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1ac84b1c3bee279de48b6e8c9487fce066" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::acc_lim_y_</definition>
        <argsstring></argsstring>
        <name>acc_lim_y_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="325" column="25" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a28e137b98274f7ceda2f2eeb497e6ab5" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::angular_sim_granularity_</definition>
        <argsstring></argsstring>
        <name>angular_sim_granularity_</name>
        <briefdescription>
<para>The distance between angular simulation points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="319" column="14" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a7ac35a1ec8c8a60d503ec73593d9df5a" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::backup_vel_</definition>
        <argsstring></argsstring>
        <name>backup_vel_</name>
        <briefdescription>
<para>The velocity to use while backing up. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="339" column="14" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a0e002c8878231a70785aadd928e5ae5d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::circumscribed_radius_</definition>
        <argsstring></argsstring>
        <name>circumscribed_radius_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="351" column="32" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1aa8a12b241174a691ccb102f07ebbc218" prot="private" static="no" mutable="no">
        <type>boost::mutex</type>
        <definition>boost::mutex base_local_planner::TrajectoryPlanner::configuration_mutex_</definition>
        <argsstring></argsstring>
        <name>configuration_mutex_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="353" column="20" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a427473829005f026021798a2da855515" prot="private" static="no" mutable="no">
        <type>const <ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">costmap_2d::Costmap2D</ref> &amp;</type>
        <definition>const costmap_2d::Costmap2D&amp; base_local_planner::TrajectoryPlanner::costmap_</definition>
        <argsstring></argsstring>
        <name>costmap_</name>
        <briefdescription>
<para>Provides access to cost map information. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="296" column="35" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a86059f83bea9cfa99ce90c02c8ab0c8d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool base_local_planner::TrajectoryPlanner::dwa_</definition>
        <argsstring></argsstring>
        <name>dwa_</name>
        <briefdescription>
<para>Should we use the dynamic window approach? </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="341" column="12" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a2e06d36ab5445545d2962b031805873e" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::escape_reset_dist_</definition>
        <argsstring></argsstring>
        <name>escape_reset_dist_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="334" column="14" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1ac4c627bceed847bc3ae7cd8471c2880b" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::escape_reset_theta_</definition>
        <argsstring></argsstring>
        <name>escape_reset_theta_</name>
        <briefdescription>
<para>The distance the robot must travel before it can leave escape mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="334" column="33" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a4fe36fdff093780fb769adbb13a3207a" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::escape_theta_</definition>
        <argsstring></argsstring>
        <name>escape_theta_</name>
        <briefdescription>
<para>Used to calculate the distance the robot has traveled before reseting escape booleans. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="328" column="34" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a12154babd84af0fdcb45a280e6089cd7" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::escape_x_</definition>
        <argsstring></argsstring>
        <name>escape_x_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="328" column="14" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a36dfa6683ed074e63ff129451b975493" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::escape_y_</definition>
        <argsstring></argsstring>
        <name>escape_y_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="328" column="24" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a89537dae396e2c07f35be85c679488a5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool base_local_planner::TrajectoryPlanner::escaping_</definition>
        <argsstring></argsstring>
        <name>escaping_</name>
        <briefdescription>
<para>Boolean to keep track of whether we&apos;re in escape mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="309" column="12" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a023d6ed6138443cf3a7c21735d399d57" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool base_local_planner::TrajectoryPlanner::final_goal_position_valid_</definition>
        <argsstring></argsstring>
        <name>final_goal_position_valid_</name>
        <briefdescription>
<para>True if final_goal_x_ and final_goal_y_ have valid data. Only false if an empty path is sent. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="315" column="12" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1afe277818c659b7ded87b944f27e63259" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::final_goal_x_</definition>
        <argsstring></argsstring>
        <name>final_goal_x_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="314" column="14" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1ac3c769c5f38c1337965fd3275f995f35" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::final_goal_y_</definition>
        <argsstring></argsstring>
        <name>final_goal_y_</name>
        <briefdescription>
<para>The end position of the plan. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="314" column="28" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a870914451b4efe68bd7be8d2816f1a18" prot="private" static="no" mutable="no">
        <type><ref refid="classbase__local__planner_1_1FootprintHelper" kindref="compound">base_local_planner::FootprintHelper</ref></type>
        <definition>base_local_planner::FootprintHelper base_local_planner::TrajectoryPlanner::footprint_helper_</definition>
        <argsstring></argsstring>
        <name>footprint_helper_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="292" column="43" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a010de99484b85362d060624780cc5d92" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::Point &gt;</type>
        <definition>std::vector&lt;geometry_msgs::Point&gt; base_local_planner::TrajectoryPlanner::footprint_spec_</definition>
        <argsstring></argsstring>
        <name>footprint_spec_</name>
        <briefdescription>
<para>The footprint specification of the robot. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="299" column="19" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a2c5b9a33117e579550c1060cf7f3e142" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::PoseStamped &gt;</type>
        <definition>std::vector&lt;geometry_msgs::PoseStamped&gt; base_local_planner::TrajectoryPlanner::global_plan_</definition>
        <argsstring></argsstring>
        <name>global_plan_</name>
        <briefdescription>
<para>The global path for the robot to follow. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="301" column="19" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a2369ccc6dba46bdfcf10cee655d2d118" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::goal_distance_bias_</definition>
        <argsstring></argsstring>
        <name>goal_distance_bias_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="324" column="34" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1ae8f2f8369eb893ec4c37001c142d3db5" prot="private" static="no" mutable="no">
        <type><ref refid="classbase__local__planner_1_1MapGrid" kindref="compound">MapGrid</ref></type>
        <definition>MapGrid base_local_planner::TrajectoryPlanner::goal_map_</definition>
        <argsstring></argsstring>
        <name>goal_map_</name>
        <briefdescription>
<para>The local map grid where we propagate goal distance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="295" column="15" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a650f7b3ec7732318271dce4fa29f8b77" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::goal_x_</definition>
        <argsstring></argsstring>
        <name>goal_x_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="312" column="14" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a575b14a06d9d982898b36b88714aee40" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::goal_y_</definition>
        <argsstring></argsstring>
        <name>goal_y_</name>
        <briefdescription>
<para>Storage for the local goal the robot is pursuing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="312" column="21" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a453521003c8a2def8f7c7b0ba1ef9894" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::heading_lookahead_</definition>
        <argsstring></argsstring>
        <name>heading_lookahead_</name>
        <briefdescription>
<para>How far the robot should look ahead of itself when differentiating between different rotational velocities. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="332" column="14" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a1c76975ab90a0952538d435ab782b7f4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool base_local_planner::TrajectoryPlanner::heading_scoring_</definition>
        <argsstring></argsstring>
        <name>heading_scoring_</name>
        <briefdescription>
<para>Should we score based on the rollout approach or the heading approach. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="342" column="12" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a350e42ec12def8880eecf441d83f44bf" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::heading_scoring_timestep_</definition>
        <argsstring></argsstring>
        <name>heading_scoring_timestep_</name>
        <briefdescription>
<para>How far to look ahead in time when we score a heading. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="343" column="14" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a1edda9ad372428d05f954aad5b9da9b4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool base_local_planner::TrajectoryPlanner::holonomic_robot_</definition>
        <argsstring></argsstring>
        <name>holonomic_robot_</name>
        <briefdescription>
<para>Is the robot holonomic or not? </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="335" column="12" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1abd9186ed8703b03123c4518ddfab6fe4" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::inscribed_radius_</definition>
        <argsstring></argsstring>
        <name>inscribed_radius_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="351" column="14" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a6d205cfad977b364a103dcd523f189f6" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::max_vel_th_</definition>
        <argsstring></argsstring>
        <name>max_vel_th_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="337" column="36" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a17e663c990e2705fdfffc512a22926e1" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::max_vel_x_</definition>
        <argsstring></argsstring>
        <name>max_vel_x_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="337" column="14" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a5f29fcc8b4a56f6b3cb438cb8cf062eb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool base_local_planner::TrajectoryPlanner::meter_scoring_</definition>
        <argsstring></argsstring>
        <name>meter_scoring_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="310" column="12" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1af3ed1fa44d9f4c55486bf15407ec8cb0" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::min_in_place_vel_th_</definition>
        <argsstring></argsstring>
        <name>min_in_place_vel_th_</name>
        <briefdescription>
<para>Velocity limits for the controller. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="337" column="60" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a41241453b8b3c665ef9d910e721f33a5" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::min_vel_th_</definition>
        <argsstring></argsstring>
        <name>min_vel_th_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="337" column="48" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1ace2a2cec2204ac066abe84ea39f0f642" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::min_vel_x_</definition>
        <argsstring></argsstring>
        <name>min_vel_x_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="337" column="25" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a58c8fa7023dba6cbba95839faee0f76d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::occdist_scale_</definition>
        <argsstring></argsstring>
        <name>occdist_scale_</name>
        <briefdescription>
<para>Scaling factors for the controller&apos;s cost function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="324" column="54" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a2909e523020dda88f5250a7a35cc1944" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::oscillation_reset_dist_</definition>
        <argsstring></argsstring>
        <name>oscillation_reset_dist_</name>
        <briefdescription>
<para>The distance the robot must travel before it can explore rotational velocities that were unsuccessful in the past. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="333" column="14" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a289c74ab336969463146ea7529fbd27e" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::path_distance_bias_</definition>
        <argsstring></argsstring>
        <name>path_distance_bias_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="324" column="14" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a56216c876fbe0af94c66827558c10f29" prot="private" static="no" mutable="no">
        <type><ref refid="classbase__local__planner_1_1MapGrid" kindref="compound">MapGrid</ref></type>
        <definition>MapGrid base_local_planner::TrajectoryPlanner::path_map_</definition>
        <argsstring></argsstring>
        <name>path_map_</name>
        <briefdescription>
<para>The local map grid where we propagate path distance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="294" column="15" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1ace87f6aece448f136b515c93e856619b" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::prev_x_</definition>
        <argsstring></argsstring>
        <name>prev_x_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="327" column="14" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a7085404fa06ee6e665049d6e4d47943e" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::prev_y_</definition>
        <argsstring></argsstring>
        <name>prev_y_</name>
        <briefdescription>
<para>Used to calculate the distance the robot has traveled before reseting oscillation booleans. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="327" column="22" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1ae5a805a21dd2e1a935e975bc2d74e654" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool base_local_planner::TrajectoryPlanner::rotating_left</definition>
        <argsstring></argsstring>
        <name>rotating_left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="304" column="12" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a436b60135113893ef95ea5a03b5ddffd" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool base_local_planner::TrajectoryPlanner::rotating_right</definition>
        <argsstring></argsstring>
        <name>rotating_right</name>
        <briefdescription>
<para>Booleans to keep track of the direction of rotation for the robot. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="304" column="26" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1ace7d9b990dc6dd023e551471b3803378" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::sim_granularity_</definition>
        <argsstring></argsstring>
        <name>sim_granularity_</name>
        <briefdescription>
<para>The distance between simulation points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="318" column="14" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a75cfc9c4728404e06fde402c9e5e95d0" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::sim_period_</definition>
        <argsstring></argsstring>
        <name>sim_period_</name>
        <briefdescription>
<para>The number of seconds to use to compute max/min vels for dwa. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="349" column="14" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1ad9a02872d29a4276b4f2a0d4967c180e" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::sim_time_</definition>
        <argsstring></argsstring>
        <name>sim_time_</name>
        <briefdescription>
<para>The number of seconds each trajectory is &quot;rolled-out&quot;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="317" column="14" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a089775d1b5646dd117f279e3b121bf3a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool base_local_planner::TrajectoryPlanner::simple_attractor_</definition>
        <argsstring></argsstring>
        <name>simple_attractor_</name>
        <briefdescription>
<para>Enables simple attraction to a goal point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="344" column="12" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1acc4710bc2d6dbb6afd472c420f985caa" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::stop_time_buffer_</definition>
        <argsstring></argsstring>
        <name>stop_time_buffer_</name>
        <briefdescription>
<para>How long before hitting something we&apos;re going to enforce that the robot stop. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="348" column="14" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a865fd11f01628c7de45f1dfe9fec51ba" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool base_local_planner::TrajectoryPlanner::strafe_left</definition>
        <argsstring></argsstring>
        <name>strafe_left</name>
        <briefdescription>
<para>Booleans to keep track of strafe direction for the robot. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="307" column="25" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a763c6afbfbbdf7be1900b8ed74690392" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool base_local_planner::TrajectoryPlanner::strafe_right</definition>
        <argsstring></argsstring>
        <name>strafe_right</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="307" column="12" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a14ea7ef27beed0398c4f24c5c03c8959" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool base_local_planner::TrajectoryPlanner::stuck_left</definition>
        <argsstring></argsstring>
        <name>stuck_left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="303" column="12" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1aa0472ad50b674b4b11b91beecf111664" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool base_local_planner::TrajectoryPlanner::stuck_left_strafe</definition>
        <argsstring></argsstring>
        <name>stuck_left_strafe</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="306" column="12" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a80f1f1eb4e72bc88e586c57de0409ece" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool base_local_planner::TrajectoryPlanner::stuck_right</definition>
        <argsstring></argsstring>
        <name>stuck_right</name>
        <briefdescription>
<para>Booleans to keep the robot from oscillating during rotation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="303" column="23" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a9993d5c80b8b01ef5e22f719e42c03e2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool base_local_planner::TrajectoryPlanner::stuck_right_strafe</definition>
        <argsstring></argsstring>
        <name>stuck_right_strafe</name>
        <briefdescription>
<para>Booleans to keep the robot from oscillating during strafing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="306" column="30" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1abf0f6db3fa6539455fe652fff72e8b60" prot="private" static="no" mutable="no">
        <type><ref refid="classbase__local__planner_1_1Trajectory" kindref="compound">Trajectory</ref></type>
        <definition>Trajectory base_local_planner::TrajectoryPlanner::traj_one</definition>
        <argsstring></argsstring>
        <name>traj_one</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="330" column="18" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1ae3c8ba0a1ae42c76feafd794b83418a9" prot="private" static="no" mutable="no">
        <type><ref refid="classbase__local__planner_1_1Trajectory" kindref="compound">Trajectory</ref></type>
        <definition>Trajectory base_local_planner::TrajectoryPlanner::traj_two</definition>
        <argsstring></argsstring>
        <name>traj_two</name>
        <briefdescription>
<para>Used for scoring trajectories. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="330" column="27" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a2048288dc999810dfc28cdcfa524f14d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int base_local_planner::TrajectoryPlanner::vtheta_samples_</definition>
        <argsstring></argsstring>
        <name>vtheta_samples_</name>
        <briefdescription>
<para>The number of samples we&apos;ll take in the theta dimension of the control space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="322" column="11" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a7df8ed75c0d6ac171d468ec486b1f5d7" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int base_local_planner::TrajectoryPlanner::vx_samples_</definition>
        <argsstring></argsstring>
        <name>vx_samples_</name>
        <briefdescription>
<para>The number of samples we&apos;ll take in the x dimenstion of the control space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="321" column="11" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a3cc8b66e54642a9967d736d5eae01b60" prot="private" static="no" mutable="no">
        <type><ref refid="classbase__local__planner_1_1WorldModel" kindref="compound">WorldModel</ref> &amp;</type>
        <definition>WorldModel&amp; base_local_planner::TrajectoryPlanner::world_model_</definition>
        <argsstring></argsstring>
        <name>world_model_</name>
        <briefdescription>
<para>The world model that the controller uses for collision detection. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="297" column="18" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryPlanner_1a5f0e1162d1120486111c68f44a0233e0" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; base_local_planner::TrajectoryPlanner::y_vels_</definition>
        <argsstring></argsstring>
        <name>y_vels_</name>
        <briefdescription>
<para>Y velocities to explore. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="346" column="19" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="346" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryPlanner_1a16f45df8237d94cafe714d4e5aa4eeb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool base_local_planner::TrajectoryPlanner::checkTrajectory</definition>
        <argsstring>(double x, double y, double theta, double vx, double vy, double vtheta, double vx_samp, double vy_samp, double vtheta_samp)</argsstring>
        <name>checkTrajectory</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vtheta</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vx_samp</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vy_samp</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vtheta_samp</declname>
        </param>
        <briefdescription>
<para>Generate and score a single trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x position of the robot <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y position of the robot <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>theta</parametername>
</parameternamelist>
<parameterdescription>
<para>The orientation of the robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vx</parametername>
</parameternamelist>
<parameterdescription>
<para>The x velocity of the robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vy</parametername>
</parameternamelist>
<parameterdescription>
<para>The y velocity of the robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vtheta</parametername>
</parameternamelist>
<parameterdescription>
<para>The theta velocity of the robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vx_samp</parametername>
</parameternamelist>
<parameterdescription>
<para>The x velocity used to seed the trajectory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vy_samp</parametername>
</parameternamelist>
<parameterdescription>
<para>The y velocity used to seed the trajectory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vtheta_samp</parametername>
</parameternamelist>
<parameterdescription>
<para>The theta velocity used to seed the trajectory </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the trajectory is legal, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="207" column="12" bodyfile="src/trajectory_planner.cpp" bodystart="503" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryPlanner_1a0fa1222899b6f8d630924f7de5e32a66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbase__local__planner_1_1Trajectory" kindref="compound">Trajectory</ref></type>
        <definition>Trajectory base_local_planner::TrajectoryPlanner::findBestPath</definition>
        <argsstring>(const geometry_msgs::PoseStamped &amp;global_pose, geometry_msgs::PoseStamped &amp;global_vel, geometry_msgs::PoseStamped &amp;drive_velocities)</argsstring>
        <name>findBestPath</name>
        <param>
          <type>const geometry_msgs::PoseStamped &amp;</type>
          <declname>global_pose</declname>
        </param>
        <param>
          <type>geometry_msgs::PoseStamped &amp;</type>
          <declname>global_vel</declname>
        </param>
        <param>
          <type>geometry_msgs::PoseStamped &amp;</type>
          <declname>drive_velocities</declname>
        </param>
        <briefdescription>
<para>Given the current position, orientation, and velocity of the robot, return a trajectory to follow. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>global_pose</parametername>
</parameternamelist>
<parameterdescription>
<para>The current pose of the robot in world space </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>global_vel</parametername>
</parameternamelist>
<parameterdescription>
<para>The current velocity of the robot in world space </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>drive_velocities</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to velocities to send to the robot base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The selected path or trajectory </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="177" column="18" bodyfile="src/trajectory_planner.cpp" bodystart="907" bodyend="985"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryPlanner_1a23f9726d0f43f94e8c5b3a50556dd7b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool base_local_planner::TrajectoryPlanner::getCellCosts</definition>
        <argsstring>(int cx, int cy, float &amp;path_cost, float &amp;goal_cost, float &amp;occ_cost, float &amp;total_cost)</argsstring>
        <name>getCellCosts</name>
        <param>
          <type>int</type>
          <declname>cx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cy</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>path_cost</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>goal_cost</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>occ_cost</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>total_cost</declname>
        </param>
        <briefdescription>
<para>Compute the components and total cost for a map grid cell. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cx</parametername>
</parameternamelist>
<parameterdescription>
<para>The x coordinate of the cell in the map grid </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cy</parametername>
</parameternamelist>
<parameterdescription>
<para>The y coordinate of the cell in the map grid </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path_cost</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to the path distance component of the cost function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>goal_cost</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to the goal distance component of the cost function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>occ_cost</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to the costmap value of the cell </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>total_cost</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to the value of the overall cost function, taking into account the scaling parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the cell is traversible and therefore a legal location for the robot to move to </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="236" column="12" bodyfile="src/trajectory_planner.cpp" bodystart="193" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryPlanner_1a9bedb8110dc79ebf49ba544f8ac5e8bd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::Point &gt;</type>
        <definition>std::vector&lt;geometry_msgs::Point&gt; base_local_planner::TrajectoryPlanner::getFootprint</definition>
        <argsstring>() const</argsstring>
        <name>getFootprint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="243" column="19" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="243" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryPlanner_1a3349ee9e66e3943b48a8c75189e1e0cc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>geometry_msgs::Polygon</type>
        <definition>geometry_msgs::Polygon base_local_planner::TrajectoryPlanner::getFootprintPolygon</definition>
        <argsstring>() const</argsstring>
        <name>getFootprintPolygon</name>
        <briefdescription>
<para>Return the footprint specification of the robot. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="242" column="30" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="242" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryPlanner_1a2106157af1e6bf29c289524ee3391db4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::TrajectoryPlanner::getLocalGoal</definition>
        <argsstring>(double &amp;x, double &amp;y)</argsstring>
        <name>getLocalGoal</name>
        <param>
          <type>double &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Accessor for the goal the robot is currently pursuing in world corrdinates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to the x position of the local goal </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to the y position of the local goal </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="192" column="12" bodyfile="src/trajectory_planner.cpp" bodystart="994" bodyend="997"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryPlanner_1a30b83584ef7b95a641db52efc67bc59c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::TrajectoryPlanner::reconfigure</definition>
        <argsstring>(BaseLocalPlannerConfig &amp;cfg)</argsstring>
        <name>reconfigure</name>
        <param>
          <type>BaseLocalPlannerConfig &amp;</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>Reconfigures the trajectory planner. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="168" column="12" bodyfile="src/trajectory_planner.cpp" bodystart="61" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryPlanner_1a8ff397f04fbb25760ab68e2ac65a99b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::scoreTrajectory</definition>
        <argsstring>(double x, double y, double theta, double vx, double vy, double vtheta, double vx_samp, double vy_samp, double vtheta_samp)</argsstring>
        <name>scoreTrajectory</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vtheta</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vx_samp</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vy_samp</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vtheta_samp</declname>
        </param>
        <briefdescription>
<para>Generate and score a single trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x position of the robot <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y position of the robot <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>theta</parametername>
</parameternamelist>
<parameterdescription>
<para>The orientation of the robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vx</parametername>
</parameternamelist>
<parameterdescription>
<para>The x velocity of the robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vy</parametername>
</parameternamelist>
<parameterdescription>
<para>The y velocity of the robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vtheta</parametername>
</parameternamelist>
<parameterdescription>
<para>The theta velocity of the robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vx_samp</parametername>
</parameternamelist>
<parameterdescription>
<para>The x velocity used to seed the trajectory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vy_samp</parametername>
</parameternamelist>
<parameterdescription>
<para>The y velocity used to seed the trajectory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vtheta_samp</parametername>
</parameternamelist>
<parameterdescription>
<para>The theta velocity used to seed the trajectory </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The score (as double) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="223" column="14" bodyfile="src/trajectory_planner.cpp" bodystart="519" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryPlanner_1a7145aa72e0045489279955d59fcaa3d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::TrajectoryPlanner::setFootprint</definition>
        <argsstring>(std::vector&lt; geometry_msgs::Point &gt; footprint)</argsstring>
        <name>setFootprint</name>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::Point &gt;</type>
          <declname>footprint</declname>
        </param>
        <briefdescription>
<para>Set the footprint specification of the robot. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="239" column="12" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="239" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryPlanner_1a49c9d7e52d7cad7e90baba29ad6b8a59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>base_local_planner::TrajectoryPlanner::TrajectoryPlanner</definition>
        <argsstring>(WorldModel &amp;world_model, const costmap_2d::Costmap2D &amp;costmap, std::vector&lt; geometry_msgs::Point &gt; footprint_spec, double acc_lim_x=1.0, double acc_lim_y=1.0, double acc_lim_theta=1.0, double sim_time=1.0, double sim_granularity=0.025, int vx_samples=20, int vtheta_samples=20, double path_distance_bias=0.6, double goal_distance_bias=0.8, double occdist_scale=0.2, double heading_lookahead=0.325, double oscillation_reset_dist=0.05, double escape_reset_dist=0.10, double escape_reset_theta=M_PI_2, bool holonomic_robot=true, double max_vel_x=0.5, double min_vel_x=0.1, double max_vel_th=1.0, double min_vel_th=-1.0, double min_in_place_vel_th=0.4, double backup_vel=-0.1, bool dwa=false, bool heading_scoring=false, double heading_scoring_timestep=0.1, bool meter_scoring=true, bool simple_attractor=false, std::vector&lt; double &gt; y_vels=std::vector&lt; double &gt;(0), double stop_time_buffer=0.2, double sim_period=0.1, double angular_sim_granularity=0.025)</argsstring>
        <name>TrajectoryPlanner</name>
        <param>
          <type><ref refid="classbase__local__planner_1_1WorldModel" kindref="compound">WorldModel</ref> &amp;</type>
          <declname>world_model</declname>
        </param>
        <param>
          <type>const <ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">costmap_2d::Costmap2D</ref> &amp;</type>
          <declname>costmap</declname>
        </param>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::Point &gt;</type>
          <declname>footprint_spec</declname>
        </param>
        <param>
          <type>double</type>
          <declname>acc_lim_x</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>acc_lim_y</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>acc_lim_theta</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>sim_time</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>sim_granularity</declname>
          <defval>0.025</defval>
        </param>
        <param>
          <type>int</type>
          <declname>vx_samples</declname>
          <defval>20</defval>
        </param>
        <param>
          <type>int</type>
          <declname>vtheta_samples</declname>
          <defval>20</defval>
        </param>
        <param>
          <type>double</type>
          <declname>path_distance_bias</declname>
          <defval>0.6</defval>
        </param>
        <param>
          <type>double</type>
          <declname>goal_distance_bias</declname>
          <defval>0.8</defval>
        </param>
        <param>
          <type>double</type>
          <declname>occdist_scale</declname>
          <defval>0.2</defval>
        </param>
        <param>
          <type>double</type>
          <declname>heading_lookahead</declname>
          <defval>0.325</defval>
        </param>
        <param>
          <type>double</type>
          <declname>oscillation_reset_dist</declname>
          <defval>0.05</defval>
        </param>
        <param>
          <type>double</type>
          <declname>escape_reset_dist</declname>
          <defval>0.10</defval>
        </param>
        <param>
          <type>double</type>
          <declname>escape_reset_theta</declname>
          <defval>M_PI_2</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>holonomic_robot</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>double</type>
          <declname>max_vel_x</declname>
          <defval>0.5</defval>
        </param>
        <param>
          <type>double</type>
          <declname>min_vel_x</declname>
          <defval>0.1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>max_vel_th</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>min_vel_th</declname>
          <defval>-1.0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>min_in_place_vel_th</declname>
          <defval>0.4</defval>
        </param>
        <param>
          <type>double</type>
          <declname>backup_vel</declname>
          <defval>-0.1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>dwa</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>heading_scoring</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>double</type>
          <declname>heading_scoring_timestep</declname>
          <defval>0.1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>meter_scoring</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>simple_attractor</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; double &gt;</type>
          <declname>y_vels</declname>
          <defval><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; double &gt;(0)</defval>
        </param>
        <param>
          <type>double</type>
          <declname>stop_time_buffer</declname>
          <defval>0.2</defval>
        </param>
        <param>
          <type>double</type>
          <declname>sim_period</declname>
          <defval>0.1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>angular_sim_granularity</declname>
          <defval>0.025</defval>
        </param>
        <briefdescription>
<para>Constructs a trajectory controller. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>world_model</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classbase__local__planner_1_1WorldModel" kindref="compound">WorldModel</ref> the trajectory controller uses to check for collisions </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>costmap</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to the Costmap the controller should use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>footprint_spec</parametername>
</parameternamelist>
<parameterdescription>
<para>A polygon representing the footprint of the robot. (Must be convex) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inscribed_radius</parametername>
</parameternamelist>
<parameterdescription>
<para>The radius of the inscribed circle of the robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>circumscribed_radius</parametername>
</parameternamelist>
<parameterdescription>
<para>The radius of the circumscribed circle of the robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acc_lim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The acceleration limit of the robot in the x direction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acc_lim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>The acceleration limit of the robot in the y direction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acc_lim_theta</parametername>
</parameternamelist>
<parameterdescription>
<para>The acceleration limit of the robot in the theta direction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sim_time</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of seconds to &quot;roll-out&quot; each trajectory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sim_granularity</parametername>
</parameternamelist>
<parameterdescription>
<para>The distance between simulation points should be small enough that the robot doesn&apos;t hit things </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vx_samples</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of trajectories to sample in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vtheta_samples</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of trajectories to sample in the theta dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path_distance_bias</parametername>
</parameternamelist>
<parameterdescription>
<para>A scaling factor for how close the robot should stay to the path </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>goal_distance_bias</parametername>
</parameternamelist>
<parameterdescription>
<para>A scaling factor for how aggresively the robot should pursue a local goal </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>occdist_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>A scaling factor for how much the robot should prefer to stay away from obstacles </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>heading_lookahead</parametername>
</parameternamelist>
<parameterdescription>
<para>How far the robot should look ahead of itself when differentiating between different rotational velocities </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oscillation_reset_dist</parametername>
</parameternamelist>
<parameterdescription>
<para>The distance the robot must travel before it can explore rotational velocities that were unsuccessful in the past </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>escape_reset_dist</parametername>
</parameternamelist>
<parameterdescription>
<para>The distance the robot must travel before it can exit escape mode </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>escape_reset_theta</parametername>
</parameternamelist>
<parameterdescription>
<para>The distance the robot must rotate before it can exit escape mode </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>holonomic_robot</parametername>
</parameternamelist>
<parameterdescription>
<para>Set this to true if the robot being controlled can take y velocities and false otherwise </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_vel_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum x velocity the controller will explore </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min_vel_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The minimum x velocity the controller will explore </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_vel_th</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum rotational velocity the controller will explore </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min_vel_th</parametername>
</parameternamelist>
<parameterdescription>
<para>The minimum rotational velocity the controller will explore </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min_in_place_vel_th</parametername>
</parameternamelist>
<parameterdescription>
<para>The absolute value of the minimum in-place rotational velocity the controller will explore </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backup_vel</parametername>
</parameternamelist>
<parameterdescription>
<para>The velocity to use while backing up </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dwa</parametername>
</parameternamelist>
<parameterdescription>
<para>Set this to true to use the Dynamic Window Approach, false to use acceleration limits </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>heading_scoring</parametername>
</parameternamelist>
<parameterdescription>
<para>Set this to true to score trajectories based on the robot&apos;s heading after 1 timestep </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>heading_scoring_timestep</parametername>
</parameternamelist>
<parameterdescription>
<para>How far to look ahead in time when we score heading based trajectories </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>meter_scoring</parametername>
</parameternamelist>
<parameterdescription>
<para>adapt parameters to costmap resolution </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>simple_attractor</parametername>
</parameternamelist>
<parameterdescription>
<para>Set this to true to allow simple attraction to a goal point instead of intelligent cost propagation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y_vels</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of the y velocities the controller will explore </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angular_sim_granularity</parametername>
</parameternamelist>
<parameterdescription>
<para>The distance between simulation points for angular velocity should be small enough that the robot doesn&apos;t hit things </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="140" column="7" bodyfile="src/trajectory_planner.cpp" bodystart="142" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryPlanner_1ad8c384954625a91934bad8354f5dc24d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::TrajectoryPlanner::updatePlan</definition>
        <argsstring>(const std::vector&lt; geometry_msgs::PoseStamped &gt; &amp;new_plan, bool compute_dists=false)</argsstring>
        <name>updatePlan</name>
        <param>
          <type>const <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::PoseStamped &gt; &amp;</type>
          <declname>new_plan</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>compute_dists</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Update the plan that the controller is following. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>new_plan</parametername>
</parameternamelist>
<parameterdescription>
<para>A new plan for the controller to follow </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>compute_dists</parametername>
</parameternamelist>
<parameterdescription>
<para>Wheter or not to compute path/goal distances when a plan is updated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="185" column="12" bodyfile="src/trajectory_planner.cpp" bodystart="476" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryPlanner_1aeccbb304a8c6fe44b81a279a689831e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>base_local_planner::TrajectoryPlanner::~TrajectoryPlanner</definition>
        <argsstring>()</argsstring>
        <name>~TrajectoryPlanner</name>
        <briefdescription>
<para>Destructs a trajectory controller. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="163" column="7" bodyfile="src/trajectory_planner.cpp" bodystart="191" bodyend="191"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryPlanner_1aadd3289b84c1c76778cc705250757c66" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::computeNewThetaPosition</definition>
        <argsstring>(double thetai, double vth, double dt)</argsstring>
        <name>computeNewThetaPosition</name>
        <param>
          <type>double</type>
          <declname>thetai</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vth</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Compute orientation based on velocity. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thetai</parametername>
</parameternamelist>
<parameterdescription>
<para>The current orientation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vth</parametername>
</parameternamelist>
<parameterdescription>
<para>The current theta velocity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dt</parametername>
</parameternamelist>
<parameterdescription>
<para>The timestep to take </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The new orientation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="388" column="21" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="388" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryPlanner_1a054ff7c497b332357979908f5df35031" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::computeNewVelocity</definition>
        <argsstring>(double vg, double vi, double a_max, double dt)</argsstring>
        <name>computeNewVelocity</name>
        <param>
          <type>double</type>
          <declname>vg</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>a_max</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Compute velocity based on acceleration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vg</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired velocity, what we&apos;re accelerating up to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vi</parametername>
</parameternamelist>
<parameterdescription>
<para>The current velocity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_max</parametername>
</parameternamelist>
<parameterdescription>
<para>An acceleration limit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dt</parametername>
</parameternamelist>
<parameterdescription>
<para>The timestep to take </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The new velocity </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="401" column="21" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="401" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryPlanner_1a464d133b3ff7d997ff2de19ea769e0ef" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::computeNewXPosition</definition>
        <argsstring>(double xi, double vx, double vy, double theta, double dt)</argsstring>
        <name>computeNewXPosition</name>
        <param>
          <type>double</type>
          <declname>xi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Compute x position based on velocity. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xi</parametername>
</parameternamelist>
<parameterdescription>
<para>The current x position </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vx</parametername>
</parameternamelist>
<parameterdescription>
<para>The current x velocity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vy</parametername>
</parameternamelist>
<parameterdescription>
<para>The current y velocity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>theta</parametername>
</parameternamelist>
<parameterdescription>
<para>The current orientation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dt</parametername>
</parameternamelist>
<parameterdescription>
<para>The timestep to take </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The new x position </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="364" column="21" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="364" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryPlanner_1a2177c9510ce5cb1a6564e4d39797b4a7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::computeNewYPosition</definition>
        <argsstring>(double yi, double vx, double vy, double theta, double dt)</argsstring>
        <name>computeNewYPosition</name>
        <param>
          <type>double</type>
          <declname>yi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Compute y position based on velocity. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>yi</parametername>
</parameternamelist>
<parameterdescription>
<para>The current y position </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vx</parametername>
</parameternamelist>
<parameterdescription>
<para>The current x velocity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vy</parametername>
</parameternamelist>
<parameterdescription>
<para>The current y velocity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>theta</parametername>
</parameternamelist>
<parameterdescription>
<para>The current orientation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dt</parametername>
</parameternamelist>
<parameterdescription>
<para>The timestep to take </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The new y position </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="377" column="21" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="377" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryPlanner_1a44c8434c9df68efb24eef36fc670ae7c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbase__local__planner_1_1Trajectory" kindref="compound">Trajectory</ref></type>
        <definition>Trajectory base_local_planner::TrajectoryPlanner::createTrajectories</definition>
        <argsstring>(double x, double y, double theta, double vx, double vy, double vtheta, double acc_x, double acc_y, double acc_theta)</argsstring>
        <name>createTrajectories</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vtheta</declname>
        </param>
        <param>
          <type>double</type>
          <declname>acc_x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>acc_y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>acc_theta</declname>
        </param>
        <briefdescription>
<para>Create the trajectories we wish to explore, score them, and return the best option. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x position of the robot <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y position of the robot <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>theta</parametername>
</parameternamelist>
<parameterdescription>
<para>The orientation of the robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vx</parametername>
</parameternamelist>
<parameterdescription>
<para>The x velocity of the robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vy</parametername>
</parameternamelist>
<parameterdescription>
<para>The y velocity of the robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vtheta</parametername>
</parameternamelist>
<parameterdescription>
<para>The theta velocity of the robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acc_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x acceleration limit of the robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acc_y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y acceleration limit of the robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acc_theta</parametername>
</parameternamelist>
<parameterdescription>
<para>The theta acceleration limit of the robot </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="259" column="18" bodyfile="src/trajectory_planner.cpp" bodystart="536" bodyend="904"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryPlanner_1ab3f9bae95f002f9a800f16feaffd460e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::footprintCost</definition>
        <argsstring>(double x_i, double y_i, double theta_i)</argsstring>
        <name>footprintCost</name>
        <param>
          <type>double</type>
          <declname>x_i</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y_i</declname>
        </param>
        <param>
          <type>double</type>
          <declname>theta_i</declname>
        </param>
        <briefdescription>
<para>Checks the legality of the robot footprint at a position and orientation using the world model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x_i</parametername>
</parameternamelist>
<parameterdescription>
<para>The x position of the robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y_i</parametername>
</parameternamelist>
<parameterdescription>
<para>The y position of the robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>theta_i</parametername>
</parameternamelist>
<parameterdescription>
<para>The orientation of the robot </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="290" column="14" bodyfile="src/trajectory_planner.cpp" bodystart="988" bodyend="991"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryPlanner_1a78ea0a479b32f589f518c55a78dcb755" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::TrajectoryPlanner::generateTrajectory</definition>
        <argsstring>(double x, double y, double theta, double vx, double vy, double vtheta, double vx_samp, double vy_samp, double vtheta_samp, double acc_x, double acc_y, double acc_theta, double impossible_cost, Trajectory &amp;traj)</argsstring>
        <name>generateTrajectory</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vtheta</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vx_samp</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vy_samp</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vtheta_samp</declname>
        </param>
        <param>
          <type>double</type>
          <declname>acc_x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>acc_y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>acc_theta</declname>
        </param>
        <param>
          <type>double</type>
          <declname>impossible_cost</declname>
        </param>
        <param>
          <type><ref refid="classbase__local__planner_1_1Trajectory" kindref="compound">Trajectory</ref> &amp;</type>
          <declname>traj</declname>
        </param>
        <briefdescription>
<para>Generate and score a single trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x position of the robot <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y position of the robot <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>theta</parametername>
</parameternamelist>
<parameterdescription>
<para>The orientation of the robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vx</parametername>
</parameternamelist>
<parameterdescription>
<para>The x velocity of the robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vy</parametername>
</parameternamelist>
<parameterdescription>
<para>The y velocity of the robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vtheta</parametername>
</parameternamelist>
<parameterdescription>
<para>The theta velocity of the robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vx_samp</parametername>
</parameternamelist>
<parameterdescription>
<para>The x velocity used to seed the trajectory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vy_samp</parametername>
</parameternamelist>
<parameterdescription>
<para>The y velocity used to seed the trajectory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vtheta_samp</parametername>
</parameternamelist>
<parameterdescription>
<para>The theta velocity used to seed the trajectory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acc_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x acceleration limit of the robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acc_y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y acceleration limit of the robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acc_theta</parametername>
</parameternamelist>
<parameterdescription>
<para>The theta acceleration limit of the robot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>impossible_cost</parametername>
</parameternamelist>
<parameterdescription>
<para>The cost value of a cell in the local map grid that is considered impassable </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traj</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to the generated trajectory with its associated score</para>
</parameterdescription>
</parameteritem>
</parameterlist>
create and score a trajectory given the current pose of the robot and selected velocities </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="279" column="12" bodyfile="src/trajectory_planner.cpp" bodystart="214" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryPlanner_1a7d1d82d8ba0c281c6d4992ac3f9d70d7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::TrajectoryPlanner::getMaxSpeedToStopInTime</definition>
        <argsstring>(double time, double &amp;vx, double &amp;vy, double &amp;vth)</argsstring>
        <name>getMaxSpeedToStopInTime</name>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>vx</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>vy</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>vth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="408" column="12" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="408" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryPlanner_1a36016a332040ca88776ebf7f48b632b4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::headingDiff</definition>
        <argsstring>(int cell_x, int cell_y, double x, double y, double heading)</argsstring>
        <name>headingDiff</name>
        <param>
          <type>int</type>
          <declname>cell_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cell_y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>heading</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="416" column="14" bodyfile="src/trajectory_planner.cpp" bodystart="372" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryPlanner_1abd8710866ba7bd693c63919e93c87813" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::lineCost</definition>
        <argsstring>(int x0, int x1, int y0, int y1)</argsstring>
        <name>lineCost</name>
        <param>
          <type>int</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="414" column="14" bodyfile="src/trajectory_planner.cpp" bodystart="389" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryPlanner_1ab1d5ed02ab5ede53f48fad6d426c27e9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryPlanner::pointCost</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>pointCost</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_planner.h" line="415" column="14" bodyfile="src/trajectory_planner.cpp" bodystart="466" bodyend="474"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Computes control velocities for a robot given a costmap, a plan, and the robot&apos;s position in the world. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>std::vector&lt; double &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="7">
        <label>base_local_planner::MapGrid</label>
        <link refid="classbase__local__planner_1_1MapGrid"/>
        <childnode refid="8" relation="usage">
          <edgelabel>map_</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::vector&lt; geometry_msgs::PoseStamped &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="9">
        <label>costmap_2d::Costmap2D</label>
        <link refid="classcostmap__2d_1_1Costmap2D" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags"/>
      </node>
      <node id="1">
        <label>base_local_planner::TrajectoryPlanner</label>
        <link refid="classbase__local__planner_1_1TrajectoryPlanner"/>
        <childnode refid="2" relation="usage">
          <edgelabel>traj_one</edgelabel>
          <edgelabel>traj_two</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>footprint_helper_</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>global_plan_</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>footprint_spec_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>goal_map_</edgelabel>
          <edgelabel>path_map_</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>costmap_</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>world_model_</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>y_vels_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>base_local_planner::Trajectory</label>
        <link refid="classbase__local__planner_1_1Trajectory"/>
        <childnode refid="3" relation="usage">
          <edgelabel>th_pts_</edgelabel>
          <edgelabel>y_pts_</edgelabel>
          <edgelabel>x_pts_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>base_local_planner::FootprintHelper</label>
        <link refid="classbase__local__planner_1_1FootprintHelper"/>
      </node>
      <node id="6">
        <label>std::vector&lt; geometry_msgs::Point &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="8">
        <label>std::vector&lt; base_local_planner::MapCell &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="10">
        <label>base_local_planner::WorldModel</label>
        <link refid="classbase__local__planner_1_1WorldModel"/>
      </node>
    </collaborationgraph>
    <location file="include/base_local_planner/trajectory_planner.h" line="101" column="26" bodyfile="include/base_local_planner/trajectory_planner.h" bodystart="101" bodyend="417"/>
    <listofallmembers>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1af212f9a9ecc07a1db91a97d0482074e0" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>acc_lim_theta_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a82433daefdecb2f33b5cafdcc361af4f" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>acc_lim_x_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1ac84b1c3bee279de48b6e8c9487fce066" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>acc_lim_y_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a28e137b98274f7ceda2f2eeb497e6ab5" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>angular_sim_granularity_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a7ac35a1ec8c8a60d503ec73593d9df5a" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>backup_vel_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a16f45df8237d94cafe714d4e5aa4eeb3" prot="public" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>checkTrajectory</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a0e002c8878231a70785aadd928e5ae5d" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>circumscribed_radius_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1aadd3289b84c1c76778cc705250757c66" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>computeNewThetaPosition</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a054ff7c497b332357979908f5df35031" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>computeNewVelocity</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a464d133b3ff7d997ff2de19ea769e0ef" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>computeNewXPosition</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a2177c9510ce5cb1a6564e4d39797b4a7" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>computeNewYPosition</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1aa8a12b241174a691ccb102f07ebbc218" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>configuration_mutex_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a427473829005f026021798a2da855515" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>costmap_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a44c8434c9df68efb24eef36fc670ae7c" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>createTrajectories</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a86059f83bea9cfa99ce90c02c8ab0c8d" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>dwa_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a2e06d36ab5445545d2962b031805873e" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>escape_reset_dist_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1ac4c627bceed847bc3ae7cd8471c2880b" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>escape_reset_theta_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a4fe36fdff093780fb769adbb13a3207a" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>escape_theta_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a12154babd84af0fdcb45a280e6089cd7" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>escape_x_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a36dfa6683ed074e63ff129451b975493" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>escape_y_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a89537dae396e2c07f35be85c679488a5" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>escaping_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a023d6ed6138443cf3a7c21735d399d57" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>final_goal_position_valid_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1afe277818c659b7ded87b944f27e63259" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>final_goal_x_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1ac3c769c5f38c1337965fd3275f995f35" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>final_goal_y_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a0fa1222899b6f8d630924f7de5e32a66" prot="public" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>findBestPath</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a870914451b4efe68bd7be8d2816f1a18" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>footprint_helper_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a010de99484b85362d060624780cc5d92" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>footprint_spec_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1ab3f9bae95f002f9a800f16feaffd460e" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>footprintCost</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a78ea0a479b32f589f518c55a78dcb755" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>generateTrajectory</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a23f9726d0f43f94e8c5b3a50556dd7b7" prot="public" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>getCellCosts</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a9bedb8110dc79ebf49ba544f8ac5e8bd" prot="public" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>getFootprint</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a3349ee9e66e3943b48a8c75189e1e0cc" prot="public" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>getFootprintPolygon</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a2106157af1e6bf29c289524ee3391db4" prot="public" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>getLocalGoal</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a7d1d82d8ba0c281c6d4992ac3f9d70d7" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>getMaxSpeedToStopInTime</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a2c5b9a33117e579550c1060cf7f3e142" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>global_plan_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a2369ccc6dba46bdfcf10cee655d2d118" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>goal_distance_bias_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1ae8f2f8369eb893ec4c37001c142d3db5" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>goal_map_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a650f7b3ec7732318271dce4fa29f8b77" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>goal_x_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a575b14a06d9d982898b36b88714aee40" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>goal_y_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a453521003c8a2def8f7c7b0ba1ef9894" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>heading_lookahead_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a1c76975ab90a0952538d435ab782b7f4" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>heading_scoring_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a350e42ec12def8880eecf441d83f44bf" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>heading_scoring_timestep_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a36016a332040ca88776ebf7f48b632b4" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>headingDiff</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a1edda9ad372428d05f954aad5b9da9b4" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>holonomic_robot_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1abd9186ed8703b03123c4518ddfab6fe4" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>inscribed_radius_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1abd8710866ba7bd693c63919e93c87813" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>lineCost</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a6d205cfad977b364a103dcd523f189f6" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>max_vel_th_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a17e663c990e2705fdfffc512a22926e1" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>max_vel_x_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a5f29fcc8b4a56f6b3cb438cb8cf062eb" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>meter_scoring_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1af3ed1fa44d9f4c55486bf15407ec8cb0" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>min_in_place_vel_th_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a41241453b8b3c665ef9d910e721f33a5" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>min_vel_th_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1ace2a2cec2204ac066abe84ea39f0f642" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>min_vel_x_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a58c8fa7023dba6cbba95839faee0f76d" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>occdist_scale_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a2909e523020dda88f5250a7a35cc1944" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>oscillation_reset_dist_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a289c74ab336969463146ea7529fbd27e" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>path_distance_bias_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a56216c876fbe0af94c66827558c10f29" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>path_map_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1ab1d5ed02ab5ede53f48fad6d426c27e9" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>pointCost</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1ace87f6aece448f136b515c93e856619b" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>prev_x_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a7085404fa06ee6e665049d6e4d47943e" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>prev_y_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a30b83584ef7b95a641db52efc67bc59c" prot="public" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>reconfigure</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1ae5a805a21dd2e1a935e975bc2d74e654" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>rotating_left</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a436b60135113893ef95ea5a03b5ddffd" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>rotating_right</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a8ff397f04fbb25760ab68e2ac65a99b0" prot="public" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>scoreTrajectory</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a7145aa72e0045489279955d59fcaa3d4" prot="public" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>setFootprint</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1ace7d9b990dc6dd023e551471b3803378" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>sim_granularity_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a75cfc9c4728404e06fde402c9e5e95d0" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>sim_period_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1ad9a02872d29a4276b4f2a0d4967c180e" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>sim_time_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a089775d1b5646dd117f279e3b121bf3a" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>simple_attractor_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1acc4710bc2d6dbb6afd472c420f985caa" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>stop_time_buffer_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a865fd11f01628c7de45f1dfe9fec51ba" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>strafe_left</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a763c6afbfbbdf7be1900b8ed74690392" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>strafe_right</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a14ea7ef27beed0398c4f24c5c03c8959" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>stuck_left</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1aa0472ad50b674b4b11b91beecf111664" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>stuck_left_strafe</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a80f1f1eb4e72bc88e586c57de0409ece" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>stuck_right</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a9993d5c80b8b01ef5e22f719e42c03e2" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>stuck_right_strafe</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1abf0f6db3fa6539455fe652fff72e8b60" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>traj_one</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1ae3c8ba0a1ae42c76feafd794b83418a9" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>traj_two</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a49c9d7e52d7cad7e90baba29ad6b8a59" prot="public" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>TrajectoryPlanner</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a156887bf956f38e1462db6dfbbe523a1" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>TrajectoryPlannerTest</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1ad8c384954625a91934bad8354f5dc24d" prot="public" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>updatePlan</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a2048288dc999810dfc28cdcfa524f14d" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>vtheta_samples_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a7df8ed75c0d6ac171d468ec486b1f5d7" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>vx_samples_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a3cc8b66e54642a9967d736d5eae01b60" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>world_model_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1a5f0e1162d1120486111c68f44a0233e0" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>y_vels_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryPlanner_1aeccbb304a8c6fe44b81a279a689831e6" prot="public" virt="non-virtual"><scope>base_local_planner::TrajectoryPlanner</scope><name>~TrajectoryPlanner</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
