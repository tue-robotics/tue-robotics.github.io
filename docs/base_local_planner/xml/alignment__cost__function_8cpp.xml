<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="alignment__cost__function_8cpp" kind="file" language="C++">
    <compoundname>alignment_cost_function.cpp</compoundname>
    <includes refid="alignment__cost__function_8h" local="yes">base_local_planner/alignment_cost_function.h</includes>
    <incdepgraph>
      <node id="5">
        <label>vector</label>
        <link refid="cpp/header/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="1">
        <label>alignment_cost_function.cpp</label>
        <link refid="alignment__cost__function_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>base_local_planner/trajectory.h</label>
        <link refid="trajectory_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Eigen/Core</label>
      </node>
      <node id="3">
        <label>trajectory_cost_function.h</label>
        <link refid="trajectory__cost__function_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>base_local_planner/alignment_cost_function.h</label>
        <link refid="alignment__cost__function_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacebase__local__planner">base_local_planner</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="alignment__cost__function_8cpp_1a598a3330b3c21701223ee0ca14316eca" prot="public" static="no">
        <name>PI</name>
        <initializer>3.14159</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/alignment_cost_function.cpp" line="3" column="9" bodyfile="src/alignment_cost_function.cpp" bodystart="3" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="alignment__cost__function_8h" kindref="compound">base_local_planner/alignment_cost_function.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="alignment__cost__function_8cpp_1a598a3330b3c21701223ee0ca14316eca" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PI<sp/>3.14159</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacebase__local__planner" kindref="compound">base_local_planner</ref><sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="classbase__local__planner_1_1AlignmentCostFunction_1aa3f3d6cbfbab5f09fafcaf31a63ada94" refkind="member"><highlight class="normal"><ref refid="classbase__local__planner_1_1AlignmentCostFunction_1aa3f3d6cbfbab5f09fafcaf31a63ada94" kindref="member">AlignmentCostFunction::AlignmentCostFunction</ref>():</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/>theta_desired_(0.0)</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classbase__local__planner_1_1AlignmentCostFunction_1a6c42027ffd19926337708c893105d15e" refkind="member"><highlight class="normal"><ref refid="classbase__local__planner_1_1AlignmentCostFunction_1a6c42027ffd19926337708c893105d15e" kindref="member">AlignmentCostFunction::~AlignmentCostFunction</ref>()</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="classbase__local__planner_1_1AlignmentCostFunction_1a3594e7aa99aadf0b3eee17f3f5717db9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classbase__local__planner_1_1AlignmentCostFunction_1a3594e7aa99aadf0b3eee17f3f5717db9" kindref="member">AlignmentCostFunction::scoreTrajectory</ref>(<ref refid="classbase__local__planner_1_1Trajectory" kindref="compound">Trajectory</ref><sp/>&amp;traj)</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(traj.<ref refid="classbase__local__planner_1_1Trajectory_1a825364365ad68291ce701c0e97bef3d5" kindref="member">getPointsSize</ref>()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/>y,<sp/>theta;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>traj.<ref refid="classbase__local__planner_1_1Trajectory_1a7247858ecf5432a6557d8daf55e3e3f5" kindref="member">getEndpoint</ref>(x,<sp/>y,<sp/>theta);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>error<sp/>=<sp/><ref refid="classbase__local__planner_1_1AlignmentCostFunction_1ad39632cce5823317d213a8bfbe8b3c15" kindref="member">theta_desired_</ref>-theta;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>&lt;<sp/>-<ref refid="alignment__cost__function_8cpp_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref>)<sp/>{error<sp/>+=<sp/>2*<ref refid="alignment__cost__function_8cpp_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref>;<sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>&gt;<sp/><sp/><ref refid="alignment__cost__function_8cpp_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref>)<sp/>{error<sp/>-=<sp/>2*<ref refid="alignment__cost__function_8cpp_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref>;<sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fabs(error);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/alignment_cost_function.cpp"/>
  </compounddef>
</doxygen>
