<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classbase__local__planner_1_1TrajectoryCostFunction" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>base_local_planner::TrajectoryCostFunction</compoundname>
    <derivedcompoundref refid="classbase__local__planner_1_1AlignmentCostFunction" prot="public" virt="non-virtual">base_local_planner::AlignmentCostFunction</derivedcompoundref>
    <derivedcompoundref refid="classbase__local__planner_1_1CmdVelCostFunction" prot="public" virt="non-virtual">base_local_planner::CmdVelCostFunction</derivedcompoundref>
    <derivedcompoundref refid="classbase__local__planner_1_1MapGridCostFunction" prot="public" virt="non-virtual">base_local_planner::MapGridCostFunction</derivedcompoundref>
    <derivedcompoundref refid="classbase__local__planner_1_1ObstacleCostFunction" prot="public" virt="non-virtual">base_local_planner::ObstacleCostFunction</derivedcompoundref>
    <derivedcompoundref refid="classbase__local__planner_1_1OccupancyVelocityCostFunction" prot="public" virt="non-virtual">base_local_planner::OccupancyVelocityCostFunction</derivedcompoundref>
    <derivedcompoundref refid="classbase__local__planner_1_1OscillationCostFunction" prot="public" virt="non-virtual">base_local_planner::OscillationCostFunction</derivedcompoundref>
    <derivedcompoundref refid="classbase__local__planner_1_1PreferForwardCostFunction" prot="public" virt="non-virtual">base_local_planner::PreferForwardCostFunction</derivedcompoundref>
    <derivedcompoundref refid="classbase__local__planner_1_1TwirlingCostFunction" prot="public" virt="non-virtual">base_local_planner::TwirlingCostFunction</derivedcompoundref>
    <includes refid="trajectory__cost__function_8h" local="no">trajectory_cost_function.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classbase__local__planner_1_1TrajectoryCostFunction_1a8773ccf955aaca24cb37c4855ca4d582" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryCostFunction::scale_</definition>
        <argsstring></argsstring>
        <name>scale_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_cost_function.h" line="116" column="10" bodyfile="include/base_local_planner/trajectory_cost_function.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryCostFunction_1abaae8d899bd41d8baf02bf7aa175ded9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double base_local_planner::TrajectoryCostFunction::getScale</definition>
        <argsstring>()</argsstring>
        <name>getScale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_cost_function.h" line="102" column="10" bodyfile="include/base_local_planner/trajectory_cost_function.h" bodystart="102" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryCostFunction_1a351dddca226f210a09bd10c151e2975f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool base_local_planner::TrajectoryCostFunction::prepare</definition>
        <argsstring>()=0</argsstring>
        <name>prepare</name>
        <reimplementedby refid="classbase__local__planner_1_1CmdVelCostFunction_1ac0edcfe6645439b86cf8721d82039baa">prepare</reimplementedby>
        <reimplementedby refid="classbase__local__planner_1_1AlignmentCostFunction_1af806ca21ecf2306a48f787d7d4b19c76">prepare</reimplementedby>
        <reimplementedby refid="classbase__local__planner_1_1OccupancyVelocityCostFunction_1a59d44268dede75ab2140adbf9c5b383f">prepare</reimplementedby>
        <reimplementedby refid="classbase__local__planner_1_1PreferForwardCostFunction_1a3f378ae4e7f2c01b0af4acff71ed564f">prepare</reimplementedby>
        <reimplementedby refid="classbase__local__planner_1_1OscillationCostFunction_1a1cc7c1cd4c49df97515da3c12400f4df">prepare</reimplementedby>
        <reimplementedby refid="classbase__local__planner_1_1ObstacleCostFunction_1a9a9929d60bfd91f8814d8b31e51969cf">prepare</reimplementedby>
        <reimplementedby refid="classbase__local__planner_1_1TwirlingCostFunction_1ab371127d4584e608d012e3447e2680b3">prepare</reimplementedby>
        <reimplementedby refid="classbase__local__planner_1_1MapGridCostFunction_1af3f80d67ddeefec5871b4828ddafb5dc">prepare</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>General updating of context values if required. Subclasses may overwrite. Return false in case there is any error. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_cost_function.h" line="95" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryCostFunction_1a6908a8071270b455fc25b48db76e2d3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double base_local_planner::TrajectoryCostFunction::scoreTrajectory</definition>
        <argsstring>(Trajectory &amp;traj)=0</argsstring>
        <name>scoreTrajectory</name>
        <reimplementedby refid="classbase__local__planner_1_1CmdVelCostFunction_1a4d25e79928984ba9368fde6a8658ff02">scoreTrajectory</reimplementedby>
        <reimplementedby refid="classbase__local__planner_1_1AlignmentCostFunction_1a3594e7aa99aadf0b3eee17f3f5717db9">scoreTrajectory</reimplementedby>
        <reimplementedby refid="classbase__local__planner_1_1OccupancyVelocityCostFunction_1a42382f978f4507734f00ce01b7bf3d70">scoreTrajectory</reimplementedby>
        <reimplementedby refid="classbase__local__planner_1_1PreferForwardCostFunction_1a87ba9f1a9598d9851af39578ce62beda">scoreTrajectory</reimplementedby>
        <reimplementedby refid="classbase__local__planner_1_1OscillationCostFunction_1ac9fd440e97142115b8bbe81408eadc14">scoreTrajectory</reimplementedby>
        <reimplementedby refid="classbase__local__planner_1_1TwirlingCostFunction_1ae6744c50c77888cb4f59d3a6650227ee">scoreTrajectory</reimplementedby>
        <reimplementedby refid="classbase__local__planner_1_1ObstacleCostFunction_1a3bac5a99d333a755440449809270e638">scoreTrajectory</reimplementedby>
        <reimplementedby refid="classbase__local__planner_1_1MapGridCostFunction_1a4332b1fd1c72795c87fb5d3a427df476">scoreTrajectory</reimplementedby>
        <param>
          <type><ref refid="classbase__local__planner_1_1Trajectory" kindref="compound">Trajectory</ref> &amp;</type>
          <declname>traj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return a score for trajectory traj </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_cost_function.h" line="100" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryCostFunction_1a816da4ed3c9be419fc00abb271d5a8b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::TrajectoryCostFunction::setScale</definition>
        <argsstring>(double scale)</argsstring>
        <name>setScale</name>
        <param>
          <type>double</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_cost_function.h" line="106" column="8" bodyfile="include/base_local_planner/trajectory_cost_function.h" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryCostFunction_1ac606d6ffc0a09f96d04cbb671c903d68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual base_local_planner::TrajectoryCostFunction::~TrajectoryCostFunction</definition>
        <argsstring>()</argsstring>
        <name>~TrajectoryCostFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_cost_function.h" line="110" column="11" bodyfile="include/base_local_planner/trajectory_cost_function.h" bodystart="110" bodyend="110"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classbase__local__planner_1_1TrajectoryCostFunction_1a5a80d6bb3fade55e28d8cb234936c43a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>base_local_planner::TrajectoryCostFunction::TrajectoryCostFunction</definition>
        <argsstring>(double scale=1.0)</argsstring>
        <name>TrajectoryCostFunction</name>
        <param>
          <type>double</type>
          <declname>scale</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/trajectory_cost_function.h" line="113" column="3" bodyfile="include/base_local_planner/trajectory_cost_function.h" bodystart="113" bodyend="113"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Provides an interface for critics of trajectories During each sampling run, a batch of many trajectories will be scored using such a cost function. The prepare method is called before each batch run, and then for each trajectory of the sampling set, score_trajectory may be called. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>base_local_planner::CmdVelCostFunction</label>
        <link refid="classbase__local__planner_1_1CmdVelCostFunction"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>base_local_planner::MapGridCostFunction</label>
        <link refid="classbase__local__planner_1_1MapGridCostFunction"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>base_local_planner::PreferForwardCostFunction</label>
        <link refid="classbase__local__planner_1_1PreferForwardCostFunction"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>base_local_planner::OccupancyVelocityCostFunction</label>
        <link refid="classbase__local__planner_1_1OccupancyVelocityCostFunction"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>base_local_planner::TwirlingCostFunction</label>
        <link refid="classbase__local__planner_1_1TwirlingCostFunction"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>base_local_planner::ObstacleCostFunction</label>
        <link refid="classbase__local__planner_1_1ObstacleCostFunction"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>base_local_planner::TrajectoryCostFunction</label>
        <link refid="classbase__local__planner_1_1TrajectoryCostFunction"/>
      </node>
      <node id="7">
        <label>base_local_planner::OscillationCostFunction</label>
        <link refid="classbase__local__planner_1_1OscillationCostFunction"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>base_local_planner::AlignmentCostFunction</label>
        <link refid="classbase__local__planner_1_1AlignmentCostFunction"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="include/base_local_planner/trajectory_cost_function.h" line="87" column="29" bodyfile="include/base_local_planner/trajectory_cost_function.h" bodystart="87" bodyend="117"/>
    <listofallmembers>
      <member refid="classbase__local__planner_1_1TrajectoryCostFunction_1abaae8d899bd41d8baf02bf7aa175ded9" prot="public" virt="non-virtual"><scope>base_local_planner::TrajectoryCostFunction</scope><name>getScale</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryCostFunction_1a351dddca226f210a09bd10c151e2975f" prot="public" virt="pure-virtual"><scope>base_local_planner::TrajectoryCostFunction</scope><name>prepare</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryCostFunction_1a8773ccf955aaca24cb37c4855ca4d582" prot="private" virt="non-virtual"><scope>base_local_planner::TrajectoryCostFunction</scope><name>scale_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryCostFunction_1a6908a8071270b455fc25b48db76e2d3c" prot="public" virt="pure-virtual"><scope>base_local_planner::TrajectoryCostFunction</scope><name>scoreTrajectory</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryCostFunction_1a816da4ed3c9be419fc00abb271d5a8b5" prot="public" virt="non-virtual"><scope>base_local_planner::TrajectoryCostFunction</scope><name>setScale</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryCostFunction_1a5a80d6bb3fade55e28d8cb234936c43a" prot="protected" virt="non-virtual"><scope>base_local_planner::TrajectoryCostFunction</scope><name>TrajectoryCostFunction</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryCostFunction_1ac606d6ffc0a09f96d04cbb671c903d68" prot="public" virt="virtual"><scope>base_local_planner::TrajectoryCostFunction</scope><name>~TrajectoryCostFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
