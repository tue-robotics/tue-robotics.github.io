<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classbase__local__planner_1_1OccupancyVelocityCostFunction" kind="class" language="C++" prot="public">
    <compoundname>base_local_planner::OccupancyVelocityCostFunction</compoundname>
    <basecompoundref refid="classbase__local__planner_1_1TrajectoryCostFunction" prot="public" virt="non-virtual">base_local_planner::TrajectoryCostFunction</basecompoundref>
    <includes refid="occupancy__velocity__cost__function_8h" local="no">occupancy_velocity_cost_function.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classbase__local__planner_1_1OccupancyVelocityCostFunction_1aae1bb437a3005b9b976ecbb65e57e172" prot="private" static="no" mutable="no">
        <type><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">costmap_2d::Costmap2D</ref> *</type>
        <definition>costmap_2d::Costmap2D* base_local_planner::OccupancyVelocityCostFunction::costmap_</definition>
        <argsstring></argsstring>
        <name>costmap_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/occupancy_velocity_cost_function.h" line="36" column="27" bodyfile="include/base_local_planner/occupancy_velocity_cost_function.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1OccupancyVelocityCostFunction_1aca848f9fe98ce6e5b52e01f56887acf7" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::Point &gt;</type>
        <definition>std::vector&lt;geometry_msgs::Point&gt; base_local_planner::OccupancyVelocityCostFunction::footprint_spec_</definition>
        <argsstring></argsstring>
        <name>footprint_spec_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/occupancy_velocity_cost_function.h" line="37" column="17" bodyfile="include/base_local_planner/occupancy_velocity_cost_function.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1OccupancyVelocityCostFunction_1a93f4b45a2b59aafe61b9300ab59a0937" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::OccupancyVelocityCostFunction::max_trans_vel_</definition>
        <argsstring></argsstring>
        <name>max_trans_vel_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/occupancy_velocity_cost_function.h" line="39" column="12" bodyfile="include/base_local_planner/occupancy_velocity_cost_function.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1OccupancyVelocityCostFunction_1abaedaebcd97e64788a0232a36483c634" prot="private" static="no" mutable="no">
        <type><ref refid="classbase__local__planner_1_1WorldModel" kindref="compound">base_local_planner::WorldModel</ref> *</type>
        <definition>base_local_planner::WorldModel* base_local_planner::OccupancyVelocityCostFunction::world_model_</definition>
        <argsstring></argsstring>
        <name>world_model_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/occupancy_velocity_cost_function.h" line="38" column="36" bodyfile="include/base_local_planner/occupancy_velocity_cost_function.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classbase__local__planner_1_1OccupancyVelocityCostFunction_1a6b33599b29ee12313ebb1f1fbad23e6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>base_local_planner::OccupancyVelocityCostFunction::OccupancyVelocityCostFunction</definition>
        <argsstring>(costmap_2d::Costmap2D *costmap)</argsstring>
        <name>OccupancyVelocityCostFunction</name>
        <param>
          <type><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">costmap_2d::Costmap2D</ref> *</type>
          <declname>costmap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/occupancy_velocity_cost_function.h" line="26" column="5" bodyfile="src/occupancy_velocity_cost_function.cpp" bodystart="14" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1OccupancyVelocityCostFunction_1a59d44268dede75ab2140adbf9c5b383f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool base_local_planner::OccupancyVelocityCostFunction::prepare</definition>
        <argsstring>()</argsstring>
        <name>prepare</name>
        <reimplements refid="classbase__local__planner_1_1TrajectoryCostFunction_1a351dddca226f210a09bd10c151e2975f">prepare</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>General updating of context values if required. Subclasses may overwrite. Return false in case there is any error. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/occupancy_velocity_cost_function.h" line="29" column="10" bodyfile="include/base_local_planner/occupancy_velocity_cost_function.h" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1OccupancyVelocityCostFunction_1a42382f978f4507734f00ce01b7bf3d70" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double base_local_planner::OccupancyVelocityCostFunction::scoreTrajectory</definition>
        <argsstring>(Trajectory &amp;traj)</argsstring>
        <name>scoreTrajectory</name>
        <reimplements refid="classbase__local__planner_1_1TrajectoryCostFunction_1a6908a8071270b455fc25b48db76e2d3c">scoreTrajectory</reimplements>
        <param>
          <type><ref refid="classbase__local__planner_1_1Trajectory" kindref="compound">Trajectory</ref> &amp;</type>
          <declname>traj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return a score for trajectory traj </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/occupancy_velocity_cost_function.h" line="30" column="12" bodyfile="src/occupancy_velocity_cost_function.cpp" bodystart="30" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1OccupancyVelocityCostFunction_1a15e12455c6771fec98c88b0b7296e0fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::OccupancyVelocityCostFunction::setFootprint</definition>
        <argsstring>(const std::vector&lt; geometry_msgs::Point &gt; &amp;footprint_spec)</argsstring>
        <name>setFootprint</name>
        <param>
          <type>const <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::Point &gt; &amp;</type>
          <declname>footprint_spec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/occupancy_velocity_cost_function.h" line="33" column="10" bodyfile="include/base_local_planner/occupancy_velocity_cost_function.h" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1OccupancyVelocityCostFunction_1afd4a3c4f89c85ced330babf1ad234bc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::OccupancyVelocityCostFunction::setParams</definition>
        <argsstring>(double max_trans_vel)</argsstring>
        <name>setParams</name>
        <param>
          <type>double</type>
          <declname>max_trans_vel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/occupancy_velocity_cost_function.h" line="32" column="10" bodyfile="include/base_local_planner/occupancy_velocity_cost_function.h" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1OccupancyVelocityCostFunction_1a6a18edd165f9f8819dae49298dab4128" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>base_local_planner::OccupancyVelocityCostFunction::~OccupancyVelocityCostFunction</definition>
        <argsstring>()</argsstring>
        <name>~OccupancyVelocityCostFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/occupancy_velocity_cost_function.h" line="27" column="5" bodyfile="src/occupancy_velocity_cost_function.cpp" bodystart="22" bodyend="28"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Uses costmap 2d to assign negative costs if robot footprint in trajectory crosses a cell in which this velocity is not allowed. </para>
    </briefdescription>
    <detaileddescription>
<para>class <ref refid="classbase__local__planner_1_1OccupancyVelocityCostFunction" kindref="compound">OccupancyVelocityCostFunction</ref> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>base_local_planner::OccupancyVelocityCostFunction</label>
        <link refid="classbase__local__planner_1_1OccupancyVelocityCostFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>base_local_planner::TrajectoryCostFunction</label>
        <link refid="classbase__local__planner_1_1TrajectoryCostFunction"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>costmap_2d::Costmap2D</label>
        <link refid="classcostmap__2d_1_1Costmap2D" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags"/>
      </node>
      <node id="1">
        <label>base_local_planner::OccupancyVelocityCostFunction</label>
        <link refid="classbase__local__planner_1_1OccupancyVelocityCostFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>footprint_spec_</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>costmap_</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>world_model_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::vector&lt; geometry_msgs::Point &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="2">
        <label>base_local_planner::TrajectoryCostFunction</label>
        <link refid="classbase__local__planner_1_1TrajectoryCostFunction"/>
      </node>
      <node id="5">
        <label>base_local_planner::WorldModel</label>
        <link refid="classbase__local__planner_1_1WorldModel"/>
      </node>
    </collaborationgraph>
    <location file="include/base_local_planner/occupancy_velocity_cost_function.h" line="21" column="66" bodyfile="include/base_local_planner/occupancy_velocity_cost_function.h" bodystart="21" bodyend="38"/>
    <listofallmembers>
      <member refid="classbase__local__planner_1_1OccupancyVelocityCostFunction_1aae1bb437a3005b9b976ecbb65e57e172" prot="private" virt="non-virtual"><scope>base_local_planner::OccupancyVelocityCostFunction</scope><name>costmap_</name></member>
      <member refid="classbase__local__planner_1_1OccupancyVelocityCostFunction_1aca848f9fe98ce6e5b52e01f56887acf7" prot="private" virt="non-virtual"><scope>base_local_planner::OccupancyVelocityCostFunction</scope><name>footprint_spec_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryCostFunction_1abaae8d899bd41d8baf02bf7aa175ded9" prot="public" virt="non-virtual"><scope>base_local_planner::OccupancyVelocityCostFunction</scope><name>getScale</name></member>
      <member refid="classbase__local__planner_1_1OccupancyVelocityCostFunction_1a93f4b45a2b59aafe61b9300ab59a0937" prot="private" virt="non-virtual"><scope>base_local_planner::OccupancyVelocityCostFunction</scope><name>max_trans_vel_</name></member>
      <member refid="classbase__local__planner_1_1OccupancyVelocityCostFunction_1a6b33599b29ee12313ebb1f1fbad23e6e" prot="public" virt="non-virtual"><scope>base_local_planner::OccupancyVelocityCostFunction</scope><name>OccupancyVelocityCostFunction</name></member>
      <member refid="classbase__local__planner_1_1OccupancyVelocityCostFunction_1a59d44268dede75ab2140adbf9c5b383f" prot="public" virt="virtual"><scope>base_local_planner::OccupancyVelocityCostFunction</scope><name>prepare</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryCostFunction_1a8773ccf955aaca24cb37c4855ca4d582" prot="private" virt="non-virtual"><scope>base_local_planner::OccupancyVelocityCostFunction</scope><name>scale_</name></member>
      <member refid="classbase__local__planner_1_1OccupancyVelocityCostFunction_1a42382f978f4507734f00ce01b7bf3d70" prot="public" virt="virtual"><scope>base_local_planner::OccupancyVelocityCostFunction</scope><name>scoreTrajectory</name></member>
      <member refid="classbase__local__planner_1_1OccupancyVelocityCostFunction_1a15e12455c6771fec98c88b0b7296e0fd" prot="public" virt="non-virtual"><scope>base_local_planner::OccupancyVelocityCostFunction</scope><name>setFootprint</name></member>
      <member refid="classbase__local__planner_1_1OccupancyVelocityCostFunction_1afd4a3c4f89c85ced330babf1ad234bc8" prot="public" virt="non-virtual"><scope>base_local_planner::OccupancyVelocityCostFunction</scope><name>setParams</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryCostFunction_1a816da4ed3c9be419fc00abb271d5a8b5" prot="public" virt="non-virtual"><scope>base_local_planner::OccupancyVelocityCostFunction</scope><name>setScale</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryCostFunction_1a5a80d6bb3fade55e28d8cb234936c43a" prot="protected" virt="non-virtual"><scope>base_local_planner::OccupancyVelocityCostFunction</scope><name>TrajectoryCostFunction</name></member>
      <member refid="classbase__local__planner_1_1OccupancyVelocityCostFunction_1abaedaebcd97e64788a0232a36483c634" prot="private" virt="non-virtual"><scope>base_local_planner::OccupancyVelocityCostFunction</scope><name>world_model_</name></member>
      <member refid="classbase__local__planner_1_1OccupancyVelocityCostFunction_1a6a18edd165f9f8819dae49298dab4128" prot="public" virt="non-virtual"><scope>base_local_planner::OccupancyVelocityCostFunction</scope><name>~OccupancyVelocityCostFunction</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryCostFunction_1ac606d6ffc0a09f96d04cbb671c903d68" prot="public" virt="virtual"><scope>base_local_planner::OccupancyVelocityCostFunction</scope><name>~TrajectoryCostFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
