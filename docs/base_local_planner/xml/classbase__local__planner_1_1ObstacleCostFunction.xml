<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classbase__local__planner_1_1ObstacleCostFunction" kind="class" language="C++" prot="public">
    <compoundname>base_local_planner::ObstacleCostFunction</compoundname>
    <basecompoundref refid="classbase__local__planner_1_1TrajectoryCostFunction" prot="public" virt="non-virtual">base_local_planner::TrajectoryCostFunction</basecompoundref>
    <includes refid="obstacle__cost__function_8h" local="no">obstacle_cost_function.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classbase__local__planner_1_1ObstacleCostFunction_1a649bf1d646e4432bdf338ff6b904cefc" prot="private" static="no" mutable="no">
        <type><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">costmap_2d::Costmap2D</ref> *</type>
        <definition>costmap_2d::Costmap2D* base_local_planner::ObstacleCostFunction::costmap_</definition>
        <argsstring></argsstring>
        <name>costmap_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/obstacle_cost_function.h" line="149" column="25" bodyfile="include/base_local_planner/obstacle_cost_function.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1ObstacleCostFunction_1aef3f0212931d94c234ab6c4cf1dd0689" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::Point &gt;</type>
        <definition>std::vector&lt;geometry_msgs::Point&gt; base_local_planner::ObstacleCostFunction::footprint_spec_</definition>
        <argsstring></argsstring>
        <name>footprint_spec_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/obstacle_cost_function.h" line="150" column="15" bodyfile="include/base_local_planner/obstacle_cost_function.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1ObstacleCostFunction_1a5c2ec54222f1ae220836e41a967beb13" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::ObstacleCostFunction::max_scaling_factor_</definition>
        <argsstring></argsstring>
        <name>max_scaling_factor_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/obstacle_cost_function.h" line="155" column="10" bodyfile="include/base_local_planner/obstacle_cost_function.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1ObstacleCostFunction_1aad6617f6131ca6598ec3a07d1d3153dd" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::ObstacleCostFunction::max_trans_vel_</definition>
        <argsstring></argsstring>
        <name>max_trans_vel_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/obstacle_cost_function.h" line="152" column="10" bodyfile="include/base_local_planner/obstacle_cost_function.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1ObstacleCostFunction_1abac2b51781792694610f477a28f784fb" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double base_local_planner::ObstacleCostFunction::scaling_speed_</definition>
        <argsstring></argsstring>
        <name>scaling_speed_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/obstacle_cost_function.h" line="155" column="30" bodyfile="include/base_local_planner/obstacle_cost_function.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1ObstacleCostFunction_1a1ff9618ab8e84d39d17d0a2f843a8cb9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool base_local_planner::ObstacleCostFunction::sum_scores_</definition>
        <argsstring></argsstring>
        <name>sum_scores_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/obstacle_cost_function.h" line="153" column="8" bodyfile="include/base_local_planner/obstacle_cost_function.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbase__local__planner_1_1ObstacleCostFunction_1acce234454982f3bd52744f67a04f8be5" prot="private" static="no" mutable="no">
        <type><ref refid="classbase__local__planner_1_1WorldModel" kindref="compound">base_local_planner::WorldModel</ref> *</type>
        <definition>base_local_planner::WorldModel* base_local_planner::ObstacleCostFunction::world_model_</definition>
        <argsstring></argsstring>
        <name>world_model_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/obstacle_cost_function.h" line="151" column="34" bodyfile="include/base_local_planner/obstacle_cost_function.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classbase__local__planner_1_1ObstacleCostFunction_1a415ee13143bd2b2dd9b5effa1e7f3a5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>base_local_planner::ObstacleCostFunction::ObstacleCostFunction</definition>
        <argsstring>(costmap_2d::Costmap2D *costmap)</argsstring>
        <name>ObstacleCostFunction</name>
        <param>
          <type><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">costmap_2d::Costmap2D</ref> *</type>
          <declname>costmap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/obstacle_cost_function.h" line="126" column="3" bodyfile="src/obstacle_cost_function.cpp" bodystart="80" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1ObstacleCostFunction_1a9a9929d60bfd91f8814d8b31e51969cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool base_local_planner::ObstacleCostFunction::prepare</definition>
        <argsstring>()</argsstring>
        <name>prepare</name>
        <reimplements refid="classbase__local__planner_1_1TrajectoryCostFunction_1a351dddca226f210a09bd10c151e2975f">prepare</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>General updating of context values if required. Subclasses may overwrite. Return false in case there is any error. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/obstacle_cost_function.h" line="129" column="8" bodyfile="src/obstacle_cost_function.cpp" bodystart="105" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1ObstacleCostFunction_1a3bac5a99d333a755440449809270e638" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double base_local_planner::ObstacleCostFunction::scoreTrajectory</definition>
        <argsstring>(Trajectory &amp;traj)</argsstring>
        <name>scoreTrajectory</name>
        <reimplements refid="classbase__local__planner_1_1TrajectoryCostFunction_1a6908a8071270b455fc25b48db76e2d3c">scoreTrajectory</reimplements>
        <param>
          <type><ref refid="classbase__local__planner_1_1Trajectory" kindref="compound">Trajectory</ref> &amp;</type>
          <declname>traj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return a score for trajectory traj </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/obstacle_cost_function.h" line="130" column="10" bodyfile="src/obstacle_cost_function.cpp" bodystart="109" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1ObstacleCostFunction_1a8043f943c3bf43dc4836db1a632a6e52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::ObstacleCostFunction::setFootprint</definition>
        <argsstring>(std::vector&lt; geometry_msgs::Point &gt; footprint_spec)</argsstring>
        <name>setFootprint</name>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::Point &gt;</type>
          <declname>footprint_spec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/obstacle_cost_function.h" line="135" column="8" bodyfile="src/obstacle_cost_function.cpp" bodystart="101" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1ObstacleCostFunction_1ad1fc4b6ee10cf4add4e198967030037c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::ObstacleCostFunction::setParams</definition>
        <argsstring>(double max_trans_vel, double max_scaling_factor, double scaling_speed)</argsstring>
        <name>setParams</name>
        <param>
          <type>double</type>
          <declname>max_trans_vel</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max_scaling_factor</declname>
        </param>
        <param>
          <type>double</type>
          <declname>scaling_speed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/obstacle_cost_function.h" line="134" column="8" bodyfile="src/obstacle_cost_function.cpp" bodystart="94" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1ObstacleCostFunction_1a62321188c336dbef4d749a79cecc45c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void base_local_planner::ObstacleCostFunction::setSumScores</definition>
        <argsstring>(bool score_sums)</argsstring>
        <name>setSumScores</name>
        <param>
          <type>bool</type>
          <declname>score_sums</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/obstacle_cost_function.h" line="132" column="8" bodyfile="include/base_local_planner/obstacle_cost_function.h" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1ObstacleCostFunction_1aba72b1bd0dae5acb7e25dbfd4ea9821a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>base_local_planner::ObstacleCostFunction::~ObstacleCostFunction</definition>
        <argsstring>()</argsstring>
        <name>~ObstacleCostFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/obstacle_cost_function.h" line="127" column="3" bodyfile="src/obstacle_cost_function.cpp" bodystart="87" bodyend="91"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classbase__local__planner_1_1ObstacleCostFunction_1a1f6a1fa580a775f11226ca346b8dcc33" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double base_local_planner::ObstacleCostFunction::footprintCost</definition>
        <argsstring>(const double &amp;x, const double &amp;y, const double &amp;th, double scale, std::vector&lt; geometry_msgs::Point &gt; footprint_spec, costmap_2d::Costmap2D *costmap, base_local_planner::WorldModel *world_model)</argsstring>
        <name>footprintCost</name>
        <param>
          <type>const double &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>th</declname>
        </param>
        <param>
          <type>double</type>
          <declname>scale</declname>
        </param>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::Point &gt;</type>
          <declname>footprint_spec</declname>
        </param>
        <param>
          <type><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">costmap_2d::Costmap2D</ref> *</type>
          <declname>costmap</declname>
        </param>
        <param>
          <type><ref refid="classbase__local__planner_1_1WorldModel" kindref="compound">base_local_planner::WorldModel</ref> *</type>
          <declname>world_model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/obstacle_cost_function.h" line="139" column="17" bodyfile="src/obstacle_cost_function.cpp" bodystart="156" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1ObstacleCostFunction_1aff41f9f317c9e375d0945bda8b9f8970" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double base_local_planner::ObstacleCostFunction::getScalingFactor</definition>
        <argsstring>(Trajectory &amp;traj, double scaling_speed, double max_trans_vel, double max_scaling_factor)</argsstring>
        <name>getScalingFactor</name>
        <param>
          <type><ref refid="classbase__local__planner_1_1Trajectory" kindref="compound">Trajectory</ref> &amp;</type>
          <declname>traj</declname>
        </param>
        <param>
          <type>double</type>
          <declname>scaling_speed</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max_trans_vel</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max_scaling_factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/obstacle_cost_function.h" line="138" column="17" bodyfile="src/obstacle_cost_function.cpp" bodystart="142" bodyend="154"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Uses costmap 2d to assign negative costs if robot footprint is in obstacle on any point of the trajectory. </para>
    </briefdescription>
    <detaileddescription>
<para>class <ref refid="classbase__local__planner_1_1ObstacleCostFunction" kindref="compound">ObstacleCostFunction</ref> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>base_local_planner::ObstacleCostFunction</label>
        <link refid="classbase__local__planner_1_1ObstacleCostFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>base_local_planner::TrajectoryCostFunction</label>
        <link refid="classbase__local__planner_1_1TrajectoryCostFunction"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>costmap_2d::Costmap2D</label>
        <link refid="classcostmap__2d_1_1Costmap2D" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags"/>
      </node>
      <node id="1">
        <label>base_local_planner::ObstacleCostFunction</label>
        <link refid="classbase__local__planner_1_1ObstacleCostFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>footprint_spec_</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>costmap_</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>world_model_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::vector&lt; geometry_msgs::Point &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="2">
        <label>base_local_planner::TrajectoryCostFunction</label>
        <link refid="classbase__local__planner_1_1TrajectoryCostFunction"/>
      </node>
      <node id="5">
        <label>base_local_planner::WorldModel</label>
        <link refid="classbase__local__planner_1_1WorldModel"/>
      </node>
    </collaborationgraph>
    <location file="include/base_local_planner/obstacle_cost_function.h" line="88" column="57" bodyfile="include/base_local_planner/obstacle_cost_function.h" bodystart="88" bodyend="121"/>
    <listofallmembers>
      <member refid="classbase__local__planner_1_1ObstacleCostFunction_1a649bf1d646e4432bdf338ff6b904cefc" prot="private" virt="non-virtual"><scope>base_local_planner::ObstacleCostFunction</scope><name>costmap_</name></member>
      <member refid="classbase__local__planner_1_1ObstacleCostFunction_1aef3f0212931d94c234ab6c4cf1dd0689" prot="private" virt="non-virtual"><scope>base_local_planner::ObstacleCostFunction</scope><name>footprint_spec_</name></member>
      <member refid="classbase__local__planner_1_1ObstacleCostFunction_1a1f6a1fa580a775f11226ca346b8dcc33" prot="public" virt="non-virtual"><scope>base_local_planner::ObstacleCostFunction</scope><name>footprintCost</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryCostFunction_1abaae8d899bd41d8baf02bf7aa175ded9" prot="public" virt="non-virtual"><scope>base_local_planner::ObstacleCostFunction</scope><name>getScale</name></member>
      <member refid="classbase__local__planner_1_1ObstacleCostFunction_1aff41f9f317c9e375d0945bda8b9f8970" prot="public" virt="non-virtual"><scope>base_local_planner::ObstacleCostFunction</scope><name>getScalingFactor</name></member>
      <member refid="classbase__local__planner_1_1ObstacleCostFunction_1a5c2ec54222f1ae220836e41a967beb13" prot="private" virt="non-virtual"><scope>base_local_planner::ObstacleCostFunction</scope><name>max_scaling_factor_</name></member>
      <member refid="classbase__local__planner_1_1ObstacleCostFunction_1aad6617f6131ca6598ec3a07d1d3153dd" prot="private" virt="non-virtual"><scope>base_local_planner::ObstacleCostFunction</scope><name>max_trans_vel_</name></member>
      <member refid="classbase__local__planner_1_1ObstacleCostFunction_1a415ee13143bd2b2dd9b5effa1e7f3a5a" prot="public" virt="non-virtual"><scope>base_local_planner::ObstacleCostFunction</scope><name>ObstacleCostFunction</name></member>
      <member refid="classbase__local__planner_1_1ObstacleCostFunction_1a9a9929d60bfd91f8814d8b31e51969cf" prot="public" virt="virtual"><scope>base_local_planner::ObstacleCostFunction</scope><name>prepare</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryCostFunction_1a8773ccf955aaca24cb37c4855ca4d582" prot="private" virt="non-virtual"><scope>base_local_planner::ObstacleCostFunction</scope><name>scale_</name></member>
      <member refid="classbase__local__planner_1_1ObstacleCostFunction_1abac2b51781792694610f477a28f784fb" prot="private" virt="non-virtual"><scope>base_local_planner::ObstacleCostFunction</scope><name>scaling_speed_</name></member>
      <member refid="classbase__local__planner_1_1ObstacleCostFunction_1a3bac5a99d333a755440449809270e638" prot="public" virt="virtual"><scope>base_local_planner::ObstacleCostFunction</scope><name>scoreTrajectory</name></member>
      <member refid="classbase__local__planner_1_1ObstacleCostFunction_1a8043f943c3bf43dc4836db1a632a6e52" prot="public" virt="non-virtual"><scope>base_local_planner::ObstacleCostFunction</scope><name>setFootprint</name></member>
      <member refid="classbase__local__planner_1_1ObstacleCostFunction_1ad1fc4b6ee10cf4add4e198967030037c" prot="public" virt="non-virtual"><scope>base_local_planner::ObstacleCostFunction</scope><name>setParams</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryCostFunction_1a816da4ed3c9be419fc00abb271d5a8b5" prot="public" virt="non-virtual"><scope>base_local_planner::ObstacleCostFunction</scope><name>setScale</name></member>
      <member refid="classbase__local__planner_1_1ObstacleCostFunction_1a62321188c336dbef4d749a79cecc45c0" prot="public" virt="non-virtual"><scope>base_local_planner::ObstacleCostFunction</scope><name>setSumScores</name></member>
      <member refid="classbase__local__planner_1_1ObstacleCostFunction_1a1ff9618ab8e84d39d17d0a2f843a8cb9" prot="private" virt="non-virtual"><scope>base_local_planner::ObstacleCostFunction</scope><name>sum_scores_</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryCostFunction_1a5a80d6bb3fade55e28d8cb234936c43a" prot="protected" virt="non-virtual"><scope>base_local_planner::ObstacleCostFunction</scope><name>TrajectoryCostFunction</name></member>
      <member refid="classbase__local__planner_1_1ObstacleCostFunction_1acce234454982f3bd52744f67a04f8be5" prot="private" virt="non-virtual"><scope>base_local_planner::ObstacleCostFunction</scope><name>world_model_</name></member>
      <member refid="classbase__local__planner_1_1ObstacleCostFunction_1aba72b1bd0dae5acb7e25dbfd4ea9821a" prot="public" virt="non-virtual"><scope>base_local_planner::ObstacleCostFunction</scope><name>~ObstacleCostFunction</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryCostFunction_1ac606d6ffc0a09f96d04cbb671c903d68" prot="public" virt="virtual"><scope>base_local_planner::ObstacleCostFunction</scope><name>~TrajectoryCostFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
