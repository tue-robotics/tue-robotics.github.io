<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classbase__local__planner_1_1TwirlingCostFunction" kind="class" language="C++" prot="public">
    <compoundname>base_local_planner::TwirlingCostFunction</compoundname>
    <basecompoundref refid="classbase__local__planner_1_1TrajectoryCostFunction" prot="public" virt="non-virtual">base_local_planner::TrajectoryCostFunction</basecompoundref>
    <includes refid="twirling__cost__function_8h" local="no">twirling_cost_function.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classbase__local__planner_1_1TwirlingCostFunction_1ab371127d4584e608d012e3447e2680b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool base_local_planner::TwirlingCostFunction::prepare</definition>
        <argsstring>()</argsstring>
        <name>prepare</name>
        <reimplements refid="classbase__local__planner_1_1TrajectoryCostFunction_1a351dddca226f210a09bd10c151e2975f">prepare</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>General updating of context values if required. Subclasses may overwrite. Return false in case there is any error. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/twirling_cost_function.h" line="130" column="8" bodyfile="include/base_local_planner/twirling_cost_function.h" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1TwirlingCostFunction_1ae6744c50c77888cb4f59d3a6650227ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double base_local_planner::TwirlingCostFunction::scoreTrajectory</definition>
        <argsstring>(Trajectory &amp;traj)</argsstring>
        <name>scoreTrajectory</name>
        <reimplements refid="classbase__local__planner_1_1TrajectoryCostFunction_1a6908a8071270b455fc25b48db76e2d3c">scoreTrajectory</reimplements>
        <param>
          <type><ref refid="classbase__local__planner_1_1Trajectory" kindref="compound">Trajectory</ref> &amp;</type>
          <declname>traj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return a score for trajectory traj </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/twirling_cost_function.h" line="128" column="10" bodyfile="src/twirling_cost_function.cpp" bodystart="14" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1TwirlingCostFunction_1afb0e33a7f0a2be9cf755fc36d86e1864" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>base_local_planner::TwirlingCostFunction::TwirlingCostFunction</definition>
        <argsstring>()</argsstring>
        <name>TwirlingCostFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/twirling_cost_function.h" line="125" column="3" bodyfile="include/base_local_planner/twirling_cost_function.h" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classbase__local__planner_1_1TwirlingCostFunction_1a4f0df4c358d25074f7e50c484518fecb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>base_local_planner::TwirlingCostFunction::~TwirlingCostFunction</definition>
        <argsstring>()</argsstring>
        <name>~TwirlingCostFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/base_local_planner/twirling_cost_function.h" line="126" column="3" bodyfile="include/base_local_planner/twirling_cost_function.h" bodystart="126" bodyend="126"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class provides a cost based on how much a robot &quot;twirls&quot; on its way to the goal. With differential-drive robots, there isn&apos;t a choice, but with holonomic or near-holonomic robots, sometimes a robot spins more than you&apos;d like on its way to a goal. This class provides a way to assign a penalty purely to rotational velocities. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>base_local_planner::TwirlingCostFunction</label>
        <link refid="classbase__local__planner_1_1TwirlingCostFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>base_local_planner::TrajectoryCostFunction</label>
        <link refid="classbase__local__planner_1_1TrajectoryCostFunction"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>base_local_planner::TwirlingCostFunction</label>
        <link refid="classbase__local__planner_1_1TwirlingCostFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>base_local_planner::TrajectoryCostFunction</label>
        <link refid="classbase__local__planner_1_1TrajectoryCostFunction"/>
      </node>
    </collaborationgraph>
    <location file="include/base_local_planner/twirling_cost_function.h" line="87" column="77" bodyfile="include/base_local_planner/twirling_cost_function.h" bodystart="87" bodyend="96"/>
    <listofallmembers>
      <member refid="classbase__local__planner_1_1TrajectoryCostFunction_1abaae8d899bd41d8baf02bf7aa175ded9" prot="public" virt="non-virtual"><scope>base_local_planner::TwirlingCostFunction</scope><name>getScale</name></member>
      <member refid="classbase__local__planner_1_1TwirlingCostFunction_1ab371127d4584e608d012e3447e2680b3" prot="public" virt="virtual"><scope>base_local_planner::TwirlingCostFunction</scope><name>prepare</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryCostFunction_1a8773ccf955aaca24cb37c4855ca4d582" prot="private" virt="non-virtual"><scope>base_local_planner::TwirlingCostFunction</scope><name>scale_</name></member>
      <member refid="classbase__local__planner_1_1TwirlingCostFunction_1ae6744c50c77888cb4f59d3a6650227ee" prot="public" virt="virtual"><scope>base_local_planner::TwirlingCostFunction</scope><name>scoreTrajectory</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryCostFunction_1a816da4ed3c9be419fc00abb271d5a8b5" prot="public" virt="non-virtual"><scope>base_local_planner::TwirlingCostFunction</scope><name>setScale</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryCostFunction_1a5a80d6bb3fade55e28d8cb234936c43a" prot="protected" virt="non-virtual"><scope>base_local_planner::TwirlingCostFunction</scope><name>TrajectoryCostFunction</name></member>
      <member refid="classbase__local__planner_1_1TwirlingCostFunction_1afb0e33a7f0a2be9cf755fc36d86e1864" prot="public" virt="non-virtual"><scope>base_local_planner::TwirlingCostFunction</scope><name>TwirlingCostFunction</name></member>
      <member refid="classbase__local__planner_1_1TrajectoryCostFunction_1ac606d6ffc0a09f96d04cbb671c903d68" prot="public" virt="virtual"><scope>base_local_planner::TwirlingCostFunction</scope><name>~TrajectoryCostFunction</name></member>
      <member refid="classbase__local__planner_1_1TwirlingCostFunction_1a4f0df4c358d25074f7e50c484518fecb" prot="public" virt="non-virtual"><scope>base_local_planner::TwirlingCostFunction</scope><name>~TwirlingCostFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
