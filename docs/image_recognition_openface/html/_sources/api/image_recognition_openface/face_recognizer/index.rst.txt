image_recognition_openface.face_recognizer
==========================================

.. py:module:: image_recognition_openface.face_recognizer


Classes
-------

.. autoapisummary::

   image_recognition_openface.face_recognizer.ROI
   image_recognition_openface.face_recognizer.L2Distance
   image_recognition_openface.face_recognizer.RecognizedFace
   image_recognition_openface.face_recognizer.TrainedFace
   image_recognition_openface.face_recognizer.FaceRecognizer


Functions
---------

.. autoapisummary::

   image_recognition_openface.face_recognizer._get_roi_image
   image_recognition_openface.face_recognizer._get_min_l2_distance


Module Contents
---------------

.. py:function:: _get_roi_image(bgr_image, detection, factor_x, factor_y)

   Get the image roi and the roi of a face detection

   :param bgr_image: Input image
   :param detection: Dlib detection
   :param factor_x: scale-up factor x
   :param factor_y: scale-up factor y
   :return: roi_image, roi


.. py:function:: _get_min_l2_distance(vector_list_a, vector_b)

   Calculate the minimal l2 distance of a vector list w.r.t. an other vector

   :param vector_list_a: Vector list
   :param vector_b: Vector
   :return: Minimal l2 distance


.. py:class:: ROI

   
   ROI class that holds a region of interest of an image


   .. py:attribute:: x_offset
      :value: 0



   .. py:attribute:: y_offset
      :value: 0



   .. py:attribute:: width
      :value: 0



   .. py:attribute:: height
      :value: 0



   .. py:method:: __repr__()


.. py:class:: L2Distance(distance, label)

   
   L2 Distance that holds a l2 distance and an associated label

   :param distance: the l2 distance
   :param label: the label


   .. py:attribute:: distance


   .. py:attribute:: label


   .. py:method:: __repr__()


.. py:class:: RecognizedFace(detection, image, factor_x=0.1, factor_y=0.2)

   
   A Recognized face in an imaeg

   :param detection: The actual detection from dlib
   :param image: The original image
   :param factor_x: Upscale factor x
   :param factor_y: Upscale factor y


   .. py:attribute:: l2_distances
      :value: []



   .. py:method:: __repr__()


.. py:class:: TrainedFace(label)

   .. py:attribute:: label


   .. py:attribute:: representations
      :value: []



.. py:class:: FaceRecognizer(align_path, net_path)

   
   Dlib / Openface Face recognizer

   :param align_path: Dlib align path
   :param net_path: Openface neural network path


   .. py:attribute:: _align


   .. py:attribute:: _net


   .. py:attribute:: _face_detector


   .. py:attribute:: _trained_faces
      :value: []



   .. py:method:: update_with_categorical_distribution(recognition)

      Update the recognition with a categorical distribution of the trained faces

      :param recognition: Input recognition
      :return: Output recognition with an updated categorical distribution



   .. py:method:: _get_representation(bgr_image)

      Gets the vector of a face in the image

      :param bgr_image: The input image
      :return: The vector representation



   .. py:method:: recognize(image)

      Method that tries to find faces in the specified image

      :param image: The input image
      :return: Returns the FaceRecognitions



   .. py:method:: _get_trained_face_index(label)

      Returns the index of the trained face

      :param label: label of the trained face
      :return: the index of the face in the self._trained faces list



   .. py:method:: train(image, name)

      Adds a face to the trained faces, creates a vector representation and adds this

      :param image: Input image
      :param name: The label of the face



   .. py:method:: clear_trained_faces()

      Clears all the trained faces



   .. py:method:: save_trained_faces(file_name)


   .. py:method:: restore_trained_faces(file_name)


