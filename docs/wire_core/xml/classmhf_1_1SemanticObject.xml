<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classmhf_1_1SemanticObject" kind="class" language="C++" prot="public">
    <compoundname>mhf::SemanticObject</compoundname>
    <basecompoundref refid="classmhf_1_1PropertySet" prot="public" virt="non-virtual">mhf::PropertySet</basecompoundref>
    <includes refid="SemanticObject_8h" local="no">SemanticObject.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classmhf_1_1SemanticObject_1a630094f19120ddf9afdd71ce7424ef40" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int mhf::SemanticObject::N_SEMANTICOBJECT</definition>
        <argsstring></argsstring>
        <name>N_SEMANTICOBJECT</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/SemanticObject.h" line="25" column="16" bodyfile="include/wire/storage/SemanticObject.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classmhf_1_1SemanticObject_1a07d0dee869cac4d7b18a8a732c1160eb" prot="public" static="no" mutable="no">
        <type><ref refid="cpp/container/list" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::list</ref>&lt; <ref refid="classmhf_1_1SemanticObject" kindref="compound">SemanticObject</ref> * &gt;::iterator</type>
        <definition>std::list&lt;SemanticObject*&gt;::iterator mhf::SemanticObject::it_obj_storage_</definition>
        <argsstring></argsstring>
        <name>it_obj_storage_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/SemanticObject.h" line="27" column="26" bodyfile="include/wire/storage/SemanticObject.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classmhf_1_1SemanticObject_1a437357f713296740e924735e7db4480e" prot="protected" static="no" mutable="no">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>std::string mhf::SemanticObject::expected_class_</definition>
        <argsstring></argsstring>
        <name>expected_class_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/SemanticObject.h" line="63" column="17" bodyfile="include/wire/storage/SemanticObject.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmhf_1_1SemanticObject_1a42dfb7df09f76c3203b4ef7dd27da8e8" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacemhf_1ae3b16130b980e82d9293026741d89598" kindref="member">ObjectID</ref></type>
        <definition>ObjectID mhf::SemanticObject::ID_</definition>
        <argsstring></argsstring>
        <name>ID_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/SemanticObject.h" line="61" column="14" bodyfile="include/wire/storage/SemanticObject.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmhf_1_1SemanticObject_1ad17652a2ac9a708c50bf74f70819dc70" prot="protected" static="no" mutable="no">
        <type><ref refid="cpp/container/set" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::set</ref>&lt; <ref refid="classmhf_1_1Hypothesis" kindref="compound">Hypothesis</ref> * &gt;</type>
        <definition>std::set&lt;Hypothesis*&gt; mhf::SemanticObject::parent_hypotheses_</definition>
        <argsstring></argsstring>
        <name>parent_hypotheses_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/SemanticObject.h" line="65" column="14" bodyfile="include/wire/storage/SemanticObject.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmhf_1_1SemanticObject_1a7c6be05c780b7afec8315f4df5268c0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mhf::SemanticObject::addPotentialAssignment</definition>
        <argsstring>(const Evidence &amp;ev, double probability)</argsstring>
        <name>addPotentialAssignment</name>
        <param>
          <type>const <ref refid="classmhf_1_1Evidence" kindref="compound">Evidence</ref> &amp;</type>
          <declname>ev</declname>
        </param>
        <param>
          <type>double</type>
          <declname>probability</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/SemanticObject.h" line="49" column="10" bodyfile="src/storage/SemanticObject.cpp" bodystart="158" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1SemanticObject_1ac122640569a4905fcf92e6ad7cec0e55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mhf::SemanticObject::addToHypothesis</definition>
        <argsstring>(Hypothesis *hyp)</argsstring>
        <name>addToHypothesis</name>
        <param>
          <type><ref refid="classmhf_1_1Hypothesis" kindref="compound">Hypothesis</ref> *</type>
          <declname>hyp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/SemanticObject.h" line="53" column="10" bodyfile="src/storage/SemanticObject.cpp" bodystart="173" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1SemanticObject_1a517066aa0aaf9effaf3c1299f6e44195" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classmhf_1_1SemanticObject" kindref="compound">SemanticObject</ref> *</type>
        <definition>SemanticObject * mhf::SemanticObject::clone</definition>
        <argsstring>() const</argsstring>
        <name>clone</name>
        <reimplements refid="classmhf_1_1PropertySet_1ab6405f800f9a8b1b75c33d273e735289">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/SemanticObject.h" line="39" column="20" bodyfile="src/storage/SemanticObject.cpp" bodystart="140" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1SemanticObject_1a7cc05c17ef27f34e2e1db7177737fb78" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmhf_1_1ClassModel" kindref="compound">ClassModel</ref> &amp;</type>
        <definition>const ClassModel &amp; mhf::SemanticObject::getExpectedObjectModel</definition>
        <argsstring>() const</argsstring>
        <name>getExpectedObjectModel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/SemanticObject.h" line="45" column="22" bodyfile="src/storage/SemanticObject.cpp" bodystart="144" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1SemanticObject_1a1135c67c92f139984464bfa0b8da5590" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacemhf_1ae3b16130b980e82d9293026741d89598" kindref="member">ObjectID</ref></type>
        <definition>ObjectID mhf::SemanticObject::getID</definition>
        <argsstring>() const</argsstring>
        <name>getID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/SemanticObject.h" line="51" column="14" bodyfile="src/storage/SemanticObject.cpp" bodystart="169" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1SemanticObject_1aea47afbf2b5f41d7f9aa4a21912298dc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double mhf::SemanticObject::getLastUpdateTime</definition>
        <argsstring>() const</argsstring>
        <name>getLastUpdateTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/SemanticObject.h" line="41" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1SemanticObject_1a81143bd9dc2492e3d1d0a2c480c379b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double mhf::SemanticObject::getLikelihood</definition>
        <argsstring>(const PropertySet &amp;ev) const</argsstring>
        <name>getLikelihood</name>
        <reimplements refid="classmhf_1_1PropertySet_1aef097ba1817f7740d323f07bbc63fced">getLikelihood</reimplements>
        <param>
          <type>const <ref refid="classmhf_1_1PropertySet" kindref="compound">PropertySet</ref> &amp;</type>
          <declname>ev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/SemanticObject.h" line="47" column="12" bodyfile="src/storage/SemanticObject.cpp" bodystart="42" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1SemanticObject_1a5f5f93f614f5617ca950d4dd1450497b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int mhf::SemanticObject::getNumParentHypotheses</definition>
        <argsstring>() const</argsstring>
        <name>getNumParentHypotheses</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/SemanticObject.h" line="57" column="18" bodyfile="src/storage/SemanticObject.cpp" bodystart="181" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1SemanticObject_1a5e9a4620d546606fa09408b119ec1667" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double mhf::SemanticObject::getTimestamp</definition>
        <argsstring>() const</argsstring>
        <name>getTimestamp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/SemanticObject.h" line="43" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1SemanticObject_1a76c95b800e4ea59e0c63d09fb0ee9fbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mhf::SemanticObject::init</definition>
        <argsstring>(const Evidence &amp;z)</argsstring>
        <name>init</name>
        <param>
          <type>const <ref refid="classmhf_1_1Evidence" kindref="compound">Evidence</ref> &amp;</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/SemanticObject.h" line="35" column="10" bodyfile="src/storage/SemanticObject.cpp" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1SemanticObject_1a2855d316eef96942aa2b97900bc0484f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mhf::SemanticObject::removeFromHypothesis</definition>
        <argsstring>(Hypothesis *hyp)</argsstring>
        <name>removeFromHypothesis</name>
        <param>
          <type><ref refid="classmhf_1_1Hypothesis" kindref="compound">Hypothesis</ref> *</type>
          <declname>hyp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/SemanticObject.h" line="55" column="10" bodyfile="src/storage/SemanticObject.cpp" bodystart="177" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1SemanticObject_1ae8587f1e1aa84aa9407ec77baf11cd87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mhf::SemanticObject::SemanticObject</definition>
        <argsstring>(const SemanticObject &amp;orig)</argsstring>
        <name>SemanticObject</name>
        <param>
          <type>const <ref refid="classmhf_1_1SemanticObject" kindref="compound">SemanticObject</ref> &amp;</type>
          <declname>orig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/SemanticObject.h" line="31" column="5" bodyfile="src/storage/SemanticObject.cpp" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1SemanticObject_1a1f24433631f3f966e45b180df95cc52c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mhf::SemanticObject::SemanticObject</definition>
        <argsstring>(long ID)</argsstring>
        <name>SemanticObject</name>
        <param>
          <type>long</type>
          <declname>ID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/SemanticObject.h" line="29" column="5" bodyfile="src/storage/SemanticObject.cpp" bodystart="25" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1SemanticObject_1a861b250812192e500a7ea1a079db1505" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mhf::SemanticObject::update</definition>
        <argsstring>(const Evidence &amp;z)</argsstring>
        <name>update</name>
        <param>
          <type>const <ref refid="classmhf_1_1Evidence" kindref="compound">Evidence</ref> &amp;</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/SemanticObject.h" line="37" column="10" bodyfile="src/storage/SemanticObject.cpp" bodystart="77" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1SemanticObject_1a6edc6b05e13373f319f2e7a9338e2467" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>mhf::SemanticObject::~SemanticObject</definition>
        <argsstring>()</argsstring>
        <name>~SemanticObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/SemanticObject.h" line="33" column="13" bodyfile="src/storage/SemanticObject.cpp" bodystart="34" bodyend="36"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>mhf::SemanticObject</label>
        <link refid="classmhf_1_1SemanticObject"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>mhf::IStateEstimator</label>
        <link refid="classmhf_1_1IStateEstimator"/>
      </node>
      <node id="2">
        <label>mhf::PropertySet</label>
        <link refid="classmhf_1_1PropertySet"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>mhf::SemanticObject</label>
        <link refid="classmhf_1_1SemanticObject"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>it_obj_storage_</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>parent_hypotheses_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>expected_class_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>mhf::IStateEstimator</label>
        <link refid="classmhf_1_1IStateEstimator"/>
      </node>
      <node id="5">
        <label>std::list&lt; mhf::SemanticObject * &gt;</label>
        <link refid="cpp/container/list" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="4">
        <label>std::map&lt; Attribute, mhf::Property * &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="6">
        <label>std::set&lt; mhf::Hypothesis * &gt;</label>
        <link refid="cpp/container/set" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="2">
        <label>mhf::PropertySet</label>
        <link refid="classmhf_1_1PropertySet"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>properties_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>std::string</label>
        <link refid="cpp/string/basic_string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="include/wire/storage/SemanticObject.h" line="21" column="40" bodyfile="include/wire/storage/SemanticObject.h" bodystart="21" bodyend="67"/>
    <listofallmembers>
      <member refid="classmhf_1_1SemanticObject_1a7c6be05c780b7afec8315f4df5268c0c" prot="public" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>addPotentialAssignment</name></member>
      <member refid="classmhf_1_1PropertySet_1a873cfcb7c51cea17521c03424f6aa55c" prot="public" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>addProperty</name></member>
      <member refid="classmhf_1_1PropertySet_1a87c3a7d1b46bcf3398c7b3b649bc3ccb" prot="public" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>addProperty</name></member>
      <member refid="classmhf_1_1PropertySet_1a55ff76298cdce1010cab95504f1622e7" prot="public" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>addProperty</name></member>
      <member refid="classmhf_1_1PropertySet_1a670e88a0eee1d5a3005d46e2287fd589" prot="protected" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>addProperty</name></member>
      <member refid="classmhf_1_1SemanticObject_1ac122640569a4905fcf92e6ad7cec0e55" prot="public" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>addToHypothesis</name></member>
      <member refid="classmhf_1_1SemanticObject_1a517066aa0aaf9effaf3c1299f6e44195" prot="public" virt="virtual"><scope>mhf::SemanticObject</scope><name>clone</name></member>
      <member refid="classmhf_1_1SemanticObject_1a437357f713296740e924735e7db4480e" prot="protected" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>expected_class_</name></member>
      <member refid="classmhf_1_1SemanticObject_1a7cc05c17ef27f34e2e1db7177737fb78" prot="public" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>getExpectedObjectModel</name></member>
      <member refid="classmhf_1_1SemanticObject_1a1135c67c92f139984464bfa0b8da5590" prot="public" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>getID</name></member>
      <member refid="classmhf_1_1SemanticObject_1aea47afbf2b5f41d7f9aa4a21912298dc" prot="public" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>getLastUpdateTime</name></member>
      <member refid="classmhf_1_1SemanticObject_1a81143bd9dc2492e3d1d0a2c480c379b1" prot="public" virt="virtual"><scope>mhf::SemanticObject</scope><name>getLikelihood</name></member>
      <member refid="classmhf_1_1SemanticObject_1a5f5f93f614f5617ca950d4dd1450497b" prot="public" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>getNumParentHypotheses</name></member>
      <member refid="classmhf_1_1PropertySet_1a68492e6fcecb403fe66ea208ccf0b1e5" prot="public" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>getProperty</name></member>
      <member refid="classmhf_1_1PropertySet_1a5477d5168ee9cd4eb57788e760ba925a" prot="public" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>getProperty</name></member>
      <member refid="classmhf_1_1PropertySet_1a09aa142104285acc7249681574721d09" prot="protected" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>getProperty</name></member>
      <member refid="classmhf_1_1PropertySet_1a51d383aa8d68636ad95b4948e63f03d8" prot="public" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>getPropertyMap</name></member>
      <member refid="classmhf_1_1SemanticObject_1a5e9a4620d546606fa09408b119ec1667" prot="public" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>getTimestamp</name></member>
      <member refid="classmhf_1_1PropertySet_1a1a1fded058a4c404476548024a45942b" prot="public" virt="virtual"><scope>mhf::SemanticObject</scope><name>getValue</name></member>
      <member refid="classmhf_1_1SemanticObject_1a42dfb7df09f76c3203b4ef7dd27da8e8" prot="protected" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>ID_</name></member>
      <member refid="classmhf_1_1SemanticObject_1a76c95b800e4ea59e0c63d09fb0ee9fbc" prot="public" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>init</name></member>
      <member refid="classmhf_1_1SemanticObject_1a07d0dee869cac4d7b18a8a732c1160eb" prot="public" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>it_obj_storage_</name></member>
      <member refid="classmhf_1_1PropertySet_1a89f2b2f75e035afa19acdfd68565ce77" prot="public" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>N_PROPERTY_SET</name></member>
      <member refid="classmhf_1_1SemanticObject_1a630094f19120ddf9afdd71ce7424ef40" prot="public" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>N_SEMANTICOBJECT</name></member>
      <member refid="classmhf_1_1SemanticObject_1ad17652a2ac9a708c50bf74f70819dc70" prot="protected" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>parent_hypotheses_</name></member>
      <member refid="classmhf_1_1PropertySet_1a31fd08eaacea40e59fad77aad81f94c0" prot="public" virt="virtual"><scope>mhf::SemanticObject</scope><name>propagate</name></member>
      <member refid="classmhf_1_1PropertySet_1abf50fe7bb7aaafa25001662af44f82b5" prot="private" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>properties_</name></member>
      <member refid="classmhf_1_1PropertySet_1a1387cd705e3243201fa2c439c322bb43" prot="public" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>PropertySet</name></member>
      <member refid="classmhf_1_1PropertySet_1a1b16cf3a8c7ef206b38a7d56128b0722" prot="public" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>PropertySet</name></member>
      <member refid="classmhf_1_1SemanticObject_1a2855d316eef96942aa2b97900bc0484f" prot="public" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>removeFromHypothesis</name></member>
      <member refid="classmhf_1_1PropertySet_1a8203bd2b5a70dda771ee927b4eeb22d7" prot="public" virt="virtual"><scope>mhf::SemanticObject</scope><name>reset</name></member>
      <member refid="classmhf_1_1SemanticObject_1a1f24433631f3f966e45b180df95cc52c" prot="public" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>SemanticObject</name></member>
      <member refid="classmhf_1_1SemanticObject_1ae8587f1e1aa84aa9407ec77baf11cd87" prot="public" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>SemanticObject</name></member>
      <member refid="classmhf_1_1IStateEstimator_1a265a58f62f73731a85179ab4f465aa0a" prot="public" virt="virtual"><scope>mhf::SemanticObject</scope><name>setParameter</name></member>
      <member refid="classmhf_1_1IStateEstimator_1aea2e3fa3e7ee39155e556262abb086c7" prot="public" virt="virtual"><scope>mhf::SemanticObject</scope><name>setParameter</name></member>
      <member refid="classmhf_1_1IStateEstimator_1ab2e657eef008c37181cb650b14692f4f" prot="public" virt="virtual"><scope>mhf::SemanticObject</scope><name>setParameter</name></member>
      <member refid="classmhf_1_1PropertySet_1acee1dec2c27aa6a6cb7efa7b001ec421" prot="protected" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>timestamp_</name></member>
      <member refid="classmhf_1_1PropertySet_1a18bdc8c1fb3c364f317fa2eaf7992c24" prot="public" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>toString</name></member>
      <member refid="classmhf_1_1SemanticObject_1a861b250812192e500a7ea1a079db1505" prot="public" virt="non-virtual"><scope>mhf::SemanticObject</scope><name>update</name></member>
      <member refid="classmhf_1_1PropertySet_1a86d428bd5396d1087c59ebfe8ffdc912" prot="public" virt="virtual" ambiguityscope="mhf::PropertySet::"><scope>mhf::SemanticObject</scope><name>update</name></member>
      <member refid="classmhf_1_1IStateEstimator_1a368b89d4307185f95a45c50d19fdb4e8" prot="public" virt="virtual"><scope>mhf::SemanticObject</scope><name>~IStateEstimator</name></member>
      <member refid="classmhf_1_1PropertySet_1a7f8cdd09619fcffcbc186d2fdc88f108" prot="public" virt="virtual"><scope>mhf::SemanticObject</scope><name>~PropertySet</name></member>
      <member refid="classmhf_1_1SemanticObject_1a6edc6b05e13373f319f2e7a9338e2467" prot="public" virt="virtual"><scope>mhf::SemanticObject</scope><name>~SemanticObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
