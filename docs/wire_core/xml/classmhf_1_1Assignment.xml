<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classmhf_1_1Assignment" kind="class" language="C++" prot="public">
    <compoundname>mhf::Assignment</compoundname>
    <includes refid="Assignment_8h" local="no">Assignment.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classmhf_1_1Assignment_1af7a80f95ad109a26bee1b952f718e579" prot="public" static="no" strong="no">
        <type></type>
        <name>AssignmentType</name>
        <enumvalue id="classmhf_1_1Assignment_1af7a80f95ad109a26bee1b952f718e579a22f8db90c04167eb764eda141958b399" prot="public">
          <name>NEW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmhf_1_1Assignment_1af7a80f95ad109a26bee1b952f718e579ade42f358d369fded317d4a981a34b9f0" prot="public">
          <name>EXISTING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmhf_1_1Assignment_1af7a80f95ad109a26bee1b952f718e579a72653b839932731ca0f7ecefbeceb07f" prot="public">
          <name>CLUTTER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Assignment.h" line="22" column="24" bodyfile="include/wire/logic/Assignment.h" bodystart="22" bodyend="26"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classmhf_1_1Assignment_1ab6c797542b78f693e312d402a8911429" prot="protected" static="no" mutable="no">
        <type>const <ref refid="classmhf_1_1Evidence" kindref="compound">Evidence</ref> *</type>
        <definition>const Evidence* mhf::Assignment::evidence_</definition>
        <argsstring></argsstring>
        <name>evidence_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Assignment.h" line="50" column="20" bodyfile="include/wire/logic/Assignment.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmhf_1_1Assignment_1a4d4820db139f00348efe101534c8559d" prot="protected" static="no" mutable="yes">
        <type><ref refid="classmhf_1_1SemanticObject" kindref="compound">SemanticObject</ref> *</type>
        <definition>SemanticObject* mhf::Assignment::new_object_</definition>
        <argsstring></argsstring>
        <name>new_object_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Assignment.h" line="56" column="28" bodyfile="include/wire/logic/Assignment.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmhf_1_1Assignment_1a67fa4c096b9d83604d101ffeeb60f9e7" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double mhf::Assignment::probability_</definition>
        <argsstring></argsstring>
        <name>probability_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Assignment.h" line="54" column="12" bodyfile="include/wire/logic/Assignment.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmhf_1_1Assignment_1ab702a6745d0a7f6ea2086beabb7a8b31" prot="protected" static="no" mutable="no">
        <type>const <ref refid="classmhf_1_1SemanticObject" kindref="compound">SemanticObject</ref> *</type>
        <definition>const SemanticObject* mhf::Assignment::target_</definition>
        <argsstring></argsstring>
        <name>target_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Assignment.h" line="52" column="26" bodyfile="include/wire/logic/Assignment.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmhf_1_1Assignment_1acfa1d3ee394a43ad4982433f4fca1f5d" prot="protected" static="no" mutable="no">
        <type><ref refid="classmhf_1_1Assignment_1af7a80f95ad109a26bee1b952f718e579" kindref="member">AssignmentType</ref></type>
        <definition>AssignmentType mhf::Assignment::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Assignment.h" line="48" column="20" bodyfile="include/wire/logic/Assignment.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmhf_1_1Assignment_1aa607007ea648ee5575e9ac84f852bca4" prot="protected" static="no" mutable="yes">
        <type><ref refid="classmhf_1_1SemanticObject" kindref="compound">SemanticObject</ref> *</type>
        <definition>SemanticObject* mhf::Assignment::updated_object_</definition>
        <argsstring></argsstring>
        <name>updated_object_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Assignment.h" line="58" column="28" bodyfile="include/wire/logic/Assignment.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmhf_1_1Assignment_1a71c5b35e27839f5c03d66c0dababe62e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mhf::Assignment::Assignment</definition>
        <argsstring>(AssignmentType type, const Evidence *evidence, const SemanticObject *target, double probability)</argsstring>
        <name>Assignment</name>
        <param>
          <type><ref refid="classmhf_1_1Assignment_1af7a80f95ad109a26bee1b952f718e579" kindref="member">AssignmentType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="classmhf_1_1Evidence" kindref="compound">Evidence</ref> *</type>
          <declname>evidence</declname>
        </param>
        <param>
          <type>const <ref refid="classmhf_1_1SemanticObject" kindref="compound">SemanticObject</ref> *</type>
          <declname>target</declname>
        </param>
        <param>
          <type>double</type>
          <declname>probability</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Assignment.h" line="30" column="5" bodyfile="src/logic/Assignment.cpp" bodystart="16" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Assignment_1ad1db64cca87ee37b9f0078da98455c0e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmhf_1_1Evidence" kindref="compound">Evidence</ref> *</type>
        <definition>const Evidence * mhf::Assignment::getEvidence</definition>
        <argsstring>() const</argsstring>
        <name>getEvidence</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Assignment.h" line="34" column="20" bodyfile="src/logic/Assignment.cpp" bodystart="28" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Assignment_1ad6908f1fc513f06c54550195d3c1cf8c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmhf_1_1SemanticObject" kindref="compound">SemanticObject</ref> *</type>
        <definition>SemanticObject * mhf::Assignment::getNewObject</definition>
        <argsstring>() const</argsstring>
        <name>getNewObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Assignment.h" line="40" column="20" bodyfile="src/logic/Assignment.cpp" bodystart="41" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Assignment_1a1cc649854fa6eddabd435d572d8381bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double mhf::Assignment::getProbability</definition>
        <argsstring>() const</argsstring>
        <name>getProbability</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Assignment.h" line="38" column="12" bodyfile="src/logic/Assignment.cpp" bodystart="36" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Assignment_1a32f7bfe4a07d395cdfc99f625954321d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmhf_1_1SemanticObject" kindref="compound">SemanticObject</ref> *</type>
        <definition>const SemanticObject * mhf::Assignment::getTarget</definition>
        <argsstring>() const</argsstring>
        <name>getTarget</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Assignment.h" line="36" column="26" bodyfile="src/logic/Assignment.cpp" bodystart="32" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Assignment_1a2ec63ae568d7da0082b1909ef68b6cf6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmhf_1_1Assignment_1af7a80f95ad109a26bee1b952f718e579" kindref="member">AssignmentType</ref></type>
        <definition>Assignment::AssignmentType mhf::Assignment::getType</definition>
        <argsstring>() const</argsstring>
        <name>getType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Assignment.h" line="32" column="20" bodyfile="src/logic/Assignment.cpp" bodystart="24" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Assignment_1a9ef3a873de153154a092897a975307da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmhf_1_1SemanticObject" kindref="compound">SemanticObject</ref> *</type>
        <definition>SemanticObject * mhf::Assignment::getUpdatedObject</definition>
        <argsstring>() const</argsstring>
        <name>getUpdatedObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Assignment.h" line="42" column="20" bodyfile="src/logic/Assignment.cpp" bodystart="52" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Assignment_1ae84a32ae42f43a8d07ab97a1fe98d9a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>std::string mhf::Assignment::toString</definition>
        <argsstring>() const</argsstring>
        <name>toString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Assignment.h" line="44" column="17" bodyfile="src/logic/Assignment.cpp" bodystart="64" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Assignment_1a76902f6476dc69301049d9f033e08b12" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>mhf::Assignment::~Assignment</definition>
        <argsstring>()</argsstring>
        <name>~Assignment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Assignment.h" line="28" column="13" bodyfile="src/logic/Assignment.cpp" bodystart="21" bodyend="22"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="6">
        <label>mhf::SemanticObject</label>
        <link refid="classmhf_1_1SemanticObject"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>it_obj_storage_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>parent_hypotheses_</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>expected_class_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>mhf::IStateEstimator</label>
        <link refid="classmhf_1_1IStateEstimator"/>
      </node>
      <node id="7">
        <label>std::list&lt; mhf::SemanticObject * &gt;</label>
        <link refid="cpp/container/list" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="5">
        <label>std::map&lt; Attribute, mhf::Property * &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="2">
        <label>mhf::Evidence</label>
        <link refid="classmhf_1_1Evidence"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>mhf::Assignment</label>
        <link refid="classmhf_1_1Assignment"/>
        <childnode refid="2" relation="usage">
          <edgelabel>evidence_</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>new_object_</edgelabel>
          <edgelabel>target_</edgelabel>
          <edgelabel>updated_object_</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>std::set&lt; mhf::Hypothesis * &gt;</label>
        <link refid="cpp/container/set" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="3">
        <label>mhf::PropertySet</label>
        <link refid="classmhf_1_1PropertySet"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>properties_</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>std::string</label>
        <link refid="cpp/string/basic_string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="include/wire/logic/Assignment.h" line="18" column="17" bodyfile="include/wire/logic/Assignment.h" bodystart="18" bodyend="59"/>
    <listofallmembers>
      <member refid="classmhf_1_1Assignment_1a71c5b35e27839f5c03d66c0dababe62e" prot="public" virt="non-virtual"><scope>mhf::Assignment</scope><name>Assignment</name></member>
      <member refid="classmhf_1_1Assignment_1af7a80f95ad109a26bee1b952f718e579" prot="public" virt="non-virtual"><scope>mhf::Assignment</scope><name>AssignmentType</name></member>
      <member refid="classmhf_1_1Assignment_1af7a80f95ad109a26bee1b952f718e579a72653b839932731ca0f7ecefbeceb07f" prot="public" virt="non-virtual"><scope>mhf::Assignment</scope><name>CLUTTER</name></member>
      <member refid="classmhf_1_1Assignment_1ab6c797542b78f693e312d402a8911429" prot="protected" virt="non-virtual"><scope>mhf::Assignment</scope><name>evidence_</name></member>
      <member refid="classmhf_1_1Assignment_1af7a80f95ad109a26bee1b952f718e579ade42f358d369fded317d4a981a34b9f0" prot="public" virt="non-virtual"><scope>mhf::Assignment</scope><name>EXISTING</name></member>
      <member refid="classmhf_1_1Assignment_1ad1db64cca87ee37b9f0078da98455c0e" prot="public" virt="non-virtual"><scope>mhf::Assignment</scope><name>getEvidence</name></member>
      <member refid="classmhf_1_1Assignment_1ad6908f1fc513f06c54550195d3c1cf8c" prot="public" virt="non-virtual"><scope>mhf::Assignment</scope><name>getNewObject</name></member>
      <member refid="classmhf_1_1Assignment_1a1cc649854fa6eddabd435d572d8381bb" prot="public" virt="non-virtual"><scope>mhf::Assignment</scope><name>getProbability</name></member>
      <member refid="classmhf_1_1Assignment_1a32f7bfe4a07d395cdfc99f625954321d" prot="public" virt="non-virtual"><scope>mhf::Assignment</scope><name>getTarget</name></member>
      <member refid="classmhf_1_1Assignment_1a2ec63ae568d7da0082b1909ef68b6cf6" prot="public" virt="non-virtual"><scope>mhf::Assignment</scope><name>getType</name></member>
      <member refid="classmhf_1_1Assignment_1a9ef3a873de153154a092897a975307da" prot="public" virt="non-virtual"><scope>mhf::Assignment</scope><name>getUpdatedObject</name></member>
      <member refid="classmhf_1_1Assignment_1af7a80f95ad109a26bee1b952f718e579a22f8db90c04167eb764eda141958b399" prot="public" virt="non-virtual"><scope>mhf::Assignment</scope><name>NEW</name></member>
      <member refid="classmhf_1_1Assignment_1a4d4820db139f00348efe101534c8559d" prot="protected" virt="non-virtual"><scope>mhf::Assignment</scope><name>new_object_</name></member>
      <member refid="classmhf_1_1Assignment_1a67fa4c096b9d83604d101ffeeb60f9e7" prot="protected" virt="non-virtual"><scope>mhf::Assignment</scope><name>probability_</name></member>
      <member refid="classmhf_1_1Assignment_1ab702a6745d0a7f6ea2086beabb7a8b31" prot="protected" virt="non-virtual"><scope>mhf::Assignment</scope><name>target_</name></member>
      <member refid="classmhf_1_1Assignment_1ae84a32ae42f43a8d07ab97a1fe98d9a1" prot="public" virt="non-virtual"><scope>mhf::Assignment</scope><name>toString</name></member>
      <member refid="classmhf_1_1Assignment_1acfa1d3ee394a43ad4982433f4fca1f5d" prot="protected" virt="non-virtual"><scope>mhf::Assignment</scope><name>type_</name></member>
      <member refid="classmhf_1_1Assignment_1aa607007ea648ee5575e9ac84f852bca4" prot="protected" virt="non-virtual"><scope>mhf::Assignment</scope><name>updated_object_</name></member>
      <member refid="classmhf_1_1Assignment_1a76902f6476dc69301049d9f033e08b12" prot="public" virt="virtual"><scope>mhf::Assignment</scope><name>~Assignment</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
