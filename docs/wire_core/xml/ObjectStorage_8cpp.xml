<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="ObjectStorage_8cpp" kind="file" language="C++">
    <compoundname>ObjectStorage.cpp</compoundname>
    <includes refid="ObjectStorage_8h" local="yes">wire/storage/ObjectStorage.h</includes>
    <includes refid="KnowledgeDatabase_8h" local="yes">wire/storage/KnowledgeDatabase.h</includes>
    <includes refid="SemanticObject_8h" local="yes">wire/storage/SemanticObject.h</includes>
    <includes refid="Evidence_8h" local="yes">wire/core/Evidence.h</includes>
    <incdepgraph>
      <node id="3">
        <label>list</label>
        <link refid="cpp/header/list" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="1">
        <label>ObjectStorage.cpp</label>
        <link refid="ObjectStorage_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>wire/storage/ObjectStorage.h</label>
        <link refid="ObjectStorage_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>wire/core/ClassModel.h</label>
        <link refid="ClassModel_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>problib/pdfs/PMF.h</label>
        <link refid="PMF_8h.html" external="/home/docker/ros/noetic/system/build/docs/problib/tags"/>
      </node>
      <node id="13">
        <label>wire/storage/SemanticObject.h</label>
        <link refid="SemanticObject_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>map</label>
        <link refid="cpp/header/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="11">
        <label>wire/core/IStateEstimator.h</label>
        <link refid="IStateEstimator_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>wire/storage/KnowledgeDatabase.h</label>
        <link refid="KnowledgeDatabase_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>wire/core/Evidence.h</label>
        <link refid="Evidence_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>string</label>
        <link refid="cpp/header/string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="12">
        <label>problib/pdfs/PDF.h</label>
        <link refid="PDF_8h.html" external="/home/docker/ros/noetic/system/build/docs/problib/tags"/>
      </node>
      <node id="7">
        <label>wire/core/PropertySet.h</label>
        <link refid="PropertySet_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>wire/core/datatypes.h</label>
        <link refid="datatypes_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacemhf">mhf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ObjectStorage_8h" kindref="compound">wire/storage/ObjectStorage.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="KnowledgeDatabase_8h" kindref="compound">wire/storage/KnowledgeDatabase.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="SemanticObject_8h" kindref="compound">wire/storage/SemanticObject.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Evidence_8h" kindref="compound">wire/core/Evidence.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemhf" kindref="compound">mhf</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">ObjectStorage*<sp/>ObjectStorage::instance_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classmhf_1_1ObjectStorage_1a3e41e4aecb19bbcf70821893f2f41c2f" refkind="member"><highlight class="normal"><ref refid="classmhf_1_1ObjectStorage" kindref="compound">ObjectStorage</ref>&amp;<sp/>ObjectStorage::getInstance()<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(instance_)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*instance_;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>instance_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1ObjectStorage" kindref="compound">ObjectStorage</ref>();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*instance_;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="classmhf_1_1ObjectStorage_1ac6b48559dbad7378916abdb98aeca3b7" refkind="member"><highlight class="normal">ObjectStorage::ObjectStorage()<sp/>:<sp/>ID_(0),<sp/>knowledge_db_(<ref refid="classmhf_1_1KnowledgeDatabase" kindref="compound">KnowledgeDatabase</ref>::getInstance())<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classmhf_1_1ObjectStorage_1a38b45f909d2a9ce581433e4f59234683" refkind="member"><highlight class="normal"><ref refid="classmhf_1_1ObjectStorage_1a38b45f909d2a9ce581433e4f59234683" kindref="member">ObjectStorage::~ObjectStorage</ref>()<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classmhf_1_1ObjectStorage_1ae2dd85f531f134e6aa814e0a7b5cd60a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1ObjectStorage_1ae2dd85f531f134e6aa814e0a7b5cd60a" kindref="member">ObjectStorage::addObject</ref>(<ref refid="classmhf_1_1SemanticObject" kindref="compound">SemanticObject</ref>*<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmhf_1_1ObjectStorage_1a38ca52c1debaff0b3173e931b1d15a6f" kindref="member">objects_</ref>.push_back(obj);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>obj-&gt;<ref refid="classmhf_1_1SemanticObject_1a07d0dee869cac4d7b18a8a732c1160eb" kindref="member">it_obj_storage_</ref><sp/>=<sp/>--<ref refid="classmhf_1_1ObjectStorage_1a38ca52c1debaff0b3173e931b1d15a6f" kindref="member">objects_</ref>.end();</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classmhf_1_1ObjectStorage_1af521a81a67ebaaa6ac27f9200bd25c85" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1ObjectStorage_1af521a81a67ebaaa6ac27f9200bd25c85" kindref="member">ObjectStorage::removeObject</ref>(<ref refid="classmhf_1_1SemanticObject" kindref="compound">SemanticObject</ref>&amp;<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmhf_1_1ObjectStorage_1a38ca52c1debaff0b3173e931b1d15a6f" kindref="member">objects_</ref>.erase(obj.<ref refid="classmhf_1_1SemanticObject_1a07d0dee869cac4d7b18a8a732c1160eb" kindref="member">it_obj_storage_</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classmhf_1_1ObjectStorage_1afa9cbe255958ab0780e7a0aef45748af" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1ObjectStorage_1afa9cbe255958ab0780e7a0aef45748af" kindref="member">ObjectStorage::getUniqueID</ref>()<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1ObjectStorage_1a35bc6a16e26d7da22901f92d97b2080c" kindref="member">ID_</ref>++;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classmhf_1_1ObjectStorage_1ab924b35c2250e267d615a2738980e5dd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1ObjectStorage_1ab924b35c2250e267d615a2738980e5dd" kindref="member">ObjectStorage::match</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Evidence" kindref="compound">Evidence</ref>&amp;<sp/>ev)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>&quot;ObjectStorage::match&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="cpp/container/list" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">list&lt;SemanticObject*&gt;::iterator</ref><sp/>it_obj<sp/>=<sp/><ref refid="classmhf_1_1ObjectStorage_1a38ca52c1debaff0b3173e931b1d15a6f" kindref="member">objects_</ref>.begin();<sp/>it_obj<sp/>!=<sp/><ref refid="classmhf_1_1ObjectStorage_1a38ca52c1debaff0b3173e931b1d15a6f" kindref="member">objects_</ref>.end();<sp/>++it_obj)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmhf_1_1SemanticObject" kindref="compound">SemanticObject</ref>&amp;<sp/>obj<sp/>=<sp/>**it_obj;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.<ref refid="classmhf_1_1PropertySet_1a31fd08eaacea40e59fad77aad81f94c0" kindref="member">propagate</ref>(ev.<ref refid="classmhf_1_1PropertySet_1a0a51af07afba18e052bba54fa7ce9fc4" kindref="member">getTimestamp</ref>());</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="cpp/container/list" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">list&lt;SemanticObject*&gt;::iterator</ref><sp/>it_obj<sp/>=<sp/><ref refid="classmhf_1_1ObjectStorage_1a38ca52c1debaff0b3173e931b1d15a6f" kindref="member">objects_</ref>.begin();<sp/>it_obj<sp/>!=<sp/><ref refid="classmhf_1_1ObjectStorage_1a38ca52c1debaff0b3173e931b1d15a6f" kindref="member">objects_</ref>.end();<sp/>++it_obj)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmhf_1_1SemanticObject" kindref="compound">SemanticObject</ref>&amp;<sp/>obj<sp/>=<sp/>**it_obj;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prob_existing<sp/>=<sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a95b7a82ae3f837ad5d1a926e711f939b" kindref="member">KnowledgeDatabase::getInstance</ref>().<ref refid="classmhf_1_1KnowledgeDatabase_1ab795cd19730f78ca693a016810bd34d0" kindref="member">getProbabilityExisting</ref>(ev,<sp/>obj);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prob_existing<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;Adding<sp/>evidence<sp/>&quot;<sp/>&lt;&lt;<sp/>&amp;ev<sp/>&lt;&lt;<sp/>&quot;<sp/>to<sp/>object<sp/>&quot;<sp/>&lt;&lt;<sp/>&amp;obj<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.<ref refid="classmhf_1_1SemanticObject_1a7c6be05c780b7afec8315f4df5268c0c" kindref="member">addPotentialAssignment</ref>(ev,<sp/>prob_existing);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/storage/ObjectStorage.cpp"/>
  </compounddef>
</doxygen>
