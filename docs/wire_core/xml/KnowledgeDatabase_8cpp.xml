<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="KnowledgeDatabase_8cpp" kind="file" language="C++">
    <compoundname>KnowledgeDatabase.cpp</compoundname>
    <includes refid="KnowledgeDatabase_8h" local="yes">wire/storage/KnowledgeDatabase.h</includes>
    <includes refid="Property_8h" local="yes">wire/core/Property.h</includes>
    <includes refid="ClassModel_8h" local="yes">wire/core/ClassModel.h</includes>
    <includes refid="Evidence_8h" local="yes">wire/core/Evidence.h</includes>
    <includes refid="SemanticObject_8h" local="yes">wire/storage/SemanticObject.h</includes>
    <includes local="yes">problib/conversions.h</includes>
    <incdepgraph>
      <node id="14">
        <label>list</label>
        <link refid="cpp/header/list" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="15">
        <label>problib/conversions.h</label>
        <link refid="conversions_8h.html" external="/home/docker/ros/noetic/system/build/docs/problib/tags"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>wire/core/ClassModel.h</label>
        <link refid="ClassModel_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>problib/pdfs/PMF.h</label>
        <link refid="PMF_8h.html" external="/home/docker/ros/noetic/system/build/docs/problib/tags"/>
      </node>
      <node id="13">
        <label>wire/storage/SemanticObject.h</label>
        <link refid="SemanticObject_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>map</label>
        <link refid="cpp/header/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="9">
        <label>wire/core/IStateEstimator.h</label>
        <link refid="IStateEstimator_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>wire/core/Property.h</label>
        <link refid="Property_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>wire/storage/KnowledgeDatabase.h</label>
        <link refid="KnowledgeDatabase_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>wire/core/Evidence.h</label>
        <link refid="Evidence_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>string</label>
        <link refid="cpp/header/string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="10">
        <label>problib/pdfs/PDF.h</label>
        <link refid="PDF_8h.html" external="/home/docker/ros/noetic/system/build/docs/problib/tags"/>
      </node>
      <node id="5">
        <label>wire/core/PropertySet.h</label>
        <link refid="PropertySet_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>KnowledgeDatabase.cpp</label>
        <link refid="KnowledgeDatabase_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>wire/core/datatypes.h</label>
        <link refid="datatypes_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacemhf">mhf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="KnowledgeDatabase_8h" kindref="compound">wire/storage/KnowledgeDatabase.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Property_8h" kindref="compound">wire/core/Property.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ClassModel_8h" kindref="compound">wire/core/ClassModel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Evidence_8h" kindref="compound">wire/core/Evidence.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="SemanticObject_8h" kindref="compound">wire/storage/SemanticObject.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="conversions_8h.html" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">problib/conversions.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemhf" kindref="compound">mhf</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">KnowledgeDatabase*<sp/>KnowledgeDatabase::instance_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="classmhf_1_1KnowledgeDatabase_1a95b7a82ae3f837ad5d1a926e711f939b" refkind="member"><highlight class="normal"><ref refid="classmhf_1_1KnowledgeDatabase" kindref="compound">KnowledgeDatabase</ref>&amp;<sp/>KnowledgeDatabase::getInstance()<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(instance_)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*instance_;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>instance_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1KnowledgeDatabase" kindref="compound">KnowledgeDatabase</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*instance_;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classmhf_1_1KnowledgeDatabase_1a80a353494ba607aaf119fffc1c4acaf8" refkind="member"><highlight class="normal">KnowledgeDatabase::KnowledgeDatabase()<sp/>:<sp/>prior_new_(0),<sp/>prior_existing_(0),<sp/>prior_clutter_(0)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classmhf_1_1KnowledgeDatabase_1aa865d7a37e1e7570bbb4870817893111" refkind="member"><highlight class="normal"><ref refid="classmhf_1_1KnowledgeDatabase_1aa865d7a37e1e7570bbb4870817893111" kindref="member">KnowledgeDatabase::~KnowledgeDatabase</ref>()<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">map&lt;string, ClassModel*&gt;::iterator</ref><sp/>it_model<sp/>=<sp/><ref refid="classmhf_1_1KnowledgeDatabase_1ab07ca9e97f1555648becb658bf3a1273" kindref="member">class_models_</ref>.begin();<sp/>it_model<sp/>!=<sp/><ref refid="classmhf_1_1KnowledgeDatabase_1ab07ca9e97f1555648becb658bf3a1273" kindref="member">class_models_</ref>.end();<sp/>++it_model)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>it_model-&gt;second;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classmhf_1_1KnowledgeDatabase_1a91c364a09544cd25127c1fdecfa81c21" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a91c364a09544cd25127c1fdecfa81c21" kindref="member">KnowledgeDatabase::addClassModel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>class_name,<sp/><ref refid="classmhf_1_1ClassModel" kindref="compound">ClassModel</ref>*<sp/>model)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmhf_1_1KnowledgeDatabase_1ab07ca9e97f1555648becb658bf3a1273" kindref="member">class_models_</ref>[class_name]<sp/>=<sp/>model;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classmhf_1_1KnowledgeDatabase_1aacce40026a7b354c37a30b3363d13e6f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1PropertySet" kindref="compound">PropertySet</ref>&amp;<sp/><ref refid="classmhf_1_1KnowledgeDatabase_1aacce40026a7b354c37a30b3363d13e6f" kindref="member">KnowledgeDatabase::getNewPDFs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>class_name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a517baf800b5c635f124c2c1ac88d66d4" kindref="member">getClassModel</ref>(class_name)-&gt;<ref refid="classmhf_1_1ClassModel_1a2d3e7ba84d444765250555a2adae6dc6" kindref="member">getNewPDFs</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classmhf_1_1KnowledgeDatabase_1a1778408f2b240623cef6816c271ff6c5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1PropertySet" kindref="compound">PropertySet</ref>&amp;<sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a1778408f2b240623cef6816c271ff6c5" kindref="member">KnowledgeDatabase::getClutterPDFs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>class_name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a517baf800b5c635f124c2c1ac88d66d4" kindref="member">getClassModel</ref>(class_name)-&gt;<ref refid="classmhf_1_1ClassModel_1a453b13df46c3e4d6ae65e2cd84cf0926" kindref="member">getClutterPDFs</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classmhf_1_1KnowledgeDatabase_1a2ac4a788e8c094ea795027417ffaa6b9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1IStateEstimator" kindref="compound">IStateEstimator</ref>*<sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a2ac4a788e8c094ea795027417ffaa6b9" kindref="member">KnowledgeDatabase::getEstimator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>class_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacemhf_1a94d490545a8f0a0d1669b99c8094de83" kindref="member">Attribute</ref>&amp;<sp/>attribute)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a517baf800b5c635f124c2c1ac88d66d4" kindref="member">getClassModel</ref>(class_name)-&gt;<ref refid="classmhf_1_1ClassModel_1a5620eaaca796b629adce9f6e107aa4c7" kindref="member">getEstimator</ref>(attribute);</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classmhf_1_1KnowledgeDatabase_1a22ea1f5ccd5e75441900d213499c4470" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::PMF</ref>&amp;<sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a22ea1f5ccd5e75441900d213499c4470" kindref="member">KnowledgeDatabase::getClassDistribution</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a507c045023cc87ed5fa0f0102417623a" kindref="member">class_pmf_</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classmhf_1_1KnowledgeDatabase_1a7b609b0650074331c426a1ea39309900" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a7b609b0650074331c426a1ea39309900" kindref="member">KnowledgeDatabase::setPriorNew</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prior_new)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a06486d483199d7f827f489e5b811ae79" kindref="member">prior_new_</ref><sp/>=<sp/>prior_new;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classmhf_1_1KnowledgeDatabase_1a1980f8a80e33739b29a3aaa35af67fc4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a1980f8a80e33739b29a3aaa35af67fc4" kindref="member">KnowledgeDatabase::setPriorExisting</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prior_existing)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmhf_1_1KnowledgeDatabase_1aa78d2f67e6e173799c818c4e8dc9eb9c" kindref="member">prior_existing_</ref><sp/>=<sp/>prior_existing;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classmhf_1_1KnowledgeDatabase_1af7a172df084132e46be8ac20d5c2668f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1KnowledgeDatabase_1af7a172df084132e46be8ac20d5c2668f" kindref="member">KnowledgeDatabase::setPriorClutter</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prior_clutter)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a6d3a4c49b6c8e078498093720d327e15" kindref="member">prior_clutter_</ref><sp/>=<sp/>prior_clutter;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classmhf_1_1KnowledgeDatabase_1a47df4a5101cbdeb4d95e3a1931a03dfe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a47df4a5101cbdeb4d95e3a1931a03dfe" kindref="member">KnowledgeDatabase::getPriorNew</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a06486d483199d7f827f489e5b811ae79" kindref="member">prior_new_</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classmhf_1_1KnowledgeDatabase_1a4545b68af6d3d9180133a51421b235ac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a4545b68af6d3d9180133a51421b235ac" kindref="member">KnowledgeDatabase::getPriorExisting</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1KnowledgeDatabase_1aa78d2f67e6e173799c818c4e8dc9eb9c" kindref="member">prior_existing_</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="classmhf_1_1KnowledgeDatabase_1a21a212a4e968b92e29952d925761173a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a21a212a4e968b92e29952d925761173a" kindref="member">KnowledgeDatabase::getPriorClutter</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a6d3a4c49b6c8e078498093720d327e15" kindref="member">prior_clutter_</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classmhf_1_1KnowledgeDatabase_1a6a5728cede339cd65ba0864c4d367d86" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map&lt;std::string, ClassModel*&gt;</ref>&amp;<sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a6a5728cede339cd65ba0864c4d367d86" kindref="member">KnowledgeDatabase::getClassModels</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1KnowledgeDatabase_1ab07ca9e97f1555648becb658bf3a1273" kindref="member">class_models_</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classmhf_1_1KnowledgeDatabase_1a517baf800b5c635f124c2c1ac88d66d4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1ClassModel" kindref="compound">ClassModel</ref>*<sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a517baf800b5c635f124c2c1ac88d66d4" kindref="member">KnowledgeDatabase::getClassModel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>class_name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">map&lt;string, ClassModel*&gt;::const_iterator</ref><sp/>it_model<sp/>=<sp/><ref refid="classmhf_1_1KnowledgeDatabase_1ab07ca9e97f1555648becb658bf3a1273" kindref="member">class_models_</ref>.find(class_name);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it_model<sp/>!=<sp/><ref refid="classmhf_1_1KnowledgeDatabase_1ab07ca9e97f1555648becb658bf3a1273" kindref="member">class_models_</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it_model-&gt;second;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>it_model<sp/>=<sp/><ref refid="classmhf_1_1KnowledgeDatabase_1ab07ca9e97f1555648becb658bf3a1273" kindref="member">class_models_</ref>.find(</highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(it_model<sp/>!=<sp/><ref refid="classmhf_1_1KnowledgeDatabase_1ab07ca9e97f1555648becb658bf3a1273" kindref="member">class_models_</ref>.end());</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it_model-&gt;second;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="classmhf_1_1KnowledgeDatabase_1a68f835b3359ddfd2f399bb7e0db164f7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a68f835b3359ddfd2f399bb7e0db164f7" kindref="member">KnowledgeDatabase::getProbabilityNew</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Evidence" kindref="compound">Evidence</ref>&amp;<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Property" kindref="compound">Property</ref>*<sp/>class_prop<sp/>=<sp/>z.<ref refid="classmhf_1_1PropertySet_1a68492e6fcecb403fe66ea208ccf0b1e5" kindref="member">getProperty</ref>(</highlight><highlight class="stringliteral">&quot;class_label&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>likelihood<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>total_prob<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_prop)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>information<sp/>about<sp/>the<sp/>class<sp/>distribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::PMF</ref>*<sp/>class_pmf<sp/>=<sp/><ref refid="namespacepbl_1adae6e0e6326569688c33e416335a57ca" kindref="member" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::PDFtoPMF</ref>(class_prop-&gt;<ref refid="classmhf_1_1Property_1a772a122ae9af465ca03e09ada865da3d" kindref="member">getValue</ref>());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">vector&lt;double&gt;</ref><sp/>class_probs;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_pmf-&gt;<ref refid="classpbl_1_1PMF_1a5b7ec442c0c4262eae8b6b41eb4e58ae" kindref="member" external="/home/docker/ros/noetic/system/build/docs/problib/tags">getProbabilities</ref>(class_probs);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">vector&lt;string&gt;</ref><sp/>class_names;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_pmf-&gt;<ref refid="classpbl_1_1PMF_1aca191ceb84ad368a898aad4c98fcacb2" kindref="member" external="/home/docker/ros/noetic/system/build/docs/problib/tags">getValues</ref>(class_names);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>likelihood<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>class_probs.<ref refid="cpp/container/vector/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1ClassModel" kindref="compound">ClassModel</ref>*<sp/>class_model<sp/>=<sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a517baf800b5c635f124c2c1ac88d66d4" kindref="member">getClassModel</ref>(class_names[i]);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_model)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>likelihood<sp/>+=<sp/>class_probs[i]<sp/>*<sp/>class_model-&gt;<ref refid="classmhf_1_1ClassModel_1a2d3e7ba84d444765250555a2adae6dc6" kindref="member">getNewPDFs</ref>().<ref refid="classmhf_1_1PropertySet_1aef097ba1817f7740d323f07bbc63fced" kindref="member">getLikelihood</ref>(z);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_prob<sp/>+=<sp/>class_probs[i];</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1ClassModel" kindref="compound">ClassModel</ref>*<sp/>default_model<sp/>=<sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a517baf800b5c635f124c2c1ac88d66d4" kindref="member">getClassModel</ref>(</highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(default_model<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>likelihood<sp/>+=<sp/>(1<sp/>-<sp/>total_prob)<sp/>*<sp/>default_model-&gt;<ref refid="classmhf_1_1ClassModel_1a2d3e7ba84d444765250555a2adae6dc6" kindref="member">getNewPDFs</ref>().<ref refid="classmhf_1_1PropertySet_1aef097ba1817f7740d323f07bbc63fced" kindref="member">getLikelihood</ref>(z);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_new<sp/>=<sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a47df4a5101cbdeb4d95e3a1931a03dfe" kindref="member">getPriorNew</ref>()<sp/>*<sp/>likelihood;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;p_new<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>getPriorNew()<sp/>&lt;&lt;<sp/>&quot;<sp/>*<sp/>&quot;<sp/>&lt;&lt;<sp/>likelihood<sp/>&lt;&lt;<sp/>&quot;<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>p_new<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_new;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="classmhf_1_1KnowledgeDatabase_1aa85c6453180c3351ecd96dbd250ba843" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1KnowledgeDatabase_1aa85c6453180c3351ecd96dbd250ba843" kindref="member">KnowledgeDatabase::getProbabilityClutter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Evidence" kindref="compound">Evidence</ref>&amp;<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Property" kindref="compound">Property</ref>*<sp/>class_prop<sp/>=<sp/>z.<ref refid="classmhf_1_1PropertySet_1a68492e6fcecb403fe66ea208ccf0b1e5" kindref="member">getProperty</ref>(</highlight><highlight class="stringliteral">&quot;class_label&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>likelihood<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>total_prob<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_prop)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>information<sp/>about<sp/>the<sp/>class<sp/>distribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::PMF</ref>*<sp/>class_pmf<sp/>=<sp/><ref refid="namespacepbl_1adae6e0e6326569688c33e416335a57ca" kindref="member" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::PDFtoPMF</ref>(class_prop-&gt;<ref refid="classmhf_1_1Property_1a772a122ae9af465ca03e09ada865da3d" kindref="member">getValue</ref>());</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">vector&lt;double&gt;</ref><sp/>class_probs;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_pmf-&gt;<ref refid="classpbl_1_1PMF_1a5b7ec442c0c4262eae8b6b41eb4e58ae" kindref="member" external="/home/docker/ros/noetic/system/build/docs/problib/tags">getProbabilities</ref>(class_probs);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">vector&lt;string&gt;</ref><sp/>class_names;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_pmf-&gt;<ref refid="classpbl_1_1PMF_1aca191ceb84ad368a898aad4c98fcacb2" kindref="member" external="/home/docker/ros/noetic/system/build/docs/problib/tags">getValues</ref>(class_names);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>likelihood<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>class_probs.<ref refid="cpp/container/vector/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1ClassModel" kindref="compound">ClassModel</ref>*<sp/>class_model<sp/>=<sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a517baf800b5c635f124c2c1ac88d66d4" kindref="member">getClassModel</ref>(class_names[i]);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_model)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>likelihood<sp/>+=<sp/>class_probs[i]<sp/>*<sp/>class_model-&gt;<ref refid="classmhf_1_1ClassModel_1a453b13df46c3e4d6ae65e2cd84cf0926" kindref="member">getClutterPDFs</ref>().<ref refid="classmhf_1_1PropertySet_1aef097ba1817f7740d323f07bbc63fced" kindref="member">getLikelihood</ref>(z);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_prob<sp/>+=<sp/>class_probs[i];</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1ClassModel" kindref="compound">ClassModel</ref>*<sp/>default_model<sp/>=<sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a517baf800b5c635f124c2c1ac88d66d4" kindref="member">getClassModel</ref>(</highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(default_model<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>likelihood<sp/>+=<sp/>(1<sp/>-<sp/>total_prob)<sp/>*<sp/>default_model-&gt;<ref refid="classmhf_1_1ClassModel_1a453b13df46c3e4d6ae65e2cd84cf0926" kindref="member">getClutterPDFs</ref>().<ref refid="classmhf_1_1PropertySet_1aef097ba1817f7740d323f07bbc63fced" kindref="member">getLikelihood</ref>(z);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_clutter<sp/>=<sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a21a212a4e968b92e29952d925761173a" kindref="member">getPriorClutter</ref>()<sp/>*<sp/>likelihood;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;p_new<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>getPriorNew()<sp/>&lt;&lt;<sp/>&quot;<sp/>*<sp/>&quot;<sp/>&lt;&lt;<sp/>likelihood<sp/>&lt;&lt;<sp/>&quot;<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>p_new<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_clutter;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="classmhf_1_1KnowledgeDatabase_1ab795cd19730f78ca693a016810bd34d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1KnowledgeDatabase_1ab795cd19730f78ca693a016810bd34d0" kindref="member">KnowledgeDatabase::getProbabilityExisting</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Evidence" kindref="compound">Evidence</ref>&amp;<sp/>z,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1SemanticObject" kindref="compound">SemanticObject</ref>&amp;<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>prior<sp/>(prior<sp/>probability<sp/>that<sp/>target<sp/>generates<sp/>a<sp/>detection)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prior<sp/>=<sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a4545b68af6d3d9180133a51421b235ac" kindref="member">getPriorExisting</ref>();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>likelihood<sp/>(likelihood<sp/>that<sp/>measurements<sp/>originates<sp/>from<sp/>the<sp/>target)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>likelihood<sp/>=<sp/>obj.<ref refid="classmhf_1_1SemanticObject_1a81143bd9dc2492e3d1d0a2c480c379b1" kindref="member">getLikelihood</ref>(z);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;p_existing<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>prior<sp/>&lt;&lt;<sp/>&quot;<sp/>*<sp/>&quot;<sp/>&lt;&lt;<sp/>likelihood<sp/>&lt;&lt;<sp/>&quot;<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>prior<sp/>*<sp/>likelihood<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prior<sp/>*<sp/>likelihood;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="classmhf_1_1KnowledgeDatabase_1aaccce5dfd5239c9e6df78003e656743d" refkind="member"><highlight class="normal"><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">vector&lt;Property&gt;</ref><sp/><ref refid="classmhf_1_1KnowledgeDatabase_1aaccce5dfd5239c9e6df78003e656743d" kindref="member">KnowledgeDatabase::inferProperties</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1PropertySet" kindref="compound">PropertySet</ref>&amp;<sp/>prop_set,<sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">vector&lt;Attribute&gt;</ref><sp/>attribs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Property" kindref="compound">Property</ref>*<sp/>class_prop<sp/>=<sp/>prop_set.<ref refid="classmhf_1_1PropertySet_1a68492e6fcecb403fe66ea208ccf0b1e5" kindref="member">getProperty</ref>(</highlight><highlight class="stringliteral">&quot;class_label&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1ClassModel" kindref="compound">ClassModel</ref>*<sp/>most_prob_class_model<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_prop)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>most_prob_class;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_prop-&gt;<ref refid="classmhf_1_1Property_1a772a122ae9af465ca03e09ada865da3d" kindref="member">getValue</ref>().<ref refid="classpbl_1_1PDF_1aa7a2f5f2fb44600508e42a981fdb05a8" kindref="member" external="/home/docker/ros/noetic/system/build/docs/problib/tags">getExpectedValue</ref>(most_prob_class);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>most_prob_class_model<sp/>=<sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a517baf800b5c635f124c2c1ac88d66d4" kindref="member">getClassModel</ref>(most_prob_class);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>most_prob_class_model<sp/>=<sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a517baf800b5c635f124c2c1ac88d66d4" kindref="member">getClassModel</ref>(</highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">vector&lt;Property&gt;</ref><sp/>inferred_props;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">vector&lt;Attribute&gt;::iterator</ref><sp/>it_att<sp/>=<sp/>attribs.<ref refid="cpp/container/vector/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>();<sp/>it_att<sp/>!=<sp/>attribs.<ref refid="cpp/container/vector/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>();<sp/>++it_att)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Property" kindref="compound">Property</ref>*<sp/>prop<sp/>=<sp/>most_prob_class_model-&gt;<ref refid="classmhf_1_1ClassModel_1a2d3e7ba84d444765250555a2adae6dc6" kindref="member">getNewPDFs</ref>().<ref refid="classmhf_1_1PropertySet_1a68492e6fcecb403fe66ea208ccf0b1e5" kindref="member">getProperty</ref>(*it_att);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(prop);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inferred_props.<ref refid="cpp/container/vector/push_back" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">push_back</ref>(*prop);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inferred_props;</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/storage/KnowledgeDatabase.cpp"/>
  </compounddef>
</doxygen>
