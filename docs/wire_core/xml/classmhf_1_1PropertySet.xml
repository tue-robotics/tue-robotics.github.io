<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classmhf_1_1PropertySet" kind="class" language="C++" prot="public">
    <compoundname>mhf::PropertySet</compoundname>
    <basecompoundref refid="classmhf_1_1IStateEstimator" prot="public" virt="non-virtual">mhf::IStateEstimator</basecompoundref>
    <derivedcompoundref refid="classmhf_1_1Evidence" prot="public" virt="non-virtual">mhf::Evidence</derivedcompoundref>
    <derivedcompoundref refid="classmhf_1_1SemanticObject" prot="public" virt="non-virtual">mhf::SemanticObject</derivedcompoundref>
    <includes refid="PropertySet_8h" local="no">PropertySet.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classmhf_1_1PropertySet_1a89f2b2f75e035afa19acdfd68565ce77" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int mhf::PropertySet::N_PROPERTY_SET</definition>
        <argsstring></argsstring>
        <name>N_PROPERTY_SET</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/PropertySet.h" line="16" column="16" bodyfile="include/wire/core/PropertySet.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classmhf_1_1PropertySet_1acee1dec2c27aa6a6cb7efa7b001ec421" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacemhf_1ae209e58ac587543af50a25222aeda18e" kindref="member">Time</ref></type>
        <definition>Time mhf::PropertySet::timestamp_</definition>
        <argsstring></argsstring>
        <name>timestamp_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/PropertySet.h" line="54" column="10" bodyfile="include/wire/core/PropertySet.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmhf_1_1PropertySet_1abf50fe7bb7aaafa25001662af44f82b5" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="namespacemhf_1a94d490545a8f0a0d1669b99c8094de83" kindref="member">Attribute</ref>, <ref refid="classmhf_1_1Property" kindref="compound">Property</ref> * &gt;</type>
        <definition>std::map&lt;Attribute, Property*&gt; mhf::PropertySet::properties_</definition>
        <argsstring></argsstring>
        <name>properties_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/PropertySet.h" line="62" column="14" bodyfile="include/wire/core/PropertySet.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmhf_1_1PropertySet_1a55ff76298cdce1010cab95504f1622e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mhf::PropertySet::addProperty</definition>
        <argsstring>(const Attribute &amp;attribute, const IStateEstimator &amp;estimator)</argsstring>
        <name>addProperty</name>
        <param>
          <type>const <ref refid="namespacemhf_1a94d490545a8f0a0d1669b99c8094de83" kindref="member">Attribute</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>const <ref refid="classmhf_1_1IStateEstimator" kindref="compound">IStateEstimator</ref> &amp;</type>
          <declname>estimator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/PropertySet.h" line="30" column="10" bodyfile="src/core/PropertySet.cpp" bodystart="54" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1PropertySet_1a873cfcb7c51cea17521c03424f6aa55c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mhf::PropertySet::addProperty</definition>
        <argsstring>(const Attribute &amp;attribute, const pbl::PDF &amp;value)</argsstring>
        <name>addProperty</name>
        <param>
          <type>const <ref refid="namespacemhf_1a94d490545a8f0a0d1669b99c8094de83" kindref="member">Attribute</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>const <ref refid="classpbl_1_1PDF" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::PDF</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/PropertySet.h" line="26" column="10" bodyfile="src/core/PropertySet.cpp" bodystart="40" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1PropertySet_1a87c3a7d1b46bcf3398c7b3b649bc3ccb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mhf::PropertySet::addProperty</definition>
        <argsstring>(const std::string &amp;attribute, const pbl::PDF &amp;value)</argsstring>
        <name>addProperty</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>const <ref refid="classpbl_1_1PDF" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::PDF</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/PropertySet.h" line="28" column="10" bodyfile="src/core/PropertySet.cpp" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1PropertySet_1ab6405f800f9a8b1b75c33d273e735289" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classmhf_1_1PropertySet" kindref="compound">PropertySet</ref> *</type>
        <definition>PropertySet * mhf::PropertySet::clone</definition>
        <argsstring>() const</argsstring>
        <name>clone</name>
        <reimplements refid="classmhf_1_1IStateEstimator_1a10ab7cd2f9ee963ff8eb0f5182a32904">clone</reimplements>
        <reimplementedby refid="classmhf_1_1SemanticObject_1a517066aa0aaf9effaf3c1299f6e44195">clone</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/PropertySet.h" line="24" column="17" bodyfile="src/core/PropertySet.cpp" bodystart="36" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1PropertySet_1aef097ba1817f7740d323f07bbc63fced" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double mhf::PropertySet::getLikelihood</definition>
        <argsstring>(const PropertySet &amp;P) const</argsstring>
        <name>getLikelihood</name>
        <reimplementedby refid="classmhf_1_1SemanticObject_1a81143bd9dc2492e3d1d0a2c480c379b1">getLikelihood</reimplementedby>
        <param>
          <type>const <ref refid="classmhf_1_1PropertySet" kindref="compound">PropertySet</ref> &amp;</type>
          <declname>P</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/PropertySet.h" line="44" column="20" bodyfile="src/core/PropertySet.cpp" bodystart="120" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1PropertySet_1a68492e6fcecb403fe66ea208ccf0b1e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmhf_1_1Property" kindref="compound">Property</ref> *</type>
        <definition>const Property * mhf::PropertySet::getProperty</definition>
        <argsstring>(const Attribute &amp;attribute) const</argsstring>
        <name>getProperty</name>
        <param>
          <type>const <ref refid="namespacemhf_1a94d490545a8f0a0d1669b99c8094de83" kindref="member">Attribute</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/PropertySet.h" line="32" column="20" bodyfile="src/core/PropertySet.cpp" bodystart="74" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1PropertySet_1a5477d5168ee9cd4eb57788e760ba925a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmhf_1_1Property" kindref="compound">Property</ref> *</type>
        <definition>const Property * mhf::PropertySet::getProperty</definition>
        <argsstring>(const std::string &amp;attribute) const</argsstring>
        <name>getProperty</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/PropertySet.h" line="34" column="20" bodyfile="src/core/PropertySet.cpp" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1PropertySet_1a51d383aa8d68636ad95b4948e63f03d8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="namespacemhf_1a94d490545a8f0a0d1669b99c8094de83" kindref="member">Attribute</ref>, <ref refid="classmhf_1_1Property" kindref="compound">Property</ref> * &gt; &amp;</type>
        <definition>const std::map&lt; Attribute, Property * &gt; &amp; mhf::PropertySet::getPropertyMap</definition>
        <argsstring>() const</argsstring>
        <name>getPropertyMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/PropertySet.h" line="46" column="20" bodyfile="src/core/PropertySet.cpp" bodystart="161" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1PropertySet_1a0a51af07afba18e052bba54fa7ce9fc4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacemhf_1ae209e58ac587543af50a25222aeda18e" kindref="member">Time</ref></type>
        <definition>Time mhf::PropertySet::getTimestamp</definition>
        <argsstring>() const</argsstring>
        <name>getTimestamp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/PropertySet.h" line="48" column="10" bodyfile="src/core/PropertySet.cpp" bodystart="165" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1PropertySet_1a1a1fded058a4c404476548024a45942b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classpbl_1_1PDF" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::PDF</ref> &amp;</type>
        <definition>const pbl::PDF &amp; mhf::PropertySet::getValue</definition>
        <argsstring>() const</argsstring>
        <name>getValue</name>
        <reimplements refid="classmhf_1_1IStateEstimator_1aadaf2529f2619c59f6ebc8915f04bb11">getValue</reimplements>
        <briefdescription>
<para>Returns the current estimated state value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current state, i.e., the current attribute value represented as probability density function </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/PropertySet.h" line="42" column="20" bodyfile="src/core/PropertySet.cpp" bodystart="116" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1PropertySet_1a31fd08eaacea40e59fad77aad81f94c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mhf::PropertySet::propagate</definition>
        <argsstring>(const Time &amp;time)</argsstring>
        <name>propagate</name>
        <reimplements refid="classmhf_1_1IStateEstimator_1ae93bd3b893053fb1660b12eb41c4cae6">propagate</reimplements>
        <param>
          <type>const <ref refid="namespacemhf_1ae209e58ac587543af50a25222aeda18e" kindref="member">Time</ref> &amp;</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Propagates the internal state to Time time. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The time to which the internal state is propagated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/PropertySet.h" line="36" column="10" bodyfile="src/core/PropertySet.cpp" bodystart="94" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1PropertySet_1a1b16cf3a8c7ef206b38a7d56128b0722" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mhf::PropertySet::PropertySet</definition>
        <argsstring>(const PropertySet &amp;orig)</argsstring>
        <name>PropertySet</name>
        <param>
          <type>const <ref refid="classmhf_1_1PropertySet" kindref="compound">PropertySet</ref> &amp;</type>
          <declname>orig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/PropertySet.h" line="20" column="5" bodyfile="src/core/PropertySet.cpp" bodystart="30" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1PropertySet_1a1387cd705e3243201fa2c439c322bb43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mhf::PropertySet::PropertySet</definition>
        <argsstring>(Time timestamp=0)</argsstring>
        <name>PropertySet</name>
        <param>
          <type><ref refid="namespacemhf_1ae209e58ac587543af50a25222aeda18e" kindref="member">Time</ref></type>
          <declname>timestamp</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/PropertySet.h" line="18" column="5" bodyfile="src/core/PropertySet.cpp" bodystart="18" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1PropertySet_1a8203bd2b5a70dda771ee927b4eeb22d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mhf::PropertySet::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <reimplements refid="classmhf_1_1IStateEstimator_1aca0803c04a17469a27334b6e6089eaeb">reset</reimplements>
        <briefdescription>
<para>Resets the internal state of the estimator to its initial value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/PropertySet.h" line="40" column="10" bodyfile="src/core/PropertySet.cpp" bodystart="110" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1PropertySet_1a18bdc8c1fb3c364f317fa2eaf7992c24" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>std::string mhf::PropertySet::toString</definition>
        <argsstring>() const</argsstring>
        <name>toString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/PropertySet.h" line="50" column="17" bodyfile="src/core/PropertySet.cpp" bodystart="169" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1PropertySet_1a86d428bd5396d1087c59ebfe8ffdc912" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mhf::PropertySet::update</definition>
        <argsstring>(const pbl::PDF &amp;z, const Time &amp;time)</argsstring>
        <name>update</name>
        <reimplements refid="classmhf_1_1IStateEstimator_1ab649cec130ec1be64cf8c64d607ec418">update</reimplements>
        <param>
          <type>const <ref refid="classpbl_1_1PDF" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::PDF</ref> &amp;</type>
          <declname>z</declname>
        </param>
        <param>
          <type>const <ref refid="namespacemhf_1ae209e58ac587543af50a25222aeda18e" kindref="member">Time</ref> &amp;</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Updates the internal state based on measurement z. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The measurement with which to update, represented as a probability density function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The time to which the internal state is propagated before updating </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/PropertySet.h" line="38" column="10" bodyfile="src/core/PropertySet.cpp" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1PropertySet_1a7f8cdd09619fcffcbc186d2fdc88f108" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>mhf::PropertySet::~PropertySet</definition>
        <argsstring>()</argsstring>
        <name>~PropertySet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/PropertySet.h" line="22" column="13" bodyfile="src/core/PropertySet.cpp" bodystart="22" bodyend="28"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classmhf_1_1PropertySet_1a670e88a0eee1d5a3005d46e2287fd589" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mhf::PropertySet::addProperty</definition>
        <argsstring>(Property *property)</argsstring>
        <name>addProperty</name>
        <param>
          <type><ref refid="classmhf_1_1Property" kindref="compound">Property</ref> *</type>
          <declname>property</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/PropertySet.h" line="56" column="10" bodyfile="src/core/PropertySet.cpp" bodystart="64" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1PropertySet_1a09aa142104285acc7249681574721d09" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmhf_1_1Property" kindref="compound">Property</ref> *</type>
        <definition>Property * mhf::PropertySet::getProperty</definition>
        <argsstring>(const Attribute &amp;attribute)</argsstring>
        <name>getProperty</name>
        <param>
          <type>const <ref refid="namespacemhf_1a94d490545a8f0a0d1669b99c8094de83" kindref="member">Attribute</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/PropertySet.h" line="58" column="14" bodyfile="src/core/PropertySet.cpp" bodystart="82" bodyend="88"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>mhf::SemanticObject</label>
        <link refid="classmhf_1_1SemanticObject"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>mhf::IStateEstimator</label>
        <link refid="classmhf_1_1IStateEstimator"/>
      </node>
      <node id="3">
        <label>mhf::Evidence</label>
        <link refid="classmhf_1_1Evidence"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>mhf::PropertySet</label>
        <link refid="classmhf_1_1PropertySet"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>mhf::IStateEstimator</label>
        <link refid="classmhf_1_1IStateEstimator"/>
      </node>
      <node id="3">
        <label>std::map&lt; Attribute, mhf::Property * &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="1">
        <label>mhf::PropertySet</label>
        <link refid="classmhf_1_1PropertySet"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>properties_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/wire/core/PropertySet.h" line="13" column="41" bodyfile="include/wire/core/PropertySet.h" bodystart="13" bodyend="64"/>
    <listofallmembers>
      <member refid="classmhf_1_1PropertySet_1a873cfcb7c51cea17521c03424f6aa55c" prot="public" virt="non-virtual"><scope>mhf::PropertySet</scope><name>addProperty</name></member>
      <member refid="classmhf_1_1PropertySet_1a87c3a7d1b46bcf3398c7b3b649bc3ccb" prot="public" virt="non-virtual"><scope>mhf::PropertySet</scope><name>addProperty</name></member>
      <member refid="classmhf_1_1PropertySet_1a55ff76298cdce1010cab95504f1622e7" prot="public" virt="non-virtual"><scope>mhf::PropertySet</scope><name>addProperty</name></member>
      <member refid="classmhf_1_1PropertySet_1a670e88a0eee1d5a3005d46e2287fd589" prot="protected" virt="non-virtual"><scope>mhf::PropertySet</scope><name>addProperty</name></member>
      <member refid="classmhf_1_1PropertySet_1ab6405f800f9a8b1b75c33d273e735289" prot="public" virt="virtual"><scope>mhf::PropertySet</scope><name>clone</name></member>
      <member refid="classmhf_1_1PropertySet_1aef097ba1817f7740d323f07bbc63fced" prot="public" virt="virtual"><scope>mhf::PropertySet</scope><name>getLikelihood</name></member>
      <member refid="classmhf_1_1PropertySet_1a68492e6fcecb403fe66ea208ccf0b1e5" prot="public" virt="non-virtual"><scope>mhf::PropertySet</scope><name>getProperty</name></member>
      <member refid="classmhf_1_1PropertySet_1a5477d5168ee9cd4eb57788e760ba925a" prot="public" virt="non-virtual"><scope>mhf::PropertySet</scope><name>getProperty</name></member>
      <member refid="classmhf_1_1PropertySet_1a09aa142104285acc7249681574721d09" prot="protected" virt="non-virtual"><scope>mhf::PropertySet</scope><name>getProperty</name></member>
      <member refid="classmhf_1_1PropertySet_1a51d383aa8d68636ad95b4948e63f03d8" prot="public" virt="non-virtual"><scope>mhf::PropertySet</scope><name>getPropertyMap</name></member>
      <member refid="classmhf_1_1PropertySet_1a0a51af07afba18e052bba54fa7ce9fc4" prot="public" virt="non-virtual"><scope>mhf::PropertySet</scope><name>getTimestamp</name></member>
      <member refid="classmhf_1_1PropertySet_1a1a1fded058a4c404476548024a45942b" prot="public" virt="virtual"><scope>mhf::PropertySet</scope><name>getValue</name></member>
      <member refid="classmhf_1_1PropertySet_1a89f2b2f75e035afa19acdfd68565ce77" prot="public" virt="non-virtual"><scope>mhf::PropertySet</scope><name>N_PROPERTY_SET</name></member>
      <member refid="classmhf_1_1PropertySet_1a31fd08eaacea40e59fad77aad81f94c0" prot="public" virt="virtual"><scope>mhf::PropertySet</scope><name>propagate</name></member>
      <member refid="classmhf_1_1PropertySet_1abf50fe7bb7aaafa25001662af44f82b5" prot="private" virt="non-virtual"><scope>mhf::PropertySet</scope><name>properties_</name></member>
      <member refid="classmhf_1_1PropertySet_1a1387cd705e3243201fa2c439c322bb43" prot="public" virt="non-virtual"><scope>mhf::PropertySet</scope><name>PropertySet</name></member>
      <member refid="classmhf_1_1PropertySet_1a1b16cf3a8c7ef206b38a7d56128b0722" prot="public" virt="non-virtual"><scope>mhf::PropertySet</scope><name>PropertySet</name></member>
      <member refid="classmhf_1_1PropertySet_1a8203bd2b5a70dda771ee927b4eeb22d7" prot="public" virt="virtual"><scope>mhf::PropertySet</scope><name>reset</name></member>
      <member refid="classmhf_1_1IStateEstimator_1a265a58f62f73731a85179ab4f465aa0a" prot="public" virt="virtual"><scope>mhf::PropertySet</scope><name>setParameter</name></member>
      <member refid="classmhf_1_1IStateEstimator_1aea2e3fa3e7ee39155e556262abb086c7" prot="public" virt="virtual"><scope>mhf::PropertySet</scope><name>setParameter</name></member>
      <member refid="classmhf_1_1IStateEstimator_1ab2e657eef008c37181cb650b14692f4f" prot="public" virt="virtual"><scope>mhf::PropertySet</scope><name>setParameter</name></member>
      <member refid="classmhf_1_1PropertySet_1acee1dec2c27aa6a6cb7efa7b001ec421" prot="protected" virt="non-virtual"><scope>mhf::PropertySet</scope><name>timestamp_</name></member>
      <member refid="classmhf_1_1PropertySet_1a18bdc8c1fb3c364f317fa2eaf7992c24" prot="public" virt="non-virtual"><scope>mhf::PropertySet</scope><name>toString</name></member>
      <member refid="classmhf_1_1PropertySet_1a86d428bd5396d1087c59ebfe8ffdc912" prot="public" virt="virtual"><scope>mhf::PropertySet</scope><name>update</name></member>
      <member refid="classmhf_1_1IStateEstimator_1a368b89d4307185f95a45c50d19fdb4e8" prot="public" virt="virtual"><scope>mhf::PropertySet</scope><name>~IStateEstimator</name></member>
      <member refid="classmhf_1_1PropertySet_1a7f8cdd09619fcffcbc186d2fdc88f108" prot="public" virt="virtual"><scope>mhf::PropertySet</scope><name>~PropertySet</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
