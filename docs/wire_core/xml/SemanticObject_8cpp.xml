<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="SemanticObject_8cpp" kind="file" language="C++">
    <compoundname>SemanticObject.cpp</compoundname>
    <includes refid="SemanticObject_8h" local="yes">wire/storage/SemanticObject.h</includes>
    <includes refid="KnowledgeDatabase_8h" local="yes">wire/storage/KnowledgeDatabase.h</includes>
    <includes refid="Evidence_8h" local="yes">wire/core/Evidence.h</includes>
    <includes refid="ClassModel_8h" local="yes">wire/core/ClassModel.h</includes>
    <includes refid="Property_8h" local="yes">wire/core/Property.h</includes>
    <includes refid="Assignment_8h" local="yes">wire/logic/Assignment.h</includes>
    <includes refid="Hypothesis_8h" local="yes">wire/logic/Hypothesis.h</includes>
    <includes local="no">problib/conversions.h</includes>
    <incdepgraph>
      <node id="16">
        <label>wire/logic/Hypothesis.h</label>
        <link refid="Hypothesis_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>list</label>
        <link refid="cpp/header/list" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="17">
        <label>problib/conversions.h</label>
        <link refid="conversions_8h.html" external="/home/docker/ros/noetic/system/build/docs/problib/tags"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>wire/core/ClassModel.h</label>
        <link refid="ClassModel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>problib/pdfs/PMF.h</label>
        <link refid="PMF_8h.html" external="/home/docker/ros/noetic/system/build/docs/problib/tags"/>
      </node>
      <node id="2">
        <label>wire/storage/SemanticObject.h</label>
        <link refid="SemanticObject_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>map</label>
        <link refid="cpp/header/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="7">
        <label>wire/core/IStateEstimator.h</label>
        <link refid="IStateEstimator_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>wire/core/Property.h</label>
        <link refid="Property_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>SemanticObject.cpp</label>
        <link refid="SemanticObject_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>wire/storage/KnowledgeDatabase.h</label>
        <link refid="KnowledgeDatabase_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>wire/core/Evidence.h</label>
        <link refid="Evidence_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>string</label>
        <link refid="cpp/header/string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="15">
        <label>wire/logic/Assignment.h</label>
        <link refid="Assignment_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>problib/pdfs/PDF.h</label>
        <link refid="PDF_8h.html" external="/home/docker/ros/noetic/system/build/docs/problib/tags"/>
      </node>
      <node id="3">
        <label>wire/core/PropertySet.h</label>
        <link refid="PropertySet_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>wire/core/datatypes.h</label>
        <link refid="datatypes_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacemhf">mhf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>MyObject.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>Apr<sp/>27,<sp/>2011</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>sdries</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="SemanticObject_8h" kindref="compound">wire/storage/SemanticObject.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="KnowledgeDatabase_8h" kindref="compound">wire/storage/KnowledgeDatabase.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Evidence_8h" kindref="compound">wire/core/Evidence.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ClassModel_8h" kindref="compound">wire/core/ClassModel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Property_8h" kindref="compound">wire/core/Property.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Assignment_8h" kindref="compound">wire/logic/Assignment.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Hypothesis_8h" kindref="compound">wire/logic/Hypothesis.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="conversions_8h.html" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">problib/conversions.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemhf" kindref="compound">mhf</ref><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SemanticObject::N_SEMANTICOBJECT<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classmhf_1_1SemanticObject_1a1f24433631f3f966e45b180df95cc52c" refkind="member"><highlight class="normal">SemanticObject::SemanticObject(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ID)<sp/>:<sp/>ID_(ID),<sp/>expected_class_(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="classmhf_1_1SemanticObject_1a630094f19120ddf9afdd71ce7424ef40" kindref="member">N_SEMANTICOBJECT</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classmhf_1_1SemanticObject_1ae8587f1e1aa84aa9407ec77baf11cd87" refkind="member"><highlight class="normal"><ref refid="classmhf_1_1SemanticObject_1a1f24433631f3f966e45b180df95cc52c" kindref="member">SemanticObject::SemanticObject</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1SemanticObject" kindref="compound">SemanticObject</ref>&amp;<sp/>orig)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classmhf_1_1PropertySet" kindref="compound">PropertySet</ref>(orig),<sp/>ID_(orig.ID_),<sp/>expected_class_(orig.expected_class_)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="classmhf_1_1SemanticObject_1a630094f19120ddf9afdd71ce7424ef40" kindref="member">N_SEMANTICOBJECT</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classmhf_1_1SemanticObject_1a6edc6b05e13373f319f2e7a9338e2467" refkind="member"><highlight class="normal"><ref refid="classmhf_1_1SemanticObject_1a6edc6b05e13373f319f2e7a9338e2467" kindref="member">SemanticObject::~SemanticObject</ref>()<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>--<ref refid="classmhf_1_1SemanticObject_1a630094f19120ddf9afdd71ce7424ef40" kindref="member">N_SEMANTICOBJECT</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classmhf_1_1SemanticObject_1a76c95b800e4ea59e0c63d09fb0ee9fbc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1SemanticObject_1a76c95b800e4ea59e0c63d09fb0ee9fbc" kindref="member">SemanticObject::init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Evidence" kindref="compound">Evidence</ref>&amp;<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmhf_1_1SemanticObject_1a861b250812192e500a7ea1a079db1505" kindref="member">update</ref>(z);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classmhf_1_1SemanticObject_1a81143bd9dc2492e3d1d0a2c480c379b1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1SemanticObject_1a81143bd9dc2492e3d1d0a2c480c379b1" kindref="member">SemanticObject::getLikelihood</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1PropertySet" kindref="compound">PropertySet</ref>&amp;<sp/>ev)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//propagate(ev.getTimeStamp());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>likelihood<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">vector&lt;Attribute&gt;</ref><sp/>need_to_deduce;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">map&lt;Attribute, Property*&gt;</ref>&amp;<sp/>ev_props<sp/>=<sp/>ev.<ref refid="classmhf_1_1PropertySet_1a51d383aa8d68636ad95b4948e63f03d8" kindref="member">getPropertyMap</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">map&lt;Attribute, Property*&gt;::const_iterator</ref><sp/>it<sp/>=<sp/>ev_props.<ref refid="cpp/container/map/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>();<sp/>it<sp/>!=<sp/>ev_props.<ref refid="cpp/container/map/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacemhf_1a94d490545a8f0a0d1669b99c8094de83" kindref="member">Attribute</ref>&amp;<sp/>attribute<sp/>=<sp/>it-&gt;first;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Property" kindref="compound">Property</ref>*<sp/>ev_prop<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Property" kindref="compound">Property</ref>*<sp/>this_prop<sp/>=<sp/><ref refid="classmhf_1_1PropertySet_1a68492e6fcecb403fe66ea208ccf0b1e5" kindref="member">getProperty</ref>(attribute);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this_prop)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>likelihood<sp/>*=<sp/>this_prop-&gt;<ref refid="classmhf_1_1Property_1a5bddbfe4673902b9006f48af4d6b0a1c" kindref="member">getLikelihood</ref>(ev_prop-&gt;<ref refid="classmhf_1_1Property_1a772a122ae9af465ca03e09ada865da3d" kindref="member">getValue</ref>());</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>need_to_deduce.<ref refid="cpp/container/vector/push_back" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">push_back</ref>(attribute);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">vector&lt;Property&gt;</ref><sp/>deduced_props<sp/>=<sp/><ref refid="classmhf_1_1KnowledgeDatabase_1a95b7a82ae3f837ad5d1a926e711f939b" kindref="member">KnowledgeDatabase::getInstance</ref>().<ref refid="classmhf_1_1KnowledgeDatabase_1aaccce5dfd5239c9e6df78003e656743d" kindref="member">inferProperties</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>need_to_deduce);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">vector&lt;Property&gt;::iterator</ref><sp/>it_prop<sp/>=<sp/>deduced_props.<ref refid="cpp/container/vector/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>();<sp/>it_prop<sp/>!=<sp/>deduced_props.<ref refid="cpp/container/vector/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>();<sp/>++it_prop)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Property" kindref="compound">Property</ref>*<sp/>ev_prop<sp/>=<sp/>ev.<ref refid="classmhf_1_1PropertySet_1a68492e6fcecb403fe66ea208ccf0b1e5" kindref="member">getProperty</ref>(it_prop-&gt;getAttribute());</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ev_prop);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>likelihood<sp/>*=<sp/>it_prop-&gt;getLikelihood(ev_prop-&gt;<ref refid="classmhf_1_1Property_1a772a122ae9af465ca03e09ada865da3d" kindref="member">getValue</ref>());</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/><sp/><sp/>Likelihood<sp/>existing<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>likelihood<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>likelihood;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classmhf_1_1SemanticObject_1a861b250812192e500a7ea1a079db1505" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1SemanticObject_1a861b250812192e500a7ea1a079db1505" kindref="member">SemanticObject::update</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Evidence" kindref="compound">Evidence</ref>&amp;<sp/>ev)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmhf_1_1PropertySet_1a31fd08eaacea40e59fad77aad81f94c0" kindref="member">propagate</ref>(ev.<ref refid="classmhf_1_1PropertySet_1a0a51af07afba18e052bba54fa7ce9fc4" kindref="member">getTimestamp</ref>());</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>update<sp/>class<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemhf_1a94d490545a8f0a0d1669b99c8094de83" kindref="member">Attribute</ref><sp/>class_att<sp/>=<sp/><ref refid="classmhf_1_1AttributeConv_1a0dc9d14b0d90ebdb8ec6ef8a77efa32f" kindref="member">AttributeConv::attribute</ref>(</highlight><highlight class="stringliteral">&quot;class_label&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Property" kindref="compound">Property</ref>*<sp/>ev_class<sp/>=<sp/>ev.<ref refid="classmhf_1_1PropertySet_1a68492e6fcecb403fe66ea208ccf0b1e5" kindref="member">getProperty</ref>(class_att);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ev_class)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmhf_1_1Property" kindref="compound">Property</ref>*<sp/>my_class<sp/>=<sp/><ref refid="classmhf_1_1PropertySet_1a68492e6fcecb403fe66ea208ccf0b1e5" kindref="member">getProperty</ref>(class_att);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(my_class)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>my_class-&gt;<ref refid="classmhf_1_1Property_1a936039a90cbd5f9f916f747bc59a4ee9" kindref="member">update</ref>(ev_class-&gt;<ref refid="classmhf_1_1Property_1a772a122ae9af465ca03e09ada865da3d" kindref="member">getValue</ref>(),<sp/>ev.<ref refid="classmhf_1_1PropertySet_1a0a51af07afba18e052bba54fa7ce9fc4" kindref="member">getTimestamp</ref>());</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1IStateEstimator" kindref="compound">IStateEstimator</ref>*<sp/>prototype<sp/>=<sp/><ref refid="classmhf_1_1SemanticObject_1a7cc05c17ef27f34e2e1db7177737fb78" kindref="member">getExpectedObjectModel</ref>().<ref refid="classmhf_1_1ClassModel_1a5620eaaca796b629adce9f6e107aa4c7" kindref="member">getEstimator</ref>(class_att);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prototype)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmhf_1_1Property" kindref="compound">Property</ref>*<sp/>new_prop<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Property" kindref="compound">Property</ref>(class_att,<sp/>*prototype);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_prop-&gt;<ref refid="classmhf_1_1Property_1a936039a90cbd5f9f916f747bc59a4ee9" kindref="member">update</ref>(ev_class-&gt;<ref refid="classmhf_1_1Property_1a772a122ae9af465ca03e09ada865da3d" kindref="member">getValue</ref>(),<sp/>ev.<ref refid="classmhf_1_1PropertySet_1a0a51af07afba18e052bba54fa7ce9fc4" kindref="member">getTimestamp</ref>());</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmhf_1_1PropertySet_1a873cfcb7c51cea17521c03424f6aa55c" kindref="member">addProperty</ref>(new_prop);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/io/c/fprintf" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">printf</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>prototype<sp/>estimator<sp/>for<sp/>attribute<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="classmhf_1_1AttributeConv_1a13b2a5c9b52504ae9120ec9bcbc123cb" kindref="member">AttributeConv::attribute_str</ref>(class_att).c_str());</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>class_changed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1ClassModel" kindref="compound">ClassModel</ref>&amp;<sp/>class_model<sp/>=<sp/><ref refid="classmhf_1_1SemanticObject_1a7cc05c17ef27f34e2e1db7177737fb78" kindref="member">getExpectedObjectModel</ref>();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmhf_1_1SemanticObject_1a437357f713296740e924735e7db4480e" kindref="member">expected_class_</ref><sp/>!=<sp/>class_model.<ref refid="classmhf_1_1ClassModel_1a82da9ad9fd092045a850c187a34be850" kindref="member">getModelName</ref>())<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmhf_1_1SemanticObject_1a437357f713296740e924735e7db4480e" kindref="member">expected_class_</ref><sp/>=<sp/>class_model.<ref refid="classmhf_1_1ClassModel_1a82da9ad9fd092045a850c187a34be850" kindref="member">getModelName</ref>();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_changed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>update<sp/>rest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">map&lt;Attribute, Property*&gt;::const_iterator</ref><sp/>it<sp/>=<sp/>ev.<ref refid="classmhf_1_1PropertySet_1a51d383aa8d68636ad95b4948e63f03d8" kindref="member">getPropertyMap</ref>().begin();<sp/>it<sp/>!=<sp/>ev.<ref refid="classmhf_1_1PropertySet_1a51d383aa8d68636ad95b4948e63f03d8" kindref="member">getPropertyMap</ref>().end();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacemhf_1a94d490545a8f0a0d1669b99c8094de83" kindref="member">Attribute</ref>&amp;<sp/>attribute<sp/>=<sp/>it-&gt;first;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Property" kindref="compound">Property</ref>*<sp/>ev_prop<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attribute<sp/>!=<sp/>class_att)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmhf_1_1Property" kindref="compound">Property</ref>*<sp/>my_prop<sp/>=<sp/><ref refid="classmhf_1_1PropertySet_1a68492e6fcecb403fe66ea208ccf0b1e5" kindref="member">getProperty</ref>(attribute);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(my_prop<sp/>&amp;&amp;<sp/>!class_changed)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>my_prop-&gt;<ref refid="classmhf_1_1Property_1a936039a90cbd5f9f916f747bc59a4ee9" kindref="member">update</ref>(ev_prop-&gt;<ref refid="classmhf_1_1Property_1a772a122ae9af465ca03e09ada865da3d" kindref="member">getValue</ref>(),<sp/>ev.<ref refid="classmhf_1_1PropertySet_1a0a51af07afba18e052bba54fa7ce9fc4" kindref="member">getTimestamp</ref>());</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;Updating<sp/>&quot;<sp/>&lt;&lt;<sp/>AttributeConv::attribute_str(attribute)<sp/>&lt;&lt;<sp/>&quot;<sp/>with<sp/>&quot;<sp/>&lt;&lt;<sp/>ev_prop-&gt;getValue().toString()<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;Result:<sp/>&quot;<sp/>&lt;&lt;<sp/>my_prop-&gt;toString()<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1IStateEstimator" kindref="compound">IStateEstimator</ref>*<sp/>prototype<sp/>=<sp/><ref refid="classmhf_1_1SemanticObject_1a7cc05c17ef27f34e2e1db7177737fb78" kindref="member">getExpectedObjectModel</ref>().<ref refid="classmhf_1_1ClassModel_1a5620eaaca796b629adce9f6e107aa4c7" kindref="member">getEstimator</ref>(attribute);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prototype)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmhf_1_1Property" kindref="compound">Property</ref>*<sp/>new_prop<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Property" kindref="compound">Property</ref>(attribute,<sp/>*prototype);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_prop-&gt;<ref refid="classmhf_1_1Property_1a936039a90cbd5f9f916f747bc59a4ee9" kindref="member">update</ref>(ev_prop-&gt;<ref refid="classmhf_1_1Property_1a772a122ae9af465ca03e09ada865da3d" kindref="member">getValue</ref>(),<sp/>ev.<ref refid="classmhf_1_1PropertySet_1a0a51af07afba18e052bba54fa7ce9fc4" kindref="member">getTimestamp</ref>());</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmhf_1_1PropertySet_1a873cfcb7c51cea17521c03424f6aa55c" kindref="member">addProperty</ref>(new_prop);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/io/c/fprintf" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">printf</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>prototype<sp/>estimator<sp/>for<sp/>attribute<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="classmhf_1_1AttributeConv_1a13b2a5c9b52504ae9120ec9bcbc123cb" kindref="member">AttributeConv::attribute_str</ref>(it-&gt;first).<ref refid="cpp/string/basic_string/c_str" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">c_str</ref>());</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="classmhf_1_1SemanticObject_1a517066aa0aaf9effaf3c1299f6e44195" refkind="member"><highlight class="normal"><ref refid="classmhf_1_1SemanticObject" kindref="compound">SemanticObject</ref>*<sp/><ref refid="classmhf_1_1SemanticObject_1a517066aa0aaf9effaf3c1299f6e44195" kindref="member">SemanticObject::clone</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1SemanticObject_1a1f24433631f3f966e45b180df95cc52c" kindref="member">SemanticObject</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="classmhf_1_1SemanticObject_1a7cc05c17ef27f34e2e1db7177737fb78" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1ClassModel" kindref="compound">ClassModel</ref>&amp;<sp/><ref refid="classmhf_1_1SemanticObject_1a7cc05c17ef27f34e2e1db7177737fb78" kindref="member">SemanticObject::getExpectedObjectModel</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Property" kindref="compound">Property</ref>*<sp/>class_prop<sp/>=<sp/><ref refid="classmhf_1_1PropertySet_1a68492e6fcecb403fe66ea208ccf0b1e5" kindref="member">getProperty</ref>(</highlight><highlight class="stringliteral">&quot;class_label&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>class_name;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_prop)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_prop-&gt;<ref refid="classmhf_1_1Property_1a772a122ae9af465ca03e09ada865da3d" kindref="member">getValue</ref>().<ref refid="classpbl_1_1PDF_1aa7a2f5f2fb44600508e42a981fdb05a8" kindref="member" external="/home/docker/ros/noetic/system/build/docs/problib/tags">getExpectedValue</ref>(class_name);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="classmhf_1_1KnowledgeDatabase_1a95b7a82ae3f837ad5d1a926e711f939b" kindref="member">KnowledgeDatabase::getInstance</ref>().<ref refid="classmhf_1_1KnowledgeDatabase_1a517baf800b5c635f124c2c1ac88d66d4" kindref="member">getClassModel</ref>(class_name);</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="classmhf_1_1SemanticObject_1a7c6be05c780b7afec8315f4df5268c0c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1SemanticObject_1a7c6be05c780b7afec8315f4df5268c0c" kindref="member">SemanticObject::addPotentialAssignment</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Evidence" kindref="compound">Evidence</ref>&amp;<sp/>ev,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>probability)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmhf_1_1Assignment" kindref="compound">Assignment</ref>*<sp/>assignment<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Assignment" kindref="compound">Assignment</ref>(<ref refid="classmhf_1_1Assignment_1af7a80f95ad109a26bee1b952f718e579ade42f358d369fded317d4a981a34b9f0" kindref="member">Assignment::EXISTING</ref>,<sp/>&amp;ev,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>probability);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="cpp/container/set" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">set&lt;Hypothesis*&gt;::iterator</ref><sp/>it_hyp<sp/>=<sp/><ref refid="classmhf_1_1SemanticObject_1ad17652a2ac9a708c50bf74f70819dc70" kindref="member">parent_hypotheses_</ref>.begin();<sp/>it_hyp<sp/>!=<sp/><ref refid="classmhf_1_1SemanticObject_1ad17652a2ac9a708c50bf74f70819dc70" kindref="member">parent_hypotheses_</ref>.end();<sp/>++it_hyp)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmhf_1_1Hypothesis" kindref="compound">Hypothesis</ref>&amp;<sp/>hyp<sp/>=<sp/>**it_hyp;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hyp.<ref refid="classmhf_1_1Hypothesis_1a16461162ff98386a541e8ff710963c95" kindref="member">addPotentialAssignment</ref>(assignment);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>check<sp/>if<sp/>object<sp/>now<sp/>has<sp/>potential<sp/>assignments<sp/>between<sp/>hypotheses<sp/>of<sp/>different<sp/>clusters.<sp/>If<sp/>so,<sp/>those<sp/>trees<sp/>need<sp/>to<sp/>merge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="classmhf_1_1SemanticObject_1a1135c67c92f139984464bfa0b8da5590" refkind="member"><highlight class="normal"><ref refid="namespacemhf_1ae3b16130b980e82d9293026741d89598" kindref="member">ObjectID</ref><sp/><ref refid="classmhf_1_1SemanticObject_1a1135c67c92f139984464bfa0b8da5590" kindref="member">SemanticObject::getID</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1SemanticObject_1a42dfb7df09f76c3203b4ef7dd27da8e8" kindref="member">ID_</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="classmhf_1_1SemanticObject_1ac122640569a4905fcf92e6ad7cec0e55" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1SemanticObject_1ac122640569a4905fcf92e6ad7cec0e55" kindref="member">SemanticObject::addToHypothesis</ref>(<ref refid="classmhf_1_1Hypothesis" kindref="compound">Hypothesis</ref>*<sp/>hyp)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmhf_1_1SemanticObject_1ad17652a2ac9a708c50bf74f70819dc70" kindref="member">parent_hypotheses_</ref>.insert(hyp);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="classmhf_1_1SemanticObject_1a2855d316eef96942aa2b97900bc0484f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1SemanticObject_1a2855d316eef96942aa2b97900bc0484f" kindref="member">SemanticObject::removeFromHypothesis</ref>(<ref refid="classmhf_1_1Hypothesis" kindref="compound">Hypothesis</ref>*<sp/>hyp)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmhf_1_1SemanticObject_1ad17652a2ac9a708c50bf74f70819dc70" kindref="member">parent_hypotheses_</ref>.erase(hyp);</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="classmhf_1_1SemanticObject_1a5f5f93f614f5617ca950d4dd1450497b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1SemanticObject_1a5f5f93f614f5617ca950d4dd1450497b" kindref="member">SemanticObject::getNumParentHypotheses</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1SemanticObject_1ad17652a2ac9a708c50bf74f70819dc70" kindref="member">parent_hypotheses_</ref>.size();</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/storage/SemanticObject.cpp"/>
  </compounddef>
</doxygen>
