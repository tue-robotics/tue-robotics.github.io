<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classmhf_1_1Hypothesis" kind="class" language="C++" prot="public">
    <compoundname>mhf::Hypothesis</compoundname>
    <includes refid="Hypothesis_8h" local="no">Hypothesis.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classmhf_1_1Hypothesis_1a3589208ee579ee9c813969f923e1d014" prot="protected" static="no" mutable="no">
        <type><ref refid="classmhf_1_1AssignmentMatrix" kindref="compound">AssignmentMatrix</ref> *</type>
        <definition>AssignmentMatrix* mhf::Hypothesis::assignment_matrix_</definition>
        <argsstring></argsstring>
        <name>assignment_matrix_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="173" column="22" bodyfile="include/wire/logic/Hypothesis.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmhf_1_1Hypothesis_1aa4f423b4597e39131c6e6a70b2a114f8" prot="protected" static="no" mutable="no">
        <type><ref refid="classmhf_1_1AssignmentSet" kindref="compound">AssignmentSet</ref> *</type>
        <definition>AssignmentSet* mhf::Hypothesis::assignment_set_</definition>
        <argsstring></argsstring>
        <name>assignment_set_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="171" column="19" bodyfile="include/wire/logic/Hypothesis.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmhf_1_1Hypothesis_1abd4091d59156940b542ef1d525310afd" prot="protected" static="no" mutable="no">
        <type><ref refid="classmhf_1_1Hypothesis" kindref="compound">Hypothesis</ref> *</type>
        <definition>Hypothesis* mhf::Hypothesis::best_leaf_</definition>
        <argsstring></argsstring>
        <name>best_leaf_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="175" column="16" bodyfile="include/wire/logic/Hypothesis.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmhf_1_1Hypothesis_1aac9cdf034589d23f60eb58c2d7b33af7" prot="protected" static="no" mutable="no">
        <type><ref refid="cpp/container/list" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::list</ref>&lt; <ref refid="classmhf_1_1Hypothesis" kindref="compound">Hypothesis</ref> * &gt;</type>
        <definition>std::list&lt;Hypothesis*&gt; mhf::Hypothesis::children_</definition>
        <argsstring></argsstring>
        <name>children_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="169" column="15" bodyfile="include/wire/logic/Hypothesis.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmhf_1_1Hypothesis_1a5637b21f92d81fece6c2cea9cf84ac2d" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int mhf::Hypothesis::height_</definition>
        <argsstring></argsstring>
        <name>height_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="177" column="9" bodyfile="include/wire/logic/Hypothesis.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmhf_1_1Hypothesis_1a5c702e11465e449ebdbf144bf4b6e60c" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool mhf::Hypothesis::is_active_leaf_</definition>
        <argsstring></argsstring>
        <name>is_active_leaf_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="179" column="10" bodyfile="include/wire/logic/Hypothesis.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmhf_1_1Hypothesis_1aceccac3287a6d996e12a42042dac8297" prot="protected" static="no" mutable="no">
        <type><ref refid="cpp/container/list" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::list</ref>&lt; <ref refid="classmhf_1_1SemanticObject" kindref="compound">SemanticObject</ref> * &gt;</type>
        <definition>std::list&lt;SemanticObject*&gt; mhf::Hypothesis::objects_</definition>
        <argsstring></argsstring>
        <name>objects_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="165" column="15" bodyfile="include/wire/logic/Hypothesis.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmhf_1_1Hypothesis_1a089c3cc8f631dcd71f8f7d1122643788" prot="protected" static="no" mutable="no">
        <type><ref refid="classmhf_1_1Hypothesis" kindref="compound">Hypothesis</ref> *</type>
        <definition>Hypothesis* mhf::Hypothesis::parent_</definition>
        <argsstring></argsstring>
        <name>parent_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="167" column="16" bodyfile="include/wire/logic/Hypothesis.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmhf_1_1Hypothesis_1a4d7ffca3933716f1220f2494f7d62741" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double mhf::Hypothesis::probability_</definition>
        <argsstring></argsstring>
        <name>probability_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="161" column="12" bodyfile="include/wire/logic/Hypothesis.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmhf_1_1Hypothesis_1ac9c27fc4b4e6b71299e482d1fe77ded4" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double mhf::Hypothesis::timestamp_</definition>
        <argsstring></argsstring>
        <name>timestamp_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="163" column="12" bodyfile="include/wire/logic/Hypothesis.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1a005f17b9403abe9be37bc1c882c976ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hypothesis::addChildHypothesis</definition>
        <argsstring>(Hypothesis *h)</argsstring>
        <name>addChildHypothesis</name>
        <param>
          <type><ref refid="classmhf_1_1Hypothesis" kindref="compound">Hypothesis</ref> *</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="127" column="10" bodyfile="src/logic/Hypothesis.cpp" bodystart="108" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1a46c8c8887f2dd1ddcee16fe201fc9ca9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hypothesis::addObject</definition>
        <argsstring>(SemanticObject *obj)</argsstring>
        <name>addObject</name>
        <param>
          <type><ref refid="classmhf_1_1SemanticObject" kindref="compound">SemanticObject</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="130" column="10" bodyfile="src/logic/Hypothesis.cpp" bodystart="114" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1a16461162ff98386a541e8ff710963c95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hypothesis::addPotentialAssignment</definition>
        <argsstring>(Assignment *assignment)</argsstring>
        <name>addPotentialAssignment</name>
        <param>
          <type><ref refid="classmhf_1_1Assignment" kindref="compound">Assignment</ref> *</type>
          <declname>assignment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="136" column="10" bodyfile="src/logic/Hypothesis.cpp" bodystart="125" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1ac805a9d3d31a9e57b8e9d3e383a2afb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hypothesis::applyAssignments</definition>
        <argsstring>()</argsstring>
        <name>applyAssignments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="138" column="10" bodyfile="src/logic/Hypothesis.cpp" bodystart="132" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1a722a76d7a0ad42e83c4ac74c3e5f3c94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Hypothesis::calculateBranchProbabilities</definition>
        <argsstring>()</argsstring>
        <name>calculateBranchProbabilities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="144" column="12" bodyfile="src/logic/Hypothesis.cpp" bodystart="189" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1a134983125ccef4165208032570cb8af5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Hypothesis::calculateHeigth</definition>
        <argsstring>()</argsstring>
        <name>calculateHeigth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="146" column="9" bodyfile="src/logic/Hypothesis.cpp" bodystart="203" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1a57f833a56dbc27e74d6d7fe4b2ad4102" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hypothesis::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="134" column="10" bodyfile="src/logic/Hypothesis.cpp" bodystart="245" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1aa5ecf92eb3b1bb52e5de84693bce4547" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hypothesis::clearAssignmentSet</definition>
        <argsstring>()</argsstring>
        <name>clearAssignmentSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="132" column="10" bodyfile="src/logic/Hypothesis.cpp" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1a4bfb7ff41169ac5ed2bc2964da5987d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hypothesis::clearInactive</definition>
        <argsstring>()</argsstring>
        <name>clearInactive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="153" column="10" bodyfile="src/logic/Hypothesis.cpp" bodystart="267" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1affcdea29fe02544feea8378c33d57ba2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmhf_1_1Hypothesis" kindref="compound">Hypothesis</ref> *</type>
        <definition>Hypothesis* mhf::Hypothesis::clone</definition>
        <argsstring>() const</argsstring>
        <name>clone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="85" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1a714ed27eb262c117fd7e3c53c3b8f50b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hypothesis::deleteChildren</definition>
        <argsstring>()</argsstring>
        <name>deleteChildren</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="155" column="10" bodyfile="src/logic/Hypothesis.cpp" bodystart="277" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1a8b4821326e2db406408616562115bae3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmhf_1_1Hypothesis" kindref="compound">Hypothesis</ref> *</type>
        <definition>Hypothesis * Hypothesis::deleteSinglePaths</definition>
        <argsstring>()</argsstring>
        <name>deleteSinglePaths</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="157" column="16" bodyfile="src/logic/Hypothesis.cpp" bodystart="286" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1a488bb433a4e819b68d545ff7a957fab6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmhf_1_1Hypothesis" kindref="compound">Hypothesis</ref> *</type>
        <definition>Hypothesis * Hypothesis::determineBestLeaf</definition>
        <argsstring>()</argsstring>
        <name>determineBestLeaf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="148" column="16" bodyfile="src/logic/Hypothesis.cpp" bodystart="212" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1ace1ac823448230e21fe1fd7f0c9264bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hypothesis::findActiveLeafs</definition>
        <argsstring>(std::list&lt; Hypothesis * &gt; &amp;active_leafs)</argsstring>
        <name>findActiveLeafs</name>
        <param>
          <type><ref refid="cpp/container/list" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::list</ref>&lt; <ref refid="classmhf_1_1Hypothesis" kindref="compound">Hypothesis</ref> * &gt; &amp;</type>
          <declname>active_leafs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="142" column="10" bodyfile="src/logic/Hypothesis.cpp" bodystart="228" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1a8f2f9226985320c06d597414b85a4968" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmhf_1_1AssignmentMatrix" kindref="compound">AssignmentMatrix</ref> *</type>
        <definition>AssignmentMatrix * Hypothesis::getAssignmentMatrix</definition>
        <argsstring>() const</argsstring>
        <name>getAssignmentMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="113" column="22" bodyfile="src/logic/Hypothesis.cpp" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1af95f35effc0c2a790142f64ea1a93106" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmhf_1_1AssignmentSet" kindref="compound">AssignmentSet</ref> *</type>
        <definition>const AssignmentSet * Hypothesis::getAssignments</definition>
        <argsstring>() const</argsstring>
        <name>getAssignments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="90" column="25" bodyfile="src/logic/Hypothesis.cpp" bodystart="39" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1a837dbdcce3f1bd657e62ef7780c2e288" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmhf_1_1Hypothesis" kindref="compound">Hypothesis</ref> *</type>
        <definition>const Hypothesis * Hypothesis::getBestLeaf</definition>
        <argsstring>() const</argsstring>
        <name>getBestLeaf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="92" column="22" bodyfile="src/logic/Hypothesis.cpp" bodystart="43" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1ac52e71f683aacd87f070b82988c6be78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cpp/container/list" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::list</ref>&lt; <ref refid="classmhf_1_1Hypothesis" kindref="compound">Hypothesis</ref> * &gt; &amp;</type>
        <definition>list&lt; Hypothesis * &gt; &amp; Hypothesis::getChildHypotheses</definition>
        <argsstring>()</argsstring>
        <name>getChildHypotheses</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="94" column="15" bodyfile="src/logic/Hypothesis.cpp" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1a997aeb3b81e93c379f136a9a3cbba5c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Hypothesis::getHeight</definition>
        <argsstring>() const</argsstring>
        <name>getHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="96" column="9" bodyfile="src/logic/Hypothesis.cpp" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1a4cbb5d49b6c2daadfa920657550821c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Hypothesis::getNumObjects</definition>
        <argsstring>() const</argsstring>
        <name>getNumObjects</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="99" column="9" bodyfile="src/logic/Hypothesis.cpp" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1a9bef7d268c5a54350637d5634e498328" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="cpp/container/list" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::list</ref>&lt; <ref refid="classmhf_1_1SemanticObject" kindref="compound">SemanticObject</ref> * &gt; &amp;</type>
        <definition>const list&lt; SemanticObject * &gt; &amp; Hypothesis::getObjects</definition>
        <argsstring>() const</argsstring>
        <name>getObjects</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="102" column="21" bodyfile="src/logic/Hypothesis.cpp" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1abbff05c881ab085fe2da32b3c0673c8a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmhf_1_1Hypothesis" kindref="compound">Hypothesis</ref> *</type>
        <definition>const Hypothesis * Hypothesis::getParent</definition>
        <argsstring>() const</argsstring>
        <name>getParent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="106" column="22" bodyfile="src/logic/Hypothesis.cpp" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1aa8d5c5a9b019c0edd50fc8b2ab0f00f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Hypothesis::getProbability</definition>
        <argsstring>() const</argsstring>
        <name>getProbability</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="109" column="12" bodyfile="src/logic/Hypothesis.cpp" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1a2a5cddd26613a9f4f3c9d4bb614b7322" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Hypothesis::getTimestamp</definition>
        <argsstring>() const</argsstring>
        <name>getTimestamp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="111" column="12" bodyfile="src/logic/Hypothesis.cpp" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1a982062b87f410c9d899e57f0e065c3db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hypothesis::Hypothesis</definition>
        <argsstring>(const double &amp;global_timestamp, double probability=-1)</argsstring>
        <name>Hypothesis</name>
        <param>
          <type>const double &amp;</type>
          <declname>global_timestamp</declname>
        </param>
        <param>
          <type>double</type>
          <declname>probability</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="80" column="5" bodyfile="src/logic/Hypothesis.cpp" bodystart="25" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1a137e97ade8df1257b96a9b7005aecfe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hypothesis::setAssignments</definition>
        <argsstring>(AssignmentSet *assignments)</argsstring>
        <name>setAssignments</name>
        <param>
          <type><ref refid="classmhf_1_1AssignmentSet" kindref="compound">AssignmentSet</ref> *</type>
          <declname>assignments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="117" column="10" bodyfile="src/logic/Hypothesis.cpp" bodystart="87" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1a8f5c4f16feca7fc9ea3e73a89363d624" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hypothesis::setInactive</definition>
        <argsstring>()</argsstring>
        <name>setInactive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="119" column="10" bodyfile="src/logic/Hypothesis.cpp" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1a4d63730bcadd96a8ebd5f4421d6635ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hypothesis::setProbability</definition>
        <argsstring>(double prob)</argsstring>
        <name>setProbability</name>
        <param>
          <type>double</type>
          <declname>prob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="121" column="10" bodyfile="src/logic/Hypothesis.cpp" bodystart="99" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1Hypothesis_1aff186a846bb533c1b0a77ee3814a6833" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Hypothesis::~Hypothesis</definition>
        <argsstring>()</argsstring>
        <name>~Hypothesis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/logic/Hypothesis.h" line="83" column="13" bodyfile="src/logic/Hypothesis.cpp" bodystart="29" bodyend="32"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="8">
        <label>std::list&lt; mhf::Hypothesis * &gt;</label>
        <link refid="cpp/container/list" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="5">
        <label>std::map&lt; const mhf::Evidence *, unsigned int &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="1">
        <label>mhf::Hypothesis</label>
        <link refid="classmhf_1_1Hypothesis"/>
        <childnode refid="2" relation="usage">
          <edgelabel>assignment_set_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>objects_</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>parent_</edgelabel>
          <edgelabel>best_leaf_</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>assignment_matrix_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>children_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>std::list&lt; mhf::SemanticObject * &gt;</label>
        <link refid="cpp/container/list" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="3">
        <label>mhf::AssignmentMatrix</label>
        <link refid="classmhf_1_1AssignmentMatrix"/>
        <childnode refid="4" relation="usage">
          <edgelabel>assignments_</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>evidence_to_index_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>mhf::AssignmentSet</label>
        <link refid="classmhf_1_1AssignmentSet"/>
        <childnode refid="1" relation="usage">
          <edgelabel>hyp_</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>assignment_matrix_</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>evidence_assignments_</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::vector&lt; unsigned int &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="4">
        <label>std::vector&lt; std::vector&lt; const mhf::Assignment * &gt; &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="include/wire/logic/Hypothesis.h" line="74" column="17" bodyfile="include/wire/logic/Hypothesis.h" bodystart="74" bodyend="181"/>
    <listofallmembers>
      <member refid="classmhf_1_1Hypothesis_1a005f17b9403abe9be37bc1c882c976ab" prot="public" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>addChildHypothesis</name></member>
      <member refid="classmhf_1_1Hypothesis_1a46c8c8887f2dd1ddcee16fe201fc9ca9" prot="public" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>addObject</name></member>
      <member refid="classmhf_1_1Hypothesis_1a16461162ff98386a541e8ff710963c95" prot="public" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>addPotentialAssignment</name></member>
      <member refid="classmhf_1_1Hypothesis_1ac805a9d3d31a9e57b8e9d3e383a2afb8" prot="public" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>applyAssignments</name></member>
      <member refid="classmhf_1_1Hypothesis_1a3589208ee579ee9c813969f923e1d014" prot="protected" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>assignment_matrix_</name></member>
      <member refid="classmhf_1_1Hypothesis_1aa4f423b4597e39131c6e6a70b2a114f8" prot="protected" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>assignment_set_</name></member>
      <member refid="classmhf_1_1Hypothesis_1abd4091d59156940b542ef1d525310afd" prot="protected" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>best_leaf_</name></member>
      <member refid="classmhf_1_1Hypothesis_1a722a76d7a0ad42e83c4ac74c3e5f3c94" prot="public" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>calculateBranchProbabilities</name></member>
      <member refid="classmhf_1_1Hypothesis_1a134983125ccef4165208032570cb8af5" prot="public" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>calculateHeigth</name></member>
      <member refid="classmhf_1_1Hypothesis_1aac9cdf034589d23f60eb58c2d7b33af7" prot="protected" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>children_</name></member>
      <member refid="classmhf_1_1Hypothesis_1a57f833a56dbc27e74d6d7fe4b2ad4102" prot="public" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>clear</name></member>
      <member refid="classmhf_1_1Hypothesis_1aa5ecf92eb3b1bb52e5de84693bce4547" prot="public" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>clearAssignmentSet</name></member>
      <member refid="classmhf_1_1Hypothesis_1a4bfb7ff41169ac5ed2bc2964da5987d0" prot="public" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>clearInactive</name></member>
      <member refid="classmhf_1_1Hypothesis_1affcdea29fe02544feea8378c33d57ba2" prot="public" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>clone</name></member>
      <member refid="classmhf_1_1Hypothesis_1a714ed27eb262c117fd7e3c53c3b8f50b" prot="public" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>deleteChildren</name></member>
      <member refid="classmhf_1_1Hypothesis_1a8b4821326e2db406408616562115bae3" prot="public" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>deleteSinglePaths</name></member>
      <member refid="classmhf_1_1Hypothesis_1a488bb433a4e819b68d545ff7a957fab6" prot="public" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>determineBestLeaf</name></member>
      <member refid="classmhf_1_1Hypothesis_1ace1ac823448230e21fe1fd7f0c9264bc" prot="public" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>findActiveLeafs</name></member>
      <member refid="classmhf_1_1Hypothesis_1a8f2f9226985320c06d597414b85a4968" prot="public" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>getAssignmentMatrix</name></member>
      <member refid="classmhf_1_1Hypothesis_1af95f35effc0c2a790142f64ea1a93106" prot="public" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>getAssignments</name></member>
      <member refid="classmhf_1_1Hypothesis_1a837dbdcce3f1bd657e62ef7780c2e288" prot="public" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>getBestLeaf</name></member>
      <member refid="classmhf_1_1Hypothesis_1ac52e71f683aacd87f070b82988c6be78" prot="public" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>getChildHypotheses</name></member>
      <member refid="classmhf_1_1Hypothesis_1a997aeb3b81e93c379f136a9a3cbba5c4" prot="public" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>getHeight</name></member>
      <member refid="classmhf_1_1Hypothesis_1a4cbb5d49b6c2daadfa920657550821c9" prot="public" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>getNumObjects</name></member>
      <member refid="classmhf_1_1Hypothesis_1a9bef7d268c5a54350637d5634e498328" prot="public" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>getObjects</name></member>
      <member refid="classmhf_1_1Hypothesis_1abbff05c881ab085fe2da32b3c0673c8a" prot="public" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>getParent</name></member>
      <member refid="classmhf_1_1Hypothesis_1aa8d5c5a9b019c0edd50fc8b2ab0f00f1" prot="public" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>getProbability</name></member>
      <member refid="classmhf_1_1Hypothesis_1a2a5cddd26613a9f4f3c9d4bb614b7322" prot="public" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>getTimestamp</name></member>
      <member refid="classmhf_1_1Hypothesis_1a5637b21f92d81fece6c2cea9cf84ac2d" prot="protected" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>height_</name></member>
      <member refid="classmhf_1_1Hypothesis_1a982062b87f410c9d899e57f0e065c3db" prot="public" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>Hypothesis</name></member>
      <member refid="classmhf_1_1Hypothesis_1a5c702e11465e449ebdbf144bf4b6e60c" prot="protected" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>is_active_leaf_</name></member>
      <member refid="classmhf_1_1Hypothesis_1aceccac3287a6d996e12a42042dac8297" prot="protected" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>objects_</name></member>
      <member refid="classmhf_1_1Hypothesis_1a089c3cc8f631dcd71f8f7d1122643788" prot="protected" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>parent_</name></member>
      <member refid="classmhf_1_1Hypothesis_1a4d7ffca3933716f1220f2494f7d62741" prot="protected" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>probability_</name></member>
      <member refid="classmhf_1_1Hypothesis_1a137e97ade8df1257b96a9b7005aecfe5" prot="public" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>setAssignments</name></member>
      <member refid="classmhf_1_1Hypothesis_1a8f5c4f16feca7fc9ea3e73a89363d624" prot="public" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>setInactive</name></member>
      <member refid="classmhf_1_1Hypothesis_1a4d63730bcadd96a8ebd5f4421d6635ff" prot="public" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>setProbability</name></member>
      <member refid="classmhf_1_1Hypothesis_1ac9c27fc4b4e6b71299e482d1fe77ded4" prot="protected" virt="non-virtual"><scope>mhf::Hypothesis</scope><name>timestamp_</name></member>
      <member refid="classmhf_1_1Hypothesis_1aff186a846bb533c1b0a77ee3814a6833" prot="public" virt="virtual"><scope>mhf::Hypothesis</scope><name>~Hypothesis</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
