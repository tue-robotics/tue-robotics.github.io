<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="Assignment_8cpp" kind="file" language="C++">
    <compoundname>Assignment.cpp</compoundname>
    <includes refid="Assignment_8h" local="yes">wire/logic/Assignment.h</includes>
    <includes refid="KnowledgeDatabase_8h" local="yes">wire/storage/KnowledgeDatabase.h</includes>
    <includes refid="SemanticObject_8h" local="yes">wire/storage/SemanticObject.h</includes>
    <includes refid="ObjectStorage_8h" local="yes">wire/storage/ObjectStorage.h</includes>
    <incdepgraph>
      <node id="13">
        <label>list</label>
        <link refid="cpp/header/list" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="14">
        <label>wire/storage/ObjectStorage.h</label>
        <link refid="ObjectStorage_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>wire/core/ClassModel.h</label>
        <link refid="ClassModel_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>problib/pdfs/PMF.h</label>
        <link refid="PMF_8h.html" external="/home/docker/ros/noetic/system/build/docs/problib/tags"/>
      </node>
      <node id="12">
        <label>wire/storage/SemanticObject.h</label>
        <link refid="SemanticObject_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>map</label>
        <link refid="cpp/header/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="10">
        <label>wire/core/IStateEstimator.h</label>
        <link refid="IStateEstimator_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>wire/storage/KnowledgeDatabase.h</label>
        <link refid="KnowledgeDatabase_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>string</label>
        <link refid="cpp/header/string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="1">
        <label>Assignment.cpp</label>
        <link refid="Assignment_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>wire/logic/Assignment.h</label>
        <link refid="Assignment_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>problib/pdfs/PDF.h</label>
        <link refid="PDF_8h.html" external="/home/docker/ros/noetic/system/build/docs/problib/tags"/>
      </node>
      <node id="7">
        <label>wire/core/PropertySet.h</label>
        <link refid="PropertySet_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>wire/core/datatypes.h</label>
        <link refid="datatypes_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacemhf">mhf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Assignment.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>Jul<sp/>28,<sp/>2011</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>sdries</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Assignment_8h" kindref="compound">wire/logic/Assignment.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="KnowledgeDatabase_8h" kindref="compound">wire/storage/KnowledgeDatabase.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="SemanticObject_8h" kindref="compound">wire/storage/SemanticObject.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ObjectStorage_8h" kindref="compound">wire/storage/ObjectStorage.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemhf" kindref="compound">mhf</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="classmhf_1_1Assignment_1a71c5b35e27839f5c03d66c0dababe62e" refkind="member"><highlight class="normal"><ref refid="classmhf_1_1Assignment_1a71c5b35e27839f5c03d66c0dababe62e" kindref="member">Assignment::Assignment</ref>(<ref refid="classmhf_1_1Assignment_1af7a80f95ad109a26bee1b952f718e579" kindref="member">AssignmentType</ref><sp/>type<sp/>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Evidence" kindref="compound">Evidence</ref>*<sp/>evidence,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1SemanticObject" kindref="compound">SemanticObject</ref>*<sp/>target,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>probability)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>type_(type),<sp/>evidence_(evidence),<sp/>target_(target),<sp/>probability_(probability),<sp/>new_object_(0),<sp/>updated_object_(0)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="classmhf_1_1Assignment_1a76902f6476dc69301049d9f033e08b12" refkind="member"><highlight class="normal"><ref refid="classmhf_1_1Assignment_1a76902f6476dc69301049d9f033e08b12" kindref="member">Assignment::~Assignment</ref>()<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classmhf_1_1Assignment_1a2ec63ae568d7da0082b1909ef68b6cf6" refkind="member"><highlight class="normal"><ref refid="classmhf_1_1Assignment_1af7a80f95ad109a26bee1b952f718e579" kindref="member">Assignment::AssignmentType</ref><sp/><ref refid="classmhf_1_1Assignment_1a2ec63ae568d7da0082b1909ef68b6cf6" kindref="member">Assignment::getType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Assignment_1acfa1d3ee394a43ad4982433f4fca1f5d" kindref="member">type_</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classmhf_1_1Assignment_1ad1db64cca87ee37b9f0078da98455c0e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Evidence" kindref="compound">Evidence</ref>*<sp/><ref refid="classmhf_1_1Assignment_1ad1db64cca87ee37b9f0078da98455c0e" kindref="member">Assignment::getEvidence</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Assignment_1ab6c797542b78f693e312d402a8911429" kindref="member">evidence_</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classmhf_1_1Assignment_1a32f7bfe4a07d395cdfc99f625954321d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1SemanticObject" kindref="compound">SemanticObject</ref>*<sp/><ref refid="classmhf_1_1Assignment_1a32f7bfe4a07d395cdfc99f625954321d" kindref="member">Assignment::getTarget</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Assignment_1ab702a6745d0a7f6ea2086beabb7a8b31" kindref="member">target_</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classmhf_1_1Assignment_1a1cc649854fa6eddabd435d572d8381bb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Assignment_1a1cc649854fa6eddabd435d572d8381bb" kindref="member">Assignment::getProbability</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Assignment_1a67fa4c096b9d83604d101ffeeb60f9e7" kindref="member">probability_</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classmhf_1_1Assignment_1ad6908f1fc513f06c54550195d3c1cf8c" refkind="member"><highlight class="normal"><ref refid="classmhf_1_1SemanticObject" kindref="compound">SemanticObject</ref>*<sp/><ref refid="classmhf_1_1Assignment_1ad6908f1fc513f06c54550195d3c1cf8c" kindref="member">Assignment::getNewObject</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmhf_1_1Assignment_1a4d4820db139f00348efe101534c8559d" kindref="member">new_object_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Assignment_1a4d4820db139f00348efe101534c8559d" kindref="member">new_object_</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmhf_1_1Assignment_1a4d4820db139f00348efe101534c8559d" kindref="member">new_object_</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1SemanticObject" kindref="compound">SemanticObject</ref>(<ref refid="classmhf_1_1ObjectStorage_1a3e41e4aecb19bbcf70821893f2f41c2f" kindref="member">ObjectStorage::getInstance</ref>().getUniqueID());</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmhf_1_1Assignment_1a4d4820db139f00348efe101534c8559d" kindref="member">new_object_</ref>-&gt;<ref refid="classmhf_1_1SemanticObject_1a76c95b800e4ea59e0c63d09fb0ee9fbc" kindref="member">init</ref>(*<ref refid="classmhf_1_1Assignment_1ab6c797542b78f693e312d402a8911429" kindref="member">evidence_</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmhf_1_1ObjectStorage_1a3e41e4aecb19bbcf70821893f2f41c2f" kindref="member">ObjectStorage::getInstance</ref>().<ref refid="classmhf_1_1ObjectStorage_1ae2dd85f531f134e6aa814e0a7b5cd60a" kindref="member">addObject</ref>(<ref refid="classmhf_1_1Assignment_1a4d4820db139f00348efe101534c8559d" kindref="member">new_object_</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Assignment_1a4d4820db139f00348efe101534c8559d" kindref="member">new_object_</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classmhf_1_1Assignment_1a9ef3a873de153154a092897a975307da" refkind="member"><highlight class="normal"><ref refid="classmhf_1_1SemanticObject" kindref="compound">SemanticObject</ref>*<sp/><ref refid="classmhf_1_1Assignment_1a9ef3a873de153154a092897a975307da" kindref="member">Assignment::getUpdatedObject</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmhf_1_1Assignment_1aa607007ea648ee5575e9ac84f852bca4" kindref="member">updated_object_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Assignment_1aa607007ea648ee5575e9ac84f852bca4" kindref="member">updated_object_</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmhf_1_1Assignment_1aa607007ea648ee5575e9ac84f852bca4" kindref="member">updated_object_</ref><sp/>=<sp/><ref refid="classmhf_1_1Assignment_1ab702a6745d0a7f6ea2086beabb7a8b31" kindref="member">target_</ref>-&gt;<ref refid="classmhf_1_1SemanticObject_1a517066aa0aaf9effaf3c1299f6e44195" kindref="member">clone</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmhf_1_1Assignment_1aa607007ea648ee5575e9ac84f852bca4" kindref="member">updated_object_</ref>-&gt;<ref refid="classmhf_1_1SemanticObject_1a861b250812192e500a7ea1a079db1505" kindref="member">update</ref>(*<ref refid="classmhf_1_1Assignment_1ab6c797542b78f693e312d402a8911429" kindref="member">evidence_</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmhf_1_1ObjectStorage_1a3e41e4aecb19bbcf70821893f2f41c2f" kindref="member">ObjectStorage::getInstance</ref>().<ref refid="classmhf_1_1ObjectStorage_1ae2dd85f531f134e6aa814e0a7b5cd60a" kindref="member">addObject</ref>(<ref refid="classmhf_1_1Assignment_1aa607007ea648ee5575e9ac84f852bca4" kindref="member">updated_object_</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmhf_1_1Assignment_1aa607007ea648ee5575e9ac84f852bca4" kindref="member">updated_object_</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classmhf_1_1Assignment_1ae84a32ae42f43a8d07ab97a1fe98d9a1" refkind="member"><highlight class="normal"><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/><ref refid="classmhf_1_1Assignment_1ae84a32ae42f43a8d07ab97a1fe98d9a1" kindref="member">Assignment::toString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/io/basic_stringstream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::stringstream</ref><sp/>ss;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Evidence<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classmhf_1_1Assignment_1ab6c797542b78f693e312d402a8911429" kindref="member">evidence_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-&gt;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmhf_1_1Assignment_1acfa1d3ee394a43ad4982433f4fca1f5d" kindref="member">type_</ref><sp/>==<sp/><ref refid="classmhf_1_1Assignment_1af7a80f95ad109a26bee1b952f718e579a72653b839932731ca0f7ecefbeceb07f" kindref="member">Assignment::CLUTTER</ref>)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;CLUTTER&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmhf_1_1Assignment_1acfa1d3ee394a43ad4982433f4fca1f5d" kindref="member">type_</ref><sp/>==<sp/><ref refid="classmhf_1_1Assignment_1af7a80f95ad109a26bee1b952f718e579a22f8db90c04167eb764eda141958b399" kindref="member">Assignment::NEW</ref>)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;NEW&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmhf_1_1Assignment_1acfa1d3ee394a43ad4982433f4fca1f5d" kindref="member">type_</ref><sp/>==<sp/><ref refid="classmhf_1_1Assignment_1af7a80f95ad109a26bee1b952f718e579ade42f358d369fded317d4a981a34b9f0" kindref="member">Assignment::EXISTING</ref>)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Object<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classmhf_1_1Assignment_1ab702a6745d0a7f6ea2086beabb7a8b31" kindref="member">target_</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.<ref refid="cpp/io/basic_stringstream/str" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">str</ref>();</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/logic/Assignment.cpp"/>
  </compounddef>
</doxygen>
