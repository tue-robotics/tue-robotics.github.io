<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classmhf_1_1IStateEstimator" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>mhf::IStateEstimator</compoundname>
    <derivedcompoundref refid="classmhf_1_1FixedState" prot="public" virt="non-virtual">mhf::FixedState</derivedcompoundref>
    <derivedcompoundref refid="classmhf_1_1PropertySet" prot="public" virt="non-virtual">mhf::PropertySet</derivedcompoundref>
    <derivedcompoundref refid="classTestPlugin" prot="public" virt="non-virtual">TestPlugin</derivedcompoundref>
    <includes refid="IStateEstimator_8h" local="no">IStateEstimator.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmhf_1_1IStateEstimator_1a10ab7cd2f9ee963ff8eb0f5182a32904" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classmhf_1_1IStateEstimator" kindref="compound">IStateEstimator</ref> *</type>
        <definition>virtual IStateEstimator* mhf::IStateEstimator::clone</definition>
        <argsstring>() const =0</argsstring>
        <name>clone</name>
        <reimplementedby refid="classmhf_1_1PropertySet_1ab6405f800f9a8b1b75c33d273e735289">clone</reimplementedby>
        <reimplementedby refid="classmhf_1_1FixedState_1a61c4405b5b1705929209303ff13f3249">clone</reimplementedby>
        <reimplementedby refid="classmhf_1_1SemanticObject_1a517066aa0aaf9effaf3c1299f6e44195">clone</reimplementedby>
        <reimplementedby refid="classTestPlugin_1a0c5d456ce07d9a532f6c6d9500e80d42">clone</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/IStateEstimator.h" line="135" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1IStateEstimator_1aadaf2529f2619c59f6ebc8915f04bb11" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="classpbl_1_1PDF" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::PDF</ref> &amp;</type>
        <definition>virtual const pbl::PDF&amp; mhf::IStateEstimator::getValue</definition>
        <argsstring>() const =0</argsstring>
        <name>getValue</name>
        <reimplementedby refid="classmhf_1_1PropertySet_1a1a1fded058a4c404476548024a45942b">getValue</reimplementedby>
        <reimplementedby refid="classmhf_1_1FixedState_1a00a277c7dc617b90debcd89a5f1213f7">getValue</reimplementedby>
        <reimplementedby refid="classTestPlugin_1abbb2b784acfd309015b26cc9fee7bb4b">getValue</reimplementedby>
        <briefdescription>
<para>Returns the current estimated state value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current state, i.e., the current attribute value represented as probability density function </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/IStateEstimator.h" line="159" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1IStateEstimator_1ae93bd3b893053fb1660b12eb41c4cae6" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mhf::IStateEstimator::propagate</definition>
        <argsstring>(const Time &amp;time)=0</argsstring>
        <name>propagate</name>
        <reimplementedby refid="classmhf_1_1FixedState_1a3093f302209dcb5762274d16c656923b">propagate</reimplementedby>
        <reimplementedby refid="classTestPlugin_1ac357a470b7db7a57493bee194a8d19ec">propagate</reimplementedby>
        <reimplementedby refid="classmhf_1_1PropertySet_1a31fd08eaacea40e59fad77aad81f94c0">propagate</reimplementedby>
        <param>
          <type>const <ref refid="namespacemhf_1ae209e58ac587543af50a25222aeda18e" kindref="member">Time</ref> &amp;</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Propagates the internal state to Time time. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The time to which the internal state is propagated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/IStateEstimator.h" line="141" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1IStateEstimator_1aca0803c04a17469a27334b6e6089eaeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mhf::IStateEstimator::reset</definition>
        <argsstring>()=0</argsstring>
        <name>reset</name>
        <reimplementedby refid="classmhf_1_1PropertySet_1a8203bd2b5a70dda771ee927b4eeb22d7">reset</reimplementedby>
        <reimplementedby refid="classmhf_1_1FixedState_1a8aeba624814031fb797a789c5e9df3af">reset</reimplementedby>
        <reimplementedby refid="classTestPlugin_1a8412db004393cc4e5519aeb88a46b6d8">reset</reimplementedby>
        <briefdescription>
<para>Resets the internal state of the estimator to its initial value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/IStateEstimator.h" line="153" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1IStateEstimator_1a265a58f62f73731a85179ab4f465aa0a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool mhf::IStateEstimator::setParameter</definition>
        <argsstring>(const std::string &amp;, bool)</argsstring>
        <name>setParameter</name>
        <reimplementedby refid="classTestPlugin_1a4e28a9863b25510c3277d55e15e9a528">setParameter</reimplementedby>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
        </param>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
<para>Set a boolean parameter of this state estimator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>The boolean value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if the parameter was known to the estimator; false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/IStateEstimator.h" line="174" column="18" bodyfile="include/wire/core/IStateEstimator.h" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1IStateEstimator_1ab2e657eef008c37181cb650b14692f4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool mhf::IStateEstimator::setParameter</definition>
        <argsstring>(const std::string &amp;, const std::string &amp;)</argsstring>
        <name>setParameter</name>
        <reimplementedby refid="classTestPlugin_1a99181569d50dac69d1c3e075400d04de">setParameter</reimplementedby>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Set a string parameter of this state estimator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if the parameter was known to the estimator; false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/IStateEstimator.h" line="194" column="18" bodyfile="include/wire/core/IStateEstimator.h" bodystart="194" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1IStateEstimator_1aea2e3fa3e7ee39155e556262abb086c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool mhf::IStateEstimator::setParameter</definition>
        <argsstring>(const std::string &amp;, double)</argsstring>
        <name>setParameter</name>
        <reimplementedby refid="classTestPlugin_1ac94afe8dd23b1ef0ba0185f4c2d24621">setParameter</reimplementedby>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
<para>Set a real-valued parameter of this state estimator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>The float value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if the parameter was known to the estimator; false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/IStateEstimator.h" line="184" column="18" bodyfile="include/wire/core/IStateEstimator.h" bodystart="184" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1IStateEstimator_1ab649cec130ec1be64cf8c64d607ec418" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mhf::IStateEstimator::update</definition>
        <argsstring>(const pbl::PDF &amp;z, const Time &amp;time)=0</argsstring>
        <name>update</name>
        <reimplementedby refid="classmhf_1_1FixedState_1a36e8e6ba7784393e56c10aaa6cbf9906">update</reimplementedby>
        <reimplementedby refid="classTestPlugin_1a5a45d2d784e90c34d5d9d3f5c6a88063">update</reimplementedby>
        <reimplementedby refid="classmhf_1_1PropertySet_1a86d428bd5396d1087c59ebfe8ffdc912">update</reimplementedby>
        <param>
          <type>const <ref refid="classpbl_1_1PDF" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::PDF</ref> &amp;</type>
          <declname>z</declname>
        </param>
        <param>
          <type>const <ref refid="namespacemhf_1ae209e58ac587543af50a25222aeda18e" kindref="member">Time</ref> &amp;</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Updates the internal state based on measurement z. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The measurement with which to update, represented as a probability density function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The time to which the internal state is propagated before updating </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/IStateEstimator.h" line="148" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1IStateEstimator_1a368b89d4307185f95a45c50d19fdb4e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual mhf::IStateEstimator::~IStateEstimator</definition>
        <argsstring>()</argsstring>
        <name>~IStateEstimator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/core/IStateEstimator.h" line="133" column="13" bodyfile="include/wire/core/IStateEstimator.h" bodystart="133" bodyend="133"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for all state estimators used by the world model. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Sjoerd van den Dries </para>
</simplesect>
<simplesect kind="date"><para>December, 2012</para>
</simplesect>
A state estimator estimates the value of one specific attribute of one specific object in the world. The attribute value is represented by a probability density over the domain of the attribute. For example, a position can be represented by a PDF over Cartesian space. A state estimator should implement three methods: propagate(Time t), which changes the internal state of the estimator to the estimated value at Time t; update(PDF z, Time time) which updates the internal state based on measurement z at Time t; and <ref refid="classmhf_1_1IStateEstimator_1aadaf2529f2619c59f6ebc8915f04bb11" kindref="member">getValue()</ref> which returns the current state. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>mhf::SemanticObject</label>
        <link refid="classmhf_1_1SemanticObject"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>mhf::IStateEstimator</label>
        <link refid="classmhf_1_1IStateEstimator"/>
      </node>
      <node id="2">
        <label>mhf::FixedState</label>
        <link refid="classmhf_1_1FixedState"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>mhf::Evidence</label>
        <link refid="classmhf_1_1Evidence"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>TestPlugin</label>
        <link refid="classTestPlugin"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>mhf::PropertySet</label>
        <link refid="classmhf_1_1PropertySet"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="include/wire/core/IStateEstimator.h" line="95" column="22" bodyfile="include/wire/core/IStateEstimator.h" bodystart="95" bodyend="163"/>
    <listofallmembers>
      <member refid="classmhf_1_1IStateEstimator_1a10ab7cd2f9ee963ff8eb0f5182a32904" prot="public" virt="pure-virtual"><scope>mhf::IStateEstimator</scope><name>clone</name></member>
      <member refid="classmhf_1_1IStateEstimator_1aadaf2529f2619c59f6ebc8915f04bb11" prot="public" virt="pure-virtual"><scope>mhf::IStateEstimator</scope><name>getValue</name></member>
      <member refid="classmhf_1_1IStateEstimator_1ae93bd3b893053fb1660b12eb41c4cae6" prot="public" virt="pure-virtual"><scope>mhf::IStateEstimator</scope><name>propagate</name></member>
      <member refid="classmhf_1_1IStateEstimator_1aca0803c04a17469a27334b6e6089eaeb" prot="public" virt="pure-virtual"><scope>mhf::IStateEstimator</scope><name>reset</name></member>
      <member refid="classmhf_1_1IStateEstimator_1a265a58f62f73731a85179ab4f465aa0a" prot="public" virt="virtual"><scope>mhf::IStateEstimator</scope><name>setParameter</name></member>
      <member refid="classmhf_1_1IStateEstimator_1aea2e3fa3e7ee39155e556262abb086c7" prot="public" virt="virtual"><scope>mhf::IStateEstimator</scope><name>setParameter</name></member>
      <member refid="classmhf_1_1IStateEstimator_1ab2e657eef008c37181cb650b14692f4f" prot="public" virt="virtual"><scope>mhf::IStateEstimator</scope><name>setParameter</name></member>
      <member refid="classmhf_1_1IStateEstimator_1ab649cec130ec1be64cf8c64d607ec418" prot="public" virt="pure-virtual"><scope>mhf::IStateEstimator</scope><name>update</name></member>
      <member refid="classmhf_1_1IStateEstimator_1a368b89d4307185f95a45c50d19fdb4e8" prot="public" virt="virtual"><scope>mhf::IStateEstimator</scope><name>~IStateEstimator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
