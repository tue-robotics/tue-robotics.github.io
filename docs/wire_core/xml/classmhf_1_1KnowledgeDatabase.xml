<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classmhf_1_1KnowledgeDatabase" kind="class" language="C++" prot="public">
    <compoundname>mhf::KnowledgeDatabase</compoundname>
    <includes refid="KnowledgeDatabase_8h" local="no">KnowledgeDatabase.h</includes>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="classmhf_1_1KnowledgeDatabase_1a7a42c85185c6387e5eb801c4b9a31035" prot="protected" static="yes" mutable="no">
        <type><ref refid="classmhf_1_1KnowledgeDatabase" kindref="compound">KnowledgeDatabase</ref> *</type>
        <definition>KnowledgeDatabase * mhf::KnowledgeDatabase::instance_</definition>
        <argsstring></argsstring>
        <name>instance_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/KnowledgeDatabase.h" line="67" column="30" bodyfile="include/wire/storage/KnowledgeDatabase.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classmhf_1_1KnowledgeDatabase_1ab07ca9e97f1555648becb658bf3a1273" prot="protected" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>, <ref refid="classmhf_1_1ClassModel" kindref="compound">ClassModel</ref> * &gt;</type>
        <definition>std::map&lt;std::string, ClassModel*&gt; mhf::KnowledgeDatabase::class_models_</definition>
        <argsstring></argsstring>
        <name>class_models_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/KnowledgeDatabase.h" line="77" column="14" bodyfile="include/wire/storage/KnowledgeDatabase.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmhf_1_1KnowledgeDatabase_1a507c045023cc87ed5fa0f0102417623a" prot="protected" static="no" mutable="no">
        <type><ref refid="classpbl_1_1PMF" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::PMF</ref></type>
        <definition>pbl::PMF mhf::KnowledgeDatabase::class_pmf_</definition>
        <argsstring></argsstring>
        <name>class_pmf_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/KnowledgeDatabase.h" line="75" column="14" bodyfile="include/wire/storage/KnowledgeDatabase.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmhf_1_1KnowledgeDatabase_1a6d3a4c49b6c8e078498093720d327e15" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double mhf::KnowledgeDatabase::prior_clutter_</definition>
        <argsstring></argsstring>
        <name>prior_clutter_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/KnowledgeDatabase.h" line="73" column="12" bodyfile="include/wire/storage/KnowledgeDatabase.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmhf_1_1KnowledgeDatabase_1aa78d2f67e6e173799c818c4e8dc9eb9c" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double mhf::KnowledgeDatabase::prior_existing_</definition>
        <argsstring></argsstring>
        <name>prior_existing_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/KnowledgeDatabase.h" line="71" column="12" bodyfile="include/wire/storage/KnowledgeDatabase.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmhf_1_1KnowledgeDatabase_1a06486d483199d7f827f489e5b811ae79" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double mhf::KnowledgeDatabase::prior_new_</definition>
        <argsstring></argsstring>
        <name>prior_new_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/KnowledgeDatabase.h" line="69" column="12" bodyfile="include/wire/storage/KnowledgeDatabase.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmhf_1_1KnowledgeDatabase_1a95b7a82ae3f837ad5d1a926e711f939b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmhf_1_1KnowledgeDatabase" kindref="compound">KnowledgeDatabase</ref> &amp;</type>
        <definition>KnowledgeDatabase &amp; mhf::KnowledgeDatabase::getInstance</definition>
        <argsstring>()</argsstring>
        <name>getInstance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/KnowledgeDatabase.h" line="25" column="30" bodyfile="src/storage/KnowledgeDatabase.cpp" bodystart="16" bodyend="22"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmhf_1_1KnowledgeDatabase_1a91c364a09544cd25127c1fdecfa81c21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mhf::KnowledgeDatabase::addClassModel</definition>
        <argsstring>(const std::string &amp;class_name, ClassModel *model)</argsstring>
        <name>addClassModel</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>class_name</declname>
        </param>
        <param>
          <type><ref refid="classmhf_1_1ClassModel" kindref="compound">ClassModel</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/KnowledgeDatabase.h" line="29" column="10" bodyfile="src/storage/KnowledgeDatabase.cpp" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1KnowledgeDatabase_1a22ea1f5ccd5e75441900d213499c4470" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classpbl_1_1PMF" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::PMF</ref> &amp;</type>
        <definition>const pbl::PMF &amp; mhf::KnowledgeDatabase::getClassDistribution</definition>
        <argsstring>() const</argsstring>
        <name>getClassDistribution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/KnowledgeDatabase.h" line="37" column="20" bodyfile="src/storage/KnowledgeDatabase.cpp" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1KnowledgeDatabase_1a517baf800b5c635f124c2c1ac88d66d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmhf_1_1ClassModel" kindref="compound">ClassModel</ref> *</type>
        <definition>const ClassModel * mhf::KnowledgeDatabase::getClassModel</definition>
        <argsstring>(const std::string &amp;class_name) const</argsstring>
        <name>getClassModel</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>class_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/KnowledgeDatabase.h" line="41" column="22" bodyfile="src/storage/KnowledgeDatabase.cpp" bodystart="82" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1KnowledgeDatabase_1a6a5728cede339cd65ba0864c4d367d86" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>, <ref refid="classmhf_1_1ClassModel" kindref="compound">ClassModel</ref> * &gt; &amp;</type>
        <definition>const std::map&lt; std::string, ClassModel * &gt; &amp; mhf::KnowledgeDatabase::getClassModels</definition>
        <argsstring>() const</argsstring>
        <name>getClassModels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/KnowledgeDatabase.h" line="39" column="20" bodyfile="src/storage/KnowledgeDatabase.cpp" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1KnowledgeDatabase_1a1778408f2b240623cef6816c271ff6c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmhf_1_1PropertySet" kindref="compound">PropertySet</ref> &amp;</type>
        <definition>const PropertySet &amp; mhf::KnowledgeDatabase::getClutterPDFs</definition>
        <argsstring>(const std::string &amp;class_name) const</argsstring>
        <name>getClutterPDFs</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>class_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/KnowledgeDatabase.h" line="33" column="23" bodyfile="src/storage/KnowledgeDatabase.cpp" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1KnowledgeDatabase_1a2ac4a788e8c094ea795027417ffaa6b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmhf_1_1IStateEstimator" kindref="compound">IStateEstimator</ref> *</type>
        <definition>const IStateEstimator * mhf::KnowledgeDatabase::getEstimator</definition>
        <argsstring>(const std::string &amp;class_name, const Attribute &amp;attribute) const</argsstring>
        <name>getEstimator</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>class_name</declname>
        </param>
        <param>
          <type>const <ref refid="namespacemhf_1a94d490545a8f0a0d1669b99c8094de83" kindref="member">Attribute</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/KnowledgeDatabase.h" line="35" column="27" bodyfile="src/storage/KnowledgeDatabase.cpp" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1KnowledgeDatabase_1aacce40026a7b354c37a30b3363d13e6f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmhf_1_1PropertySet" kindref="compound">PropertySet</ref> &amp;</type>
        <definition>const PropertySet &amp; mhf::KnowledgeDatabase::getNewPDFs</definition>
        <argsstring>(const std::string &amp;class_name) const</argsstring>
        <name>getNewPDFs</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>class_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/KnowledgeDatabase.h" line="31" column="23" bodyfile="src/storage/KnowledgeDatabase.cpp" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1KnowledgeDatabase_1a21a212a4e968b92e29952d925761173a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double mhf::KnowledgeDatabase::getPriorClutter</definition>
        <argsstring>() const</argsstring>
        <name>getPriorClutter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/KnowledgeDatabase.h" line="53" column="12" bodyfile="src/storage/KnowledgeDatabase.cpp" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1KnowledgeDatabase_1a4545b68af6d3d9180133a51421b235ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double mhf::KnowledgeDatabase::getPriorExisting</definition>
        <argsstring>() const</argsstring>
        <name>getPriorExisting</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/KnowledgeDatabase.h" line="51" column="12" bodyfile="src/storage/KnowledgeDatabase.cpp" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1KnowledgeDatabase_1a47df4a5101cbdeb4d95e3a1931a03dfe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double mhf::KnowledgeDatabase::getPriorNew</definition>
        <argsstring>() const</argsstring>
        <name>getPriorNew</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/KnowledgeDatabase.h" line="49" column="12" bodyfile="src/storage/KnowledgeDatabase.cpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1KnowledgeDatabase_1aa85c6453180c3351ecd96dbd250ba843" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double mhf::KnowledgeDatabase::getProbabilityClutter</definition>
        <argsstring>(const Evidence &amp;z)</argsstring>
        <name>getProbabilityClutter</name>
        <param>
          <type>const <ref refid="classmhf_1_1Evidence" kindref="compound">Evidence</ref> &amp;</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/KnowledgeDatabase.h" line="57" column="12" bodyfile="src/storage/KnowledgeDatabase.cpp" bodystart="134" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1KnowledgeDatabase_1ab795cd19730f78ca693a016810bd34d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double mhf::KnowledgeDatabase::getProbabilityExisting</definition>
        <argsstring>(const Evidence &amp;z, const SemanticObject &amp;obj)</argsstring>
        <name>getProbabilityExisting</name>
        <param>
          <type>const <ref refid="classmhf_1_1Evidence" kindref="compound">Evidence</ref> &amp;</type>
          <declname>z</declname>
        </param>
        <param>
          <type>const <ref refid="classmhf_1_1SemanticObject" kindref="compound">SemanticObject</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/KnowledgeDatabase.h" line="59" column="12" bodyfile="src/storage/KnowledgeDatabase.cpp" bodystart="174" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1KnowledgeDatabase_1a68f835b3359ddfd2f399bb7e0db164f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double mhf::KnowledgeDatabase::getProbabilityNew</definition>
        <argsstring>(const Evidence &amp;z)</argsstring>
        <name>getProbabilityNew</name>
        <param>
          <type>const <ref refid="classmhf_1_1Evidence" kindref="compound">Evidence</ref> &amp;</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/KnowledgeDatabase.h" line="55" column="12" bodyfile="src/storage/KnowledgeDatabase.cpp" bodystart="94" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1KnowledgeDatabase_1aaccce5dfd5239c9e6df78003e656743d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="classmhf_1_1Property" kindref="compound">Property</ref> &gt;</type>
        <definition>vector&lt; Property &gt; mhf::KnowledgeDatabase::inferProperties</definition>
        <argsstring>(const PropertySet &amp;prop_set, std::vector&lt; Attribute &gt;) const</argsstring>
        <name>inferProperties</name>
        <param>
          <type>const <ref refid="classmhf_1_1PropertySet" kindref="compound">PropertySet</ref> &amp;</type>
          <declname>prop_set</declname>
        </param>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="namespacemhf_1a94d490545a8f0a0d1669b99c8094de83" kindref="member">Attribute</ref> &gt;</type>
          <defname>attribs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/KnowledgeDatabase.h" line="61" column="17" bodyfile="src/storage/KnowledgeDatabase.cpp" bodystart="186" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1KnowledgeDatabase_1af7a172df084132e46be8ac20d5c2668f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mhf::KnowledgeDatabase::setPriorClutter</definition>
        <argsstring>(double prior_clutter)</argsstring>
        <name>setPriorClutter</name>
        <param>
          <type>double</type>
          <declname>prior_clutter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/KnowledgeDatabase.h" line="47" column="10" bodyfile="src/storage/KnowledgeDatabase.cpp" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1KnowledgeDatabase_1a1980f8a80e33739b29a3aaa35af67fc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mhf::KnowledgeDatabase::setPriorExisting</definition>
        <argsstring>(double prior_existing)</argsstring>
        <name>setPriorExisting</name>
        <param>
          <type>double</type>
          <declname>prior_existing</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/KnowledgeDatabase.h" line="45" column="10" bodyfile="src/storage/KnowledgeDatabase.cpp" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1KnowledgeDatabase_1a7b609b0650074331c426a1ea39309900" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mhf::KnowledgeDatabase::setPriorNew</definition>
        <argsstring>(double prior_new)</argsstring>
        <name>setPriorNew</name>
        <param>
          <type>double</type>
          <declname>prior_new</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/KnowledgeDatabase.h" line="43" column="10" bodyfile="src/storage/KnowledgeDatabase.cpp" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classmhf_1_1KnowledgeDatabase_1aa865d7a37e1e7570bbb4870817893111" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>mhf::KnowledgeDatabase::~KnowledgeDatabase</definition>
        <argsstring>()</argsstring>
        <name>~KnowledgeDatabase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/KnowledgeDatabase.h" line="27" column="13" bodyfile="src/storage/KnowledgeDatabase.cpp" bodystart="28" bodyend="32"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classmhf_1_1KnowledgeDatabase_1a80a353494ba607aaf119fffc1c4acaf8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mhf::KnowledgeDatabase::KnowledgeDatabase</definition>
        <argsstring>()</argsstring>
        <name>KnowledgeDatabase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wire/storage/KnowledgeDatabase.h" line="65" column="5" bodyfile="src/storage/KnowledgeDatabase.cpp" bodystart="24" bodyend="26"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4">
        <label>pbl::PDF</label>
        <link refid="classpbl_1_1PDF" external="/home/docker/ros/noetic/system/build/docs/problib/tags"/>
      </node>
      <node id="3">
        <label>pbl::PMF</label>
        <link refid="classpbl_1_1PMF" external="/home/docker/ros/noetic/system/build/docs/problib/tags"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>ptr_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::map&lt; std::string, mhf::ClassModel * &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="5">
        <label>pbl::PMF::PMFStruct</label>
        <link refid="structpbl_1_1PMF_1_1PMFStruct" external="/home/docker/ros/noetic/system/build/docs/problib/tags"/>
        <childnode refid="6" relation="usage">
          <edgelabel>pmf_</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::map&lt; std::string, double &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="1">
        <label>mhf::KnowledgeDatabase</label>
        <link refid="classmhf_1_1KnowledgeDatabase"/>
        <childnode refid="2" relation="usage">
          <edgelabel>class_models_</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>class_pmf_</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>instance_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/wire/storage/KnowledgeDatabase.h" line="21" column="24" bodyfile="include/wire/storage/KnowledgeDatabase.h" bodystart="21" bodyend="79"/>
    <listofallmembers>
      <member refid="classmhf_1_1KnowledgeDatabase_1a91c364a09544cd25127c1fdecfa81c21" prot="public" virt="non-virtual"><scope>mhf::KnowledgeDatabase</scope><name>addClassModel</name></member>
      <member refid="classmhf_1_1KnowledgeDatabase_1ab07ca9e97f1555648becb658bf3a1273" prot="protected" virt="non-virtual"><scope>mhf::KnowledgeDatabase</scope><name>class_models_</name></member>
      <member refid="classmhf_1_1KnowledgeDatabase_1a507c045023cc87ed5fa0f0102417623a" prot="protected" virt="non-virtual"><scope>mhf::KnowledgeDatabase</scope><name>class_pmf_</name></member>
      <member refid="classmhf_1_1KnowledgeDatabase_1a22ea1f5ccd5e75441900d213499c4470" prot="public" virt="non-virtual"><scope>mhf::KnowledgeDatabase</scope><name>getClassDistribution</name></member>
      <member refid="classmhf_1_1KnowledgeDatabase_1a517baf800b5c635f124c2c1ac88d66d4" prot="public" virt="non-virtual"><scope>mhf::KnowledgeDatabase</scope><name>getClassModel</name></member>
      <member refid="classmhf_1_1KnowledgeDatabase_1a6a5728cede339cd65ba0864c4d367d86" prot="public" virt="non-virtual"><scope>mhf::KnowledgeDatabase</scope><name>getClassModels</name></member>
      <member refid="classmhf_1_1KnowledgeDatabase_1a1778408f2b240623cef6816c271ff6c5" prot="public" virt="non-virtual"><scope>mhf::KnowledgeDatabase</scope><name>getClutterPDFs</name></member>
      <member refid="classmhf_1_1KnowledgeDatabase_1a2ac4a788e8c094ea795027417ffaa6b9" prot="public" virt="non-virtual"><scope>mhf::KnowledgeDatabase</scope><name>getEstimator</name></member>
      <member refid="classmhf_1_1KnowledgeDatabase_1a95b7a82ae3f837ad5d1a926e711f939b" prot="public" virt="non-virtual"><scope>mhf::KnowledgeDatabase</scope><name>getInstance</name></member>
      <member refid="classmhf_1_1KnowledgeDatabase_1aacce40026a7b354c37a30b3363d13e6f" prot="public" virt="non-virtual"><scope>mhf::KnowledgeDatabase</scope><name>getNewPDFs</name></member>
      <member refid="classmhf_1_1KnowledgeDatabase_1a21a212a4e968b92e29952d925761173a" prot="public" virt="non-virtual"><scope>mhf::KnowledgeDatabase</scope><name>getPriorClutter</name></member>
      <member refid="classmhf_1_1KnowledgeDatabase_1a4545b68af6d3d9180133a51421b235ac" prot="public" virt="non-virtual"><scope>mhf::KnowledgeDatabase</scope><name>getPriorExisting</name></member>
      <member refid="classmhf_1_1KnowledgeDatabase_1a47df4a5101cbdeb4d95e3a1931a03dfe" prot="public" virt="non-virtual"><scope>mhf::KnowledgeDatabase</scope><name>getPriorNew</name></member>
      <member refid="classmhf_1_1KnowledgeDatabase_1aa85c6453180c3351ecd96dbd250ba843" prot="public" virt="non-virtual"><scope>mhf::KnowledgeDatabase</scope><name>getProbabilityClutter</name></member>
      <member refid="classmhf_1_1KnowledgeDatabase_1ab795cd19730f78ca693a016810bd34d0" prot="public" virt="non-virtual"><scope>mhf::KnowledgeDatabase</scope><name>getProbabilityExisting</name></member>
      <member refid="classmhf_1_1KnowledgeDatabase_1a68f835b3359ddfd2f399bb7e0db164f7" prot="public" virt="non-virtual"><scope>mhf::KnowledgeDatabase</scope><name>getProbabilityNew</name></member>
      <member refid="classmhf_1_1KnowledgeDatabase_1aaccce5dfd5239c9e6df78003e656743d" prot="public" virt="non-virtual"><scope>mhf::KnowledgeDatabase</scope><name>inferProperties</name></member>
      <member refid="classmhf_1_1KnowledgeDatabase_1a7a42c85185c6387e5eb801c4b9a31035" prot="protected" virt="non-virtual"><scope>mhf::KnowledgeDatabase</scope><name>instance_</name></member>
      <member refid="classmhf_1_1KnowledgeDatabase_1a80a353494ba607aaf119fffc1c4acaf8" prot="protected" virt="non-virtual"><scope>mhf::KnowledgeDatabase</scope><name>KnowledgeDatabase</name></member>
      <member refid="classmhf_1_1KnowledgeDatabase_1a6d3a4c49b6c8e078498093720d327e15" prot="protected" virt="non-virtual"><scope>mhf::KnowledgeDatabase</scope><name>prior_clutter_</name></member>
      <member refid="classmhf_1_1KnowledgeDatabase_1aa78d2f67e6e173799c818c4e8dc9eb9c" prot="protected" virt="non-virtual"><scope>mhf::KnowledgeDatabase</scope><name>prior_existing_</name></member>
      <member refid="classmhf_1_1KnowledgeDatabase_1a06486d483199d7f827f489e5b811ae79" prot="protected" virt="non-virtual"><scope>mhf::KnowledgeDatabase</scope><name>prior_new_</name></member>
      <member refid="classmhf_1_1KnowledgeDatabase_1af7a172df084132e46be8ac20d5c2668f" prot="public" virt="non-virtual"><scope>mhf::KnowledgeDatabase</scope><name>setPriorClutter</name></member>
      <member refid="classmhf_1_1KnowledgeDatabase_1a1980f8a80e33739b29a3aaa35af67fc4" prot="public" virt="non-virtual"><scope>mhf::KnowledgeDatabase</scope><name>setPriorExisting</name></member>
      <member refid="classmhf_1_1KnowledgeDatabase_1a7b609b0650074331c426a1ea39309900" prot="public" virt="non-virtual"><scope>mhf::KnowledgeDatabase</scope><name>setPriorNew</name></member>
      <member refid="classmhf_1_1KnowledgeDatabase_1aa865d7a37e1e7570bbb4870817893111" prot="public" virt="virtual"><scope>mhf::KnowledgeDatabase</scope><name>~KnowledgeDatabase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
