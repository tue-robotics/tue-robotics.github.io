<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="generate__evidence_8cpp" kind="file" language="C++">
    <compoundname>generate_evidence.cpp</compoundname>
    <includes local="no">ros/ros.h</includes>
    <includes local="yes">wire_msgs/WorldEvidence.h</includes>
    <includes local="yes">wire_msgs/ObjectEvidence.h</includes>
    <includes local="yes">problib/conversions.h</includes>
    <incdepgraph>
      <node id="5">
        <label>problib/conversions.h</label>
        <link refid="conversions_8h.html" external="/home/docker/ros/noetic/system/build/docs/problib/tags"/>
      </node>
      <node id="3">
        <label>wire_msgs/WorldEvidence.h</label>
      </node>
      <node id="4">
        <label>wire_msgs/ObjectEvidence.h</label>
      </node>
      <node id="1">
        <label>generate_evidence.cpp</label>
        <link refid="generate__evidence_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ros/ros.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="generate__evidence_8cpp_1a0cae83d0aefb15576b2389260df2d46f" prot="public" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher world_evidence_publisher_</definition>
        <argsstring></argsstring>
        <name>world_evidence_publisher_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/generate_evidence.cpp" line="16" column="16" bodyfile="src/generate_evidence.cpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="generate__evidence_8cpp_1aa0fe280fe5ba221bec25c93449c4c305" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addEvidence</definition>
        <argsstring>(wire_msgs::WorldEvidence &amp;world_evidence, double x, double y, double z, const std::string &amp;class_label, const std::string &amp;color)</argsstring>
        <name>addEvidence</name>
        <param>
          <type>wire_msgs::WorldEvidence &amp;</type>
          <declname>world_evidence</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>class_label</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/generate_evidence.cpp" line="19" column="6" bodyfile="src/generate_evidence.cpp" bodystart="19" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="generate__evidence_8cpp_1ac1ced3e523403bdde84fab657c62812c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void generateEvidence</definition>
        <argsstring>()</argsstring>
        <name>generateEvidence</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/generate_evidence.cpp" line="55" column="6" bodyfile="src/generate_evidence.cpp" bodystart="55" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="generate__evidence_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Main </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/generate_evidence.cpp" line="76" column="5" bodyfile="src/generate_evidence.cpp" bodystart="76" bodyend="94"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>generate_evidence.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>Nov<sp/>12,<sp/>2012</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>jelfring</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/ros.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;wire_msgs/WorldEvidence.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;wire_msgs/ObjectEvidence.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="conversions_8h.html" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">problib/conversions.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Publisher<sp/>used<sp/>to<sp/>send<sp/>evidence<sp/>to<sp/>world<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="generate__evidence_8cpp_1a0cae83d0aefb15576b2389260df2d46f" refkind="member"><highlight class="normal">ros::Publisher<sp/><ref refid="generate__evidence_8cpp_1a0cae83d0aefb15576b2389260df2d46f" kindref="member">world_evidence_publisher_</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="generate__evidence_8cpp_1aa0fe280fe5ba221bec25c93449c4c305" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="generate__evidence_8cpp_1aa0fe280fe5ba221bec25c93449c4c305" kindref="member">addEvidence</ref>(wire_msgs::WorldEvidence&amp;<sp/>world_evidence,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>class_label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wire_msgs::ObjectEvidence<sp/>obj_evidence;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>continuous<sp/>position<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wire_msgs::Property<sp/>posProp;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>posProp.attribute<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;position&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>position<sp/>(x,y,z),<sp/>set<sp/>the<sp/>covariance<sp/>matrix<sp/>as<sp/>0.005*identity_matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepbl_1a27c7ec453adb3a1a495911fa8f0d3e97" kindref="member" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::PDFtoMsg</ref>(<ref refid="classpbl_1_1Gaussian" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::Gaussian</ref>(<ref refid="classpbl_1_1Vector3" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::Vector3</ref>(x,<sp/>y,<sp/>z),<sp/><ref refid="classpbl_1_1Matrix3" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::Matrix3</ref>(0.0005,<sp/>0.0005,<sp/>0.0005)),<sp/>posProp.pdf);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj_evidence.properties.push_back(posProp);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>discrete<sp/>class<sp/>label<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wire_msgs::Property<sp/>classProp;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classProp.attribute<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;class_label&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpbl_1_1PMF" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::PMF</ref><sp/>classPMF;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Probability<sp/>of<sp/>the<sp/>class<sp/>label<sp/>is<sp/>0.7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classPMF.<ref refid="classpbl_1_1PMF_1ac201a689345d7ce1e9eeee509c30c9a7" kindref="member" external="/home/docker/ros/noetic/system/build/docs/problib/tags">setProbability</ref>(class_label,<sp/>0.7);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepbl_1a27c7ec453adb3a1a495911fa8f0d3e97" kindref="member" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::PDFtoMsg</ref>(classPMF,<sp/>classProp.pdf);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj_evidence.properties.push_back(classProp);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>discrete<sp/>color<sp/>property<sp/>with<sp/>a<sp/>probability<sp/>of<sp/>0.9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wire_msgs::Property<sp/>colorProp;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colorProp.attribute<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;color&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpbl_1_1PMF" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::PMF</ref><sp/>colorPMF;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>probability<sp/>of<sp/>the<sp/>detected<sp/>color<sp/>is<sp/>0.9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colorPMF.<ref refid="classpbl_1_1PMF_1ac201a689345d7ce1e9eeee509c30c9a7" kindref="member" external="/home/docker/ros/noetic/system/build/docs/problib/tags">setProbability</ref>(color,<sp/>0.1);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepbl_1a27c7ec453adb3a1a495911fa8f0d3e97" kindref="member" external="/home/docker/ros/noetic/system/build/docs/problib/tags">pbl::PDFtoMsg</ref>(colorPMF,<sp/>colorProp.pdf);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj_evidence.properties.push_back(colorProp);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>all<sp/>properties<sp/>to<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>world_evidence.object_evidence.push_back(obj_evidence);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="generate__evidence_8cpp_1ac1ced3e523403bdde84fab657c62812c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="generate__evidence_8cpp_1ac1ced3e523403bdde84fab657c62812c" kindref="member">generateEvidence</ref>()<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>world<sp/>evidence<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wire_msgs::WorldEvidence<sp/>world_evidence;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>world_evidence.header.stamp<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>world_evidence.header.frame_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/map&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>evidence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="generate__evidence_8cpp_1aa0fe280fe5ba221bec25c93449c4c305" kindref="member">addEvidence</ref>(world_evidence,<sp/>2,<sp/>2.2,<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;mug&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;red&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Publish<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="generate__evidence_8cpp_1a0cae83d0aefb15576b2389260df2d46f" kindref="member">world_evidence_publisher_</ref>.publish(world_evidence);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Published<sp/>world<sp/>evidence<sp/>with<sp/>size<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>world_evidence.object_evidence.size());</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="generate__evidence_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="generate__evidence_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>ros<sp/>and<sp/>create<sp/>node<sp/>handle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ros::init(argc,argv,</highlight><highlight class="stringliteral">&quot;generate_evidence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ros::NodeHandle<sp/>nh;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Publisher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="generate__evidence_8cpp_1a0cae83d0aefb15576b2389260df2d46f" kindref="member">world_evidence_publisher_</ref><sp/>=<sp/>nh.advertise&lt;wire_msgs::WorldEvidence&gt;(</highlight><highlight class="stringliteral">&quot;/world_evidence&quot;</highlight><highlight class="normal">,<sp/>100);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Publish<sp/>with<sp/>3<sp/>Hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ros::Rate<sp/>r(3.0);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ros::ok())<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="generate__evidence_8cpp_1ac1ced3e523403bdde84fab657c62812c" kindref="member">generateEvidence</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.sleep();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/generate_evidence.cpp"/>
  </compounddef>
</doxygen>
