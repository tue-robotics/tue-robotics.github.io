<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classglobal__planner_1_1GlobalPlanner" kind="class" language="C++" prot="public">
    <compoundname>global_planner::GlobalPlanner</compoundname>
    <basecompoundref prot="public" virt="non-virtual">BaseGlobalPlanner</basecompoundref>
    <derivedcompoundref refid="classglobal__planner_1_1PlannerWithCostmap" prot="public" virt="non-virtual">global_planner::PlannerWithCostmap</derivedcompoundref>
    <includes refid="planner__core_8h" local="no">planner_core.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classglobal__planner_1_1GlobalPlanner_1adc356fbcaa27c897710becc5f7ad9777" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool global_planner::GlobalPlanner::allow_unknown_</definition>
        <argsstring></argsstring>
        <name>allow_unknown_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="174" column="27" bodyfile="include/global_planner/planner_core.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classglobal__planner_1_1GlobalPlanner_1a790fb19fb46e1a1edc15f98b1075e849" prot="protected" static="no" mutable="no">
        <type><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">costmap_2d::Costmap2D</ref> *</type>
        <definition>costmap_2d::Costmap2D* global_planner::GlobalPlanner::costmap_</definition>
        <argsstring></argsstring>
        <name>costmap_</name>
        <briefdescription>
<para>Store a copy of the current costmap in <emphasis>costmap</emphasis>. Called by makePlan. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="171" column="31" bodyfile="include/global_planner/planner_core.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classglobal__planner_1_1GlobalPlanner_1a4a8bf49e32dcae69b02adabe35b99ed0" prot="protected" static="no" mutable="no">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>std::string global_planner::GlobalPlanner::frame_id_</definition>
        <argsstring></argsstring>
        <name>frame_id_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="172" column="21" bodyfile="include/global_planner/planner_core.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classglobal__planner_1_1GlobalPlanner_1abd54fe2b4a6f92fec92e49da3739e016" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool global_planner::GlobalPlanner::initialized_</definition>
        <argsstring></argsstring>
        <name>initialized_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="174" column="14" bodyfile="include/global_planner/planner_core.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classglobal__planner_1_1GlobalPlanner_1ae90f4043291a203f62ad9259796792dc" prot="protected" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher global_planner::GlobalPlanner::plan_pub_</definition>
        <argsstring></argsstring>
        <name>plan_pub_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="173" column="24" bodyfile="include/global_planner/planner_core.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classglobal__planner_1_1GlobalPlanner_1a37202a2306bebdc0cc0326820700bbc0" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float global_planner::GlobalPlanner::convert_offset_</definition>
        <argsstring></argsstring>
        <name>convert_offset_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="201" column="15" bodyfile="include/global_planner/planner_core.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classglobal__planner_1_1GlobalPlanner_1a111644f8646ee899752df06f8f5d9344" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double global_planner::GlobalPlanner::default_tolerance_</definition>
        <argsstring></argsstring>
        <name>default_tolerance_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="182" column="52" bodyfile="include/global_planner/planner_core.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classglobal__planner_1_1GlobalPlanner_1a02d7c6a1d3736d4a19fa53391a286b73" prot="private" static="no" mutable="no">
        <type>dynamic_reconfigure::Server&lt; global_planner::GlobalPlannerConfig &gt; *</type>
        <definition>dynamic_reconfigure::Server&lt;global_planner::GlobalPlannerConfig&gt;* global_planner::GlobalPlanner::dsrv_</definition>
        <argsstring></argsstring>
        <name>dsrv_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="205" column="37" bodyfile="include/global_planner/planner_core.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classglobal__planner_1_1GlobalPlanner_1a181cc3fec157f84a44a4125a6440f6a7" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int global_planner::GlobalPlanner::end_x_</definition>
        <argsstring></argsstring>
        <name>end_x_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="198" column="40" bodyfile="include/global_planner/planner_core.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classglobal__planner_1_1GlobalPlanner_1a7858d8bad5a65ce6b2809c104312e04d" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int global_planner::GlobalPlanner::end_y_</definition>
        <argsstring></argsstring>
        <name>end_y_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="198" column="47" bodyfile="include/global_planner/planner_core.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classglobal__planner_1_1GlobalPlanner_1a00c4876b5681cccdef93ac180b792439" prot="private" static="no" mutable="no">
        <type>ros::ServiceServer</type>
        <definition>ros::ServiceServer global_planner::GlobalPlanner::make_plan_srv_</definition>
        <argsstring></argsstring>
        <name>make_plan_srv_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="184" column="28" bodyfile="include/global_planner/planner_core.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classglobal__planner_1_1GlobalPlanner_1a4be9e56d865efa801b5ad4a9c4e4ac4e" prot="private" static="no" mutable="no">
        <type>boost::mutex</type>
        <definition>boost::mutex global_planner::GlobalPlanner::mutex_</definition>
        <argsstring></argsstring>
        <name>mutex_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="183" column="22" bodyfile="include/global_planner/planner_core.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classglobal__planner_1_1GlobalPlanner_1a4fa7c15cefc10553b6b3080a72d64201" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool global_planner::GlobalPlanner::old_navfn_behavior_</definition>
        <argsstring></argsstring>
        <name>old_navfn_behavior_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="200" column="14" bodyfile="include/global_planner/planner_core.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classglobal__planner_1_1GlobalPlanner_1a006d8a100ff49cca9a076822f6c1403b" prot="private" static="no" mutable="no">
        <type><ref refid="classglobal__planner_1_1OrientationFilter" kindref="compound">OrientationFilter</ref> *</type>
        <definition>OrientationFilter* global_planner::GlobalPlanner::orientation_filter_</definition>
        <argsstring></argsstring>
        <name>orientation_filter_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="189" column="27" bodyfile="include/global_planner/planner_core.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classglobal__planner_1_1GlobalPlanner_1a442403698c352db9d20335768d258be9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool global_planner::GlobalPlanner::outline_map_</definition>
        <argsstring></argsstring>
        <name>outline_map_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="203" column="14" bodyfile="include/global_planner/planner_core.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classglobal__planner_1_1GlobalPlanner_1a9196cb2ef93cc1d25647bcc6d1f3c051" prot="private" static="no" mutable="no">
        <type><ref refid="classglobal__planner_1_1PotentialCalculator" kindref="compound">PotentialCalculator</ref> *</type>
        <definition>PotentialCalculator* global_planner::GlobalPlanner::p_calc_</definition>
        <argsstring></argsstring>
        <name>p_calc_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="186" column="29" bodyfile="include/global_planner/planner_core.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classglobal__planner_1_1GlobalPlanner_1ac67a13a5e6be407ea15b24f4ac424e59" prot="private" static="no" mutable="no">
        <type><ref refid="classglobal__planner_1_1Traceback" kindref="compound">Traceback</ref> *</type>
        <definition>Traceback* global_planner::GlobalPlanner::path_maker_</definition>
        <argsstring></argsstring>
        <name>path_maker_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="188" column="19" bodyfile="include/global_planner/planner_core.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classglobal__planner_1_1GlobalPlanner_1a79a3e9afebbcfff9bb3960aa7b57062f" prot="private" static="no" mutable="no">
        <type><ref refid="classglobal__planner_1_1Expander" kindref="compound">Expander</ref> *</type>
        <definition>Expander* global_planner::GlobalPlanner::planner_</definition>
        <argsstring></argsstring>
        <name>planner_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="187" column="18" bodyfile="include/global_planner/planner_core.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classglobal__planner_1_1GlobalPlanner_1a0038740762c928c508b6650f3eaa9bf5" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double global_planner::GlobalPlanner::planner_window_x_</definition>
        <argsstring></argsstring>
        <name>planner_window_x_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="182" column="16" bodyfile="include/global_planner/planner_core.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classglobal__planner_1_1GlobalPlanner_1a98d9f22a34a6522abecf360b59d9e29d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double global_planner::GlobalPlanner::planner_window_y_</definition>
        <argsstring></argsstring>
        <name>planner_window_y_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="182" column="34" bodyfile="include/global_planner/planner_core.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classglobal__planner_1_1GlobalPlanner_1a5c12f3c514ac17b13c30ab91795bc427" prot="private" static="no" mutable="no">
        <type>float *</type>
        <definition>float* global_planner::GlobalPlanner::potential_array_</definition>
        <argsstring></argsstring>
        <name>potential_array_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="197" column="15" bodyfile="include/global_planner/planner_core.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classglobal__planner_1_1GlobalPlanner_1a8c7179eb971553a465eb2dd4a73c0197" prot="private" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher global_planner::GlobalPlanner::potential_pub_</definition>
        <argsstring></argsstring>
        <name>potential_pub_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="192" column="24" bodyfile="include/global_planner/planner_core.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classglobal__planner_1_1GlobalPlanner_1a7a69e8248b531de15c2429239f3d4228" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool global_planner::GlobalPlanner::publish_potential_</definition>
        <argsstring></argsstring>
        <name>publish_potential_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="191" column="14" bodyfile="include/global_planner/planner_core.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classglobal__planner_1_1GlobalPlanner_1aa487da002de486bb50e3959a36f591be" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int global_planner::GlobalPlanner::publish_scale_</definition>
        <argsstring></argsstring>
        <name>publish_scale_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="193" column="13" bodyfile="include/global_planner/planner_core.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classglobal__planner_1_1GlobalPlanner_1afb12fc492007c12d84147ed07f792c7e" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int global_planner::GlobalPlanner::start_x_</definition>
        <argsstring></argsstring>
        <name>start_x_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="198" column="22" bodyfile="include/global_planner/planner_core.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classglobal__planner_1_1GlobalPlanner_1ae82d95a4c703fbff8de529ff0c893fdb" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int global_planner::GlobalPlanner::start_y_</definition>
        <argsstring></argsstring>
        <name>start_y_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="198" column="31" bodyfile="include/global_planner/planner_core.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classglobal__planner_1_1GlobalPlanner_1aa64e1114c4a78980256bd04bd0e79efa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool global_planner::GlobalPlanner::computePotential</definition>
        <argsstring>(const geometry_msgs::Point &amp;world_point)</argsstring>
        <name>computePotential</name>
        <param>
          <type>const geometry_msgs::Point &amp;</type>
          <declname>world_point</declname>
        </param>
        <briefdescription>
<para>Computes the full navigation function for the map given a point in the world to start from. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>world_point</parametername>
</parameternamelist>
<parameterdescription>
<para>The point to use for seeding the navigation function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the navigation function was computed successfully, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="121" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classglobal__planner_1_1GlobalPlanner_1a4bae9ef237ecc53aa3027abd3dc063b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool global_planner::GlobalPlanner::getPlanFromPotential</definition>
        <argsstring>(double start_x, double start_y, double end_x, double end_y, const geometry_msgs::PoseStamped &amp;goal, std::vector&lt; geometry_msgs::PoseStamped &gt; &amp;plan)</argsstring>
        <name>getPlanFromPotential</name>
        <param>
          <type>double</type>
          <declname>start_x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>start_y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>end_x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>end_y</declname>
        </param>
        <param>
          <type>const geometry_msgs::PoseStamped &amp;</type>
          <declname>goal</declname>
        </param>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::PoseStamped &gt; &amp;</type>
          <declname>plan</declname>
        </param>
        <briefdescription>
<para>Compute a plan to a goal after the potential for a start point has already been computed (Note: You should call computePotential first) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>start_x</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_y</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_x</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_y</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>goal</parametername>
</parameternamelist>
<parameterdescription>
<para>The goal pose to create a plan to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>plan</parametername>
</parameternamelist>
<parameterdescription>
<para>The plan... filled by the planner </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if a valid plan was found, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="133" column="14" bodyfile="src/planner_core.cpp" bodystart="382" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="classglobal__planner_1_1GlobalPlanner_1a7f0a8eaf0e715f682480ef447a63cd67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double global_planner::GlobalPlanner::getPointPotential</definition>
        <argsstring>(const geometry_msgs::Point &amp;world_point)</argsstring>
        <name>getPointPotential</name>
        <param>
          <type>const geometry_msgs::Point &amp;</type>
          <declname>world_point</declname>
        </param>
        <briefdescription>
<para>Get the potential, or naviagation cost, at a given point in the world (Note: You should call computePotential first) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>world_point</parametername>
</parameternamelist>
<parameterdescription>
<para>The point to get the potential for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The navigation function&apos;s value at that point in the world </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="142" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classglobal__planner_1_1GlobalPlanner_1a69b66f59b51665f826a51587afa720ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>global_planner::GlobalPlanner::GlobalPlanner</definition>
        <argsstring>()</argsstring>
        <name>GlobalPlanner</name>
        <briefdescription>
<para>Default constructor for the <ref refid="classPlannerCore" kindref="compound">PlannerCore</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="71" column="9" bodyfile="src/planner_core.cpp" bodystart="105" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classglobal__planner_1_1GlobalPlanner_1aaeb34983765b053861cbef08e9614bb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>global_planner::GlobalPlanner::GlobalPlanner</definition>
        <argsstring>(std::string name, costmap_2d::Costmap2D *costmap, std::string frame_id)</argsstring>
        <name>GlobalPlanner</name>
        <param>
          <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">costmap_2d::Costmap2D</ref> *</type>
          <declname>costmap</declname>
        </param>
        <param>
          <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
          <declname>frame_id</declname>
        </param>
        <briefdescription>
<para>Constructor for the <ref refid="classPlannerCore" kindref="compound">PlannerCore</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of this planner </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>costmap</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the costmap to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Frame of the costmap </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="79" column="9" bodyfile="src/planner_core.cpp" bodystart="111" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classglobal__planner_1_1GlobalPlanner_1af3ade8f9f487fe2ddd109f0845a6ffb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void global_planner::GlobalPlanner::initialize</definition>
        <argsstring>(std::string name, costmap_2d::Costmap2D *costmap, std::string frame_id)</argsstring>
        <name>initialize</name>
        <param>
          <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">costmap_2d::Costmap2D</ref> *</type>
          <declname>costmap</declname>
        </param>
        <param>
          <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
          <declname>frame_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="93" column="14" bodyfile="src/planner_core.cpp" bodystart="132" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classglobal__planner_1_1GlobalPlanner_1a280ebb6723d46b462eb66ec73a2fe266" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void global_planner::GlobalPlanner::initialize</definition>
        <argsstring>(std::string name, costmap_2d::Costmap2DROS *costmap_ros)</argsstring>
        <name>initialize</name>
        <param>
          <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classcostmap__2d_1_1Costmap2DROS" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">costmap_2d::Costmap2DROS</ref> *</type>
          <declname>costmap_ros</declname>
        </param>
        <briefdescription>
<para>Initialization function for the <ref refid="classPlannerCore" kindref="compound">PlannerCore</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of this planner </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>costmap_ros</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the ROS wrapper of the costmap to use for planning </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="91" column="14" bodyfile="src/planner_core.cpp" bodystart="128" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classglobal__planner_1_1GlobalPlanner_1a4f6bfa5acf58670c01a5b8c684a2f20c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool global_planner::GlobalPlanner::makePlan</definition>
        <argsstring>(const geometry_msgs::PoseStamped &amp;start, const geometry_msgs::PoseStamped &amp;goal, double tolerance, std::vector&lt; geometry_msgs::PoseStamped &gt; &amp;plan)</argsstring>
        <name>makePlan</name>
        <param>
          <type>const geometry_msgs::PoseStamped &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const geometry_msgs::PoseStamped &amp;</type>
          <declname>goal</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tolerance</declname>
        </param>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::PoseStamped &gt; &amp;</type>
          <declname>plan</declname>
        </param>
        <briefdescription>
<para>Given a goal pose in the world, compute a plan. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The start pose </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>goal</parametername>
</parameternamelist>
<parameterdescription>
<para>The goal pose </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tolerance</parametername>
</parameternamelist>
<parameterdescription>
<para>The tolerance on the goal point for the planner </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>plan</parametername>
</parameternamelist>
<parameterdescription>
<para>The plan... filled by the planner </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if a valid plan was found, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="113" column="14" bodyfile="src/planner_core.cpp" bodystart="254" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="classglobal__planner_1_1GlobalPlanner_1abb7f40f6a851f88e6b7668a38571712a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool global_planner::GlobalPlanner::makePlan</definition>
        <argsstring>(const geometry_msgs::PoseStamped &amp;start, const geometry_msgs::PoseStamped &amp;goal, std::vector&lt; geometry_msgs::PoseStamped &gt; &amp;plan)</argsstring>
        <name>makePlan</name>
        <param>
          <type>const geometry_msgs::PoseStamped &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const geometry_msgs::PoseStamped &amp;</type>
          <declname>goal</declname>
        </param>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::PoseStamped &gt; &amp;</type>
          <declname>plan</declname>
        </param>
        <briefdescription>
<para>Given a goal pose in the world, compute a plan. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The start pose </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>goal</parametername>
</parameternamelist>
<parameterdescription>
<para>The goal pose </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>plan</parametername>
</parameternamelist>
<parameterdescription>
<para>The plan... filled by the planner </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if a valid plan was found, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="102" column="14" bodyfile="src/planner_core.cpp" bodystart="249" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classglobal__planner_1_1GlobalPlanner_1a760dc206a99babddfacded0558d35208" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool global_planner::GlobalPlanner::makePlanService</definition>
        <argsstring>(nav_msgs::GetPlan::Request &amp;req, nav_msgs::GetPlan::Response &amp;resp)</argsstring>
        <name>makePlanService</name>
        <param>
          <type>nav_msgs::GetPlan::Request &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>nav_msgs::GetPlan::Response &amp;</type>
          <declname>resp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="164" column="14" bodyfile="src/planner_core.cpp" bodystart="219" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classglobal__planner_1_1GlobalPlanner_1a9844153b2bea9032522a2ed528be963f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void global_planner::GlobalPlanner::publishPlan</definition>
        <argsstring>(const std::vector&lt; geometry_msgs::PoseStamped &gt; &amp;path)</argsstring>
        <name>publishPlan</name>
        <param>
          <type>const <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::PoseStamped &gt; &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Publish a path for visualization purposes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="162" column="14" bodyfile="src/planner_core.cpp" bodystart="360" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="classglobal__planner_1_1GlobalPlanner_1a7c50827ebb21a48825d55bda56dd38ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool global_planner::GlobalPlanner::validPointPotential</definition>
        <argsstring>(const geometry_msgs::Point &amp;world_point)</argsstring>
        <name>validPointPotential</name>
        <param>
          <type>const geometry_msgs::Point &amp;</type>
          <declname>world_point</declname>
        </param>
        <briefdescription>
<para>Check for a valid potential value at a given point in the world (Note: You should call computePotential first) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>world_point</parametername>
</parameternamelist>
<parameterdescription>
<para>The point to get the potential for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the navigation function is valid at that point in the world, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="149" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classglobal__planner_1_1GlobalPlanner_1a27405d9450075e6dcc7fc73bd56fb6dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool global_planner::GlobalPlanner::validPointPotential</definition>
        <argsstring>(const geometry_msgs::Point &amp;world_point, double tolerance)</argsstring>
        <name>validPointPotential</name>
        <param>
          <type>const geometry_msgs::Point &amp;</type>
          <declname>world_point</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
<para>Check for a valid potential value at a given point in the world (Note: You should call computePotential first) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>world_point</parametername>
</parameternamelist>
<parameterdescription>
<para>The point to get the potential for </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tolerance</parametername>
</parameternamelist>
<parameterdescription>
<para>The tolerance on searching around the world_point specified </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the navigation function is valid at that point in the world, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="157" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classglobal__planner_1_1GlobalPlanner_1aa49ab75794afdbec6aa7c6c3902de4c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>global_planner::GlobalPlanner::~GlobalPlanner</definition>
        <argsstring>()</argsstring>
        <name>~GlobalPlanner</name>
        <briefdescription>
<para>Default deconstructor for the <ref refid="classPlannerCore" kindref="compound">PlannerCore</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="84" column="9" bodyfile="src/planner_core.cpp" bodystart="117" bodyend="126"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classglobal__planner_1_1GlobalPlanner_1a04cb531dc0326cc5bdcce752175ee030" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void global_planner::GlobalPlanner::clearRobotCell</definition>
        <argsstring>(const geometry_msgs::PoseStamped &amp;global_pose, unsigned int mx, unsigned int my)</argsstring>
        <name>clearRobotCell</name>
        <param>
          <type>const geometry_msgs::PoseStamped &amp;</type>
          <declname>global_pose</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>mx</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>my</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="179" column="14" bodyfile="src/planner_core.cpp" bodystart="208" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classglobal__planner_1_1GlobalPlanner_1a39a4e51153df87f6373d091084235720" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void global_planner::GlobalPlanner::mapToWorld</definition>
        <argsstring>(double mx, double my, double &amp;wx, double &amp;wy)</argsstring>
        <name>mapToWorld</name>
        <param>
          <type>double</type>
          <declname>mx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>my</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>wx</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>wy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="177" column="14" bodyfile="src/planner_core.cpp" bodystart="228" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classglobal__planner_1_1GlobalPlanner_1a166082482ed5973406af72a52f7cab20" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void global_planner::GlobalPlanner::outlineMap</definition>
        <argsstring>(unsigned char *costarr, int nx, int ny, unsigned char value)</argsstring>
        <name>outlineMap</name>
        <param>
          <type>unsigned char *</type>
          <declname>costarr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="195" column="14" bodyfile="src/planner_core.cpp" bodystart="90" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classglobal__planner_1_1GlobalPlanner_1a91c22ec25e6e8232ef2d73e6738f3857" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void global_planner::GlobalPlanner::publishPotential</definition>
        <argsstring>(float *potential)</argsstring>
        <name>publishPotential</name>
        <param>
          <type>float *</type>
          <declname>potential</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="180" column="14" bodyfile="src/planner_core.cpp" bodystart="428" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="classglobal__planner_1_1GlobalPlanner_1a466844ce6660d09e06c1dc1f87c03d30" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void global_planner::GlobalPlanner::reconfigureCB</definition>
        <argsstring>(global_planner::GlobalPlannerConfig &amp;config, uint32_t level)</argsstring>
        <name>reconfigureCB</name>
        <param>
          <type>global_planner::GlobalPlannerConfig &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="206" column="14" bodyfile="src/planner_core.cpp" bodystart="198" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classglobal__planner_1_1GlobalPlanner_1aec6ebc007afc963fec1eaed68e05bdf7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool global_planner::GlobalPlanner::worldToMap</definition>
        <argsstring>(double wx, double wy, double &amp;mx, double &amp;my)</argsstring>
        <name>worldToMap</name>
        <param>
          <type>double</type>
          <declname>wx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wy</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>mx</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>my</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/global_planner/planner_core.h" line="178" column="14" bodyfile="src/planner_core.cpp" bodystart="233" bodyend="247"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>global_planner::PlannerWithCostmap</label>
        <link refid="classglobal__planner_1_1PlannerWithCostmap"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>nav_core::BaseGlobalPlanner</label>
      </node>
      <node id="1">
        <label>global_planner::GlobalPlanner</label>
        <link refid="classglobal__planner_1_1GlobalPlanner"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>global_planner::OrientationFilter</label>
        <link refid="classglobal__planner_1_1OrientationFilter"/>
      </node>
      <node id="5">
        <label>global_planner::PotentialCalculator</label>
        <link refid="classglobal__planner_1_1PotentialCalculator"/>
      </node>
      <node id="8">
        <label>global_planner::Traceback</label>
        <link refid="classglobal__planner_1_1Traceback"/>
        <childnode refid="5" relation="usage">
          <edgelabel>p_calc_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>global_planner::Expander</label>
        <link refid="classglobal__planner_1_1Expander"/>
        <childnode refid="5" relation="usage">
          <edgelabel>p_calc_</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>costmap_2d::Costmap2D</label>
        <link refid="classcostmap__2d_1_1Costmap2D" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags"/>
      </node>
      <node id="2">
        <label>nav_core::BaseGlobalPlanner</label>
      </node>
      <node id="1">
        <label>global_planner::GlobalPlanner</label>
        <link refid="classglobal__planner_1_1GlobalPlanner"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>orientation_filter_</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>frame_id_</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>p_calc_</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>costmap_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>planner_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>path_maker_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::string</label>
        <link refid="cpp/string/basic_string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="include/global_planner/planner_core.h" line="66" column="55" bodyfile="include/global_planner/planner_core.h" bodystart="66" bodyend="208"/>
    <listofallmembers>
      <member refid="classglobal__planner_1_1GlobalPlanner_1adc356fbcaa27c897710becc5f7ad9777" prot="protected" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>allow_unknown_</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a04cb531dc0326cc5bdcce752175ee030" prot="private" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>clearRobotCell</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1aa64e1114c4a78980256bd04bd0e79efa" prot="public" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>computePotential</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a37202a2306bebdc0cc0326820700bbc0" prot="private" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>convert_offset_</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a790fb19fb46e1a1edc15f98b1075e849" prot="protected" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>costmap_</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a111644f8646ee899752df06f8f5d9344" prot="private" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>default_tolerance_</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a02d7c6a1d3736d4a19fa53391a286b73" prot="private" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>dsrv_</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a181cc3fec157f84a44a4125a6440f6a7" prot="private" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>end_x_</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a7858d8bad5a65ce6b2809c104312e04d" prot="private" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>end_y_</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a4a8bf49e32dcae69b02adabe35b99ed0" prot="protected" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>frame_id_</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a4bae9ef237ecc53aa3027abd3dc063b5" prot="public" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>getPlanFromPotential</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a7f0a8eaf0e715f682480ef447a63cd67" prot="public" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>getPointPotential</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a69b66f59b51665f826a51587afa720ff" prot="public" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>GlobalPlanner</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1aaeb34983765b053861cbef08e9614bb5" prot="public" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>GlobalPlanner</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a280ebb6723d46b462eb66ec73a2fe266" prot="public" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>initialize</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1af3ade8f9f487fe2ddd109f0845a6ffb2" prot="public" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>initialize</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1abd54fe2b4a6f92fec92e49da3739e016" prot="protected" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>initialized_</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a00c4876b5681cccdef93ac180b792439" prot="private" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>make_plan_srv_</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1abb7f40f6a851f88e6b7668a38571712a" prot="public" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>makePlan</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a4f6bfa5acf58670c01a5b8c684a2f20c" prot="public" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>makePlan</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a760dc206a99babddfacded0558d35208" prot="public" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>makePlanService</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a39a4e51153df87f6373d091084235720" prot="private" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>mapToWorld</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a4be9e56d865efa801b5ad4a9c4e4ac4e" prot="private" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>mutex_</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a4fa7c15cefc10553b6b3080a72d64201" prot="private" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>old_navfn_behavior_</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a006d8a100ff49cca9a076822f6c1403b" prot="private" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>orientation_filter_</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a442403698c352db9d20335768d258be9" prot="private" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>outline_map_</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a166082482ed5973406af72a52f7cab20" prot="private" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>outlineMap</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a9196cb2ef93cc1d25647bcc6d1f3c051" prot="private" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>p_calc_</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1ac67a13a5e6be407ea15b24f4ac424e59" prot="private" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>path_maker_</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1ae90f4043291a203f62ad9259796792dc" prot="protected" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>plan_pub_</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a79a3e9afebbcfff9bb3960aa7b57062f" prot="private" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>planner_</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a0038740762c928c508b6650f3eaa9bf5" prot="private" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>planner_window_x_</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a98d9f22a34a6522abecf360b59d9e29d" prot="private" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>planner_window_y_</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a5c12f3c514ac17b13c30ab91795bc427" prot="private" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>potential_array_</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a8c7179eb971553a465eb2dd4a73c0197" prot="private" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>potential_pub_</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a7a69e8248b531de15c2429239f3d4228" prot="private" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>publish_potential_</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1aa487da002de486bb50e3959a36f591be" prot="private" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>publish_scale_</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a9844153b2bea9032522a2ed528be963f" prot="public" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>publishPlan</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a91c22ec25e6e8232ef2d73e6738f3857" prot="private" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>publishPotential</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a466844ce6660d09e06c1dc1f87c03d30" prot="private" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>reconfigureCB</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1afb12fc492007c12d84147ed07f792c7e" prot="private" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>start_x_</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1ae82d95a4c703fbff8de529ff0c893fdb" prot="private" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>start_y_</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a7c50827ebb21a48825d55bda56dd38ac" prot="public" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>validPointPotential</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1a27405d9450075e6dcc7fc73bd56fb6dc" prot="public" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>validPointPotential</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1aec6ebc007afc963fec1eaed68e05bdf7" prot="private" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>worldToMap</name></member>
      <member refid="classglobal__planner_1_1GlobalPlanner_1aa49ab75794afdbec6aa7c6c3902de4c0" prot="public" virt="non-virtual"><scope>global_planner::GlobalPlanner</scope><name>~GlobalPlanner</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
