image_recognition_rqt.test
==========================

.. py:module:: image_recognition_rqt.test


Attributes
----------

.. autoapisummary::

   image_recognition_rqt.test._SUPPORTED_SERVICES


Classes
-------

.. autoapisummary::

   image_recognition_rqt.test.TestPlugin


Module Contents
---------------

.. py:data:: _SUPPORTED_SERVICES
   :value: ['image_recognition_msgs/Recognize', 'image_recognition_msgs/GetFaceProperties']


.. py:class:: TestPlugin(context)

   Bases: :py:obj:`qt_gui.plugin.Plugin`


   
   TestPlugin class to evaluate the image_recognition_msgs interfaces

   :param context: QT context, aka parent


   .. py:attribute:: _widget


   .. py:attribute:: _image_widget


   .. py:attribute:: _info


   .. py:attribute:: bridge


   .. py:attribute:: _sub
      :value: None



   .. py:attribute:: _srv
      :value: None



   .. py:method:: recognize_srv_call(roi_image)

      Method that calls the Recognize.srv

      :param roi_image: Selected roi_image by the user



   .. py:method:: get_face_properties_srv_call(roi_image)

      Method that calls the GetFaceProperties.srv

      :param roi_image: Selected roi_image by the user



   .. py:method:: image_roi_callback(roi_image)

      Callback triggered when the user has drawn an ROI on the image

      :param roi_image: The opencv image in the ROI



   .. py:method:: _image_callback(msg)

      Sensor_msgs/Image callback

      :param msg: The image message



   .. py:method:: trigger_configuration()

      Callback when the configuration button is clicked



   .. py:method:: _create_subscriber(topic_name)

      Method that creates a subscriber to a sensor_msgs/Image topic

      :param topic_name: The topic_name



   .. py:method:: _create_service_client(srv_name)

      Method that creates a client service proxy to call either the GetFaceProperties.srv or the Recognize.srv

      :param srv_name:



   .. py:method:: shutdown_plugin()

      Callback function when shutdown is requested



   .. py:method:: save_settings(plugin_settings, instance_settings)

      Callback function on shutdown to store the local plugin variables

      :param plugin_settings: Plugin settings
      :param instance_settings: Settings of this instance



   .. py:method:: restore_settings(plugin_settings, instance_settings)

      Callback function fired on load of the plugin that allows to restore saved variables

      :param plugin_settings: Plugin settings
      :param instance_settings: Settings of this instance



