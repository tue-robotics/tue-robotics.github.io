image_recognition_rqt.image_widget
==================================

.. py:module:: image_recognition_rqt.image_widget


Classes
-------

.. autoapisummary::

   image_recognition_rqt.image_widget.ImageWidget


Functions
---------

.. autoapisummary::

   image_recognition_rqt.image_widget._convert_cv_to_qt_image
   image_recognition_rqt.image_widget._get_roi_from_rect


Module Contents
---------------

.. py:function:: _convert_cv_to_qt_image(cv_image)

   Method to convert an opencv image to a QT image

   :param cv_image: The opencv image
   :return: The QT Image


.. py:function:: _get_roi_from_rect(rect)

   Returns the ROI from a rectangle, the rectangle can have the top and bottom flipped

   :param rect: Rect to get roi from
   :return: x, y, width, height of ROI


.. py:class:: ImageWidget(parent, image_roi_callback, clear_on_click=False)

   Bases: :py:obj:`QWidget`


   
   Image widget that allows drawing rectangles and firing a image_roi_callback

   :param parent: The parent QT Widget
   :param image_roi_callback: The callback function when a ROI is drawn


   .. py:attribute:: _cv_image
      :value: None



   .. py:attribute:: _qt_image


   .. py:attribute:: clip_rect


   .. py:attribute:: dragging
      :value: False



   .. py:attribute:: drag_offset


   .. py:attribute:: image_roi_callback


   .. py:attribute:: detections
      :value: []



   .. py:attribute:: _clear_on_click
      :value: False



   .. py:method:: paintEvent(event)

      Called every tick, paint event of QT

      :param event: Paint event of QT



   .. py:method:: get_roi_image()


   .. py:method:: set_image(image)

      Sets an opencv image to the widget

      :param image: The opencv image



   .. py:method:: add_detection(x, y, width, height, label)

      Adds a detection to the image

      :param x: ROI_X
      :param y: ROI_Y
      :param width: ROI_WIDTH
      :param height: ROI_HEIGHT
      :param label: Text to draw



   .. py:method:: clear()


   .. py:method:: get_roi()


   .. py:method:: mousePressEvent(event)

      Mousepress callback

      :param event: mouse event



   .. py:method:: mouseMoveEvent(event)

      Mousemove event

      :param event: mouse event



   .. py:method:: mouseReleaseEvent(event)

      Mouse release event

      :param event: mouse event



