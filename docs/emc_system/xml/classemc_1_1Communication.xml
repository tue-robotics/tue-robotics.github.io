<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classemc_1_1Communication" kind="class" language="C++" prot="public">
    <compoundname>emc::Communication</compoundname>
    <includes refid="communication_8h" local="no">communication.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classemc_1_1Communication_1abf66ff2c41e0aa279c6b1e91d5161b0f" prot="private" static="no" mutable="no">
        <type>ros::CallbackQueue</type>
        <definition>ros::CallbackQueue emc::Communication::bumper_b_cb_queue_</definition>
        <argsstring></argsstring>
        <name>bumper_b_cb_queue_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="124" column="24" bodyfile="include/emc/communication.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemc_1_1Communication_1a4263cda0c2390bce0cd21d5448f3c2ef" prot="private" static="no" mutable="no">
        <type>std_msgs::BoolConstPtr</type>
        <definition>std_msgs::BoolConstPtr emc::Communication::bumper_b_msg_</definition>
        <argsstring></argsstring>
        <name>bumper_b_msg_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="130" column="28" bodyfile="include/emc/communication.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemc_1_1Communication_1ae15ace4273ab51061660675f79e44f64" prot="private" static="no" mutable="no">
        <type>ros::CallbackQueue</type>
        <definition>ros::CallbackQueue emc::Communication::bumper_f_cb_queue_</definition>
        <argsstring></argsstring>
        <name>bumper_f_cb_queue_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="123" column="24" bodyfile="include/emc/communication.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemc_1_1Communication_1a0513400bb35dac4d8a7eccc462d13e89" prot="private" static="no" mutable="no">
        <type>std_msgs::BoolConstPtr</type>
        <definition>std_msgs::BoolConstPtr emc::Communication::bumper_f_msg_</definition>
        <argsstring></argsstring>
        <name>bumper_f_msg_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="129" column="28" bodyfile="include/emc/communication.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemc_1_1Communication_1a895ef25f3beab1e7d4d26be35a0a7373" prot="private" static="no" mutable="no">
        <type>ros::CallbackQueue</type>
        <definition>ros::CallbackQueue emc::Communication::laser_cb_queue_</definition>
        <argsstring></argsstring>
        <name>laser_cb_queue_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="93" column="24" bodyfile="include/emc/communication.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemc_1_1Communication_1a3c107556d408706bb3a5dfb1117554e7" prot="private" static="no" mutable="no">
        <type>sensor_msgs::LaserScanConstPtr</type>
        <definition>sensor_msgs::LaserScanConstPtr emc::Communication::laser_msg_</definition>
        <argsstring></argsstring>
        <name>laser_msg_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="97" column="36" bodyfile="include/emc/communication.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemc_1_1Communication_1ab3fdb3645be0d90be776ebe4ace095a1" prot="private" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher emc::Communication::localization_visualization_pub_laser_msg_</definition>
        <argsstring></argsstring>
        <name>localization_visualization_pub_laser_msg_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="82" column="20" bodyfile="include/emc/communication.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemc_1_1Communication_1a5d67a0e5b0bb1bc7a16e7eac7184bad9" prot="private" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher emc::Communication::localization_visualization_pub_particle_</definition>
        <argsstring></argsstring>
        <name>localization_visualization_pub_particle_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="83" column="20" bodyfile="include/emc/communication.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemc_1_1Communication_1af9cd63154e3dd0de23ffbfcf24c0c491" prot="private" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher emc::Communication::localization_visualization_pub_pose_</definition>
        <argsstring></argsstring>
        <name>localization_visualization_pub_pose_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="84" column="20" bodyfile="include/emc/communication.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemc_1_1Communication_1ac30dfa6b564fceab91a03befe17f01f2" prot="private" static="no" mutable="no">
        <type>ros::CallbackQueue</type>
        <definition>ros::CallbackQueue emc::Communication::odom_cb_queue_</definition>
        <argsstring></argsstring>
        <name>odom_cb_queue_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="113" column="24" bodyfile="include/emc/communication.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemc_1_1Communication_1a8d2d083e064e52336c27eeb935ead976" prot="private" static="no" mutable="no">
        <type>nav_msgs::OdometryConstPtr</type>
        <definition>nav_msgs::OdometryConstPtr emc::Communication::odom_msg_</definition>
        <argsstring></argsstring>
        <name>odom_msg_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="117" column="32" bodyfile="include/emc/communication.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemc_1_1Communication_1adc2783600d0485cbdbede11326d3c2a3" prot="private" static="no" mutable="no">
        <type>ros::CallbackQueue</type>
        <definition>ros::CallbackQueue emc::Communication::pose_cb_queue_</definition>
        <argsstring></argsstring>
        <name>pose_cb_queue_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="103" column="24" bodyfile="include/emc/communication.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemc_1_1Communication_1afb127075a08b469950d01130eaaef709" prot="private" static="no" mutable="no">
        <type>geometry_msgs::PoseStampedConstPtr</type>
        <definition>geometry_msgs::PoseStampedConstPtr emc::Communication::pose_msg_</definition>
        <argsstring></argsstring>
        <name>pose_msg_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="107" column="40" bodyfile="include/emc/communication.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemc_1_1Communication_1aad683970f9f220db687869d390da92d3" prot="private" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher emc::Communication::pub_base_ref_</definition>
        <argsstring></argsstring>
        <name>pub_base_ref_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="71" column="20" bodyfile="include/emc/communication.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemc_1_1Communication_1a6029e9c32b48fe1542f3a6bfa14a3792" prot="private" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher emc::Communication::pub_marker_</definition>
        <argsstring></argsstring>
        <name>pub_marker_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="79" column="20" bodyfile="include/emc/communication.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemc_1_1Communication_1af52ff1708325495a928b6c995ea0c9d0" prot="private" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher emc::Communication::pub_open_door_</definition>
        <argsstring></argsstring>
        <name>pub_open_door_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="73" column="20" bodyfile="include/emc/communication.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemc_1_1Communication_1a19b1cfef24bdc4172584cdd4fbb4c022" prot="private" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher emc::Communication::pub_play_</definition>
        <argsstring></argsstring>
        <name>pub_play_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="77" column="20" bodyfile="include/emc/communication.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemc_1_1Communication_1a622aabdedc6d2c146a614d351f760207" prot="private" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher emc::Communication::pub_speak_</definition>
        <argsstring></argsstring>
        <name>pub_speak_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="75" column="20" bodyfile="include/emc/communication.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemc_1_1Communication_1a8c39380053282b791d0da91b1d85ece6" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/memory/unique_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::unique_ptr</ref>&lt; tf2_ros::TransformBroadcaster &gt;</type>
        <definition>std::unique_ptr&lt;tf2_ros::TransformBroadcaster&gt; emc::Communication::pub_tf2</definition>
        <argsstring></argsstring>
        <name>pub_tf2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="88" column="21" bodyfile="include/emc/communication.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemc_1_1Communication_1a5f25232f42a2f6a39b8365566266b160" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>std::string emc::Communication::robot_frame_name</definition>
        <argsstring></argsstring>
        <name>robot_frame_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="136" column="17" bodyfile="include/emc/communication.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemc_1_1Communication_1ac25b0dd2c32590840ce17ce80268b2b5" prot="private" static="no" mutable="no">
        <type>ros::Subscriber</type>
        <definition>ros::Subscriber emc::Communication::sub_bumper_b_</definition>
        <argsstring></argsstring>
        <name>sub_bumper_b_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="127" column="21" bodyfile="include/emc/communication.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemc_1_1Communication_1a6c5c83fe5a319eb4a478db28d2a34ad8" prot="private" static="no" mutable="no">
        <type>ros::Subscriber</type>
        <definition>ros::Subscriber emc::Communication::sub_bumper_f_</definition>
        <argsstring></argsstring>
        <name>sub_bumper_f_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="126" column="21" bodyfile="include/emc/communication.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemc_1_1Communication_1a438a3c7724a6006a0439d17757876192" prot="private" static="no" mutable="no">
        <type>ros::Subscriber</type>
        <definition>ros::Subscriber emc::Communication::sub_laser_</definition>
        <argsstring></argsstring>
        <name>sub_laser_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="95" column="21" bodyfile="include/emc/communication.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemc_1_1Communication_1af183b3f9646528b8e2ba12ce8e22d9c6" prot="private" static="no" mutable="no">
        <type>ros::Subscriber</type>
        <definition>ros::Subscriber emc::Communication::sub_odom_</definition>
        <argsstring></argsstring>
        <name>sub_odom_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="115" column="21" bodyfile="include/emc/communication.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemc_1_1Communication_1a89ad0e951d608fbb476f358804a481f7" prot="private" static="no" mutable="no">
        <type>ros::Subscriber</type>
        <definition>ros::Subscriber emc::Communication::sub_pose_</definition>
        <argsstring></argsstring>
        <name>sub_pose_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="105" column="21" bodyfile="include/emc/communication.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classemc_1_1Communication_1ae3b0d63b9dfa833debec28b9252bdf4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>emc::Communication::Communication</definition>
        <argsstring>(std::string robot_name=&quot;pyro&quot;)</argsstring>
        <name>Communication</name>
        <param>
          <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
          <declname>robot_name</declname>
          <defval>&quot;pyro&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="33" column="5" bodyfile="src/communication.cpp" bodystart="20" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classemc_1_1Communication_1a9739cc6982d82ef650b178b1bd04d776" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void emc::Communication::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="37" column="10" bodyfile="src/communication.cpp" bodystart="82" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classemc_1_1Communication_1ae59f0d76b8e19221f59d9fe2e83e28a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void emc::Communication::localization_viz_send_laser_scan</definition>
        <argsstring>(double angle_min, double angle_max, double angle_inc, int subsample, std::vector&lt; float &gt; prediction)</argsstring>
        <name>localization_viz_send_laser_scan</name>
        <param>
          <type>double</type>
          <declname>angle_min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>angle_max</declname>
        </param>
        <param>
          <type>double</type>
          <declname>angle_inc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>subsample</declname>
        </param>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; float &gt;</type>
          <declname>prediction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="63" column="10" bodyfile="src/communication.cpp" bodystart="293" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="classemc_1_1Communication_1a00fda05f25c20b9fe8da1858075c1626" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void emc::Communication::localization_viz_send_particles</definition>
        <argsstring>(int N, std::vector&lt; std::vector&lt; double &gt;&gt; particle_poses, double mapOrientation)</argsstring>
        <name>localization_viz_send_particles</name>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; double &gt;&gt;</type>
          <declname>particle_poses</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mapOrientation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="64" column="10" bodyfile="src/communication.cpp" bodystart="313" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="classemc_1_1Communication_1a0bcda2e7156609d1ff962ae8d160c2cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void emc::Communication::localization_viz_send_pose</definition>
        <argsstring>(std::vector&lt; double &gt; pose, double mapOrientation)</argsstring>
        <name>localization_viz_send_pose</name>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; double &gt;</type>
          <declname>pose</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mapOrientation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="65" column="10" bodyfile="src/communication.cpp" bodystart="342" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="classemc_1_1Communication_1ac64c6003512280bb0fff4d7039d3d8ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void emc::Communication::play</definition>
        <argsstring>(const std::string &amp;file)</argsstring>
        <name>play</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="57" column="10" bodyfile="src/communication.cpp" bodystart="231" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classemc_1_1Communication_1a5de2d70c56df191430695cb95f299aff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool emc::Communication::readBackBumperData</definition>
        <argsstring>(BumperData &amp;bumper)</argsstring>
        <name>readBackBumperData</name>
        <param>
          <type><ref refid="structemc_1_1BumperData" kindref="compound">BumperData</ref> &amp;</type>
          <declname>bumper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="46" column="10" bodyfile="src/communication.cpp" bodystart="182" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classemc_1_1Communication_1ab576f92441cfa5ecc62c5cca6ac2a300" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool emc::Communication::readFrontBumperData</definition>
        <argsstring>(BumperData &amp;bumper)</argsstring>
        <name>readFrontBumperData</name>
        <param>
          <type><ref refid="structemc_1_1BumperData" kindref="compound">BumperData</ref> &amp;</type>
          <declname>bumper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="45" column="10" bodyfile="src/communication.cpp" bodystart="167" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classemc_1_1Communication_1a12aef35d6305dec65c6863c31dcdc036" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool emc::Communication::readLaserData</definition>
        <argsstring>(LaserData &amp;scan)</argsstring>
        <name>readLaserData</name>
        <param>
          <type><ref refid="structemc_1_1LaserData" kindref="compound">LaserData</ref> &amp;</type>
          <declname>scan</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="39" column="10" bodyfile="src/communication.cpp" bodystart="88" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classemc_1_1Communication_1af2030f80eff1942264b55b3d57265ac2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool emc::Communication::readOdometryData</definition>
        <argsstring>(OdometryData &amp;odom)</argsstring>
        <name>readOdometryData</name>
        <param>
          <type><ref refid="structemc_1_1OdometryData" kindref="compound">OdometryData</ref> &amp;</type>
          <declname>odom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="43" column="10" bodyfile="src/communication.cpp" bodystart="145" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classemc_1_1Communication_1a6a71ad12046f8227694e4a6488e4bf4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool emc::Communication::readPoseData</definition>
        <argsstring>(PoseData &amp;pose)</argsstring>
        <name>readPoseData</name>
        <param>
          <type><ref refid="structemc_1_1PoseData" kindref="compound">PoseData</ref> &amp;</type>
          <declname>pose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="41" column="10" bodyfile="src/communication.cpp" bodystart="109" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classemc_1_1Communication_1ad76f902170f2a6d3756648522b394e47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void emc::Communication::sendBaseVelocity</definition>
        <argsstring>(double vx, double vy, double va)</argsstring>
        <name>sendBaseVelocity</name>
        <param>
          <type>double</type>
          <declname>vx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>va</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="49" column="10" bodyfile="src/communication.cpp" bodystart="197" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classemc_1_1Communication_1a42fa2e9eb569a742e131f5be42c5e2af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void emc::Communication::sendMarker</definition>
        <argsstring>(visualization_msgs::Marker marker)</argsstring>
        <name>sendMarker</name>
        <param>
          <type>visualization_msgs::Marker</type>
          <declname>marker</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="53" column="10" bodyfile="src/communication.cpp" bodystart="217" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classemc_1_1Communication_1ad21e9aa974ba46cf438f6c38093385db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void emc::Communication::sendOpendoorRequest</definition>
        <argsstring>()</argsstring>
        <name>sendOpendoorRequest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="51" column="10" bodyfile="src/communication.cpp" bodystart="209" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classemc_1_1Communication_1a043f7d87a5a2348182769e9f8aa91550" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void emc::Communication::sendPoseEstimate</definition>
        <argsstring>(const geometry_msgs::Transform &amp;pose)</argsstring>
        <name>sendPoseEstimate</name>
        <param>
          <type>const geometry_msgs::Transform &amp;</type>
          <declname>pose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="60" column="10" bodyfile="src/communication.cpp" bodystart="238" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classemc_1_1Communication_1a40b4252ca429ab4fa4653dcf94b680b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void emc::Communication::speak</definition>
        <argsstring>(const std::string &amp;text)</argsstring>
        <name>speak</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="55" column="10" bodyfile="src/communication.cpp" bodystart="224" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classemc_1_1Communication_1a5e89681846861b2fc39e7685d634acc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>emc::Communication::~Communication</definition>
        <argsstring>()</argsstring>
        <name>~Communication</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="35" column="5" bodyfile="src/communication.cpp" bodystart="75" bodyend="78"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classemc_1_1Communication_1a14a11537e655e92e3678cdac405dc575" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void emc::Communication::bumperbCallback</definition>
        <argsstring>(const std_msgs::BoolConstPtr &amp;msg)</argsstring>
        <name>bumperbCallback</name>
        <param>
          <type>const std_msgs::BoolConstPtr &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="133" column="10" bodyfile="src/communication.cpp" bodystart="285" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classemc_1_1Communication_1afa9601f5798ee3ba70748f8061052d56" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void emc::Communication::bumperfCallback</definition>
        <argsstring>(const std_msgs::BoolConstPtr &amp;msg)</argsstring>
        <name>bumperfCallback</name>
        <param>
          <type>const std_msgs::BoolConstPtr &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="132" column="10" bodyfile="src/communication.cpp" bodystart="278" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="classemc_1_1Communication_1acb2d9d9535fbfdd3d5cc95e54fb6c241" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void emc::Communication::laserCallback</definition>
        <argsstring>(const sensor_msgs::LaserScanConstPtr &amp;msg)</argsstring>
        <name>laserCallback</name>
        <param>
          <type>const sensor_msgs::LaserScanConstPtr &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="99" column="10" bodyfile="src/communication.cpp" bodystart="257" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classemc_1_1Communication_1a69e87f35d64e1086f1241db33ca07846" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void emc::Communication::odomCallback</definition>
        <argsstring>(const nav_msgs::OdometryConstPtr &amp;msg)</argsstring>
        <name>odomCallback</name>
        <param>
          <type>const nav_msgs::OdometryConstPtr &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="119" column="10" bodyfile="src/communication.cpp" bodystart="271" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classemc_1_1Communication_1aba3ad2014949c03f32d36e7e579ee1a1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void emc::Communication::poseCallback</definition>
        <argsstring>(const geometry_msgs::PoseStampedConstPtr &amp;msg)</argsstring>
        <name>poseCallback</name>
        <param>
          <type>const geometry_msgs::PoseStampedConstPtr &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/emc/communication.h" line="109" column="10" bodyfile="src/communication.cpp" bodystart="264" bodyend="267"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>std::unique_ptr&lt; tf2_ros::TransformBroadcaster &gt;</label>
        <link refid="cpp/memory/unique_ptr" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="1">
        <label>emc::Communication</label>
        <link refid="classemc_1_1Communication"/>
        <childnode refid="2" relation="usage">
          <edgelabel>pub_tf2</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>robot_frame_name</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::string</label>
        <link refid="cpp/string/basic_string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="include/emc/communication.h" line="29" column="1" bodyfile="include/emc/communication.h" bodystart="28" bodyend="137"/>
    <listofallmembers>
      <member refid="classemc_1_1Communication_1abf66ff2c41e0aa279c6b1e91d5161b0f" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>bumper_b_cb_queue_</name></member>
      <member refid="classemc_1_1Communication_1a4263cda0c2390bce0cd21d5448f3c2ef" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>bumper_b_msg_</name></member>
      <member refid="classemc_1_1Communication_1ae15ace4273ab51061660675f79e44f64" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>bumper_f_cb_queue_</name></member>
      <member refid="classemc_1_1Communication_1a0513400bb35dac4d8a7eccc462d13e89" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>bumper_f_msg_</name></member>
      <member refid="classemc_1_1Communication_1a14a11537e655e92e3678cdac405dc575" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>bumperbCallback</name></member>
      <member refid="classemc_1_1Communication_1afa9601f5798ee3ba70748f8061052d56" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>bumperfCallback</name></member>
      <member refid="classemc_1_1Communication_1ae3b0d63b9dfa833debec28b9252bdf4a" prot="public" virt="non-virtual"><scope>emc::Communication</scope><name>Communication</name></member>
      <member refid="classemc_1_1Communication_1a9739cc6982d82ef650b178b1bd04d776" prot="public" virt="non-virtual"><scope>emc::Communication</scope><name>init</name></member>
      <member refid="classemc_1_1Communication_1a895ef25f3beab1e7d4d26be35a0a7373" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>laser_cb_queue_</name></member>
      <member refid="classemc_1_1Communication_1a3c107556d408706bb3a5dfb1117554e7" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>laser_msg_</name></member>
      <member refid="classemc_1_1Communication_1acb2d9d9535fbfdd3d5cc95e54fb6c241" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>laserCallback</name></member>
      <member refid="classemc_1_1Communication_1ab3fdb3645be0d90be776ebe4ace095a1" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>localization_visualization_pub_laser_msg_</name></member>
      <member refid="classemc_1_1Communication_1a5d67a0e5b0bb1bc7a16e7eac7184bad9" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>localization_visualization_pub_particle_</name></member>
      <member refid="classemc_1_1Communication_1af9cd63154e3dd0de23ffbfcf24c0c491" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>localization_visualization_pub_pose_</name></member>
      <member refid="classemc_1_1Communication_1ae59f0d76b8e19221f59d9fe2e83e28a9" prot="public" virt="non-virtual"><scope>emc::Communication</scope><name>localization_viz_send_laser_scan</name></member>
      <member refid="classemc_1_1Communication_1a00fda05f25c20b9fe8da1858075c1626" prot="public" virt="non-virtual"><scope>emc::Communication</scope><name>localization_viz_send_particles</name></member>
      <member refid="classemc_1_1Communication_1a0bcda2e7156609d1ff962ae8d160c2cf" prot="public" virt="non-virtual"><scope>emc::Communication</scope><name>localization_viz_send_pose</name></member>
      <member refid="classemc_1_1Communication_1ac30dfa6b564fceab91a03befe17f01f2" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>odom_cb_queue_</name></member>
      <member refid="classemc_1_1Communication_1a8d2d083e064e52336c27eeb935ead976" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>odom_msg_</name></member>
      <member refid="classemc_1_1Communication_1a69e87f35d64e1086f1241db33ca07846" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>odomCallback</name></member>
      <member refid="classemc_1_1Communication_1ac64c6003512280bb0fff4d7039d3d8ab" prot="public" virt="non-virtual"><scope>emc::Communication</scope><name>play</name></member>
      <member refid="classemc_1_1Communication_1adc2783600d0485cbdbede11326d3c2a3" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>pose_cb_queue_</name></member>
      <member refid="classemc_1_1Communication_1afb127075a08b469950d01130eaaef709" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>pose_msg_</name></member>
      <member refid="classemc_1_1Communication_1aba3ad2014949c03f32d36e7e579ee1a1" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>poseCallback</name></member>
      <member refid="classemc_1_1Communication_1aad683970f9f220db687869d390da92d3" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>pub_base_ref_</name></member>
      <member refid="classemc_1_1Communication_1a6029e9c32b48fe1542f3a6bfa14a3792" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>pub_marker_</name></member>
      <member refid="classemc_1_1Communication_1af52ff1708325495a928b6c995ea0c9d0" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>pub_open_door_</name></member>
      <member refid="classemc_1_1Communication_1a19b1cfef24bdc4172584cdd4fbb4c022" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>pub_play_</name></member>
      <member refid="classemc_1_1Communication_1a622aabdedc6d2c146a614d351f760207" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>pub_speak_</name></member>
      <member refid="classemc_1_1Communication_1a8c39380053282b791d0da91b1d85ece6" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>pub_tf2</name></member>
      <member refid="classemc_1_1Communication_1a5de2d70c56df191430695cb95f299aff" prot="public" virt="non-virtual"><scope>emc::Communication</scope><name>readBackBumperData</name></member>
      <member refid="classemc_1_1Communication_1ab576f92441cfa5ecc62c5cca6ac2a300" prot="public" virt="non-virtual"><scope>emc::Communication</scope><name>readFrontBumperData</name></member>
      <member refid="classemc_1_1Communication_1a12aef35d6305dec65c6863c31dcdc036" prot="public" virt="non-virtual"><scope>emc::Communication</scope><name>readLaserData</name></member>
      <member refid="classemc_1_1Communication_1af2030f80eff1942264b55b3d57265ac2" prot="public" virt="non-virtual"><scope>emc::Communication</scope><name>readOdometryData</name></member>
      <member refid="classemc_1_1Communication_1a6a71ad12046f8227694e4a6488e4bf4b" prot="public" virt="non-virtual"><scope>emc::Communication</scope><name>readPoseData</name></member>
      <member refid="classemc_1_1Communication_1a5f25232f42a2f6a39b8365566266b160" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>robot_frame_name</name></member>
      <member refid="classemc_1_1Communication_1ad76f902170f2a6d3756648522b394e47" prot="public" virt="non-virtual"><scope>emc::Communication</scope><name>sendBaseVelocity</name></member>
      <member refid="classemc_1_1Communication_1a42fa2e9eb569a742e131f5be42c5e2af" prot="public" virt="non-virtual"><scope>emc::Communication</scope><name>sendMarker</name></member>
      <member refid="classemc_1_1Communication_1ad21e9aa974ba46cf438f6c38093385db" prot="public" virt="non-virtual"><scope>emc::Communication</scope><name>sendOpendoorRequest</name></member>
      <member refid="classemc_1_1Communication_1a043f7d87a5a2348182769e9f8aa91550" prot="public" virt="non-virtual"><scope>emc::Communication</scope><name>sendPoseEstimate</name></member>
      <member refid="classemc_1_1Communication_1a40b4252ca429ab4fa4653dcf94b680b5" prot="public" virt="non-virtual"><scope>emc::Communication</scope><name>speak</name></member>
      <member refid="classemc_1_1Communication_1ac25b0dd2c32590840ce17ce80268b2b5" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>sub_bumper_b_</name></member>
      <member refid="classemc_1_1Communication_1a6c5c83fe5a319eb4a478db28d2a34ad8" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>sub_bumper_f_</name></member>
      <member refid="classemc_1_1Communication_1a438a3c7724a6006a0439d17757876192" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>sub_laser_</name></member>
      <member refid="classemc_1_1Communication_1af183b3f9646528b8e2ba12ce8e22d9c6" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>sub_odom_</name></member>
      <member refid="classemc_1_1Communication_1a89ad0e951d608fbb476f358804a481f7" prot="private" virt="non-virtual"><scope>emc::Communication</scope><name>sub_pose_</name></member>
      <member refid="classemc_1_1Communication_1a5e89681846861b2fc39e7685d634acc2" prot="public" virt="non-virtual"><scope>emc::Communication</scope><name>~Communication</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
