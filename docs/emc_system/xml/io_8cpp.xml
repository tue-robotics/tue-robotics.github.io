<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="io_8cpp" kind="file" language="C++">
    <compoundname>io.cpp</compoundname>
    <includes refid="io_8h" local="yes">emc/io.h</includes>
    <includes refid="communication_8h" local="yes">emc/communication.h</includes>
    <includes local="no">ros/init.h</includes>
    <includes local="no">tf2/LinearMath/Transform.h</includes>
    <includes local="no">tf2_geometry_msgs/tf2_geometry_msgs.h</includes>
    <includes local="no">geometry_msgs/Pose.h</includes>
    <includes local="no">geometry_msgs/Quaternion.h</includes>
    <includes local="no">geometry_msgs/Vector3.h</includes>
    <includes local="no">visualization_msgs/Marker.h</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="24">
        <label>ros/init.h</label>
      </node>
      <node id="19">
        <label>geometry_msgs/PoseArray.h</label>
      </node>
      <node id="1">
        <label>io.cpp</label>
        <link refid="io_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>tf2/LinearMath/Transform.h</label>
      </node>
      <node id="11">
        <label>ros/publisher.h</label>
      </node>
      <node id="4">
        <label>vector</label>
        <link refid="cpp/header/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="17">
        <label>std_msgs/Bool.h</label>
      </node>
      <node id="21">
        <label>nav_msgs/Odometry.h</label>
      </node>
      <node id="23">
        <label>memory</label>
        <link refid="cpp/header/memory" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="2">
        <label>emc/io.h</label>
        <link refid="io_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>tf2_geometry_msgs/tf2_geometry_msgs.h</label>
      </node>
      <node id="29">
        <label>geometry_msgs/Vector3.h</label>
      </node>
      <node id="8">
        <label>emc/pose.h</label>
        <link refid="pose_8h"/>
      </node>
      <node id="20">
        <label>visualization_msgs/Marker.h</label>
      </node>
      <node id="15">
        <label>sensor_msgs/JointState.h</label>
      </node>
      <node id="22">
        <label>geometry_msgs/PoseStamped.h</label>
      </node>
      <node id="3">
        <label>array</label>
        <link refid="cpp/header/array" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="13">
        <label>ros/callback_queue.h</label>
      </node>
      <node id="9">
        <label>emc/bumper.h</label>
        <link refid="bumper_8h"/>
      </node>
      <node id="7">
        <label>emc/odom.h</label>
        <link refid="odom_8h"/>
      </node>
      <node id="27">
        <label>geometry_msgs/Pose.h</label>
      </node>
      <node id="12">
        <label>ros/subscriber.h</label>
      </node>
      <node id="5">
        <label>string</label>
        <link refid="cpp/header/string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="14">
        <label>tf2_ros/transform_broadcaster.h</label>
      </node>
      <node id="18">
        <label>sensor_msgs/LaserScan.h</label>
      </node>
      <node id="28">
        <label>geometry_msgs/Quaternion.h</label>
      </node>
      <node id="16">
        <label>nav_msgs/MapMetaData.h</label>
      </node>
      <node id="10">
        <label>emc/communication.h</label>
        <link refid="communication_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>emc/data.h</label>
        <link refid="data_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceemc">emc</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="io_8h" kindref="compound">emc/io.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="communication_8h" kindref="compound">emc/communication.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/init.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>ros::ok()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tf2/LinearMath/Transform.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tf2_geometry_msgs/tf2_geometry_msgs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;geometry_msgs/Pose.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;geometry_msgs/Quaternion.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;geometry_msgs/Vector3.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;visualization_msgs/Marker.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cpp/header/string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">string</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceemc" kindref="compound">emc</ref></highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="classemc_1_1IO_1af7f31d3c3574d4dfd3a264178e42dde4" refkind="member"><highlight class="normal"><ref refid="classemc_1_1IO_1af7f31d3c3574d4dfd3a264178e42dde4" kindref="member">IO::IO</ref>(<ref refid="classemc_1_1Communication" kindref="compound">Communication</ref>*<sp/>comm)<sp/>:<sp/>comm_(comm)</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classemc_1_1IO_1a7a743c585d307b81a8036801a7c071b4" kindref="member">comm_</ref>)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classemc_1_1IO_1a7a743c585d307b81a8036801a7c071b4" kindref="member">comm_</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classemc_1_1Communication" kindref="compound">Communication</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classemc_1_1IO_1a95d923d77fd06a3bf916b24b95d0acd8" refkind="member"><highlight class="normal"><ref refid="classemc_1_1IO_1af7f31d3c3574d4dfd3a264178e42dde4" kindref="member">IO::IO</ref>(<ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>robot_name)<sp/>:<sp/>comm_(new<sp/><ref refid="classemc_1_1Communication" kindref="compound">Communication</ref>(robot_name))</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classemc_1_1IO_1a401b529083e458e7b9a187b8903ec461" refkind="member"><highlight class="normal"><ref refid="classemc_1_1IO_1a401b529083e458e7b9a187b8903ec461" kindref="member">IO::~IO</ref>()</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classemc_1_1IO_1a7a743c585d307b81a8036801a7c071b4" kindref="member">comm_</ref>)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classemc_1_1IO_1a7a743c585d307b81a8036801a7c071b4" kindref="member">comm_</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classemc_1_1IO_1a2f414cefc0eb0a5ec4732395b6e86b67" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classemc_1_1IO_1a2f414cefc0eb0a5ec4732395b6e86b67" kindref="member">IO::readLaserData</ref>(<ref refid="structemc_1_1LaserData" kindref="compound">LaserData</ref>&amp;<sp/>scan)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classemc_1_1IO_1a7a743c585d307b81a8036801a7c071b4" kindref="member">comm_</ref>-&gt;<ref refid="classemc_1_1Communication_1a12aef35d6305dec65c6863c31dcdc036" kindref="member">readLaserData</ref>(scan);</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classemc_1_1IO_1ad05369504f688bca0d4b5fdc76a7434e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classemc_1_1IO_1ad05369504f688bca0d4b5fdc76a7434e" kindref="member">IO::readPoseData</ref>(<ref refid="structemc_1_1PoseData" kindref="compound">PoseData</ref>&amp;<sp/>pose)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classemc_1_1IO_1a7a743c585d307b81a8036801a7c071b4" kindref="member">comm_</ref>-&gt;<ref refid="classemc_1_1Communication_1a6a71ad12046f8227694e4a6488e4bf4b" kindref="member">readPoseData</ref>(pose);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classemc_1_1IO_1aae7fcad67545cb7c81119229b49e3a4f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classemc_1_1IO_1aae7fcad67545cb7c81119229b49e3a4f" kindref="member">IO::readOdometryData</ref>(<ref refid="structemc_1_1OdometryData" kindref="compound">OdometryData</ref>&amp;<sp/>odom)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structemc_1_1OdometryData" kindref="compound">OdometryData</ref><sp/>new_odom;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classemc_1_1IO_1a7a743c585d307b81a8036801a7c071b4" kindref="member">comm_</ref>-&gt;<ref refid="classemc_1_1Communication_1af2030f80eff1942264b55b3d57265ac2" kindref="member">readOdometryData</ref>(new_odom))</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classemc_1_1IO_1a0d84f1567b2bacebd805f848ec9eaaf6" kindref="member">odom_set_</ref>)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_WARN(</highlight><highlight class="stringliteral">&quot;Odom<sp/>was<sp/>not<sp/>yet<sp/>set.<sp/>It<sp/>is<sp/>set<sp/>now.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classemc_1_1IO_1a9da100cc52ee54133c03a5d35fd0374f" kindref="member">prev_odom_</ref><sp/>=<sp/>new_odom;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classemc_1_1IO_1a0d84f1567b2bacebd805f848ec9eaaf6" kindref="member">odom_set_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>odom.<ref refid="structemc_1_1OdometryData_1afeca40f03a714f6580d00ea7a48989a4" kindref="member">timestamp</ref><sp/>=<sp/>new_odom.<ref refid="structemc_1_1OdometryData_1afeca40f03a714f6580d00ea7a48989a4" kindref="member">timestamp</ref>;<sp/></highlight><highlight class="comment">//TODO<sp/>give<sp/>dt?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dx<sp/>=<sp/>new_odom.<ref refid="structemc_1_1OdometryData_1ad8a47af11a61b59394e3cf978ca8631d" kindref="member">x</ref><sp/>-<sp/><ref refid="classemc_1_1IO_1a9da100cc52ee54133c03a5d35fd0374f" kindref="member">prev_odom_</ref>.<ref refid="structemc_1_1OdometryData_1ad8a47af11a61b59394e3cf978ca8631d" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dy<sp/>=<sp/>new_odom.<ref refid="structemc_1_1OdometryData_1acfbe82488489d2d7c17d2e7b677e6b5a" kindref="member">y</ref><sp/>-<sp/><ref refid="classemc_1_1IO_1a9da100cc52ee54133c03a5d35fd0374f" kindref="member">prev_odom_</ref>.<ref refid="structemc_1_1OdometryData_1acfbe82488489d2d7c17d2e7b677e6b5a" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>odom.<ref refid="structemc_1_1OdometryData_1ad8a47af11a61b59394e3cf978ca8631d" kindref="member">x</ref><sp/>=<sp/>cos(<ref refid="classemc_1_1IO_1a9da100cc52ee54133c03a5d35fd0374f" kindref="member">prev_odom_</ref>.<ref refid="structemc_1_1OdometryData_1a1331227e2abe39e89b2756ce4b5c7904" kindref="member">a</ref>)<sp/>*<sp/>dx<sp/>+<sp/>sin(<ref refid="classemc_1_1IO_1a9da100cc52ee54133c03a5d35fd0374f" kindref="member">prev_odom_</ref>.<ref refid="structemc_1_1OdometryData_1a1331227e2abe39e89b2756ce4b5c7904" kindref="member">a</ref>)<sp/>*<sp/>dy;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>odom.<ref refid="structemc_1_1OdometryData_1acfbe82488489d2d7c17d2e7b677e6b5a" kindref="member">y</ref><sp/>=<sp/>-sin(<ref refid="classemc_1_1IO_1a9da100cc52ee54133c03a5d35fd0374f" kindref="member">prev_odom_</ref>.<ref refid="structemc_1_1OdometryData_1a1331227e2abe39e89b2756ce4b5c7904" kindref="member">a</ref>)<sp/>*<sp/>dx<sp/>+<sp/>cos(<ref refid="classemc_1_1IO_1a9da100cc52ee54133c03a5d35fd0374f" kindref="member">prev_odom_</ref>.<ref refid="structemc_1_1OdometryData_1a1331227e2abe39e89b2756ce4b5c7904" kindref="member">a</ref>)<sp/>*<sp/>dy;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>odom.<ref refid="structemc_1_1OdometryData_1a1331227e2abe39e89b2756ce4b5c7904" kindref="member">a</ref><sp/>=<sp/>fmod(new_odom.<ref refid="structemc_1_1OdometryData_1a1331227e2abe39e89b2756ce4b5c7904" kindref="member">a</ref><sp/>-<sp/><ref refid="classemc_1_1IO_1a9da100cc52ee54133c03a5d35fd0374f" kindref="member">prev_odom_</ref>.<ref refid="structemc_1_1OdometryData_1a1331227e2abe39e89b2756ce4b5c7904" kindref="member">a</ref><sp/>+<sp/>3*M_PI,<sp/>2*M_PI)<sp/>-<sp/>M_PI;<sp/></highlight><highlight class="comment">//<sp/>wrap<sp/>to<sp/>-pi<sp/>+pi<sp/>accounting<sp/>for<sp/>worst<sp/>case<sp/>values<sp/>of<sp/>odom<sp/>and<sp/>prev</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classemc_1_1IO_1a9da100cc52ee54133c03a5d35fd0374f" kindref="member">prev_odom_</ref><sp/>=<sp/>new_odom;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}<sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classemc_1_1IO_1ac85e7fa95fe85f7b0bbf146e1b493481" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classemc_1_1IO_1ac85e7fa95fe85f7b0bbf146e1b493481" kindref="member">IO::resetOdometry</ref>()</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structemc_1_1OdometryData" kindref="compound">OdometryData</ref><sp/>new_odom;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classemc_1_1IO_1a7a743c585d307b81a8036801a7c071b4" kindref="member">comm_</ref>-&gt;<ref refid="classemc_1_1Communication_1af2030f80eff1942264b55b3d57265ac2" kindref="member">readOdometryData</ref>(new_odom))</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classemc_1_1IO_1a9da100cc52ee54133c03a5d35fd0374f" kindref="member">prev_odom_</ref><sp/>=<sp/>new_odom;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classemc_1_1IO_1a0d84f1567b2bacebd805f848ec9eaaf6" kindref="member">odom_set_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classemc_1_1IO_1a26cfd39c68762159adc96f94cf112129" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classemc_1_1IO_1a26cfd39c68762159adc96f94cf112129" kindref="member">IO::readFrontBumperData</ref>(<ref refid="structemc_1_1BumperData" kindref="compound">BumperData</ref>&amp;<sp/>bumper)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classemc_1_1IO_1a7a743c585d307b81a8036801a7c071b4" kindref="member">comm_</ref>-&gt;<ref refid="classemc_1_1Communication_1ab576f92441cfa5ecc62c5cca6ac2a300" kindref="member">readFrontBumperData</ref>(bumper);</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classemc_1_1IO_1a386ee97e11199de14803a3f98ed2804f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classemc_1_1IO_1a386ee97e11199de14803a3f98ed2804f" kindref="member">IO::readBackBumperData</ref>(<ref refid="structemc_1_1BumperData" kindref="compound">BumperData</ref>&amp;<sp/>bumper)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classemc_1_1IO_1a7a743c585d307b81a8036801a7c071b4" kindref="member">comm_</ref>-&gt;<ref refid="classemc_1_1Communication_1a5de2d70c56df191430695cb95f299aff" kindref="member">readBackBumperData</ref>(bumper);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="classemc_1_1IO_1ae1e38c072d453374c0b361bf2a2f4479" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classemc_1_1IO_1ae1e38c072d453374c0b361bf2a2f4479" kindref="member">IO::sendBaseReference</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vy,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>va)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classemc_1_1IO_1a7a743c585d307b81a8036801a7c071b4" kindref="member">comm_</ref>-&gt;<ref refid="classemc_1_1Communication_1ad76f902170f2a6d3756648522b394e47" kindref="member">sendBaseVelocity</ref>(vx,<sp/>vy,<sp/>va);</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="classemc_1_1IO_1a6e7e00099b9058b98044a6004180164c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classemc_1_1IO_1a6e7e00099b9058b98044a6004180164c" kindref="member">IO::sendOpendoorRequest</ref>()</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>GCC<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wunused-result&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;aplay<sp/>--device<sp/>front:CARD=Device_1,DEV=0<sp/>~/.emc/system/src/emc_system/sounds/doorbell.wav<sp/>&amp;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>GCC<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classemc_1_1IO_1a7a743c585d307b81a8036801a7c071b4" kindref="member">comm_</ref>-&gt;<ref refid="classemc_1_1Communication_1ad21e9aa974ba46cf438f6c38093385db" kindref="member">sendOpendoorRequest</ref>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classemc_1_1IO_1aa2641df2b1a306758936beaaf98b23f1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classemc_1_1IO_1aa2641df2b1a306758936beaaf98b23f1" kindref="member">IO::speak</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>text)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::string<sp/>cmd;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cmd<sp/>=<sp/>&quot;sudo<sp/>espeak<sp/>&quot;<sp/>+<sp/>text<sp/>+<sp/>&quot;<sp/>--stdout<sp/>|<sp/>sudo<sp/>aplay<sp/>--device<sp/>\&quot;default:CARD=Device\&quot;&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cmd<sp/>=<sp/>&quot;espeak<sp/>&quot;<sp/>+<sp/>text<sp/>+<sp/>&quot;<sp/>--stdout<sp/>|<sp/>aplay<sp/>--device<sp/>\&quot;default:CARD=Device\&quot;<sp/>&amp;&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//system(cmd.c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classemc_1_1IO_1a7a743c585d307b81a8036801a7c071b4" kindref="member">comm_</ref>-&gt;<ref refid="classemc_1_1Communication_1a40b4252ca429ab4fa4653dcf94b680b5" kindref="member">speak</ref>(text);</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="classemc_1_1IO_1abb7630d934f4056259d40be03522c45d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classemc_1_1IO_1abb7630d934f4056259d40be03522c45d" kindref="member">IO::play</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>file)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classemc_1_1IO_1a7a743c585d307b81a8036801a7c071b4" kindref="member">comm_</ref>-&gt;<ref refid="classemc_1_1Communication_1ac64c6003512280bb0fff4d7039d3d8ab" kindref="member">play</ref>(file);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="classemc_1_1IO_1a623ec7fcc006e85bbd1fd853faf9086a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classemc_1_1IO_1a623ec7fcc006e85bbd1fd853faf9086a" kindref="member">IO::ok</ref>()</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ros::ok();</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="classemc_1_1IO_1ab83a59d3167632dbb71aa59573ba2e5e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classemc_1_1IO_1ab83a59d3167632dbb71aa59573ba2e5e" kindref="member">IO::sendPath</ref>(<ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt;<ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;double&gt;</ref>&gt;<sp/>path,<sp/><ref refid="cpp/container/array" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::array&lt;double, 3&gt;</ref><sp/>color,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>visualization_msgs::Marker<sp/>pathMarker;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>pathMarker.header.frame_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;map&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>pathMarker.header.stamp<sp/>=<sp/>ros::Time();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>pathMarker.ns<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;path&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>pathMarker.id<sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>pathMarker.type<sp/>=<sp/>visualization_msgs::Marker::LINE_STRIP;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>pathMarker.action<sp/>=<sp/>visualization_msgs::Marker::ADD;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>pathMarker.color.a<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>pathMarker.color.r<sp/>=<sp/>color[0];</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>pathMarker.color.g<sp/>=<sp/>color[1];</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>pathMarker.color.b<sp/>=<sp/>color[2];</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>pathMarker.pose.orientation.w<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>pathMarker.scale.x<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt;<ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;double&gt;</ref>&gt;::iterator<sp/>it<sp/>=<sp/>path.<ref refid="cpp/container/vector/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>();<sp/>it<sp/>!=<sp/>path.end();<sp/>++it)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::Point<sp/>point;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*it).size()<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_WARN_STREAM(</highlight><highlight class="stringliteral">&quot;Point<sp/>at<sp/>index<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/iterator/distance" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::distance</ref>(path.begin(),<sp/>it)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>has<sp/>too<sp/>few<sp/>dimensions<sp/>(expected<sp/>at<sp/>least<sp/>2,<sp/>got<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(*it).size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;),<sp/>skipping.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point.x<sp/>=<sp/>(*it)[0];</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point.y<sp/>=<sp/>(*it)[1];</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*it).size()<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point.z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point.z<sp/>=<sp/>(*it)[3];</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*it).size()<sp/>&gt;<sp/>3)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_WARN_STREAM(</highlight><highlight class="stringliteral">&quot;point<sp/>at<sp/>index<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/iterator/distance" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::distance</ref>(path.begin(),<sp/>it)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>has<sp/>unused<sp/>dimensions<sp/>(expected<sp/>2<sp/>or<sp/>3,<sp/>got<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(*it).size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathMarker.points.push_back(point);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pathMarker.points.size()<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR_STREAM(</highlight><highlight class="stringliteral">&quot;Not<sp/>enough<sp/>valid<sp/>points<sp/>(expected<sp/>at<sp/>least<sp/>2,<sp/>got<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pathMarker.points.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classemc_1_1IO_1a7a743c585d307b81a8036801a7c071b4" kindref="member">comm_</ref>-&gt;<ref refid="classemc_1_1Communication_1a42fa2e9eb569a742e131f5be42c5e2af" kindref="member">sendMarker</ref>(pathMarker);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="classemc_1_1IO_1ab024fdb5f0ac42aba4d396bbdfc90049" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classemc_1_1IO_1aa2a965f14eb373bd5cd879d553847b4d" kindref="member">IO::sendPoseEstimate</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>px,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>py,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pz,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ry,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rz,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rw)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>apply<sp/>map<sp/>offset<sp/>and<sp/>send<sp/>to<sp/>comm_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>tf2::Transform<sp/>pose;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>pose.setOrigin(tf2::Vector3(px,<sp/>py,<sp/>pz));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>pose.setRotation(tf2::Quaternion(rx,<sp/>ry,<sp/>rz,<sp/>rw));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classemc_1_1IO_1a7a743c585d307b81a8036801a7c071b4" kindref="member">comm_</ref>-&gt;<ref refid="classemc_1_1Communication_1a043f7d87a5a2348182769e9f8aa91550" kindref="member">sendPoseEstimate</ref>(tf2::toMsg(pose));</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="classemc_1_1IO_1a04151b1538856b94dbdf0ed70d01d054" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classemc_1_1IO_1aa2a965f14eb373bd5cd879d553847b4d" kindref="member">IO::sendPoseEstimate</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>px,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>py,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pz,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>roll,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pitch,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yaw)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//convert<sp/>roll<sp/>pitch<sp/>yaw<sp/>to<sp/>quaternion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>tf2::Quaternion<sp/>q;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>q.setRPY(roll,<sp/>pitch,<sp/>yaw);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classemc_1_1IO_1aa2a965f14eb373bd5cd879d553847b4d" kindref="member">sendPoseEstimate</ref>(px,<sp/>py,<sp/>pz,<sp/>q.x(),<sp/>q.y(),<sp/>q.z(),<sp/>q.w());</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="classemc_1_1IO_1aa2a965f14eb373bd5cd879d553847b4d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classemc_1_1IO_1aa2a965f14eb373bd5cd879d553847b4d" kindref="member">IO::sendPoseEstimate</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yaw)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classemc_1_1IO_1aa2a965f14eb373bd5cd879d553847b4d" kindref="member">sendPoseEstimate</ref>(x,<sp/>y,<sp/>0,<sp/>0,<sp/>0,<sp/>yaw);</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/>publishers<sp/>used<sp/>to<sp/>visualize<sp/>information<sp/>in<sp/>the<sp/>localization<sp/>exercises<sp/>(particle<sp/>filter):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="classemc_1_1IO_1aa984651bf6fa0026fe82214f66ac8e48" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classemc_1_1IO_1aa984651bf6fa0026fe82214f66ac8e48" kindref="member">IO::localization_viz_send_laser_scan</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle_min,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle_max,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle_inc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subsample,<sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;float&gt;</ref><sp/>prediction)</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classemc_1_1IO_1a7a743c585d307b81a8036801a7c071b4" kindref="member">comm_</ref>-&gt;<ref refid="classemc_1_1Communication_1ae59f0d76b8e19221f59d9fe2e83e28a9" kindref="member">localization_viz_send_laser_scan</ref>(angle_min,<sp/>angle_max,<sp/>angle_inc,<sp/>subsample,<sp/>prediction);</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="classemc_1_1IO_1a1bcbcbb3b232603a49dd06f311ec1aea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classemc_1_1IO_1a1bcbcbb3b232603a49dd06f311ec1aea" kindref="member">IO::localization_viz_send_particles</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt;<ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;double&gt;</ref>&gt;<sp/>particle_poses,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mapOrientation)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classemc_1_1IO_1a7a743c585d307b81a8036801a7c071b4" kindref="member">comm_</ref>-&gt;<ref refid="classemc_1_1Communication_1a00fda05f25c20b9fe8da1858075c1626" kindref="member">localization_viz_send_particles</ref>(N,<sp/>particle_poses,<sp/>mapOrientation);</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="classemc_1_1IO_1a1d37679d738b34f7aea0d5e3490d2d3a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classemc_1_1IO_1a1d37679d738b34f7aea0d5e3490d2d3a" kindref="member">IO::localization_viz_send_pose</ref>(<ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;double&gt;</ref><sp/>pose,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mapOrientation)</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classemc_1_1IO_1a7a743c585d307b81a8036801a7c071b4" kindref="member">comm_</ref>-&gt;<ref refid="classemc_1_1Communication_1a0bcda2e7156609d1ff962ae8d160c2cf" kindref="member">localization_viz_send_pose</ref>(pose,<sp/>mapOrientation);</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/io.cpp"/>
  </compounddef>
</doxygen>
