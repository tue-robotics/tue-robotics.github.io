<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="visualize_8cpp" kind="file" language="C++">
    <compoundname>visualize.cpp</compoundname>
    <includes refid="io_8h" local="no">emc/io.h</includes>
    <includes local="yes">opencv2/imgproc.hpp</includes>
    <includes local="no">opencv2/highgui.hpp</includes>
    <includes local="no">ros/rate.h</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="4">
        <label>vector</label>
        <link refid="cpp/header/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="12">
        <label>ros/rate.h</label>
      </node>
      <node id="10">
        <label>opencv2/imgproc.hpp</label>
      </node>
      <node id="2">
        <label>emc/io.h</label>
        <link refid="io_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>emc/pose.h</label>
        <link refid="pose_8h"/>
      </node>
      <node id="1">
        <label>visualize.cpp</label>
        <link refid="visualize_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>array</label>
        <link refid="cpp/header/array" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="9">
        <label>emc/bumper.h</label>
        <link refid="bumper_8h"/>
      </node>
      <node id="7">
        <label>emc/odom.h</label>
        <link refid="odom_8h"/>
      </node>
      <node id="11">
        <label>opencv2/highgui.hpp</label>
      </node>
      <node id="5">
        <label>string</label>
        <link refid="cpp/header/string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="6">
        <label>emc/data.h</label>
        <link refid="data_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="visualize_8cpp_1a3f33e6c79081e29cf3d373b305a153fa" prot="public" static="no" mutable="no">
        <type>cv::Point2d</type>
        <definition>cv::Point2d canvas_center</definition>
        <argsstring></argsstring>
        <name>canvas_center</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/visualize.cpp" line="10" column="13" bodyfile="tools/visualize.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="visualize_8cpp_1ab8fa474cd44c2506063616f691d46191" prot="public" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool draw_robot</definition>
        <argsstring></argsstring>
        <name>draw_robot</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/visualize.cpp" line="12" column="12" bodyfile="tools/visualize.cpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="visualize_8cpp_1a0ae51501a858e6880146bae1ce297b45" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double resolution</definition>
        <argsstring></argsstring>
        <name>resolution</name>
        <initializer>= 0.01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/visualize.cpp" line="9" column="8" bodyfile="tools/visualize.cpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="visualize_8cpp_1a36a1894d844a3bf4b30a4c2dadf01a7c" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double robotRadius</definition>
        <argsstring></argsstring>
        <name>robotRadius</name>
        <initializer>= 0.21</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/visualize.cpp" line="13" column="8" bodyfile="tools/visualize.cpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="visualize_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/visualize.cpp" line="24" column="5" bodyfile="tools/visualize.cpp" bodystart="24" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="visualize_8cpp_1a29ebc273424140cb304bee7eb0b52f65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cv::Point2d</type>
        <definition>cv::Point2d worldToCanvas</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>worldToCanvas</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/visualize.cpp" line="17" column="13" bodyfile="tools/visualize.cpp" bodystart="17" bodyend="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="io_8h" kindref="compound">emc/io.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;opencv2/imgproc.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/highgui.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/rate.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cpp/header/string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">string</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="visualize_8cpp_1a0ae51501a858e6880146bae1ce297b45" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="visualize_8cpp_1a0ae51501a858e6880146bae1ce297b45" kindref="member">resolution</ref><sp/>=<sp/>0.01;</highlight></codeline>
<codeline lineno="10" refid="visualize_8cpp_1a3f33e6c79081e29cf3d373b305a153fa" refkind="member"><highlight class="normal">cv::Point2d<sp/><ref refid="visualize_8cpp_1a3f33e6c79081e29cf3d373b305a153fa" kindref="member">canvas_center</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="visualize_8cpp_1ab8fa474cd44c2506063616f691d46191" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="visualize_8cpp_1ab8fa474cd44c2506063616f691d46191" kindref="member">draw_robot</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13" refid="visualize_8cpp_1a36a1894d844a3bf4b30a4c2dadf01a7c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="visualize_8cpp_1a36a1894d844a3bf4b30a4c2dadf01a7c" kindref="member">robotRadius</ref><sp/>=<sp/>0.21;<sp/></highlight><highlight class="comment">//<sp/>HERO<sp/>radius<sp/>[m]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="visualize_8cpp_1a29ebc273424140cb304bee7eb0b52f65" refkind="member"><highlight class="normal">cv::Point2d<sp/><ref refid="visualize_8cpp_1a29ebc273424140cb304bee7eb0b52f65" kindref="member">worldToCanvas</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cv::Point2d(-y<sp/>/<sp/><ref refid="visualize_8cpp_1a0ae51501a858e6880146bae1ce297b45" kindref="member">resolution</ref>,<sp/>-x<sp/>/<sp/><ref refid="visualize_8cpp_1a0ae51501a858e6880146bae1ce297b45" kindref="member">resolution</ref>)<sp/>+<sp/><ref refid="visualize_8cpp_1a3f33e6c79081e29cf3d373b305a153fa" kindref="member">canvas_center</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="visualize_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="visualize_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>robot_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;hero&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot_name=argv[1];</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classemc_1_1IO" kindref="compound">emc::IO</ref><sp/>io(robot_name);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Rate<sp/>r(30);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(io.<ref refid="classemc_1_1IO_1a623ec7fcc006e85bbd1fd853faf9086a" kindref="member">ok</ref>())</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Mat<sp/>canvas(500,<sp/>500,<sp/>CV_8UC3,<sp/>cv::Scalar(50,<sp/>50,<sp/>50));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="visualize_8cpp_1a3f33e6c79081e29cf3d373b305a153fa" kindref="member">canvas_center</ref><sp/>=<sp/>cv::Point2d(canvas.rows<sp/>/<sp/>2,<sp/>canvas.cols<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Scalar<sp/>robot_color(0,<sp/>0,<sp/>255);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scaling<sp/>of<sp/>the<sp/>head<sp/>and<sp/>LRF<sp/>(which<sp/>should<sp/>be<sp/>drawn<sp/>inside<sp/>the<sp/>circumference<sp/>of<sp/>the<sp/>robot)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scaling<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="visualize_8cpp_1ab8fa474cd44c2506063616f691d46191" kindref="member">draw_robot</ref>)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;std::pair&lt;double, double&gt;</ref><sp/>&gt;<sp/>robot_points;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;std::pair&lt;double, double&gt;</ref><sp/>&gt;<sp/>robot_head_points;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;std::pair&lt;double, double&gt;</ref><sp/>&gt;<sp/>eye_points;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;std::pair&lt;double, double&gt;</ref><sp/>&gt;<sp/>eye_pupil_points;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot_points.<ref refid="cpp/container/vector/push_back" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">push_back</ref>(<ref refid="cpp/utility/pair" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::pair&lt;double, double&gt;</ref>(0.0,0.0));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot_head_points.<ref refid="cpp/container/vector/push_back" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">push_back</ref>(<ref refid="cpp/utility/pair" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::pair&lt;double, double&gt;</ref>(<sp/>0.08*scaling,<sp/>-0.16*scaling));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot_head_points.<ref refid="cpp/container/vector/push_back" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">push_back</ref>(<ref refid="cpp/utility/pair" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::pair&lt;double, double&gt;</ref>(<sp/>0.08*scaling,<sp/><sp/>0.16*scaling));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot_head_points.<ref refid="cpp/container/vector/push_back" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">push_back</ref>(<ref refid="cpp/utility/pair" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::pair&lt;double, double&gt;</ref>(-0.08*scaling,<sp/><sp/>0.16*scaling));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot_head_points.<ref refid="cpp/container/vector/push_back" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">push_back</ref>(<ref refid="cpp/utility/pair" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::pair&lt;double, double&gt;</ref>(-0.08*scaling,<sp/>-0.16*scaling));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eye_points.<ref refid="cpp/container/vector/push_back" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">push_back</ref>(<ref refid="cpp/utility/pair" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::pair&lt;double, double&gt;</ref>(<sp/>0.0*scaling,<sp/><sp/>0.07*scaling));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eye_points.<ref refid="cpp/container/vector/push_back" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">push_back</ref>(<ref refid="cpp/utility/pair" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::pair&lt;double, double&gt;</ref>(<sp/>0.0*scaling,<sp/>-0.07*scaling));</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eye_pupil_points.<ref refid="cpp/container/vector/push_back" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">push_back</ref>(<ref refid="cpp/utility/pair" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::pair&lt;double, double&gt;</ref>(<sp/>0.025*scaling,<sp/><sp/>0.07*scaling));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eye_pupil_points.<ref refid="cpp/container/vector/push_back" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">push_back</ref>(<ref refid="cpp/utility/pair" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::pair&lt;double, double&gt;</ref>(<sp/>0.025*scaling,<sp/>-0.07*scaling));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Point2d<sp/>pRobot<sp/>=<sp/><ref refid="visualize_8cpp_1a29ebc273424140cb304bee7eb0b52f65" kindref="member">worldToCanvas</ref>(robot_points[0].first,<sp/>robot_points[0].second);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::circle(canvas,<sp/>pRobot,<sp/><ref refid="visualize_8cpp_1a36a1894d844a3bf4b30a4c2dadf01a7c" kindref="member">robotRadius</ref>/<ref refid="visualize_8cpp_1a0ae51501a858e6880146bae1ce297b45" kindref="member">resolution</ref>,<sp/>robot_color,<sp/>2);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>robot_head_points.<ref refid="cpp/container/vector/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>(i<sp/>+<sp/>1)<sp/>%<sp/>robot_head_points.<ref refid="cpp/container/vector/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Point2d<sp/>p1<sp/>=<sp/><ref refid="visualize_8cpp_1a29ebc273424140cb304bee7eb0b52f65" kindref="member">worldToCanvas</ref>(robot_head_points[i].first,<sp/>robot_head_points[i].second);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Point2d<sp/>p2<sp/>=<sp/><ref refid="visualize_8cpp_1a29ebc273424140cb304bee7eb0b52f65" kindref="member">worldToCanvas</ref>(robot_head_points[j].first,<sp/>robot_head_points[j].second);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::line(canvas,<sp/>p1,<sp/>p2,<sp/>robot_color,<sp/>2);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>eye_points.<ref refid="cpp/container/vector/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Point2d<sp/>pEye<sp/>=<sp/><ref refid="visualize_8cpp_1a29ebc273424140cb304bee7eb0b52f65" kindref="member">worldToCanvas</ref>(eye_points[i].first,<sp/>eye_points[i].second);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::circle(canvas,<sp/>pEye,<sp/>scaling*4,<sp/>robot_color,<sp/>2);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>eye_pupil_points.<ref refid="cpp/container/vector/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Point2d<sp/>pEyePupil<sp/>=<sp/><ref refid="visualize_8cpp_1a29ebc273424140cb304bee7eb0b52f65" kindref="member">worldToCanvas</ref>(eye_pupil_points[i].first,<sp/>eye_pupil_points[i].second);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::circle(canvas,<sp/>pEyePupil,<sp/>scaling*1.5,<sp/>robot_color,<sp/>2);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dot<sp/>to<sp/>indicate<sp/>LRF<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Point2d<sp/>pLRF<sp/>=<sp/><ref refid="visualize_8cpp_1a29ebc273424140cb304bee7eb0b52f65" kindref="member">worldToCanvas</ref>(0.15*scaling,<sp/>0.0*scaling);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="visualize_8cpp_1ab8fa474cd44c2506063616f691d46191" kindref="member">draw_robot</ref>)<sp/>pLRF<sp/>=<sp/><ref refid="visualize_8cpp_1a29ebc273424140cb304bee7eb0b52f65" kindref="member">worldToCanvas</ref>(0.0*scaling,<sp/>0.0*scaling);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::circle(canvas,<sp/>pLRF,<sp/>scaling*2,<sp/>robot_color,<sp/>2);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structemc_1_1LaserData" kindref="compound">emc::LaserData</ref><sp/>scan;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!io.<ref refid="classemc_1_1IO_1a2f414cefc0eb0a5ec4732395b6e86b67" kindref="member">readLaserData</ref>(scan))</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>scan.<ref refid="structemc_1_1LaserData_1a9b379d408932e2f60df2e24a08242afc" kindref="member">angle_min</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>scan.<ref refid="structemc_1_1LaserData_1a122b344a6b8098084c780f8fde01eeae" kindref="member">ranges</ref>.<ref refid="cpp/container/vector/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>cos(a)<sp/>*<sp/>scan.<ref refid="structemc_1_1LaserData_1a122b344a6b8098084c780f8fde01eeae" kindref="member">ranges</ref>[i];</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>sin(a)<sp/>*<sp/>scan.<ref refid="structemc_1_1LaserData_1a122b344a6b8098084c780f8fde01eeae" kindref="member">ranges</ref>[i];</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Point2d<sp/>p<sp/>=<sp/><ref refid="visualize_8cpp_1a29ebc273424140cb304bee7eb0b52f65" kindref="member">worldToCanvas</ref>(x,<sp/>y);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.x<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>p.y<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>p.x<sp/>&lt;<sp/>canvas.cols<sp/>&amp;&amp;<sp/>p.y<sp/>&lt;<sp/>canvas.rows)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>canvas.at&lt;cv::Vec3b&gt;(p)<sp/>=<sp/>cv::Vec3b(0,<sp/>255,<sp/>0);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>+=<sp/>scan.<ref refid="structemc_1_1LaserData_1a8849e840187b08bfc0ad691268d866c7" kindref="member">angle_increment</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::imshow(</highlight><highlight class="stringliteral">&quot;Laser<sp/>Vizualization&quot;</highlight><highlight class="normal">,<sp/>canvas);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::waitKey(3);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.sleep();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tools/visualize.cpp"/>
  </compounddef>
</doxygen>
