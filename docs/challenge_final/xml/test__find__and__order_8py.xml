<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="test__find__and__order_8py" kind="file" language="Python">
    <compoundname>test_find_and_order.py</compoundname>
    <innerclass refid="classtest__find__and__order_1_1TestMachine" prot="public">test_find_and_order::TestMachine</innerclass>
    <innernamespace refid="namespacetest__find__and__order">test_find_and_order</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacetest__find__and__order" refkind="compound"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>argparse</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>rospy</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>smach</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>challenge_final<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>FindPeople,<sp/>GetOrders</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_skills<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>get_robot</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="classtest__find__and__order_1_1TestMachine" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtest__find__and__order_1_1TestMachine" kindref="compound">TestMachine</ref>(smach.StateMachine):</highlight></codeline>
<codeline lineno="11" refid="classtest__find__and__order_1_1TestMachine_1a417da9a78031946d30de9966220e4ea6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest__find__and__order_1_1TestMachine_1a417da9a78031946d30de9966220e4ea6" kindref="member">__init__</ref>(self,<sp/>robot):</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.__init__(self,<sp/>outcomes=[</highlight><highlight class="stringliteral">&quot;done&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>self:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&quot;FIND_PEOPLE&quot;</highlight><highlight class="normal">,<sp/><ref refid="classchallenge__final_1_1find__people_1_1FindPeople" kindref="compound">FindPeople</ref>(robot),<sp/>transitions={</highlight><highlight class="stringliteral">&quot;done&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;GET_ORDERS&quot;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&quot;GET_ORDERS&quot;</highlight><highlight class="normal">,<sp/><ref refid="classchallenge__final_1_1get__orders_1_1GetOrders" kindref="compound">GetOrders</ref>(robot),<sp/>transitions={</highlight><highlight class="stringliteral">&quot;done&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;done&quot;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="namespacetest__find__and__order_1a708836b63916969a782f828eb5d28292" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>parser<sp/>=<sp/>argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter)</highlight></codeline>
<codeline lineno="23" refid="namespacetest__find__and__order_1addaf3b133dc3f366fd200904ff579900" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&quot;--robot&quot;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="stringliteral">&quot;hero&quot;</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&quot;Name<sp/>of<sp/>the<sp/>robot<sp/>you<sp/>want<sp/>to<sp/>use&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="24" refid="namespacetest__find__and__order_1aaec3726a972ce7a8ed2e47dfc75b4955" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>args<sp/>=<sp/>parser.parse_args()</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>rospy.init_node(</highlight><highlight class="stringliteral">&quot;test_find_and_order&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="namespacetest__find__and__order_1ab533037e62a170616c0d555416972817" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>robot<sp/>=<sp/>get_robot(args.robot)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="namespacetest__find__and__order_1afce5b389042ee8dcb3ff991b06217fe9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>sm<sp/>=<sp/><ref refid="classtest__find__and__order_1_1TestMachine" kindref="compound">TestMachine</ref>(robot)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>sm.execute()</highlight></codeline>
    </programlisting>
    <location file="test/test_find_and_order.py"/>
  </compounddef>
</doxygen>
