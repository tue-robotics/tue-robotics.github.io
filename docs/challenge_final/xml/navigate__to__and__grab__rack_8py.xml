<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="navigate__to__and__grab__rack_8py" kind="file" language="Python">
    <compoundname>navigate_to_and_grab_rack.py</compoundname>
    <innerclass refid="classchallenge__final_1_1navigate__to__and__grab__rack_1_1GrabRack" prot="public">challenge_final::navigate_to_and_grab_rack::GrabRack</innerclass>
    <innerclass refid="classchallenge__final_1_1navigate__to__and__grab__rack_1_1NavigateToAndGrabRack" prot="public">challenge_final::navigate_to_and_grab_rack::NavigateToAndGrabRack</innerclass>
    <innernamespace refid="namespacechallenge__final_1_1navigate__to__and__grab__rack">challenge_final::navigate_to_and_grab_rack</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacechallenge__final_1_1navigate__to__and__grab__rack" refkind="compound"><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>2019,<sp/>TU/e<sp/>Robotics,<sp/>Netherlands</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>\author<sp/>Rein<sp/>Appeldoorn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>rospkg</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>rospy</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>dynamic_reconfigure.client<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Client</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>geometry_msgs.msg<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>PoseStamped,<sp/>Quaternion</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>tf_conversions<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>transformations</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_skills<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>get_robot</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_smach_states.navigation<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>NavigateToSymbolic</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_smach_states.navigation.control_to_pose<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ControlParameters,<sp/>ControlToPose</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_smach_states.util.designators<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>EdEntityDesignator</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>smach<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>CBState,<sp/>StateMachine,<sp/>cb_interface</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classchallenge__final_1_1navigate__to__and__grab__rack_1_1GrabRack" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classchallenge__final_1_1navigate__to__and__grab__rack_1_1GrabRack" kindref="compound">GrabRack</ref>(StateMachine):</highlight></codeline>
<codeline lineno="23" refid="classchallenge__final_1_1navigate__to__and__grab__rack_1_1GrabRack_1adf0498b1035053b010b82729b20edeee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classchallenge__final_1_1navigate__to__and__grab__rack_1_1GrabRack_1adf0498b1035053b010b82729b20edeee" kindref="member">__init__</ref>(self,<sp/>robot,<sp/>rack_id):</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StateMachine.__init__(self,<sp/>outcomes=[</highlight><highlight class="stringliteral">&apos;done&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>public_arm<sp/>=<sp/>robot.get_arm()</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arm<sp/>=<sp/>public_arm._arm</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_client<sp/>=<sp/>Client(</highlight><highlight class="stringliteral">&quot;/hero/local_planner/local_costmap&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_client.update_configuration({</highlight><highlight class="stringliteral">&quot;footprint&quot;</highlight><highlight class="normal">:<sp/>[]})</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_client<sp/>=<sp/>Client(</highlight><highlight class="stringliteral">&quot;/hero/global_planner/global_costmap&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_client.update_configuration({</highlight><highlight class="stringliteral">&quot;footprint&quot;</highlight><highlight class="normal">:<sp/>[]})</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">send_joint_goal(position_array,<sp/>wait_for_motion_done=True):</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arm._send_joint_trajectory([position_array],<sp/>timeout=rospy.Duration(0))</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>wait_for_motion_done:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arm.wait_for_motion_done()</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">send_gripper_goal(open_close_string,<sp/>max_torque=1.0):</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arm.gripper.send_goal(open_close_string,<sp/>max_torque=max_torque)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.sleep(1.0)<sp/><sp/></highlight><highlight class="comment">#<sp/>Does<sp/>not<sp/>work<sp/>with<sp/>motion_done<sp/>apparently</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">show_image(package_name,<sp/>path_to_image_in_package):</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/>os.path.join(rospkg.RosPack().get_path(package_name),<sp/>path_to_image_in_package)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>os.path.exists(path):</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(</highlight><highlight class="stringliteral">&quot;Image<sp/>path<sp/>{}<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal">.format(path))</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(</highlight><highlight class="stringliteral">&quot;Showing<sp/>{}&quot;</highlight><highlight class="normal">.format(path))</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.hmi.show_image(path,<sp/>10)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>show<sp/>image<sp/>{}:<sp/>{}&quot;</highlight><highlight class="normal">.format(path,<sp/>e))</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;succeeded&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@cb_interface(outcomes=[</highlight><highlight class="stringliteral">&apos;done&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_pre_grab(_):</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.speech.speak(</highlight><highlight class="stringliteral">&quot;Hey,<sp/>I<sp/>found<sp/>myself<sp/>a<sp/>nice<sp/>rack&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_joint_goal([0,<sp/>0,<sp/>0,<sp/>0,<sp/>0])</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_joint_goal([0.69,<sp/>0,<sp/>0,<sp/>0,<sp/>0])</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.sleep(1.0)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_gripper_goal(</highlight><highlight class="stringliteral">&quot;open&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_joint_goal([0.69,<sp/>-1.77,<sp/>0,<sp/>-1.37,<sp/>1.57])</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;done&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@cb_interface(outcomes=[</highlight><highlight class="stringliteral">&apos;done&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_align(_):</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.head.look_down()</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.speech.speak(</highlight><highlight class="stringliteral">&quot;Let&apos;s<sp/>see<sp/>what<sp/>I<sp/>can<sp/>do<sp/>with<sp/>this&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal_pose<sp/>=<sp/>PoseStamped()</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal_pose.header.stamp<sp/>=<sp/>rospy.Time.now()</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal_pose.header.frame_id<sp/>=<sp/>rack_id</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal_pose.pose.orientation<sp/>=<sp/>Quaternion(*transformations.quaternion_from_euler(0,<sp/>0,<sp/>math.pi))</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal_pose.pose.position.x<sp/>=<sp/>0.45</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal_pose.pose.position.y<sp/>=<sp/>0.09</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ControlToPose(robot,<sp/>goal_pose,<sp/>ControlParameters(0.5,<sp/>1.0,<sp/>0.3,<sp/>0.3,<sp/>0.3,<sp/>0.02,<sp/>0.05)).execute({})</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;done&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@cb_interface(outcomes=[</highlight><highlight class="stringliteral">&apos;done&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_grab(_):</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.speech.speak(</highlight><highlight class="stringliteral">&quot;Grasping<sp/>the<sp/>trolley&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.sleep(4.0)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_joint_goal([0.61,<sp/>-1.77,<sp/>0,<sp/>-1.37,<sp/>1.57])</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_gripper_goal(</highlight><highlight class="stringliteral">&quot;close&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_footprint<sp/>=<sp/>[[0.491716563702,<sp/>0.284912616014],<sp/>[0.504091262817,<sp/>-0.264433205128],</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0.00334876775742,<sp/>-0.259195685387],<sp/>[-0.17166364193,<sp/>-0.19022783637],</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[-0.239429235458,<sp/>-0.07719720155],<sp/>[-0.237978458405,<sp/>0.0547728165984],</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[-0.180378556252,<sp/>0.164403796196],<sp/>[-0.0865250825882,<sp/>0.221749901772],</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0.00969874858856,<sp/>0.260340631008]]</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_client.update_configuration({</highlight><highlight class="stringliteral">&quot;footprint&quot;</highlight><highlight class="normal">:<sp/>base_footprint})</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_client.update_configuration({</highlight><highlight class="stringliteral">&quot;footprint&quot;</highlight><highlight class="normal">:<sp/>base_footprint})</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.head.cancel_goal()</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.publish_rack()</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;done&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@cb_interface(outcomes=[</highlight><highlight class="stringliteral">&apos;done&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_retract(_):</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.head.look_down()</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal_pose<sp/>=<sp/>PoseStamped()</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal_pose.header.stamp<sp/>=<sp/>rospy.Time.now()</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal_pose.header.frame_id<sp/>=<sp/>rack_id</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal_pose.pose.orientation<sp/>=<sp/>Quaternion(*transformations.quaternion_from_euler(0,<sp/>0,<sp/>-<sp/>math.pi<sp/>/<sp/>2))</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal_pose.pose.position.x<sp/>=<sp/>0.55</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal_pose.pose.position.y<sp/>=<sp/>-0.1</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ControlToPose(robot,<sp/>goal_pose,<sp/>ControlParameters(0.5,<sp/>1.0,<sp/>0.3,<sp/>0.3,<sp/>0.3,<sp/>0.02,<sp/>0.1)).execute({})</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;done&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>self:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.add(</highlight><highlight class="stringliteral">&apos;PRE_GRAB&apos;</highlight><highlight class="normal">,<sp/>CBState(_pre_grab),<sp/>transitions={</highlight><highlight class="stringliteral">&apos;done&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;ALIGN_GRAB&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.add(</highlight><highlight class="stringliteral">&apos;ALIGN_GRAB&apos;</highlight><highlight class="normal">,<sp/>CBState(_align),<sp/>transitions={</highlight><highlight class="stringliteral">&apos;done&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;GRAB&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.add(</highlight><highlight class="stringliteral">&apos;GRAB&apos;</highlight><highlight class="normal">,<sp/>CBState(_grab),<sp/>transitions={</highlight><highlight class="stringliteral">&apos;done&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;RETRACT&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.add(</highlight><highlight class="stringliteral">&apos;RETRACT&apos;</highlight><highlight class="normal">,<sp/>CBState(_retract),<sp/>transitions={</highlight><highlight class="stringliteral">&apos;done&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;done&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classchallenge__final_1_1navigate__to__and__grab__rack_1_1NavigateToAndGrabRack" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classchallenge__final_1_1navigate__to__and__grab__rack_1_1NavigateToAndGrabRack" kindref="compound">NavigateToAndGrabRack</ref>(StateMachine):</highlight></codeline>
<codeline lineno="117" refid="classchallenge__final_1_1navigate__to__and__grab__rack_1_1NavigateToAndGrabRack_1a5e3f58eb2304c9a7593b4ecbb11d3619" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classchallenge__final_1_1navigate__to__and__grab__rack_1_1NavigateToAndGrabRack_1a5e3f58eb2304c9a7593b4ecbb11d3619" kindref="member">__init__</ref>(self,<sp/>robot,<sp/>rack_id,<sp/>rack_navigation_area):</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StateMachine.__init__(self,<sp/>outcomes=[</highlight><highlight class="stringliteral">&quot;succeeded&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rack<sp/>=<sp/>EdEntityDesignator(robot=robot,<sp/>uuid=rack_id)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>self:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StateMachine.add(</highlight><highlight class="stringliteral">&quot;NAVIGATE_TO_RACK&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavigateToSymbolic(robot,<sp/>{rack:<sp/>rack_navigation_area},<sp/>rack),</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;arrived&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;GRAB_RACK&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;unreachable&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;failed&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;goal_not_defined&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;failed&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StateMachine.add(</highlight><highlight class="stringliteral">&quot;GRAB_RACK&quot;</highlight><highlight class="normal">,<sp/><ref refid="classchallenge__final_1_1navigate__to__and__grab__rack_1_1GrabRack" kindref="compound">GrabRack</ref>(robot,<sp/>rack_id),</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;done&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;succeeded&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>rospy.init_node(os.path.splitext(</highlight><highlight class="stringliteral">&quot;test_&quot;</highlight><highlight class="normal"><sp/>+<sp/>os.path.basename(__file__))[0])</highlight></codeline>
<codeline lineno="135" refid="namespacechallenge__final_1_1navigate__to__and__grab__rack_1a2eb8a72c544766793c152fa71366f5e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>robot_instance<sp/>=<sp/>get_robot(</highlight><highlight class="stringliteral">&quot;hero&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>robot_instance.reset()</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classchallenge__final_1_1navigate__to__and__grab__rack_1_1NavigateToAndGrabRack" kindref="compound">NavigateToAndGrabRack</ref>(robot_instance,<sp/></highlight><highlight class="stringliteral">&quot;rack&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;in_front_of&quot;</highlight><highlight class="normal">).execute()</highlight></codeline>
    </programlisting>
    <location file="src/challenge_final/navigate_to_and_grab_rack.py"/>
  </compounddef>
</doxygen>
