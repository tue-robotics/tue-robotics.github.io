<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classtue_1_1filesystem_1_1Crawler" kind="class" language="C++" prot="public">
    <compoundname>tue::filesystem::Crawler</compoundname>
    <includes refid="crawler_8h" local="no">crawler.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtue_1_1filesystem_1_1Crawler_1a0bfd26a612df74d0fcd1bea7b8ab81a6" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tue::filesystem::Crawler::ignore_hidden_dirs_</definition>
        <argsstring></argsstring>
        <name>ignore_hidden_dirs_</name>
        <briefdescription>
<para>If set, hidden directories are not expanded. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/filesystem/crawler.h" line="99" column="10" bodyfile="include/tue/filesystem/crawler.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtue_1_1filesystem_1_1Crawler_1a1b77768a5e97c6b7bf00470f50610b39" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tue::filesystem::Crawler::ignore_hidden_files_</definition>
        <argsstring></argsstring>
        <name>ignore_hidden_files_</name>
        <briefdescription>
<para>If set, hidden files are not returned in the iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/filesystem/crawler.h" line="100" column="10" bodyfile="include/tue/filesystem/crawler.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtue_1_1filesystem_1_1Crawler_1a54bfb22409e2c35bc70cee061bacf265" prot="private" static="no" mutable="no">
        <type>boost::filesystem::recursive_directory_iterator</type>
        <definition>boost::filesystem::recursive_directory_iterator tue::filesystem::Crawler::it_dir_</definition>
        <argsstring></argsstring>
        <name>it_dir_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Internal file system iterator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/filesystem/crawler.h" line="105" column="53" bodyfile="include/tue/filesystem/crawler.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtue_1_1filesystem_1_1Crawler_1a66413fe03cfce1609cee271ff217ba06" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tue::filesystem::Crawler::list_dirs_</definition>
        <argsstring></argsstring>
        <name>list_dirs_</name>
        <briefdescription>
<para>If set, iterator returns found directories. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/filesystem/crawler.h" line="101" column="10" bodyfile="include/tue/filesystem/crawler.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtue_1_1filesystem_1_1Crawler_1a30a609d6b3719ce4da46ecf69cf3d852" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tue::filesystem::Crawler::list_files_</definition>
        <argsstring></argsstring>
        <name>list_files_</name>
        <briefdescription>
<para>If set, iterator returns found files. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/filesystem/crawler.h" line="102" column="10" bodyfile="include/tue/filesystem/crawler.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtue_1_1filesystem_1_1Crawler_1a78b0b63c0c2aec03cd1d52057902926a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tue::filesystem::Crawler::recursive_</definition>
        <argsstring></argsstring>
        <name>recursive_</name>
        <briefdescription>
<para>If set, iterator also returns content of sub-directories. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/filesystem/crawler.h" line="98" column="10" bodyfile="include/tue/filesystem/crawler.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtue_1_1filesystem_1_1Crawler_1a22a6341608a88962ed02feeb8f5a6b71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tue::filesystem::Crawler::Crawler</definition>
        <argsstring>()</argsstring>
        <name>Crawler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default constructor of the crawler iterator class. Creates an iterator that returns all non-hidden files in all non-hidden (sub-)directories. <simplesect kind="note"><para>Root path must be set usng <ref refid="classtue_1_1filesystem_1_1Crawler_1a6e0de9422f08f6cc93bb8faaf1d575f9" kindref="member">setRootPath</ref> before usage. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/filesystem/crawler.h" line="26" column="5" bodyfile="src/crawler.cpp" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1filesystem_1_1Crawler_1add5739eab6014ec32ad383272909f342" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tue::filesystem::Crawler::Crawler</definition>
        <argsstring>(const Path &amp;root_path)</argsstring>
        <name>Crawler</name>
        <param>
          <type>const <ref refid="classtue_1_1filesystem_1_1Path" kindref="compound">Path</ref> &amp;</type>
          <declname>root_path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor of the crawler iterator with a root path. Creates an iterator that returns all non-hidden files in all non-hidden (sub-)directories. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>root_path</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting point of the sub-tree to expand. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/filesystem/crawler.h" line="33" column="5" bodyfile="src/crawler.cpp" bodystart="17" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1filesystem_1_1Crawler_1aa1eb96f9664448818f0cd48b520929e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tue::filesystem::Crawler::nextPath</definition>
        <argsstring>(Path &amp;path)</argsstring>
        <name>nextPath</name>
        <param>
          <type><ref refid="classtue_1_1filesystem_1_1Path" kindref="compound">Path</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the next path at the file system of the crawl. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] Next found path at the file system, if the function returns successfully. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether a next path was found, otherwise the crawl is finished. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/filesystem/crawler.h" line="95" column="10" bodyfile="src/crawler.cpp" bodystart="33" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1filesystem_1_1Crawler_1a9a3aac35bf4487cd2966780e25f202de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tue::filesystem::Crawler::setIgnoreHiddenDirectories</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>setIgnoreHiddenDirectories</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable or disable iterating over hidden directories. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to skip hidden directories. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/filesystem/crawler.h" line="58" column="10" bodyfile="include/tue/filesystem/crawler.h" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1filesystem_1_1Crawler_1adf55139f31a9586ce03de2d67c7cb7ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tue::filesystem::Crawler::setIgnoreHiddenFiles</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>setIgnoreHiddenFiles</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable or disable iterating over hidden files. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to skip hidden files. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/filesystem/crawler.h" line="67" column="10" bodyfile="include/tue/filesystem/crawler.h" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1filesystem_1_1Crawler_1ac11e7380e3ec84a7b9369de49198c58f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tue::filesystem::Crawler::setListDirectories</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>setListDirectories</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable or disable returning directories in the iterator. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether directories should be returned in the iterator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/filesystem/crawler.h" line="76" column="10" bodyfile="include/tue/filesystem/crawler.h" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1filesystem_1_1Crawler_1a47899c2526d63a438ab63b2ed1321acb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tue::filesystem::Crawler::setListFiles</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>setListFiles</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable or disable returning files in the iterator. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether files should be returned in the iterator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/filesystem/crawler.h" line="85" column="10" bodyfile="include/tue/filesystem/crawler.h" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1filesystem_1_1Crawler_1aec0dbc785625a62a95cda26c480f6a28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tue::filesystem::Crawler::setRecursive</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>setRecursive</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable or disable iterating over sub-directories. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to expand sub-directories too. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/filesystem/crawler.h" line="49" column="10" bodyfile="include/tue/filesystem/crawler.h" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1filesystem_1_1Crawler_1a6e0de9422f08f6cc93bb8faaf1d575f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tue::filesystem::Crawler::setRootPath</definition>
        <argsstring>(const Path &amp;root_path)</argsstring>
        <name>setRootPath</name>
        <param>
          <type>const <ref refid="classtue_1_1filesystem_1_1Path" kindref="compound">Path</ref> &amp;</type>
          <declname>root_path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets (or change) the root path of the crawler instance. Also resets the iteration. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>root_path</parametername>
</parameternamelist>
<parameterdescription>
<para>New root path to use for the iteration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/filesystem/crawler.h" line="43" column="10" bodyfile="src/crawler.cpp" bodystart="27" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1filesystem_1_1Crawler_1a3f65f542721218f5a4748de6554037c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>tue::filesystem::Crawler::~Crawler</definition>
        <argsstring>()</argsstring>
        <name>~Crawler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Desctructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/filesystem/crawler.h" line="36" column="13" bodyfile="src/crawler.cpp" bodystart="23" bodyend="25"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>File system crawler, recursively walk over all files and directories in a tree from the provided root path. </para>
    </detaileddescription>
    <location file="include/tue/filesystem/crawler.h" line="19" column="1" bodyfile="include/tue/filesystem/crawler.h" bodystart="18" bodyend="106"/>
    <listofallmembers>
      <member refid="classtue_1_1filesystem_1_1Crawler_1a22a6341608a88962ed02feeb8f5a6b71" prot="public" virt="non-virtual"><scope>tue::filesystem::Crawler</scope><name>Crawler</name></member>
      <member refid="classtue_1_1filesystem_1_1Crawler_1add5739eab6014ec32ad383272909f342" prot="public" virt="non-virtual"><scope>tue::filesystem::Crawler</scope><name>Crawler</name></member>
      <member refid="classtue_1_1filesystem_1_1Crawler_1a0bfd26a612df74d0fcd1bea7b8ab81a6" prot="private" virt="non-virtual"><scope>tue::filesystem::Crawler</scope><name>ignore_hidden_dirs_</name></member>
      <member refid="classtue_1_1filesystem_1_1Crawler_1a1b77768a5e97c6b7bf00470f50610b39" prot="private" virt="non-virtual"><scope>tue::filesystem::Crawler</scope><name>ignore_hidden_files_</name></member>
      <member refid="classtue_1_1filesystem_1_1Crawler_1a54bfb22409e2c35bc70cee061bacf265" prot="private" virt="non-virtual"><scope>tue::filesystem::Crawler</scope><name>it_dir_</name></member>
      <member refid="classtue_1_1filesystem_1_1Crawler_1a66413fe03cfce1609cee271ff217ba06" prot="private" virt="non-virtual"><scope>tue::filesystem::Crawler</scope><name>list_dirs_</name></member>
      <member refid="classtue_1_1filesystem_1_1Crawler_1a30a609d6b3719ce4da46ecf69cf3d852" prot="private" virt="non-virtual"><scope>tue::filesystem::Crawler</scope><name>list_files_</name></member>
      <member refid="classtue_1_1filesystem_1_1Crawler_1aa1eb96f9664448818f0cd48b520929e0" prot="public" virt="non-virtual"><scope>tue::filesystem::Crawler</scope><name>nextPath</name></member>
      <member refid="classtue_1_1filesystem_1_1Crawler_1a78b0b63c0c2aec03cd1d52057902926a" prot="private" virt="non-virtual"><scope>tue::filesystem::Crawler</scope><name>recursive_</name></member>
      <member refid="classtue_1_1filesystem_1_1Crawler_1a9a3aac35bf4487cd2966780e25f202de" prot="public" virt="non-virtual"><scope>tue::filesystem::Crawler</scope><name>setIgnoreHiddenDirectories</name></member>
      <member refid="classtue_1_1filesystem_1_1Crawler_1adf55139f31a9586ce03de2d67c7cb7ef" prot="public" virt="non-virtual"><scope>tue::filesystem::Crawler</scope><name>setIgnoreHiddenFiles</name></member>
      <member refid="classtue_1_1filesystem_1_1Crawler_1ac11e7380e3ec84a7b9369de49198c58f" prot="public" virt="non-virtual"><scope>tue::filesystem::Crawler</scope><name>setListDirectories</name></member>
      <member refid="classtue_1_1filesystem_1_1Crawler_1a47899c2526d63a438ab63b2ed1321acb" prot="public" virt="non-virtual"><scope>tue::filesystem::Crawler</scope><name>setListFiles</name></member>
      <member refid="classtue_1_1filesystem_1_1Crawler_1aec0dbc785625a62a95cda26c480f6a28" prot="public" virt="non-virtual"><scope>tue::filesystem::Crawler</scope><name>setRecursive</name></member>
      <member refid="classtue_1_1filesystem_1_1Crawler_1a6e0de9422f08f6cc93bb8faaf1d575f9" prot="public" virt="non-virtual"><scope>tue::filesystem::Crawler</scope><name>setRootPath</name></member>
      <member refid="classtue_1_1filesystem_1_1Crawler_1a3f65f542721218f5a4748de6554037c5" prot="public" virt="virtual"><scope>tue::filesystem::Crawler</scope><name>~Crawler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
