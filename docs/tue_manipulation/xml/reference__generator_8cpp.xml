<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="reference__generator_8cpp" kind="file" language="C++">
    <compoundname>reference_generator.cpp</compoundname>
    <includes refid="reference__generator_8h" local="yes">tue/manipulation/reference_generator.h</includes>
    <incdepgraph>
      <node id="6">
        <label>vector</label>
        <link refid="cpp/header/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="4">
        <label>tue/manipulation/reference_interpolator.h</label>
        <link refid="reference__interpolator_8h"/>
      </node>
      <node id="3">
        <label>control_msgs/FollowJointTrajectoryAction.h</label>
      </node>
      <node id="1">
        <label>reference_generator.cpp</label>
        <link refid="reference__generator_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>string</label>
        <link refid="cpp/header/string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="5">
        <label>tue/manipulation/graph_viewer.h</label>
        <link refid="graph__viewer_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>tue/manipulation/reference_generator.h</label>
        <link refid="reference__generator_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetue">tue</innernamespace>
    <innernamespace refid="namespacetue_1_1manipulation">tue::manipulation</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="reference__generator_8h" kindref="compound">tue/manipulation/reference_generator.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetue" kindref="compound">tue</ref></highlight></codeline>
<codeline lineno="4"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">manipulation</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="namespacetue_1_1manipulation_1a260a8f777ee7439000a91a44f4196bb6" refkind="member"><highlight class="normal"><ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref>&amp;<sp/><ref refid="namespacetue_1_1manipulation_1a260a8f777ee7439000a91a44f4196bb6" kindref="member">operator&lt;&lt;</ref>(<ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref>&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;double&gt;</ref>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v.<ref refid="cpp/container/vector/empty" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">empty</ref>())</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>v[0];</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>v.size();<sp/>++i)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>v[i];</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="23" refid="namespacetue_1_1manipulation_1a825b993030fc2ff25a7b7681061fa7d6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/><ref refid="namespacetue_1_1manipulation_1a825b993030fc2ff25a7b7681061fa7d6" kindref="member">vectorToString</ref>(<ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;T&gt;</ref><sp/>vector)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><ref refid="cpp/io/basic_stringstream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::stringstream</ref><sp/>ss;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>e<sp/>:<sp/>vector)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>e<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.<ref refid="cpp/io/basic_stringstream/str" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">str</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32" refid="namespacetue_1_1manipulation_1af7096d626e4df6d126a12affc0302530" refkind="member"><highlight class="normal"><ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref>&amp;<sp/><ref refid="namespacetue_1_1manipulation_1a260a8f777ee7439000a91a44f4196bb6" kindref="member">operator&lt;&lt; </ref>(<ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref>&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtue_1_1manipulation_1_1JointGoal" kindref="compound">JointGoal</ref>&amp;<sp/>j)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;time_since_start(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>j.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ae5016c1494faad8a6b782cd880072e76" kindref="member">time_since_start</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;),<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sub_goal_idx(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>j.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a7eb477147331f1a926f95b3dedc66374" kindref="member">sub_goal_idx</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;),<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;joint_index_mapping(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacetue_1_1manipulation_1a825b993030fc2ff25a7b7681061fa7d6" kindref="member">vectorToString</ref>(j.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a0255012fb01ef870735c5358b58ac4ba" kindref="member">joint_index_mapping</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;),<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;goal_msg(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>j.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ae4eb8c75e051f199b3f17bfb290d00fb" kindref="member">goal_msg</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;),<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;num_goal_joints(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>j.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ab2dd2ce4806b0eba02a90ef62a5d6b92" kindref="member">num_goal_joints</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;),<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;use_cubic_interpolation(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>j.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a3fbbaf823a5968f1c052361c6441ac71" kindref="member">use_cubic_interpolation</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;),<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;status(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>j.<ref refid="structtue_1_1manipulation_1_1JointGoal_1abfe2dcb54260a48eb677b13b4a7478cc" kindref="member">status</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Interpolate<sp/>using<sp/>Hermite<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="namespacetue_1_1manipulation_1a611dc76cc57059b9fc8cd3bfa6b75f46" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetue_1_1manipulation_1a611dc76cc57059b9fc8cd3bfa6b75f46" kindref="member">interpolateCubic</ref>(trajectory_msgs::JointTrajectoryPoint&amp;<sp/>p_out,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>trajectory_msgs::JointTrajectoryPoint&amp;<sp/>p0,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>trajectory_msgs::JointTrajectoryPoint&amp;<sp/>p1,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t_abs)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T<sp/>=<sp/>(p1.time_from_start<sp/>-<sp/>p0.time_from_start).toSec();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a978d88b393c8a37dc2614c88788b3442" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">t</ref><sp/>=<sp/>t_abs<sp/>-<sp/>p0.time_from_start.toSec();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>njoints<sp/>=<sp/>p0.positions.size();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>p_out.positions.resize(njoints);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>p_out.velocities.resize(njoints);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>p_out.accelerations.resize(njoints);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transform<sp/>time<sp/>to<sp/>[0,<sp/>1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f<sp/>=<sp/><ref refid="main_8cpp_1a978d88b393c8a37dc2614c88788b3442" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">t</ref><sp/>/<sp/>T;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pre-calculate<sp/>some<sp/>things</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f2<sp/>=<sp/>f<sp/>*<sp/>f;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f3<sp/>=<sp/>f<sp/>*<sp/>f2;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Interpolate<sp/>for<sp/>every<sp/>joint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>njoints;<sp/>++k)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_out.positions[k]<sp/>=<sp/>(2<sp/>*<sp/>f3<sp/>-<sp/>3<sp/>*<sp/>f2<sp/>+<sp/>1)<sp/>*<sp/>p0.positions[k]</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(f3<sp/>-<sp/>2<sp/>*<sp/>f2<sp/>+<sp/>f)<sp/>*<sp/>(p0.velocities[k]<sp/>*<sp/>T)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(-2<sp/>*<sp/>f3<sp/>+<sp/>3<sp/>*<sp/>f2)<sp/>*<sp/>p1.positions[k]</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(f3<sp/>-<sp/>f2)<sp/>*<sp/>(p1.velocities[k]<sp/>*<sp/>T);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_out.velocities[k]<sp/>=<sp/>(6<sp/>*<sp/>f2<sp/>-<sp/>6<sp/>*<sp/>f)<sp/>*<sp/>p0.positions[k]<sp/>/<sp/>T</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(3<sp/>*<sp/>f2<sp/>-<sp/>4<sp/>*<sp/>f<sp/>+<sp/>1)<sp/>*<sp/>p0.velocities[k]</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(-6<sp/>*<sp/>f2<sp/>+<sp/>6<sp/>*<sp/>f)<sp/>*<sp/>p1.positions[k]<sp/>/<sp/>T</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(3<sp/>*<sp/>f2<sp/>-<sp/>2<sp/>*<sp/>f)<sp/>*<sp/>p1.velocities[k];</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_out.accelerations[k]<sp/>=<sp/>((12<sp/>*<sp/>f<sp/>-<sp/>6)<sp/>*<sp/>p0.positions[k]<sp/>/<sp/>T</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(6<sp/>*<sp/>f<sp/>-<sp/>4)<sp/>*<sp/>p0.velocities[k]</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(-12<sp/>*<sp/>f<sp/>+<sp/>6)<sp/>*<sp/>p1.positions[k]<sp/>/<sp/>T</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(6<sp/>*<sp/>f<sp/>-<sp/>2)<sp/>*<sp/>p1.velocities[k])<sp/>/<sp/>T;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>p_out.time_from_start<sp/>=<sp/>ros::Duration(t_abs);</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a14b1153e44989869e84615306bb01dfb" refkind="member"><highlight class="normal"><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a14b1153e44989869e84615306bb01dfb" kindref="member">ReferenceGenerator::ReferenceGenerator</ref>()<sp/>:<sp/>next_goal_id_(0)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a402804706c6a954d00b32c571b7d60ce" kindref="member">visualize_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a402804706c6a954d00b32c571b7d60ce" kindref="member">visualize_</ref>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a0468fa19e85013da2cae90ae70ad66e3" kindref="member">time_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a144ed4467c65f8114cebd5037cc3828f" kindref="member">graph_vis_pos_</ref>.<ref refid="classGraphViewer_1a787c0b51f104b6e9cf1b8ee9eee53cd2" kindref="member">setName</ref>(</highlight><highlight class="stringliteral">&quot;position&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a63c50b2aec0c53d1708a7631352a98e5" kindref="member">graph_vis_vel_</ref>.<ref refid="classGraphViewer_1a787c0b51f104b6e9cf1b8ee9eee53cd2" kindref="member">setName</ref>(</highlight><highlight class="stringliteral">&quot;velocity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a258f890177775f0b0ccd13c7f38ccf31" kindref="member">graph_vis_acc_</ref>.<ref refid="classGraphViewer_1a787c0b51f104b6e9cf1b8ee9eee53cd2" kindref="member">setName</ref>(</highlight><highlight class="stringliteral">&quot;acceleration&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="classtue_1_1manipulation_1_1ReferenceGenerator_1ae8e16bbf93b2cec3eb44f4b09a473d8f" refkind="member"><highlight class="normal"><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1ae8e16bbf93b2cec3eb44f4b09a473d8f" kindref="member">ReferenceGenerator::~ReferenceGenerator</ref>()</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a5c49abef382926954ec875d13e872332" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a5c49abef382926954ec875d13e872332" kindref="member">ReferenceGenerator::initJoint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>name,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_vel,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_acc,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min_pos,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_pos)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>this-&gt;<ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a555a842bb614407d71fe4a70fe508343" kindref="member">joint_index</ref>(name);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idx<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a0003e6c03472b6443714d3b34a83c3df" kindref="member">joint_name_to_index_</ref>[name]<sp/>=<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a8f3dcd21f492091f776c936b1f725c1c" kindref="member">joint_names_</ref>.<ref refid="cpp/container/vector/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a8f3dcd21f492091f776c936b1f725c1c" kindref="member">joint_names_</ref>.<ref refid="cpp/container/vector/push_back" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">push_back</ref>(name);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx<sp/>=<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7f923fdcce940b5e595177e79910eb63" kindref="member">joint_info_</ref>.size();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7f923fdcce940b5e595177e79910eb63" kindref="member">joint_info_</ref>.push_back(<ref refid="structtue_1_1manipulation_1_1JointInfo" kindref="compound">JointInfo</ref>());</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a5c49abef382926954ec875d13e872332" kindref="member">initJoint</ref>(idx,<sp/>max_vel,<sp/>max_acc,<sp/>min_pos,<sp/>max_pos);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a74746992d9f1cfefe7c33c0da6280955" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a5c49abef382926954ec875d13e872332" kindref="member">ReferenceGenerator::initJoint</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_vel,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_acc,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min_pos,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_pos)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtue_1_1manipulation_1_1JointInfo" kindref="compound">JointInfo</ref>&amp;<sp/>j<sp/>=<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7f923fdcce940b5e595177e79910eb63" kindref="member">joint_info_</ref>[idx];</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>j.<ref refid="structtue_1_1manipulation_1_1JointInfo_1ad80f530b2e8aff72d954368e50990480" kindref="member">max_vel</ref><sp/>=<sp/>max_vel;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>j.<ref refid="structtue_1_1manipulation_1_1JointInfo_1ace2e4e6b5686ee0d00f3ab959973e8f7" kindref="member">max_acc</ref><sp/>=<sp/>max_acc;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>j.<ref refid="structtue_1_1manipulation_1_1JointInfo_1a067304d0787464f1695f46604ab1d502" kindref="member">min_pos</ref><sp/>=<sp/>min_pos;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>j.<ref refid="structtue_1_1manipulation_1_1JointInfo_1aed0297e3a415965031f0022cecfe4533" kindref="member">max_pos</ref><sp/>=<sp/>max_pos;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>j.<ref refid="structtue_1_1manipulation_1_1JointInfo_1ad3adcbfccfa2fcafc72a018eeb74e827" kindref="member">interpolator</ref>.<ref refid="classtue_1_1manipulation_1_1ReferenceInterpolator_1af097977b9dafe28e5da0a678af554bc9" kindref="member">setMaxVelocity</ref>(max_vel);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>j.<ref refid="structtue_1_1manipulation_1_1JointInfo_1ad3adcbfccfa2fcafc72a018eeb74e827" kindref="member">interpolator</ref>.<ref refid="classtue_1_1manipulation_1_1ReferenceInterpolator_1a2a6212b65d619dbbcea634dcce514203" kindref="member">setMaxAcceleration</ref>(max_acc);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>j.<ref refid="structtue_1_1manipulation_1_1JointInfo_1ad926eab510c76082cd87188c9dbbda32" kindref="member">goal_id</ref>.<ref refid="cpp/string/basic_string/clear" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">clear</ref>();</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="classtue_1_1manipulation_1_1ReferenceGenerator_1af4b3428493c2be8a28020c97855e1e6e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1af4b3428493c2be8a28020c97855e1e6e" kindref="member">ReferenceGenerator::setJointNames</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;std::string&gt;</ref>&amp;<sp/>joint_names)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a8f3dcd21f492091f776c936b1f725c1c" kindref="member">joint_names_</ref><sp/>=<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1aeed987e5fe080477c88e8896af4dd5ec" kindref="member">joint_names</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>mapping<sp/>from<sp/>joint<sp/>name<sp/>to<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a0003e6c03472b6443714d3b34a83c3df" kindref="member">joint_name_to_index_</ref>.<ref refid="cpp/container/map/clear" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">clear</ref>();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a8f3dcd21f492091f776c936b1f725c1c" kindref="member">joint_names_</ref>.<ref refid="cpp/container/vector/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a0003e6c03472b6443714d3b34a83c3df" kindref="member">joint_name_to_index_</ref>[<ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a8f3dcd21f492091f776c936b1f725c1c" kindref="member">joint_names_</ref>[i]]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7f923fdcce940b5e595177e79910eb63" kindref="member">joint_info_</ref>.resize(<ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a8f3dcd21f492091f776c936b1f725c1c" kindref="member">joint_names_</ref>.<ref refid="cpp/container/vector/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>(),<sp/><ref refid="structtue_1_1manipulation_1_1JointInfo" kindref="compound">JointInfo</ref>());</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7a688db67c0510ce84f0d3eaee0563ac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7a688db67c0510ce84f0d3eaee0563ac" kindref="member">ReferenceGenerator::setJointState</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pos,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vel)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtue_1_1manipulation_1_1JointInfo" kindref="compound">JointInfo</ref>&amp;<sp/>j<sp/>=<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7f923fdcce940b5e595177e79910eb63" kindref="member">joint_info_</ref>[idx];</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>j.<ref refid="structtue_1_1manipulation_1_1JointInfo_1ad3adcbfccfa2fcafc72a018eeb74e827" kindref="member">interpolator</ref>.<ref refid="classtue_1_1manipulation_1_1ReferenceInterpolator_1ad54fc71b33fc5ec45ef0595b5a4853e5" kindref="member">setState</ref>(pos,<sp/>vel);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>j.<ref refid="structtue_1_1manipulation_1_1JointInfo_1ad926eab510c76082cd87188c9dbbda32" kindref="member">goal_id</ref>.<ref refid="cpp/string/basic_string/clear" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">clear</ref>();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>j.<ref refid="structtue_1_1manipulation_1_1JointInfo_1aa28eb88ad89224d562fb312116a3d6c5" kindref="member">is_set</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="classtue_1_1manipulation_1_1ReferenceGenerator_1ad315c025776c49e7b32af73bf70b40a3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7a688db67c0510ce84f0d3eaee0563ac" kindref="member">ReferenceGenerator::setJointState</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>joint_name,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pos,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vel)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>this-&gt;<ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a555a842bb614407d71fe4a70fe508343" kindref="member">joint_index</ref>(joint_name);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idx<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7a688db67c0510ce84f0d3eaee0563ac" kindref="member">setJointState</ref>(idx,<sp/>pos,<sp/>vel);</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="classtue_1_1manipulation_1_1ReferenceGenerator_1ae7a5baeaba74be9d800a7a368054c313" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1ae7a5baeaba74be9d800a7a368054c313" kindref="member">ReferenceGenerator::resetJointState</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>joint_name,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pos)</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>this-&gt;<ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a555a842bb614407d71fe4a70fe508343" kindref="member">joint_index</ref>(joint_name);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idx<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtue_1_1manipulation_1_1JointInfo" kindref="compound">JointInfo</ref>&amp;<sp/>j<sp/>=<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7f923fdcce940b5e595177e79910eb63" kindref="member">joint_info_</ref>[idx];</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>j.<ref refid="structtue_1_1manipulation_1_1JointInfo_1ad3adcbfccfa2fcafc72a018eeb74e827" kindref="member">interpolator</ref>.<ref refid="classtue_1_1manipulation_1_1ReferenceInterpolator_1aeac87324ee737b8f442a9ad80ea36e39" kindref="member">resetState</ref>(pos);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>j.<ref refid="structtue_1_1manipulation_1_1JointInfo_1ad926eab510c76082cd87188c9dbbda32" kindref="member">goal_id</ref>.<ref refid="cpp/string/basic_string/clear" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">clear</ref>();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>j.<ref refid="structtue_1_1manipulation_1_1JointInfo_1aa28eb88ad89224d562fb312116a3d6c5" kindref="member">is_set</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a9c3be7040d69314791bdd7f0dbfaef06" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a9c3be7040d69314791bdd7f0dbfaef06" kindref="member">ReferenceGenerator::setGoal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>control_msgs::FollowJointTrajectoryGoal&amp;<sp/>goal_msg,<sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/><ref refid="cpp/io/basic_stringstream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::stringstream</ref>&amp;<sp/>ss)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.empty())</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/io/basic_stringstream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::stringstream</ref><sp/>s;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;goal-&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1ac5f4a34a292a2c98b5ed4601f1cc940c" kindref="member">next_goal_id_</ref>++);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>s.<ref refid="cpp/io/basic_stringstream/str" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">str</ref>();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a1058426dabba34513b94fcfce5dc2243" kindref="member">goals_</ref>.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>!=<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a1058426dabba34513b94fcfce5dc2243" kindref="member">goals_</ref>.end())</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Goal<sp/>with<sp/>id<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>already<sp/>exists.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtue_1_1manipulation_1_1JointGoal" kindref="compound">JointGoal</ref>&amp;<sp/>goal<sp/>=<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a1058426dabba34513b94fcfce5dc2243" kindref="member">goals_</ref>[id];</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ae4eb8c75e051f199b3f17bfb290d00fb" kindref="member">goal_msg</ref><sp/>=<sp/>goal_msg;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ab2dd2ce4806b0eba02a90ef62a5d6b92" kindref="member">num_goal_joints</ref><sp/>=<sp/>goal_msg.trajectory.joint_names.size();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a0255012fb01ef870735c5358b58ac4ba" kindref="member">joint_index_mapping</ref>.<ref refid="cpp/container/vector/resize" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">resize</ref>(goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ab2dd2ce4806b0eba02a90ef62a5d6b92" kindref="member">num_goal_joints</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>feasibility<sp/>of<sp/>joint<sp/>goals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/container/set" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::set&lt;std::string&gt;</ref><sp/>goals_to_cancel;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>goal_ok<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ab2dd2ce4806b0eba02a90ef62a5d6b92" kindref="member">num_goal_joints</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a8051ec5acb01f7819750af810d579eb5" kindref="member">joint_name</ref><sp/>=<sp/>goal_msg.trajectory.joint_names[i];</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a555a842bb614407d71fe4a70fe508343" kindref="member">joint_index</ref>(<ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a8051ec5acb01f7819750af810d579eb5" kindref="member">joint_name</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idx<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>joint:<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a8051ec5acb01f7819750af810d579eb5" kindref="member">joint_name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal_ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtue_1_1manipulation_1_1JointInfo" kindref="compound">JointInfo</ref>&amp;<sp/>js<sp/>=<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7f923fdcce940b5e595177e79910eb63" kindref="member">joint_info_</ref>[idx];</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!js.<ref refid="structtue_1_1manipulation_1_1JointInfo_1ad926eab510c76082cd87188c9dbbda32" kindref="member">goal_id</ref>.<ref refid="cpp/string/basic_string/empty" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">empty</ref>())</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goals_to_cancel.<ref refid="cpp/container/set/insert" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">insert</ref>(js.<ref refid="structtue_1_1manipulation_1_1JointInfo_1ad926eab510c76082cd87188c9dbbda32" kindref="member">goal_id</ref>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!js.<ref refid="structtue_1_1manipulation_1_1JointInfo_1aa28eb88ad89224d562fb312116a3d6c5" kindref="member">is_set</ref>)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Joint<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a8051ec5acb01f7819750af810d579eb5" kindref="member">joint_name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>initial<sp/>position<sp/>and<sp/>velocity<sp/>is<sp/>not<sp/>set.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal_ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(js.<ref refid="structtue_1_1manipulation_1_1JointInfo_1ad80f530b2e8aff72d954368e50990480" kindref="member">max_vel</ref><sp/>==<sp/>0<sp/>||<sp/>js.<ref refid="structtue_1_1manipulation_1_1JointInfo_1ace2e4e6b5686ee0d00f3ab959973e8f7" kindref="member">max_acc</ref><sp/>==<sp/>0<sp/>||<sp/>(js.<ref refid="structtue_1_1manipulation_1_1JointInfo_1a067304d0787464f1695f46604ab1d502" kindref="member">min_pos</ref><sp/>==<sp/>js.<ref refid="structtue_1_1manipulation_1_1JointInfo_1aed0297e3a415965031f0022cecfe4533" kindref="member">max_pos</ref>))</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Joint<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a8051ec5acb01f7819750af810d579eb5" kindref="member">joint_name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>limits<sp/>not<sp/>initialized:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;max<sp/>vel<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>js.<ref refid="structtue_1_1manipulation_1_1JointInfo_1ad80f530b2e8aff72d954368e50990480" kindref="member">max_vel</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>max<sp/>acc<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>js.<ref refid="structtue_1_1manipulation_1_1JointInfo_1ace2e4e6b5686ee0d00f3ab959973e8f7" kindref="member">max_acc</ref></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>min<sp/>pos<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>js.<ref refid="structtue_1_1manipulation_1_1JointInfo_1a067304d0787464f1695f46604ab1d502" kindref="member">min_pos</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>max<sp/>pos<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>js.<ref refid="structtue_1_1manipulation_1_1JointInfo_1aed0297e3a415965031f0022cecfe4533" kindref="member">max_pos</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal_ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a0255012fb01ef870735c5358b58ac4ba" kindref="member">joint_index_mapping</ref>[i]<sp/>=<sp/>idx;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!goal_ok)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a1058426dabba34513b94fcfce5dc2243" kindref="member">goals_</ref>.erase(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>joint<sp/>goals<sp/>go<sp/>out<sp/>of<sp/>limits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>goal_msg.trajectory.points.size();<sp/>++i)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>trajectory_msgs::JointTrajectoryPoint&amp;<sp/>p<sp/>=<sp/>goal_msg.trajectory.points[i];</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ab2dd2ce4806b0eba02a90ef62a5d6b92" kindref="member">num_goal_joints</ref>;<sp/>++j)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>joint_idx<sp/>=<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a0255012fb01ef870735c5358b58ac4ba" kindref="member">joint_index_mapping</ref>[j];</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtue_1_1manipulation_1_1JointInfo" kindref="compound">JointInfo</ref>&amp;<sp/>js<sp/>=<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7f923fdcce940b5e595177e79910eb63" kindref="member">joint_info_</ref>[joint_idx];</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>p.positions[j];</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&lt;<sp/>js.min_pos<sp/>||<sp/>pos<sp/>&gt;<sp/>js.<ref refid="structtue_1_1manipulation_1_1JointInfo_1aed0297e3a415965031f0022cecfe4533" kindref="member">max_pos</ref>)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Joint<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a8051ec5acb01f7819750af810d579eb5" kindref="member">joint_name</ref>(joint_idx)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>goes<sp/>out<sp/>of<sp/>limits<sp/>in<sp/>point<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(min<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>js.<ref refid="structtue_1_1manipulation_1_1JointInfo_1a067304d0787464f1695f46604ab1d502" kindref="member">min_pos</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>max<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>js.<ref refid="structtue_1_1manipulation_1_1JointInfo_1aed0297e3a415965031f0022cecfe4533" kindref="member">max_pos</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>requested<sp/>goal<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pos<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;).\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal_ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!goal_ok)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a1058426dabba34513b94fcfce5dc2243" kindref="member">goals_</ref>.erase(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cancel<sp/>overlapping<sp/>goals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="cpp/container/set" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::set&lt;std::string&gt;::const_iterator</ref><sp/>it<sp/>=<sp/>goals_to_cancel.<ref refid="cpp/container/set/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>();<sp/>it<sp/>!=<sp/>goals_to_cancel.<ref refid="cpp/container/set/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>();<sp/>++it)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1ada0b0f6e1797db8b58a3198d6fd6af9d" kindref="member">cancelGoal</ref>(*it);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ab2dd2ce4806b0eba02a90ef62a5d6b92" kindref="member">num_goal_joints</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7f923fdcce940b5e595177e79910eb63" kindref="member">joint_info_</ref>[goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a0255012fb01ef870735c5358b58ac4ba" kindref="member">joint_index_mapping</ref>[i]].goal_id<sp/>=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a7eb477147331f1a926f95b3dedc66374" kindref="member">sub_goal_idx</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ae5016c1494faad8a6b782cd880072e76" kindref="member">time_since_start</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a3fbbaf823a5968f1c052361c6441ac71" kindref="member">use_cubic_interpolation</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a625224cd1e516ba74bd7bda46025a2e8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a9c3be7040d69314791bdd7f0dbfaef06" kindref="member">ReferenceGenerator::setGoal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>joint_name,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>position,<sp/><ref refid="structtue_1_1manipulation_1_1JointGoalInfo" kindref="compound">JointGoalInfo</ref>&amp;<sp/>info)</highlight></codeline>
<codeline lineno="319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>control_msgs::FollowJointTrajectoryGoal<sp/>goal_msg;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>goal_msg.trajectory.joint_names.push_back(<ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a8051ec5acb01f7819750af810d579eb5" kindref="member">joint_name</ref>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>trajectory_msgs::JointTrajectoryPoint<sp/>p;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>p.positions.push_back(position);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>goal_msg.trajectory.points.push_back(p);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a9c3be7040d69314791bdd7f0dbfaef06" kindref="member">setGoal</ref>(goal_msg,<sp/>info.<ref refid="structtue_1_1manipulation_1_1JointGoalInfo_1ab99cb1b1abaea2780e071f5edeb95f0c" kindref="member">id</ref>,<sp/>info.<ref refid="structtue_1_1manipulation_1_1JointGoalInfo_1afb4627feba0c3cdd8d364757cdf6fdd2" kindref="member">s_error</ref>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="classtue_1_1manipulation_1_1ReferenceGenerator_1aac0939e97dea774d1b8b2d4a4349f028" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a9c3be7040d69314791bdd7f0dbfaef06" kindref="member">ReferenceGenerator::setGoal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;std::string&gt;</ref>&amp;<sp/>joint_names,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;double&gt;</ref>&amp;<sp/>positions,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtue_1_1manipulation_1_1JointGoalInfo" kindref="compound">JointGoalInfo</ref>&amp;<sp/>info)</highlight></codeline>
<codeline lineno="334"><highlight class="normal">{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1aeed987e5fe080477c88e8896af4dd5ec" kindref="member">joint_names</ref>.<ref refid="cpp/container/vector/empty" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">empty</ref>()<sp/>||<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1aeed987e5fe080477c88e8896af4dd5ec" kindref="member">joint_names</ref>.<ref refid="cpp/container/vector/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>()<sp/>!=<sp/>positions.<ref refid="cpp/container/vector/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>())</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>control_msgs::FollowJointTrajectoryGoal<sp/>goal_msg;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>goal_msg.trajectory.joint_names<sp/>=<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1aeed987e5fe080477c88e8896af4dd5ec" kindref="member">joint_names</ref>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>trajectory_msgs::JointTrajectoryPoint<sp/>p;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>p.positions<sp/>=<sp/>positions;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>goal_msg.trajectory.points.<ref refid="cpp/container/vector/push_back" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">push_back</ref>(p);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a9c3be7040d69314791bdd7f0dbfaef06" kindref="member">setGoal</ref>(goal_msg,<sp/>info.<ref refid="structtue_1_1manipulation_1_1JointGoalInfo_1ab99cb1b1abaea2780e071f5edeb95f0c" kindref="member">id</ref>,<sp/>info.<ref refid="structtue_1_1manipulation_1_1JointGoalInfo_1afb4627feba0c3cdd8d364757cdf6fdd2" kindref="member">s_error</ref>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7458f9ca0ad3691a258c1a224a84f11d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7458f9ca0ad3691a258c1a224a84f11d" kindref="member">ReferenceGenerator::cancelAllGoals</ref>()</highlight></codeline>
<codeline lineno="351"><highlight class="normal">{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>goal<sp/>:<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a1058426dabba34513b94fcfce5dc2243" kindref="member">goals_</ref>)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1ada0b0f6e1797db8b58a3198d6fd6af9d" kindref="member">cancelGoal</ref>(goal.first);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a29acc6bfb9404ad36dc0fdde2e6eda5d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a29acc6bfb9404ad36dc0fdde2e6eda5d" kindref="member">ReferenceGenerator::abortAllGoals</ref>()</highlight></codeline>
<codeline lineno="361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>goal<sp/>:<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a1058426dabba34513b94fcfce5dc2243" kindref="member">goals_</ref>)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1ada0b0f6e1797db8b58a3198d6fd6af9d" kindref="member">cancelGoal</ref>(goal.first,<sp/><ref refid="namespacetue_1_1manipulation_1a18e211b7ddc68fba21a639be64f64691a3a08f6e2fb4da27a5f18a2c9f7c07f50" kindref="member">JOINT_GOAL_ABORTED</ref>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370" refid="classtue_1_1manipulation_1_1ReferenceGenerator_1ada0b0f6e1797db8b58a3198d6fd6af9d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1ada0b0f6e1797db8b58a3198d6fd6af9d" kindref="member">ReferenceGenerator::cancelGoal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/><ref refid="namespacetue_1_1manipulation_1a18e211b7ddc68fba21a639be64f64691" kindref="member">JointGoalStatus</ref><sp/>joint_goal_status)</highlight></codeline>
<codeline lineno="371"><highlight class="normal">{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map&lt;std::string, JointGoal&gt;::iterator</ref><sp/>it<sp/>=<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a1058426dabba34513b94fcfce5dc2243" kindref="member">goals_</ref>.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a1058426dabba34513b94fcfce5dc2243" kindref="member">goals_</ref>.end())</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtue_1_1manipulation_1_1JointGoal" kindref="compound">JointGoal</ref>&amp;<sp/>goal<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ab2dd2ce4806b0eba02a90ef62a5d6b92" kindref="member">num_goal_joints</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7f923fdcce940b5e595177e79910eb63" kindref="member">joint_info_</ref>[goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a0255012fb01ef870735c5358b58ac4ba" kindref="member">joint_index_mapping</ref>[i]].goal_id.clear();</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1abfe2dcb54260a48eb677b13b4a7478cc" kindref="member">status</ref><sp/>=<sp/>joint_goal_status;</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="classtue_1_1manipulation_1_1ReferenceGenerator_1ace136718a5b6a1dfea0873b9fb52165d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1ace136718a5b6a1dfea0873b9fb52165d" kindref="member">ReferenceGenerator::calculatePositionReferencesInternal</ref>(<ref refid="structtue_1_1manipulation_1_1JointGoal" kindref="compound">JointGoal</ref>&amp;<sp/>goal,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt)</highlight></codeline>
<codeline lineno="387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a0468fa19e85013da2cae90ae70ad66e3" kindref="member">time_</ref><sp/>+=<sp/>dt;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ae5016c1494faad8a6b782cd880072e76" kindref="member">time_since_start</ref><sp/>+=<sp/>dt;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>--<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>sub<sp/>goal<sp/>is<sp/>reached</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sub_goal_reached<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a7eb477147331f1a926f95b3dedc66374" kindref="member">sub_goal_idx</ref><sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub_goal_reached<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>trajectory_msgs::JointTrajectoryPoint&amp;<sp/>sub_goal<sp/>=<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ae4eb8c75e051f199b3f17bfb290d00fb" kindref="member">goal_msg</ref>.trajectory.points[goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a7eb477147331f1a926f95b3dedc66374" kindref="member">sub_goal_idx</ref>];</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a3fbbaf823a5968f1c052361c6441ac71" kindref="member">use_cubic_interpolation</ref>)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub_goal_reached<sp/>=<sp/>(goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ae5016c1494faad8a6b782cd880072e76" kindref="member">time_since_start</ref><sp/>&gt;=<sp/>sub_goal.time_from_start.toSec());</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub_goal_reached<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ab2dd2ce4806b0eba02a90ef62a5d6b92" kindref="member">num_goal_joints</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>joint_idx<sp/>=<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a0255012fb01ef870735c5358b58ac4ba" kindref="member">joint_index_mapping</ref>[i];</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7f923fdcce940b5e595177e79910eb63" kindref="member">joint_info_</ref>[joint_idx].interpolator.done())</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub_goal_reached<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>so,<sp/>go<sp/>to<sp/>next<sp/>unreached<sp/>sub<sp/>goal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>MAX_ITERS<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ITER<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub_goal_reached)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it<sp/>has<sp/>been<sp/>reached,<sp/>go<sp/>to<sp/>the<sp/>next<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a7eb477147331f1a926f95b3dedc66374" kindref="member">sub_goal_idx</ref>;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>this<sp/>was<sp/>the<sp/>last<sp/>trajectory<sp/>point.<sp/>If<sp/>so,<sp/>this<sp/>goal<sp/>is<sp/>finished!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a7eb477147331f1a926f95b3dedc66374" kindref="member">sub_goal_idx</ref><sp/>&gt;=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ae4eb8c75e051f199b3f17bfb290d00fb" kindref="member">goal_msg</ref>.trajectory.points.size()))</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ab2dd2ce4806b0eba02a90ef62a5d6b92" kindref="member">num_goal_joints</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7f923fdcce940b5e595177e79910eb63" kindref="member">joint_info_</ref>[goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a0255012fb01ef870735c5358b58ac4ba" kindref="member">joint_index_mapping</ref>[i]].goal_id.clear();</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;Goal<sp/>reached<sp/>in<sp/>&quot;<sp/>&lt;&lt;<sp/>goal.time_since_start<sp/>&lt;&lt;<sp/>&quot;<sp/>seconds&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1abfe2dcb54260a48eb677b13b4a7478cc" kindref="member">status</ref><sp/>=<sp/><ref refid="namespacetue_1_1manipulation_1a18e211b7ddc68fba21a639be64f64691ada5ef7f44c58d19552c439febc072bf9" kindref="member">JOINT_GOAL_SUCCEEDED</ref>;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>trajectory_msgs::JointTrajectoryPoint&amp;<sp/>sub_goal<sp/>=<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ae4eb8c75e051f199b3f17bfb290d00fb" kindref="member">goal_msg</ref>.trajectory.points[goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a7eb477147331f1a926f95b3dedc66374" kindref="member">sub_goal_idx</ref>];</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>velocities<sp/>for<sp/>the<sp/>next<sp/>and<sp/>previous<sp/>point<sp/>are<sp/>defined<sp/>and<sp/>the<sp/>time<sp/>needed<sp/>in<sp/>between<sp/>is<sp/>more<sp/>than<sp/>0,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>cubic<sp/>interpolation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a7eb477147331f1a926f95b3dedc66374" kindref="member">sub_goal_idx</ref><sp/>&gt;<sp/>0</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>sub_goal.velocities.size()<sp/>==<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ab2dd2ce4806b0eba02a90ef62a5d6b92" kindref="member">num_goal_joints</ref></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ae4eb8c75e051f199b3f17bfb290d00fb" kindref="member">goal_msg</ref>.trajectory.points[goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a7eb477147331f1a926f95b3dedc66374" kindref="member">sub_goal_idx</ref><sp/>-<sp/>1].velocities.size()<sp/>==<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ab2dd2ce4806b0eba02a90ef62a5d6b92" kindref="member">num_goal_joints</ref></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(sub_goal.time_from_start<sp/>-<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ae4eb8c75e051f199b3f17bfb290d00fb" kindref="member">goal_msg</ref>.trajectory.points[goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a7eb477147331f1a926f95b3dedc66374" kindref="member">sub_goal_idx</ref><sp/>-<sp/>1].time_from_start).toSec()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a3fbbaf823a5968f1c052361c6441ac71" kindref="member">use_cubic_interpolation</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ae5016c1494faad8a6b782cd880072e76" kindref="member">time_since_start</ref><sp/>=<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ae4eb8c75e051f199b3f17bfb290d00fb" kindref="member">goal_msg</ref>.trajectory.points[goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a7eb477147331f1a926f95b3dedc66374" kindref="member">sub_goal_idx</ref><sp/>-<sp/>1].time_from_start.toSec();</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a3fbbaf823a5968f1c052361c6441ac71" kindref="member">use_cubic_interpolation</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let&apos;s<sp/>do<sp/>some<sp/>smoothing!<sp/>We<sp/>don&apos;t<sp/>want<sp/>to<sp/>decelerate<sp/>to<sp/>0<sp/>for<sp/>each<sp/>sub<sp/>goal.<sp/>However,<sp/>we<sp/>did<sp/>not<sp/>receive<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>intermediate<sp/>velocities<sp/>or<sp/>timestamps<sp/>in<sp/>the<sp/>given<sp/>goal,<sp/>so<sp/>we<sp/>have<sp/>to<sp/>do<sp/>some<sp/>calculation<sp/>of<sp/>our<sp/>own.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>determine<sp/>for<sp/>each<sp/>joint<sp/>the<sp/>maximum<sp/>velocity<sp/>we<sp/>are<sp/>allowed<sp/>to<sp/>have<sp/>when<sp/>reaching<sp/>the<sp/>next<sp/>sub<sp/>goal,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>such<sp/>that<sp/>we<sp/>can<sp/>still<sp/>fully<sp/>brake<sp/>to<sp/>0<sp/>velocity<sp/>in<sp/>the<sp/>goal<sp/>after<sp/>that.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;double&gt;</ref><sp/>sub_goal_velocities(goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ab2dd2ce4806b0eba02a90ef62a5d6b92" kindref="member">num_goal_joints</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub_goal.velocities.size()<sp/>==<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ab2dd2ce4806b0eba02a90ef62a5d6b92" kindref="member">num_goal_joints</ref>)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub_goal_velocities<sp/>=<sp/>sub_goal.velocities;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a7eb477147331f1a926f95b3dedc66374" kindref="member">sub_goal_idx</ref><sp/>+<sp/>1<sp/>&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ae4eb8c75e051f199b3f17bfb290d00fb" kindref="member">goal_msg</ref>.trajectory.points.size()))</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ab2dd2ce4806b0eba02a90ef62a5d6b92" kindref="member">num_goal_joints</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtue_1_1manipulation_1_1JointInfo" kindref="compound">JointInfo</ref>&amp;<sp/>js<sp/>=<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7f923fdcce940b5e595177e79910eb63" kindref="member">joint_info_</ref>[goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a0255012fb01ef870735c5358b58ac4ba" kindref="member">joint_index_mapping</ref>[i]];</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v0<sp/>=<sp/>js.<ref refid="structtue_1_1manipulation_1_1JointInfo_1a4bed43b78905f770a01f3f6aa2a889bd" kindref="member">velocity</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x0<sp/>=<sp/>js.<ref refid="structtue_1_1manipulation_1_1JointInfo_1a4be44d20e674dd16eee956723defcf5b" kindref="member">position</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/>sub_goal.positions[i];<sp/><sp/></highlight><highlight class="comment">//<sp/>Next<sp/>sub<sp/>goal<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x2<sp/>=<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ae4eb8c75e051f199b3f17bfb290d00fb" kindref="member">goal_msg</ref>.trajectory.points[goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a7eb477147331f1a926f95b3dedc66374" kindref="member">sub_goal_idx</ref><sp/>+<sp/>1].positions[i];<sp/><sp/></highlight><highlight class="comment">//<sp/>Sub<sp/>goal<sp/>position<sp/>after<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>x0,<sp/>x1<sp/>and<sp/>x2<sp/>are<sp/>going<sp/>in<sp/>the<sp/>same<sp/>direction.<sp/>If<sp/>not,<sp/>the<sp/>velocity<sp/>has<sp/>to<sp/>be<sp/>0<sp/>in<sp/>x1<sp/>because</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>to<sp/>change<sp/>direction<sp/>there.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((x0<sp/>&lt;<sp/>x1)<sp/>==<sp/>(x1<sp/>&lt;<sp/>x2))</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>maximum<sp/>velocity<sp/>we<sp/>can<sp/>reach<sp/>from<sp/>x0<sp/>to<sp/>x1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v_max_01<sp/>=<sp/>sqrt(2<sp/>*<sp/>js.<ref refid="structtue_1_1manipulation_1_1JointInfo_1ace2e4e6b5686ee0d00f3ab959973e8f7" kindref="member">max_acc</ref><sp/>*<sp/>std::abs(x1<sp/>-<sp/>x0)<sp/>+<sp/>v0<sp/>*<sp/>v0);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>maximum<sp/>velocity<sp/>we<sp/>are<sp/>allowed<sp/>to<sp/>have<sp/>such<sp/>that<sp/>we<sp/>can<sp/>still<sp/>reach<sp/>x2<sp/>with<sp/>0<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v_max_12<sp/>=<sp/>sqrt(2<sp/>*<sp/>js.<ref refid="structtue_1_1manipulation_1_1JointInfo_1ace2e4e6b5686ee0d00f3ab959973e8f7" kindref="member">max_acc</ref><sp/>*<sp/>std::abs(x2<sp/>-<sp/>x1));</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub_goal_velocities[i]<sp/>=<sp/><ref refid="cpp/algorithm/min" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::min</ref>(js.<ref refid="structtue_1_1manipulation_1_1JointInfo_1ad80f530b2e8aff72d954368e50990480" kindref="member">max_vel</ref>,<sp/><ref refid="cpp/algorithm/min" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::min</ref>(v_max_01,<sp/>v_max_12));</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x2<sp/>&lt;<sp/>x1)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub_goal_velocities[i]<sp/>=<sp/>-sub_goal_velocities[i];</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>given<sp/>our<sp/>current<sp/>joint<sp/>positions<sp/>and<sp/>velocities,<sp/>the<sp/>sub<sp/>goal<sp/>positions<sp/>and<sp/>the<sp/>sub<sp/>goal<sp/>velocities<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>calculated,<sp/>calculate<sp/>the<sp/>time<sp/>needed<sp/>for<sp/>each<sp/>joint<sp/>to<sp/>reach<sp/>the<sp/>sub<sp/>goal<sp/>position<sp/>and<sp/>velocity,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remember<sp/>the<sp/>longest<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ab2dd2ce4806b0eba02a90ef62a5d6b92" kindref="member">num_goal_joints</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtue_1_1manipulation_1_1JointInfo" kindref="compound">JointInfo</ref>&amp;<sp/>js<sp/>=<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7f923fdcce940b5e595177e79910eb63" kindref="member">joint_info_</ref>[goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a0255012fb01ef870735c5358b58ac4ba" kindref="member">joint_index_mapping</ref>[i]];</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/>std::max&lt;double&gt;(time,<sp/>js.<ref refid="structtue_1_1manipulation_1_1JointInfo_1ad3adcbfccfa2fcafc72a018eeb74e827" kindref="member">interpolator</ref>.<ref refid="classtue_1_1manipulation_1_1ReferenceInterpolator_1ab1e7dc0eb2f72adcaf322184f3c68e3b" kindref="member">calculateTimeNeeded</ref>(sub_goal.positions[i],<sp/>sub_goal_velocities[i]));</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>just<sp/>give<sp/>each<sp/>individual<sp/>joint<sp/>the<sp/>calculated<sp/>sub<sp/>goal<sp/>velocity<sp/>and<sp/>position<sp/>and<sp/>goal<sp/>time<sp/>calculated<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>one<sp/>problem:<sp/>it<sp/>might<sp/>be<sp/>the<sp/>case<sp/>that<sp/>the<sp/>max<sp/>time<sp/>calculated<sp/>is<sp/>too<sp/>long<sp/>for<sp/>the<sp/>joint<sp/>to<sp/>reach<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>given<sp/>sub<sp/>goal<sp/>position<sp/>and<sp/>velocity.<sp/>For<sp/>example,<sp/>it<sp/>might<sp/>have<sp/>to<sp/>brake<sp/>to<sp/>take<sp/>more<sp/>time,<sp/>but<sp/>then<sp/>not<sp/>have<sp/>enough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>position<sp/>margin<sp/>left<sp/>to<sp/>accerelate<sp/>to<sp/>the<sp/>sub<sp/>goal<sp/>velocity<sp/>(maybe<sp/>a<sp/>bit<sp/>hard<sp/>to<sp/>grasp,<sp/>but<sp/>think<sp/>about<sp/>it<sp/>for<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>while...).<sp/>Therefore<sp/>we<sp/>need<sp/>to<sp/>check<sp/>for<sp/>each<sp/>joint<sp/>if<sp/>the<sp/>calculated<sp/>sub<sp/>goal<sp/>and<sp/>time<sp/>is<sp/>still<sp/>feasible.<sp/>If<sp/>not,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>do<sp/>a<sp/>dirty<sp/>trick:<sp/>we<sp/>lower<sp/>the<sp/>sub<sp/>goal<sp/>velocity<sp/>a<sp/>bit,<sp/>see<sp/>if<sp/>that<sp/>alters<sp/>the<sp/>max<sp/>time,<sp/>and<sp/>try<sp/>again.<sp/>We<sp/>do<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>an<sp/>iterative<sp/>fashion<sp/>until<sp/>all<sp/>joint<sp/>goals<sp/>are<sp/>reachable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>worry:<sp/>in<sp/>most<sp/>cases<sp/>repetition<sp/>is<sp/>not<sp/>needed<sp/>and<sp/>if<sp/>it<sp/>is,<sp/>the<sp/>number<sp/>of<sp/>iterations<sp/>will<sp/>be<sp/>quite<sp/>low.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ITER;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ITER<sp/>&gt;<sp/>MAX_ITERS)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>all_goals_ok<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ab2dd2ce4806b0eba02a90ef62a5d6b92" kindref="member">num_goal_joints</ref><sp/>&amp;&amp;<sp/>all_goals_ok;<sp/>++i)</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtue_1_1manipulation_1_1JointInfo" kindref="compound">JointInfo</ref>&amp;<sp/>js<sp/>=<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7f923fdcce940b5e595177e79910eb63" kindref="member">joint_info_</ref>[goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a0255012fb01ef870735c5358b58ac4ba" kindref="member">joint_index_mapping</ref>[i]];</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!js.<ref refid="structtue_1_1manipulation_1_1JointInfo_1ad3adcbfccfa2fcafc72a018eeb74e827" kindref="member">interpolator</ref>.<ref refid="classtue_1_1manipulation_1_1ReferenceInterpolator_1a6e9b088b0b3c76448c64f6de86644bb9" kindref="member">setGoal</ref>(sub_goal.positions[i],<sp/>sub_goal_velocities[i],<sp/>time))</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ITER;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ITER<sp/>&gt;<sp/>MAX_ITERS)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Whoops,<sp/>we<sp/>can&apos;t<sp/>reach<sp/>the<sp/>goal<sp/>in<sp/>the<sp/>time<sp/>given!<sp/>Let&apos;s<sp/>lower<sp/>the<sp/>sub<sp/>goal<sp/>velocity<sp/>and<sp/>try<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub_goal_velocities[i]<sp/>*=<sp/>0.9;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Before<sp/>trying<sp/>again,<sp/>we<sp/>check<sp/>if<sp/>the<sp/>time<sp/>needed<sp/>has<sp/>changed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>new_joint_time<sp/>=<sp/>js.<ref refid="structtue_1_1manipulation_1_1JointInfo_1ad3adcbfccfa2fcafc72a018eeb74e827" kindref="member">interpolator</ref>.<ref refid="classtue_1_1manipulation_1_1ReferenceInterpolator_1ab1e7dc0eb2f72adcaf322184f3c68e3b" kindref="member">calculateTimeNeeded</ref>(sub_goal.positions[i],<sp/>sub_goal_velocities[i]);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_joint_time<sp/>&gt;<sp/>time)</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>now<sp/>the<sp/>joint<sp/>needs<sp/>longer<sp/>than<sp/>the<sp/>current<sp/>max<sp/>time,<sp/>we<sp/>have<sp/>to<sp/>recalculate<sp/>the<sp/>max<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>repeat<sp/>the<sp/>process<sp/>for<sp/>all<sp/>joints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/><ref refid="cpp/algorithm/max" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::max</ref>(new_joint_time,<sp/>time);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_goals_ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(all_goals_ok)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>references<sp/>using<sp/>interpolation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>trajectory_msgs::JointTrajectoryPoint&amp;<sp/>sub_goal<sp/>=<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ae4eb8c75e051f199b3f17bfb290d00fb" kindref="member">goal_msg</ref>.trajectory.points[goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a7eb477147331f1a926f95b3dedc66374" kindref="member">sub_goal_idx</ref>];</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a3fbbaf823a5968f1c052361c6441ac71" kindref="member">use_cubic_interpolation</ref>)</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>trajectory_msgs::JointTrajectoryPoint&amp;<sp/>prev_sub_goal<sp/>=<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ae4eb8c75e051f199b3f17bfb290d00fb" kindref="member">goal_msg</ref>.trajectory.points[goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a7eb477147331f1a926f95b3dedc66374" kindref="member">sub_goal_idx</ref><sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trajectory_msgs::JointTrajectoryPoint<sp/>p_interpolated;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetue_1_1manipulation_1a611dc76cc57059b9fc8cd3bfa6b75f46" kindref="member">interpolateCubic</ref>(p_interpolated,<sp/>prev_sub_goal,<sp/>sub_goal,<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ae5016c1494faad8a6b782cd880072e76" kindref="member">time_since_start</ref>);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>state<sp/>of<sp/>the<sp/>interpolators<sp/>(otherwise<sp/>we&apos;ll<sp/>have<sp/>a<sp/>problem<sp/>if<sp/>we<sp/>switch<sp/>to<sp/>non-cubic<sp/>interpolation)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ab2dd2ce4806b0eba02a90ef62a5d6b92" kindref="member">num_goal_joints</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>joint_idx<sp/>=<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a0255012fb01ef870735c5358b58ac4ba" kindref="member">joint_index_mapping</ref>[i];</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7f923fdcce940b5e595177e79910eb63" kindref="member">joint_info_</ref>[joint_idx].interpolator.setState(p_interpolated.positions[i],<sp/>p_interpolated.velocities[i],</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_interpolated.accelerations[i]);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ab2dd2ce4806b0eba02a90ef62a5d6b92" kindref="member">num_goal_joints</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>joint_idx<sp/>=<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a0255012fb01ef870735c5358b58ac4ba" kindref="member">joint_index_mapping</ref>[i];</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtue_1_1manipulation_1_1JointInfo" kindref="compound">JointInfo</ref>&amp;<sp/>j<sp/>=<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7f923fdcce940b5e595177e79910eb63" kindref="member">joint_info_</ref>[joint_idx];</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j.<ref refid="structtue_1_1manipulation_1_1JointInfo_1ad3adcbfccfa2fcafc72a018eeb74e827" kindref="member">interpolator</ref>.<ref refid="classtue_1_1manipulation_1_1ReferenceInterpolator_1a75a602ea726b7788b6ada11c0449a59e" kindref="member">update</ref>(dt);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a402804706c6a954d00b32c571b7d60ce" kindref="member">visualize_</ref>)</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1ab2dd2ce4806b0eba02a90ef62a5d6b92" kindref="member">num_goal_joints</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>joint_idx<sp/>=<sp/>goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1a0255012fb01ef870735c5358b58ac4ba" kindref="member">joint_index_mapping</ref>[i];</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a144ed4467c65f8114cebd5037cc3828f" kindref="member">graph_vis_pos_</ref>.<ref refid="classGraphViewer_1a3bf5fb244f4f9e674b7ac0d56286adec" kindref="member">addPoint</ref>(0,<sp/>joint_idx,<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a0468fa19e85013da2cae90ae70ad66e3" kindref="member">time_</ref>,<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7f923fdcce940b5e595177e79910eb63" kindref="member">joint_info_</ref>[joint_idx].position());</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a63c50b2aec0c53d1708a7631352a98e5" kindref="member">graph_vis_vel_</ref>.<ref refid="classGraphViewer_1a3bf5fb244f4f9e674b7ac0d56286adec" kindref="member">addPoint</ref>(0,<sp/>joint_idx,<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a0468fa19e85013da2cae90ae70ad66e3" kindref="member">time_</ref>,<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7f923fdcce940b5e595177e79910eb63" kindref="member">joint_info_</ref>[joint_idx].velocity());</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a258f890177775f0b0ccd13c7f38ccf31" kindref="member">graph_vis_acc_</ref>.<ref refid="classGraphViewer_1a3bf5fb244f4f9e674b7ac0d56286adec" kindref="member">addPoint</ref>(0,<sp/>joint_idx,<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a0468fa19e85013da2cae90ae70ad66e3" kindref="member">time_</ref>,<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7f923fdcce940b5e595177e79910eb63" kindref="member">joint_info_</ref>[joint_idx].acceleration());</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ITER<sp/>&lt;<sp/>MAX_ITERS);</highlight></codeline>
<codeline lineno="609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613" refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a906acfa86e9127a575e0257ac87768eb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a906acfa86e9127a575e0257ac87768eb" kindref="member">ReferenceGenerator::calculatePositionReferences</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt,<sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;double&gt;</ref>&amp;<sp/>references)</highlight></codeline>
<codeline lineno="614"><highlight class="normal">{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(references.<ref refid="cpp/container/vector/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>()<sp/>!=<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7f923fdcce940b5e595177e79910eb63" kindref="member">joint_info_</ref>.size())</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>references.<ref refid="cpp/container/vector/resize" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">resize</ref>(<ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7f923fdcce940b5e595177e79910eb63" kindref="member">joint_info_</ref>.size());</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>succes<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map&lt;std::string, JointGoal&gt;::iterator</ref><sp/>it<sp/>=<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a1058426dabba34513b94fcfce5dc2243" kindref="member">goals_</ref>.begin();<sp/>it<sp/>!=<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a1058426dabba34513b94fcfce5dc2243" kindref="member">goals_</ref>.end();<sp/>++it)</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtue_1_1manipulation_1_1JointGoal" kindref="compound">JointGoal</ref>&amp;<sp/>goal<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(goal.<ref refid="structtue_1_1manipulation_1_1JointGoal_1abfe2dcb54260a48eb677b13b4a7478cc" kindref="member">status</ref><sp/>!=<sp/><ref refid="namespacetue_1_1manipulation_1a18e211b7ddc68fba21a639be64f64691aadd4040609e272f549b8b5adee813bae" kindref="member">JOINT_GOAL_ACTIVE</ref>)</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>succes<sp/>=<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1ace136718a5b6a1dfea0873b9fb52165d" kindref="member">calculatePositionReferencesInternal</ref>(goal,<sp/>dt)<sp/>&amp;&amp;<sp/>succes;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7f923fdcce940b5e595177e79910eb63" kindref="member">joint_info_</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtue_1_1manipulation_1_1JointInfo" kindref="compound">JointInfo</ref>&amp;<sp/>j<sp/>=<sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a7f923fdcce940b5e595177e79910eb63" kindref="member">joint_info_</ref>[i];</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j.<ref refid="structtue_1_1manipulation_1_1JointInfo_1ad926eab510c76082cd87188c9dbbda32" kindref="member">goal_id</ref>.<ref refid="cpp/string/basic_string/empty" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">empty</ref>())</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceInterpolator" kindref="compound">ReferenceInterpolator</ref>&amp;<sp/>r<sp/>=<sp/>j.<ref refid="structtue_1_1manipulation_1_1JointInfo_1ad3adcbfccfa2fcafc72a018eeb74e827" kindref="member">interpolator</ref>;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(r.<ref refid="classtue_1_1manipulation_1_1ReferenceInterpolator_1add3e09e8af7a3f1267cf38997bda6398" kindref="member">velocity</ref>())<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="classtue_1_1manipulation_1_1ReferenceInterpolator_1a3217bca61406b5ff696a24db85d84986" kindref="member">brake</ref>(dt);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>references[i]<sp/>=<sp/>j.<ref refid="structtue_1_1manipulation_1_1JointInfo_1ad3adcbfccfa2fcafc72a018eeb74e827" kindref="member">interpolator</ref>.<ref refid="classtue_1_1manipulation_1_1ReferenceInterpolator_1aa4389060d5a9ac1344ced9000565cccb" kindref="member">position</ref>();</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a402804706c6a954d00b32c571b7d60ce" kindref="member">visualize_</ref>)</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a144ed4467c65f8114cebd5037cc3828f" kindref="member">graph_vis_pos_</ref>.<ref refid="classGraphViewer_1a8eb1732698946d5d2ec8c7f3227f6289" kindref="member">view</ref>();</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a63c50b2aec0c53d1708a7631352a98e5" kindref="member">graph_vis_vel_</ref>.<ref refid="classGraphViewer_1a8eb1732698946d5d2ec8c7f3227f6289" kindref="member">view</ref>();</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtue_1_1manipulation_1_1ReferenceGenerator_1a258f890177775f0b0ccd13c7f38ccf31" kindref="member">graph_vis_acc_</ref>.<ref refid="classGraphViewer_1a8eb1732698946d5d2ec8c7f3227f6289" kindref="member">view</ref>();</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>succes;</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>tue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>manipulation</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/reference_generator.cpp"/>
  </compounddef>
</doxygen>
