<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classchallenge__serving__drinks_1_1get__order_1_1GetOrder" kind="class" language="Python" prot="public">
    <compoundname>challenge_serving_drinks::get_order::GetOrder</compoundname>
    <basecompoundref prot="public" virt="non-virtual">StateMachine</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classchallenge__serving__drinks_1_1get__order_1_1GetOrder_1a2ae409909ac205b79dfe5f00a0d2f98d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def challenge_serving_drinks.get_order.GetOrder.__init__</definition>
        <argsstring>(self, robot, operator_name, drink_designator, available_drinks_designator, unavailable_drink_designator, name_options, objects, learn_check_designator, target_room_designator)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="namespacechallenge__serving__drinks_1_1get__order_1a37a4ed49dc61ccbba07e5b18f7697ec7" kindref="member">robot</ref></type>
          <defname>robot</defname>
        </param>
        <param>
          <type><ref refid="namespacechallenge__serving__drinks_1_1get__order_1ad8893b768002797a580d0283b7418de7" kindref="member">operator_name</ref></type>
          <defname>operator_name</defname>
        </param>
        <param>
          <type>drink_designator</type>
          <defname>drink_designator</defname>
        </param>
        <param>
          <type><ref refid="namespacechallenge__serving__drinks_1_1get__order_1a633787387b23750a907fd82502cbc8e9" kindref="member">available_drinks_designator</ref></type>
          <defname>available_drinks_designator</defname>
        </param>
        <param>
          <type><ref refid="namespacechallenge__serving__drinks_1_1get__order_1a7d7d9df2bb5dbf1669c0f2febbfa5808" kindref="member">unavailable_drink_designator</ref></type>
          <defname>unavailable_drink_designator</defname>
        </param>
        <param>
          <type><ref refid="namespacechallenge__serving__drinks_1_1get__order_1a23a3a5233936db897c114913beb1f921" kindref="member">name_options</ref></type>
          <defname>name_options</defname>
        </param>
        <param>
          <type><ref refid="namespacechallenge__serving__drinks_1_1get__order_1aa8985d5cbec31ca25f4bf9a755c721fe" kindref="member">objects</ref></type>
          <defname>objects</defname>
        </param>
        <param>
          <type><ref refid="namespacechallenge__serving__drinks_1_1get__order_1a032f51500a650ba5d1aed3ac2a3070eb" kindref="member">learn_check_designator</ref></type>
          <defname>learn_check_designator</defname>
        </param>
        <param>
          <type>target_room_designator</type>
          <defname>target_room_designator</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Initialization method

:param robot: robot api object
:param operator_name: name with which the operator will be stored in image recognition module
:param drink_designator: (VariableDesignator) in which the drink to fetch is stored
:param available_drinks_designator: (VariableDesignator) in which the available drinks are stored
:param unavailable_drink_designator: (VariableDesignator) in which the unavailable drink is stored
:param name_options: Names from common knowledge
:param objects: Objects from common knowledge
:param learn_check_designator: (VariableDesignator) Bool flag indicating whether the operator was learnt
    successfully
:param target_room_designator: (EdEntityDesignator) Entity specifying the target room where the operator needs
    to be searched for getting an order
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/challenge_serving_drinks/get_order.py" line="18" column="1" bodyfile="src/challenge_serving_drinks/get_order.py" bodystart="18" bodyend="180"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Gets an order. If succeeded, the person_designator and drink_designator are filled and can be used in subsequent
states.
</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>challenge_serving_drinks.get_order.GetOrder</label>
        <link refid="classchallenge__serving__drinks_1_1get__order_1_1GetOrder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>StateMachine</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>challenge_serving_drinks.get_order.GetOrder</label>
        <link refid="classchallenge__serving__drinks_1_1get__order_1_1GetOrder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>StateMachine</label>
      </node>
    </collaborationgraph>
    <location file="src/challenge_serving_drinks/get_order.py" line="13" column="1" bodyfile="src/challenge_serving_drinks/get_order.py" bodystart="13" bodyend="181"/>
    <listofallmembers>
      <member refid="classchallenge__serving__drinks_1_1get__order_1_1GetOrder_1a2ae409909ac205b79dfe5f00a0d2f98d" prot="public" virt="non-virtual"><scope>challenge_serving_drinks::get_order::GetOrder</scope><name>__init__</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
