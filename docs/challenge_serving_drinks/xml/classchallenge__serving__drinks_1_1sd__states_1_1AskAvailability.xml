<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classchallenge__serving__drinks_1_1sd__states_1_1AskAvailability" kind="class" language="Python" prot="public">
    <compoundname>challenge_serving_drinks::sd_states::AskAvailability</compoundname>
    <basecompoundref prot="public" virt="non-virtual">State</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classchallenge__serving__drinks_1_1sd__states_1_1AskAvailability_1a6e0d0cfb70046367e96895d4a5a1fd95" prot="private" static="no" mutable="no">
        <type></type>
        <definition>challenge_serving_drinks.sd_states.AskAvailability::_drinks_target</definition>
        <argsstring></argsstring>
        <name>_drinks_target</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/challenge_serving_drinks/sd_states.py" line="234" column="1" bodyfile="src/challenge_serving_drinks/sd_states.py" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classchallenge__serving__drinks_1_1sd__states_1_1AskAvailability_1a2265f2d78c0f25724d48539d4e4a964c" prot="private" static="no" mutable="no">
        <type></type>
        <definition>challenge_serving_drinks.sd_states.AskAvailability::_max_queries_per_try</definition>
        <argsstring></argsstring>
        <name>_max_queries_per_try</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/challenge_serving_drinks/sd_states.py" line="230" column="1" bodyfile="src/challenge_serving_drinks/sd_states.py" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classchallenge__serving__drinks_1_1sd__states_1_1AskAvailability_1a7be30f43ededf1f41a2ca2383c4e9ab0" prot="private" static="no" mutable="no">
        <type></type>
        <definition>challenge_serving_drinks.sd_states.AskAvailability::_max_tries</definition>
        <argsstring></argsstring>
        <name>_max_tries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/challenge_serving_drinks/sd_states.py" line="229" column="1" bodyfile="src/challenge_serving_drinks/sd_states.py" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classchallenge__serving__drinks_1_1sd__states_1_1AskAvailability_1a0b60c4d45d7ab1454729a8bd818e1602" prot="private" static="no" mutable="no">
        <type></type>
        <definition>challenge_serving_drinks.sd_states.AskAvailability::_objects</definition>
        <argsstring></argsstring>
        <name>_objects</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/challenge_serving_drinks/sd_states.py" line="228" column="1" bodyfile="src/challenge_serving_drinks/sd_states.py" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classchallenge__serving__drinks_1_1sd__states_1_1AskAvailability_1adaaa08cd6e2d48a82caedf4145cca993" prot="private" static="no" mutable="no">
        <type></type>
        <definition>challenge_serving_drinks.sd_states.AskAvailability::_robot</definition>
        <argsstring></argsstring>
        <name>_robot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/challenge_serving_drinks/sd_states.py" line="226" column="1" bodyfile="src/challenge_serving_drinks/sd_states.py" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classchallenge__serving__drinks_1_1sd__states_1_1AskAvailability_1aae0a8f0e51f48c53a37cca58bf0578d5" prot="private" static="no" mutable="no">
        <type></type>
        <definition>challenge_serving_drinks.sd_states.AskAvailability::_trial</definition>
        <argsstring></argsstring>
        <name>_trial</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/challenge_serving_drinks/sd_states.py" line="231" column="1" bodyfile="src/challenge_serving_drinks/sd_states.py" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classchallenge__serving__drinks_1_1sd__states_1_1AskAvailability_1acb070bb46838a505da8b60c4b9ee3d47" prot="private" static="no" mutable="no">
        <type></type>
        <definition>challenge_serving_drinks.sd_states.AskAvailability::_unavailable_drink_designator</definition>
        <argsstring></argsstring>
        <name>_unavailable_drink_designator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/challenge_serving_drinks/sd_states.py" line="227" column="1" bodyfile="src/challenge_serving_drinks/sd_states.py" bodystart="227" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classchallenge__serving__drinks_1_1sd__states_1_1AskAvailability_1ad0a535571c90d421046f2e081cde516b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def challenge_serving_drinks.sd_states.AskAvailability.__init__</definition>
        <argsstring>(self, robot, unavailable_drink_designator, objects, max_tries=3, max_queries_per_try=3)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>robot</type>
          <defname>robot</defname>
        </param>
        <param>
          <type>unavailable_drink_designator</type>
          <defname>unavailable_drink_designator</defname>
        </param>
        <param>
          <type><ref refid="namespaceanalyse-annotations_1af4113b136547aa5563f633bb2da42c17" kindref="member" external="/home/docker/ros/noetic/system/build/docs/test_tools/tags">objects</ref></type>
          <defname>objects</defname>
        </param>
        <param>
          <type>max_tries</type>
          <defname>max_tries</defname>
          <defval>3</defval>
        </param>
        <param>
          <type>max_queries_per_try</type>
          <defname>max_queries_per_try</defname>
          <defval>3</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Initialization method

:param robot: robot api object
:param unavailable_drink_designator: (VariableDesignator) in which the unavailable drink is stored
:param objects: Objects from common knowledge
:param max_tries: (int) maximum number of times the robot asks which drink
:param max_queries_per_try: (int) maximum number of queries to the HMI server per try
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/challenge_serving_drinks/sd_states.py" line="215" column="1" bodyfile="src/challenge_serving_drinks/sd_states.py" bodystart="215" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classchallenge__serving__drinks_1_1sd__states_1_1AskAvailability_1a2bd27f613153b87bc7f8426387f37af9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def challenge_serving_drinks.sd_states.AskAvailability.execute</definition>
        <argsstring>(self, userdata=None)</argsstring>
        <name>execute</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>userdata</type>
          <defname>userdata</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/challenge_serving_drinks/sd_states.py" line="253" column="1" bodyfile="src/challenge_serving_drinks/sd_states.py" bodystart="253" bodyend="294"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classchallenge__serving__drinks_1_1sd__states_1_1AskAvailability_1afe01f758cd36f1b97756f2a51b9cdfda" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def challenge_serving_drinks.sd_states.AskAvailability._confirm</definition>
        <argsstring>(self)</argsstring>
        <name>_confirm</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Queries the HMI server for confirmation
:return: (bool) whether the understood beverage was correct
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/challenge_serving_drinks/sd_states.py" line="321" column="1" bodyfile="src/challenge_serving_drinks/sd_states.py" bodystart="321" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="classchallenge__serving__drinks_1_1sd__states_1_1AskAvailability_1a852fd86ba8fdaaf27418abd297c97e8a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def challenge_serving_drinks.sd_states.AskAvailability._query_drink</definition>
        <argsstring>(self, max_tries)</argsstring>
        <name>_query_drink</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>max_tries</type>
          <defname>max_tries</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Queries the HMI server for &lt;max_tries&gt; times until a result has been obtained
:return: (HMIResult) (N.B.: the &apos;semantics&apos; attribute should be a dict with &apos;beverage&apos; key)
:raises: (TimeoutException) if robot didn&apos;t hear anything
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/challenge_serving_drinks/sd_states.py" line="295" column="1" bodyfile="src/challenge_serving_drinks/sd_states.py" bodystart="295" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classchallenge__serving__drinks_1_1sd__states_1_1AskAvailability_1a55aff0b527c96d986eb4467af1ef9724" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def challenge_serving_drinks.sd_states.AskAvailability._setup_drinks_grammar</definition>
        <argsstring>(self)</argsstring>
        <name>_setup_drinks_grammar</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Sets up the grammar to ask which drink is unavailable based on the objects in the knowlegde.

:return: tuple(str, str) grammar and target
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/challenge_serving_drinks/sd_states.py" line="236" column="1" bodyfile="src/challenge_serving_drinks/sd_states.py" bodystart="236" bodyend="252"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Asks the bartender which is the unavailable drink.

This is based on the &apos;TakeOrder&apos; class of the the restaurant challenge. Might
be nice to merge these two.
</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>challenge_serving_drinks.sd_states.AskAvailability</label>
        <link refid="classchallenge__serving__drinks_1_1sd__states_1_1AskAvailability"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>State</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>challenge_serving_drinks.sd_states.AskAvailability</label>
        <link refid="classchallenge__serving__drinks_1_1sd__states_1_1AskAvailability"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>State</label>
      </node>
    </collaborationgraph>
    <location file="src/challenge_serving_drinks/sd_states.py" line="209" column="1" bodyfile="src/challenge_serving_drinks/sd_states.py" bodystart="209" bodyend="335"/>
    <listofallmembers>
      <member refid="classchallenge__serving__drinks_1_1sd__states_1_1AskAvailability_1ad0a535571c90d421046f2e081cde516b" prot="public" virt="non-virtual"><scope>challenge_serving_drinks::sd_states::AskAvailability</scope><name>__init__</name></member>
      <member refid="classchallenge__serving__drinks_1_1sd__states_1_1AskAvailability_1afe01f758cd36f1b97756f2a51b9cdfda" prot="private" virt="non-virtual"><scope>challenge_serving_drinks::sd_states::AskAvailability</scope><name>_confirm</name></member>
      <member refid="classchallenge__serving__drinks_1_1sd__states_1_1AskAvailability_1a6e0d0cfb70046367e96895d4a5a1fd95" prot="private" virt="non-virtual"><scope>challenge_serving_drinks::sd_states::AskAvailability</scope><name>_drinks_target</name></member>
      <member refid="classchallenge__serving__drinks_1_1sd__states_1_1AskAvailability_1a2265f2d78c0f25724d48539d4e4a964c" prot="private" virt="non-virtual"><scope>challenge_serving_drinks::sd_states::AskAvailability</scope><name>_max_queries_per_try</name></member>
      <member refid="classchallenge__serving__drinks_1_1sd__states_1_1AskAvailability_1a7be30f43ededf1f41a2ca2383c4e9ab0" prot="private" virt="non-virtual"><scope>challenge_serving_drinks::sd_states::AskAvailability</scope><name>_max_tries</name></member>
      <member refid="classchallenge__serving__drinks_1_1sd__states_1_1AskAvailability_1a0b60c4d45d7ab1454729a8bd818e1602" prot="private" virt="non-virtual"><scope>challenge_serving_drinks::sd_states::AskAvailability</scope><name>_objects</name></member>
      <member refid="classchallenge__serving__drinks_1_1sd__states_1_1AskAvailability_1a852fd86ba8fdaaf27418abd297c97e8a" prot="private" virt="non-virtual"><scope>challenge_serving_drinks::sd_states::AskAvailability</scope><name>_query_drink</name></member>
      <member refid="classchallenge__serving__drinks_1_1sd__states_1_1AskAvailability_1adaaa08cd6e2d48a82caedf4145cca993" prot="private" virt="non-virtual"><scope>challenge_serving_drinks::sd_states::AskAvailability</scope><name>_robot</name></member>
      <member refid="classchallenge__serving__drinks_1_1sd__states_1_1AskAvailability_1a55aff0b527c96d986eb4467af1ef9724" prot="private" virt="non-virtual"><scope>challenge_serving_drinks::sd_states::AskAvailability</scope><name>_setup_drinks_grammar</name></member>
      <member refid="classchallenge__serving__drinks_1_1sd__states_1_1AskAvailability_1aae0a8f0e51f48c53a37cca58bf0578d5" prot="private" virt="non-virtual"><scope>challenge_serving_drinks::sd_states::AskAvailability</scope><name>_trial</name></member>
      <member refid="classchallenge__serving__drinks_1_1sd__states_1_1AskAvailability_1acb070bb46838a505da8b60c4b9ee3d47" prot="private" virt="non-virtual"><scope>challenge_serving_drinks::sd_states::AskAvailability</scope><name>_unavailable_drink_designator</name></member>
      <member refid="classchallenge__serving__drinks_1_1sd__states_1_1AskAvailability_1a2bd27f613153b87bc7f8426387f37af9" prot="public" virt="non-virtual"><scope>challenge_serving_drinks::sd_states::AskAvailability</scope><name>execute</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
