<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="array__parser__test_8cpp" kind="file" language="C++">
    <compoundname>array_parser_test.cpp</compoundname>
    <includes local="no">gtest/gtest.h</includes>
    <includes refid="array__parser_8h" local="yes">costmap_2d/array_parser.h</includes>
    <incdepgraph>
      <node id="3">
        <label>costmap_2d/array_parser.h</label>
        <link refid="array__parser_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>vector</label>
        <link refid="cpp/header/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="1">
        <label>array_parser_test.cpp</label>
        <link refid="array__parser__test_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>gtest/gtest.h</label>
      </node>
      <node id="5">
        <label>string</label>
        <link refid="cpp/header/string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="array__parser__test_8cpp_1a6a6712708999ace46afccb252e7db5c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(array_parser, basic_operation)</argsstring>
        <name>TEST</name>
        <param>
          <type>array_parser</type>
        </param>
        <param>
          <type>basic_operation</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/array_parser_test.cpp" line="36" column="1" bodyfile="test/array_parser_test.cpp" bodystart="36" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="array__parser__test_8cpp_1a59ac99f0f43b2de8aeae959ae8bc7e64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(array_parser, missing_close)</argsstring>
        <name>TEST</name>
        <param>
          <type>array_parser</type>
        </param>
        <param>
          <type>missing_close</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/array_parser_test.cpp" line="59" column="1" bodyfile="test/array_parser_test.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="array__parser__test_8cpp_1ae1490b35df0200ac01ea568e60cf8fa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(array_parser, missing_open)</argsstring>
        <name>TEST</name>
        <param>
          <type>array_parser</type>
        </param>
        <param>
          <type>missing_open</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/array_parser_test.cpp" line="51" column="1" bodyfile="test/array_parser_test.cpp" bodystart="51" bodyend="57"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2012,<sp/>Willow<sp/>Garage,<sp/>Inc.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>Willow<sp/>Garage,<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="array__parser_8h" kindref="compound">costmap_2d/array_parser.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecostmap__2d" kindref="compound">costmap_2d</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="array__parser__test_8cpp_1a6a6712708999ace46afccb252e7db5c5" refkind="member"><highlight class="normal"><ref refid="array__parser__test_8cpp_1a6a6712708999ace46afccb252e7db5c5" kindref="member">TEST</ref>(array_parser,<sp/>basic_operation)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>error;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;std::vector&lt;float&gt;</ref><sp/>&gt;<sp/>vvf;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>vvf<sp/>=<sp/><ref refid="namespacecostmap__2d_1a269a284e6ee48725e0f286ce771d71fd" kindref="member">parseVVF</ref>(<sp/></highlight><highlight class="stringliteral">&quot;[[1,<sp/>2.2],<sp/>[.3,<sp/>-4e4]]&quot;</highlight><highlight class="normal">,<sp/>error<sp/>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>EXPECT_EQ(<sp/>2,<sp/>vvf.<ref refid="cpp/container/vector/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>()<sp/>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>EXPECT_EQ(<sp/>2,<sp/>vvf[0].size()<sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>EXPECT_EQ(<sp/>2,<sp/>vvf[1].size()<sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>EXPECT_EQ(<sp/>1.0f,<sp/>vvf[0][0]<sp/>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>EXPECT_EQ(<sp/>2.2f,<sp/>vvf[0][1]<sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>EXPECT_EQ(<sp/>0.3f,<sp/>vvf[1][0]<sp/>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>EXPECT_EQ(<sp/>-40000.0f,<sp/>vvf[1][1]<sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>EXPECT_EQ(<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>error<sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="array__parser__test_8cpp_1ae1490b35df0200ac01ea568e60cf8fa8" refkind="member"><highlight class="normal"><ref refid="array__parser__test_8cpp_1a6a6712708999ace46afccb252e7db5c5" kindref="member">TEST</ref>(array_parser,<sp/>missing_open)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>error;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;std::vector&lt;float&gt;</ref><sp/>&gt;<sp/>vvf;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>vvf<sp/>=<sp/><ref refid="namespacecostmap__2d_1a269a284e6ee48725e0f286ce771d71fd" kindref="member">parseVVF</ref>(<sp/></highlight><highlight class="stringliteral">&quot;[1,<sp/>2.2],<sp/>[.3,<sp/>-4e4]]&quot;</highlight><highlight class="normal">,<sp/>error<sp/>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(<sp/>error<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="array__parser__test_8cpp_1a59ac99f0f43b2de8aeae959ae8bc7e64" refkind="member"><highlight class="normal"><ref refid="array__parser__test_8cpp_1a6a6712708999ace46afccb252e7db5c5" kindref="member">TEST</ref>(array_parser,<sp/>missing_close)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>error;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;std::vector&lt;float&gt;</ref><sp/>&gt;<sp/>vvf;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>vvf<sp/>=<sp/><ref refid="namespacecostmap__2d_1a269a284e6ee48725e0f286ce771d71fd" kindref="member">parseVVF</ref>(<sp/></highlight><highlight class="stringliteral">&quot;[[1,<sp/>2.2],<sp/>[.3,<sp/>-4e4]&quot;</highlight><highlight class="normal">,<sp/>error<sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(<sp/>error<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><ref refid="array__parser__test_8cpp_1a6a6712708999ace46afccb252e7db5c5" kindref="member">TEST</ref>(array_parser,<sp/>wrong_depth)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>error;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;std::vector&lt;float&gt;</ref><sp/>&gt;<sp/>vvf;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>vvf<sp/>=<sp/><ref refid="namespacecostmap__2d_1a269a284e6ee48725e0f286ce771d71fd" kindref="member">parseVVF</ref>(<sp/></highlight><highlight class="stringliteral">&quot;[1,<sp/>2.2],<sp/>[.3,<sp/>-4e4]&quot;</highlight><highlight class="normal">,<sp/>error<sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(<sp/>error<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="costmap__2d__cloud_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>testing::InitGoogleTest(<sp/>&amp;argc,<sp/>argv<sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RUN_ALL_TESTS();</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="test/array_parser_test.cpp"/>
  </compounddef>
</doxygen>
