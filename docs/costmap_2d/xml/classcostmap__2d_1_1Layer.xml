<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classcostmap__2d_1_1Layer" kind="class" language="C++" prot="public">
    <compoundname>costmap_2d::Layer</compoundname>
    <derivedcompoundref refid="classcostmap__2d_1_1CostmapLayer" prot="public" virt="non-virtual">costmap_2d::CostmapLayer</derivedcompoundref>
    <derivedcompoundref refid="classcostmap__2d_1_1InflationLayer" prot="public" virt="non-virtual">costmap_2d::InflationLayer</derivedcompoundref>
    <includes refid="layer_8h" local="no">layer.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classcostmap__2d_1_1Layer_1af67484d6f9573d583f3ad809375e976a" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool costmap_2d::Layer::current_</definition>
        <argsstring></argsstring>
        <name>current_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/layer.h" line="175" column="8" bodyfile="include/costmap_2d/layer.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1Layer_1ab61b2a3e01353b97258c207a397977fe" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool costmap_2d::Layer::enabled_</definition>
        <argsstring></argsstring>
        <name>enabled_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/layer.h" line="176" column="8" bodyfile="include/costmap_2d/layer.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1Layer_1a4cebd6c53e8089f863f16cee9a0a2184" prot="protected" static="no" mutable="no">
        <type><ref refid="classcostmap__2d_1_1LayeredCostmap" kindref="compound">LayeredCostmap</ref> *</type>
        <definition>LayeredCostmap* costmap_2d::Layer::layered_costmap_</definition>
        <argsstring></argsstring>
        <name>layered_costmap_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/layer.h" line="174" column="18" bodyfile="include/costmap_2d/layer.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1Layer_1ac1fa1f64ebd9d39af5947c738202e248" prot="protected" static="no" mutable="no">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>std::string costmap_2d::Layer::name_</definition>
        <argsstring></argsstring>
        <name>name_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/layer.h" line="177" column="15" bodyfile="include/costmap_2d/layer.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1Layer_1a4a977acd639966f447262b5c8837a40f" prot="protected" static="no" mutable="no">
        <type>tf2_ros::Buffer *</type>
        <definition>tf2_ros::Buffer* costmap_2d::Layer::tf_</definition>
        <argsstring></argsstring>
        <name>tf_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/layer.h" line="178" column="19" bodyfile="include/costmap_2d/layer.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcostmap__2d_1_1Layer_1a42380f2eea4dea8c474a9acf802be0e4" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::Point &gt;</type>
        <definition>std::vector&lt;geometry_msgs::Point&gt; costmap_2d::Layer::footprint_spec_</definition>
        <argsstring></argsstring>
        <name>footprint_spec_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/layer.h" line="181" column="15" bodyfile="include/costmap_2d/layer.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcostmap__2d_1_1Layer_1a83cb399475b5536ae8e278569756d68b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void costmap_2d::Layer::activate</definition>
        <argsstring>()</argsstring>
        <name>activate</name>
        <reimplementedby refid="classcostmap__2d_1_1StaticLayer_1a4b70375c6f9b105dd2fa765657cc46f8">activate</reimplementedby>
        <reimplementedby refid="classcostmap__2d_1_1ObstacleLayer_1a96d2b1af3b09d35e02e6d2fc8366195f">activate</reimplementedby>
        <briefdescription>
<para>Restart publishers if they&apos;ve been stopped. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/layer.h" line="112" column="16" bodyfile="include/costmap_2d/layer.h" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Layer_1a8238b7e03dc09bade9543a23addc65e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void costmap_2d::Layer::deactivate</definition>
        <argsstring>()</argsstring>
        <name>deactivate</name>
        <reimplementedby refid="classcostmap__2d_1_1StaticLayer_1a861c1b31d3314e3f551ef94c8cee92c5">deactivate</reimplementedby>
        <reimplementedby refid="classcostmap__2d_1_1ObstacleLayer_1a4b5054749c568e2df8180c2a7c0e6177">deactivate</reimplementedby>
        <briefdescription>
<para>Stop publishers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/layer.h" line="109" column="16" bodyfile="include/costmap_2d/layer.h" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Layer_1ac24cade239a2cb0923a774bc5231ac44" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::Point &gt; &amp;</type>
        <definition>const std::vector&lt; geometry_msgs::Point &gt; &amp; costmap_2d::Layer::getFootprint</definition>
        <argsstring>() const</argsstring>
        <name>getFootprint</name>
        <briefdescription>
<para>Convenience function for layered_costmap_-&gt;<ref refid="classcostmap__2d_1_1Layer_1ac24cade239a2cb0923a774bc5231ac44" kindref="member">getFootprint()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/layer.h" line="160" column="21" bodyfile="src/layer.cpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Layer_1a759035ee464b965433e1b4f30cce890c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
        <definition>const std::string&amp; costmap_2d::Layer::getName</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/layer.h" line="154" column="28" bodyfile="include/costmap_2d/layer.h" bodystart="154" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Layer_1af6c7a09667d7cc23e207e0121e60ba4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void costmap_2d::Layer::initialize</definition>
        <argsstring>(LayeredCostmap *parent, std::string name, tf2_ros::Buffer *tf)</argsstring>
        <name>initialize</name>
        <param>
          <type><ref refid="classcostmap__2d_1_1LayeredCostmap" kindref="compound">LayeredCostmap</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type>tf2_ros::Buffer *</type>
          <declname>tf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/layer.h" line="89" column="8" bodyfile="src/layer.cpp" bodystart="43" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Layer_1a3331b68fc4db5ca14dcc31de179fd75f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool costmap_2d::Layer::isCurrent</definition>
        <argsstring>() const</argsstring>
        <name>isCurrent</name>
        <briefdescription>
<para>Check to make sure all the data in the layer is up to date. If the layer is not up to date, then it may be unsafe to plan using the data from this layer, and the planner may need to know. </para>
        </briefdescription>
        <detaileddescription>
<para>A layer&apos;s current state should be managed by the protected variable current_. <simplesect kind="return"><para>Whether the data in the layer is up to date. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/layer.h" line="128" column="8" bodyfile="include/costmap_2d/layer.h" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Layer_1a57d19ac5805530fc76a2cdbe9eb41421" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool costmap_2d::Layer::isEnabled</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isEnabled</name>
        <briefdescription>
<para>getter if the current layer is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para>The user may enable/disable a layer though dynamic reconfigure. Disabled layers won&apos;t receive calls to<itemizedlist>
<listitem><para><ref refid="classcostmap__2d_1_1Layer_1a56528644ba7d534b15ca3d73615dc12e" kindref="member">Layer::updateCosts</ref></para>
</listitem><listitem><para><ref refid="classcostmap__2d_1_1Layer_1a978fb5288265b293a6fd08787314f2f1" kindref="member">Layer::updateBounds</ref></para>
</listitem><listitem><para><ref refid="classcostmap__2d_1_1Layer_1a3331b68fc4db5ca14dcc31de179fd75f" kindref="member">Layer::isCurrent</ref> from the <ref refid="classcostmap__2d_1_1LayeredCostmap" kindref="compound">LayeredCostmap</ref>.</para>
</listitem></itemizedlist>
</para>
<para>Calls to <ref refid="classcostmap__2d_1_1Layer_1a83cb399475b5536ae8e278569756d68b" kindref="member">Layer::activate</ref>, <ref refid="classcostmap__2d_1_1Layer_1a8238b7e03dc09bade9543a23addc65e2" kindref="member">Layer::deactivate</ref> and <ref refid="classcostmap__2d_1_1Layer_1a7e57e2de15f2ac5104465da537b60ada" kindref="member">Layer::reset</ref> won&apos;t be blocked. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/layer.h" line="146" column="15" bodyfile="include/costmap_2d/layer.h" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Layer_1a1f83227fd701bf4bc29143cd66c4de5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>costmap_2d::Layer::Layer</definition>
        <argsstring>()</argsstring>
        <name>Layer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/layer.h" line="87" column="3" bodyfile="src/layer.cpp" bodystart="35" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Layer_1a2e0a0cf4fb307699c098507d718af7ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void costmap_2d::Layer::matchSize</definition>
        <argsstring>()</argsstring>
        <name>matchSize</name>
        <reimplementedby refid="classcostmap__2d_1_1CostmapLayer_1a9260d210630b6522cad87397506f9696">matchSize</reimplementedby>
        <reimplementedby refid="classcostmap__2d_1_1InflationLayer_1a740c5ab2d838eb17f8fbfa16001feff5">matchSize</reimplementedby>
        <reimplementedby refid="classcostmap__2d_1_1StaticLayer_1a3c8a9c7ea061ad416e09d2f1f18cdc8a">matchSize</reimplementedby>
        <reimplementedby refid="classcostmap__2d_1_1VoxelLayer_1a0528c59b3cbe4c1b81748284ae0a3dc5">matchSize</reimplementedby>
        <briefdescription>
<para>Implement this to make this layer match the size of the parent costmap. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/layer.h" line="152" column="16" bodyfile="include/costmap_2d/layer.h" bodystart="152" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Layer_1ab65a9d55987f504e8c658bc64f61181e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void costmap_2d::Layer::onFootprintChanged</definition>
        <argsstring>()</argsstring>
        <name>onFootprintChanged</name>
        <reimplementedby refid="classcostmap__2d_1_1InflationLayer_1ae838b68ddf6d2dce9efca777e8455335">onFootprintChanged</reimplementedby>
        <briefdescription>
<para><ref refid="classcostmap__2d_1_1LayeredCostmap" kindref="compound">LayeredCostmap</ref> calls this whenever the footprint there changes (via <ref refid="classcostmap__2d_1_1LayeredCostmap_1acf16f3d3636b7fbe6e28edbd32340464" kindref="member">LayeredCostmap::setFootprint()</ref>). Override to be notified of changes to the robot&apos;s footprint. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/layer.h" line="165" column="16" bodyfile="include/costmap_2d/layer.h" bodystart="165" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Layer_1a7e57e2de15f2ac5104465da537b60ada" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void costmap_2d::Layer::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <reimplementedby refid="classcostmap__2d_1_1StaticLayer_1a80083e19e7d50881f3d46c79e324dd93">reset</reimplementedby>
        <reimplementedby refid="classcostmap__2d_1_1InflationLayer_1aa5df966fb4dd99b8b69945408f42c2a6">reset</reimplementedby>
        <reimplementedby refid="classcostmap__2d_1_1ObstacleLayer_1a9eca6114b3d54c93504058a1754103e4">reset</reimplementedby>
        <reimplementedby refid="classcostmap__2d_1_1VoxelLayer_1af5f57588c57a8a5c8dff065b5a76a0db">reset</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/layer.h" line="114" column="16" bodyfile="include/costmap_2d/layer.h" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Layer_1a978fb5288265b293a6fd08787314f2f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void costmap_2d::Layer::updateBounds</definition>
        <argsstring>(double robot_x, double robot_y, double robot_yaw, double *min_x, double *min_y, double *max_x, double *max_y)</argsstring>
        <name>updateBounds</name>
        <reimplementedby refid="classcostmap__2d_1_1InflationLayer_1a7834a60ae6fe62f40dbe0b5815b9b4ed">updateBounds</reimplementedby>
        <reimplementedby refid="classcostmap__2d_1_1StaticLayer_1ad433844bcb32418450e0fcb763173b6a">updateBounds</reimplementedby>
        <reimplementedby refid="classcostmap__2d_1_1ObstacleLayer_1a1bfef13f020e8aa64a33743f72824ebd">updateBounds</reimplementedby>
        <reimplementedby refid="classcostmap__2d_1_1VoxelLayer_1ab28185cd71c8e42f72880b779ef08ae2">updateBounds</reimplementedby>
        <param>
          <type>double</type>
          <declname>robot_x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>robot_y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>robot_yaw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>min_x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>min_y</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>max_x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>max_y</declname>
        </param>
        <briefdescription>
<para>This is called by the <ref refid="classcostmap__2d_1_1LayeredCostmap" kindref="compound">LayeredCostmap</ref> to poll this plugin as to how much of the costmap it needs to update. Each layer can increase the size of this bounds. </para>
        </briefdescription>
        <detaileddescription>
<para>For more details, see &quot;Layered Costmaps for Context-Sensitive Navigation&quot;, by Lu et. Al, IROS 2014. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/layer.h" line="99" column="16" bodyfile="include/costmap_2d/layer.h" bodystart="99" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Layer_1a56528644ba7d534b15ca3d73615dc12e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void costmap_2d::Layer::updateCosts</definition>
        <argsstring>(Costmap2D &amp;master_grid, int min_i, int min_j, int max_i, int max_j)</argsstring>
        <name>updateCosts</name>
        <reimplementedby refid="classcostmap__2d_1_1InflationLayer_1a2d5d3eef9b0e8c91dfde79c0e40a65af">updateCosts</reimplementedby>
        <reimplementedby refid="classcostmap__2d_1_1StaticLayer_1a9ebed8f042ee945073031e51f82229f1">updateCosts</reimplementedby>
        <reimplementedby refid="classcostmap__2d_1_1ObstacleLayer_1a02fbdf76db69ddc03c400b2c00e903ee">updateCosts</reimplementedby>
        <param>
          <type><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound">Costmap2D</ref> &amp;</type>
          <declname>master_grid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>min_i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>min_j</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_j</declname>
        </param>
        <briefdescription>
<para>Actually update the underlying costmap, only within the bounds calculated during UpdateBounds(). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/layer.h" line="106" column="16" bodyfile="include/costmap_2d/layer.h" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Layer_1a40154c4ffbc768749e3724728ad96a27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual costmap_2d::Layer::~Layer</definition>
        <argsstring>()</argsstring>
        <name>~Layer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/layer.h" line="116" column="11" bodyfile="include/costmap_2d/layer.h" bodystart="116" bodyend="116"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcostmap__2d_1_1Layer_1a97888a23e12ab5b798a854c2f590ae71" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void costmap_2d::Layer::onInitialize</definition>
        <argsstring>()</argsstring>
        <name>onInitialize</name>
        <reimplementedby refid="classcostmap__2d_1_1InflationLayer_1a70aa2e82f43d319111403b8f97f37ade">onInitialize</reimplementedby>
        <reimplementedby refid="classcostmap__2d_1_1StaticLayer_1a05ac3b3a903d45c76d076fed8ae220f6">onInitialize</reimplementedby>
        <reimplementedby refid="classcostmap__2d_1_1ObstacleLayer_1a370822e3b19d717ef04311b7b967f496">onInitialize</reimplementedby>
        <reimplementedby refid="classcostmap__2d_1_1VoxelLayer_1a7b0d5249f27fd757f206493b491fd37a">onInitialize</reimplementedby>
        <briefdescription>
<para>This is called at the end of <ref refid="classcostmap__2d_1_1Layer_1af6c7a09667d7cc23e207e0121e60ba4b" kindref="member">initialize()</ref>. Override to implement subclass-specific initialization. </para>
        </briefdescription>
        <detaileddescription>
<para>tf_, name_, and layered_costmap_ will all be set already when this is called. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/layer.h" line="172" column="16" bodyfile="include/costmap_2d/layer.h" bodystart="172" bodyend="172"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>costmap_2d::Layer</label>
        <link refid="classcostmap__2d_1_1Layer"/>
      </node>
      <node id="4">
        <label>costmap_2d::VoxelLayer</label>
        <link refid="classcostmap__2d_1_1VoxelLayer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>costmap_2d::InflationLayer</label>
        <link refid="classcostmap__2d_1_1InflationLayer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>costmap_2d::CostmapLayer</label>
        <link refid="classcostmap__2d_1_1CostmapLayer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>costmap_2d::StaticLayer</label>
        <link refid="classcostmap__2d_1_1StaticLayer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>costmap_2d::ObstacleLayer</label>
        <link refid="classcostmap__2d_1_1ObstacleLayer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>std::vector&lt; boost::shared_ptr&lt; costmap_2d::Layer &gt; &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="1">
        <label>costmap_2d::Layer</label>
        <link refid="classcostmap__2d_1_1Layer"/>
        <childnode refid="2" relation="usage">
          <edgelabel>layered_costmap_</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>footprint_spec_</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>name_</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>costmap_2d::Costmap2D</label>
        <link refid="classcostmap__2d_1_1Costmap2D"/>
      </node>
      <node id="2">
        <label>costmap_2d::LayeredCostmap</label>
        <link refid="classcostmap__2d_1_1LayeredCostmap"/>
        <childnode refid="3" relation="usage">
          <edgelabel>plugins_</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>footprint_</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>global_frame_</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>costmap_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::vector&lt; geometry_msgs::Point &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="5">
        <label>std::string</label>
        <link refid="cpp/string/basic_string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="include/costmap_2d/layer.h" line="85" column="1" bodyfile="include/costmap_2d/layer.h" bodystart="84" bodyend="182"/>
    <listofallmembers>
      <member refid="classcostmap__2d_1_1Layer_1a83cb399475b5536ae8e278569756d68b" prot="public" virt="virtual"><scope>costmap_2d::Layer</scope><name>activate</name></member>
      <member refid="classcostmap__2d_1_1Layer_1af67484d6f9573d583f3ad809375e976a" prot="protected" virt="non-virtual"><scope>costmap_2d::Layer</scope><name>current_</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a8238b7e03dc09bade9543a23addc65e2" prot="public" virt="virtual"><scope>costmap_2d::Layer</scope><name>deactivate</name></member>
      <member refid="classcostmap__2d_1_1Layer_1ab61b2a3e01353b97258c207a397977fe" prot="protected" virt="non-virtual"><scope>costmap_2d::Layer</scope><name>enabled_</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a42380f2eea4dea8c474a9acf802be0e4" prot="private" virt="non-virtual"><scope>costmap_2d::Layer</scope><name>footprint_spec_</name></member>
      <member refid="classcostmap__2d_1_1Layer_1ac24cade239a2cb0923a774bc5231ac44" prot="public" virt="non-virtual"><scope>costmap_2d::Layer</scope><name>getFootprint</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a759035ee464b965433e1b4f30cce890c" prot="public" virt="non-virtual"><scope>costmap_2d::Layer</scope><name>getName</name></member>
      <member refid="classcostmap__2d_1_1Layer_1af6c7a09667d7cc23e207e0121e60ba4b" prot="public" virt="non-virtual"><scope>costmap_2d::Layer</scope><name>initialize</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a3331b68fc4db5ca14dcc31de179fd75f" prot="public" virt="non-virtual"><scope>costmap_2d::Layer</scope><name>isCurrent</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a57d19ac5805530fc76a2cdbe9eb41421" prot="public" virt="non-virtual"><scope>costmap_2d::Layer</scope><name>isEnabled</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a1f83227fd701bf4bc29143cd66c4de5c" prot="public" virt="non-virtual"><scope>costmap_2d::Layer</scope><name>Layer</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a4cebd6c53e8089f863f16cee9a0a2184" prot="protected" virt="non-virtual"><scope>costmap_2d::Layer</scope><name>layered_costmap_</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a2e0a0cf4fb307699c098507d718af7ff" prot="public" virt="virtual"><scope>costmap_2d::Layer</scope><name>matchSize</name></member>
      <member refid="classcostmap__2d_1_1Layer_1ac1fa1f64ebd9d39af5947c738202e248" prot="protected" virt="non-virtual"><scope>costmap_2d::Layer</scope><name>name_</name></member>
      <member refid="classcostmap__2d_1_1Layer_1ab65a9d55987f504e8c658bc64f61181e" prot="public" virt="virtual"><scope>costmap_2d::Layer</scope><name>onFootprintChanged</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a97888a23e12ab5b798a854c2f590ae71" prot="protected" virt="virtual"><scope>costmap_2d::Layer</scope><name>onInitialize</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a7e57e2de15f2ac5104465da537b60ada" prot="public" virt="virtual"><scope>costmap_2d::Layer</scope><name>reset</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a4a977acd639966f447262b5c8837a40f" prot="protected" virt="non-virtual"><scope>costmap_2d::Layer</scope><name>tf_</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a978fb5288265b293a6fd08787314f2f1" prot="public" virt="virtual"><scope>costmap_2d::Layer</scope><name>updateBounds</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a56528644ba7d534b15ca3d73615dc12e" prot="public" virt="virtual"><scope>costmap_2d::Layer</scope><name>updateCosts</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a40154c4ffbc768749e3724728ad96a27" prot="public" virt="virtual"><scope>costmap_2d::Layer</scope><name>~Layer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
