<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classcostmap__2d_1_1ObstacleLayer" kind="class" language="C++" prot="public">
    <compoundname>costmap_2d::ObstacleLayer</compoundname>
    <basecompoundref refid="classcostmap__2d_1_1CostmapLayer" prot="public" virt="non-virtual">costmap_2d::CostmapLayer</basecompoundref>
    <derivedcompoundref refid="classcostmap__2d_1_1VoxelLayer" prot="public" virt="non-virtual">costmap_2d::VoxelLayer</derivedcompoundref>
    <includes refid="obstacle__layer_8h" local="no">obstacle_layer.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classcostmap__2d_1_1ObstacleLayer_1acf2875689509edd4c22032b46d6d5a96" prot="protected" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; boost::shared_ptr&lt; <ref refid="classcostmap__2d_1_1ObservationBuffer" kindref="compound">costmap_2d::ObservationBuffer</ref> &gt; &gt;</type>
        <definition>std::vector&lt;boost::shared_ptr&lt;costmap_2d::ObservationBuffer&gt; &gt; costmap_2d::ObstacleLayer::clearing_buffers_</definition>
        <argsstring></argsstring>
        <name>clearing_buffers_</name>
        <briefdescription>
<para>Used to store observation buffers used for clearing obstacles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="238" column="15" bodyfile="include/costmap_2d/obstacle_layer.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1ObstacleLayer_1a5409807e0d5da47a5594b6558eb86e35" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int costmap_2d::ObstacleLayer::combination_method_</definition>
        <argsstring></argsstring>
        <name>combination_method_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="246" column="7" bodyfile="include/costmap_2d/obstacle_layer.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1ObstacleLayer_1a78167cc2c7d1ea1ea46a96de5870a1a2" prot="protected" static="no" mutable="no">
        <type>dynamic_reconfigure::Server&lt; costmap_2d::ObstaclePluginConfig &gt; *</type>
        <definition>dynamic_reconfigure::Server&lt;costmap_2d::ObstaclePluginConfig&gt;* costmap_2d::ObstacleLayer::dsrv_</definition>
        <argsstring></argsstring>
        <name>dsrv_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="244" column="31" bodyfile="include/costmap_2d/obstacle_layer.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1ObstacleLayer_1ae2eef96b7091abd5e2df3902ffb0ac29" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool costmap_2d::ObstacleLayer::footprint_clearing_enabled_</definition>
        <argsstring></argsstring>
        <name>footprint_clearing_enabled_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="225" column="8" bodyfile="include/costmap_2d/obstacle_layer.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1ObstacleLayer_1a43c426001340920ba660ce5e1da0c166" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double costmap_2d::ObstacleLayer::free_to_default_time_</definition>
        <argsstring></argsstring>
        <name>free_to_default_time_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="191" column="10" bodyfile="include/costmap_2d/obstacle_layer.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1ObstacleLayer_1ace3e2a9b2ded21743140a558a47bc54c" prot="protected" static="no" mutable="no">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>std::string costmap_2d::ObstacleLayer::global_frame_</definition>
        <argsstring></argsstring>
        <name>global_frame_</name>
        <briefdescription>
<para>The global frame for the costmap. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="229" column="15" bodyfile="include/costmap_2d/obstacle_layer.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1ObstacleLayer_1aa29c6e8de64c83c5cada0a51a07fa12e" prot="protected" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; boost::shared_ptr&lt; <ref refid="classcostmap__2d_1_1ObservationBuffer" kindref="compound">costmap_2d::ObservationBuffer</ref> &gt; &gt;</type>
        <definition>std::vector&lt;boost::shared_ptr&lt;costmap_2d::ObservationBuffer&gt; &gt; costmap_2d::ObstacleLayer::marking_buffers_</definition>
        <argsstring></argsstring>
        <name>marking_buffers_</name>
        <briefdescription>
<para>Used to store observation buffers used for marking obstacles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="237" column="15" bodyfile="include/costmap_2d/obstacle_layer.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1ObstacleLayer_1ad3c33d01e6f8c73a73a0c34140b88fd9" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double costmap_2d::ObstacleLayer::max_obstacle_height_</definition>
        <argsstring></argsstring>
        <name>max_obstacle_height_</name>
        <briefdescription>
<para>Max Obstacle Height. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="230" column="10" bodyfile="include/costmap_2d/obstacle_layer.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1ObstacleLayer_1a0374c0cca8722ad5e03612cd8ddaef63" prot="protected" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; boost::shared_ptr&lt; <ref refid="classcostmap__2d_1_1ObservationBuffer" kindref="compound">costmap_2d::ObservationBuffer</ref> &gt; &gt;</type>
        <definition>std::vector&lt;boost::shared_ptr&lt;costmap_2d::ObservationBuffer&gt; &gt; costmap_2d::ObstacleLayer::observation_buffers_</definition>
        <argsstring></argsstring>
        <name>observation_buffers_</name>
        <briefdescription>
<para>Used to store observations from various sensors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="236" column="15" bodyfile="include/costmap_2d/obstacle_layer.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1ObstacleLayer_1a7a1721eda53cf4e9e0446b61f197a7e6" prot="protected" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; boost::shared_ptr&lt; tf2_ros::MessageFilterBase &gt; &gt;</type>
        <definition>std::vector&lt;boost::shared_ptr&lt;tf2_ros::MessageFilterBase&gt; &gt; costmap_2d::ObstacleLayer::observation_notifiers_</definition>
        <argsstring></argsstring>
        <name>observation_notifiers_</name>
        <briefdescription>
<para>Used to make sure that transforms are available for each sensor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="235" column="15" bodyfile="include/costmap_2d/obstacle_layer.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1ObstacleLayer_1ad5128763fa389b51ef1e0b70765901b8" prot="protected" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; boost::shared_ptr&lt; message_filters::SubscriberBase &gt; &gt;</type>
        <definition>std::vector&lt;boost::shared_ptr&lt;message_filters::SubscriberBase&gt; &gt; costmap_2d::ObstacleLayer::observation_subscribers_</definition>
        <argsstring></argsstring>
        <name>observation_subscribers_</name>
        <briefdescription>
<para>Used for the observation message filters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="234" column="15" bodyfile="include/costmap_2d/obstacle_layer.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1ObstacleLayer_1a40d2c9552f0bc6f0f57c217d1db73cb6" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double costmap_2d::ObstacleLayer::occupied_to_default_time_</definition>
        <argsstring></argsstring>
        <name>occupied_to_default_time_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="192" column="10" bodyfile="include/costmap_2d/obstacle_layer.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1ObstacleLayer_1a04fe55b7286265ff543ad52b0b327642" prot="protected" static="no" mutable="no">
        <type>laser_geometry::LaserProjection</type>
        <definition>laser_geometry::LaserProjection costmap_2d::ObstacleLayer::projector_</definition>
        <argsstring></argsstring>
        <name>projector_</name>
        <briefdescription>
<para>Used to project laser scans into point clouds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="232" column="35" bodyfile="include/costmap_2d/obstacle_layer.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1ObstacleLayer_1a55c8ebe46b6d32861819d244fa55d18c" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool costmap_2d::ObstacleLayer::rolling_window_</definition>
        <argsstring></argsstring>
        <name>rolling_window_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="243" column="8" bodyfile="include/costmap_2d/obstacle_layer.h" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1ObstacleLayer_1a95578ec2f3218aeebe2e95c3088256ca" prot="protected" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="classcostmap__2d_1_1Observation" kindref="compound">costmap_2d::Observation</ref> &gt;</type>
        <definition>std::vector&lt;costmap_2d::Observation&gt; costmap_2d::ObstacleLayer::static_clearing_observations_</definition>
        <argsstring></argsstring>
        <name>static_clearing_observations_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="241" column="15" bodyfile="include/costmap_2d/obstacle_layer.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1ObstacleLayer_1a25b798557229f62414d59663b392ea08" prot="protected" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="classcostmap__2d_1_1Observation" kindref="compound">costmap_2d::Observation</ref> &gt;</type>
        <definition>std::vector&lt;costmap_2d::Observation&gt; costmap_2d::ObstacleLayer::static_marking_observations_</definition>
        <argsstring></argsstring>
        <name>static_marking_observations_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="241" column="45" bodyfile="include/costmap_2d/obstacle_layer.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1ObstacleLayer_1a1a6a5dfdeaf6318a5ce08289a8416295" prot="protected" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::Point &gt;</type>
        <definition>std::vector&lt;geometry_msgs::Point&gt; costmap_2d::ObstacleLayer::transformed_footprint_</definition>
        <argsstring></argsstring>
        <name>transformed_footprint_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="224" column="15" bodyfile="include/costmap_2d/obstacle_layer.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcostmap__2d_1_1ObstacleLayer_1a96d2b1af3b09d35e02e6d2fc8366195f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void costmap_2d::ObstacleLayer::activate</definition>
        <argsstring>()</argsstring>
        <name>activate</name>
        <reimplements refid="classcostmap__2d_1_1Layer_1a83cb399475b5536ae8e278569756d68b">activate</reimplements>
        <briefdescription>
<para>Restart publishers if they&apos;ve been stopped. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="148" column="16" bodyfile="plugins/obstacle_layer.cpp" bodystart="611" bodyend="625"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1ObstacleLayer_1ac835aba4f43e4c8a2a8ed66c97899b5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void costmap_2d::ObstacleLayer::addStaticObservation</definition>
        <argsstring>(costmap_2d::Observation &amp;obs, bool marking, bool clearing)</argsstring>
        <name>addStaticObservation</name>
        <param>
          <type><ref refid="classcostmap__2d_1_1Observation" kindref="compound">costmap_2d::Observation</ref> &amp;</type>
          <declname>obs</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>marking</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clearing</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="185" column="8" bodyfile="plugins/obstacle_layer.cpp" bodystart="480" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1ObstacleLayer_1a46aa43c6240307253b9bf9377f5e6969" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void costmap_2d::ObstacleLayer::clearStaticObservations</definition>
        <argsstring>(bool marking, bool clearing)</argsstring>
        <name>clearStaticObservations</name>
        <param>
          <type>bool</type>
          <declname>marking</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clearing</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="186" column="8" bodyfile="plugins/obstacle_layer.cpp" bodystart="488" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1ObstacleLayer_1a4b5054749c568e2df8180c2a7c0e6177" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void costmap_2d::ObstacleLayer::deactivate</definition>
        <argsstring>()</argsstring>
        <name>deactivate</name>
        <reimplements refid="classcostmap__2d_1_1Layer_1a8238b7e03dc09bade9543a23addc65e2">deactivate</reimplements>
        <briefdescription>
<para>Stop publishers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="149" column="16" bodyfile="plugins/obstacle_layer.cpp" bodystart="626" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1ObstacleLayer_1adf9bf6f5d231ae52d012320dd18fe047" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void costmap_2d::ObstacleLayer::laserScanCallback</definition>
        <argsstring>(const sensor_msgs::LaserScanConstPtr &amp;message, const boost::shared_ptr&lt; costmap_2d::ObservationBuffer &gt; &amp;buffer)</argsstring>
        <name>laserScanCallback</name>
        <param>
          <type>const sensor_msgs::LaserScanConstPtr &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const boost::shared_ptr&lt; <ref refid="classcostmap__2d_1_1ObservationBuffer" kindref="compound">costmap_2d::ObservationBuffer</ref> &gt; &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>A callback to handle buffering LaserScan messages. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message returned from a message notifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the observation buffer to update </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="157" column="8" bodyfile="plugins/obstacle_layer.cpp" bodystart="244" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1ObstacleLayer_1ae83ee29b89e126ffbfb477aff5fafe92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void costmap_2d::ObstacleLayer::laserScanValidInfCallback</definition>
        <argsstring>(const sensor_msgs::LaserScanConstPtr &amp;message, const boost::shared_ptr&lt; ObservationBuffer &gt; &amp;buffer)</argsstring>
        <name>laserScanValidInfCallback</name>
        <param>
          <type>const sensor_msgs::LaserScanConstPtr &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const boost::shared_ptr&lt; <ref refid="classcostmap__2d_1_1ObservationBuffer" kindref="compound">ObservationBuffer</ref> &gt; &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>A callback to handle buffering LaserScan messages which need filtering to turn Inf values into range_max. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message returned from a message notifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the observation buffer to update </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="165" column="8" bodyfile="plugins/obstacle_layer.cpp" bodystart="274" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1ObstacleLayer_1a4620782e96fabeb0b449daa725857c00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>costmap_2d::ObstacleLayer::ObstacleLayer</definition>
        <argsstring>()</argsstring>
        <name>ObstacleLayer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="137" column="3" bodyfile="include/costmap_2d/obstacle_layer.h" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1ObstacleLayer_1a370822e3b19d717ef04311b7b967f496" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void costmap_2d::ObstacleLayer::onInitialize</definition>
        <argsstring>()</argsstring>
        <name>onInitialize</name>
        <reimplements refid="classcostmap__2d_1_1Layer_1a97888a23e12ab5b798a854c2f590ae71">onInitialize</reimplements>
        <reimplementedby refid="classcostmap__2d_1_1VoxelLayer_1a7b0d5249f27fd757f206493b491fd37a">onInitialize</reimplementedby>
        <briefdescription>
<para>This is called at the end of <ref refid="classcostmap__2d_1_1Layer_1af6c7a09667d7cc23e207e0121e60ba4b" kindref="member">initialize()</ref>. Override to implement subclass-specific initialization. </para>
        </briefdescription>
        <detaileddescription>
<para>tf_, name_, and layered_costmap_ will all be set already when this is called. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="143" column="16" bodyfile="plugins/obstacle_layer.cpp" bodystart="57" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1ObstacleLayer_1aa8d27200c8f888b3bda5c4fc087f59a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void costmap_2d::ObstacleLayer::pointCloud2Callback</definition>
        <argsstring>(const sensor_msgs::PointCloud2ConstPtr &amp;message, const boost::shared_ptr&lt; costmap_2d::ObservationBuffer &gt; &amp;buffer)</argsstring>
        <name>pointCloud2Callback</name>
        <param>
          <type>const sensor_msgs::PointCloud2ConstPtr &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const boost::shared_ptr&lt; <ref refid="classcostmap__2d_1_1ObservationBuffer" kindref="compound">costmap_2d::ObservationBuffer</ref> &gt; &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>A callback to handle buffering PointCloud2 messages. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message returned from a message notifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the observation buffer to update </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="181" column="8" bodyfile="plugins/obstacle_layer.cpp" bodystart="333" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1ObstacleLayer_1acad6bfccd40caba4e3357e7b48981c2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void costmap_2d::ObstacleLayer::pointCloudCallback</definition>
        <argsstring>(const sensor_msgs::PointCloudConstPtr &amp;message, const boost::shared_ptr&lt; costmap_2d::ObservationBuffer &gt; &amp;buffer)</argsstring>
        <name>pointCloudCallback</name>
        <param>
          <type>const sensor_msgs::PointCloudConstPtr &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const boost::shared_ptr&lt; <ref refid="classcostmap__2d_1_1ObservationBuffer" kindref="compound">costmap_2d::ObservationBuffer</ref> &gt; &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>A callback to handle buffering PointCloud messages. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message returned from a message notifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the observation buffer to update </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="173" column="8" bodyfile="plugins/obstacle_layer.cpp" bodystart="316" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1ObstacleLayer_1a9eca6114b3d54c93504058a1754103e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void costmap_2d::ObstacleLayer::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <reimplements refid="classcostmap__2d_1_1Layer_1a7e57e2de15f2ac5104465da537b60ada">reset</reimplements>
        <reimplementedby refid="classcostmap__2d_1_1VoxelLayer_1af5f57588c57a8a5c8dff065b5a76a0db">reset</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="150" column="16" bodyfile="plugins/obstacle_layer.cpp" bodystart="645" bodyend="651"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1ObstacleLayer_1a1bfef13f020e8aa64a33743f72824ebd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void costmap_2d::ObstacleLayer::updateBounds</definition>
        <argsstring>(double robot_x, double robot_y, double robot_yaw, double *min_x, double *min_y, double *max_x, double *max_y)</argsstring>
        <name>updateBounds</name>
        <reimplements refid="classcostmap__2d_1_1Layer_1a978fb5288265b293a6fd08787314f2f1">updateBounds</reimplements>
        <reimplementedby refid="classcostmap__2d_1_1VoxelLayer_1ab28185cd71c8e42f72880b779ef08ae2">updateBounds</reimplementedby>
        <param>
          <type>double</type>
          <declname>robot_x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>robot_y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>robot_yaw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>min_x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>min_y</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>max_x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>max_y</declname>
        </param>
        <briefdescription>
<para>This is called by the <ref refid="classcostmap__2d_1_1LayeredCostmap" kindref="compound">LayeredCostmap</ref> to poll this plugin as to how much of the costmap it needs to update. Each layer can increase the size of this bounds. </para>
        </briefdescription>
        <detaileddescription>
<para>For more details, see &quot;Layered Costmaps for Context-Sensitive Navigation&quot;, by Lu et. Al, IROS 2014. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="144" column="16" bodyfile="plugins/obstacle_layer.cpp" bodystart="370" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1ObstacleLayer_1a02fbdf76db69ddc03c400b2c00e903ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void costmap_2d::ObstacleLayer::updateCosts</definition>
        <argsstring>(costmap_2d::Costmap2D &amp;master_grid, int min_i, int min_j, int max_i, int max_j)</argsstring>
        <name>updateCosts</name>
        <reimplements refid="classcostmap__2d_1_1Layer_1a56528644ba7d534b15ca3d73615dc12e">updateCosts</reimplements>
        <param>
          <type><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound">costmap_2d::Costmap2D</ref> &amp;</type>
          <declname>master_grid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>min_i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>min_j</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_j</declname>
        </param>
        <briefdescription>
<para>Actually update the underlying costmap, only within the bounds calculated during UpdateBounds(). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="146" column="16" bodyfile="plugins/obstacle_layer.cpp" bodystart="460" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1ObstacleLayer_1a304eaae6240f4404b316c5692d8d4dbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>costmap_2d::ObstacleLayer::~ObstacleLayer</definition>
        <argsstring>()</argsstring>
        <name>~ObstacleLayer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="142" column="11" bodyfile="plugins/obstacle_layer.cpp" bodystart="229" bodyend="233"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcostmap__2d_1_1ObstacleLayer_1aab9fa8593c6069db0f4d349a722ba297" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void costmap_2d::ObstacleLayer::checkTimeStamps</definition>
        <argsstring>(double *min_x, double *min_y, double *max_x, double *max_y)</argsstring>
        <name>checkTimeStamps</name>
        <param>
          <type>double *</type>
          <declname>min_x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>min_y</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>max_x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>max_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="190" column="8" bodyfile="plugins/obstacle_layer.cpp" bodystart="342" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1ObstacleLayer_1ac36f129eecc398e3fd4c235078be29e4" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool costmap_2d::ObstacleLayer::getClearingObservations</definition>
        <argsstring>(std::vector&lt; costmap_2d::Observation &gt; &amp;clearing_observations) const</argsstring>
        <name>getClearingObservations</name>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="classcostmap__2d_1_1Observation" kindref="compound">costmap_2d::Observation</ref> &gt; &amp;</type>
          <declname>clearing_observations</declname>
        </param>
        <briefdescription>
<para>Get the observations used to clear space. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>clearing_observations</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a vector that will be populated with the observations </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if all the observation buffers are current, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="208" column="8" bodyfile="plugins/obstacle_layer.cpp" bodystart="512" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1ObstacleLayer_1ad697514e2077c33ec3e50ed7ef661d19" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool costmap_2d::ObstacleLayer::getMarkingObservations</definition>
        <argsstring>(std::vector&lt; costmap_2d::Observation &gt; &amp;marking_observations) const</argsstring>
        <name>getMarkingObservations</name>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="classcostmap__2d_1_1Observation" kindref="compound">costmap_2d::Observation</ref> &gt; &amp;</type>
          <declname>marking_observations</declname>
        </param>
        <briefdescription>
<para>Get the observations used to mark space. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>marking_observations</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a vector that will be populated with the observations </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if all the observation buffers are current, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="201" column="8" bodyfile="plugins/obstacle_layer.cpp" bodystart="496" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1ObstacleLayer_1a50dac229133e7c22981b0c7e0eafc910" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void costmap_2d::ObstacleLayer::raytraceFreespace</definition>
        <argsstring>(const costmap_2d::Observation &amp;clearing_observation, double *min_x, double *min_y, double *max_x, double *max_y)</argsstring>
        <name>raytraceFreespace</name>
        <reimplementedby refid="classcostmap__2d_1_1VoxelLayer_1a6f7c914d410df715e01253b3584d9f21">raytraceFreespace</reimplementedby>
        <param>
          <type>const <ref refid="classcostmap__2d_1_1Observation" kindref="compound">costmap_2d::Observation</ref> &amp;</type>
          <declname>clearing_observation</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>min_x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>min_y</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>max_x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>max_y</declname>
        </param>
        <briefdescription>
<para>Clear freespace based on one observation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>clearing_observation</parametername>
</parameternamelist>
<parameterdescription>
<para>The observation used to raytrace </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min_x</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min_y</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_x</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_y</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="218" column="16" bodyfile="plugins/obstacle_layer.cpp" bodystart="528" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1ObstacleLayer_1a8a24f6bb0bd8600154c21af4638708c2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void costmap_2d::ObstacleLayer::setupDynamicReconfigure</definition>
        <argsstring>(ros::NodeHandle &amp;nh)</argsstring>
        <name>setupDynamicReconfigure</name>
        <reimplementedby refid="classcostmap__2d_1_1VoxelLayer_1a7e9b75bd9cee13aa9f893a17d549fbee">setupDynamicReconfigure</reimplementedby>
        <param>
          <type>ros::NodeHandle &amp;</type>
          <declname>nh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="194" column="16" bodyfile="plugins/obstacle_layer.cpp" bodystart="221" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1ObstacleLayer_1ac81261d46ebc829ca1d747c024a00603" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void costmap_2d::ObstacleLayer::updateFootprint</definition>
        <argsstring>(double robot_x, double robot_y, double robot_yaw, double *min_x, double *min_y, double *max_x, double *max_y)</argsstring>
        <name>updateFootprint</name>
        <param>
          <type>double</type>
          <declname>robot_x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>robot_y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>robot_yaw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>min_x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>min_y</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>max_x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>max_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="226" column="8" bodyfile="plugins/obstacle_layer.cpp" bodystart="448" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1ObstacleLayer_1aadace7301e7b08f358ea3e9e8a17f452" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void costmap_2d::ObstacleLayer::updateRaytraceBounds</definition>
        <argsstring>(double ox, double oy, double wx, double wy, double range, double *min_x, double *min_y, double *max_x, double *max_y)</argsstring>
        <name>updateRaytraceBounds</name>
        <param>
          <type>double</type>
          <declname>ox</declname>
        </param>
        <param>
          <type>double</type>
          <declname>oy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>range</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>min_x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>min_y</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>max_x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>max_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="221" column="8" bodyfile="plugins/obstacle_layer.cpp" bodystart="635" bodyend="643"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classcostmap__2d_1_1ObstacleLayer_1a44529d13388d525090b766fd0bce12e9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void costmap_2d::ObstacleLayer::reconfigureCB</definition>
        <argsstring>(costmap_2d::ObstaclePluginConfig &amp;config, uint32_t level)</argsstring>
        <name>reconfigureCB</name>
        <param>
          <type>costmap_2d::ObstaclePluginConfig &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/obstacle_layer.h" line="249" column="8" bodyfile="plugins/obstacle_layer.cpp" bodystart="234" bodyend="242"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>costmap_2d::Layer</label>
        <link refid="classcostmap__2d_1_1Layer"/>
      </node>
      <node id="4">
        <label>costmap_2d::Costmap2D</label>
        <link refid="classcostmap__2d_1_1Costmap2D"/>
      </node>
      <node id="5">
        <label>costmap_2d::VoxelLayer</label>
        <link refid="classcostmap__2d_1_1VoxelLayer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>costmap_2d::CostmapLayer</label>
        <link refid="classcostmap__2d_1_1CostmapLayer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>costmap_2d::ObstacleLayer</label>
        <link refid="classcostmap__2d_1_1ObstacleLayer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>std::vector&lt; boost::shared_ptr&lt; costmap_2d::Layer &gt; &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="3">
        <label>costmap_2d::Layer</label>
        <link refid="classcostmap__2d_1_1Layer"/>
        <childnode refid="4" relation="usage">
          <edgelabel>layered_costmap_</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>footprint_spec_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>name_</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>costmap_2d::Costmap2D</label>
        <link refid="classcostmap__2d_1_1Costmap2D"/>
      </node>
      <node id="2">
        <label>costmap_2d::CostmapLayer</label>
        <link refid="classcostmap__2d_1_1CostmapLayer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>std::vector&lt; boost::shared_ptr&lt; tf2_ros::MessageFilterBase &gt; &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="12">
        <label>std::vector&lt; boost::shared_ptr&lt; message_filters::SubscriberBase &gt; &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="11">
        <label>std::vector&lt; costmap_2d::Observation &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="9">
        <label>std::vector&lt; boost::shared_ptr&lt; costmap_2d::ObservationBuffer &gt; &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="4">
        <label>costmap_2d::LayeredCostmap</label>
        <link refid="classcostmap__2d_1_1LayeredCostmap"/>
        <childnode refid="5" relation="usage">
          <edgelabel>plugins_</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>footprint_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>global_frame_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>costmap_</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::vector&lt; geometry_msgs::Point &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="1">
        <label>costmap_2d::ObstacleLayer</label>
        <link refid="classcostmap__2d_1_1ObstacleLayer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>marking_buffers_</edgelabel>
          <edgelabel>observation_buffers_</edgelabel>
          <edgelabel>clearing_buffers_</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>transformed_footprint_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>global_frame_</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>observation_notifiers_</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>static_marking_observations_</edgelabel>
          <edgelabel>static_clearing_observations_</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>observation_subscribers_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>std::string</label>
        <link refid="cpp/string/basic_string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="include/costmap_2d/obstacle_layer.h" line="99" column="1" bodyfile="include/costmap_2d/obstacle_layer.h" bodystart="98" bodyend="214"/>
    <listofallmembers>
      <member refid="classcostmap__2d_1_1Costmap2D_1a509ef0191dacd55f6348f789236d904d" prot="private" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>access_</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a96d2b1af3b09d35e02e6d2fc8366195f" prot="public" virt="virtual"><scope>costmap_2d::ObstacleLayer</scope><name>activate</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1acc0f84edaa1742899a9a96b06ad8f683" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>addExtraBounds</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1ac835aba4f43e4c8a2a8ed66c97899b5f" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>addStaticObservation</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a54462e95337134adf0a59785b39b57f6" prot="private" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>bresenham2D</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1abffbb5c7d49fae947d70c4e6d0fbeae9" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>cellDistance</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1aab9fa8593c6069db0f4d349a722ba297" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>checkTimeStamps</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1a2d7de3edced6d1c27a678ab0ebc10f50" prot="public" virt="virtual"><scope>costmap_2d::ObstacleLayer</scope><name>clearArea</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1acf2875689509edd4c22032b46d6d5a96" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>clearing_buffers_</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a46aa43c6240307253b9bf9377f5e6969" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>clearStaticObservations</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a5409807e0d5da47a5594b6558eb86e35" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>combination_method_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1aa3c49f2d63f6edfb7396d1b0c79a4b12" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>convexFillCells</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a8fb9538b17743071ea041b32bcc3b381" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>copyCostmapWindow</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1ab857ec41de2e14d601b85bbf6497b612" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>copyMapRegion</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a5c41d42532693430c002c16258925d82" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>Costmap2D</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a430191c66018db89e5a65fb823db35d8" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>Costmap2D</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a1ec52799b2b673306902fcfe01285d7a" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>Costmap2D</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a34c8633b0dfec7481300d401d33010c7" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>costmap_</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1af55005495db76f6ab20e14bcd3390a41" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>CostmapLayer</name></member>
      <member refid="classcostmap__2d_1_1Layer_1af67484d6f9573d583f3ad809375e976a" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>current_</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a4b5054749c568e2df8180c2a7c0e6177" prot="public" virt="virtual"><scope>costmap_2d::ObstacleLayer</scope><name>deactivate</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1af0715f46aa3d358da411f0060e0fe8d2" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>default_value_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1af536407a80cef61e20226c28dbef9eee" prot="protected" virt="virtual"><scope>costmap_2d::ObstacleLayer</scope><name>deleteMaps</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a78167cc2c7d1ea1ea46a96de5870a1a2" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>dsrv_</name></member>
      <member refid="classcostmap__2d_1_1Layer_1ab61b2a3e01353b97258c207a397977fe" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>enabled_</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1ae7601f476e57307e02a4886fd1b42efd" prot="private" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>extra_max_x_</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1adc341d502cb5d6beebc771896058fd2c" prot="private" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>extra_max_y_</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1a4ee3c2716934395239e706f62ff5a426" prot="private" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>extra_min_x_</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1a06ee2a873c5b2e69aee98721137f2da2" prot="private" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>extra_min_y_</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1ae2eef96b7091abd5e2df3902ffb0ac29" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>footprint_clearing_enabled_</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a42380f2eea4dea8c474a9acf802be0e4" prot="private" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>footprint_spec_</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a43c426001340920ba660ce5e1da0c166" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>free_to_default_time_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a951c218252d6e66e23062a123dbde34d" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>getCharMap</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1ac36f129eecc398e3fd4c235078be29e4" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>getClearingObservations</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>getCost</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a35fbb86d10502ab91fb6e133c1364cd9" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>getDefaultValue</name></member>
      <member refid="classcostmap__2d_1_1Layer_1ac24cade239a2cb0923a774bc5231ac44" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>getFootprint</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a57d2ea3f3a039d72640c159cd149ff9d" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>getIndex</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1ad697514e2077c33ec3e50ed7ef661d19" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>getMarkingObservations</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a0d03ac474a496bee0780d4b7f5b4a2f1" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>getMutex</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a759035ee464b965433e1b4f30cce890c" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>getName</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a9aae81be964f5fff675f9a10c3bf2e82" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>getOriginX</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a686124b010e121eb87629ff17a032d7f" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>getOriginY</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1ade55f512e27c62cec28a3de5ca775759" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>getResolution</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a615a4186649d8970111f8a356906b320" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>getSizeInCellsX</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a702f4ed109f94c8513500cf97ff066a4" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>getSizeInCellsY</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a645ea4720d5cab8bcf662687cc81d087" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>getSizeInMetersX</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1afb1d6cdc01d77452175487955e6aff4d" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>getSizeInMetersY</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a468dd5fbb58fc5752b88044f90875b47" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>getTimeStamp</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1ace3e2a9b2ded21743140a558a47bc54c" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>global_frame_</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1aa38d857976a16df71fbc47a353114a8a" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>has_extra_bounds_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1aa10c1734472f485473302598113fcddc" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>indexToCells</name></member>
      <member refid="classcostmap__2d_1_1Layer_1af6c7a09667d7cc23e207e0121e60ba4b" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>initialize</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a1da91220df45a19376a3e3df3a517c27" prot="protected" virt="virtual"><scope>costmap_2d::ObstacleLayer</scope><name>initMaps</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a3331b68fc4db5ca14dcc31de179fd75f" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>isCurrent</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1a7a595c59ef61a168c71e63360b9b1501" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>isDiscretized</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a57d19ac5805530fc76a2cdbe9eb41421" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>isEnabled</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1adf9bf6f5d231ae52d012320dd18fe047" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>laserScanCallback</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1ae83ee29b89e126ffbfb477aff5fafe92" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>laserScanValidInfCallback</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a1f83227fd701bf4bc29143cd66c4de5c" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>Layer</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a4cebd6c53e8089f863f16cee9a0a2184" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>layered_costmap_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a8e39feaa7ee4446347674b3701a1394c" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>mapToWorld</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1aa29c6e8de64c83c5cada0a51a07fa12e" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>marking_buffers_</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1a9260d210630b6522cad87397506f9696" prot="public" virt="virtual"><scope>costmap_2d::ObstacleLayer</scope><name>matchSize</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1ad3c33d01e6f8c73a73a0c34140b88fd9" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>max_obstacle_height_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a723f8f016f2b699e9081c25e5dfdbcf4" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>mutex_t</name></member>
      <member refid="classcostmap__2d_1_1Layer_1ac1fa1f64ebd9d39af5947c738202e248" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>name_</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a0374c0cca8722ad5e03612cd8ddaef63" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>observation_buffers_</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a7a1721eda53cf4e9e0446b61f197a7e6" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>observation_notifiers_</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1ad5128763fa389b51ef1e0b70765901b8" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>observation_subscribers_</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a4620782e96fabeb0b449daa725857c00" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>ObstacleLayer</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a40d2c9552f0bc6f0f57c217d1db73cb6" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>occupied_to_default_time_</name></member>
      <member refid="classcostmap__2d_1_1Layer_1ab65a9d55987f504e8c658bc64f61181e" prot="public" virt="virtual"><scope>costmap_2d::ObstacleLayer</scope><name>onFootprintChanged</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a370822e3b19d717ef04311b7b967f496" prot="public" virt="virtual"><scope>costmap_2d::ObstacleLayer</scope><name>onInitialize</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a404b9898ed689c8f6b1eb3503c358db0" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>operator=</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a9005fb139b987665bfa799c631953f00" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>origin_x_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a53bc8ed50d62760245f879d66c5567db" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>origin_y_</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1aa8d27200c8f888b3bda5c4fc087f59a9" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>pointCloud2Callback</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1acad6bfccd40caba4e3357e7b48981c2a" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>pointCloudCallback</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1ad0c6f7cb8e11569a02f873c545acec90" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>polygonOutlineCells</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a04fe55b7286265ff543ad52b0b327642" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>projector_</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a50dac229133e7c22981b0c7e0eafc910" prot="protected" virt="virtual"><scope>costmap_2d::ObstacleLayer</scope><name>raytraceFreespace</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1af1d619d9b49b6851cb0a33de4e39ec78" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>raytraceLine</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a44529d13388d525090b766fd0bce12e9" prot="private" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>reconfigureCB</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a9eca6114b3d54c93504058a1754103e4" prot="public" virt="virtual"><scope>costmap_2d::ObstacleLayer</scope><name>reset</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1aba344550cbc08bcc3a54c64290f8f568" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>resetMap</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1ab4424e85f6daaf91eaf455e4bb241c19" prot="protected" virt="virtual"><scope>costmap_2d::ObstacleLayer</scope><name>resetMaps</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a95bae6eccd820a77d8040562e2a51118" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>resizeMap</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a3d74d58b31973def7e407c7300f1115c" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>resolution_</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a55c8ebe46b6d32861819d244fa55d18c" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>rolling_window_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a04cd3558a672159a3ad1b151b1d19661" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>saveMap</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1afb8a42c3810e796107ed04c0ca3cbf90" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>setConvexPolygonCost</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1ae1703900adbbf1e0d929cec0735a8b0e" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>setCost</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a8a9f535f98f1ba4c0a74f88aa706bcd2" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>setDefaultValue</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a8a24f6bb0bd8600154c21af4638708c2" prot="protected" virt="virtual"><scope>costmap_2d::ObstacleLayer</scope><name>setupDynamicReconfigure</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a947041f50d5fb1a44c3fd0601c4fc608" prot="private" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>sign</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1aa71bf88a183222496f17b3a95e852e75" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>size_x_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1ad25df12283aa78c43878e24633381100" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>size_y_</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a95578ec2f3218aeebe2e95c3088256ca" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>static_clearing_observations_</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a25b798557229f62414d59663b392ea08" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>static_marking_observations_</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a4a977acd639966f447262b5c8837a40f" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>tf_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a33545b79aeec7b554ce21a0b1befb212" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>timestamps_</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1a7ae82ac5b75c5627ded6cda139849f6c" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>touch</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a1a6a5dfdeaf6318a5ce08289a8416295" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>transformed_footprint_</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a1bfef13f020e8aa64a33743f72824ebd" prot="public" virt="virtual"><scope>costmap_2d::ObstacleLayer</scope><name>updateBounds</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a02fbdf76db69ddc03c400b2c00e903ee" prot="public" virt="virtual"><scope>costmap_2d::ObstacleLayer</scope><name>updateCosts</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1ac81261d46ebc829ca1d747c024a00603" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>updateFootprint</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a5ca05c95f95e1408ca9e23d2e7f8987a" prot="public" virt="virtual"><scope>costmap_2d::ObstacleLayer</scope><name>updateOrigin</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1aadace7301e7b08f358ea3e9e8a17f452" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>updateRaytraceBounds</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1ab76205b8052d66f0096e5942a3ed1530" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>updateWithAddition</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1acd9d236d8d16c8b4a004ae3b1709aa92" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>updateWithMax</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1ac01cf9ead24877e522dece2254c87632" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>updateWithOverwrite</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1adc52dfe36cea8be621d560231e861dbd" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>updateWithTrueOverwrite</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1aeca7c78b12489bcfff974cd60753a6f1" prot="protected" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>useExtraBounds</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a9a2c824d4cd3bcad3ac3435d81982986" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>worldToMap</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1ae412173f42af7edba9996f86754b7cbf" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>worldToMapEnforceBounds</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a2da39cb06d192795614df9c2bf00692f" prot="public" virt="non-virtual"><scope>costmap_2d::ObstacleLayer</scope><name>worldToMapNoBounds</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a3087bd649bca6c2fb4f795d433e93f3a" prot="public" virt="virtual"><scope>costmap_2d::ObstacleLayer</scope><name>~Costmap2D</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a40154c4ffbc768749e3724728ad96a27" prot="public" virt="virtual"><scope>costmap_2d::ObstacleLayer</scope><name>~Layer</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a304eaae6240f4404b316c5692d8d4dbf" prot="public" virt="virtual"><scope>costmap_2d::ObstacleLayer</scope><name>~ObstacleLayer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
