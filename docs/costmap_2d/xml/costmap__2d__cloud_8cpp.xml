<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="costmap__2d__cloud_8cpp" kind="file" language="C++">
    <compoundname>costmap_2d_cloud.cpp</compoundname>
    <includes local="no">ros/ros.h</includes>
    <includes local="no">sensor_msgs/PointCloud.h</includes>
    <includes local="no">costmap_2d/VoxelGrid.h</includes>
    <includes local="no">voxel_grid/voxel_grid.h</includes>
    <incdepgraph>
      <node id="3">
        <label>sensor_msgs/PointCloud.h</label>
      </node>
      <node id="1">
        <label>costmap_2d_cloud.cpp</label>
        <link refid="costmap__2d__cloud_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>costmap_2d/VoxelGrid.h</label>
      </node>
      <node id="2">
        <label>ros/ros.h</label>
      </node>
      <node id="5">
        <label>voxel_grid/voxel_grid.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structCell" prot="public">Cell</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="costmap__2d__cloud_8cpp_1a9160334f5431d469eb3170c95663efa7" prot="public" static="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="structCell" kindref="compound">Cell</ref> &gt;</type>
        <definition>typedef std::vector&lt;Cell&gt; V_Cell</definition>
        <argsstring></argsstring>
        <name>V_Cell</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/costmap_2d_cloud.cpp" line="51" column="21" bodyfile="src/costmap_2d_cloud.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="costmap__2d__cloud_8cpp_1a7306e31f20b6069ada3ccd04a2dee8fb" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float g_colors_a[]</definition>
        <argsstring>[]</argsstring>
        <name>g_colors_a</name>
        <initializer>= {0.0f, 0.5f, 1.0f}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/costmap_2d_cloud.cpp" line="56" column="7" bodyfile="src/costmap_2d_cloud.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="costmap__2d__cloud_8cpp_1a99cf9cb8de21cce5b837cb388869e47d" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float g_colors_b[]</definition>
        <argsstring>[]</argsstring>
        <name>g_colors_b</name>
        <initializer>= {0.0f, 1.0f, 0.0f}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/costmap_2d_cloud.cpp" line="55" column="7" bodyfile="src/costmap_2d_cloud.cpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="costmap__2d__cloud_8cpp_1aad0a3b44471e2ffc0aceb67acaf283ab" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float g_colors_g[]</definition>
        <argsstring>[]</argsstring>
        <name>g_colors_g</name>
        <initializer>= {0.0f, 0.0f, 0.0f}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/costmap_2d_cloud.cpp" line="54" column="7" bodyfile="src/costmap_2d_cloud.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="costmap__2d__cloud_8cpp_1a78afaf1e4f0d582f44a4bd7e59997f4f" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float g_colors_r[]</definition>
        <argsstring>[]</argsstring>
        <name>g_colors_r</name>
        <initializer>= {0.0f, 0.0f, 1.0f}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/costmap_2d_cloud.cpp" line="53" column="7" bodyfile="src/costmap_2d_cloud.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="costmap__2d__cloud_8cpp_1a636a7c520f61d4bc4a2116d233ea73e5" prot="public" static="no" mutable="no">
        <type><ref refid="costmap__2d__cloud_8cpp_1a9160334f5431d469eb3170c95663efa7" kindref="member">V_Cell</ref></type>
        <definition>V_Cell g_marked</definition>
        <argsstring></argsstring>
        <name>g_marked</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/costmap_2d_cloud.cpp" line="58" column="8" bodyfile="src/costmap_2d_cloud.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="costmap__2d__cloud_8cpp_1a56ea766445cbec66498245dd73cec775" prot="public" static="no" mutable="no">
        <type><ref refid="costmap__2d__cloud_8cpp_1a9160334f5431d469eb3170c95663efa7" kindref="member">V_Cell</ref></type>
        <definition>V_Cell g_unknown</definition>
        <argsstring></argsstring>
        <name>g_unknown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/costmap_2d_cloud.cpp" line="59" column="8" bodyfile="src/costmap_2d_cloud.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="costmap__2d__cloud_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/costmap_2d_cloud.cpp" line="192" column="5" bodyfile="src/costmap_2d_cloud.cpp" bodystart="192" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="costmap__2d__cloud_8cpp_1af6c7f1ce1e52188cc4e30c121a65bcd2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mapToWorld3D</definition>
        <argsstring>(const unsigned int mx, const unsigned int my, const unsigned int mz, const double origin_x, const double origin_y, const double origin_z, const double x_resolution, const double y_resolution, const double z_resolution, double &amp;wx, double &amp;wy, double &amp;wz)</argsstring>
        <name>mapToWorld3D</name>
        <param>
          <type>const unsigned int</type>
          <declname>mx</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>my</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>mz</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>origin_x</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>origin_y</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>origin_z</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>x_resolution</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>y_resolution</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>z_resolution</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>wx</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>wy</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>wz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/costmap_2d_cloud.cpp" line="33" column="20" bodyfile="src/costmap_2d_cloud.cpp" bodystart="33" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="costmap__2d__cloud_8cpp_1a37983da30da7edf07fa9971cd4957c6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void voxelCallback</definition>
        <argsstring>(const ros::Publisher &amp;pub_marked, const ros::Publisher &amp;pub_unknown, const costmap_2d::VoxelGridConstPtr &amp;grid)</argsstring>
        <name>voxelCallback</name>
        <param>
          <type>const ros::Publisher &amp;</type>
          <declname>pub_marked</declname>
        </param>
        <param>
          <type>const ros::Publisher &amp;</type>
          <declname>pub_unknown</declname>
        </param>
        <param>
          <type>const costmap_2d::VoxelGridConstPtr &amp;</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/costmap_2d_cloud.cpp" line="60" column="6" bodyfile="src/costmap_2d_cloud.cpp" bodystart="60" bodyend="190"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2009,<sp/>Willow<sp/>Garage,<sp/>Inc.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>names<sp/>of<sp/>Stanford<sp/>University<sp/>or<sp/>Willow<sp/>Garage,<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/ros.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sensor_msgs/PointCloud.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;costmap_2d/VoxelGrid.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;voxel_grid/voxel_grid.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="costmap__2d__cloud_8cpp_1af6c7f1ce1e52188cc4e30c121a65bcd2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="costmap__2d__cloud_8cpp_1af6c7f1ce1e52188cc4e30c121a65bcd2" kindref="member">mapToWorld3D</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>my,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mz,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>origin_x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>origin_y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>origin_z,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x_resolution,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y_resolution,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z_resolution,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>wx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>wy,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>wz)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>the<sp/>center<sp/>point<sp/>of<sp/>the<sp/>cell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>wx<sp/>=<sp/>origin_x<sp/>+<sp/>(mx<sp/>+<sp/>0.5)<sp/>*<sp/>x_resolution;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>wy<sp/>=<sp/>origin_y<sp/>+<sp/>(my<sp/>+<sp/>0.5)<sp/>*<sp/>y_resolution;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>wz<sp/>=<sp/>origin_z<sp/>+<sp/>(mz<sp/>+<sp/>0.5)<sp/>*<sp/>z_resolution;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="structCell" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structCell" kindref="compound">Cell</ref></highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46" refid="structCell_1a1087d1ed937d6ac4296085a0ccceeabd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structCell_1a1087d1ed937d6ac4296085a0ccceeabd" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="47" refid="structCell_1a3ceebe0a2888424c28463212a1397d10" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structCell_1a3ceebe0a2888424c28463212a1397d10" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="48" refid="structCell_1a782796de745505369270f47b9718baf6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structCell_1a782796de745505369270f47b9718baf6" kindref="member">z</ref>;</highlight></codeline>
<codeline lineno="49" refid="structCell_1a0a40fa1a001e691102dffa90efc27586" refkind="member"><highlight class="normal"><sp/><sp/>voxel_grid::VoxelStatus<sp/><ref refid="structCell_1a0a40fa1a001e691102dffa90efc27586" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">};</highlight></codeline>
<codeline lineno="51" refid="costmap__2d__cloud_8cpp_1a9160334f5431d469eb3170c95663efa7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;Cell&gt;</ref><sp/><ref refid="costmap__2d__cloud_8cpp_1a9160334f5431d469eb3170c95663efa7" kindref="member">V_Cell</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="costmap__2d__cloud_8cpp_1a78afaf1e4f0d582f44a4bd7e59997f4f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="costmap__2d__cloud_8cpp_1a78afaf1e4f0d582f44a4bd7e59997f4f" kindref="member">g_colors_r</ref>[]<sp/>=<sp/>{0.0f,<sp/>0.0f,<sp/>1.0f};</highlight></codeline>
<codeline lineno="54" refid="costmap__2d__cloud_8cpp_1aad0a3b44471e2ffc0aceb67acaf283ab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="costmap__2d__cloud_8cpp_1aad0a3b44471e2ffc0aceb67acaf283ab" kindref="member">g_colors_g</ref>[]<sp/>=<sp/>{0.0f,<sp/>0.0f,<sp/>0.0f};</highlight></codeline>
<codeline lineno="55" refid="costmap__2d__cloud_8cpp_1a99cf9cb8de21cce5b837cb388869e47d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="costmap__2d__cloud_8cpp_1a99cf9cb8de21cce5b837cb388869e47d" kindref="member">g_colors_b</ref>[]<sp/>=<sp/>{0.0f,<sp/>1.0f,<sp/>0.0f};</highlight></codeline>
<codeline lineno="56" refid="costmap__2d__cloud_8cpp_1a7306e31f20b6069ada3ccd04a2dee8fb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="costmap__2d__cloud_8cpp_1a7306e31f20b6069ada3ccd04a2dee8fb" kindref="member">g_colors_a</ref>[]<sp/>=<sp/>{0.0f,<sp/>0.5f,<sp/>1.0f};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="costmap__2d__cloud_8cpp_1a636a7c520f61d4bc4a2116d233ea73e5" refkind="member"><highlight class="normal"><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">V_Cell</ref><sp/><ref refid="costmap__2d__cloud_8cpp_1a636a7c520f61d4bc4a2116d233ea73e5" kindref="member">g_marked</ref>;</highlight></codeline>
<codeline lineno="59" refid="costmap__2d__cloud_8cpp_1a56ea766445cbec66498245dd73cec775" refkind="member"><highlight class="normal"><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">V_Cell</ref><sp/><ref refid="costmap__2d__cloud_8cpp_1a56ea766445cbec66498245dd73cec775" kindref="member">g_unknown</ref>;</highlight></codeline>
<codeline lineno="60" refid="costmap__2d__cloud_8cpp_1a37983da30da7edf07fa9971cd4957c6b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="costmap__2d__cloud_8cpp_1a37983da30da7edf07fa9971cd4957c6b" kindref="member">voxelCallback</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ros::Publisher&amp;<sp/>pub_marked,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ros::Publisher&amp;<sp/>pub_unknown,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>costmap_2d::VoxelGridConstPtr&amp;<sp/>grid)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(grid-&gt;data.empty())</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;Received<sp/>empty<sp/>voxel<sp/>grid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>ros::WallTime<sp/>start<sp/>=<sp/>ros::WallTime::now();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>ROS_DEBUG(</highlight><highlight class="stringliteral">&quot;Received<sp/>voxel<sp/>grid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>frame_id<sp/>=<sp/>grid-&gt;header.frame_id;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ros::Time<sp/>stamp<sp/>=<sp/>grid-&gt;header.stamp;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t*<sp/>data<sp/>=<sp/>&amp;grid-&gt;data.front();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x_origin<sp/>=<sp/>grid-&gt;origin.x;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y_origin<sp/>=<sp/>grid-&gt;origin.y;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z_origin<sp/>=<sp/>grid-&gt;origin.z;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x_res<sp/>=<sp/>grid-&gt;resolutions.x;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y_res<sp/>=<sp/>grid-&gt;resolutions.y;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z_res<sp/>=<sp/>grid-&gt;resolutions.z;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>x_size<sp/>=<sp/>grid-&gt;size_x;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>y_size<sp/>=<sp/>grid-&gt;size_y;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>z_size<sp/>=<sp/>grid-&gt;size_z;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="costmap__2d__cloud_8cpp_1a636a7c520f61d4bc4a2116d233ea73e5" kindref="member">g_marked</ref>.<ref refid="cpp/container/vector/clear" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">clear</ref>();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="costmap__2d__cloud_8cpp_1a56ea766445cbec66498245dd73cec775" kindref="member">g_unknown</ref>.<ref refid="cpp/container/vector/clear" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">clear</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>uint32_t<sp/>num_marked<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>uint32_t<sp/>num_unknown<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>y_grid<sp/>=<sp/>0;<sp/>y_grid<sp/>&lt;<sp/>y_size;<sp/>++y_grid)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>x_grid<sp/>=<sp/>0;<sp/>x_grid<sp/>&lt;<sp/>x_size;<sp/>++x_grid)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>z_grid<sp/>=<sp/>0;<sp/>z_grid<sp/>&lt;<sp/>z_size;<sp/>++z_grid)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>voxel_grid::VoxelStatus<sp/>status<sp/>=<sp/>voxel_grid::VoxelGrid::getVoxel(x_grid,<sp/>y_grid,<sp/>z_grid,<sp/>x_size,<sp/>y_size,<sp/>z_size,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>voxel_grid::UNKNOWN)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structCell" kindref="compound">Cell</ref><sp/>c;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.<ref refid="structCell_1a0a40fa1a001e691102dffa90efc27586" kindref="member">status</ref><sp/>=<sp/>status;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="costmap__2d__cloud_8cpp_1af6c7f1ce1e52188cc4e30c121a65bcd2" kindref="member">mapToWorld3D</ref>(x_grid,<sp/>y_grid,<sp/>z_grid,<sp/>x_origin,<sp/>y_origin,<sp/>z_origin,<sp/>x_res,<sp/>y_res,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_res,<sp/>c.<ref refid="structCell_1a1087d1ed937d6ac4296085a0ccceeabd" kindref="member">x</ref>,<sp/>c.<ref refid="structCell_1a3ceebe0a2888424c28463212a1397d10" kindref="member">y</ref>,<sp/>c.<ref refid="structCell_1a782796de745505369270f47b9718baf6" kindref="member">z</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="costmap__2d__cloud_8cpp_1a56ea766445cbec66498245dd73cec775" kindref="member">g_unknown</ref>.<ref refid="cpp/container/vector/push_back" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">push_back</ref>(c);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++num_unknown;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>voxel_grid::MARKED)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structCell" kindref="compound">Cell</ref><sp/>c;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.<ref refid="structCell_1a0a40fa1a001e691102dffa90efc27586" kindref="member">status</ref><sp/>=<sp/>status;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="costmap__2d__cloud_8cpp_1af6c7f1ce1e52188cc4e30c121a65bcd2" kindref="member">mapToWorld3D</ref>(x_grid,<sp/>y_grid,<sp/>z_grid,<sp/>x_origin,<sp/>y_origin,<sp/>z_origin,<sp/>x_res,<sp/>y_res,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_res,<sp/>c.<ref refid="structCell_1a1087d1ed937d6ac4296085a0ccceeabd" kindref="member">x</ref>,<sp/>c.<ref refid="structCell_1a3ceebe0a2888424c28463212a1397d10" kindref="member">y</ref>,<sp/>c.<ref refid="structCell_1a782796de745505369270f47b9718baf6" kindref="member">z</ref>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="costmap__2d__cloud_8cpp_1a636a7c520f61d4bc4a2116d233ea73e5" kindref="member">g_marked</ref>.<ref refid="cpp/container/vector/push_back" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">push_back</ref>(c);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++num_marked;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>sensor_msgs::PointCloud<sp/>cloud;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>cloud.points.resize(num_marked);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>cloud.channels.resize(1);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>cloud.channels[0].values.resize(num_marked);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>cloud.channels[0].name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;rgb&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>cloud.header.frame_id<sp/>=<sp/>frame_id;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>cloud.header.stamp<sp/>=<sp/>stamp;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>sensor_msgs::ChannelFloat32&amp;<sp/>chan<sp/>=<sp/>cloud.channels[0];</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_marked;<sp/>++i)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::Point32&amp;<sp/>p<sp/>=<sp/>cloud.points[i];</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>cval<sp/>=<sp/>chan.values[i];</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structCell" kindref="compound">Cell</ref>&amp;<sp/>c<sp/>=<sp/><ref refid="costmap__2d__cloud_8cpp_1a636a7c520f61d4bc4a2116d233ea73e5" kindref="member">g_marked</ref>[i];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p.x<sp/>=<sp/>c.<ref refid="structCell_1a1087d1ed937d6ac4296085a0ccceeabd" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p.y<sp/>=<sp/>c.<ref refid="structCell_1a3ceebe0a2888424c28463212a1397d10" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p.z<sp/>=<sp/>c.<ref refid="structCell_1a782796de745505369270f47b9718baf6" kindref="member">z</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>r<sp/>=<sp/><ref refid="costmap__2d__cloud_8cpp_1a78afaf1e4f0d582f44a4bd7e59997f4f" kindref="member">g_colors_r</ref>[c.<ref refid="structCell_1a0a40fa1a001e691102dffa90efc27586" kindref="member">status</ref>]<sp/>*<sp/>255.0;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>g<sp/>=<sp/><ref refid="costmap__2d__cloud_8cpp_1aad0a3b44471e2ffc0aceb67acaf283ab" kindref="member">g_colors_g</ref>[c.<ref refid="structCell_1a0a40fa1a001e691102dffa90efc27586" kindref="member">status</ref>]<sp/>*<sp/>255.0;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>b<sp/>=<sp/><ref refid="costmap__2d__cloud_8cpp_1a99cf9cb8de21cce5b837cb388869e47d" kindref="member">g_colors_b</ref>[c.<ref refid="structCell_1a0a40fa1a001e691102dffa90efc27586" kindref="member">status</ref>]<sp/>*<sp/>255.0;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uint32_t<sp/>a<sp/>=<sp/>g_colors_a[c.status]<sp/>*<sp/>255.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>col<sp/>=<sp/>(r<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(g<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>b;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cval<sp/>=<sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;col);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>pub_marked.publish(cloud);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>sensor_msgs::PointCloud<sp/>cloud;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>cloud.points.resize(num_unknown);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>cloud.channels.resize(1);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>cloud.channels[0].values.resize(num_unknown);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>cloud.channels[0].name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;rgb&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>cloud.header.frame_id<sp/>=<sp/>frame_id;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>cloud.header.stamp<sp/>=<sp/>stamp;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>sensor_msgs::ChannelFloat32&amp;<sp/>chan<sp/>=<sp/>cloud.channels[0];</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_unknown;<sp/>++i)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::Point32&amp;<sp/>p<sp/>=<sp/>cloud.points[i];</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>cval<sp/>=<sp/>chan.values[i];</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structCell" kindref="compound">Cell</ref>&amp;<sp/>c<sp/>=<sp/><ref refid="costmap__2d__cloud_8cpp_1a56ea766445cbec66498245dd73cec775" kindref="member">g_unknown</ref>[i];</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p.x<sp/>=<sp/>c.<ref refid="structCell_1a1087d1ed937d6ac4296085a0ccceeabd" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p.y<sp/>=<sp/>c.<ref refid="structCell_1a3ceebe0a2888424c28463212a1397d10" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p.z<sp/>=<sp/>c.<ref refid="structCell_1a782796de745505369270f47b9718baf6" kindref="member">z</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>r<sp/>=<sp/><ref refid="costmap__2d__cloud_8cpp_1a78afaf1e4f0d582f44a4bd7e59997f4f" kindref="member">g_colors_r</ref>[c.<ref refid="structCell_1a0a40fa1a001e691102dffa90efc27586" kindref="member">status</ref>]<sp/>*<sp/>255.0;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>g<sp/>=<sp/><ref refid="costmap__2d__cloud_8cpp_1aad0a3b44471e2ffc0aceb67acaf283ab" kindref="member">g_colors_g</ref>[c.<ref refid="structCell_1a0a40fa1a001e691102dffa90efc27586" kindref="member">status</ref>]<sp/>*<sp/>255.0;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>b<sp/>=<sp/><ref refid="costmap__2d__cloud_8cpp_1a99cf9cb8de21cce5b837cb388869e47d" kindref="member">g_colors_b</ref>[c.<ref refid="structCell_1a0a40fa1a001e691102dffa90efc27586" kindref="member">status</ref>]<sp/>*<sp/>255.0;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uint32_t<sp/>a<sp/>=<sp/>g_colors_a[c.status]<sp/>*<sp/>255.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>col<sp/>=<sp/>(r<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(g<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>b;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cval<sp/>=<sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;col);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>pub_unknown.publish(cloud);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>ros::WallTime<sp/>end<sp/>=<sp/>ros::WallTime::now();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>ROS_DEBUG(</highlight><highlight class="stringliteral">&quot;Published<sp/>%d<sp/>points<sp/>in<sp/>%f<sp/>seconds&quot;</highlight><highlight class="normal">,<sp/>num_marked<sp/>+<sp/>num_unknown,<sp/>(end<sp/>-<sp/>start).toSec());</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="costmap__2d__cloud_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="costmap__2d__cloud_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>ros::init(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;costmap_2d_cloud&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>ros::NodeHandle<sp/>n;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>ROS_DEBUG(</highlight><highlight class="stringliteral">&quot;Startup&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>ros::Publisher<sp/>pub_marked<sp/>=<sp/>n.advertise<sp/>&lt;<sp/>sensor_msgs::PointCloud<sp/>&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;voxel_marked_cloud&quot;</highlight><highlight class="normal">,<sp/>2);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>ros::Publisher<sp/>pub_unknown<sp/>=<sp/>n.advertise<sp/>&lt;<sp/>sensor_msgs::PointCloud<sp/>&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;voxel_unknown_cloud&quot;</highlight><highlight class="normal">,<sp/>2);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>ros::Subscriber<sp/>sub<sp/>=<sp/>n.subscribe<sp/>&lt;<sp/>costmap_2d::VoxelGrid</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;voxel_grid&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>[&amp;pub_marked,&amp;pub_unknown](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>msg){<sp/><ref refid="costmap__2d__cloud_8cpp_1a37983da30da7edf07fa9971cd4957c6b" kindref="member">voxelCallback</ref>(pub_marked,<sp/>pub_unknown,<sp/>msg);<sp/>});</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>ros::spin();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/costmap_2d_cloud.cpp"/>
  </compounddef>
</doxygen>
