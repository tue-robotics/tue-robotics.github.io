<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="inflation__tests_8cpp" kind="file" language="C++">
    <compoundname>inflation_tests.cpp</compoundname>
    <includes local="no">map</includes>
    <includes local="no">cmath</includes>
    <includes refid="costmap__2d_8h" local="no">costmap_2d/costmap_2d.h</includes>
    <includes refid="layered__costmap_8h" local="no">costmap_2d/layered_costmap.h</includes>
    <includes refid="obstacle__layer_8h" local="no">costmap_2d/obstacle_layer.h</includes>
    <includes refid="inflation__layer_8h" local="no">costmap_2d/inflation_layer.h</includes>
    <includes refid="observation__buffer_8h" local="no">costmap_2d/observation_buffer.h</includes>
    <includes refid="testing__helper_8h" local="no">costmap_2d/testing_helper.h</includes>
    <includes local="no">gtest/gtest.h</includes>
    <incdepgraph>
      <node id="21">
        <label>sensor_msgs/PointCloud2.h</label>
      </node>
      <node id="28">
        <label>message_filters/subscriber.h</label>
      </node>
      <node id="18">
        <label>list</label>
        <link refid="cpp/header/list" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="5">
        <label>vector</label>
        <link refid="cpp/header/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="9">
        <label>costmap_2d/layered_costmap.h</label>
        <link refid="layered__costmap_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>inflation_tests.cpp</label>
        <link refid="inflation__tests_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>costmap_2d/costmap_2d.h</label>
        <link refid="costmap__2d_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>costmap_2d/cost_values.h</label>
        <link refid="cost__values_8h"/>
      </node>
      <node id="6">
        <label>queue</label>
        <link refid="cpp/header/queue" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="37">
        <label>costmap_2d/testing_helper.h</label>
        <link refid="testing__helper_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>sensor_msgs/PointCloud.h</label>
      </node>
      <node id="30">
        <label>costmap_2d/ObstaclePluginConfig.h</label>
      </node>
      <node id="7">
        <label>geometry_msgs/Point.h</label>
      </node>
      <node id="27">
        <label>tf2_ros/message_filter.h</label>
      </node>
      <node id="8">
        <label>boost/thread.hpp</label>
      </node>
      <node id="39">
        <label>costmap_2d/GenericPluginConfig.h</label>
      </node>
      <node id="17">
        <label>costmap_2d/observation_buffer.h</label>
        <link refid="observation__buffer_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ros/time.h</label>
      </node>
      <node id="35">
        <label>costmap_2d/inflation_layer.h</label>
        <link refid="inflation__layer_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>dynamic_reconfigure/server.h</label>
      </node>
      <node id="40">
        <label>map_msgs/OccupancyGridUpdate.h</label>
      </node>
      <node id="2">
        <label>map</label>
        <link refid="cpp/header/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="34">
        <label>geometry_msgs/Point32.h</label>
      </node>
      <node id="32">
        <label>geometry_msgs/Polygon.h</label>
      </node>
      <node id="42">
        <label>gtest/gtest.h</label>
      </node>
      <node id="38">
        <label>costmap_2d/static_layer.h</label>
        <link refid="static__layer_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>laser_geometry/laser_geometry.h</label>
      </node>
      <node id="11">
        <label>costmap_2d/layer.h</label>
        <link refid="layer_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ros/ros.h</label>
      </node>
      <node id="16">
        <label>costmap_2d/costmap_layer.h</label>
        <link refid="costmap__layer_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>costmap_2d/footprint.h</label>
        <link refid="footprint_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>costmap_2d/obstacle_layer.h</label>
        <link refid="obstacle__layer_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>geometry_msgs/PolygonStamped.h</label>
      </node>
      <node id="36">
        <label>costmap_2d/InflationPluginConfig.h</label>
      </node>
      <node id="26">
        <label>sensor_msgs/point_cloud_conversion.h</label>
      </node>
      <node id="12">
        <label>string</label>
        <link refid="cpp/header/string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="20">
        <label>costmap_2d/observation.h</label>
        <link refid="observation_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>nav_msgs/OccupancyGrid.h</label>
      </node>
      <node id="23">
        <label>sensor_msgs/LaserScan.h</label>
      </node>
      <node id="41">
        <label>sensor_msgs/point_cloud2_iterator.h</label>
      </node>
      <node id="13">
        <label>tf2_ros/buffer.h</label>
      </node>
      <node id="3">
        <label>cmath</label>
        <link refid="cpp/header/cmath" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="inflation__tests_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/inflation_tests.cpp" line="413" column="5" bodyfile="test/inflation_tests.cpp" bodystart="413" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="inflation__tests_8cpp_1a691c7abce99a1c663f13e70eca655d45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; Point &gt;</type>
        <definition>std::vector&lt;Point&gt; setRadii</definition>
        <argsstring>(LayeredCostmap &amp;layers, double length, double width, double inflation_radius)</argsstring>
        <name>setRadii</name>
        <param>
          <type><ref refid="classcostmap__2d_1_1LayeredCostmap" kindref="compound">LayeredCostmap</ref> &amp;</type>
          <declname>layers</declname>
        </param>
        <param>
          <type>double</type>
          <declname>length</declname>
        </param>
        <param>
          <type>double</type>
          <declname>width</declname>
        </param>
        <param>
          <type>double</type>
          <declname>inflation_radius</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/inflation_tests.cpp" line="48" column="13" bodyfile="test/inflation_tests.cpp" bodystart="48" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="inflation__tests_8cpp_1ad4ae0b82faed5db2b710a038b9cf895f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(costmap, testAdjacentToObstacleCanStillMove)</argsstring>
        <name>TEST</name>
        <param>
          <type>costmap</type>
        </param>
        <param>
          <type>testAdjacentToObstacleCanStillMove</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/inflation_tests.cpp" line="137" column="1" bodyfile="test/inflation_tests.cpp" bodystart="137" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="inflation__tests_8cpp_1a9f9609b5ae2cbb941f8c326f3fd90276" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(costmap, testCostFunctionCorrectness)</argsstring>
        <name>TEST</name>
        <param>
          <type>costmap</type>
        </param>
        <param>
          <type>testCostFunctionCorrectness</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test for the cost function correctness with a larger range and different values </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/inflation_tests.cpp" line="188" column="1" bodyfile="test/inflation_tests.cpp" bodystart="188" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="inflation__tests_8cpp_1a790b8d46b7472f667bc70b1ac2b485e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(costmap, testInflation)</argsstring>
        <name>TEST</name>
        <param>
          <type>costmap</type>
        </param>
        <param>
          <type>testInflation</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test inflation for both static and dynamic obstacles </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/inflation_tests.cpp" line="284" column="1" bodyfile="test/inflation_tests.cpp" bodystart="284" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="inflation__tests_8cpp_1a94fa7b221aed2d9a56fb3effca4d4179" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(costmap, testInflation2)</argsstring>
        <name>TEST</name>
        <param>
          <type>costmap</type>
        </param>
        <param>
          <type>testInflation2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test specific inflation scenario to ensure we do not set inflated obstacles to be raw obstacles. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/inflation_tests.cpp" line="348" column="1" bodyfile="test/inflation_tests.cpp" bodystart="348" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="inflation__tests_8cpp_1ad0876c1fbe3e36f9dbcfddcd309a2838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(costmap, testInflation3)</argsstring>
        <name>TEST</name>
        <param>
          <type>costmap</type>
        </param>
        <param>
          <type>testInflation3</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test inflation behavior, starting with an empty map </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/inflation_tests.cpp" line="377" column="1" bodyfile="test/inflation_tests.cpp" bodystart="377" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="inflation__tests_8cpp_1a0b6bd7f54e38ab35deeba4833d904c61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(costmap, testInflationOrderCorrectness)</argsstring>
        <name>TEST</name>
        <param>
          <type>costmap</type>
        </param>
        <param>
          <type>testInflationOrderCorrectness</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test that there is no regression and that costs do not get underestimated with the distance-as-key map used to replace the previously used priority queue. This is a more thorough test of the cost function being correctly applied. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/inflation_tests.cpp" line="256" column="1" bodyfile="test/inflation_tests.cpp" bodystart="256" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="inflation__tests_8cpp_1a7944d546ff12543615d752c882c1ae12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(costmap, testInflationShouldNotCreateUnknowns)</argsstring>
        <name>TEST</name>
        <param>
          <type>costmap</type>
        </param>
        <param>
          <type>testInflationShouldNotCreateUnknowns</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/inflation_tests.cpp" line="163" column="1" bodyfile="test/inflation_tests.cpp" bodystart="163" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="inflation__tests_8cpp_1ace7be2b076b1bec8a1091d5f74632e28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void validatePointInflation</definition>
        <argsstring>(unsigned int mx, unsigned int my, Costmap2D *costmap, InflationLayer *ilayer, double inflation_radius)</argsstring>
        <name>validatePointInflation</name>
        <param>
          <type>unsigned int</type>
          <declname>mx</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>my</declname>
        </param>
        <param>
          <type><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound">Costmap2D</ref> *</type>
          <declname>costmap</declname>
        </param>
        <param>
          <type><ref refid="classcostmap__2d_1_1InflationLayer" kindref="compound">InflationLayer</ref> *</type>
          <declname>ilayer</declname>
        </param>
        <param>
          <type>double</type>
          <declname>inflation_radius</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/inflation_tests.cpp" line="73" column="6" bodyfile="test/inflation_tests.cpp" bodystart="73" bodyend="135"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2013,<sp/>Willow<sp/>Garage,<sp/>Inc.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>Willow<sp/>Garage,<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cpp/header/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">map</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cpp/header/cmath" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">cmath</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="costmap__2d_8h" kindref="compound">costmap_2d/costmap_2d.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="layered__costmap_8h" kindref="compound">costmap_2d/layered_costmap.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="obstacle__layer_8h" kindref="compound">costmap_2d/obstacle_layer.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="inflation__layer_8h" kindref="compound">costmap_2d/inflation_layer.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="observation__buffer_8h" kindref="compound">costmap_2d/observation_buffer.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="testing__helper_8h" kindref="compound">costmap_2d/testing_helper.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecostmap__2d" kindref="compound">costmap_2d</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>geometry_msgs::Point;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="inflation__tests_8cpp_1a691c7abce99a1c663f13e70eca655d45" refkind="member"><highlight class="normal"><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;Point&gt;</ref><sp/><ref refid="inflation__tests_8cpp_1a691c7abce99a1c663f13e70eca655d45" kindref="member">setRadii</ref>(<ref refid="classcostmap__2d_1_1LayeredCostmap" kindref="compound">LayeredCostmap</ref>&amp;<sp/>layers,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inflation_radius)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;Point&gt;</ref><sp/>polygon;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>Point<sp/>p;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>p.x<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>p.y<sp/>=<sp/>length;<sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>polygon.<ref refid="cpp/container/vector/push_back" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">push_back</ref>(p);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>p.x<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>p.y<sp/>=<sp/>-length;<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>polygon.<ref refid="cpp/container/vector/push_back" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">push_back</ref>(p);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>p.x<sp/>=<sp/>-width;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>p.y<sp/>=<sp/>-length;<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>polygon.<ref refid="cpp/container/vector/push_back" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">push_back</ref>(p);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>p.x<sp/>=<sp/>-width;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>p.y<sp/>=<sp/>length;<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>polygon.<ref refid="cpp/container/vector/push_back" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">push_back</ref>(p);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1acf16f3d3636b7fbe6e28edbd32340464" kindref="member">setFootprint</ref>(polygon);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>ros::NodeHandle<sp/>nh;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>nh.setParam(</highlight><highlight class="stringliteral">&quot;/inflation_tests/inflation/inflation_radius&quot;</highlight><highlight class="normal">,<sp/>inflation_radius);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>polygon;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Test<sp/>that<sp/>a<sp/>single<sp/>point<sp/>gets<sp/>inflated<sp/>properly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="inflation__tests_8cpp_1ace7be2b076b1bec8a1091d5f74632e28" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="inflation__tests_8cpp_1ace7be2b076b1bec8a1091d5f74632e28" kindref="member">validatePointInflation</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mx,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>my,<sp/><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound">Costmap2D</ref>*<sp/>costmap,<sp/><ref refid="classcostmap__2d_1_1InflationLayer" kindref="compound">InflationLayer</ref>*<sp/>ilayer,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inflation_radius)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>seen<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">[costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a615a4186649d8970111f8a356906b320" kindref="member">getSizeInCellsX</ref>()<sp/>*<sp/>costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a702f4ed109f94c8513500cf97ff066a4" kindref="member">getSizeInCellsY</ref>()];</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>memset(seen,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a615a4186649d8970111f8a356906b320" kindref="member">getSizeInCellsX</ref>()<sp/>*<sp/>costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a702f4ed109f94c8513500cf97ff066a4" kindref="member">getSizeInCellsY</ref>()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map&lt;double, std::vector&lt;CellData&gt;</ref><sp/>&gt;<sp/>m;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1CellData" kindref="compound">CellData</ref><sp/>initial(costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a57d2ea3f3a039d72640c159cd149ff9d" kindref="member">getIndex</ref>(mx,<sp/>my),<sp/>mx,<sp/>my,<sp/>mx,<sp/>my);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>m[0].push_back(initial);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;CellData&gt;</ref><sp/>&gt;::iterator<sp/>bin<sp/>=<sp/>m.<ref refid="cpp/container/map/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>();<sp/>bin<sp/>!=<sp/>m.<ref refid="cpp/container/map/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>();<sp/>++bin)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>bin-&gt;second.size();<sp/>++i)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcostmap__2d_1_1CellData" kindref="compound">CellData</ref>&amp;<sp/>cell<sp/>=<sp/>bin-&gt;second[i];</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!seen[cell.<ref refid="classcostmap__2d_1_1CellData_1aa37feddb470fb77327f89459d5f9c0d6" kindref="member">index_</ref>])</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seen[cell.<ref refid="classcostmap__2d_1_1CellData_1aa37feddb470fb77327f89459d5f9c0d6" kindref="member">index_</ref>]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dx<sp/>=<sp/>(cell.<ref refid="classcostmap__2d_1_1CellData_1a0be2739a4ba7be11c179fd1edf641f36" kindref="member">x_</ref><sp/>&gt;<sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1a4e0aa3874a9c9e236beda9b4e2a8b3a1" kindref="member">src_x_</ref>)<sp/>?<sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1a0be2739a4ba7be11c179fd1edf641f36" kindref="member">x_</ref><sp/>-<sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1a4e0aa3874a9c9e236beda9b4e2a8b3a1" kindref="member">src_x_</ref><sp/>:<sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1a4e0aa3874a9c9e236beda9b4e2a8b3a1" kindref="member">src_x_</ref><sp/>-<sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1a0be2739a4ba7be11c179fd1edf641f36" kindref="member">x_</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dy<sp/>=<sp/>(cell.<ref refid="classcostmap__2d_1_1CellData_1ac3625459924c7e17c792402817e77c3b" kindref="member">y_</ref><sp/>&gt;<sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1a221c3e3685d734d376235fe005202d8d" kindref="member">src_y_</ref>)<sp/>?<sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1ac3625459924c7e17c792402817e77c3b" kindref="member">y_</ref><sp/>-<sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1a221c3e3685d734d376235fe005202d8d" kindref="member">src_y_</ref><sp/>:<sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1a221c3e3685d734d376235fe005202d8d" kindref="member">src_y_</ref><sp/>-<sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1ac3625459924c7e17c792402817e77c3b" kindref="member">y_</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/>hypot(dx,<sp/>dy);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>expected_cost<sp/>=<sp/>ilayer-&gt;<ref refid="classcostmap__2d_1_1InflationLayer_1aded99a51737669d85ccc3f1b932061e5" kindref="member">computeCost</ref>(dist);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" kindref="member">getCost</ref>(cell.<ref refid="classcostmap__2d_1_1CellData_1a0be2739a4ba7be11c179fd1edf641f36" kindref="member">x_</ref>,<sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1ac3625459924c7e17c792402817e77c3b" kindref="member">y_</ref>)<sp/>&gt;=<sp/>expected_cost);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist<sp/>&gt;<sp/>inflation_radius)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist<sp/>==<sp/>bin-&gt;first)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adding<sp/>to<sp/>our<sp/>current<sp/>bin<sp/>could<sp/>cause<sp/>a<sp/>reallocation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Which<sp/>appears<sp/>to<sp/>cause<sp/>the<sp/>iterator<sp/>to<sp/>get<sp/>messed<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist<sp/>+=<sp/>0.001;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell.<ref refid="classcostmap__2d_1_1CellData_1a0be2739a4ba7be11c179fd1edf641f36" kindref="member">x_</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcostmap__2d_1_1CellData" kindref="compound">CellData</ref><sp/>data(costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a57d2ea3f3a039d72640c159cd149ff9d" kindref="member">getIndex</ref>(cell.<ref refid="classcostmap__2d_1_1CellData_1a0be2739a4ba7be11c179fd1edf641f36" kindref="member">x_</ref>-1,<sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1ac3625459924c7e17c792402817e77c3b" kindref="member">y_</ref>),</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1a0be2739a4ba7be11c179fd1edf641f36" kindref="member">x_</ref>-1,<sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1ac3625459924c7e17c792402817e77c3b" kindref="member">y_</ref>,<sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1a4e0aa3874a9c9e236beda9b4e2a8b3a1" kindref="member">src_x_</ref>,<sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1a221c3e3685d734d376235fe005202d8d" kindref="member">src_y_</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m[dist].push_back(data);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell.<ref refid="classcostmap__2d_1_1CellData_1ac3625459924c7e17c792402817e77c3b" kindref="member">y_</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcostmap__2d_1_1CellData" kindref="compound">CellData</ref><sp/>data(costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a57d2ea3f3a039d72640c159cd149ff9d" kindref="member">getIndex</ref>(cell.<ref refid="classcostmap__2d_1_1CellData_1a0be2739a4ba7be11c179fd1edf641f36" kindref="member">x_</ref>,<sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1ac3625459924c7e17c792402817e77c3b" kindref="member">y_</ref>-1),</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1a0be2739a4ba7be11c179fd1edf641f36" kindref="member">x_</ref>,<sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1ac3625459924c7e17c792402817e77c3b" kindref="member">y_</ref>-1,<sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1a4e0aa3874a9c9e236beda9b4e2a8b3a1" kindref="member">src_x_</ref>,<sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1a221c3e3685d734d376235fe005202d8d" kindref="member">src_y_</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m[dist].push_back(data);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell.<ref refid="classcostmap__2d_1_1CellData_1a0be2739a4ba7be11c179fd1edf641f36" kindref="member">x_</ref><sp/>&lt;<sp/>costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a615a4186649d8970111f8a356906b320" kindref="member">getSizeInCellsX</ref>()<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcostmap__2d_1_1CellData" kindref="compound">CellData</ref><sp/>data(costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a57d2ea3f3a039d72640c159cd149ff9d" kindref="member">getIndex</ref>(cell.<ref refid="classcostmap__2d_1_1CellData_1a0be2739a4ba7be11c179fd1edf641f36" kindref="member">x_</ref>+1,<sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1ac3625459924c7e17c792402817e77c3b" kindref="member">y_</ref>),</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1a0be2739a4ba7be11c179fd1edf641f36" kindref="member">x_</ref>+1,<sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1ac3625459924c7e17c792402817e77c3b" kindref="member">y_</ref>,<sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1a4e0aa3874a9c9e236beda9b4e2a8b3a1" kindref="member">src_x_</ref>,<sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1a221c3e3685d734d376235fe005202d8d" kindref="member">src_y_</ref>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m[dist].push_back(data);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell.<ref refid="classcostmap__2d_1_1CellData_1ac3625459924c7e17c792402817e77c3b" kindref="member">y_</ref><sp/>&lt;<sp/>costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a702f4ed109f94c8513500cf97ff066a4" kindref="member">getSizeInCellsY</ref>()<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcostmap__2d_1_1CellData" kindref="compound">CellData</ref><sp/>data(costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a57d2ea3f3a039d72640c159cd149ff9d" kindref="member">getIndex</ref>(cell.<ref refid="classcostmap__2d_1_1CellData_1a0be2739a4ba7be11c179fd1edf641f36" kindref="member">x_</ref>,<sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1ac3625459924c7e17c792402817e77c3b" kindref="member">y_</ref>+1),</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1a0be2739a4ba7be11c179fd1edf641f36" kindref="member">x_</ref>,<sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1ac3625459924c7e17c792402817e77c3b" kindref="member">y_</ref>+1,<sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1a4e0aa3874a9c9e236beda9b4e2a8b3a1" kindref="member">src_x_</ref>,<sp/>cell.<ref refid="classcostmap__2d_1_1CellData_1a221c3e3685d734d376235fe005202d8d" kindref="member">src_y_</ref>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m[dist].push_back(data);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>seen;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="inflation__tests_8cpp_1ad4ae0b82faed5db2b710a038b9cf895f" refkind="member"><highlight class="normal"><ref refid="inflation__tests_8cpp_1ad4ae0b82faed5db2b710a038b9cf895f" kindref="member">TEST</ref>(costmap,<sp/>testAdjacentToObstacleCanStillMove){</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>tf2_ros::Buffer<sp/>tf;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1LayeredCostmap" kindref="compound">LayeredCostmap</ref><sp/>layers(</highlight><highlight class="stringliteral">&quot;frame&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1a8f8121ac0c6a2c5f267cf1cc07cfc40b" kindref="member">resizeMap</ref>(10,<sp/>10,<sp/>1,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Footprint<sp/>with<sp/>inscribed<sp/>radius<sp/>=<sp/>2.1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>circumscribed<sp/>radius<sp/>=<sp/>3.1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;Point&gt;</ref><sp/>polygon<sp/>=<sp/><ref refid="inflation__tests_8cpp_1a691c7abce99a1c663f13e70eca655d45" kindref="member">setRadii</ref>(layers,<sp/>2.1,<sp/>2.3,<sp/>4.1);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1ObstacleLayer" kindref="compound">ObstacleLayer</ref>*<sp/>olayer<sp/>=<sp/><ref refid="testing__helper_8h_1afa235ecd500d751f54fd5cf8f32c550d" kindref="member">addObstacleLayer</ref>(layers,<sp/>tf);<sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1InflationLayer" kindref="compound">InflationLayer</ref>*<sp/>ilayer<sp/>=<sp/><ref refid="testing__helper_8h_1aa81f91d17d5a8d5687fe6f66e3227165" kindref="member">addInflationLayer</ref>(layers,<sp/>tf);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1acf16f3d3636b7fbe6e28edbd32340464" kindref="member">setFootprint</ref>(polygon);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a043c2232e047ce2a6c03a493e5e31ee9" kindref="member">addObservation</ref>(olayer,<sp/>0,<sp/>0,<sp/><ref refid="testing__helper_8h_1a80945e4c9ec06fccdb5342cacfea6e3d" kindref="member">MAX_Z</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ab598d6442277ba8299ba3c7b952662d6" kindref="member">updateMap</ref>(0,0,0);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound">Costmap2D</ref>*<sp/>costmap<sp/>=<sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ae0c5b98322d3f62761418b895e2884b3" kindref="member">getCostmap</ref>();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printMap(*costmap);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>EXPECT_EQ(<sp/><ref refid="namespacecostmap__2d_1aab110f187082d88d103ee84c8e420872" kindref="member">LETHAL_OBSTACLE</ref>,<sp/>costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" kindref="member">getCost</ref>(<sp/>0,<sp/>0<sp/>));</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>EXPECT_EQ(<sp/><ref refid="namespacecostmap__2d_1a5d3c464519e4135a8f54c9aea7a51d2b" kindref="member">INSCRIBED_INFLATED_OBSTACLE</ref>,<sp/>costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" kindref="member">getCost</ref>(<sp/>1,<sp/>0<sp/>));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>EXPECT_EQ(<sp/><ref refid="namespacecostmap__2d_1a5d3c464519e4135a8f54c9aea7a51d2b" kindref="member">INSCRIBED_INFLATED_OBSTACLE</ref>,<sp/>costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" kindref="member">getCost</ref>(<sp/>2,<sp/>0<sp/>));</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(<sp/><ref refid="namespacecostmap__2d_1a5d3c464519e4135a8f54c9aea7a51d2b" kindref="member">INSCRIBED_INFLATED_OBSTACLE</ref><sp/>&gt;<sp/>costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" kindref="member">getCost</ref>(<sp/>3,<sp/>0<sp/>));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(<sp/><ref refid="namespacecostmap__2d_1a5d3c464519e4135a8f54c9aea7a51d2b" kindref="member">INSCRIBED_INFLATED_OBSTACLE</ref><sp/>&gt;<sp/>costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" kindref="member">getCost</ref>(<sp/>2,<sp/>1<sp/>));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>EXPECT_EQ(<sp/><ref refid="namespacecostmap__2d_1a5d3c464519e4135a8f54c9aea7a51d2b" kindref="member">INSCRIBED_INFLATED_OBSTACLE</ref>,<sp/>costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" kindref="member">getCost</ref>(<sp/>1,<sp/>1<sp/>));</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="inflation__tests_8cpp_1a7944d546ff12543615d752c882c1ae12" refkind="member"><highlight class="normal"><ref refid="inflation__tests_8cpp_1ad4ae0b82faed5db2b710a038b9cf895f" kindref="member">TEST</ref>(costmap,<sp/>testInflationShouldNotCreateUnknowns){</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>tf2_ros::Buffer<sp/>tf;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1LayeredCostmap" kindref="compound">LayeredCostmap</ref><sp/>layers(</highlight><highlight class="stringliteral">&quot;frame&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1a8f8121ac0c6a2c5f267cf1cc07cfc40b" kindref="member">resizeMap</ref>(10,<sp/>10,<sp/>1,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Footprint<sp/>with<sp/>inscribed<sp/>radius<sp/>=<sp/>2.1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>circumscribed<sp/>radius<sp/>=<sp/>3.1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;Point&gt;</ref><sp/>polygon<sp/>=<sp/><ref refid="inflation__tests_8cpp_1a691c7abce99a1c663f13e70eca655d45" kindref="member">setRadii</ref>(layers,<sp/>2.1,<sp/>2.3,<sp/>4.1);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1ObstacleLayer" kindref="compound">ObstacleLayer</ref>*<sp/>olayer<sp/>=<sp/><ref refid="testing__helper_8h_1afa235ecd500d751f54fd5cf8f32c550d" kindref="member">addObstacleLayer</ref>(layers,<sp/>tf);<sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1InflationLayer" kindref="compound">InflationLayer</ref>*<sp/>ilayer<sp/>=<sp/><ref refid="testing__helper_8h_1aa81f91d17d5a8d5687fe6f66e3227165" kindref="member">addInflationLayer</ref>(layers,<sp/>tf);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1acf16f3d3636b7fbe6e28edbd32340464" kindref="member">setFootprint</ref>(polygon);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a043c2232e047ce2a6c03a493e5e31ee9" kindref="member">addObservation</ref>(olayer,<sp/>0,<sp/>0,<sp/><ref refid="testing__helper_8h_1a80945e4c9ec06fccdb5342cacfea6e3d" kindref="member">MAX_Z</ref>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ab598d6442277ba8299ba3c7b952662d6" kindref="member">updateMap</ref>(0,0,0);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound">Costmap2D</ref>*<sp/>costmap<sp/>=<sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ae0c5b98322d3f62761418b895e2884b3" kindref="member">getCostmap</ref>();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>EXPECT_EQ(<sp/><ref refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" kindref="member">countValues</ref>(*costmap,<sp/><ref refid="namespacecostmap__2d_1ae61ae84ebebea32544148f295779c4ef" kindref="member">NO_INFORMATION</ref>),<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="inflation__tests_8cpp_1a9f9609b5ae2cbb941f8c326f3fd90276" refkind="member"><highlight class="normal"><ref refid="inflation__tests_8cpp_1ad4ae0b82faed5db2b710a038b9cf895f" kindref="member">TEST</ref>(costmap,<sp/>testCostFunctionCorrectness){</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>tf2_ros::Buffer<sp/>tf;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1LayeredCostmap" kindref="compound">LayeredCostmap</ref><sp/>layers(</highlight><highlight class="stringliteral">&quot;frame&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1a8f8121ac0c6a2c5f267cf1cc07cfc40b" kindref="member">resizeMap</ref>(100,<sp/>100,<sp/>1,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Footprint<sp/>with<sp/>inscribed<sp/>radius<sp/>=<sp/>5.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>circumscribed<sp/>radius<sp/>=<sp/>8.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;Point&gt;</ref><sp/>polygon<sp/>=<sp/><ref refid="inflation__tests_8cpp_1a691c7abce99a1c663f13e70eca655d45" kindref="member">setRadii</ref>(layers,<sp/>5.0,<sp/>6.25,<sp/>10.5);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1ObstacleLayer" kindref="compound">ObstacleLayer</ref>*<sp/>olayer<sp/>=<sp/><ref refid="testing__helper_8h_1afa235ecd500d751f54fd5cf8f32c550d" kindref="member">addObstacleLayer</ref>(layers,<sp/>tf);<sp/><sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1InflationLayer" kindref="compound">InflationLayer</ref>*<sp/>ilayer<sp/>=<sp/><ref refid="testing__helper_8h_1aa81f91d17d5a8d5687fe6f66e3227165" kindref="member">addInflationLayer</ref>(layers,<sp/>tf);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1acf16f3d3636b7fbe6e28edbd32340464" kindref="member">setFootprint</ref>(polygon);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a043c2232e047ce2a6c03a493e5e31ee9" kindref="member">addObservation</ref>(olayer,<sp/>50,<sp/>50,<sp/><ref refid="testing__helper_8h_1a80945e4c9ec06fccdb5342cacfea6e3d" kindref="member">MAX_Z</ref>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ab598d6442277ba8299ba3c7b952662d6" kindref="member">updateMap</ref>(0,0,0);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound">Costmap2D</ref>*<sp/>map<sp/>=<sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ae0c5b98322d3f62761418b895e2884b3" kindref="member">getCostmap</ref>();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>that<sp/>the<sp/>circumscribed<sp/>cost<sp/>lower<sp/>bound<sp/>is<sp/>as<sp/>expected:<sp/>based<sp/>on<sp/>the<sp/>cost<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//unsigned<sp/>char<sp/>c<sp/>=<sp/>ilayer-&gt;computeCost(8.0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//ASSERT_EQ(ilayer-&gt;getCircumscribedCost(),<sp/>c);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)ceil(5.0);<sp/>i++){</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>the<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(map-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" kindref="member">getCost</ref>(50<sp/>+<sp/>i,<sp/>50)<sp/>&gt;=<sp/><ref refid="namespacecostmap__2d_1a5d3c464519e4135a8f54c9aea7a51d2b" kindref="member">costmap_2d::INSCRIBED_INFLATED_OBSTACLE</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(map-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" kindref="member">getCost</ref>(50<sp/>+<sp/>i,<sp/>50)<sp/>&gt;=<sp/><ref refid="namespacecostmap__2d_1a5d3c464519e4135a8f54c9aea7a51d2b" kindref="member">costmap_2d::INSCRIBED_INFLATED_OBSTACLE</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>the<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(map-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" kindref="member">getCost</ref>(50<sp/>-<sp/>i,<sp/>50)<sp/>&gt;=<sp/><ref refid="namespacecostmap__2d_1a5d3c464519e4135a8f54c9aea7a51d2b" kindref="member">costmap_2d::INSCRIBED_INFLATED_OBSTACLE</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(map-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" kindref="member">getCost</ref>(50<sp/>-<sp/>i,<sp/>50)<sp/>&gt;=<sp/><ref refid="namespacecostmap__2d_1a5d3c464519e4135a8f54c9aea7a51d2b" kindref="member">costmap_2d::INSCRIBED_INFLATED_OBSTACLE</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(map-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" kindref="member">getCost</ref>(50,<sp/>50<sp/>+<sp/>i)<sp/>&gt;=<sp/><ref refid="namespacecostmap__2d_1a5d3c464519e4135a8f54c9aea7a51d2b" kindref="member">costmap_2d::INSCRIBED_INFLATED_OBSTACLE</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(map-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" kindref="member">getCost</ref>(50,<sp/>50<sp/>+<sp/>i)<sp/>&gt;=<sp/><ref refid="namespacecostmap__2d_1a5d3c464519e4135a8f54c9aea7a51d2b" kindref="member">costmap_2d::INSCRIBED_INFLATED_OBSTACLE</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(map-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" kindref="member">getCost</ref>(50,<sp/>50<sp/>-<sp/>i)<sp/>&gt;=<sp/><ref refid="namespacecostmap__2d_1a5d3c464519e4135a8f54c9aea7a51d2b" kindref="member">costmap_2d::INSCRIBED_INFLATED_OBSTACLE</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(map-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" kindref="member">getCost</ref>(50,<sp/>50<sp/>-<sp/>i)<sp/>&gt;=<sp/><ref refid="namespacecostmap__2d_1a5d3c464519e4135a8f54c9aea7a51d2b" kindref="member">costmap_2d::INSCRIBED_INFLATED_OBSTACLE</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>the<sp/>normalized<sp/>cost<sp/>attenuates<sp/>as<sp/>expected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(ceil(5.0)<sp/>+<sp/>1);<sp/>i<sp/>&lt;=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)ceil(10.5);<sp/>i++){</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>expectedValue<sp/>=<sp/>ilayer-&gt;<ref refid="classcostmap__2d_1_1InflationLayer_1aded99a51737669d85ccc3f1b932061e5" kindref="member">computeCost</ref>(i/1.0);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(map-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" kindref="member">getCost</ref>(50<sp/>+<sp/>i,<sp/>50),<sp/>expectedValue);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>with<sp/>no<sp/>hits.<sp/>Should<sp/>clear<sp/>(revert<sp/>to<sp/>the<sp/>static<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*map-&gt;resetMapOutsideWindow(0,<sp/>0,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/>cloud.points.resize(0);</highlight></codeline>
<codeline lineno="234"><highlight class="comment"></highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/>p.x<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/>p.y<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/>p.z<sp/>=<sp/>MAX_Z;</highlight></codeline>
<codeline lineno="238"><highlight class="comment"></highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/>Observation<sp/>obs2(p,<sp/>cloud,<sp/>100.0,<sp/>100.0);</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/>std::vector&lt;Observation&gt;<sp/>obsBuf2;</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/>obsBuf2.push_back(obs2);</highlight></codeline>
<codeline lineno="242"><highlight class="comment"></highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/><sp/>map-&gt;updateWorld(0,<sp/>0,<sp/>obsBuf2,<sp/>obsBuf2);</highlight></codeline>
<codeline lineno="244"><highlight class="comment"></highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/><sp/>for(unsigned<sp/>int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>100;<sp/>i++)</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/><sp/><sp/><sp/>for(unsigned<sp/>int<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>100;<sp/>j++)</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(map-&gt;getCost(i,<sp/>j),<sp/>costmap_2d::FREE_SPACE);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="inflation__tests_8cpp_1a0b6bd7f54e38ab35deeba4833d904c61" refkind="member"><highlight class="normal"><ref refid="inflation__tests_8cpp_1ad4ae0b82faed5db2b710a038b9cf895f" kindref="member">TEST</ref>(costmap,<sp/>testInflationOrderCorrectness){</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>tf2_ros::Buffer<sp/>tf;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1LayeredCostmap" kindref="compound">LayeredCostmap</ref><sp/>layers(</highlight><highlight class="stringliteral">&quot;frame&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1a8f8121ac0c6a2c5f267cf1cc07cfc40b" kindref="member">resizeMap</ref>(10,<sp/>10,<sp/>1,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Footprint<sp/>with<sp/>inscribed<sp/>radius<sp/>=<sp/>2.1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>circumscribed<sp/>radius<sp/>=<sp/>3.1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inflation_radius<sp/>=<sp/>4.1;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;Point&gt;</ref><sp/>polygon<sp/>=<sp/><ref refid="inflation__tests_8cpp_1a691c7abce99a1c663f13e70eca655d45" kindref="member">setRadii</ref>(layers,<sp/>2.1,<sp/>2.3,<sp/>inflation_radius);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1ObstacleLayer" kindref="compound">ObstacleLayer</ref>*<sp/>olayer<sp/>=<sp/><ref refid="testing__helper_8h_1afa235ecd500d751f54fd5cf8f32c550d" kindref="member">addObstacleLayer</ref>(layers,<sp/>tf);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1InflationLayer" kindref="compound">InflationLayer</ref>*<sp/>ilayer<sp/>=<sp/><ref refid="testing__helper_8h_1aa81f91d17d5a8d5687fe6f66e3227165" kindref="member">addInflationLayer</ref>(layers,<sp/>tf);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1acf16f3d3636b7fbe6e28edbd32340464" kindref="member">setFootprint</ref>(polygon);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>two<sp/>diagonal<sp/>cells,<sp/>they<sp/>would<sp/>induce<sp/>problems<sp/>under<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>previous<sp/>implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a043c2232e047ce2a6c03a493e5e31ee9" kindref="member">addObservation</ref>(olayer,<sp/>4,<sp/>4,<sp/><ref refid="testing__helper_8h_1a80945e4c9ec06fccdb5342cacfea6e3d" kindref="member">MAX_Z</ref>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a043c2232e047ce2a6c03a493e5e31ee9" kindref="member">addObservation</ref>(olayer,<sp/>5,<sp/>5,<sp/><ref refid="testing__helper_8h_1a80945e4c9ec06fccdb5342cacfea6e3d" kindref="member">MAX_Z</ref>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ab598d6442277ba8299ba3c7b952662d6" kindref="member">updateMap</ref>(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><ref refid="inflation__tests_8cpp_1ace7be2b076b1bec8a1091d5f74632e28" kindref="member">validatePointInflation</ref>(4,<sp/>4,<sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ae0c5b98322d3f62761418b895e2884b3" kindref="member">getCostmap</ref>(),<sp/>ilayer,<sp/>inflation_radius);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><ref refid="inflation__tests_8cpp_1ace7be2b076b1bec8a1091d5f74632e28" kindref="member">validatePointInflation</ref>(5,<sp/>5,<sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ae0c5b98322d3f62761418b895e2884b3" kindref="member">getCostmap</ref>(),<sp/>ilayer,<sp/>inflation_radius);</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="inflation__tests_8cpp_1a790b8d46b7472f667bc70b1ac2b485e1" refkind="member"><highlight class="normal"><ref refid="inflation__tests_8cpp_1ad4ae0b82faed5db2b710a038b9cf895f" kindref="member">TEST</ref>(costmap,<sp/>testInflation){</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>tf2_ros::Buffer<sp/>tf;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1LayeredCostmap" kindref="compound">LayeredCostmap</ref><sp/>layers(</highlight><highlight class="stringliteral">&quot;frame&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Footprint<sp/>with<sp/>inscribed<sp/>radius<sp/>=<sp/>2.1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>circumscribed<sp/>radius<sp/>=<sp/>3.1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;Point&gt;</ref><sp/>polygon<sp/>=<sp/><ref refid="inflation__tests_8cpp_1a691c7abce99a1c663f13e70eca655d45" kindref="member">setRadii</ref>(layers,<sp/>1,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a44d779d80cd1879d61ab1e32e179a806" kindref="member">addStaticLayer</ref>(layers,<sp/>tf);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1ObstacleLayer" kindref="compound">ObstacleLayer</ref>*<sp/>olayer<sp/>=<sp/><ref refid="testing__helper_8h_1afa235ecd500d751f54fd5cf8f32c550d" kindref="member">addObstacleLayer</ref>(layers,<sp/>tf);<sp/><sp/></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1InflationLayer" kindref="compound">InflationLayer</ref>*<sp/>ilayer<sp/>=<sp/><ref refid="testing__helper_8h_1aa81f91d17d5a8d5687fe6f66e3227165" kindref="member">addInflationLayer</ref>(layers,<sp/>tf);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1acf16f3d3636b7fbe6e28edbd32340464" kindref="member">setFootprint</ref>(polygon);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound">Costmap2D</ref>*<sp/>costmap<sp/>=<sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ae0c5b98322d3f62761418b895e2884b3" kindref="member">getCostmap</ref>();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ab598d6442277ba8299ba3c7b952662d6" kindref="member">updateMap</ref>(0,0,0);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printMap(*costmap);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>ASSERT_EQ(<ref refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" kindref="member">countValues</ref>(*costmap,<sp/><ref refid="namespacecostmap__2d_1aab110f187082d88d103ee84c8e420872" kindref="member">LETHAL_OBSTACLE</ref>),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)20);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>ASSERT_EQ(<ref refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" kindref="member">countValues</ref>(*costmap,<sp/><ref refid="namespacecostmap__2d_1a5d3c464519e4135a8f54c9aea7a51d2b" kindref="member">INSCRIBED_INFLATED_OBSTACLE</ref>),<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)28);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*/<sp/>Iterate<sp/>over<sp/>all<sp/>id&apos;s<sp/>and<sp/>verify<sp/>they<sp/>are<sp/>obstacles</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/>for(std::vector&lt;unsigned<sp/>int&gt;::const_iterator<sp/>it<sp/>=<sp/>occupiedCells.begin();<sp/>it<sp/>!=<sp/>occupiedCells.end();<sp/>++it){</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/><sp/><sp/><sp/>unsigned<sp/>int<sp/>ind<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/><sp/><sp/><sp/>unsigned<sp/>int<sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/><sp/>map.indexToCells(ind,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/><sp/><sp/><sp/>ASSERT_EQ(find(occupiedCells,<sp/>map.getIndex(x,<sp/>y)),<sp/>true);</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/><sp/><sp/><sp/>ASSERT_EQ(map.getCost(x,<sp/>y)<sp/>==<sp/>costmap_2d::LETHAL_OBSTACLE<sp/>||<sp/>map.getCost(x,<sp/>y)<sp/>==<sp/>costmap_2d::INSCRIBED_INFLATED_OBSTACLE,<sp/>true);</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a043c2232e047ce2a6c03a493e5e31ee9" kindref="member">addObservation</ref>(olayer,<sp/>0,<sp/>0,<sp/>0.4);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ab598d6442277ba8299ba3c7b952662d6" kindref="member">updateMap</ref>(0,0,0);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>and<sp/>its<sp/>2<sp/>neighbors<sp/>makes<sp/>3<sp/>obstacles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>ASSERT_EQ(<ref refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" kindref="member">countValues</ref>(*costmap,<sp/><ref refid="namespacecostmap__2d_1aab110f187082d88d103ee84c8e420872" kindref="member">LETHAL_OBSTACLE</ref>)<sp/>+<sp/><ref refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" kindref="member">countValues</ref>(*costmap,<sp/><ref refid="namespacecostmap__2d_1a5d3c464519e4135a8f54c9aea7a51d2b" kindref="member">INSCRIBED_INFLATED_OBSTACLE</ref>),<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)51);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@todo<sp/>Rewrite<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>an<sp/>obstacle<sp/>at<sp/>&lt;2,0&gt;<sp/>which<sp/>will<sp/>inflate<sp/>and<sp/>refresh<sp/>to<sp/>of<sp/>the<sp/>other<sp/>inflated<sp/>cells</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a043c2232e047ce2a6c03a493e5e31ee9" kindref="member">addObservation</ref>(olayer,<sp/>2,<sp/>0);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ab598d6442277ba8299ba3c7b952662d6" kindref="member">updateMap</ref>(0,0,0);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>we<sp/>expect<sp/>insertions<sp/>for<sp/>it,<sp/>and<sp/>2<sp/>more<sp/>neighbors,<sp/>but<sp/>not<sp/>all<sp/>5.<sp/>Free<sp/>space<sp/>will<sp/>propagate<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>origin<sp/>to<sp/>the<sp/>target,<sp/>clearing<sp/>the<sp/>point<sp/>at<sp/>&lt;0,<sp/>0&gt;,<sp/>but<sp/>not<sp/>over-writing<sp/>the<sp/>inflation<sp/>of<sp/>the<sp/>obstacle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>&lt;0,<sp/>1&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>ASSERT_EQ(<ref refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" kindref="member">countValues</ref>(*costmap,<sp/><ref refid="namespacecostmap__2d_1aab110f187082d88d103ee84c8e420872" kindref="member">LETHAL_OBSTACLE</ref>)<sp/>+<sp/><ref refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" kindref="member">countValues</ref>(*costmap,<sp/><ref refid="namespacecostmap__2d_1a5d3c464519e4135a8f54c9aea7a51d2b" kindref="member">INSCRIBED_INFLATED_OBSTACLE</ref>),<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)54);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>an<sp/>obstacle<sp/>at<sp/>&lt;1,<sp/>9&gt;.<sp/>This<sp/>will<sp/>inflate<sp/>obstacles<sp/>around<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a043c2232e047ce2a6c03a493e5e31ee9" kindref="member">addObservation</ref>(olayer,<sp/>1,<sp/>9);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ab598d6442277ba8299ba3c7b952662d6" kindref="member">updateMap</ref>(0,0,0);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>ASSERT_EQ(costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" kindref="member">getCost</ref>(1,<sp/>9),<sp/><ref refid="namespacecostmap__2d_1aab110f187082d88d103ee84c8e420872" kindref="member">LETHAL_OBSTACLE</ref>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>ASSERT_EQ(costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" kindref="member">getCost</ref>(0,<sp/>9),<sp/><ref refid="namespacecostmap__2d_1a5d3c464519e4135a8f54c9aea7a51d2b" kindref="member">INSCRIBED_INFLATED_OBSTACLE</ref>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>ASSERT_EQ(costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" kindref="member">getCost</ref>(2,<sp/>9),<sp/><ref refid="namespacecostmap__2d_1a5d3c464519e4135a8f54c9aea7a51d2b" kindref="member">INSCRIBED_INFLATED_OBSTACLE</ref>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>an<sp/>obstacle<sp/>and<sp/>verify<sp/>that<sp/>it<sp/>over-writes<sp/>its<sp/>inflated<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a043c2232e047ce2a6c03a493e5e31ee9" kindref="member">addObservation</ref>(olayer,<sp/>0,<sp/>9);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ab598d6442277ba8299ba3c7b952662d6" kindref="member">updateMap</ref>(0,0,0);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>ASSERT_EQ(costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" kindref="member">getCost</ref>(0,<sp/>9),<sp/><ref refid="namespacecostmap__2d_1aab110f187082d88d103ee84c8e420872" kindref="member">LETHAL_OBSTACLE</ref>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="inflation__tests_8cpp_1a94fa7b221aed2d9a56fb3effca4d4179" refkind="member"><highlight class="normal"><ref refid="inflation__tests_8cpp_1ad4ae0b82faed5db2b710a038b9cf895f" kindref="member">TEST</ref>(costmap,<sp/>testInflation2){</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>tf2_ros::Buffer<sp/>tf;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1LayeredCostmap" kindref="compound">LayeredCostmap</ref><sp/>layers(</highlight><highlight class="stringliteral">&quot;frame&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Footprint<sp/>with<sp/>inscribed<sp/>radius<sp/>=<sp/>2.1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>circumscribed<sp/>radius<sp/>=<sp/>3.1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;Point&gt;</ref><sp/>polygon<sp/>=<sp/><ref refid="inflation__tests_8cpp_1a691c7abce99a1c663f13e70eca655d45" kindref="member">setRadii</ref>(layers,<sp/>1,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a44d779d80cd1879d61ab1e32e179a806" kindref="member">addStaticLayer</ref>(layers,<sp/>tf);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1ObstacleLayer" kindref="compound">ObstacleLayer</ref>*<sp/>olayer<sp/>=<sp/><ref refid="testing__helper_8h_1afa235ecd500d751f54fd5cf8f32c550d" kindref="member">addObstacleLayer</ref>(layers,<sp/>tf);<sp/><sp/></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1InflationLayer" kindref="compound">InflationLayer</ref>*<sp/>ilayer<sp/>=<sp/><ref refid="testing__helper_8h_1aa81f91d17d5a8d5687fe6f66e3227165" kindref="member">addInflationLayer</ref>(layers,<sp/>tf);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1acf16f3d3636b7fbe6e28edbd32340464" kindref="member">setFootprint</ref>(polygon);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Creat<sp/>a<sp/>small<sp/>L-Shape<sp/>all<sp/>at<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a043c2232e047ce2a6c03a493e5e31ee9" kindref="member">addObservation</ref>(olayer,<sp/>1,<sp/>1,<sp/><ref refid="testing__helper_8h_1a80945e4c9ec06fccdb5342cacfea6e3d" kindref="member">MAX_Z</ref>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a043c2232e047ce2a6c03a493e5e31ee9" kindref="member">addObservation</ref>(olayer,<sp/>2,<sp/>1,<sp/><ref refid="testing__helper_8h_1a80945e4c9ec06fccdb5342cacfea6e3d" kindref="member">MAX_Z</ref>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a043c2232e047ce2a6c03a493e5e31ee9" kindref="member">addObservation</ref>(olayer,<sp/>2,<sp/>2,<sp/><ref refid="testing__helper_8h_1a80945e4c9ec06fccdb5342cacfea6e3d" kindref="member">MAX_Z</ref>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ab598d6442277ba8299ba3c7b952662d6" kindref="member">updateMap</ref>(0,0,0);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound">Costmap2D</ref>*<sp/>costmap<sp/>=<sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ae0c5b98322d3f62761418b895e2884b3" kindref="member">getCostmap</ref>();</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printMap(*costmap);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>ASSERT_EQ(costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" kindref="member">getCost</ref>(2,<sp/>3),<sp/><ref refid="namespacecostmap__2d_1a5d3c464519e4135a8f54c9aea7a51d2b" kindref="member">costmap_2d::INSCRIBED_INFLATED_OBSTACLE</ref>);<sp/><sp/></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>ASSERT_EQ(costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" kindref="member">getCost</ref>(3,<sp/>3),<sp/><ref refid="namespacecostmap__2d_1a5d3c464519e4135a8f54c9aea7a51d2b" kindref="member">costmap_2d::INSCRIBED_INFLATED_OBSTACLE</ref>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="377" refid="inflation__tests_8cpp_1ad0876c1fbe3e36f9dbcfddcd309a2838" refkind="member"><highlight class="normal"><ref refid="inflation__tests_8cpp_1ad4ae0b82faed5db2b710a038b9cf895f" kindref="member">TEST</ref>(costmap,<sp/>testInflation3){</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>tf2_ros::Buffer<sp/>tf;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1LayeredCostmap" kindref="compound">LayeredCostmap</ref><sp/>layers(</highlight><highlight class="stringliteral">&quot;frame&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1a8f8121ac0c6a2c5f267cf1cc07cfc40b" kindref="member">resizeMap</ref>(10,<sp/>10,<sp/>1,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>2<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;Point&gt;</ref><sp/>polygon<sp/>=<sp/><ref refid="inflation__tests_8cpp_1a691c7abce99a1c663f13e70eca655d45" kindref="member">setRadii</ref>(layers,<sp/>1,<sp/>1.75,<sp/>3);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1ObstacleLayer" kindref="compound">ObstacleLayer</ref>*<sp/>olayer<sp/>=<sp/><ref refid="testing__helper_8h_1afa235ecd500d751f54fd5cf8f32c550d" kindref="member">addObstacleLayer</ref>(layers,<sp/>tf);<sp/><sp/></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1InflationLayer" kindref="compound">InflationLayer</ref>*<sp/>ilayer<sp/>=<sp/><ref refid="testing__helper_8h_1aa81f91d17d5a8d5687fe6f66e3227165" kindref="member">addInflationLayer</ref>(layers,<sp/>tf);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1acf16f3d3636b7fbe6e28edbd32340464" kindref="member">setFootprint</ref>(polygon);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>should<sp/>be<sp/>no<sp/>occupied<sp/>cells</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound">Costmap2D</ref>*<sp/>costmap<sp/>=<sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ae0c5b98322d3f62761418b895e2884b3" kindref="member">getCostmap</ref>();</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>ASSERT_EQ(<ref refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" kindref="member">countValues</ref>(*costmap,<sp/><ref refid="namespacecostmap__2d_1aab110f187082d88d103ee84c8e420872" kindref="member">LETHAL_OBSTACLE</ref>),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)0);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>ASSERT_EQ(<ref refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" kindref="member">countValues</ref>(*costmap,<sp/><ref refid="namespacecostmap__2d_1a5d3c464519e4135a8f54c9aea7a51d2b" kindref="member">INSCRIBED_INFLATED_OBSTACLE</ref>),<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)0);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a31015063213528e542a953d8470fc6b5" kindref="member">printMap</ref>(*costmap);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>an<sp/>obstacle<sp/>at<sp/>5,5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a043c2232e047ce2a6c03a493e5e31ee9" kindref="member">addObservation</ref>(olayer,<sp/>5,<sp/>5,<sp/><ref refid="testing__helper_8h_1a80945e4c9ec06fccdb5342cacfea6e3d" kindref="member">MAX_Z</ref>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ab598d6442277ba8299ba3c7b952662d6" kindref="member">updateMap</ref>(0,0,0);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a31015063213528e542a953d8470fc6b5" kindref="member">printMap</ref>(*costmap);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>fails<sp/>because<sp/>updated<sp/>cell<sp/>value<sp/>is<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>ASSERT_EQ(<ref refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" kindref="member">countValues</ref>(*costmap,<sp/><ref refid="namespacecostmap__2d_1aa367750132c78d35f962c9130c1a572c" kindref="member">FREE_SPACE</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)29);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>ASSERT_EQ(<ref refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" kindref="member">countValues</ref>(*costmap,<sp/><ref refid="namespacecostmap__2d_1aab110f187082d88d103ee84c8e420872" kindref="member">LETHAL_OBSTACLE</ref>),<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)1);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>ASSERT_EQ(<ref refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" kindref="member">countValues</ref>(*costmap,<sp/><ref refid="namespacecostmap__2d_1a5d3c464519e4135a8f54c9aea7a51d2b" kindref="member">INSCRIBED_INFLATED_OBSTACLE</ref>),<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)4);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>again<sp/>-<sp/>should<sp/>see<sp/>no<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ab598d6442277ba8299ba3c7b952662d6" kindref="member">updateMap</ref>(0,0,0);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>ASSERT_EQ(<ref refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" kindref="member">countValues</ref>(*costmap,<sp/><ref refid="namespacecostmap__2d_1aa367750132c78d35f962c9130c1a572c" kindref="member">FREE_SPACE</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)29);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>ASSERT_EQ(<ref refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" kindref="member">countValues</ref>(*costmap,<sp/><ref refid="namespacecostmap__2d_1aab110f187082d88d103ee84c8e420872" kindref="member">LETHAL_OBSTACLE</ref>),<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)1);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>ASSERT_EQ(<ref refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" kindref="member">countValues</ref>(*costmap,<sp/><ref refid="namespacecostmap__2d_1a5d3c464519e4135a8f54c9aea7a51d2b" kindref="member">INSCRIBED_INFLATED_OBSTACLE</ref>),<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)4);</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="inflation__tests_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="inflation__tests_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv){</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>ros::init(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;inflation_tests&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>testing::InitGoogleTest(&amp;argc,<sp/>argv);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RUN_ALL_TESTS();</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="test/inflation_tests.cpp"/>
  </compounddef>
</doxygen>
