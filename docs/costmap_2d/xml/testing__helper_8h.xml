<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="testing__helper_8h" kind="file" language="C++">
    <compoundname>testing_helper.h</compoundname>
    <includes refid="cost__values_8h" local="no">costmap_2d/cost_values.h</includes>
    <includes refid="costmap__2d_8h" local="no">costmap_2d/costmap_2d.h</includes>
    <includes refid="static__layer_8h" local="no">costmap_2d/static_layer.h</includes>
    <includes refid="obstacle__layer_8h" local="no">costmap_2d/obstacle_layer.h</includes>
    <includes refid="inflation__layer_8h" local="no">costmap_2d/inflation_layer.h</includes>
    <includes local="no">sensor_msgs/point_cloud2_iterator.h</includes>
    <includedby refid="inflation__tests_8cpp" local="no">inflation_tests.cpp</includedby>
    <includedby refid="obstacle__tests_8cpp" local="no">obstacle_tests.cpp</includedby>
    <includedby refid="static__tests_8cpp" local="no">static_tests.cpp</includedby>
    <incdepgraph>
      <node id="25">
        <label>sensor_msgs/PointCloud2.h</label>
      </node>
      <node id="19">
        <label>message_filters/subscriber.h</label>
      </node>
      <node id="22">
        <label>list</label>
        <link refid="cpp/header/list" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="4">
        <label>vector</label>
        <link refid="cpp/header/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="12">
        <label>costmap_2d/layered_costmap.h</label>
        <link refid="layered__costmap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>costmap_2d/costmap_2d.h</label>
        <link refid="costmap__2d_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>costmap_2d/cost_values.h</label>
        <link refid="cost__values_8h"/>
      </node>
      <node id="5">
        <label>queue</label>
        <link refid="cpp/header/queue" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="1">
        <label>testing_helper.h</label>
        <link refid="testing__helper_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>sensor_msgs/PointCloud.h</label>
      </node>
      <node id="31">
        <label>costmap_2d/ObstaclePluginConfig.h</label>
      </node>
      <node id="6">
        <label>geometry_msgs/Point.h</label>
      </node>
      <node id="30">
        <label>tf2_ros/message_filter.h</label>
      </node>
      <node id="7">
        <label>boost/thread.hpp</label>
      </node>
      <node id="15">
        <label>costmap_2d/GenericPluginConfig.h</label>
      </node>
      <node id="21">
        <label>costmap_2d/observation_buffer.h</label>
        <link refid="observation__buffer_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>ros/time.h</label>
      </node>
      <node id="36">
        <label>costmap_2d/inflation_layer.h</label>
        <link refid="inflation__layer_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>dynamic_reconfigure/server.h</label>
      </node>
      <node id="18">
        <label>map_msgs/OccupancyGridUpdate.h</label>
      </node>
      <node id="35">
        <label>geometry_msgs/Point32.h</label>
      </node>
      <node id="33">
        <label>geometry_msgs/Polygon.h</label>
      </node>
      <node id="8">
        <label>costmap_2d/static_layer.h</label>
        <link refid="static__layer_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>laser_geometry/laser_geometry.h</label>
      </node>
      <node id="11">
        <label>costmap_2d/layer.h</label>
        <link refid="layer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ros/ros.h</label>
      </node>
      <node id="10">
        <label>costmap_2d/costmap_layer.h</label>
        <link refid="costmap__layer_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>costmap_2d/footprint.h</label>
        <link refid="footprint_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>costmap_2d/obstacle_layer.h</label>
        <link refid="obstacle__layer_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>geometry_msgs/PolygonStamped.h</label>
      </node>
      <node id="37">
        <label>costmap_2d/InflationPluginConfig.h</label>
      </node>
      <node id="29">
        <label>sensor_msgs/point_cloud_conversion.h</label>
      </node>
      <node id="13">
        <label>string</label>
        <link refid="cpp/header/string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="24">
        <label>costmap_2d/observation.h</label>
        <link refid="observation_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>nav_msgs/OccupancyGrid.h</label>
      </node>
      <node id="26">
        <label>sensor_msgs/LaserScan.h</label>
      </node>
      <node id="38">
        <label>sensor_msgs/point_cloud2_iterator.h</label>
      </node>
      <node id="14">
        <label>tf2_ros/buffer.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>inflation_tests.cpp</label>
        <link refid="inflation__tests_8cpp"/>
      </node>
      <node id="1">
        <label>testing_helper.h</label>
        <link refid="testing__helper_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>obstacle_tests.cpp</label>
        <link refid="obstacle__tests_8cpp"/>
      </node>
      <node id="4">
        <label>static_tests.cpp</label>
        <link refid="static__tests_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="testing__helper_8h_1aa81f91d17d5a8d5687fe6f66e3227165" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcostmap__2d_1_1InflationLayer" kindref="compound">costmap_2d::InflationLayer</ref> *</type>
        <definition>costmap_2d::InflationLayer* addInflationLayer</definition>
        <argsstring>(costmap_2d::LayeredCostmap &amp;layers, tf2_ros::Buffer &amp;tf)</argsstring>
        <name>addInflationLayer</name>
        <param>
          <type><ref refid="classcostmap__2d_1_1LayeredCostmap" kindref="compound">costmap_2d::LayeredCostmap</ref> &amp;</type>
          <declname>layers</declname>
        </param>
        <param>
          <type>tf2_ros::Buffer &amp;</type>
          <declname>tf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/testing_helper.h" line="89" column="28" bodyfile="include/costmap_2d/testing_helper.h" bodystart="89" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="testing__helper_8h_1a043c2232e047ce2a6c03a493e5e31ee9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addObservation</definition>
        <argsstring>(costmap_2d::ObstacleLayer *olayer, double x, double y, double z=0.0, double ox=0.0, double oy=0.0, double oz=MAX_Z)</argsstring>
        <name>addObservation</name>
        <param>
          <type><ref refid="classcostmap__2d_1_1ObstacleLayer" kindref="compound">costmap_2d::ObstacleLayer</ref> *</type>
          <declname>olayer</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>ox</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>oy</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>oz</declname>
          <defval><ref refid="module__tests_8cpp_1a80945e4c9ec06fccdb5342cacfea6e3d" kindref="member">MAX_Z</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/testing_helper.h" line="67" column="6" bodyfile="include/costmap_2d/testing_helper.h" bodystart="67" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="testing__helper_8h_1afa235ecd500d751f54fd5cf8f32c550d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcostmap__2d_1_1ObstacleLayer" kindref="compound">costmap_2d::ObstacleLayer</ref> *</type>
        <definition>costmap_2d::ObstacleLayer* addObstacleLayer</definition>
        <argsstring>(costmap_2d::LayeredCostmap &amp;layers, tf2_ros::Buffer &amp;tf)</argsstring>
        <name>addObstacleLayer</name>
        <param>
          <type><ref refid="classcostmap__2d_1_1LayeredCostmap" kindref="compound">costmap_2d::LayeredCostmap</ref> &amp;</type>
          <declname>layers</declname>
        </param>
        <param>
          <type>tf2_ros::Buffer &amp;</type>
          <declname>tf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/testing_helper.h" line="59" column="27" bodyfile="include/costmap_2d/testing_helper.h" bodystart="59" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="testing__helper_8h_1a44d779d80cd1879d61ab1e32e179a806" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addStaticLayer</definition>
        <argsstring>(costmap_2d::LayeredCostmap &amp;layers, tf2_ros::Buffer &amp;tf)</argsstring>
        <name>addStaticLayer</name>
        <param>
          <type><ref refid="classcostmap__2d_1_1LayeredCostmap" kindref="compound">costmap_2d::LayeredCostmap</ref> &amp;</type>
          <declname>layers</declname>
        </param>
        <param>
          <type>tf2_ros::Buffer &amp;</type>
          <declname>tf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/testing_helper.h" line="52" column="6" bodyfile="include/costmap_2d/testing_helper.h" bodystart="52" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int countValues</definition>
        <argsstring>(costmap_2d::Costmap2D &amp;costmap, unsigned char value, bool equal=true)</argsstring>
        <name>countValues</name>
        <param>
          <type><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound">costmap_2d::Costmap2D</ref> &amp;</type>
          <declname>costmap</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>equal</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/testing_helper.h" line="37" column="14" bodyfile="include/costmap_2d/testing_helper.h" bodystart="37" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="testing__helper_8h_1a80945e4c9ec06fccdb5342cacfea6e3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const double</type>
        <definition>const double MAX_Z</definition>
        <argsstring>(1.0)</argsstring>
        <name>MAX_Z</name>
        <param>
          <type>1.</type>
          <declname>0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/testing_helper.h" line="12" column="14" declfile="include/costmap_2d/testing_helper.h" declline="12" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="testing__helper_8h_1ab67d48c3e97782150aac66598f768972" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char printableCost</definition>
        <argsstring>(unsigned char cost)</argsstring>
        <name>printableCost</name>
        <param>
          <type>unsigned char</type>
          <declname>cost</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/testing_helper.h" line="14" column="6" bodyfile="include/costmap_2d/testing_helper.h" bodystart="14" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="testing__helper_8h_1a31015063213528e542a953d8470fc6b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void printMap</definition>
        <argsstring>(costmap_2d::Costmap2D &amp;costmap)</argsstring>
        <name>printMap</name>
        <param>
          <type><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound">costmap_2d::Costmap2D</ref> &amp;</type>
          <declname>costmap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/testing_helper.h" line="26" column="6" bodyfile="include/costmap_2d/testing_helper.h" bodystart="26" bodyend="35"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>COSTMAP_2D_TESTING_HELPER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COSTMAP_2D_TESTING_HELPER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;<ref refid="cost__values_8h" kindref="compound">costmap_2d/cost_values.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;<ref refid="costmap__2d_8h" kindref="compound">costmap_2d/costmap_2d.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="static__layer_8h" kindref="compound">costmap_2d/static_layer.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="obstacle__layer_8h" kindref="compound">costmap_2d/obstacle_layer.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="inflation__layer_8h" kindref="compound">costmap_2d/inflation_layer.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sensor_msgs/point_cloud2_iterator.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="testing__helper_8h_1a80945e4c9ec06fccdb5342cacfea6e3d" kindref="member">MAX_Z</ref>(1.0);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="testing__helper_8h_1ab67d48c3e97782150aac66598f768972" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="testing__helper_8h_1ab67d48c3e97782150aac66598f768972" kindref="member">printableCost</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cost)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(cost)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacecostmap__2d_1ae61ae84ebebea32544148f295779c4ef" kindref="member">costmap_2d::NO_INFORMATION</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacecostmap__2d_1aab110f187082d88d103ee84c8e420872" kindref="member">costmap_2d::LETHAL_OBSTACLE</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;L&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacecostmap__2d_1a5d3c464519e4135a8f54c9aea7a51d2b" kindref="member">costmap_2d::INSCRIBED_INFLATED_OBSTACLE</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacecostmap__2d_1aa367750132c78d35f962c9130c1a572c" kindref="member">costmap_2d::FREE_SPACE</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>+<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>(10<sp/>*<sp/>cost<sp/>/<sp/>255);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="testing__helper_8h_1a31015063213528e542a953d8470fc6b5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="testing__helper_8h_1a31015063213528e542a953d8470fc6b5" kindref="member">printMap</ref>(<ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound">costmap_2d::Costmap2D</ref>&amp;<sp/>costmap)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;map:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>costmap.<ref refid="classcostmap__2d_1_1Costmap2D_1a702f4ed109f94c8513500cf97ff066a4" kindref="member">getSizeInCellsY</ref>();<sp/>i++){</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>costmap.<ref refid="classcostmap__2d_1_1Costmap2D_1a615a4186649d8970111f8a356906b320" kindref="member">getSizeInCellsX</ref>();<sp/>j++){</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%4d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(costmap.<ref refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" kindref="member">getCost</ref>(j,<sp/>i)));</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" kindref="member">countValues</ref>(<ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound">costmap_2d::Costmap2D</ref>&amp;<sp/>costmap,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>equal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>costmap.<ref refid="classcostmap__2d_1_1Costmap2D_1a702f4ed109f94c8513500cf97ff066a4" kindref="member">getSizeInCellsY</ref>();<sp/>i++){</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>costmap.<ref refid="classcostmap__2d_1_1Costmap2D_1a615a4186649d8970111f8a356906b320" kindref="member">getSizeInCellsX</ref>();<sp/>j++){</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>costmap.<ref refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" kindref="member">getCost</ref>(j,<sp/>i);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((equal<sp/>&amp;&amp;<sp/>c<sp/>==<sp/>value)<sp/>||<sp/>(!equal<sp/>&amp;&amp;<sp/>c<sp/>!=<sp/>value))</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count+=1;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="testing__helper_8h_1a44d779d80cd1879d61ab1e32e179a806" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="testing__helper_8h_1a44d779d80cd1879d61ab1e32e179a806" kindref="member">addStaticLayer</ref>(<ref refid="classcostmap__2d_1_1LayeredCostmap" kindref="compound">costmap_2d::LayeredCostmap</ref>&amp;<sp/>layers,<sp/>tf2_ros::Buffer&amp;<sp/>tf)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1StaticLayer" kindref="compound">costmap_2d::StaticLayer</ref>*<sp/>slayer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcostmap__2d_1_1StaticLayer" kindref="compound">costmap_2d::StaticLayer</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1a8afdb4c9795e2383bd5b66b89c748a6b" kindref="member">addPlugin</ref>(boost::shared_ptr&lt;costmap_2d::Layer&gt;(slayer));</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>slayer-&gt;<ref refid="classcostmap__2d_1_1Layer_1af6c7a09667d7cc23e207e0121e60ba4b" kindref="member">initialize</ref>(&amp;layers,<sp/></highlight><highlight class="stringliteral">&quot;static&quot;</highlight><highlight class="normal">,<sp/>&amp;tf);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="testing__helper_8h_1afa235ecd500d751f54fd5cf8f32c550d" refkind="member"><highlight class="normal"><ref refid="classcostmap__2d_1_1ObstacleLayer" kindref="compound">costmap_2d::ObstacleLayer</ref>*<sp/><ref refid="testing__helper_8h_1afa235ecd500d751f54fd5cf8f32c550d" kindref="member">addObstacleLayer</ref>(<ref refid="classcostmap__2d_1_1LayeredCostmap" kindref="compound">costmap_2d::LayeredCostmap</ref>&amp;<sp/>layers,<sp/>tf2_ros::Buffer&amp;<sp/>tf)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1ObstacleLayer" kindref="compound">costmap_2d::ObstacleLayer</ref>*<sp/>olayer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcostmap__2d_1_1ObstacleLayer" kindref="compound">costmap_2d::ObstacleLayer</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>olayer-&gt;<ref refid="classcostmap__2d_1_1Layer_1af6c7a09667d7cc23e207e0121e60ba4b" kindref="member">initialize</ref>(&amp;layers,<sp/></highlight><highlight class="stringliteral">&quot;obstacles&quot;</highlight><highlight class="normal">,<sp/>&amp;tf);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1a8afdb4c9795e2383bd5b66b89c748a6b" kindref="member">addPlugin</ref>(boost::shared_ptr&lt;costmap_2d::Layer&gt;(olayer));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>olayer;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="testing__helper_8h_1a043c2232e047ce2a6c03a493e5e31ee9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="testing__helper_8h_1a043c2232e047ce2a6c03a493e5e31ee9" kindref="member">addObservation</ref>(<ref refid="classcostmap__2d_1_1ObstacleLayer" kindref="compound">costmap_2d::ObstacleLayer</ref>*<sp/>olayer,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>0.0,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ox<sp/>=<sp/>0.0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>oy<sp/>=<sp/>0.0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>oz<sp/>=<sp/><ref refid="testing__helper_8h_1a80945e4c9ec06fccdb5342cacfea6e3d" kindref="member">MAX_Z</ref>){</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>sensor_msgs::PointCloud2<sp/>cloud;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>sensor_msgs::PointCloud2Modifier<sp/>modifier(cloud);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>modifier.setPointCloud2FieldsByString(1,<sp/></highlight><highlight class="stringliteral">&quot;xyz&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>modifier.resize(1);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>sensor_msgs::PointCloud2Iterator&lt;float&gt;<sp/>iter_x(cloud,<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>sensor_msgs::PointCloud2Iterator&lt;float&gt;<sp/>iter_y(cloud,<sp/></highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>sensor_msgs::PointCloud2Iterator&lt;float&gt;<sp/>iter_z(cloud,<sp/></highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>*iter_x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>*iter_y<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>*iter_z<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>geometry_msgs::Point<sp/>p;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>p.x<sp/>=<sp/>ox;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>p.y<sp/>=<sp/>oy;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>p.z<sp/>=<sp/>oz;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1Observation" kindref="compound">costmap_2d::Observation</ref><sp/>obs(p,<sp/>cloud,<sp/>100.0,<sp/>100.0);<sp/><sp/></highlight><highlight class="comment">//<sp/>obstacle<sp/>range<sp/>=<sp/>raytrace<sp/>range<sp/>=<sp/>100.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>olayer-&gt;<ref refid="classcostmap__2d_1_1ObstacleLayer_1ac835aba4f43e4c8a2a8ed66c97899b5f" kindref="member">addStaticObservation</ref>(obs,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="testing__helper_8h_1aa81f91d17d5a8d5687fe6f66e3227165" refkind="member"><highlight class="normal"><ref refid="classcostmap__2d_1_1InflationLayer" kindref="compound">costmap_2d::InflationLayer</ref>*<sp/><ref refid="testing__helper_8h_1aa81f91d17d5a8d5687fe6f66e3227165" kindref="member">addInflationLayer</ref>(<ref refid="classcostmap__2d_1_1LayeredCostmap" kindref="compound">costmap_2d::LayeredCostmap</ref>&amp;<sp/>layers,<sp/>tf2_ros::Buffer&amp;<sp/>tf)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1InflationLayer" kindref="compound">costmap_2d::InflationLayer</ref>*<sp/>ilayer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcostmap__2d_1_1InflationLayer" kindref="compound">costmap_2d::InflationLayer</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>ilayer-&gt;<ref refid="classcostmap__2d_1_1Layer_1af6c7a09667d7cc23e207e0121e60ba4b" kindref="member">initialize</ref>(&amp;layers,<sp/></highlight><highlight class="stringliteral">&quot;inflation&quot;</highlight><highlight class="normal">,<sp/>&amp;tf);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>boost::shared_ptr&lt;costmap_2d::Layer&gt;<sp/>ipointer(ilayer);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1a8afdb4c9795e2383bd5b66b89c748a6b" kindref="member">addPlugin</ref>(ipointer);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ilayer;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>COSTMAP_2D_TESTING_HELPER_H</highlight></codeline>
    </programlisting>
    <location file="include/costmap_2d/testing_helper.h"/>
  </compounddef>
</doxygen>
