<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="costmap__tester_8cpp" kind="file" language="C++">
    <compoundname>costmap_tester.cpp</compoundname>
    <includes local="no">gtest/gtest.h</includes>
    <includes local="no">ros/ros.h</includes>
    <includes refid="costmap__2d__ros_8h" local="no">costmap_2d/costmap_2d_ros.h</includes>
    <includes refid="cost__values_8h" local="no">costmap_2d/cost_values.h</includes>
    <includes local="no">tf2_ros/transform_listener.h</includes>
    <incdepgraph>
      <node id="26">
        <label>tf2/LinearMath/Transform.h</label>
      </node>
      <node id="1">
        <label>costmap_tester.cpp</label>
        <link refid="costmap__tester_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>vector</label>
        <link refid="cpp/header/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="5">
        <label>costmap_2d/layered_costmap.h</label>
        <link refid="layered__costmap_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>costmap_2d/costmap_2d.h</label>
        <link refid="costmap__2d_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>costmap_2d/cost_values.h</label>
        <link refid="cost__values_8h"/>
      </node>
      <node id="10">
        <label>queue</label>
        <link refid="cpp/header/queue" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="11">
        <label>geometry_msgs/Point.h</label>
      </node>
      <node id="12">
        <label>boost/thread.hpp</label>
      </node>
      <node id="4">
        <label>costmap_2d/costmap_2d_ros.h</label>
        <link refid="costmap__2d__ros_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>dynamic_reconfigure/server.h</label>
      </node>
      <node id="18">
        <label>costmap_2d/Costmap2DConfig.h</label>
      </node>
      <node id="17">
        <label>map_msgs/OccupancyGridUpdate.h</label>
      </node>
      <node id="22">
        <label>geometry_msgs/Point32.h</label>
      </node>
      <node id="23">
        <label>geometry_msgs/PoseStamped.h</label>
      </node>
      <node id="20">
        <label>geometry_msgs/Polygon.h</label>
      </node>
      <node id="2">
        <label>gtest/gtest.h</label>
      </node>
      <node id="7">
        <label>costmap_2d/layer.h</label>
        <link refid="layer_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ros/ros.h</label>
      </node>
      <node id="19">
        <label>costmap_2d/footprint.h</label>
        <link refid="footprint_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>geometry_msgs/PolygonStamped.h</label>
      </node>
      <node id="15">
        <label>costmap_2d/costmap_2d_publisher.h</label>
        <link refid="costmap__2d__publisher_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>string</label>
        <link refid="cpp/header/string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="27">
        <label>tf2_ros/transform_listener.h</label>
      </node>
      <node id="16">
        <label>nav_msgs/OccupancyGrid.h</label>
      </node>
      <node id="14">
        <label>tf2_ros/buffer.h</label>
      </node>
      <node id="25">
        <label>pluginlib/class_loader.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classcostmap__2d_1_1CostmapTester" prot="public">costmap_2d::CostmapTester</innerclass>
    <innernamespace refid="namespacecostmap__2d">costmap_2d</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="costmap__tester_8cpp_1aefcbdf7ac9a44085587ea12895d6dfe1" prot="public" static="no" mutable="no">
        <type><ref refid="classcostmap__2d_1_1CostmapTester" kindref="compound">costmap_2d::CostmapTester</ref> *</type>
        <definition>costmap_2d::CostmapTester* map_tester</definition>
        <argsstring></argsstring>
        <name>map_tester</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/costmap_tester.cpp" line="116" column="27" bodyfile="test/costmap_tester.cpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="costmap__tester_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/costmap_tester.cpp" line="128" column="5" bodyfile="test/costmap_tester.cpp" bodystart="128" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="costmap__tester_8cpp_1ab6234649e9137a2ece384ae5e9ea9263" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(CostmapTester, checkConsistentCosts)</argsstring>
        <name>TEST</name>
        <param>
          <type>CostmapTester</type>
        </param>
        <param>
          <type>checkConsistentCosts</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/costmap_tester.cpp" line="118" column="1" bodyfile="test/costmap_tester.cpp" bodystart="118" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="costmap__tester_8cpp_1afa085d1c70dc9415a41cf3bc99344a6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testCallback</definition>
        <argsstring>(const ros::TimerEvent &amp;e)</argsstring>
        <name>testCallback</name>
        <param>
          <type>const ros::TimerEvent &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/costmap_tester.cpp" line="122" column="6" bodyfile="test/costmap_tester.cpp" bodystart="122" bodyend="126"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>Software<sp/>License<sp/>Agreement<sp/>(BSD<sp/>License)</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/><sp/>Copyright<sp/>(c)<sp/>2009,<sp/>Willow<sp/>Garage,<sp/>Inc.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/><sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/><sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/><sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Willow<sp/>Garage,<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*<sp/><sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="24"><highlight class="comment">*<sp/><sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS</highlight></codeline>
<codeline lineno="25"><highlight class="comment">*<sp/><sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="26"><highlight class="comment">*<sp/><sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*<sp/><sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*<sp/><sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/><sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER</highlight></codeline>
<codeline lineno="30"><highlight class="comment">*<sp/><sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*<sp/><sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*<sp/><sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="33"><highlight class="comment">*<sp/><sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="34"><highlight class="comment">*</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*<sp/>Author:<sp/>Eitan<sp/>Marder-Eppstein</highlight></codeline>
<codeline lineno="36"><highlight class="comment">*********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/ros.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="costmap__2d__ros_8h" kindref="compound">costmap_2d/costmap_2d_ros.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cost__values_8h" kindref="compound">costmap_2d/cost_values.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tf2_ros/transform_listener.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecostmap__2d" kindref="compound">costmap_2d</ref><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">CostmapTester<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>testing::Test<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcostmap__2d_1_1CostmapTester_1a31208d6f7616ac95272d13344ebbcfb7" kindref="member">CostmapTester</ref>(tf2_ros::Buffer&amp;<sp/>tf);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcostmap__2d_1_1CostmapTester_1a73e0c2048004f4c99a2cc868aed060b3" kindref="member">checkConsistentCosts</ref>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcostmap__2d_1_1CostmapTester_1abaef05f8bb941945e031a4f5c70d9402" kindref="member">compareCellToNeighbors</ref>(<ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound">costmap_2d::Costmap2D</ref>&amp;<sp/>costmap,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcostmap__2d_1_1CostmapTester_1a027acc4743f9e864ac5216ef32bd4a79" kindref="member">compareCells</ref>(<ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound">costmap_2d::Costmap2D</ref>&amp;<sp/>costmap,<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nx,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ny);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcostmap__2d_1_1CostmapTester_1a31ee521924aec71c6adc2334105d2c8e" kindref="member">TestBody</ref>(){}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcostmap__2d_1_1Costmap2DROS" kindref="compound">costmap_2d::Costmap2DROS</ref><sp/><ref refid="classcostmap__2d_1_1CostmapTester_1a8d3e6b690eabab60e8dc7ace7e59e817" kindref="member">costmap_ros_</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><ref refid="classcostmap__2d_1_1CostmapTester_1a31208d6f7616ac95272d13344ebbcfb7" kindref="member">CostmapTester::CostmapTester</ref>(tf2_ros::Buffer&amp;<sp/>tf):<sp/>costmap_ros_(</highlight><highlight class="stringliteral">&quot;test_costmap&quot;</highlight><highlight class="normal">,<sp/>tf){}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CostmapTester::checkConsistentCosts(){</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound">costmap_2d::Costmap2D</ref>*<sp/>costmap<sp/>=<sp/>costmap_ros_.getCostmap();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//get<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>costmap<sp/>contained<sp/>by<sp/>our<sp/>ros<sp/>wrapper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a04cd3558a672159a3ad1b151b1d19661" kindref="member">saveMap</ref>(</highlight><highlight class="stringliteral">&quot;costmap_test.pgm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//loop<sp/>through<sp/>the<sp/>costmap<sp/>and<sp/>check<sp/>for<sp/>any<sp/>unexpected<sp/>drop-offs<sp/>in<sp/>costs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a615a4186649d8970111f8a356906b320" kindref="member">getSizeInCellsX</ref>();<sp/>++i){</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a702f4ed109f94c8513500cf97ff066a4" kindref="member">getSizeInCellsY</ref>();<sp/>++j){</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compareCellToNeighbors(*costmap,<sp/>i,<sp/>j);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CostmapTester::compareCellToNeighbors(<ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound">costmap_2d::Costmap2D</ref>&amp;<sp/>costmap,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y){</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//we&apos;ll<sp/>compare<sp/>the<sp/>cost<sp/>of<sp/>this<sp/>cell<sp/>with<sp/>that<sp/>of<sp/>its<sp/>eight<sp/>neighbors<sp/>to<sp/>see<sp/>if<sp/>they&apos;re<sp/>reasonable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset_x<sp/>=<sp/>-1;<sp/>offset_x<sp/>&lt;=<sp/>1;<sp/>++offset_x){</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset_y<sp/>=<sp/>-1;<sp/>offset_y<sp/>&lt;=<sp/>1;<sp/>++offset_y){</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nx<sp/>=<sp/>x<sp/>+<sp/>offset_x;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ny<sp/>=<sp/>y<sp/>+<sp/>offset_y;</highlight></codeline>
<codeline lineno="80" refid="classcostmap__2d_1_1CostmapTester" refkind="compound"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>the<sp/>neighbor<sp/>cell<sp/>is<sp/>a<sp/>legal<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nx<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>nx<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)costmap.<ref refid="classcostmap__2d_1_1Costmap2D_1a615a4186649d8970111f8a356906b320" kindref="member">getSizeInCellsX</ref>()<sp/>&amp;&amp;<sp/>ny<sp/>&gt;=0<sp/>&amp;&amp;<sp/>ny<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)costmap.<ref refid="classcostmap__2d_1_1Costmap2D_1a702f4ed109f94c8513500cf97ff066a4" kindref="member">getSizeInCellsY</ref>()){</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compareCells(costmap,<sp/>x,<sp/>y,<sp/>nx,<sp/>ny);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//for<sp/>all<sp/>lethal<sp/>and<sp/>inscribed<sp/>costs,<sp/>we&apos;ll<sp/>make<sp/>sure<sp/>that<sp/>their<sp/>neighbors<sp/>have<sp/>the<sp/>cost<sp/>values<sp/>we&apos;d<sp/>expect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CostmapTester::compareCells(<ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound">costmap_2d::Costmap2D</ref>&amp;<sp/>costmap,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nx,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ny){</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cell_distance<sp/>=<sp/><ref refid="cpp/numeric/math/hypot" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">hypot</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(x-nx),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(y-ny));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classcostmap__2d_1_1CostmapTester_1a31208d6f7616ac95272d13344ebbcfb7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cell_cost<sp/>=<sp/>costmap.<ref refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" kindref="member">getCost</ref>(x,<sp/>y);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>neighbor_cost<sp/>=<sp/>costmap.<ref refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" kindref="member">getCost</ref>(nx,<sp/>ny);</highlight></codeline>
<codeline lineno="95" refid="classcostmap__2d_1_1CostmapTester_1a73e0c2048004f4c99a2cc868aed060b3" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cell_cost<sp/>==<sp/><ref refid="namespacecostmap__2d_1aab110f187082d88d103ee84c8e420872" kindref="member">costmap_2d::LETHAL_OBSTACLE</ref>){</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>the<sp/>cell<sp/>is<sp/>a<sp/>lethal<sp/>obstacle,<sp/>then<sp/>we<sp/>know<sp/>that<sp/>all<sp/>its<sp/>neighbors<sp/>should<sp/>have<sp/>equal<sp/>or<sp/>slighlty<sp/>less<sp/>cost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>expected_lowest_cost<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>################costmap.computeCost(cell_distance);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(neighbor_cost<sp/>&gt;=<sp/>expected_lowest_cost<sp/>||<sp/>(cell_distance<sp/>&gt;<sp/>0<sp/></highlight><highlight class="comment">/*costmap.cell_inflation_radius_*/</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>neighbor_cost<sp/>==<sp/><ref refid="namespacecostmap__2d_1aa367750132c78d35f962c9130c1a572c" kindref="member">costmap_2d::FREE_SPACE</ref>));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cell_cost<sp/>==<sp/><ref refid="namespacecostmap__2d_1a5d3c464519e4135a8f54c9aea7a51d2b" kindref="member">costmap_2d::INSCRIBED_INFLATED_OBSTACLE</ref>){</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>furthest<sp/>valid<sp/>distance<sp/>from<sp/>an<sp/>obstacle<sp/>is<sp/>the<sp/>inscribed<sp/>radius<sp/>plus<sp/>the<sp/>cell<sp/>distance<sp/>away</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>furthest_valid_distance<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>################costmap.cell_inscribed_radius_<sp/>+<sp/>cell_distance<sp/>+<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>expected_lowest_cost<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>################costmap.computeCost(furthest_valid_distance);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(neighbor_cost<sp/>&lt;<sp/>expected_lowest_cost){</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;Cell<sp/>cost<sp/>(%d,<sp/>%d):<sp/>%d,<sp/>neighbor<sp/>cost<sp/>(%d,<sp/>%d):<sp/>%d,<sp/>expected<sp/>lowest<sp/>cost:<sp/>%d,<sp/>cell<sp/>distance:<sp/>%.2f,<sp/>furthest<sp/>valid<sp/>distance:<sp/>%.2f&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x,<sp/>y,<sp/>cell_cost,<sp/>nx,<sp/>ny,<sp/>neighbor_cost,<sp/>expected_lowest_cost,<sp/>cell_distance,<sp/>furthest_valid_distance);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;Cell:<sp/>(%d,<sp/>%d),<sp/>Neighbor:<sp/>(%d,<sp/>%d)&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>nx,<sp/>ny);</highlight></codeline>
<codeline lineno="109" refid="classcostmap__2d_1_1CostmapTester_1abaef05f8bb941945e031a4f5c70d9402" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>costmap.<ref refid="classcostmap__2d_1_1Costmap2D_1a04cd3558a672159a3ad1b151b1d19661" kindref="member">saveMap</ref>(</highlight><highlight class="stringliteral">&quot;failing_costmap.pgm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(neighbor_cost<sp/>&gt;=<sp/>expected_lowest_cost<sp/>||<sp/>(furthest_valid_distance<sp/>&gt;<sp/>0</highlight><highlight class="comment">/*<sp/>costmap.cell_inflation_radius_<sp/>*/</highlight><highlight class="normal">&amp;&amp;<sp/>neighbor_cost<sp/>==<sp/><ref refid="namespacecostmap__2d_1aa367750132c78d35f962c9130c1a572c" kindref="member">costmap_2d::FREE_SPACE</ref>));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal">};</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="costmap__tester_8cpp_1aefcbdf7ac9a44085587ea12895d6dfe1" refkind="member"><highlight class="normal"><ref refid="classcostmap__2d_1_1CostmapTester" kindref="compound">costmap_2d::CostmapTester</ref>*<sp/><ref refid="costmap__tester_8cpp_1aefcbdf7ac9a44085587ea12895d6dfe1" kindref="member">map_tester</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="costmap__tester_8cpp_1ab6234649e9137a2ece384ae5e9ea9263" refkind="member"><highlight class="normal"><ref refid="costmap__tester_8cpp_1ab6234649e9137a2ece384ae5e9ea9263" kindref="member">TEST</ref>(CostmapTester,<sp/>checkConsistentCosts){</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><ref refid="costmap__tester_8cpp_1aefcbdf7ac9a44085587ea12895d6dfe1" kindref="member">map_tester</ref>-&gt;<ref refid="classcostmap__2d_1_1CostmapTester_1a73e0c2048004f4c99a2cc868aed060b3" kindref="member">checkConsistentCosts</ref>();</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="costmap__tester_8cpp_1afa085d1c70dc9415a41cf3bc99344a6d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="costmap__tester_8cpp_1afa085d1c70dc9415a41cf3bc99344a6d" kindref="member">testCallback</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ros::TimerEvent&amp;<sp/>e){</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_result<sp/>=<sp/>RUN_ALL_TESTS();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;gtest<sp/>return<sp/>value:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>test_result);</highlight></codeline>
<codeline lineno="125" refid="classcostmap__2d_1_1CostmapTester_1a8d3e6b690eabab60e8dc7ace7e59e817" refkind="member"><highlight class="normal"><sp/><sp/>ros::shutdown();</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="costmap__tester_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="costmap__tester_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv){</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>ros::init(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;costmap_tester_node&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>testing::InitGoogleTest(&amp;argc,<sp/>argv);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>ros::NodeHandle<sp/>n;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>ros::NodeHandle<sp/>private_nh(</highlight><highlight class="stringliteral">&quot;~&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>tf2_ros::Buffer<sp/>tf(ros::Duration(10));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>tf2_ros::TransformListener<sp/>tfl(tf);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><ref refid="costmap__tester_8cpp_1aefcbdf7ac9a44085587ea12895d6dfe1" kindref="member">map_tester</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcostmap__2d_1_1CostmapTester" kindref="compound">costmap_2d::CostmapTester</ref>(tf);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wait_time;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>private_nh.param(</highlight><highlight class="stringliteral">&quot;wait_time&quot;</highlight><highlight class="normal">,<sp/>wait_time,<sp/>30.0);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>ros::Timer<sp/>timer<sp/>=<sp/>n.createTimer(ros::Duration(wait_time),<sp/><ref refid="costmap__tester_8cpp_1afa085d1c70dc9415a41cf3bc99344a6d" kindref="member">testCallback</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>ros::spin();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="test/costmap_tester.cpp"/>
  </compounddef>
</doxygen>
