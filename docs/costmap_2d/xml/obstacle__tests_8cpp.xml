<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="obstacle__tests_8cpp" kind="file" language="C++">
    <compoundname>obstacle_tests.cpp</compoundname>
    <includes refid="costmap__2d_8h" local="no">costmap_2d/costmap_2d.h</includes>
    <includes refid="layered__costmap_8h" local="no">costmap_2d/layered_costmap.h</includes>
    <includes refid="observation__buffer_8h" local="no">costmap_2d/observation_buffer.h</includes>
    <includes refid="testing__helper_8h" local="no">costmap_2d/testing_helper.h</includes>
    <includes local="no">set</includes>
    <includes local="no">gtest/gtest.h</includes>
    <incdepgraph>
      <node id="16">
        <label>sensor_msgs/PointCloud2.h</label>
      </node>
      <node id="25">
        <label>message_filters/subscriber.h</label>
      </node>
      <node id="13">
        <label>list</label>
        <link refid="cpp/header/list" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="3">
        <label>vector</label>
        <link refid="cpp/header/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="7">
        <label>costmap_2d/layered_costmap.h</label>
        <link refid="layered__costmap_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>costmap_2d/costmap_2d.h</label>
        <link refid="costmap__2d_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>costmap_2d/cost_values.h</label>
        <link refid="cost__values_8h"/>
      </node>
      <node id="4">
        <label>queue</label>
        <link refid="cpp/header/queue" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="17">
        <label>costmap_2d/testing_helper.h</label>
        <link refid="testing__helper_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>sensor_msgs/PointCloud.h</label>
      </node>
      <node id="32">
        <label>costmap_2d/ObstaclePluginConfig.h</label>
      </node>
      <node id="5">
        <label>geometry_msgs/Point.h</label>
      </node>
      <node id="31">
        <label>tf2_ros/message_filter.h</label>
      </node>
      <node id="6">
        <label>boost/thread.hpp</label>
      </node>
      <node id="21">
        <label>costmap_2d/GenericPluginConfig.h</label>
      </node>
      <node id="12">
        <label>costmap_2d/observation_buffer.h</label>
        <link refid="observation__buffer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ros/time.h</label>
      </node>
      <node id="37">
        <label>costmap_2d/inflation_layer.h</label>
        <link refid="inflation__layer_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>obstacle_tests.cpp</label>
        <link refid="obstacle__tests_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>dynamic_reconfigure/server.h</label>
      </node>
      <node id="24">
        <label>map_msgs/OccupancyGridUpdate.h</label>
      </node>
      <node id="36">
        <label>geometry_msgs/Point32.h</label>
      </node>
      <node id="34">
        <label>geometry_msgs/Polygon.h</label>
      </node>
      <node id="41">
        <label>gtest/gtest.h</label>
      </node>
      <node id="18">
        <label>costmap_2d/static_layer.h</label>
        <link refid="static__layer_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>laser_geometry/laser_geometry.h</label>
      </node>
      <node id="9">
        <label>costmap_2d/layer.h</label>
        <link refid="layer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ros/ros.h</label>
      </node>
      <node id="20">
        <label>costmap_2d/costmap_layer.h</label>
        <link refid="costmap__layer_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>costmap_2d/footprint.h</label>
        <link refid="footprint_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>costmap_2d/obstacle_layer.h</label>
        <link refid="obstacle__layer_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>geometry_msgs/PolygonStamped.h</label>
      </node>
      <node id="38">
        <label>costmap_2d/InflationPluginConfig.h</label>
      </node>
      <node id="30">
        <label>sensor_msgs/point_cloud_conversion.h</label>
      </node>
      <node id="10">
        <label>string</label>
        <link refid="cpp/header/string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="15">
        <label>costmap_2d/observation.h</label>
        <link refid="observation_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>nav_msgs/OccupancyGrid.h</label>
      </node>
      <node id="27">
        <label>sensor_msgs/LaserScan.h</label>
      </node>
      <node id="40">
        <label>set</label>
        <link refid="cpp/header/set" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="39">
        <label>sensor_msgs/point_cloud2_iterator.h</label>
      </node>
      <node id="11">
        <label>tf2_ros/buffer.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="obstacle__tests_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/obstacle_tests.cpp" line="247" column="5" bodyfile="test/obstacle_tests.cpp" bodystart="247" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="obstacle__tests_8cpp_1a1d63bc48ed207889be83298c6e0e46f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(costmap, testDynamicObstacles)</argsstring>
        <name>TEST</name>
        <param>
          <type>costmap</type>
        </param>
        <param>
          <type>testDynamicObstacles</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Verify that dynamic obstacles are added </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/obstacle_tests.cpp" line="203" column="1" bodyfile="test/obstacle_tests.cpp" bodystart="203" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="obstacle__tests_8cpp_1a21809284d087f0beef9c2ad655520816" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(costmap, testMultipleAdditions)</argsstring>
        <name>TEST</name>
        <param>
          <type>costmap</type>
        </param>
        <param>
          <type>testMultipleAdditions</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Verify that if we add a point that is already a static obstacle we do not end up with a new ostacle </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/obstacle_tests.cpp" line="229" column="1" bodyfile="test/obstacle_tests.cpp" bodystart="229" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="obstacle__tests_8cpp_1ad8fe201867d3b317211acab7d5e136bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(costmap, testRaytracing)</argsstring>
        <name>TEST</name>
        <param>
          <type>costmap</type>
        </param>
        <param>
          <type>testRaytracing</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test for ray tracing free space </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/obstacle_tests.cpp" line="73" column="1" bodyfile="test/obstacle_tests.cpp" bodystart="73" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="obstacle__tests_8cpp_1a9a60e8b8b1e2774d5d94b0b402ea9d34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(costmap, testRaytracing2)</argsstring>
        <name>TEST</name>
        <param>
          <type>costmap</type>
        </param>
        <param>
          <type>testRaytracing2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test for ray tracing free space </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/obstacle_tests.cpp" line="96" column="1" bodyfile="test/obstacle_tests.cpp" bodystart="96" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="obstacle__tests_8cpp_1a4661fcb3128774239d9c5e0409c0735a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(costmap, testWaveInterference)</argsstring>
        <name>TEST</name>
        <param>
          <type>costmap</type>
        </param>
        <param>
          <type>testWaveInterference</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test for wave interference </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/obstacle_tests.cpp" line="152" column="1" bodyfile="test/obstacle_tests.cpp" bodystart="152" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="obstacle__tests_8cpp_1ad5d425c6c31665d69ec97adaf1cc3981" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(costmap, testZThreshold)</argsstring>
        <name>TEST</name>
        <param>
          <type>costmap</type>
        </param>
        <param>
          <type>testZThreshold</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make sure we ignore points outside of our z threshold </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/obstacle_tests.cpp" line="181" column="1" bodyfile="test/obstacle_tests.cpp" bodystart="181" bodyend="197"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2013,<sp/>Willow<sp/>Garage,<sp/>Inc.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>Willow<sp/>Garage,<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="costmap__2d_8h" kindref="compound">costmap_2d/costmap_2d.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="layered__costmap_8h" kindref="compound">costmap_2d/layered_costmap.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="observation__buffer_8h" kindref="compound">costmap_2d/observation_buffer.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="testing__helper_8h" kindref="compound">costmap_2d/testing_helper.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cpp/header/set" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">set</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecostmap__2d" kindref="compound">costmap_2d</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>For<sp/>reference,<sp/>the<sp/>static<sp/>map<sp/>looks<sp/>like<sp/>this:</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/>254<sp/>254<sp/>254</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/>254<sp/>254<sp/>254</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/>254<sp/>254<sp/>254<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/>254<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/>254<sp/>254<sp/>254</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/>254<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/>254<sp/>254<sp/>254</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/>254<sp/>254<sp/>254</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/><sp/><sp/>upper<sp/>left<sp/>is<sp/>0,0,<sp/>lower<sp/>right<sp/>is<sp/>9,9</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="obstacle__tests_8cpp_1ad8fe201867d3b317211acab7d5e136bb" refkind="member"><highlight class="normal"><ref refid="obstacle__tests_8cpp_1ad8fe201867d3b317211acab7d5e136bb" kindref="member">TEST</ref>(costmap,<sp/>testRaytracing){</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>tf2_ros::Buffer<sp/>tf;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1LayeredCostmap" kindref="compound">LayeredCostmap</ref><sp/>layers(</highlight><highlight class="stringliteral">&quot;frame&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>rolling<sp/>window,<sp/>not<sp/>tracking<sp/>unknown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a44d779d80cd1879d61ab1e32e179a806" kindref="member">addStaticLayer</ref>(layers,<sp/>tf);<sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>adds<sp/>the<sp/>static<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1ObstacleLayer" kindref="compound">ObstacleLayer</ref>*<sp/>olayer<sp/>=<sp/><ref refid="testing__helper_8h_1afa235ecd500d751f54fd5cf8f32c550d" kindref="member">addObstacleLayer</ref>(layers,<sp/>tf);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>point<sp/>at<sp/>0,<sp/>0,<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a043c2232e047ce2a6c03a493e5e31ee9" kindref="member">addObservation</ref>(olayer,<sp/>0.0,<sp/>0.0,<sp/><ref refid="testing__helper_8h_1a80945e4c9ec06fccdb5342cacfea6e3d" kindref="member">MAX_Z</ref>/2,<sp/>0,<sp/>0,<sp/><ref refid="testing__helper_8h_1a80945e4c9ec06fccdb5342cacfea6e3d" kindref="member">MAX_Z</ref>/2);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>actually<sp/>puts<sp/>the<sp/>LETHAL<sp/>(254)<sp/>point<sp/>in<sp/>the<sp/>costmap<sp/>at<sp/>(0,0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ab598d6442277ba8299ba3c7b952662d6" kindref="member">updateMap</ref>(0,0,0);<sp/><sp/></highlight><highlight class="comment">//<sp/>0,<sp/>0,<sp/>0<sp/>is<sp/>robot<sp/>pose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printMap(*(layers.getCostmap()));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lethal_count<sp/>=<sp/><ref refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" kindref="member">countValues</ref>(*(layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ae0c5b98322d3f62761418b895e2884b3" kindref="member">getCostmap</ref>()),<sp/><ref refid="namespacecostmap__2d_1aab110f187082d88d103ee84c8e420872" kindref="member">LETHAL_OBSTACLE</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>expect<sp/>just<sp/>one<sp/>obstacle<sp/>to<sp/>be<sp/>added<sp/>(20<sp/>in<sp/>static<sp/>map)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>ASSERT_EQ(lethal_count,<sp/>21);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="obstacle__tests_8cpp_1a9a60e8b8b1e2774d5d94b0b402ea9d34" refkind="member"><highlight class="normal"><ref refid="obstacle__tests_8cpp_1ad8fe201867d3b317211acab7d5e136bb" kindref="member">TEST</ref>(costmap,<sp/>testRaytracing2){</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>tf2_ros::Buffer<sp/>tf;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1LayeredCostmap" kindref="compound">LayeredCostmap</ref><sp/>layers(</highlight><highlight class="stringliteral">&quot;frame&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a44d779d80cd1879d61ab1e32e179a806" kindref="member">addStaticLayer</ref>(layers,<sp/>tf);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1ObstacleLayer" kindref="compound">ObstacleLayer</ref>*<sp/>olayer<sp/>=<sp/><ref refid="testing__helper_8h_1afa235ecd500d751f54fd5cf8f32c550d" kindref="member">addObstacleLayer</ref>(layers,<sp/>tf);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//If<sp/>we<sp/>print<sp/>map<sp/>now,<sp/>it<sp/>is<sp/>10x10<sp/>all<sp/>value<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printMap(*(layers.getCostmap()));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>will<sp/>fill<sp/>in<sp/>the<sp/>costmap<sp/>with<sp/>the<sp/>static<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ab598d6442277ba8299ba3c7b952662d6" kindref="member">updateMap</ref>(0,0,0);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//If<sp/>we<sp/>print<sp/>the<sp/>map<sp/>now,<sp/>we<sp/>get<sp/>the<sp/>static<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printMap(*(layers.getCostmap()));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Static<sp/>map<sp/>has<sp/>20<sp/>LETHAL<sp/>cells<sp/>(see<sp/>diagram<sp/>above)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>obs_before<sp/>=<sp/><ref refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" kindref="member">countValues</ref>(*(layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ae0c5b98322d3f62761418b895e2884b3" kindref="member">getCostmap</ref>()),<sp/><ref refid="namespacecostmap__2d_1aab110f187082d88d103ee84c8e420872" kindref="member">LETHAL_OBSTACLE</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>ASSERT_EQ(obs_before,<sp/>20);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>sensor<sp/>origin<sp/>will<sp/>be<sp/>&lt;0,0&gt;.<sp/>So<sp/>if<sp/>we<sp/>add<sp/>an<sp/>obstacle<sp/>at<sp/>9,9,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>would<sp/>expect<sp/>cells<sp/>&lt;0,<sp/>0&gt;<sp/>thru<sp/>&lt;8,<sp/>8&gt;<sp/>to<sp/>be<sp/>traced<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>however<sp/>the<sp/>static<sp/>map<sp/>is<sp/>not<sp/>cleared<sp/>by<sp/>obstacle<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a043c2232e047ce2a6c03a493e5e31ee9" kindref="member">addObservation</ref>(olayer,<sp/>9.5,<sp/>9.5,<sp/><ref refid="testing__helper_8h_1a80945e4c9ec06fccdb5342cacfea6e3d" kindref="member">MAX_Z</ref>/2,<sp/>0.5,<sp/>0.5,<sp/><ref refid="testing__helper_8h_1a80945e4c9ec06fccdb5342cacfea6e3d" kindref="member">MAX_Z</ref>/2);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ab598d6442277ba8299ba3c7b952662d6" kindref="member">updateMap</ref>(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>print<sp/>map<sp/>now,<sp/>we<sp/>have<sp/>static<sp/>map<sp/>+<sp/>&lt;9,9&gt;<sp/>is<sp/>LETHAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printMap(*(layers.getCostmap()));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>obs_after<sp/>=<sp/><ref refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" kindref="member">countValues</ref>(*(layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ae0c5b98322d3f62761418b895e2884b3" kindref="member">getCostmap</ref>()),<sp/><ref refid="namespacecostmap__2d_1aab110f187082d88d103ee84c8e420872" kindref="member">LETHAL_OBSTACLE</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>from<sp/>previous<sp/>test:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>obstacles<sp/>from<sp/>the<sp/>static<sp/>map<sp/>will<sp/>be<sp/>cleared,<sp/>so<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>net<sp/>change<sp/>is<sp/>+1.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>ASSERT_EQ(obs_after,<sp/>obs_before<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>in<sp/>the<sp/>diagonal,<sp/>&lt;7,7&gt;<sp/>and<sp/>&lt;9,9&gt;<sp/>already<sp/>filled<sp/>in,<sp/>&lt;0,0&gt;<sp/>is<sp/>robot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>olayer-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a702f4ed109f94c8513500cf97ff066a4" kindref="member">getSizeInCellsY</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>olayer-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1ae1703900adbbf1e0d929cec0735a8b0e" kindref="member">setCost</ref>(i,<sp/>i,<sp/><ref refid="namespacecostmap__2d_1aab110f187082d88d103ee84c8e420872" kindref="member">LETHAL_OBSTACLE</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>updateBounds,<sp/>which<sp/>will<sp/>raytrace<sp/>the<sp/>static<sp/>observation<sp/>added</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>above,<sp/>thus<sp/>clearing<sp/>out<sp/>the<sp/>diagonal<sp/>again!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ab598d6442277ba8299ba3c7b952662d6" kindref="member">updateMap</ref>(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Map<sp/>now<sp/>has<sp/>diagonal<sp/>except<sp/>&lt;0,0&gt;<sp/>filled<sp/>with<sp/>LETHAL<sp/>(254)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printMap(*(layers.getCostmap()));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>with_static<sp/>=<sp/><ref refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" kindref="member">countValues</ref>(*(layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ae0c5b98322d3f62761418b895e2884b3" kindref="member">getCostmap</ref>()),<sp/><ref refid="namespacecostmap__2d_1aab110f187082d88d103ee84c8e420872" kindref="member">LETHAL_OBSTACLE</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>thus<sp/>be<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>ASSERT_EQ(with_static,<sp/>obs_after);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>21<sp/>are<sp/>filled,<sp/>79<sp/>should<sp/>be<sp/>free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>ASSERT_EQ(79,<sp/><ref refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" kindref="member">countValues</ref>(*(layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ae0c5b98322d3f62761418b895e2884b3" kindref="member">getCostmap</ref>()),<sp/><ref refid="namespacecostmap__2d_1aa367750132c78d35f962c9130c1a572c" kindref="member">costmap_2d::FREE_SPACE</ref>));</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="obstacle__tests_8cpp_1a4661fcb3128774239d9c5e0409c0735a" refkind="member"><highlight class="normal"><ref refid="obstacle__tests_8cpp_1ad8fe201867d3b317211acab7d5e136bb" kindref="member">TEST</ref>(costmap,<sp/>testWaveInterference){</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>tf2_ros::Buffer<sp/>tf;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>with<sp/>an<sp/>empty<sp/>map,<sp/>no<sp/>rolling<sp/>window,<sp/>tracking<sp/>unknown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1LayeredCostmap" kindref="compound">LayeredCostmap</ref><sp/>layers(</highlight><highlight class="stringliteral">&quot;frame&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1a8f8121ac0c6a2c5f267cf1cc07cfc40b" kindref="member">resizeMap</ref>(10,<sp/>10,<sp/>1,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1ObstacleLayer" kindref="compound">ObstacleLayer</ref>*<sp/>olayer<sp/>=<sp/><ref refid="testing__helper_8h_1afa235ecd500d751f54fd5cf8f32c550d" kindref="member">addObstacleLayer</ref>(layers,<sp/>tf);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>print<sp/>map<sp/>now,<sp/>it<sp/>is<sp/>10x10,<sp/>all<sp/>cells<sp/>are<sp/>255<sp/>(NO_INFORMATION)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printMap(*(layers.getCostmap()));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Lay<sp/>out<sp/>3<sp/>obstacles<sp/>in<sp/>a<sp/>line<sp/>-<sp/>along<sp/>the<sp/>diagonal,<sp/>separated<sp/>by<sp/>a<sp/>cell.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a043c2232e047ce2a6c03a493e5e31ee9" kindref="member">addObservation</ref>(olayer,<sp/>3.0,<sp/>3.0,<sp/><ref refid="testing__helper_8h_1a80945e4c9ec06fccdb5342cacfea6e3d" kindref="member">MAX_Z</ref>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a043c2232e047ce2a6c03a493e5e31ee9" kindref="member">addObservation</ref>(olayer,<sp/>5.0,<sp/>5.0,<sp/><ref refid="testing__helper_8h_1a80945e4c9ec06fccdb5342cacfea6e3d" kindref="member">MAX_Z</ref>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a043c2232e047ce2a6c03a493e5e31ee9" kindref="member">addObservation</ref>(olayer,<sp/>7.0,<sp/>7.0,<sp/><ref refid="testing__helper_8h_1a80945e4c9ec06fccdb5342cacfea6e3d" kindref="member">MAX_Z</ref>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ab598d6442277ba8299ba3c7b952662d6" kindref="member">updateMap</ref>(0,0,0);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound">Costmap2D</ref>*<sp/>costmap<sp/>=<sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ae0c5b98322d3f62761418b895e2884b3" kindref="member">getCostmap</ref>();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>3<sp/>obstacle<sp/>cells<sp/>are<sp/>filled,<sp/>&lt;1,1&gt;,&lt;2,2&gt;,&lt;4,4&gt;<sp/>and<sp/>&lt;6,6&gt;<sp/>are<sp/>now<sp/>free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;0,0&gt;<sp/>is<sp/>footprint<sp/>and<sp/>is<sp/>free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printMap(*costmap);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>ASSERT_EQ(3,<sp/><ref refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" kindref="member">countValues</ref>(*costmap,<sp/><ref refid="namespacecostmap__2d_1aab110f187082d88d103ee84c8e420872" kindref="member">costmap_2d::LETHAL_OBSTACLE</ref>));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>ASSERT_EQ(92,<sp/><ref refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" kindref="member">countValues</ref>(*costmap,<sp/><ref refid="namespacecostmap__2d_1ae61ae84ebebea32544148f295779c4ef" kindref="member">costmap_2d::NO_INFORMATION</ref>));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>ASSERT_EQ(5,<sp/><ref refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" kindref="member">countValues</ref>(*costmap,<sp/><ref refid="namespacecostmap__2d_1aa367750132c78d35f962c9130c1a572c" kindref="member">costmap_2d::FREE_SPACE</ref>));</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="obstacle__tests_8cpp_1ad5d425c6c31665d69ec97adaf1cc3981" refkind="member"><highlight class="normal"><ref refid="obstacle__tests_8cpp_1ad8fe201867d3b317211acab7d5e136bb" kindref="member">TEST</ref>(costmap,<sp/>testZThreshold){</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>tf2_ros::Buffer<sp/>tf;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>with<sp/>an<sp/>empty<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1LayeredCostmap" kindref="compound">LayeredCostmap</ref><sp/>layers(</highlight><highlight class="stringliteral">&quot;frame&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1a8f8121ac0c6a2c5f267cf1cc07cfc40b" kindref="member">resizeMap</ref>(10,<sp/>10,<sp/>1,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1ObstacleLayer" kindref="compound">ObstacleLayer</ref>*<sp/>olayer<sp/>=<sp/><ref refid="testing__helper_8h_1afa235ecd500d751f54fd5cf8f32c550d" kindref="member">addObstacleLayer</ref>(layers,<sp/>tf);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>point<sp/>cloud<sp/>with<sp/>2<sp/>points<sp/>falling<sp/>in<sp/>a<sp/>cell<sp/>with<sp/>a<sp/>non-lethal<sp/>cost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a043c2232e047ce2a6c03a493e5e31ee9" kindref="member">addObservation</ref>(olayer,<sp/>0.0,<sp/>5.0,<sp/>0.4);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a043c2232e047ce2a6c03a493e5e31ee9" kindref="member">addObservation</ref>(olayer,<sp/>1.0,<sp/>5.0,<sp/>2.2);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ab598d6442277ba8299ba3c7b952662d6" kindref="member">updateMap</ref>(0,0,0);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound">Costmap2D</ref>*<sp/>costmap<sp/>=<sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ae0c5b98322d3f62761418b895e2884b3" kindref="member">getCostmap</ref>();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>ASSERT_EQ(<ref refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" kindref="member">countValues</ref>(*costmap,<sp/><ref refid="namespacecostmap__2d_1aab110f187082d88d103ee84c8e420872" kindref="member">costmap_2d::LETHAL_OBSTACLE</ref>),<sp/>1);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="obstacle__tests_8cpp_1a1d63bc48ed207889be83298c6e0e46f7" refkind="member"><highlight class="normal"><ref refid="obstacle__tests_8cpp_1ad8fe201867d3b317211acab7d5e136bb" kindref="member">TEST</ref>(costmap,<sp/>testDynamicObstacles){</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>tf2_ros::Buffer<sp/>tf;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1LayeredCostmap" kindref="compound">LayeredCostmap</ref><sp/>layers(</highlight><highlight class="stringliteral">&quot;frame&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a44d779d80cd1879d61ab1e32e179a806" kindref="member">addStaticLayer</ref>(layers,<sp/>tf);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1ObstacleLayer" kindref="compound">ObstacleLayer</ref>*<sp/>olayer<sp/>=<sp/><ref refid="testing__helper_8h_1afa235ecd500d751f54fd5cf8f32c550d" kindref="member">addObstacleLayer</ref>(layers,<sp/>tf);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>point<sp/>cloud<sp/>and<sp/>verify<sp/>its<sp/>insertion.<sp/>There<sp/>should<sp/>be<sp/>only<sp/>one<sp/>new<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a043c2232e047ce2a6c03a493e5e31ee9" kindref="member">addObservation</ref>(olayer,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a043c2232e047ce2a6c03a493e5e31ee9" kindref="member">addObservation</ref>(olayer,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a043c2232e047ce2a6c03a493e5e31ee9" kindref="member">addObservation</ref>(olayer,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ab598d6442277ba8299ba3c7b952662d6" kindref="member">updateMap</ref>(0,0,0);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound">Costmap2D</ref>*<sp/>costmap<sp/>=<sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ae0c5b98322d3f62761418b895e2884b3" kindref="member">getCostmap</ref>();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>now<sp/>have<sp/>1<sp/>insertion<sp/>and<sp/>no<sp/>deletions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>ASSERT_EQ(<ref refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" kindref="member">countValues</ref>(*costmap,<sp/><ref refid="namespacecostmap__2d_1aab110f187082d88d103ee84c8e420872" kindref="member">costmap_2d::LETHAL_OBSTACLE</ref>),<sp/>21);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Repeating<sp/>the<sp/>call<sp/>-<sp/>we<sp/>should<sp/>see<sp/>no<sp/>insertions<sp/>or<sp/>deletions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>ASSERT_EQ(<ref refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" kindref="member">countValues</ref>(*costmap,<sp/><ref refid="namespacecostmap__2d_1aab110f187082d88d103ee84c8e420872" kindref="member">costmap_2d::LETHAL_OBSTACLE</ref>),<sp/>21);</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="obstacle__tests_8cpp_1a21809284d087f0beef9c2ad655520816" refkind="member"><highlight class="normal"><ref refid="obstacle__tests_8cpp_1ad8fe201867d3b317211acab7d5e136bb" kindref="member">TEST</ref>(costmap,<sp/>testMultipleAdditions){</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>tf2_ros::Buffer<sp/>tf;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1LayeredCostmap" kindref="compound">LayeredCostmap</ref><sp/>layers(</highlight><highlight class="stringliteral">&quot;frame&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a44d779d80cd1879d61ab1e32e179a806" kindref="member">addStaticLayer</ref>(layers,<sp/>tf);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1ObstacleLayer" kindref="compound">ObstacleLayer</ref>*<sp/>olayer<sp/>=<sp/><ref refid="testing__helper_8h_1afa235ecd500d751f54fd5cf8f32c550d" kindref="member">addObstacleLayer</ref>(layers,<sp/>tf);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>point<sp/>cloud<sp/>with<sp/>one<sp/>point<sp/>that<sp/>falls<sp/>within<sp/>an<sp/>existing<sp/>obstacle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><ref refid="testing__helper_8h_1a043c2232e047ce2a6c03a493e5e31ee9" kindref="member">addObservation</ref>(olayer,<sp/>9.5,<sp/>0.0);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ab598d6442277ba8299ba3c7b952662d6" kindref="member">updateMap</ref>(0,0,0);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound">Costmap2D</ref>*<sp/>costmap<sp/>=<sp/>layers.<ref refid="classcostmap__2d_1_1LayeredCostmap_1ae0c5b98322d3f62761418b895e2884b3" kindref="member">getCostmap</ref>();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printMap(*costmap);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>ASSERT_EQ(<ref refid="testing__helper_8h_1af4d497e66d7195f0a4b02ce26603c5c8" kindref="member">countValues</ref>(*costmap,<sp/><ref refid="namespacecostmap__2d_1aab110f187082d88d103ee84c8e420872" kindref="member">costmap_2d::LETHAL_OBSTACLE</ref>),<sp/>20);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="obstacle__tests_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="obstacle__tests_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv){</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>ros::init(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;obstacle_tests&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>testing::InitGoogleTest(&amp;argc,<sp/>argv);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RUN_ALL_TESTS();</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="test/obstacle_tests.cpp"/>
  </compounddef>
</doxygen>
