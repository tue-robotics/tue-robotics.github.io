<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classcostmap__2d_1_1Costmap2D" kind="class" language="C++" prot="public">
    <compoundname>costmap_2d::Costmap2D</compoundname>
    <derivedcompoundref refid="classcostmap__2d_1_1CostmapLayer" prot="public" virt="non-virtual">costmap_2d::CostmapLayer</derivedcompoundref>
    <includes refid="costmap__2d_8h" local="no">costmap_2d.h</includes>
    <innerclass refid="classcostmap__2d_1_1Costmap2D_1_1MarkCell" prot="protected">costmap_2d::Costmap2D::MarkCell</innerclass>
    <innerclass refid="classcostmap__2d_1_1Costmap2D_1_1PolygonOutlineCells" prot="protected">costmap_2d::Costmap2D::PolygonOutlineCells</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classcostmap__2d_1_1Costmap2D_1a723f8f016f2b699e9081c25e5dfdbcf4" prot="public" static="no">
        <type>boost::recursive_mutex</type>
        <definition>typedef boost::recursive_mutex costmap_2d::Costmap2D::mutex_t</definition>
        <argsstring></argsstring>
        <name>mutex_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="338" column="34" bodyfile="include/costmap_2d/costmap_2d.h" bodystart="338" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classcostmap__2d_1_1Costmap2D_1a9f13f59f234edd1db20196987ac18fcd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class CostmapTester</definition>
        <argsstring></argsstring>
        <name>CostmapTester</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="98" column="3" bodyfile="include/costmap_2d/costmap_2d.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcostmap__2d_1_1Costmap2D_1a509ef0191dacd55f6348f789236d904d" prot="private" static="no" mutable="no">
        <type><ref refid="classcostmap__2d_1_1Costmap2D_1a723f8f016f2b699e9081c25e5dfdbcf4" kindref="member">mutex_t</ref> *</type>
        <definition>mutex_t* costmap_2d::Costmap2D::access_</definition>
        <argsstring></argsstring>
        <name>access_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="463" column="11" bodyfile="include/costmap_2d/costmap_2d.h" bodystart="463" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classcostmap__2d_1_1Costmap2D_1a34c8633b0dfec7481300d401d33010c7" prot="protected" static="no" mutable="no">
        <type>unsigned char *</type>
        <definition>unsigned char* costmap_2d::Costmap2D::costmap_</definition>
        <argsstring></argsstring>
        <name>costmap_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="470" column="17" bodyfile="include/costmap_2d/costmap_2d.h" bodystart="470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1Costmap2D_1af0715f46aa3d358da411f0060e0fe8d2" prot="protected" static="no" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char costmap_2d::Costmap2D::default_value_</definition>
        <argsstring></argsstring>
        <name>default_value_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="471" column="17" bodyfile="include/costmap_2d/costmap_2d.h" bodystart="471" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1Costmap2D_1a9005fb139b987665bfa799c631953f00" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double costmap_2d::Costmap2D::origin_x_</definition>
        <argsstring></argsstring>
        <name>origin_x_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="468" column="10" bodyfile="include/costmap_2d/costmap_2d.h" bodystart="468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1Costmap2D_1a53bc8ed50d62760245f879d66c5567db" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double costmap_2d::Costmap2D::origin_y_</definition>
        <argsstring></argsstring>
        <name>origin_y_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="469" column="10" bodyfile="include/costmap_2d/costmap_2d.h" bodystart="469" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1Costmap2D_1a3d74d58b31973def7e407c7300f1115c" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double costmap_2d::Costmap2D::resolution_</definition>
        <argsstring></argsstring>
        <name>resolution_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="467" column="10" bodyfile="include/costmap_2d/costmap_2d.h" bodystart="467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1Costmap2D_1aa71bf88a183222496f17b3a95e852e75" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int costmap_2d::Costmap2D::size_x_</definition>
        <argsstring></argsstring>
        <name>size_x_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="465" column="16" bodyfile="include/costmap_2d/costmap_2d.h" bodystart="465" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1Costmap2D_1ad25df12283aa78c43878e24633381100" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int costmap_2d::Costmap2D::size_y_</definition>
        <argsstring></argsstring>
        <name>size_y_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="466" column="16" bodyfile="include/costmap_2d/costmap_2d.h" bodystart="466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1Costmap2D_1a33545b79aeec7b554ce21a0b1befb212" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* costmap_2d::Costmap2D::timestamps_</definition>
        <argsstring></argsstring>
        <name>timestamps_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="473" column="10" bodyfile="include/costmap_2d/costmap_2d.h" bodystart="473" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1abffbb5c7d49fae947d70c4e6d0fbeae9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int costmap_2d::Costmap2D::cellDistance</definition>
        <argsstring>(double world_dist)</argsstring>
        <name>cellDistance</name>
        <param>
          <type>double</type>
          <declname>world_dist</declname>
        </param>
        <briefdescription>
<para>Given distance in the world... convert it to cells. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>world_dist</parametername>
</parameternamelist>
<parameterdescription>
<para>The world distance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The equivalent cell distance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="335" column="16" bodyfile="src/costmap_2d.cpp" bodystart="191" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1aa3c49f2d63f6edfb7396d1b0c79a4b12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void costmap_2d::Costmap2D::convexFillCells</definition>
        <argsstring>(const std::vector&lt; MapLocation &gt; &amp;polygon, std::vector&lt; MapLocation &gt; &amp;polygon_cells)</argsstring>
        <name>convexFillCells</name>
        <param>
          <type>const <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="structcostmap__2d_1_1MapLocation" kindref="compound">MapLocation</ref> &gt; &amp;</type>
          <declname>polygon</declname>
        </param>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="structcostmap__2d_1_1MapLocation" kindref="compound">MapLocation</ref> &gt; &amp;</type>
          <declname>polygon_cells</declname>
        </param>
        <briefdescription>
<para>Get the map cells that fill a convex polygon. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>polygon</parametername>
</parameternamelist>
<parameterdescription>
<para>The polygon in map coordinates to rasterize </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>polygon_cells</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to the cells that fill the polygon </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="310" column="8" bodyfile="src/costmap_2d.cpp" bodystart="380" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1a8fb9538b17743071ea041b32bcc3b381" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool costmap_2d::Costmap2D::copyCostmapWindow</definition>
        <argsstring>(const Costmap2D &amp;map, double win_origin_x, double win_origin_y, double win_size_x, double win_size_y)</argsstring>
        <name>copyCostmapWindow</name>
        <param>
          <type>const <ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound">Costmap2D</ref> &amp;</type>
          <declname>map</declname>
        </param>
        <param>
          <type>double</type>
          <declname>win_origin_x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>win_origin_y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>win_size_x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>win_size_y</declname>
        </param>
        <briefdescription>
<para>Turn this costmap into a copy of a window of a costmap passed in. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>map</parametername>
</parameternamelist>
<parameterdescription>
<para>The costmap to copy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>win_origin_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x origin (lower left corner) for the window to copy, in meters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>win_origin_y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y origin (lower left corner) for the window to copy, in meters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>win_size_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x size of the window, in meters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>win_size_y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y size of the window, in meters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="133" column="8" bodyfile="src/costmap_2d.cpp" bodystart="108" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1a1ec52799b2b673306902fcfe01285d7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>costmap_2d::Costmap2D::Costmap2D</definition>
        <argsstring>()</argsstring>
        <name>Costmap2D</name>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="139" column="3" bodyfile="src/costmap_2d.cpp" bodystart="179" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1a430191c66018db89e5a65fb823db35d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>costmap_2d::Costmap2D::Costmap2D</definition>
        <argsstring>(const Costmap2D &amp;map)</argsstring>
        <name>Costmap2D</name>
        <param>
          <type>const <ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound">Costmap2D</ref> &amp;</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Copy constructor for a costmap, creates a copy efficiently. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>map</parametername>
</parameternamelist>
<parameterdescription>
<para>The costmap to copy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="116" column="3" bodyfile="src/costmap_2d.cpp" bodystart="170" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1a5c41d42532693430c002c16258925d82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>costmap_2d::Costmap2D::Costmap2D</definition>
        <argsstring>(unsigned int cells_size_x, unsigned int cells_size_y, double resolution, double origin_x, double origin_y, unsigned char default_value=0)</argsstring>
        <name>Costmap2D</name>
        <param>
          <type>unsigned int</type>
          <declname>cells_size_x</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>cells_size_y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>double</type>
          <declname>origin_x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>origin_y</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>default_value</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Constructor for a costmap. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cells_size_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x size of the map in cells </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cells_size_y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y size of the map in cells </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resolution</parametername>
</parameternamelist>
<parameterdescription>
<para>The resolution of the map in meters/cell </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>origin_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x origin of the map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>origin_y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y origin of the map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>default_value</parametername>
</parameternamelist>
<parameterdescription>
<para>Default Value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="109" column="3" bodyfile="src/costmap_2d.cpp" bodystart="45" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1a951c218252d6e66e23062a123dbde34d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char * costmap_2d::Costmap2D::getCharMap</definition>
        <argsstring>() const</argsstring>
        <name>getCharMap</name>
        <briefdescription>
<para>Will return a pointer to the underlying unsigned char array used as the costmap. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A pointer to the underlying unsigned char array storing cost values </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="236" column="17" bodyfile="src/costmap_2d.cpp" bodystart="197" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char costmap_2d::Costmap2D::getCost</definition>
        <argsstring>(unsigned int mx, unsigned int my) const</argsstring>
        <name>getCost</name>
        <param>
          <type>unsigned int</type>
          <declname>mx</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>my</declname>
        </param>
        <briefdescription>
<para>Get the cost of a cell in the costmap. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mx</parametername>
</parameternamelist>
<parameterdescription>
<para>The x coordinate of the cell </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>my</parametername>
</parameternamelist>
<parameterdescription>
<para>The y coordinate of the cell </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The cost of the cell </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="152" column="17" bodyfile="src/costmap_2d.cpp" bodystart="202" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1a35fbb86d10502ab91fb6e133c1364cd9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char costmap_2d::Costmap2D::getDefaultValue</definition>
        <argsstring>()</argsstring>
        <name>getDefaultValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="285" column="17" bodyfile="include/costmap_2d/costmap_2d.h" bodystart="285" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1a57d2ea3f3a039d72640c159cd149ff9d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int costmap_2d::Costmap2D::getIndex</definition>
        <argsstring>(unsigned int mx, unsigned int my) const</argsstring>
        <name>getIndex</name>
        <param>
          <type>unsigned int</type>
          <declname>mx</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>my</declname>
        </param>
        <briefdescription>
<para>Given two map coordinates... compute the associated index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mx</parametername>
</parameternamelist>
<parameterdescription>
<para>The x coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>my</parametername>
</parameternamelist>
<parameterdescription>
<para>The y coordinate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The associated index </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="215" column="23" bodyfile="include/costmap_2d/costmap_2d.h" bodystart="215" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1a0d03ac474a496bee0780d4b7f5b4a2f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcostmap__2d_1_1Costmap2D_1a723f8f016f2b699e9081c25e5dfdbcf4" kindref="member">mutex_t</ref> *</type>
        <definition>mutex_t* costmap_2d::Costmap2D::getMutex</definition>
        <argsstring>()</argsstring>
        <name>getMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="339" column="11" bodyfile="include/costmap_2d/costmap_2d.h" bodystart="339" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1a9aae81be964f5fff675f9a10c3bf2e82" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double costmap_2d::Costmap2D::getOriginX</definition>
        <argsstring>() const</argsstring>
        <name>getOriginX</name>
        <briefdescription>
<para>Accessor for the x origin of the costmap. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The x origin of the costmap </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="266" column="10" bodyfile="src/costmap_2d.cpp" bodystart="471" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1a686124b010e121eb87629ff17a032d7f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double costmap_2d::Costmap2D::getOriginY</definition>
        <argsstring>() const</argsstring>
        <name>getOriginY</name>
        <briefdescription>
<para>Accessor for the y origin of the costmap. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The y origin of the costmap </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="272" column="10" bodyfile="src/costmap_2d.cpp" bodystart="476" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1ade55f512e27c62cec28a3de5ca775759" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double costmap_2d::Costmap2D::getResolution</definition>
        <argsstring>() const</argsstring>
        <name>getResolution</name>
        <briefdescription>
<para>Accessor for the resolution of the costmap. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The resolution of the costmap </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="278" column="10" bodyfile="src/costmap_2d.cpp" bodystart="481" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1a615a4186649d8970111f8a356906b320" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int costmap_2d::Costmap2D::getSizeInCellsX</definition>
        <argsstring>() const</argsstring>
        <name>getSizeInCellsX</name>
        <briefdescription>
<para>Accessor for the x size of the costmap in cells. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The x size of the costmap </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="242" column="16" bodyfile="src/costmap_2d.cpp" bodystart="451" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1a702f4ed109f94c8513500cf97ff066a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int costmap_2d::Costmap2D::getSizeInCellsY</definition>
        <argsstring>() const</argsstring>
        <name>getSizeInCellsY</name>
        <briefdescription>
<para>Accessor for the y size of the costmap in cells. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The y size of the costmap </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="248" column="16" bodyfile="src/costmap_2d.cpp" bodystart="456" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1a645ea4720d5cab8bcf662687cc81d087" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double costmap_2d::Costmap2D::getSizeInMetersX</definition>
        <argsstring>() const</argsstring>
        <name>getSizeInMetersX</name>
        <briefdescription>
<para>Accessor for the x size of the costmap in meters. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The x size of the costmap (returns the centerpoint of the last legal cell in the map) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="254" column="10" bodyfile="src/costmap_2d.cpp" bodystart="461" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1afb1d6cdc01d77452175487955e6aff4d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double costmap_2d::Costmap2D::getSizeInMetersY</definition>
        <argsstring>() const</argsstring>
        <name>getSizeInMetersY</name>
        <briefdescription>
<para>Accessor for the y size of the costmap in meters. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The y size of the costmap (returns the centerpoint of the last legal cell in the map) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="260" column="10" bodyfile="src/costmap_2d.cpp" bodystart="466" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1a468dd5fbb58fc5752b88044f90875b47" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double costmap_2d::Costmap2D::getTimeStamp</definition>
        <argsstring>(unsigned int mx, unsigned int my) const</argsstring>
        <name>getTimeStamp</name>
        <param>
          <type>unsigned int</type>
          <declname>mx</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>my</declname>
        </param>
        <briefdescription>
<para>Get the last update timestamp of the cell. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mx</parametername>
</parameternamelist>
<parameterdescription>
<para>The x coordinate of the cell </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>my</parametername>
</parameternamelist>
<parameterdescription>
<para>The y coordinate of the cell </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The last update timestamp of the cell (seconds) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="160" column="10" bodyfile="src/costmap_2d.cpp" bodystart="207" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1aa10c1734472f485473302598113fcddc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void costmap_2d::Costmap2D::indexToCells</definition>
        <argsstring>(unsigned int index, unsigned int &amp;mx, unsigned int &amp;my) const</argsstring>
        <name>indexToCells</name>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>unsigned int &amp;</type>
          <declname>mx</declname>
        </param>
        <param>
          <type>unsigned int &amp;</type>
          <declname>my</declname>
        </param>
        <briefdescription>
<para>Given an index... compute the associated map coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mx</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to the x coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>my</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to the y coordinate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="226" column="15" bodyfile="include/costmap_2d/costmap_2d.h" bodystart="226" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1a8e39feaa7ee4446347674b3701a1394c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void costmap_2d::Costmap2D::mapToWorld</definition>
        <argsstring>(unsigned int mx, unsigned int my, double &amp;wx, double &amp;wy) const</argsstring>
        <name>mapToWorld</name>
        <param>
          <type>unsigned int</type>
          <declname>mx</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>my</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>wx</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>wy</declname>
        </param>
        <briefdescription>
<para>Convert from map coordinates to world coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mx</parametername>
</parameternamelist>
<parameterdescription>
<para>The x map coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>my</parametername>
</parameternamelist>
<parameterdescription>
<para>The y map coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wx</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to the associated world x coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wy</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to the associated world y coordinate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="177" column="8" bodyfile="src/costmap_2d.cpp" bodystart="218" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1a404b9898ed689c8f6b1eb3503c358db0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound">Costmap2D</ref> &amp;</type>
        <definition>Costmap2D &amp; costmap_2d::Costmap2D::operator=</definition>
        <argsstring>(const Costmap2D &amp;map)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound">Costmap2D</ref> &amp;</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Overloaded assignment operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>map</parametername>
</parameternamelist>
<parameterdescription>
<para>The costmap to copy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the map after the copy has finished </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="123" column="13" bodyfile="src/costmap_2d.cpp" bodystart="145" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1ad0c6f7cb8e11569a02f873c545acec90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void costmap_2d::Costmap2D::polygonOutlineCells</definition>
        <argsstring>(const std::vector&lt; MapLocation &gt; &amp;polygon, std::vector&lt; MapLocation &gt; &amp;polygon_cells)</argsstring>
        <name>polygonOutlineCells</name>
        <param>
          <type>const <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="structcostmap__2d_1_1MapLocation" kindref="compound">MapLocation</ref> &gt; &amp;</type>
          <declname>polygon</declname>
        </param>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="structcostmap__2d_1_1MapLocation" kindref="compound">MapLocation</ref> &gt; &amp;</type>
          <declname>polygon_cells</declname>
        </param>
        <briefdescription>
<para>Get the map cells that make up the outline of a polygon. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>polygon</parametername>
</parameternamelist>
<parameterdescription>
<para>The polygon in map coordinates to rasterize </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>polygon_cells</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to the cells contained in the outline of the polygon </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="303" column="8" bodyfile="src/costmap_2d.cpp" bodystart="365" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1aba344550cbc08bcc3a54c64290f8f568" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void costmap_2d::Costmap2D::resetMap</definition>
        <argsstring>(unsigned int x0, unsigned int y0, unsigned int xn, unsigned int yn)</argsstring>
        <name>resetMap</name>
        <param>
          <type>unsigned int</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>xn</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>yn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="328" column="8" bodyfile="src/costmap_2d.cpp" bodystart="97" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1a95bae6eccd820a77d8040562e2a51118" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void costmap_2d::Costmap2D::resizeMap</definition>
        <argsstring>(unsigned int size_x, unsigned int size_y, double resolution, double origin_x, double origin_y)</argsstring>
        <name>resizeMap</name>
        <param>
          <type>unsigned int</type>
          <declname>size_x</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>size_y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>double</type>
          <declname>origin_x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>origin_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="325" column="8" bodyfile="src/costmap_2d.cpp" bodystart="75" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1a04cd3558a672159a3ad1b151b1d19661" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool costmap_2d::Costmap2D::saveMap</definition>
        <argsstring>(std::string file_name)</argsstring>
        <name>saveMap</name>
        <param>
          <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
<para>Save the costmap out to a pgm file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the file to save </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="323" column="8" bodyfile="src/costmap_2d.cpp" bodystart="486" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1afb8a42c3810e796107ed04c0ca3cbf90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool costmap_2d::Costmap2D::setConvexPolygonCost</definition>
        <argsstring>(const std::vector&lt; geometry_msgs::Point &gt; &amp;polygon, unsigned char cost_value)</argsstring>
        <name>setConvexPolygonCost</name>
        <param>
          <type>const <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; geometry_msgs::Point &gt; &amp;</type>
          <declname>polygon</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>cost_value</declname>
        </param>
        <briefdescription>
<para>Sets the cost of a convex polygon to a desired value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>polygon</parametername>
</parameternamelist>
<parameterdescription>
<para>The polygon to perform the operation on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cost_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to set costs to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the polygon was filled... false if it could not be filled </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="296" column="8" bodyfile="src/costmap_2d.cpp" bodystart="335" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1ae1703900adbbf1e0d929cec0735a8b0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void costmap_2d::Costmap2D::setCost</definition>
        <argsstring>(unsigned int mx, unsigned int my, unsigned char cost)</argsstring>
        <name>setCost</name>
        <param>
          <type>unsigned int</type>
          <declname>mx</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>my</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>cost</declname>
        </param>
        <briefdescription>
<para>Set the cost of a cell in the costmap. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mx</parametername>
</parameternamelist>
<parameterdescription>
<para>The x coordinate of the cell </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>my</parametername>
</parameternamelist>
<parameterdescription>
<para>The y coordinate of the cell </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cost</parametername>
</parameternamelist>
<parameterdescription>
<para>The cost to set the cell to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="168" column="8" bodyfile="src/costmap_2d.cpp" bodystart="212" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1a8a9f535f98f1ba4c0a74f88aa706bcd2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void costmap_2d::Costmap2D::setDefaultValue</definition>
        <argsstring>(unsigned char c)</argsstring>
        <name>setDefaultValue</name>
        <param>
          <type>unsigned char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="280" column="8" bodyfile="include/costmap_2d/costmap_2d.h" bodystart="280" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1a5ca05c95f95e1408ca9e23d2e7f8987a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void costmap_2d::Costmap2D::updateOrigin</definition>
        <argsstring>(double new_origin_x, double new_origin_y)</argsstring>
        <name>updateOrigin</name>
        <reimplementedby refid="classcostmap__2d_1_1VoxelLayer_1a91dc901da59c768aea0b25037bf46fef">updateOrigin</reimplementedby>
        <param>
          <type>double</type>
          <declname>new_origin_x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>new_origin_y</declname>
        </param>
        <briefdescription>
<para>Move the origin of the costmap to a new location.... keeping data when it can. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>new_origin_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x coordinate of the new origin </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_origin_y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y coordinate of the new origin </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="317" column="16" bodyfile="src/costmap_2d.cpp" bodystart="276" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1a9a2c824d4cd3bcad3ac3435d81982986" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool costmap_2d::Costmap2D::worldToMap</definition>
        <argsstring>(double wx, double wy, unsigned int &amp;mx, unsigned int &amp;my) const</argsstring>
        <name>worldToMap</name>
        <param>
          <type>double</type>
          <declname>wx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wy</declname>
        </param>
        <param>
          <type>unsigned int &amp;</type>
          <declname>mx</declname>
        </param>
        <param>
          <type>unsigned int &amp;</type>
          <declname>my</declname>
        </param>
        <briefdescription>
<para>Convert from world coordinates to map coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wx</parametername>
</parameternamelist>
<parameterdescription>
<para>The x world coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wy</parametername>
</parameternamelist>
<parameterdescription>
<para>The y world coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mx</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to the associated map x coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>my</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to the associated map y coordinate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the conversion was successful (legal bounds) false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="187" column="8" bodyfile="src/costmap_2d.cpp" bodystart="224" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1ae412173f42af7edba9996f86754b7cbf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void costmap_2d::Costmap2D::worldToMapEnforceBounds</definition>
        <argsstring>(double wx, double wy, int &amp;mx, int &amp;my) const</argsstring>
        <name>worldToMapEnforceBounds</name>
        <param>
          <type>double</type>
          <declname>wx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wy</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>mx</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>my</declname>
        </param>
        <briefdescription>
<para>Convert from world coordinates to map coordinates, constraining results to legal bounds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wx</parametername>
</parameternamelist>
<parameterdescription>
<para>The x world coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wy</parametername>
</parameternamelist>
<parameterdescription>
<para>The y world coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mx</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to the associated map x coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>my</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to the associated map y coordinate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The returned map coordinates are guaranteed to lie within the map. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="207" column="8" bodyfile="src/costmap_2d.cpp" bodystart="244" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1a2da39cb06d192795614df9c2bf00692f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void costmap_2d::Costmap2D::worldToMapNoBounds</definition>
        <argsstring>(double wx, double wy, int &amp;mx, int &amp;my) const</argsstring>
        <name>worldToMapNoBounds</name>
        <param>
          <type>double</type>
          <declname>wx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wy</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>mx</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>my</declname>
        </param>
        <briefdescription>
<para>Convert from world coordinates to map coordinates without checking for legal bounds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wx</parametername>
</parameternamelist>
<parameterdescription>
<para>The x world coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wy</parametername>
</parameternamelist>
<parameterdescription>
<para>The y world coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mx</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to the associated map x coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>my</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to the associated map y coordinate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The returned map coordinates <bold>are not guaranteed to lie within the map.</bold> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="197" column="8" bodyfile="src/costmap_2d.cpp" bodystart="238" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1a3087bd649bca6c2fb4f795d433e93f3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>costmap_2d::Costmap2D::~Costmap2D</definition>
        <argsstring>()</argsstring>
        <name>~Costmap2D</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="144" column="11" bodyfile="src/costmap_2d.cpp" bodystart="185" bodyend="189"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1ab857ec41de2e14d601b85bbf6497b612" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename data_type</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void costmap_2d::Costmap2D::copyMapRegion</definition>
        <argsstring>(data_type *source_map, unsigned int sm_lower_left_x, unsigned int sm_lower_left_y, unsigned int sm_size_x, data_type *dest_map, unsigned int dm_lower_left_x, unsigned int dm_lower_left_y, unsigned int dm_size_x, unsigned int region_size_x, unsigned int region_size_y)</argsstring>
        <name>copyMapRegion</name>
        <param>
          <type>data_type *</type>
          <declname>source_map</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>sm_lower_left_x</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>sm_lower_left_y</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>sm_size_x</declname>
        </param>
        <param>
          <type>data_type *</type>
          <declname>dest_map</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>dm_lower_left_x</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>dm_lower_left_y</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>dm_size_x</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>region_size_x</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>region_size_y</declname>
        </param>
        <briefdescription>
<para>Copy a region of a source map into a destination map. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source_map</parametername>
</parameternamelist>
<parameterdescription>
<para>The source map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sm_lower_left_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The lower left x point of the source map to start the copy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sm_lower_left_y</parametername>
</parameternamelist>
<parameterdescription>
<para>The lower left y point of the source map to start the copy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sm_size_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x size of the source map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dest_map</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dm_lower_left_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The lower left x point of the destination map to start the copy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dm_lower_left_y</parametername>
</parameternamelist>
<parameterdescription>
<para>The lower left y point of the destination map to start the copy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dm_size_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x size of the destination map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>region_size_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x size of the region to copy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>region_size_y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y size of the region to copy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="359" column="10" bodyfile="include/costmap_2d/costmap_2d.h" bodystart="359" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1af536407a80cef61e20226c28dbef9eee" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void costmap_2d::Costmap2D::deleteMaps</definition>
        <argsstring>()</argsstring>
        <name>deleteMaps</name>
        <briefdescription>
<para>Deletes the costmap, static_map, and markers data structures. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="380" column="16" bodyfile="src/costmap_2d.cpp" bodystart="57" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1a1da91220df45a19376a3e3df3a517c27" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void costmap_2d::Costmap2D::initMaps</definition>
        <argsstring>(unsigned int size_x, unsigned int size_y)</argsstring>
        <name>initMaps</name>
        <param>
          <type>unsigned int</type>
          <declname>size_x</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>size_y</declname>
        </param>
        <briefdescription>
<para>Initializes the costmap, static_map, and markers data structures. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x size to use for map initialization </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size_y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y size to use for map initialization </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="392" column="16" bodyfile="src/costmap_2d.cpp" bodystart="67" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1af1d619d9b49b6851cb0a33de4e39ec78" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ActionType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void costmap_2d::Costmap2D::raytraceLine</definition>
        <argsstring>(ActionType at, unsigned int x0, unsigned int y0, unsigned int x1, unsigned int y1, unsigned int max_length=UINT_MAX)</argsstring>
        <name>raytraceLine</name>
        <param>
          <type>ActionType</type>
          <declname>at</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>max_length</declname>
          <defval>UINT_MAX</defval>
        </param>
        <briefdescription>
<para>Raytrace a line and apply some action at each step. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>at</parametername>
</parameternamelist>
<parameterdescription>
<para>The action to take... a functor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x0</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting x coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y0</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting y coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x1</parametername>
</parameternamelist>
<parameterdescription>
<para>The ending x coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y1</parametername>
</parameternamelist>
<parameterdescription>
<para>The ending y coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_length</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum desired length of the segment... allows you to not go all the way to the endpoint </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="404" column="17" bodyfile="include/costmap_2d/costmap_2d.h" bodystart="404" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1ab4424e85f6daaf91eaf455e4bb241c19" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void costmap_2d::Costmap2D::resetMaps</definition>
        <argsstring>()</argsstring>
        <name>resetMaps</name>
        <reimplementedby refid="classcostmap__2d_1_1VoxelLayer_1a56c9a252631b5d4af75c1d17eac8e052">resetMaps</reimplementedby>
        <briefdescription>
<para>Resets the costmap and static_map to be unknown space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="385" column="16" bodyfile="src/costmap_2d.cpp" bodystart="90" bodyend="95"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1a54462e95337134adf0a59785b39b57f6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ActionType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void costmap_2d::Costmap2D::bresenham2D</definition>
        <argsstring>(ActionType at, unsigned int abs_da, unsigned int abs_db, int error_b, int offset_a, int offset_b, unsigned int offset, unsigned int max_length)</argsstring>
        <name>bresenham2D</name>
        <param>
          <type>ActionType</type>
          <declname>at</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>abs_da</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>abs_db</declname>
        </param>
        <param>
          <type>int</type>
          <declname>error_b</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset_a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset_b</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>max_length</declname>
        </param>
        <briefdescription>
<para>A 2D implementation of Bresenham&apos;s raytracing algorithm... applies an action at each step. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="440" column="17" bodyfile="include/costmap_2d/costmap_2d.h" bodystart="440" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1Costmap2D_1a947041f50d5fb1a44c3fd0601c4fc608" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int costmap_2d::Costmap2D::sign</definition>
        <argsstring>(int x)</argsstring>
        <name>sign</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/costmap_2d.h" line="458" column="14" bodyfile="include/costmap_2d/costmap_2d.h" bodystart="458" bodyend="461"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A 2D costmap provides a mapping between points in the world and their associated &quot;costs&quot;. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>costmap_2d::Costmap2D</label>
        <link refid="classcostmap__2d_1_1Costmap2D"/>
      </node>
      <node id="4">
        <label>costmap_2d::VoxelLayer</label>
        <link refid="classcostmap__2d_1_1VoxelLayer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>costmap_2d::CostmapLayer</label>
        <link refid="classcostmap__2d_1_1CostmapLayer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>costmap_2d::StaticLayer</label>
        <link refid="classcostmap__2d_1_1StaticLayer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>costmap_2d::ObstacleLayer</label>
        <link refid="classcostmap__2d_1_1ObstacleLayer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="include/costmap_2d/costmap_2d.h" line="97" column="1" bodyfile="include/costmap_2d/costmap_2d.h" bodystart="96" bodyend="515"/>
    <listofallmembers>
      <member refid="classcostmap__2d_1_1Costmap2D_1a509ef0191dacd55f6348f789236d904d" prot="private" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>access_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a54462e95337134adf0a59785b39b57f6" prot="private" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>bresenham2D</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1abffbb5c7d49fae947d70c4e6d0fbeae9" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>cellDistance</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1aa3c49f2d63f6edfb7396d1b0c79a4b12" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>convexFillCells</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a8fb9538b17743071ea041b32bcc3b381" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>copyCostmapWindow</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1ab857ec41de2e14d601b85bbf6497b612" prot="protected" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>copyMapRegion</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a5c41d42532693430c002c16258925d82" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>Costmap2D</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a430191c66018db89e5a65fb823db35d8" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>Costmap2D</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a1ec52799b2b673306902fcfe01285d7a" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>Costmap2D</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a34c8633b0dfec7481300d401d33010c7" prot="protected" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>costmap_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a9f13f59f234edd1db20196987ac18fcd" prot="private" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>CostmapTester</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1af0715f46aa3d358da411f0060e0fe8d2" prot="protected" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>default_value_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1af536407a80cef61e20226c28dbef9eee" prot="protected" virt="virtual"><scope>costmap_2d::Costmap2D</scope><name>deleteMaps</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a951c218252d6e66e23062a123dbde34d" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>getCharMap</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>getCost</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a35fbb86d10502ab91fb6e133c1364cd9" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>getDefaultValue</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a57d2ea3f3a039d72640c159cd149ff9d" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>getIndex</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a0d03ac474a496bee0780d4b7f5b4a2f1" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>getMutex</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a9aae81be964f5fff675f9a10c3bf2e82" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>getOriginX</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a686124b010e121eb87629ff17a032d7f" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>getOriginY</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1ade55f512e27c62cec28a3de5ca775759" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>getResolution</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a615a4186649d8970111f8a356906b320" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>getSizeInCellsX</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a702f4ed109f94c8513500cf97ff066a4" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>getSizeInCellsY</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a645ea4720d5cab8bcf662687cc81d087" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>getSizeInMetersX</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1afb1d6cdc01d77452175487955e6aff4d" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>getSizeInMetersY</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a468dd5fbb58fc5752b88044f90875b47" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>getTimeStamp</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1aa10c1734472f485473302598113fcddc" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>indexToCells</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a1da91220df45a19376a3e3df3a517c27" prot="protected" virt="virtual"><scope>costmap_2d::Costmap2D</scope><name>initMaps</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a8e39feaa7ee4446347674b3701a1394c" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>mapToWorld</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a723f8f016f2b699e9081c25e5dfdbcf4" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>mutex_t</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a404b9898ed689c8f6b1eb3503c358db0" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>operator=</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a9005fb139b987665bfa799c631953f00" prot="protected" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>origin_x_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a53bc8ed50d62760245f879d66c5567db" prot="protected" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>origin_y_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1ad0c6f7cb8e11569a02f873c545acec90" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>polygonOutlineCells</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1af1d619d9b49b6851cb0a33de4e39ec78" prot="protected" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>raytraceLine</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1aba344550cbc08bcc3a54c64290f8f568" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>resetMap</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1ab4424e85f6daaf91eaf455e4bb241c19" prot="protected" virt="virtual"><scope>costmap_2d::Costmap2D</scope><name>resetMaps</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a95bae6eccd820a77d8040562e2a51118" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>resizeMap</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a3d74d58b31973def7e407c7300f1115c" prot="protected" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>resolution_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a04cd3558a672159a3ad1b151b1d19661" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>saveMap</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1afb8a42c3810e796107ed04c0ca3cbf90" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>setConvexPolygonCost</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1ae1703900adbbf1e0d929cec0735a8b0e" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>setCost</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a8a9f535f98f1ba4c0a74f88aa706bcd2" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>setDefaultValue</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a947041f50d5fb1a44c3fd0601c4fc608" prot="private" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>sign</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1aa71bf88a183222496f17b3a95e852e75" prot="protected" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>size_x_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1ad25df12283aa78c43878e24633381100" prot="protected" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>size_y_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a33545b79aeec7b554ce21a0b1befb212" prot="protected" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>timestamps_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a5ca05c95f95e1408ca9e23d2e7f8987a" prot="public" virt="virtual"><scope>costmap_2d::Costmap2D</scope><name>updateOrigin</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a9a2c824d4cd3bcad3ac3435d81982986" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>worldToMap</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1ae412173f42af7edba9996f86754b7cbf" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>worldToMapEnforceBounds</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a2da39cb06d192795614df9c2bf00692f" prot="public" virt="non-virtual"><scope>costmap_2d::Costmap2D</scope><name>worldToMapNoBounds</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a3087bd649bca6c2fb4f795d433e93f3a" prot="public" virt="virtual"><scope>costmap_2d::Costmap2D</scope><name>~Costmap2D</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
