<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classcostmap__2d_1_1VoxelLayer" kind="class" language="C++" prot="public">
    <compoundname>costmap_2d::VoxelLayer</compoundname>
    <basecompoundref refid="classcostmap__2d_1_1ObstacleLayer" prot="public" virt="non-virtual">costmap_2d::ObstacleLayer</basecompoundref>
    <includes refid="voxel__layer_8h" local="no">voxel_layer.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcostmap__2d_1_1VoxelLayer_1a23e8e84e92f684354a7c2a762cf8fa2d" prot="private" static="no" mutable="no">
        <type>sensor_msgs::PointCloud</type>
        <definition>sensor_msgs::PointCloud costmap_2d::VoxelLayer::clearing_endpoints_</definition>
        <argsstring></argsstring>
        <name>clearing_endpoints_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/voxel_layer.h" line="176" column="27" bodyfile="include/costmap_2d/voxel_layer.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1VoxelLayer_1ac1981d52f95e49a18b1b01324695b98f" prot="private" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher costmap_2d::VoxelLayer::clearing_endpoints_pub_</definition>
        <argsstring></argsstring>
        <name>clearing_endpoints_pub_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/voxel_layer.h" line="175" column="18" bodyfile="include/costmap_2d/voxel_layer.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1VoxelLayer_1a2691efbeed67c0505dcbf30b32de6bd2" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int costmap_2d::VoxelLayer::mark_threshold_</definition>
        <argsstring></argsstring>
        <name>mark_threshold_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/voxel_layer.h" line="174" column="35" bodyfile="include/costmap_2d/voxel_layer.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1VoxelLayer_1aad266904a064b8ad6b405069247197c7" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double costmap_2d::VoxelLayer::origin_z_</definition>
        <argsstring></argsstring>
        <name>origin_z_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/voxel_layer.h" line="173" column="24" bodyfile="include/costmap_2d/voxel_layer.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1VoxelLayer_1adc6784f95a286962ca829f2b44a4bde5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool costmap_2d::VoxelLayer::publish_voxel_</definition>
        <argsstring></argsstring>
        <name>publish_voxel_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/voxel_layer.h" line="170" column="8" bodyfile="include/costmap_2d/voxel_layer.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1VoxelLayer_1a2e2db3f79b15d5de8cedb620ee9f7ac0" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int costmap_2d::VoxelLayer::size_z_</definition>
        <argsstring></argsstring>
        <name>size_z_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/voxel_layer.h" line="174" column="51" bodyfile="include/costmap_2d/voxel_layer.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1VoxelLayer_1a148fc0c859ad2f91a38da4e0f9b221d7" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int costmap_2d::VoxelLayer::unknown_threshold_</definition>
        <argsstring></argsstring>
        <name>unknown_threshold_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/voxel_layer.h" line="174" column="16" bodyfile="include/costmap_2d/voxel_layer.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1VoxelLayer_1ac069771fd6860767a629f5ac0ab833a4" prot="private" static="no" mutable="no">
        <type>dynamic_reconfigure::Server&lt; costmap_2d::VoxelPluginConfig &gt; *</type>
        <definition>dynamic_reconfigure::Server&lt;costmap_2d::VoxelPluginConfig&gt;* costmap_2d::VoxelLayer::voxel_dsrv_</definition>
        <argsstring></argsstring>
        <name>voxel_dsrv_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/voxel_layer.h" line="168" column="31" bodyfile="include/costmap_2d/voxel_layer.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1VoxelLayer_1aa91df83ab59e1b9ecfbe9f4991bd2eef" prot="private" static="no" mutable="no">
        <type>voxel_grid::VoxelGrid</type>
        <definition>voxel_grid::VoxelGrid costmap_2d::VoxelLayer::voxel_grid_</definition>
        <argsstring></argsstring>
        <name>voxel_grid_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/voxel_layer.h" line="172" column="25" bodyfile="include/costmap_2d/voxel_layer.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1VoxelLayer_1abc6ca1174128cfc2aca90817128f8ee0" prot="private" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher costmap_2d::VoxelLayer::voxel_pub_</definition>
        <argsstring></argsstring>
        <name>voxel_pub_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/voxel_layer.h" line="171" column="18" bodyfile="include/costmap_2d/voxel_layer.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcostmap__2d_1_1VoxelLayer_1ac5493b9ea645719260900007cf28e610" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double costmap_2d::VoxelLayer::z_resolution_</definition>
        <argsstring></argsstring>
        <name>z_resolution_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/voxel_layer.h" line="173" column="10" bodyfile="include/costmap_2d/voxel_layer.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcostmap__2d_1_1VoxelLayer_1a3987d72bcc1891335c474b060e404329" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool costmap_2d::VoxelLayer::isDiscretized</definition>
        <argsstring>()</argsstring>
        <name>isDiscretized</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/voxel_layer.h" line="149" column="8" bodyfile="include/costmap_2d/voxel_layer.h" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1VoxelLayer_1a0528c59b3cbe4c1b81748284ae0a3dc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void costmap_2d::VoxelLayer::matchSize</definition>
        <argsstring>()</argsstring>
        <name>matchSize</name>
        <reimplements refid="classcostmap__2d_1_1CostmapLayer_1a9260d210630b6522cad87397506f9696">matchSize</reimplements>
        <briefdescription>
<para>Implement this to make this layer match the size of the parent costmap. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/voxel_layer.h" line="153" column="16" bodyfile="plugins/voxel_layer.cpp" bodystart="95" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1VoxelLayer_1a7b0d5249f27fd757f206493b491fd37a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void costmap_2d::VoxelLayer::onInitialize</definition>
        <argsstring>()</argsstring>
        <name>onInitialize</name>
        <reimplements refid="classcostmap__2d_1_1ObstacleLayer_1a370822e3b19d717ef04311b7b967f496">onInitialize</reimplements>
        <briefdescription>
<para>This is called at the end of <ref refid="classcostmap__2d_1_1Layer_1af6c7a09667d7cc23e207e0121e60ba4b" kindref="member">initialize()</ref>. Override to implement subclass-specific initialization. </para>
        </briefdescription>
        <detaileddescription>
<para>tf_, name_, and layered_costmap_ will all be set already when this is called. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/voxel_layer.h" line="144" column="16" bodyfile="plugins/voxel_layer.cpp" bodystart="55" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1VoxelLayer_1af5f57588c57a8a5c8dff065b5a76a0db" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void costmap_2d::VoxelLayer::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <reimplements refid="classcostmap__2d_1_1ObstacleLayer_1a9eca6114b3d54c93504058a1754103e4">reset</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/voxel_layer.h" line="154" column="16" bodyfile="plugins/voxel_layer.cpp" bodystart="102" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1VoxelLayer_1ab28185cd71c8e42f72880b779ef08ae2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void costmap_2d::VoxelLayer::updateBounds</definition>
        <argsstring>(double robot_x, double robot_y, double robot_yaw, double *min_x, double *min_y, double *max_x, double *max_y)</argsstring>
        <name>updateBounds</name>
        <reimplements refid="classcostmap__2d_1_1ObstacleLayer_1a1bfef13f020e8aa64a33743f72824ebd">updateBounds</reimplements>
        <param>
          <type>double</type>
          <declname>robot_x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>robot_y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>robot_yaw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>min_x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>min_y</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>max_x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>max_y</declname>
        </param>
        <briefdescription>
<para>This is called by the <ref refid="classcostmap__2d_1_1LayeredCostmap" kindref="compound">LayeredCostmap</ref> to poll this plugin as to how much of the costmap it needs to update. Each layer can increase the size of this bounds. </para>
        </briefdescription>
        <detaileddescription>
<para>For more details, see &quot;Layered Costmaps for Context-Sensitive Navigation&quot;, by Lu et. Al, IROS 2014. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/voxel_layer.h" line="145" column="16" bodyfile="plugins/voxel_layer.cpp" bodystart="116" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1VoxelLayer_1a91dc901da59c768aea0b25037bf46fef" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void costmap_2d::VoxelLayer::updateOrigin</definition>
        <argsstring>(double new_origin_x, double new_origin_y)</argsstring>
        <name>updateOrigin</name>
        <reimplements refid="classcostmap__2d_1_1Costmap2D_1a5ca05c95f95e1408ca9e23d2e7f8987a">updateOrigin</reimplements>
        <param>
          <type>double</type>
          <declname>new_origin_x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>new_origin_y</declname>
        </param>
        <briefdescription>
<para>Move the origin of the costmap to a new location.... keeping data when it can. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>new_origin_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x coordinate of the new origin </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_origin_y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y coordinate of the new origin </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/voxel_layer.h" line="148" column="8" bodyfile="plugins/voxel_layer.cpp" bodystart="390" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1VoxelLayer_1a02a7f51ba2b09b61f6ada3d10acf5a20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>costmap_2d::VoxelLayer::VoxelLayer</definition>
        <argsstring>()</argsstring>
        <name>VoxelLayer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/voxel_layer.h" line="136" column="3" bodyfile="include/costmap_2d/voxel_layer.h" bodystart="136" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1VoxelLayer_1a783343776ec9c85b62c882b7739fc2b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>costmap_2d::VoxelLayer::~VoxelLayer</definition>
        <argsstring>()</argsstring>
        <name>~VoxelLayer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/voxel_layer.h" line="142" column="11" bodyfile="plugins/voxel_layer.cpp" bodystart="75" bodyend="79"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcostmap__2d_1_1VoxelLayer_1a56c9a252631b5d4af75c1d17eac8e052" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void costmap_2d::VoxelLayer::resetMaps</definition>
        <argsstring>()</argsstring>
        <name>resetMaps</name>
        <reimplements refid="classcostmap__2d_1_1Costmap2D_1ab4424e85f6daaf91eaf455e4bb241c19">resetMaps</reimplements>
        <briefdescription>
<para>Resets the costmap and static_map to be unknown space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/voxel_layer.h" line="160" column="16" bodyfile="plugins/voxel_layer.cpp" bodystart="110" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1VoxelLayer_1a7e9b75bd9cee13aa9f893a17d549fbee" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void costmap_2d::VoxelLayer::setupDynamicReconfigure</definition>
        <argsstring>(ros::NodeHandle &amp;nh)</argsstring>
        <name>setupDynamicReconfigure</name>
        <reimplements refid="classcostmap__2d_1_1ObstacleLayer_1a8a24f6bb0bd8600154c21af4638708c2">setupDynamicReconfigure</reimplements>
        <param>
          <type>ros::NodeHandle &amp;</type>
          <declname>nh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/voxel_layer.h" line="158" column="16" bodyfile="plugins/voxel_layer.cpp" bodystart="67" bodyend="73"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classcostmap__2d_1_1VoxelLayer_1ae0f13b98d89b26ab2283882cae023e04" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void costmap_2d::VoxelLayer::clearNonLethal</definition>
        <argsstring>(double wx, double wy, double w_size_x, double w_size_y, bool clear_no_info)</argsstring>
        <name>clearNonLethal</name>
        <param>
          <type>double</type>
          <declname>wx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>w_size_x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>w_size_y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clear_no_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/voxel_layer.h" line="164" column="8" bodyfile="plugins/voxel_layer.cpp" bodystart="215" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1VoxelLayer_1abd5944de6300c41e539f745c71dbf00d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double costmap_2d::VoxelLayer::dist</definition>
        <argsstring>(double x0, double y0, double z0, double x1, double y1, double z1)</argsstring>
        <name>dist</name>
        <param>
          <type>double</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/voxel_layer.h" line="214" column="17" bodyfile="include/costmap_2d/voxel_layer.h" bodystart="214" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1VoxelLayer_1a10137142c39215dae8d252d6325e1992" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void costmap_2d::VoxelLayer::mapToWorld3D</definition>
        <argsstring>(unsigned int mx, unsigned int my, unsigned int mz, double &amp;wx, double &amp;wy, double &amp;wz)</argsstring>
        <name>mapToWorld3D</name>
        <param>
          <type>unsigned int</type>
          <declname>mx</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>my</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>mz</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>wx</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>wy</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>wz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/voxel_layer.h" line="206" column="15" bodyfile="include/costmap_2d/voxel_layer.h" bodystart="206" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1VoxelLayer_1a6f7c914d410df715e01253b3584d9f21" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void costmap_2d::VoxelLayer::raytraceFreespace</definition>
        <argsstring>(const costmap_2d::Observation &amp;clearing_observation, double *min_x, double *min_y, double *max_x, double *max_y)</argsstring>
        <name>raytraceFreespace</name>
        <reimplements refid="classcostmap__2d_1_1ObstacleLayer_1a50dac229133e7c22981b0c7e0eafc910">raytraceFreespace</reimplements>
        <param>
          <type>const <ref refid="classcostmap__2d_1_1Observation" kindref="compound">costmap_2d::Observation</ref> &amp;</type>
          <declname>clearing_observation</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>min_x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>min_y</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>max_x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>max_y</declname>
        </param>
        <briefdescription>
<para>Clear freespace based on one observation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>clearing_observation</parametername>
</parameternamelist>
<parameterdescription>
<para>The observation used to raytrace </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min_x</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min_y</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_x</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_y</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/voxel_layer.h" line="165" column="16" bodyfile="plugins/voxel_layer.cpp" bodystart="266" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1VoxelLayer_1a2361abd50823db1734c1cc05a70d0c97" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void costmap_2d::VoxelLayer::reconfigureCB</definition>
        <argsstring>(costmap_2d::VoxelPluginConfig &amp;config, uint32_t level)</argsstring>
        <name>reconfigureCB</name>
        <param>
          <type>costmap_2d::VoxelPluginConfig &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/voxel_layer.h" line="163" column="8" bodyfile="plugins/voxel_layer.cpp" bodystart="81" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1VoxelLayer_1a0c310e849291ea0c2cde7ca7b3a9e1e1" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool costmap_2d::VoxelLayer::worldToMap3D</definition>
        <argsstring>(double wx, double wy, double wz, unsigned int &amp;mx, unsigned int &amp;my, unsigned int &amp;mz)</argsstring>
        <name>worldToMap3D</name>
        <param>
          <type>double</type>
          <declname>wx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wz</declname>
        </param>
        <param>
          <type>unsigned int &amp;</type>
          <declname>mx</declname>
        </param>
        <param>
          <type>unsigned int &amp;</type>
          <declname>my</declname>
        </param>
        <param>
          <type>unsigned int &amp;</type>
          <declname>mz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/voxel_layer.h" line="191" column="15" bodyfile="include/costmap_2d/voxel_layer.h" bodystart="191" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classcostmap__2d_1_1VoxelLayer_1afe388a3645ce14998d2ae2a98a166ad0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool costmap_2d::VoxelLayer::worldToMap3DFloat</definition>
        <argsstring>(double wx, double wy, double wz, double &amp;mx, double &amp;my, double &amp;mz)</argsstring>
        <name>worldToMap3DFloat</name>
        <param>
          <type>double</type>
          <declname>wx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wz</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>mx</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>my</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>mz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/costmap_2d/voxel_layer.h" line="178" column="15" bodyfile="include/costmap_2d/voxel_layer.h" bodystart="178" bodyend="189"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>costmap_2d::Layer</label>
        <link refid="classcostmap__2d_1_1Layer"/>
      </node>
      <node id="5">
        <label>costmap_2d::Costmap2D</label>
        <link refid="classcostmap__2d_1_1Costmap2D"/>
      </node>
      <node id="1">
        <label>costmap_2d::VoxelLayer</label>
        <link refid="classcostmap__2d_1_1VoxelLayer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>costmap_2d::CostmapLayer</label>
        <link refid="classcostmap__2d_1_1CostmapLayer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>costmap_2d::ObstacleLayer</label>
        <link refid="classcostmap__2d_1_1ObstacleLayer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>std::vector&lt; boost::shared_ptr&lt; costmap_2d::Layer &gt; &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="4">
        <label>costmap_2d::Layer</label>
        <link refid="classcostmap__2d_1_1Layer"/>
        <childnode refid="5" relation="usage">
          <edgelabel>layered_costmap_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>footprint_spec_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>name_</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>costmap_2d::Costmap2D</label>
        <link refid="classcostmap__2d_1_1Costmap2D"/>
      </node>
      <node id="1">
        <label>costmap_2d::VoxelLayer</label>
        <link refid="classcostmap__2d_1_1VoxelLayer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>costmap_2d::CostmapLayer</label>
        <link refid="classcostmap__2d_1_1CostmapLayer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>std::vector&lt; boost::shared_ptr&lt; tf2_ros::MessageFilterBase &gt; &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="13">
        <label>std::vector&lt; boost::shared_ptr&lt; message_filters::SubscriberBase &gt; &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="12">
        <label>std::vector&lt; costmap_2d::Observation &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="10">
        <label>std::vector&lt; boost::shared_ptr&lt; costmap_2d::ObservationBuffer &gt; &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="5">
        <label>costmap_2d::LayeredCostmap</label>
        <link refid="classcostmap__2d_1_1LayeredCostmap"/>
        <childnode refid="6" relation="usage">
          <edgelabel>plugins_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>footprint_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>global_frame_</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>costmap_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>std::vector&lt; geometry_msgs::Point &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="2">
        <label>costmap_2d::ObstacleLayer</label>
        <link refid="classcostmap__2d_1_1ObstacleLayer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>marking_buffers_</edgelabel>
          <edgelabel>observation_buffers_</edgelabel>
          <edgelabel>clearing_buffers_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>transformed_footprint_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>global_frame_</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>observation_notifiers_</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>static_marking_observations_</edgelabel>
          <edgelabel>static_clearing_observations_</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>observation_subscribers_</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>std::string</label>
        <link refid="cpp/string/basic_string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="include/costmap_2d/voxel_layer.h" line="98" column="1" bodyfile="include/costmap_2d/voxel_layer.h" bodystart="97" bodyend="182"/>
    <listofallmembers>
      <member refid="classcostmap__2d_1_1Costmap2D_1a509ef0191dacd55f6348f789236d904d" prot="private" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>access_</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a96d2b1af3b09d35e02e6d2fc8366195f" prot="public" virt="virtual"><scope>costmap_2d::VoxelLayer</scope><name>activate</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1acc0f84edaa1742899a9a96b06ad8f683" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>addExtraBounds</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1ac835aba4f43e4c8a2a8ed66c97899b5f" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>addStaticObservation</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a54462e95337134adf0a59785b39b57f6" prot="private" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>bresenham2D</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1abffbb5c7d49fae947d70c4e6d0fbeae9" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>cellDistance</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1aab9fa8593c6069db0f4d349a722ba297" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>checkTimeStamps</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1a2d7de3edced6d1c27a678ab0ebc10f50" prot="public" virt="virtual"><scope>costmap_2d::VoxelLayer</scope><name>clearArea</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1acf2875689509edd4c22032b46d6d5a96" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>clearing_buffers_</name></member>
      <member refid="classcostmap__2d_1_1VoxelLayer_1a23e8e84e92f684354a7c2a762cf8fa2d" prot="private" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>clearing_endpoints_</name></member>
      <member refid="classcostmap__2d_1_1VoxelLayer_1ac1981d52f95e49a18b1b01324695b98f" prot="private" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>clearing_endpoints_pub_</name></member>
      <member refid="classcostmap__2d_1_1VoxelLayer_1ae0f13b98d89b26ab2283882cae023e04" prot="private" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>clearNonLethal</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a46aa43c6240307253b9bf9377f5e6969" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>clearStaticObservations</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a5409807e0d5da47a5594b6558eb86e35" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>combination_method_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1aa3c49f2d63f6edfb7396d1b0c79a4b12" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>convexFillCells</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a8fb9538b17743071ea041b32bcc3b381" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>copyCostmapWindow</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1ab857ec41de2e14d601b85bbf6497b612" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>copyMapRegion</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a5c41d42532693430c002c16258925d82" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>Costmap2D</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a430191c66018db89e5a65fb823db35d8" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>Costmap2D</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a1ec52799b2b673306902fcfe01285d7a" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>Costmap2D</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a34c8633b0dfec7481300d401d33010c7" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>costmap_</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1af55005495db76f6ab20e14bcd3390a41" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>CostmapLayer</name></member>
      <member refid="classcostmap__2d_1_1Layer_1af67484d6f9573d583f3ad809375e976a" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>current_</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a4b5054749c568e2df8180c2a7c0e6177" prot="public" virt="virtual"><scope>costmap_2d::VoxelLayer</scope><name>deactivate</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1af0715f46aa3d358da411f0060e0fe8d2" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>default_value_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1af536407a80cef61e20226c28dbef9eee" prot="protected" virt="virtual"><scope>costmap_2d::VoxelLayer</scope><name>deleteMaps</name></member>
      <member refid="classcostmap__2d_1_1VoxelLayer_1abd5944de6300c41e539f745c71dbf00d" prot="private" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>dist</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a78167cc2c7d1ea1ea46a96de5870a1a2" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>dsrv_</name></member>
      <member refid="classcostmap__2d_1_1Layer_1ab61b2a3e01353b97258c207a397977fe" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>enabled_</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1ae7601f476e57307e02a4886fd1b42efd" prot="private" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>extra_max_x_</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1adc341d502cb5d6beebc771896058fd2c" prot="private" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>extra_max_y_</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1a4ee3c2716934395239e706f62ff5a426" prot="private" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>extra_min_x_</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1a06ee2a873c5b2e69aee98721137f2da2" prot="private" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>extra_min_y_</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1ae2eef96b7091abd5e2df3902ffb0ac29" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>footprint_clearing_enabled_</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a42380f2eea4dea8c474a9acf802be0e4" prot="private" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>footprint_spec_</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a43c426001340920ba660ce5e1da0c166" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>free_to_default_time_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a951c218252d6e66e23062a123dbde34d" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>getCharMap</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1ac36f129eecc398e3fd4c235078be29e4" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>getClearingObservations</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>getCost</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a35fbb86d10502ab91fb6e133c1364cd9" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>getDefaultValue</name></member>
      <member refid="classcostmap__2d_1_1Layer_1ac24cade239a2cb0923a774bc5231ac44" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>getFootprint</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a57d2ea3f3a039d72640c159cd149ff9d" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>getIndex</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1ad697514e2077c33ec3e50ed7ef661d19" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>getMarkingObservations</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a0d03ac474a496bee0780d4b7f5b4a2f1" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>getMutex</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a759035ee464b965433e1b4f30cce890c" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>getName</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a9aae81be964f5fff675f9a10c3bf2e82" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>getOriginX</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a686124b010e121eb87629ff17a032d7f" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>getOriginY</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1ade55f512e27c62cec28a3de5ca775759" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>getResolution</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a615a4186649d8970111f8a356906b320" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>getSizeInCellsX</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a702f4ed109f94c8513500cf97ff066a4" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>getSizeInCellsY</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a645ea4720d5cab8bcf662687cc81d087" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>getSizeInMetersX</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1afb1d6cdc01d77452175487955e6aff4d" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>getSizeInMetersY</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a468dd5fbb58fc5752b88044f90875b47" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>getTimeStamp</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1ace3e2a9b2ded21743140a558a47bc54c" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>global_frame_</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1aa38d857976a16df71fbc47a353114a8a" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>has_extra_bounds_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1aa10c1734472f485473302598113fcddc" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>indexToCells</name></member>
      <member refid="classcostmap__2d_1_1Layer_1af6c7a09667d7cc23e207e0121e60ba4b" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>initialize</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a1da91220df45a19376a3e3df3a517c27" prot="protected" virt="virtual"><scope>costmap_2d::VoxelLayer</scope><name>initMaps</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a3331b68fc4db5ca14dcc31de179fd75f" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>isCurrent</name></member>
      <member refid="classcostmap__2d_1_1VoxelLayer_1a3987d72bcc1891335c474b060e404329" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>isDiscretized</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a57d19ac5805530fc76a2cdbe9eb41421" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>isEnabled</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1adf9bf6f5d231ae52d012320dd18fe047" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>laserScanCallback</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1ae83ee29b89e126ffbfb477aff5fafe92" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>laserScanValidInfCallback</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a1f83227fd701bf4bc29143cd66c4de5c" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>Layer</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a4cebd6c53e8089f863f16cee9a0a2184" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>layered_costmap_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a8e39feaa7ee4446347674b3701a1394c" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>mapToWorld</name></member>
      <member refid="classcostmap__2d_1_1VoxelLayer_1a10137142c39215dae8d252d6325e1992" prot="private" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>mapToWorld3D</name></member>
      <member refid="classcostmap__2d_1_1VoxelLayer_1a2691efbeed67c0505dcbf30b32de6bd2" prot="private" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>mark_threshold_</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1aa29c6e8de64c83c5cada0a51a07fa12e" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>marking_buffers_</name></member>
      <member refid="classcostmap__2d_1_1VoxelLayer_1a0528c59b3cbe4c1b81748284ae0a3dc5" prot="public" virt="virtual"><scope>costmap_2d::VoxelLayer</scope><name>matchSize</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1ad3c33d01e6f8c73a73a0c34140b88fd9" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>max_obstacle_height_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a723f8f016f2b699e9081c25e5dfdbcf4" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>mutex_t</name></member>
      <member refid="classcostmap__2d_1_1Layer_1ac1fa1f64ebd9d39af5947c738202e248" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>name_</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a0374c0cca8722ad5e03612cd8ddaef63" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>observation_buffers_</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a7a1721eda53cf4e9e0446b61f197a7e6" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>observation_notifiers_</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1ad5128763fa389b51ef1e0b70765901b8" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>observation_subscribers_</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a4620782e96fabeb0b449daa725857c00" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>ObstacleLayer</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a40d2c9552f0bc6f0f57c217d1db73cb6" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>occupied_to_default_time_</name></member>
      <member refid="classcostmap__2d_1_1Layer_1ab65a9d55987f504e8c658bc64f61181e" prot="public" virt="virtual"><scope>costmap_2d::VoxelLayer</scope><name>onFootprintChanged</name></member>
      <member refid="classcostmap__2d_1_1VoxelLayer_1a7b0d5249f27fd757f206493b491fd37a" prot="public" virt="virtual"><scope>costmap_2d::VoxelLayer</scope><name>onInitialize</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a404b9898ed689c8f6b1eb3503c358db0" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>operator=</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a9005fb139b987665bfa799c631953f00" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>origin_x_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a53bc8ed50d62760245f879d66c5567db" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>origin_y_</name></member>
      <member refid="classcostmap__2d_1_1VoxelLayer_1aad266904a064b8ad6b405069247197c7" prot="private" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>origin_z_</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1aa8d27200c8f888b3bda5c4fc087f59a9" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>pointCloud2Callback</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1acad6bfccd40caba4e3357e7b48981c2a" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>pointCloudCallback</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1ad0c6f7cb8e11569a02f873c545acec90" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>polygonOutlineCells</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a04fe55b7286265ff543ad52b0b327642" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>projector_</name></member>
      <member refid="classcostmap__2d_1_1VoxelLayer_1adc6784f95a286962ca829f2b44a4bde5" prot="private" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>publish_voxel_</name></member>
      <member refid="classcostmap__2d_1_1VoxelLayer_1a6f7c914d410df715e01253b3584d9f21" prot="private" virt="virtual"><scope>costmap_2d::VoxelLayer</scope><name>raytraceFreespace</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1af1d619d9b49b6851cb0a33de4e39ec78" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>raytraceLine</name></member>
      <member refid="classcostmap__2d_1_1VoxelLayer_1a2361abd50823db1734c1cc05a70d0c97" prot="private" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>reconfigureCB</name></member>
      <member refid="classcostmap__2d_1_1VoxelLayer_1af5f57588c57a8a5c8dff065b5a76a0db" prot="public" virt="virtual"><scope>costmap_2d::VoxelLayer</scope><name>reset</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1aba344550cbc08bcc3a54c64290f8f568" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>resetMap</name></member>
      <member refid="classcostmap__2d_1_1VoxelLayer_1a56c9a252631b5d4af75c1d17eac8e052" prot="protected" virt="virtual"><scope>costmap_2d::VoxelLayer</scope><name>resetMaps</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a95bae6eccd820a77d8040562e2a51118" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>resizeMap</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a3d74d58b31973def7e407c7300f1115c" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>resolution_</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a55c8ebe46b6d32861819d244fa55d18c" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>rolling_window_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a04cd3558a672159a3ad1b151b1d19661" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>saveMap</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1afb8a42c3810e796107ed04c0ca3cbf90" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>setConvexPolygonCost</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1ae1703900adbbf1e0d929cec0735a8b0e" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>setCost</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a8a9f535f98f1ba4c0a74f88aa706bcd2" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>setDefaultValue</name></member>
      <member refid="classcostmap__2d_1_1VoxelLayer_1a7e9b75bd9cee13aa9f893a17d549fbee" prot="protected" virt="virtual"><scope>costmap_2d::VoxelLayer</scope><name>setupDynamicReconfigure</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a947041f50d5fb1a44c3fd0601c4fc608" prot="private" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>sign</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1aa71bf88a183222496f17b3a95e852e75" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>size_x_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1ad25df12283aa78c43878e24633381100" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>size_y_</name></member>
      <member refid="classcostmap__2d_1_1VoxelLayer_1a2e2db3f79b15d5de8cedb620ee9f7ac0" prot="private" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>size_z_</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a95578ec2f3218aeebe2e95c3088256ca" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>static_clearing_observations_</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a25b798557229f62414d59663b392ea08" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>static_marking_observations_</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a4a977acd639966f447262b5c8837a40f" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>tf_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a33545b79aeec7b554ce21a0b1befb212" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>timestamps_</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1a7ae82ac5b75c5627ded6cda139849f6c" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>touch</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a1a6a5dfdeaf6318a5ce08289a8416295" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>transformed_footprint_</name></member>
      <member refid="classcostmap__2d_1_1VoxelLayer_1a148fc0c859ad2f91a38da4e0f9b221d7" prot="private" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>unknown_threshold_</name></member>
      <member refid="classcostmap__2d_1_1VoxelLayer_1ab28185cd71c8e42f72880b779ef08ae2" prot="public" virt="virtual"><scope>costmap_2d::VoxelLayer</scope><name>updateBounds</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a02fbdf76db69ddc03c400b2c00e903ee" prot="public" virt="virtual"><scope>costmap_2d::VoxelLayer</scope><name>updateCosts</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1ac81261d46ebc829ca1d747c024a00603" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>updateFootprint</name></member>
      <member refid="classcostmap__2d_1_1VoxelLayer_1a91dc901da59c768aea0b25037bf46fef" prot="public" virt="virtual"><scope>costmap_2d::VoxelLayer</scope><name>updateOrigin</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1aadace7301e7b08f358ea3e9e8a17f452" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>updateRaytraceBounds</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1ab76205b8052d66f0096e5942a3ed1530" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>updateWithAddition</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1acd9d236d8d16c8b4a004ae3b1709aa92" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>updateWithMax</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1ac01cf9ead24877e522dece2254c87632" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>updateWithOverwrite</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1adc52dfe36cea8be621d560231e861dbd" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>updateWithTrueOverwrite</name></member>
      <member refid="classcostmap__2d_1_1CostmapLayer_1aeca7c78b12489bcfff974cd60753a6f1" prot="protected" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>useExtraBounds</name></member>
      <member refid="classcostmap__2d_1_1VoxelLayer_1ac069771fd6860767a629f5ac0ab833a4" prot="private" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>voxel_dsrv_</name></member>
      <member refid="classcostmap__2d_1_1VoxelLayer_1aa91df83ab59e1b9ecfbe9f4991bd2eef" prot="private" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>voxel_grid_</name></member>
      <member refid="classcostmap__2d_1_1VoxelLayer_1abc6ca1174128cfc2aca90817128f8ee0" prot="private" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>voxel_pub_</name></member>
      <member refid="classcostmap__2d_1_1VoxelLayer_1a02a7f51ba2b09b61f6ada3d10acf5a20" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>VoxelLayer</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a9a2c824d4cd3bcad3ac3435d81982986" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>worldToMap</name></member>
      <member refid="classcostmap__2d_1_1VoxelLayer_1a0c310e849291ea0c2cde7ca7b3a9e1e1" prot="private" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>worldToMap3D</name></member>
      <member refid="classcostmap__2d_1_1VoxelLayer_1afe388a3645ce14998d2ae2a98a166ad0" prot="private" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>worldToMap3DFloat</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1ae412173f42af7edba9996f86754b7cbf" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>worldToMapEnforceBounds</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a2da39cb06d192795614df9c2bf00692f" prot="public" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>worldToMapNoBounds</name></member>
      <member refid="classcostmap__2d_1_1VoxelLayer_1ac5493b9ea645719260900007cf28e610" prot="private" virt="non-virtual"><scope>costmap_2d::VoxelLayer</scope><name>z_resolution_</name></member>
      <member refid="classcostmap__2d_1_1Costmap2D_1a3087bd649bca6c2fb4f795d433e93f3a" prot="public" virt="virtual"><scope>costmap_2d::VoxelLayer</scope><name>~Costmap2D</name></member>
      <member refid="classcostmap__2d_1_1Layer_1a40154c4ffbc768749e3724728ad96a27" prot="public" virt="virtual"><scope>costmap_2d::VoxelLayer</scope><name>~Layer</name></member>
      <member refid="classcostmap__2d_1_1ObstacleLayer_1a304eaae6240f4404b316c5692d8d4dbf" prot="public" virt="virtual"><scope>costmap_2d::VoxelLayer</scope><name>~ObstacleLayer</name></member>
      <member refid="classcostmap__2d_1_1VoxelLayer_1a783343776ec9c85b62c882b7739fc2b0" prot="public" virt="virtual"><scope>costmap_2d::VoxelLayer</scope><name>~VoxelLayer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
