<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classLaserUpdater" kind="class" language="C++" prot="public">
    <compoundname>LaserUpdater</compoundname>
    <includes refid="laser_2updater_8h" local="no">updater.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classLaserUpdater_1aef7c83e587e53c984c4b1a731a952924" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool LaserUpdater::fit_entities_</definition>
        <argsstring></argsstring>
        <name>fit_entities_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/laser/updater.h" line="90" column="10" bodyfile="include/ed/laser/updater.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classLaserUpdater_1a604fdc8a557c88aed20ff57faf13b042" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double LaserUpdater::max_cluster_size_</definition>
        <argsstring></argsstring>
        <name>max_cluster_size_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/laser/updater.h" line="89" column="12" bodyfile="include/ed/laser/updater.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classLaserUpdater_1aea2143edd6c6c25b936952fcc8215a09" prot="public" static="no" mutable="no">
        <type>uint</type>
        <definition>uint LaserUpdater::max_gap_size_</definition>
        <argsstring></argsstring>
        <name>max_gap_size_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/laser/updater.h" line="91" column="10" bodyfile="include/ed/laser/updater.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classLaserUpdater_1afc7aa066ed304028cb87e1e48fad8912" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double LaserUpdater::min_cluster_size_</definition>
        <argsstring></argsstring>
        <name>min_cluster_size_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/laser/updater.h" line="88" column="12" bodyfile="include/ed/laser/updater.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classLaserUpdater_1ac6d0551ab87b7dd148b55549b0e6a811" prot="public" static="no" mutable="no">
        <type>uint</type>
        <definition>uint LaserUpdater::min_segment_size_pixels_</definition>
        <argsstring></argsstring>
        <name>min_segment_size_pixels_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/laser/updater.h" line="85" column="10" bodyfile="include/ed/laser/updater.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classLaserUpdater_1aef22f71ef36a2c5f343635b22d549833" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double LaserUpdater::segment_depth_threshold_</definition>
        <argsstring></argsstring>
        <name>segment_depth_threshold_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/laser/updater.h" line="87" column="12" bodyfile="include/ed/laser/updater.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classLaserUpdater_1a926b5bc9729d12d5f0b93e6dacb007cd" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double LaserUpdater::world_association_distance_</definition>
        <argsstring></argsstring>
        <name>world_association_distance_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/laser/updater.h" line="86" column="12" bodyfile="include/ed/laser/updater.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classLaserUpdater_1a5ac4da47599709c6847c453e8f7054d3" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>std::string LaserUpdater::lrf_frame_</definition>
        <argsstring></argsstring>
        <name>lrf_frame_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/laser/updater.h" line="114" column="17" bodyfile="include/ed/laser/updater.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classLaserUpdater_1a11e9f36fea5658ee527873882d10cd18" prot="private" static="no" mutable="no">
        <type><ref refid="classgeo_1_1LaserRangeFinder" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::LaserRangeFinder</ref></type>
        <definition>geo::LaserRangeFinder LaserUpdater::lrf_model_</definition>
        <argsstring></argsstring>
        <name>lrf_model_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/laser/updater.h" line="113" column="27" bodyfile="include/ed/laser/updater.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classLaserUpdater_1afb09bdae98eda1a03399cb439f35ea6c" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="classed_1_1UUID" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/ed/tags">ed::UUID</ref>, <ref refid="namespacegeo_1a6c851aec5e98801c86d46d508de5c05d" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D</ref> &gt;</type>
        <definition>std::map&lt;ed::UUID, geo::Pose3D&gt; LaserUpdater::pose_cache</definition>
        <argsstring></argsstring>
        <name>pose_cache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/laser/updater.h" line="116" column="14" bodyfile="include/ed/laser/updater.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classLaserUpdater_1ae0607409ad954e74cffaafa0e17fb9ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LaserUpdater::configure</definition>
        <argsstring>(tue::Configuration &amp;config)</argsstring>
        <name>configure</name>
        <param>
          <type><ref refid="namespacetue_1ac31348f773b334d79767097b90128cd3" kindref="member" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::Configuration</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Configure updater. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration which may contain the following fields: world_association_distance min_segment_size_pixels segment_depth_threshold min_cluster_size max_cluster_size max_gap_size fit_entities Whether or not to fit an entity (0 or 1) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/laser/updater.h" line="33" column="10" bodyfile="src/laser/updater.cpp" bodystart="258" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="classLaserUpdater_1ad7c4b9fbe3400f72df2f220ca6617d7b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LaserUpdater::configureLaserModel</definition>
        <argsstring>(uint num_beams, double angle_min, double angle_max, double range_min, double range_max)</argsstring>
        <name>configureLaserModel</name>
        <param>
          <type>uint</type>
          <declname>num_beams</declname>
        </param>
        <param>
          <type>double</type>
          <declname>angle_min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>angle_max</declname>
        </param>
        <param>
          <type>double</type>
          <declname>range_min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>range_max</declname>
        </param>
        <briefdescription>
<para>configure the LRF model based on a laserscan message </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num_beams</parametername>
</parameternamelist>
<parameterdescription>
<para>number of beams in the lrf model </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle_min</parametername>
</parameternamelist>
<parameterdescription>
<para>angle corresponding to the first beam in radians </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle_max</parametername>
</parameternamelist>
<parameterdescription>
<para>angle corresponding to the final beam in radians </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum distance that can be detected with the lrf in meters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum distance that can be detected with the lrf in meters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/laser/updater.h" line="56" column="10" bodyfile="include/ed/laser/updater.h" bodystart="56" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classLaserUpdater_1ab6e890086aedbe31a2fb419f3f365971" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int LaserUpdater::getNumBeams</definition>
        <argsstring>()</argsstring>
        <name>getNumBeams</name>
        <briefdescription>
<para>get the number of beams of the model </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/laser/updater.h" line="73" column="18" bodyfile="include/ed/laser/updater.h" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classLaserUpdater_1a25b3be53fe298205f2f33d055130d24a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LaserUpdater::renderWorld</definition>
        <argsstring>(const geo::Pose3D &amp;sensor_pose, const ed::WorldModel &amp;world, std::vector&lt; double &gt; &amp;model_ranges)</argsstring>
        <name>renderWorld</name>
        <param>
          <type>const <ref refid="namespacegeo_1a6c851aec5e98801c86d46d508de5c05d" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D</ref> &amp;</type>
          <declname>sensor_pose</declname>
        </param>
        <param>
          <type>const <ref refid="classed_1_1WorldModel" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/ed/tags">ed::WorldModel</ref> &amp;</type>
          <declname>world</declname>
        </param>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; double &gt; &amp;</type>
          <declname>model_ranges</declname>
        </param>
        <briefdescription>
<para>render the worldmodel as would be seen by the lrf. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sensor_pose</parametername>
</parameternamelist>
<parameterdescription>
<para>pose of the lrf to be modeled in the world frame. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">world</parametername>
</parameternamelist>
<parameterdescription>
<para>worldmodel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">model_ranges</parametername>
</parameternamelist>
<parameterdescription>
<para>ranges of distances as would be seen by an lrf </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/laser/updater.h" line="82" column="10" bodyfile="src/laser/updater.cpp" bodystart="451" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="classLaserUpdater_1adab5fa5784685928e83b099a00a63ecc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LaserUpdater::setLaserFrame</definition>
        <argsstring>(const std::string &amp;frame_id)</argsstring>
        <name>setLaserFrame</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>frame_id</declname>
        </param>
        <briefdescription>
<para>set the frame of the laser model </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frame_id</parametername>
</parameternamelist>
<parameterdescription>
<para>frame id of the laser </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/laser/updater.h" line="68" column="17" bodyfile="include/ed/laser/updater.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classLaserUpdater_1a240b3794b3d80a9304c9e97748fe40e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LaserUpdater::update</definition>
        <argsstring>(const ed::WorldModel &amp;world, std::vector&lt; double &gt; &amp;sensor_ranges, const geo::Pose3D &amp;sensor_pose, const double timestamp, ed::UpdateRequest &amp;req)</argsstring>
        <name>update</name>
        <param>
          <type>const <ref refid="classed_1_1WorldModel" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/ed/tags">ed::WorldModel</ref> &amp;</type>
          <declname>world</declname>
        </param>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; double &gt; &amp;</type>
          <declname>sensor_ranges</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegeo_1a6c851aec5e98801c86d46d508de5c05d" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D</ref> &amp;</type>
          <declname>sensor_pose</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>timestamp</declname>
        </param>
        <param>
          <type><ref refid="classed_1_1UpdateRequest" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/ed/tags">ed::UpdateRequest</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
<para>update update the worldmodel based on a novel laserscan message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">world</parametername>
</parameternamelist>
<parameterdescription>
<para>worldmodel to be updated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sensor_ranges</parametername>
</parameternamelist>
<parameterdescription>
<para>distances measured by the lrf </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sensor_pose</parametername>
</parameternamelist>
<parameterdescription>
<para>pose of the lrf sensor at the time of the measurement </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>timestamp of the lrf measurment </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">req</parametername>
</parameternamelist>
<parameterdescription>
<para>update request </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/laser/updater.h" line="44" column="10" bodyfile="src/laser/updater.cpp" bodystart="278" bodyend="449"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classLaserUpdater_1a4fafea0b05a26f09ff0b42d113b5bbb1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LaserUpdater::associate</definition>
        <argsstring>(std::vector&lt; double &gt; &amp;sensor_ranges, const std::vector&lt; double &gt; &amp;model_ranges)</argsstring>
        <name>associate</name>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; double &gt; &amp;</type>
          <declname>sensor_ranges</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; double &gt; &amp;</type>
          <declname>model_ranges</declname>
        </param>
        <briefdescription>
<para>associate: filter sensor information and remove ranges that can be associated with the worldmodel. Leaving only novel data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sensor_ranges</parametername>
</parameternamelist>
<parameterdescription>
<para>distances measured by the lrf </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">model_ranges</parametername>
</parameternamelist>
<parameterdescription>
<para>distances as predicted by the worldmodel. Will be filtered. (associated ranges have value 0.0) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/laser/updater.h" line="100" column="10" bodyfile="src/laser/updater.cpp" bodystart="471" bodyend="482"/>
      </memberdef>
      <memberdef kind="function" id="classLaserUpdater_1a88e4b6f558068e5fcd9624bde8c2dac3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="laser_2updater_8h_1a7244349c9af8a946c2a96d2876393dd7" kindref="member">ScanSegment</ref> &gt;</type>
        <definition>std::vector&lt; ScanSegment &gt; LaserUpdater::segment</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;sensor_ranges)</argsstring>
        <name>segment</name>
        <param>
          <type>const <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; double &gt; &amp;</type>
          <declname>sensor_ranges</declname>
        </param>
        <briefdescription>
<para>divide the sensor ranges into segments </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/laser/updater.h" line="105" column="17" bodyfile="src/laser/updater.cpp" bodystart="484" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="classLaserUpdater_1a49d781c97da70ed92428b862f1169646" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structEntityUpdate" kindref="compound">EntityUpdate</ref></type>
        <definition>EntityUpdate LaserUpdater::segmentToConvexHull</definition>
        <argsstring>(const ScanSegment &amp;segment, const geo::Pose3D &amp;sensor_pose, const std::vector&lt; double &gt; &amp;sensor_ranges)</argsstring>
        <name>segmentToConvexHull</name>
        <param>
          <type>const <ref refid="laser_2updater_8h_1a7244349c9af8a946c2a96d2876393dd7" kindref="member">ScanSegment</ref> &amp;</type>
          <declname>segment</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegeo_1a6c851aec5e98801c86d46d508de5c05d" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D</ref> &amp;</type>
          <declname>sensor_pose</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; double &gt; &amp;</type>
          <declname>sensor_ranges</declname>
        </param>
        <briefdescription>
<para>convert a segment of ranges to a convex hull </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/laser/updater.h" line="110" column="18" bodyfile="src/laser/updater.cpp" bodystart="565" bodyend="613"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4">
        <label>std::vector&lt; double &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="5">
        <label>std::map&lt; ed::UUID, geo::Transform3T &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="1">
        <label>LaserUpdater</label>
        <link refid="classLaserUpdater"/>
        <childnode refid="2" relation="usage">
          <edgelabel>lrf_model_</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>pose_cache</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>lrf_frame_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>geo::LaserRangeFinder</label>
        <link refid="classgeo_1_1LaserRangeFinder" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags"/>
        <childnode refid="3" relation="usage">
          <edgelabel>ray_dirs_</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>angles_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::vector&lt; geo::Vector3 &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="6">
        <label>std::string</label>
        <link refid="cpp/string/basic_string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="include/ed/laser/updater.h" line="18" column="1" bodyfile="include/ed/laser/updater.h" bodystart="17" bodyend="118"/>
    <listofallmembers>
      <member refid="classLaserUpdater_1a4fafea0b05a26f09ff0b42d113b5bbb1" prot="private" virt="non-virtual"><scope>LaserUpdater</scope><name>associate</name></member>
      <member refid="classLaserUpdater_1ae0607409ad954e74cffaafa0e17fb9ec" prot="public" virt="non-virtual"><scope>LaserUpdater</scope><name>configure</name></member>
      <member refid="classLaserUpdater_1ad7c4b9fbe3400f72df2f220ca6617d7b" prot="public" virt="non-virtual"><scope>LaserUpdater</scope><name>configureLaserModel</name></member>
      <member refid="classLaserUpdater_1aef7c83e587e53c984c4b1a731a952924" prot="public" virt="non-virtual"><scope>LaserUpdater</scope><name>fit_entities_</name></member>
      <member refid="classLaserUpdater_1ab6e890086aedbe31a2fb419f3f365971" prot="public" virt="non-virtual"><scope>LaserUpdater</scope><name>getNumBeams</name></member>
      <member refid="classLaserUpdater_1a5ac4da47599709c6847c453e8f7054d3" prot="private" virt="non-virtual"><scope>LaserUpdater</scope><name>lrf_frame_</name></member>
      <member refid="classLaserUpdater_1a11e9f36fea5658ee527873882d10cd18" prot="private" virt="non-virtual"><scope>LaserUpdater</scope><name>lrf_model_</name></member>
      <member refid="classLaserUpdater_1a604fdc8a557c88aed20ff57faf13b042" prot="public" virt="non-virtual"><scope>LaserUpdater</scope><name>max_cluster_size_</name></member>
      <member refid="classLaserUpdater_1aea2143edd6c6c25b936952fcc8215a09" prot="public" virt="non-virtual"><scope>LaserUpdater</scope><name>max_gap_size_</name></member>
      <member refid="classLaserUpdater_1afc7aa066ed304028cb87e1e48fad8912" prot="public" virt="non-virtual"><scope>LaserUpdater</scope><name>min_cluster_size_</name></member>
      <member refid="classLaserUpdater_1ac6d0551ab87b7dd148b55549b0e6a811" prot="public" virt="non-virtual"><scope>LaserUpdater</scope><name>min_segment_size_pixels_</name></member>
      <member refid="classLaserUpdater_1afb09bdae98eda1a03399cb439f35ea6c" prot="private" virt="non-virtual"><scope>LaserUpdater</scope><name>pose_cache</name></member>
      <member refid="classLaserUpdater_1a25b3be53fe298205f2f33d055130d24a" prot="public" virt="non-virtual"><scope>LaserUpdater</scope><name>renderWorld</name></member>
      <member refid="classLaserUpdater_1a88e4b6f558068e5fcd9624bde8c2dac3" prot="private" virt="non-virtual"><scope>LaserUpdater</scope><name>segment</name></member>
      <member refid="classLaserUpdater_1aef22f71ef36a2c5f343635b22d549833" prot="public" virt="non-virtual"><scope>LaserUpdater</scope><name>segment_depth_threshold_</name></member>
      <member refid="classLaserUpdater_1a49d781c97da70ed92428b862f1169646" prot="private" virt="non-virtual"><scope>LaserUpdater</scope><name>segmentToConvexHull</name></member>
      <member refid="classLaserUpdater_1adab5fa5784685928e83b099a00a63ecc" prot="public" virt="non-virtual"><scope>LaserUpdater</scope><name>setLaserFrame</name></member>
      <member refid="classLaserUpdater_1a240b3794b3d80a9304c9e97748fe40e7" prot="public" virt="non-virtual"><scope>LaserUpdater</scope><name>update</name></member>
      <member refid="classLaserUpdater_1a926b5bc9729d12d5f0b93e6dacb007cd" prot="public" virt="non-virtual"><scope>LaserUpdater</scope><name>world_association_distance_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
