<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classLaserPlugin" kind="class" language="C++" prot="public">
    <compoundname>LaserPlugin</compoundname>
    <basecompoundref refid="classed_1_1Plugin" prot="public" virt="non-virtual">ed::Plugin</basecompoundref>
    <includes refid="laser__plugin_8h" local="no">laser_plugin.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classLaserPlugin_1af4a6b825bedce4fd5a903bb7caa5f829" prot="private" static="no" mutable="no">
        <type>ros::CallbackQueue</type>
        <definition>ros::CallbackQueue LaserPlugin::cb_queue_</definition>
        <argsstring></argsstring>
        <name>cb_queue_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/laser/laser_plugin.h" line="35" column="24" bodyfile="src/laser/laser_plugin.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classLaserPlugin_1ad2151cccd5421794a7931d3ad3677fd3" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/queue" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::queue</ref>&lt; sensor_msgs::LaserScan::ConstPtr &gt;</type>
        <definition>std::queue&lt;sensor_msgs::LaserScan::ConstPtr&gt; LaserPlugin::scan_buffer_</definition>
        <argsstring></argsstring>
        <name>scan_buffer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/laser/laser_plugin.h" line="39" column="16" bodyfile="src/laser/laser_plugin.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classLaserPlugin_1adbb50ec8792e38e98e742d18b0eccb50" prot="private" static="no" mutable="no">
        <type>ros::Subscriber</type>
        <definition>ros::Subscriber LaserPlugin::sub_scan_</definition>
        <argsstring></argsstring>
        <name>sub_scan_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/laser/laser_plugin.h" line="37" column="21" bodyfile="src/laser/laser_plugin.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classLaserPlugin_1ad5aea0421598a08a9645deea1db9227c" prot="private" static="no" mutable="no">
        <type><ref refid="classLaserUpdater" kindref="compound">LaserUpdater</ref></type>
        <definition>LaserUpdater LaserPlugin::updater_</definition>
        <argsstring></argsstring>
        <name>updater_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/laser/laser_plugin.h" line="41" column="18" bodyfile="src/laser/laser_plugin.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classLaserPlugin_1af31b0b86a04ff3d0b5b3106a4064b807" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void LaserPlugin::initialize</definition>
        <argsstring>(ed::InitData &amp;init)</argsstring>
        <name>initialize</name>
        <reimplements refid="classed_1_1Plugin_1a1bfd5e21ed97824ce0299550d78ee690">initialize</reimplements>
        <param>
          <type><ref refid="structed_1_1InitData" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/ed/tags">ed::InitData</ref> &amp;</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/laser/laser_plugin.h" line="29" column="10" bodyfile="src/laser/laser_plugin.cpp" bodystart="56" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classLaserPlugin_1a838bc1b5af996df8a3b935b0b79a2aae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LaserPlugin::LaserPlugin</definition>
        <argsstring>()</argsstring>
        <name>LaserPlugin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/laser/laser_plugin.h" line="24" column="5" bodyfile="src/laser/laser_plugin.cpp" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classLaserPlugin_1a4e43757ead57429fae1599b707f1ffdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void LaserPlugin::process</definition>
        <argsstring>(const ed::WorldModel &amp;world, ed::UpdateRequest &amp;req)</argsstring>
        <name>process</name>
        <reimplements refid="classed_1_1Plugin_1a9944219de9a285649d2f16babac1a9b6">process</reimplements>
        <param>
          <type>const <ref refid="classed_1_1WorldModel" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/ed/tags">ed::WorldModel</ref> &amp;</type>
          <declname>world</declname>
        </param>
        <param>
          <type><ref refid="classed_1_1UpdateRequest" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/ed/tags">ed::UpdateRequest</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/laser/laser_plugin.h" line="32" column="10" bodyfile="src/laser/laser_plugin.cpp" bodystart="74" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classLaserPlugin_1a0c63fda9c89a90072ff194508fc9d7ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>LaserPlugin::~LaserPlugin</definition>
        <argsstring>()</argsstring>
        <name>~LaserPlugin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/laser/laser_plugin.h" line="26" column="13" bodyfile="src/laser/laser_plugin.cpp" bodystart="52" bodyend="54"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classLaserPlugin_1a0fc3c62dade9be1211eb95cb7b8e8db3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LaserPlugin::scanCallback</definition>
        <argsstring>(const sensor_msgs::LaserScan::ConstPtr &amp;msg)</argsstring>
        <name>scanCallback</name>
        <param>
          <type>const sensor_msgs::LaserScan::ConstPtr &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/laser/laser_plugin.h" line="43" column="10" bodyfile="src/laser/laser_plugin.cpp" bodystart="152" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classLaserPlugin_1a9737c0cafecc16eeaa317be13cac369f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LaserPlugin::update</definition>
        <argsstring>(const ed::WorldModel &amp;world, const sensor_msgs::LaserScan::ConstPtr &amp;scan, const geo::Pose3D &amp;sensor_pose, ed::UpdateRequest &amp;req)</argsstring>
        <name>update</name>
        <param>
          <type>const <ref refid="classed_1_1WorldModel" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/ed/tags">ed::WorldModel</ref> &amp;</type>
          <declname>world</declname>
        </param>
        <param>
          <type>const sensor_msgs::LaserScan::ConstPtr &amp;</type>
          <declname>scan</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegeo_1a6c851aec5e98801c86d46d508de5c05d" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D</ref> &amp;</type>
          <declname>sensor_pose</declname>
        </param>
        <param>
          <type><ref refid="classed_1_1UpdateRequest" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/ed/tags">ed::UpdateRequest</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
<para>Update the worldmodel based on a novel laserscan message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">world</parametername>
</parameternamelist>
<parameterdescription>
<para>worldmodel to be updated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scan</parametername>
</parameternamelist>
<parameterdescription>
<para>laserscan message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sensor_pose</parametername>
</parameternamelist>
<parameterdescription>
<para>pose of the sensor at the time of the measurement </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">req</parametername>
</parameternamelist>
<parameterdescription>
<para>update request </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/laser/laser_plugin.h" line="53" column="10" bodyfile="src/laser/laser_plugin.cpp" bodystart="129" bodyend="147"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>LaserPlugin</label>
        <link refid="classLaserPlugin"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>ed::Plugin</label>
        <link refid="classed_1_1Plugin" external="/home/docker/ros/noetic/system/build/docs/ed/tags"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>LaserPlugin</label>
        <link refid="classLaserPlugin"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>updater_</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>scan_buffer_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>std::vector&lt; double &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="8">
        <label>std::map&lt; ed::UUID, geo::Transform3T &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="2">
        <label>ed::Plugin</label>
        <link refid="classed_1_1Plugin" external="/home/docker/ros/noetic/system/build/docs/ed/tags"/>
        <childnode refid="3" relation="usage">
          <edgelabel>name_</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>std::queue&lt; sensor_msgs::LaserScan::ConstPtr &gt;</label>
        <link refid="cpp/container/queue" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="4">
        <label>LaserUpdater</label>
        <link refid="classLaserUpdater"/>
        <childnode refid="5" relation="usage">
          <edgelabel>lrf_model_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>pose_cache</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>lrf_frame_</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>geo::LaserRangeFinder</label>
        <link refid="classgeo_1_1LaserRangeFinder" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags"/>
        <childnode refid="6" relation="usage">
          <edgelabel>ray_dirs_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>angles_</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::vector&lt; geo::Vector3 &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="3">
        <label>std::string</label>
        <link refid="cpp/string/basic_string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="src/laser/laser_plugin.h" line="20" column="1" bodyfile="src/laser/laser_plugin.h" bodystart="19" bodyend="55"/>
    <listofallmembers>
      <member refid="classLaserPlugin_1af4a6b825bedce4fd5a903bb7caa5f829" prot="private" virt="non-virtual"><scope>LaserPlugin</scope><name>cb_queue_</name></member>
      <member refid="classed_1_1Plugin_1addb921016bb96c585117a16a925dee48" prot="public" virt="virtual"><scope>LaserPlugin</scope><name>configure</name></member>
      <member refid="classLaserPlugin_1af31b0b86a04ff3d0b5b3106a4064b807" prot="public" virt="virtual"><scope>LaserPlugin</scope><name>initialize</name></member>
      <member refid="classed_1_1Plugin_1ab8c8222e24b842e7c07530954b2c111c" prot="public" virt="virtual" ambiguityscope="ed::Plugin::"><scope>LaserPlugin</scope><name>initialize</name></member>
      <member refid="classLaserPlugin_1a838bc1b5af996df8a3b935b0b79a2aae" prot="public" virt="non-virtual"><scope>LaserPlugin</scope><name>LaserPlugin</name></member>
      <member refid="classed_1_1Plugin_1abb05f88ff813dc16377dcd65772c3467" prot="public" virt="non-virtual"><scope>LaserPlugin</scope><name>name</name></member>
      <member refid="classed_1_1Plugin_1a0e29418d54069f830c87d631136b5c45" prot="private" virt="non-virtual"><scope>LaserPlugin</scope><name>name_</name></member>
      <member refid="classLaserPlugin_1a4e43757ead57429fae1599b707f1ffdf" prot="public" virt="virtual"><scope>LaserPlugin</scope><name>process</name></member>
      <member refid="classed_1_1Plugin_1ab34175eaf82afa34a30dee53afb112a0" prot="public" virt="virtual" ambiguityscope="ed::Plugin::"><scope>LaserPlugin</scope><name>process</name></member>
      <member refid="classLaserPlugin_1ad2151cccd5421794a7931d3ad3677fd3" prot="private" virt="non-virtual"><scope>LaserPlugin</scope><name>scan_buffer_</name></member>
      <member refid="classLaserPlugin_1a0fc3c62dade9be1211eb95cb7b8e8db3" prot="private" virt="non-virtual"><scope>LaserPlugin</scope><name>scanCallback</name></member>
      <member refid="classLaserPlugin_1adbb50ec8792e38e98e742d18b0eccb50" prot="private" virt="non-virtual"><scope>LaserPlugin</scope><name>sub_scan_</name></member>
      <member refid="classed_1_1Plugin_1a3c2f7b0513527158853dbc04ffcc8238" prot="protected" virt="non-virtual"><scope>LaserPlugin</scope><name>tf_buffer_</name></member>
      <member refid="classLaserPlugin_1a9737c0cafecc16eeaa317be13cac369f" prot="private" virt="non-virtual"><scope>LaserPlugin</scope><name>update</name></member>
      <member refid="classLaserPlugin_1ad5aea0421598a08a9645deea1db9227c" prot="private" virt="non-virtual"><scope>LaserPlugin</scope><name>updater_</name></member>
      <member refid="classLaserPlugin_1a0c63fda9c89a90072ff194508fc9d7ed" prot="public" virt="virtual"><scope>LaserPlugin</scope><name>~LaserPlugin</name></member>
      <member refid="classed_1_1Plugin_1adb4c3c434b58bc3741c71f2ae9e7aa3a" prot="public" virt="virtual"><scope>LaserPlugin</scope><name>~Plugin</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
