<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="image__buffer_8cpp" kind="file" language="C++">
    <compoundname>image_buffer.cpp</compoundname>
    <includes refid="image__buffer_8h" local="yes">rgbd/image_buffer/image_buffer.h</includes>
    <includes local="no">geolib/ros/msg_conversions.h</includes>
    <includes local="no">geometry_msgs/TransformStamped.h</includes>
    <includes local="no">rgbd/client.h</includes>
    <includes local="no">rgbd/image.h</includes>
    <includes local="no">ros/rate.h</includes>
    <includes local="no">ros/time.h</includes>
    <includes local="no">tf2_ros/transform_listener.h</includes>
    <incdepgraph>
      <node id="2">
        <label>rgbd/image_buffer/image_buffer.h</label>
        <link refid="image__buffer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>image_buffer.cpp</label>
        <link refid="image__buffer_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ros/rate.h</label>
      </node>
      <node id="13">
        <label>rgbd/client.h</label>
        <link refid="client_8h.html" external="/home/docker/ros/noetic/system/build/docs/rgbd/tags"/>
      </node>
      <node id="8">
        <label>memory</label>
        <link refid="cpp/header/memory" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="5">
        <label>rgbd/types.h</label>
        <link refid="types_8h.html" external="/home/docker/ros/noetic/system/build/docs/rgbd/tags"/>
      </node>
      <node id="16">
        <label>ros/time.h</label>
      </node>
      <node id="9">
        <label>mutex</label>
        <link refid="cpp/header/mutex" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="14">
        <label>rgbd/image.h</label>
        <link refid="image_8h.html" external="/home/docker/ros/noetic/system/build/docs/rgbd/tags"/>
      </node>
      <node id="4">
        <label>geolib/datatypes.h</label>
        <link refid="datatypes_8h.html" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags"/>
      </node>
      <node id="10">
        <label>thread</label>
        <link refid="cpp/header/thread" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="12">
        <label>geometry_msgs/TransformStamped.h</label>
      </node>
      <node id="3">
        <label>ros/callback_queue.h</label>
      </node>
      <node id="11">
        <label>geolib/ros/msg_conversions.h</label>
        <link refid="msg__conversions_8h.html" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags"/>
      </node>
      <node id="7">
        <label>forward_list</label>
        <link refid="cpp/header/forward_list" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="17">
        <label>tf2_ros/transform_listener.h</label>
      </node>
      <node id="6">
        <label>tf2_ros/buffer.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacergbd">rgbd</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="image__buffer_8h" kindref="compound">rgbd/image_buffer/image_buffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="msg__conversions_8h.html" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geolib/ros/msg_conversions.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;geometry_msgs/TransformStamped.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="client_8h.html" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/rgbd/tags">rgbd/client.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="image_8h.html" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/rgbd/tags">rgbd/image.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/rate.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tf2_ros/transform_listener.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacergbd" kindref="compound">rgbd</ref></highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classrgbd_1_1ImageBuffer_1ac9a1ce005603ab3aa1844d4efcd2117b" refkind="member"><highlight class="normal"><ref refid="classrgbd_1_1ImageBuffer_1ac9a1ce005603ab3aa1844d4efcd2117b" kindref="member">ImageBuffer::ImageBuffer</ref>()<sp/>:<sp/>rgbd_client_(nullptr),<sp/>tf_buffer_(),<sp/>tf_listener_(nullptr),<sp/>shutdown_(false)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classrgbd_1_1ImageBuffer_1a0ccba23c66bacca893bbd048e1ba0f97" refkind="member"><highlight class="normal"><ref refid="classrgbd_1_1ImageBuffer_1a0ccba23c66bacca893bbd048e1ba0f97" kindref="member">ImageBuffer::~ImageBuffer</ref>()</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1ImageBuffer_1aa585409de6fb2e9c3ace6dc5c93c1818" kindref="member">shutdown_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classrgbd_1_1ImageBuffer_1a99726f483025ce4ccf493304c2c4cbe3" kindref="member">worker_thread_ptr_</ref>)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1ImageBuffer_1a99726f483025ce4ccf493304c2c4cbe3" kindref="member">worker_thread_ptr_</ref>-&gt;join();</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classrgbd_1_1ImageBuffer_1a44a69eea8b9b7fcc2bba5d9681457958" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrgbd_1_1ImageBuffer_1a44a69eea8b9b7fcc2bba5d9681457958" kindref="member">ImageBuffer::initialize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>topic,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>root_frame,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>worker_thread_frequency)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1ImageBuffer_1a48a9aafee372e0d80269420e415eaeb4" kindref="member">root_frame_</ref><sp/>=<sp/>root_frame;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classrgbd_1_1ImageBuffer_1a9cbf41f01986ec9397714cebb64f454f" kindref="member">rgbd_client_</ref>)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1ImageBuffer_1a9cbf41f01986ec9397714cebb64f454f" kindref="member">rgbd_client_</ref><sp/>=<sp/>std::make_unique&lt;rgbd::Client&gt;();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1ImageBuffer_1a9cbf41f01986ec9397714cebb64f454f" kindref="member">rgbd_client_</ref>-&gt;initialize(topic);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classrgbd_1_1ImageBuffer_1abde126b740beed96f98c4c82dc3948fb" kindref="member">tf_listener_</ref>)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1ImageBuffer_1abde126b740beed96f98c4c82dc3948fb" kindref="member">tf_listener_</ref><sp/>=<sp/>std::make_unique&lt;tf2_ros::TransformListener&gt;(<ref refid="classrgbd_1_1ImageBuffer_1a7c97af830778f38a09c1c594fb2b81a4" kindref="member">tf_buffer_</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1ImageBuffer_1a99726f483025ce4ccf493304c2c4cbe3" kindref="member">worker_thread_ptr_</ref><sp/>=<sp/>std::make_unique&lt;std::thread&gt;(&amp;<ref refid="classrgbd_1_1ImageBuffer_1ac5c13e98fbeb51095d923d3007a589f8" kindref="member">ImageBuffer::workerThreadFunc</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>worker_thread_frequency);</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classrgbd_1_1ImageBuffer_1af3858657267ea27205538d9773fb3452" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classrgbd_1_1ImageBuffer_1af3858657267ea27205538d9773fb3452" kindref="member">ImageBuffer::waitForRecentImage</ref>(<ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">rgbd::ImageConstPtr</ref>&amp;<sp/>image,<sp/><ref refid="classgeo_1_1Transform3T" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D</ref>&amp;<sp/>sensor_pose,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeout_sec,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>check_rate)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classrgbd_1_1ImageBuffer_1a9cbf41f01986ec9397714cebb64f454f" kindref="member">rgbd_client_</ref>)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR_NAMED(</highlight><highlight class="stringliteral">&quot;image_buffer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[IMAGE_BUFFER]<sp/>No<sp/>RGBD<sp/>client&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>until<sp/>we<sp/>get<sp/>a<sp/>new<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Time<sp/>t_start<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Time<sp/>t_end<sp/>=<sp/>t_start<sp/>+<sp/>ros::Duration(timeout_sec);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_rate<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_DEBUG_STREAM_NAMED(</highlight><highlight class="stringliteral">&quot;iamge_buffer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[IMAGE_BUFFER](waitForRecentImage)<sp/>defaulting<sp/>to<sp/>10Hz<sp/>instead<sp/>of<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>check_rate<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_rate<sp/>=<sp/>10.;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Rate<sp/>r(check_rate);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">rgbd::ImageConstPtr</ref><sp/>rgbd_image;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rgbd_image<sp/>=<sp/><ref refid="classrgbd_1_1ImageBuffer_1a9cbf41f01986ec9397714cebb64f454f" kindref="member">rgbd_client_</ref>-&gt;nextImage();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rgbd_image)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ros::Time::now()<sp/>&gt;<sp/>t_end)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR_NAMED(</highlight><highlight class="stringliteral">&quot;image_buffer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[IMAGE_BUFFER]<sp/>timeout<sp/>waiting<sp/>for<sp/>rgbd<sp/>image&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.sleep();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(ros::ok());<sp/></highlight><highlight class="comment">//<sp/>Give<sp/>it<sp/>minimal<sp/>one<sp/>go</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>until<sp/>we<sp/>have<sp/>a<sp/>tf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classrgbd_1_1ImageBuffer_1a7c97af830778f38a09c1c594fb2b81a4" kindref="member">tf_buffer_</ref>.canTransform(<ref refid="classrgbd_1_1ImageBuffer_1a48a9aafee372e0d80269420e415eaeb4" kindref="member">root_frame_</ref>,<sp/>rgbd_image-&gt;getFrameId(),<sp/>ros::Time(rgbd_image-&gt;getTimestamp())))<sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>TF<sp/>when<sp/>it<sp/>is<sp/>available<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classrgbd_1_1ImageBuffer_1a7c97af830778f38a09c1c594fb2b81a4" kindref="member">tf_buffer_</ref>.canTransform(<ref refid="classrgbd_1_1ImageBuffer_1a48a9aafee372e0d80269420e415eaeb4" kindref="member">root_frame_</ref>,<sp/>rgbd_image-&gt;getFrameId(),<sp/>ros::Time(rgbd_image-&gt;getTimestamp()),<sp/>t_end<sp/>-<sp/>ros::Time::now()))</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR_THROTTLE_NAMED(5,<sp/></highlight><highlight class="stringliteral">&quot;image_buffer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[IMAGE_BUFFER]<sp/>timeout<sp/>waiting<sp/>for<sp/>tf&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>tf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::TransformStamped<sp/>t_sensor_pose<sp/>=<sp/><ref refid="classrgbd_1_1ImageBuffer_1a7c97af830778f38a09c1c594fb2b81a4" kindref="member">tf_buffer_</ref>.lookupTransform(<ref refid="classrgbd_1_1ImageBuffer_1a48a9aafee372e0d80269420e415eaeb4" kindref="member">root_frame_</ref>,<sp/>rgbd_image-&gt;getFrameId(),<sp/>ros::Time(rgbd_image-&gt;getTimestamp()));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegeo_1a91908a364354e736f2701a214ec9ded6" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::convert</ref>(t_sensor_pose.transform,<sp/>sensor_pose);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(tf2::TransformException&amp;<sp/>ex)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR_NAMED(</highlight><highlight class="stringliteral">&quot;image_buffer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[IMAGE_BUFFER]<sp/>Could<sp/>not<sp/>get<sp/>sensor<sp/>pose:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>from<sp/>ROS<sp/>coordinate<sp/>frame<sp/>to<sp/>geolib<sp/>coordinate<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>sensor_pose.<ref refid="classgeo_1_1Transform3T_1ae4c3d14cc73485f238264bd4520a2821" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">R</ref><sp/>=<sp/>sensor_pose.<ref refid="classgeo_1_1Transform3T_1ae4c3d14cc73485f238264bd4520a2821" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">R</ref><sp/>*<sp/><ref refid="namespacegeo_1a84316f2530448c688a6f17fc5c727ad7" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Matrix3</ref>(1,<sp/>0,<sp/>0,<sp/>0,<sp/>-1,<sp/>0,<sp/>0,<sp/>0,<sp/>-1);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>image<sp/>=<sp/>rgbd_image;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="classrgbd_1_1ImageBuffer_1a73fff6ba9aac1138261c74f2a4efd135" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classrgbd_1_1ImageBuffer_1af3858657267ea27205538d9773fb3452" kindref="member">ImageBuffer::waitForRecentImage</ref>(<ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">rgbd::ImageConstPtr</ref>&amp;<sp/>image,<sp/><ref refid="classgeo_1_1Transform3T" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D</ref>&amp;<sp/>sensor_pose,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeout_sec,<sp/>uint<sp/>timeout_tries)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout_tries<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_DEBUG_STREAM_NAMED(</highlight><highlight class="stringliteral">&quot;iamge_buffer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[IMAGE_BUFFER](waitForRecentImage)<sp/>defaulting<sp/>to<sp/>25<sp/>tries<sp/>instead<sp/>of<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>timeout_tries<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout_tries<sp/>=<sp/>25;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freq<sp/>=<sp/>timeout_sec<sp/>&gt;<sp/>0<sp/>?<sp/>timeout_tries/timeout_sec<sp/>:<sp/>1000;<sp/></highlight><highlight class="comment">//<sp/>In<sp/>case<sp/>of<sp/>no<sp/>timeout,<sp/>there<sp/>will<sp/>be<sp/>no<sp/>sleeping,<sp/>so<sp/>arbitrary<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrgbd_1_1ImageBuffer_1af3858657267ea27205538d9773fb3452" kindref="member">waitForRecentImage</ref>(image,<sp/>sensor_pose,<sp/>timeout_sec,<sp/>freq);</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classrgbd_1_1ImageBuffer_1a3dcce8079cd2748e448e6c91a3df4c7e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classrgbd_1_1ImageBuffer_1a3dcce8079cd2748e448e6c91a3df4c7e" kindref="member">ImageBuffer::nextImage</ref>(<ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">rgbd::ImageConstPtr</ref>&amp;<sp/>image,<sp/><ref refid="classgeo_1_1Transform3T" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D</ref>&amp;<sp/>sensor_pose)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/thread/lock_guard" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::lock_guard&lt;std::mutex&gt;</ref><sp/>lg(<ref refid="classrgbd_1_1ImageBuffer_1a1e1a1840af63ff0533c95026f0b65900" kindref="member">recent_image_mutex_</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classrgbd_1_1ImageBuffer_1a9c776f137e740138be93cdf4380e9bf2" kindref="member">recent_image_</ref>.first)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_DEBUG(</highlight><highlight class="stringliteral">&quot;[IMAGE_BUFFER]<sp/>No<sp/>new<sp/>image&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>image<sp/>=<sp/><ref refid="classrgbd_1_1ImageBuffer_1a9c776f137e740138be93cdf4380e9bf2" kindref="member">recent_image_</ref>.first;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>sensor_pose<sp/>=<sp/><ref refid="classrgbd_1_1ImageBuffer_1a9c776f137e740138be93cdf4380e9bf2" kindref="member">recent_image_</ref>.second;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1ImageBuffer_1a9c776f137e740138be93cdf4380e9bf2" kindref="member">recent_image_</ref>.first.reset();<sp/></highlight><highlight class="comment">//<sp/>Invalidate<sp/>the<sp/>most<sp/>recent<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="classrgbd_1_1ImageBuffer_1adaa29c0bf5f276d42cf636a1b30c5331" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classrgbd_1_1ImageBuffer_1adaa29c0bf5f276d42cf636a1b30c5331" kindref="member">ImageBuffer::getMostRecentImageTF</ref>()</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classrgbd_1_1ImageBuffer_1a9cbf41f01986ec9397714cebb64f454f" kindref="member">rgbd_client_</ref>)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR_NAMED(</highlight><highlight class="stringliteral">&quot;image_buffer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[IMAGE_BUFFER]<sp/>No<sp/>RGBD<sp/>client&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fetch<sp/>kinect<sp/>image<sp/>and<sp/>place<sp/>in<sp/>image<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">rgbd::ImageConstPtr</ref><sp/>new_image<sp/>=<sp/><ref refid="classrgbd_1_1ImageBuffer_1a9cbf41f01986ec9397714cebb64f454f" kindref="member">rgbd_client_</ref>-&gt;nextImage();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_image)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1ImageBuffer_1a57d5343909f01cbbb86f6eeea444c744" kindref="member">image_buffer_</ref>.push_front(new_image);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_DEBUG_STREAM_NAMED(</highlight><highlight class="stringliteral">&quot;image_buffer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[IMAGE_BUFFER]<sp/>New<sp/>image<sp/>from<sp/>the<sp/>RGBD<sp/>client<sp/>with<sp/>timestamp:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/fixed" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::fixed</ref><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/setprecision" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::setprecision</ref>(12)<sp/>&lt;&lt;<sp/>new_image-&gt;getTimestamp());</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_DEBUG_NAMED(</highlight><highlight class="stringliteral">&quot;image_buffer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[IMAGE_BUFFER]<sp/>No<sp/>new<sp/>image<sp/>from<sp/>the<sp/>RGBD<sp/>client&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Transform3T" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D</ref><sp/>sensor_pose;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="cpp/container/forward_list" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::forward_list&lt;rgbd::ImageConstPtr&gt;::iterator</ref><sp/>it<sp/>=<sp/><ref refid="classrgbd_1_1ImageBuffer_1a57d5343909f01cbbb86f6eeea444c744" kindref="member">image_buffer_</ref>.begin();<sp/>it<sp/>!=<sp/><ref refid="classrgbd_1_1ImageBuffer_1a57d5343909f01cbbb86f6eeea444c744" kindref="member">image_buffer_</ref>.end();<sp/>++it)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">rgbd::ImageConstPtr</ref>&amp;<sp/>rgbd_image<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::TransformStamped<sp/>t_sensor_pose<sp/>=<sp/><ref refid="classrgbd_1_1ImageBuffer_1a7c97af830778f38a09c1c594fb2b81a4" kindref="member">tf_buffer_</ref>.lookupTransform(<ref refid="classrgbd_1_1ImageBuffer_1a48a9aafee372e0d80269420e415eaeb4" kindref="member">root_frame_</ref>,<sp/>rgbd_image-&gt;getFrameId(),<sp/>ros::Time(rgbd_image-&gt;getTimestamp()));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegeo_1a91908a364354e736f2701a214ec9ded6" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::convert</ref>(t_sensor_pose.transform,<sp/>sensor_pose);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(tf2::ExtrapolationException&amp;<sp/>ex)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>we<sp/>have<sp/>to<sp/>check<sp/>if<sp/>the<sp/>error<sp/>was<sp/>an<sp/>interpolation<sp/>or<sp/>extrapolation<sp/>error<sp/>(i.e.,<sp/>the<sp/>image<sp/>is<sp/>too<sp/>old<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>new,<sp/>respectively).<sp/>If<sp/>it<sp/>is<sp/>too<sp/>old,<sp/>discard<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::TransformStamped<sp/>latest_sensor_pose<sp/>=<sp/><ref refid="classrgbd_1_1ImageBuffer_1a7c97af830778f38a09c1c594fb2b81a4" kindref="member">tf_buffer_</ref>.lookupTransform(<ref refid="classrgbd_1_1ImageBuffer_1a48a9aafee372e0d80269420e415eaeb4" kindref="member">root_frame_</ref>,<sp/>rgbd_image-&gt;getFrameId(),<sp/>ros::Time(0));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>image<sp/>time<sp/>stamp<sp/>is<sp/>older<sp/>than<sp/>latest<sp/>transform,<sp/>the<sp/>image<sp/>is<sp/>too<sp/>old<sp/>and<sp/>the<sp/>tf<sp/>data<sp/>is<sp/>not<sp/>available<sp/>anymore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>latest_sensor_pose.header.stamp<sp/>&gt;<sp/>ros::Time(rgbd_image-&gt;getTimestamp())<sp/>)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_DEBUG_STREAM_NAMED(</highlight><highlight class="stringliteral">&quot;image_buffer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[IMAGE_BUFFER]<sp/>Image<sp/>too<sp/>old<sp/>to<sp/>look-up<sp/>tf.<sp/>Deleting<sp/>all<sp/>images<sp/>older<sp/>than<sp/>timestamp:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/fixed" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::fixed</ref></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>ros::Time(rgbd_image-&gt;getTimestamp()));</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Deleting<sp/>this<sp/>image<sp/>and<sp/>all<sp/>older<sp/>images</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1ImageBuffer_1a57d5343909f01cbbb86f6eeea444c744" kindref="member">image_buffer_</ref>.erase_after(it,<sp/><ref refid="classrgbd_1_1ImageBuffer_1a57d5343909f01cbbb86f6eeea444c744" kindref="member">image_buffer_</ref>.end());</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Image<sp/>is<sp/>too<sp/>new;<sp/>continue<sp/>to<sp/>next<sp/>image,<sp/>which<sp/>is<sp/>older</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_DEBUG_STREAM_DELAYED_THROTTLE_NAMED(10,<sp/></highlight><highlight class="stringliteral">&quot;image_buffer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[IMAGE_BUFFER]<sp/>Image<sp/>too<sp/>new<sp/>to<sp/>look-up<sp/>tf:<sp/>image<sp/>timestamp:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/fixed" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::fixed</ref><sp/>&lt;&lt;<sp/>ros::Time(rgbd_image-&gt;getTimestamp())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>what:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ex.what());</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(tf2::TransformException&amp;<sp/>ex)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR_DELAYED_THROTTLE_NAMED(10,<sp/></highlight><highlight class="stringliteral">&quot;image_buffer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[IMAGE_BUFFER]<sp/>Could<sp/>not<sp/>get<sp/>latest<sp/>sensor<sp/>pose<sp/>(probably<sp/>because<sp/>tf<sp/>is<sp/>still<sp/>initializing):<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_DEBUG_NAMED(</highlight><highlight class="stringliteral">&quot;image_buffer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[IMAGE_BUFFER]<sp/>Could<sp/>not<sp/>get<sp/>latest<sp/>sensor<sp/>pose<sp/>(probably<sp/>because<sp/>tf<sp/>is<sp/>still<sp/>initializing):<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(tf2::TransformException&amp;<sp/>ex)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR_DELAYED_THROTTLE_NAMED(10,<sp/></highlight><highlight class="stringliteral">&quot;image_buffer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[IMAGE_BUFFER]<sp/>Could<sp/>not<sp/>get<sp/>sensor<sp/>pose:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_WARN_NAMED(</highlight><highlight class="stringliteral">&quot;image_buffer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[IMAGE_BUFFER]<sp/>Could<sp/>not<sp/>get<sp/>sensor<sp/>pose:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>from<sp/>ROS<sp/>coordinate<sp/>frame<sp/>to<sp/>geolib<sp/>coordinate<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_pose.<ref refid="classgeo_1_1Transform3T_1ae4c3d14cc73485f238264bd4520a2821" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">R</ref><sp/>=<sp/>sensor_pose.<ref refid="classgeo_1_1Transform3T_1ae4c3d14cc73485f238264bd4520a2821" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">R</ref><sp/>*<sp/><ref refid="namespacegeo_1a84316f2530448c688a6f17fc5c727ad7" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Matrix3</ref>(1,<sp/>0,<sp/>0,<sp/>0,<sp/>-1,<sp/>0,<sp/>0,<sp/>0,<sp/>-1);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/thread/lock_guard" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::lock_guard&lt;std::mutex&gt;</ref><sp/>lg(<ref refid="classrgbd_1_1ImageBuffer_1a1e1a1840af63ff0533c95026f0b65900" kindref="member">recent_image_mutex_</ref>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1ImageBuffer_1a9c776f137e740138be93cdf4380e9bf2" kindref="member">recent_image_</ref>.first<sp/>=<sp/>rgbd_image;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1ImageBuffer_1a9c776f137e740138be93cdf4380e9bf2" kindref="member">recent_image_</ref>.second<sp/>=<sp/>sensor_pose;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Deleting<sp/>this<sp/>image<sp/>and<sp/>all<sp/>older<sp/>images</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrgbd_1_1ImageBuffer_1a57d5343909f01cbbb86f6eeea444c744" kindref="member">image_buffer_</ref>.erase_after(it,<sp/><ref refid="classrgbd_1_1ImageBuffer_1a57d5343909f01cbbb86f6eeea444c744" kindref="member">image_buffer_</ref>.end());</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>been<sp/>able<sp/>to<sp/>update<sp/>the<sp/>most<sp/>recent<sp/>image/TF<sp/>combo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="classrgbd_1_1ImageBuffer_1ac5c13e98fbeb51095d923d3007a589f8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrgbd_1_1ImageBuffer_1ac5c13e98fbeb51095d923d3007a589f8" kindref="member">ImageBuffer::workerThreadFunc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>frequency)</highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Rate<sp/>r(frequency);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!<ref refid="classrgbd_1_1ImageBuffer_1aa585409de6fb2e9c3ace6dc5c93c1818" kindref="member">shutdown_</ref>)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classrgbd_1_1ImageBuffer_1adaa29c0bf5f276d42cf636a1b30c5331" kindref="member">getMostRecentImageTF</ref>())</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR_DELAYED_THROTTLE_NAMED(5,<sp/></highlight><highlight class="stringliteral">&quot;image_buffer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[IMAGE_BUFFER]<sp/>Could<sp/>not<sp/>get<sp/>a<sp/>pose<sp/>for<sp/>any<sp/>image<sp/>in<sp/>the<sp/>buffer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.sleep();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>rgbd</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/image_buffer.cpp"/>
  </compounddef>
</doxygen>
