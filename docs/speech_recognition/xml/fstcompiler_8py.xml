<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="fstcompiler_8py" kind="file" language="Python">
    <compoundname>fstcompiler.py</compoundname>
    <innerclass refid="classfstcompiler_1_1FstCompiler" prot="public">fstcompiler::FstCompiler</innerclass>
    <innernamespace refid="namespacebuiltins">builtins</innernamespace>
    <innernamespace refid="namespacefstcompiler">fstcompiler</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacefstcompiler" refkind="compound"><highlight class="comment">#!<sp/>/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Python<sp/>2/3<sp/>compatibility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>(absolute_import,<sp/>division,</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_function,<sp/>unicode_literals)</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>builtins<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="classfstcompiler_1_1FstCompiler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfstcompiler_1_1FstCompiler" kindref="compound">FstCompiler</ref>:</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;A<sp/>class<sp/>to<sp/>generate<sp/>fst<sp/>binaries<sp/>from<sp/>raw<sp/>text<sp/>files<sp/>or<sp/>strings&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classfstcompiler_1_1FstCompiler_1a15cedf63123e349412b98d33f008d4be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfstcompiler_1_1FstCompiler_1a15cedf63123e349412b98d33f008d4be" kindref="member">__init__</ref>(self,<sp/>fpath,<sp/>outpath):</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>os.path.exists(fpath):</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfstcompiler_1_1FstCompiler_1a0fa3c0f1ec3061219809dc6ca914ca22" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;File<sp/>path<sp/>&apos;{}&apos;<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal">.format(fpath))</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classfstcompiler_1_1FstCompiler_1aea42b66d4f517aa98eadc198d6ad4818" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfstcompiler_1_1FstCompiler_1aea42b66d4f517aa98eadc198d6ad4818" kindref="member">fpath</ref><sp/>=<sp/>fpath</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>os.path.isdir(outpath):</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfstcompiler_1_1FstCompiler_1ae68656d2349ef91ebdac2a83fb12347a" kindref="member">warning</ref>(</highlight><highlight class="stringliteral">&quot;&apos;{}&apos;<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal">.format(outpath))</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.makedirs(outpath)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classfstcompiler_1_1FstCompiler_1a5efd32d0e9e1c8e903e65795144fc72c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfstcompiler_1_1FstCompiler_1a5efd32d0e9e1c8e903e65795144fc72c" kindref="member">outpath</ref><sp/>=<sp/>outpath</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fname_split<sp/>=<sp/>os.path.basename(fpath).split(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fname<sp/>=<sp/>fname_split[0]</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fstype<sp/>=<sp/>fname_split[1]</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fext<sp/>=<sp/>fname_split[2]</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>fext<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfstcompiler_1_1FstCompiler_1a0fa3c0f1ec3061219809dc6ca914ca22" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;Incorrect<sp/>extension<sp/>&apos;{}&apos;<sp/>of<sp/>&apos;{}&apos;.<sp/>Need<sp/>&apos;.txt&apos;<sp/>file&quot;</highlight><highlight class="normal">.format(fext,<sp/>fpath))</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>(fstype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;fsa&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>fstype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;fst&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfstcompiler_1_1FstCompiler_1a0fa3c0f1ec3061219809dc6ca914ca22" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>fst<sp/>type<sp/>&apos;{}&apos;<sp/>in<sp/>&apos;{}&apos;.<sp/>Should<sp/>either<sp/>be<sp/>&apos;fst&apos;<sp/>or<sp/>&apos;fsa&apos;&quot;</highlight><highlight class="normal">.format(fstype,<sp/>fpath))</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfstcompiler_1_1FstCompiler_1a0fa3c0f1ec3061219809dc6ca914ca22" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;Error!<sp/>Incorrect<sp/>input<sp/>file<sp/>&apos;{}&apos;.<sp/>Check<sp/>usage<sp/>to<sp/>understand<sp/>the<sp/>correct<sp/>file<sp/>input&quot;</highlight><highlight class="normal">.format(fpath))</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classfstcompiler_1_1FstCompiler_1a51910ec06c8e1cb2a17de57873636101" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfstcompiler_1_1FstCompiler_1a51910ec06c8e1cb2a17de57873636101" kindref="member">fname</ref><sp/>=<sp/>fname</highlight></codeline>
<codeline lineno="41" refid="classfstcompiler_1_1FstCompiler_1ada92c248abae592660c8fc125a19f9d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfstcompiler_1_1FstCompiler_1ada92c248abae592660c8fc125a19f9d9" kindref="member">fstype</ref><sp/>=<sp/>fstype</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classfstcompiler_1_1FstCompiler_1adb68d222de281dbdf7b132359866227b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfstcompiler_1_1FstCompiler_1adb68d222de281dbdf7b132359866227b" kindref="member">fsFile</ref><sp/>=<sp/>os.path.join(self.<ref refid="classfstcompiler_1_1FstCompiler_1a5efd32d0e9e1c8e903e65795144fc72c" kindref="member">outpath</ref>,<sp/>self.<ref refid="classfstcompiler_1_1FstCompiler_1a51910ec06c8e1cb2a17de57873636101" kindref="member">fname</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classfstcompiler_1_1FstCompiler_1ada92c248abae592660c8fc125a19f9d9" kindref="member">fstype</ref>)</highlight></codeline>
<codeline lineno="44" refid="classfstcompiler_1_1FstCompiler_1ae16559df5d12e7836629eb39e7083696" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfstcompiler_1_1FstCompiler_1ae16559df5d12e7836629eb39e7083696" kindref="member">isymsFile</ref><sp/>=<sp/>os.path.join(self.<ref refid="classfstcompiler_1_1FstCompiler_1a5efd32d0e9e1c8e903e65795144fc72c" kindref="member">outpath</ref>,<sp/>self.<ref refid="classfstcompiler_1_1FstCompiler_1a51910ec06c8e1cb2a17de57873636101" kindref="member">fname</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.isyms&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="45" refid="classfstcompiler_1_1FstCompiler_1a47f08391aab44ac886a4a40713b0956a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfstcompiler_1_1FstCompiler_1a47f08391aab44ac886a4a40713b0956a" kindref="member">osymsFile</ref><sp/>=<sp/>os.path.join(self.<ref refid="classfstcompiler_1_1FstCompiler_1a5efd32d0e9e1c8e903e65795144fc72c" kindref="member">outpath</ref>,<sp/>self.<ref refid="classfstcompiler_1_1FstCompiler_1a51910ec06c8e1cb2a17de57873636101" kindref="member">fname</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.osyms&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classfstcompiler_1_1FstCompiler_1a7824eec20d5b09dbd235b2ff0d052739" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfstcompiler_1_1FstCompiler_1a7824eec20d5b09dbd235b2ff0d052739" kindref="member">generateSymsFiles</ref>(self):</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Method<sp/>to<sp/>generate<sp/>the<sp/>symbols<sp/>files<sp/>isyms<sp/>and<sp/>osyms&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classfstcompiler_1_1FstCompiler_1a7493709bf6c46ef7d36b17bf18a83616" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfstcompiler_1_1FstCompiler_1a7493709bf6c46ef7d36b17bf18a83616" kindref="member">isymsFileHandle</ref><sp/>=<sp/>open(self.<ref refid="classfstcompiler_1_1FstCompiler_1ae16559df5d12e7836629eb39e7083696" kindref="member">isymsFile</ref>,<sp/></highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfstcompiler_1_1FstCompiler_1a7493709bf6c46ef7d36b17bf18a83616" kindref="member">isymsFileHandle</ref>.write(</highlight><highlight class="stringliteral">&quot;-<sp/>0&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>FSAs<sp/>have<sp/>only<sp/>one<sp/>field,<sp/>hence<sp/>2<sp/>by<sp/>default<sp/>is<sp/>added</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classfstcompiler_1_1FstCompiler_1a6de2f4cd6f14590abb17d1057dab969c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfstcompiler_1_1FstCompiler_1a6de2f4cd6f14590abb17d1057dab969c" kindref="member">fieldFileDict</ref><sp/>=<sp/>{2:<sp/>self.<ref refid="classfstcompiler_1_1FstCompiler_1a7493709bf6c46ef7d36b17bf18a83616" kindref="member">isymsFileHandle</ref>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>FSTs<sp/>have<sp/>two<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classfstcompiler_1_1FstCompiler_1ada92c248abae592660c8fc125a19f9d9" kindref="member">fstype</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;fst&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58" refid="classfstcompiler_1_1FstCompiler_1a3e849807f1320d126ad83239cdc9e151" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfstcompiler_1_1FstCompiler_1a3e849807f1320d126ad83239cdc9e151" kindref="member">osymsFileHandle</ref><sp/>=<sp/>open(self.<ref refid="classfstcompiler_1_1FstCompiler_1a47f08391aab44ac886a4a40713b0956a" kindref="member">osymsFile</ref>,<sp/></highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfstcompiler_1_1FstCompiler_1a3e849807f1320d126ad83239cdc9e151" kindref="member">osymsFileHandle</ref>.write(</highlight><highlight class="stringliteral">&quot;-<sp/>0&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfstcompiler_1_1FstCompiler_1a6de2f4cd6f14590abb17d1057dab969c" kindref="member">fieldFileDict</ref>[3]<sp/>=<sp/>self.<ref refid="classfstcompiler_1_1FstCompiler_1a3e849807f1320d126ad83239cdc9e151" kindref="member">osymsFileHandle</ref></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Read<sp/>the<sp/>raw<sp/>text<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(self.<ref refid="classfstcompiler_1_1FstCompiler_1aea42b66d4f517aa98eadc198d6ad4818" kindref="member">fpath</ref>,<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>fsfiletxt:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/>=<sp/>fsfiletxt.readlines()</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/>=<sp/>[line.strip().split(</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lines]</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>index<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classfstcompiler_1_1FstCompiler_1a6de2f4cd6f14590abb17d1057dab969c" kindref="member">fieldFileDict</ref>:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fh<sp/>=<sp/>self.<ref refid="classfstcompiler_1_1FstCompiler_1a6de2f4cd6f14590abb17d1057dab969c" kindref="member">fieldFileDict</ref>[index]</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field_count<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lines:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field<sp/>=<sp/>line[index]</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fh.write(</highlight><highlight class="stringliteral">&quot;{}<sp/>{}&quot;</highlight><highlight class="normal">.format(field_count<sp/>+<sp/>1,<sp/>field))</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fh.close()</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classfstcompiler_1_1FstCompiler_1a04fe1ff3d82ea2a9f3cd4efc0b27e1f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfstcompiler_1_1FstCompiler_1a04fe1ff3d82ea2a9f3cd4efc0b27e1f5" kindref="member">compile</ref>(self):</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Method<sp/>to<sp/>compile<sp/>FSA/FST<sp/>after<sp/>generating<sp/>symbols<sp/>files<sp/>using</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generateSymsFiles&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classfstcompiler_1_1FstCompiler_1a0fa3c0f1ec3061219809dc6ca914ca22" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfstcompiler_1_1FstCompiler_1a0fa3c0f1ec3061219809dc6ca914ca22" kindref="member">error</ref>(self,<sp/>*args,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Error<sp/>function<sp/>of<sp/>FstCompiler<sp/>class&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;[Kaldi-Grammar_Parser]&quot;</highlight><highlight class="normal">,<sp/>*args,<sp/>file=sys.stderr,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.exit(1)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="classfstcompiler_1_1FstCompiler_1ae68656d2349ef91ebdac2a83fb12347a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfstcompiler_1_1FstCompiler_1ae68656d2349ef91ebdac2a83fb12347a" kindref="member">warning</ref>(self,<sp/>*args,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Warning<sp/>method<sp/>of<sp/>FstCompiler<sp/>class&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;[Kaldi-Grammar_Parser]&quot;</highlight><highlight class="normal">,<sp/>*args,<sp/>file=sys.stdout,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(sys.argv)<sp/>&lt;<sp/>3<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;-h&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sys.argv<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;--help&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sys.argv:</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Usage:<sp/>python<sp/>makeSymbols<sp/>file<sp/>fieldNumber</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file:<sp/>the<sp/>textual<sp/>FST/FSA<sp/>file<sp/>(.fst.txt<sp/>or<sp/>.fsa.txt<sp/>usually),<sp/>to<sp/>extract<sp/>the<sp/>symbols<sp/>from</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldNumber:<sp/>which<sp/>column<sp/>of<sp/>the<sp/>file<sp/>to<sp/>take<sp/>symbols<sp/>from</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input<sp/>symbols<sp/>use<sp/>fieldNumber<sp/>of<sp/>2</highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>symbols<sp/>use<sp/>fieldNumber<sp/>of<sp/>3</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>Symbols<sp/>Table<sp/>is<sp/>output<sp/>to<sp/>standard<sp/>out,<sp/>and<sp/>can<sp/>be<sp/>piped<sp/>into<sp/>a<sp/>file</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.exit(1)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="111" refid="namespacefstcompiler_1a9a46856000d7e98b6f8f53e07839feb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fname<sp/>=<sp/>sys.argv[1]</highlight></codeline>
<codeline lineno="112" refid="namespacefstcompiler_1aea723e80514c65f554c75631ce56ade0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldNumber<sp/>=<sp/>int(sys.argv[2])</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="namespacefstcompiler_1a6a565b424fd891e194b92326e8b49164" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>sym_gen<sp/>=<sp/>FsSymbolGenerator(fname,<sp/>fieldNumber)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>sym_gen.generate()</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="egs/cfg2/fstcompiler.py"/>
  </compounddef>
</doxygen>
