<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classspeech__recognition_1_1kaldi__grammar_1_1Grammar" kind="class" language="Python" prot="public">
    <compoundname>speech_recognition::kaldi_grammar::Grammar</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1adf62762039aa5d0edb546a9a2c2aaba5" prot="public" static="no" mutable="no">
        <type></type>
        <definition>speech_recognition.kaldi_grammar.Grammar::grammar_file</definition>
        <argsstring></argsstring>
        <name>grammar_file</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/speech_recognition/kaldi_grammar.py" line="37" column="1" bodyfile="src/speech_recognition/kaldi_grammar.py" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1a5029acde57b97dc65108d358ddda6061" prot="public" static="no" mutable="no">
        <type></type>
        <definition>speech_recognition.kaldi_grammar.Grammar::grammar_string</definition>
        <argsstring></argsstring>
        <name>grammar_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/speech_recognition/kaldi_grammar.py" line="38" column="1" bodyfile="src/speech_recognition/kaldi_grammar.py" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1ad0d143a8a1864e52acd5038bd9680a53" prot="public" static="no" mutable="no">
        <type></type>
        <definition>speech_recognition.kaldi_grammar.Grammar::model_path</definition>
        <argsstring></argsstring>
        <name>model_path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/speech_recognition/kaldi_grammar.py" line="22" column="1" bodyfile="src/speech_recognition/kaldi_grammar.py" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1a3745d847761249af23964d9b48ca5d0a" prot="public" static="no" mutable="no">
        <type></type>
        <definition>speech_recognition.kaldi_grammar.Grammar::model_path_tmp</definition>
        <argsstring></argsstring>
        <name>model_path_tmp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/speech_recognition/kaldi_grammar.py" line="23" column="1" bodyfile="src/speech_recognition/kaldi_grammar.py" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1ab33a966b922d3f0c552154c0ab82308b" prot="public" static="no" mutable="no">
        <type></type>
        <definition>speech_recognition.kaldi_grammar.Grammar::parser</definition>
        <argsstring></argsstring>
        <name>parser</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/speech_recognition/kaldi_grammar.py" line="36" column="1" bodyfile="src/speech_recognition/kaldi_grammar.py" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1aad9c78e3eea20de1571978d833277feb" prot="public" static="no" mutable="no">
        <type></type>
        <definition>speech_recognition.kaldi_grammar.Grammar::target</definition>
        <argsstring></argsstring>
        <name>target</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/speech_recognition/kaldi_grammar.py" line="44" column="1" bodyfile="src/speech_recognition/kaldi_grammar.py" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1a293cab78a0763ca563931161ce139c35" prot="public" static="no" mutable="no">
        <type></type>
        <definition>speech_recognition.kaldi_grammar.Grammar::tree</definition>
        <argsstring></argsstring>
        <name>tree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/speech_recognition/kaldi_grammar.py" line="48" column="1" bodyfile="src/speech_recognition/kaldi_grammar.py" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1af5b70bb8aacd8f7849d196741511658f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def speech_recognition.kaldi_grammar.Grammar.__init__</definition>
        <argsstring>(self, model_path, grammar_file_string, target)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1ad0d143a8a1864e52acd5038bd9680a53" kindref="member">model_path</ref></type>
          <defname>model_path</defname>
        </param>
        <param>
          <type>grammar_file_string</type>
          <defname>grammar_file_string</defname>
        </param>
        <param>
          <type><ref refid="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1aad9c78e3eea20de1571978d833277feb" kindref="member">target</ref></type>
          <defname>target</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/speech_recognition/kaldi_grammar.py" line="20" column="1" bodyfile="src/speech_recognition/kaldi_grammar.py" bodystart="20" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1a53b1a628954e76a144a289483cef41e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def speech_recognition.kaldi_grammar.Grammar.autocomplete</definition>
        <argsstring>(self)</argsstring>
        <name>autocomplete</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim># TODO: expand the full tree, not only the first words
# replace raw_input with the speech recognition output
# add an option to skip a word if it is not a match and to check the
# next word
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/speech_recognition/kaldi_grammar.py" line="82" column="1" bodyfile="src/speech_recognition/kaldi_grammar.py" bodystart="82" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1abccb7678ddc868a35501b37a80e069e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def speech_recognition.kaldi_grammar.Grammar.check_word</definition>
        <argsstring>(self, recognition=&apos;&apos;, initial_list=[])</argsstring>
        <name>check_word</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>recognition</type>
          <defname>recognition</defname>
          <defval>&apos;&apos;</defval>
        </param>
        <param>
          <type>initial_list</type>
          <defname>initial_list</defname>
          <defval>[]</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Checks if the recognised word is matching with the first element in the expanded sentences
As output it keeps a list of only the sentences, starting with the recognised word.

:param recognition: the recognised word
:param initial_list: bla
:return filtered_list: sentence list, filtered by its first word
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/speech_recognition/kaldi_grammar.py" line="128" column="1" bodyfile="src/speech_recognition/kaldi_grammar.py" bodystart="128" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1abf5c12cc11ca9963a0758283b88756af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def speech_recognition.kaldi_grammar.Grammar.expand_tree_</definition>
        <argsstring>(self)</argsstring>
        <name>expand_tree_</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Expands the grammar tree based on the words in the grammar rules for the
pre-set target

:return: tree of sentence nodes
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/speech_recognition/kaldi_grammar.py" line="177" column="1" bodyfile="src/speech_recognition/kaldi_grammar.py" bodystart="177" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1a061360c289003273847a06ab9e200cb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def speech_recognition.kaldi_grammar.Grammar.get_words_</definition>
        <argsstring>(self)</argsstring>
        <name>get_words_</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Extracts list with all the unique words, used within the grammar and
create file &apos;corpus.txt&apos; which is used to build &apos;G.fst&apos;
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/speech_recognition/kaldi_grammar.py" line="50" column="1" bodyfile="src/speech_recognition/kaldi_grammar.py" bodystart="50" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1add42fcc5c85b68a22f150a230b0408c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def speech_recognition.kaldi_grammar.Grammar.parse</definition>
        <argsstring>(self, sentence)</argsstring>
        <name>parse</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>sentence</type>
          <defname>sentence</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Parses the input sentence to generate the semantics for the pre-set
target

:param sentence: The sentence to be parsed
:return: semantics
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/speech_recognition/kaldi_grammar.py" line="188" column="1" bodyfile="src/speech_recognition/kaldi_grammar.py" bodystart="188" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1a8ac8c5d14894f6372a79406de56eb063" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def speech_recognition.kaldi_grammar.Grammar.print_graphviz</definition>
        <argsstring>(self)</argsstring>
        <name>print_graphviz</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Wrapper around the print_graphviz function to print the current tree
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/speech_recognition/kaldi_grammar.py" line="199" column="1" bodyfile="src/speech_recognition/kaldi_grammar.py" bodystart="199" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1a39986573401032c345375c6162a8decc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def speech_recognition.kaldi_grammar.Grammar.print_nicely</definition>
        <argsstring>(self, sentence_list)</argsstring>
        <name>print_nicely</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>sentence_list</type>
          <defname>sentence_list</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Prints cleanly the output of the tree traversal functions

:param sentence_list: list of possible completions
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/speech_recognition/kaldi_grammar.py" line="166" column="1" bodyfile="src/speech_recognition/kaldi_grammar.py" bodystart="166" bodyend="176"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Class Grammar uses as input a grammar file with extension &apos;.fcfg&apos; and has two functions:
get_rule_element: extracts the defined grammar rules
get_words: extracts the unique words and creates &apos;corpus.txt&apos; which is used to build &apos;G.fst&apos;
</verbatim> </para>
    </detaileddescription>
    <location file="src/speech_recognition/kaldi_grammar.py" line="14" column="1" bodyfile="src/speech_recognition/kaldi_grammar.py" bodystart="14" bodyend="206"/>
    <listofallmembers>
      <member refid="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1af5b70bb8aacd8f7849d196741511658f" prot="public" virt="non-virtual"><scope>speech_recognition::kaldi_grammar::Grammar</scope><name>__init__</name></member>
      <member refid="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1a53b1a628954e76a144a289483cef41e5" prot="public" virt="non-virtual"><scope>speech_recognition::kaldi_grammar::Grammar</scope><name>autocomplete</name></member>
      <member refid="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1abccb7678ddc868a35501b37a80e069e1" prot="public" virt="non-virtual"><scope>speech_recognition::kaldi_grammar::Grammar</scope><name>check_word</name></member>
      <member refid="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1abf5c12cc11ca9963a0758283b88756af" prot="public" virt="non-virtual"><scope>speech_recognition::kaldi_grammar::Grammar</scope><name>expand_tree_</name></member>
      <member refid="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1a061360c289003273847a06ab9e200cb6" prot="public" virt="non-virtual"><scope>speech_recognition::kaldi_grammar::Grammar</scope><name>get_words_</name></member>
      <member refid="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1adf62762039aa5d0edb546a9a2c2aaba5" prot="public" virt="non-virtual"><scope>speech_recognition::kaldi_grammar::Grammar</scope><name>grammar_file</name></member>
      <member refid="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1a5029acde57b97dc65108d358ddda6061" prot="public" virt="non-virtual"><scope>speech_recognition::kaldi_grammar::Grammar</scope><name>grammar_string</name></member>
      <member refid="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1ad0d143a8a1864e52acd5038bd9680a53" prot="public" virt="non-virtual"><scope>speech_recognition::kaldi_grammar::Grammar</scope><name>model_path</name></member>
      <member refid="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1a3745d847761249af23964d9b48ca5d0a" prot="public" virt="non-virtual"><scope>speech_recognition::kaldi_grammar::Grammar</scope><name>model_path_tmp</name></member>
      <member refid="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1add42fcc5c85b68a22f150a230b0408c0" prot="public" virt="non-virtual"><scope>speech_recognition::kaldi_grammar::Grammar</scope><name>parse</name></member>
      <member refid="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1ab33a966b922d3f0c552154c0ab82308b" prot="public" virt="non-virtual"><scope>speech_recognition::kaldi_grammar::Grammar</scope><name>parser</name></member>
      <member refid="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1a8ac8c5d14894f6372a79406de56eb063" prot="public" virt="non-virtual"><scope>speech_recognition::kaldi_grammar::Grammar</scope><name>print_graphviz</name></member>
      <member refid="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1a39986573401032c345375c6162a8decc" prot="public" virt="non-virtual"><scope>speech_recognition::kaldi_grammar::Grammar</scope><name>print_nicely</name></member>
      <member refid="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1aad9c78e3eea20de1571978d833277feb" prot="public" virt="non-virtual"><scope>speech_recognition::kaldi_grammar::Grammar</scope><name>target</name></member>
      <member refid="classspeech__recognition_1_1kaldi__grammar_1_1Grammar_1a293cab78a0763ca563931161ce139c35" prot="public" virt="non-virtual"><scope>speech_recognition::kaldi_grammar::Grammar</scope><name>tree</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
