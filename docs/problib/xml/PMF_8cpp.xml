<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="PMF_8cpp" kind="file" language="C++">
    <compoundname>PMF.cpp</compoundname>
    <includes refid="PMF_8h" local="yes">problib/pdfs/PMF.h</includes>
    <incdepgraph>
      <node id="3">
        <label>PDF.h</label>
        <link refid="PDF_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>problib/datatypes.h</label>
        <link refid="datatypes_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>vector</label>
        <link refid="cpp/header/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="1">
        <label>PMF.cpp</label>
        <link refid="PMF_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>sstream</label>
        <link refid="cpp/header/sstream" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="14">
        <label>armadillo</label>
      </node>
      <node id="2">
        <label>problib/pdfs/PMF.h</label>
        <link refid="PMF_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>map</label>
        <link refid="cpp/header/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="9">
        <label>cassert</label>
        <link refid="cpp/header/cassert" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="12">
        <label>math.h</label>
      </node>
      <node id="7">
        <label>string</label>
        <link refid="cpp/header/string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="4">
        <label>problib/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>set</label>
        <link refid="cpp/header/set" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="11">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2012<sp/>Eindhoven<sp/>University<sp/>of<sp/>Technology<sp/>(TU/e).<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>All<sp/>rights<sp/>reserved.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>************************************************************************</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>are<sp/>met:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>1.<sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disclaimer.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>2.<sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>provided<sp/>with<sp/>the<sp/>distribution.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>TU/e<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>TU/e<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/>DAMAGE.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>views<sp/>and<sp/>conclusions<sp/>contained<sp/>in<sp/>the<sp/>software<sp/>and<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/>documentation<sp/>are<sp/>those<sp/>of<sp/>the<sp/>authors<sp/>and<sp/>should<sp/>not<sp/>be<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>interpreted<sp/>as<sp/>representing<sp/>official<sp/>policies,<sp/>either<sp/>expressed<sp/>or<sp/><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/>implied,<sp/>of<sp/>TU/e.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="PMF_8h" kindref="compound">problib/pdfs/PMF.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacepbl" kindref="compound">pbl</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classpbl_1_1PMF_1a838f27b73503a833c43aec1f6bb08307" refkind="member"><highlight class="normal"><ref refid="classpbl_1_1PMF_1a838f27b73503a833c43aec1f6bb08307" kindref="member">PMF::PMF</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>domain_size)<sp/>:<sp/><ref refid="classpbl_1_1PDF" kindref="compound">PDF</ref>(1,<sp/><ref refid="classpbl_1_1PDF" kindref="compound">PDF</ref>::DISCRETE),<sp/>ptr_(new<sp/><ref refid="structpbl_1_1PMF_1_1PMFStruct" kindref="compound">PMFStruct</ref>(domain_size))<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classpbl_1_1PMF_1a3cba5a2cd806e07219130bb3ac893937" refkind="member"><highlight class="normal"><ref refid="classpbl_1_1PMF_1a838f27b73503a833c43aec1f6bb08307" kindref="member">PMF::PMF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF" kindref="compound">PMF</ref>&amp;<sp/>pmf)<sp/>:<sp/><ref refid="classpbl_1_1PDF" kindref="compound">PDF</ref>(1,<sp/><ref refid="classpbl_1_1PDF" kindref="compound">PDF</ref>::DISCRETE),<sp/>ptr_(pmf.ptr_)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ac398a4e99a47b8544f6610ca34c52c55" kindref="member">n_ptrs_</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classpbl_1_1PMF_1a79b65b7d60893138be3fa34cf825df90" refkind="member"><highlight class="normal"><ref refid="classpbl_1_1PMF_1a79b65b7d60893138be3fa34cf825df90" kindref="member">PMF::~PMF</ref>()<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ac398a4e99a47b8544f6610ca34c52c55" kindref="member">n_ptrs_</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ac398a4e99a47b8544f6610ca34c52c55" kindref="member">n_ptrs_</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classpbl_1_1PMF_1af88c45dbad0ac36c4035d115c4962246" refkind="member"><highlight class="normal"><ref refid="classpbl_1_1PMF" kindref="compound">PMF</ref>&amp;<sp/><ref refid="classpbl_1_1PMF_1af88c45dbad0ac36c4035d115c4962246" kindref="member">PMF::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF" kindref="compound">PMF</ref>&amp;<sp/>other)<sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;other)<sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ac398a4e99a47b8544f6610ca34c52c55" kindref="member">n_ptrs_</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ac398a4e99a47b8544f6610ca34c52c55" kindref="member">n_ptrs_</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref><sp/>=<sp/>other.<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ac398a4e99a47b8544f6610ca34c52c55" kindref="member">n_ptrs_</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpbl_1_1PDF_1a6f8608b083c0c9b728d758cc8abfd080" kindref="member">dimensions_</ref><sp/>=<sp/>other.<ref refid="classpbl_1_1PDF_1a6f8608b083c0c9b728d758cc8abfd080" kindref="member">dimensions_</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classpbl_1_1PMF_1a20ea91400eb26390ea7c37d691f68295" refkind="member"><highlight class="normal"><ref refid="classpbl_1_1PMF" kindref="compound">PMF</ref>*<sp/><ref refid="classpbl_1_1PMF_1a20ea91400eb26390ea7c37d691f68295" kindref="member">PMF::clone</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF_1a838f27b73503a833c43aec1f6bb08307" kindref="member">PMF</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classpbl_1_1PMF_1a45cc297d994f687d8dda19f45d406193" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF_1a45cc297d994f687d8dda19f45d406193" kindref="member">PMF::cloneStruct</ref>()<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ac398a4e99a47b8544f6610ca34c52c55" kindref="member">n_ptrs_</ref><sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ac398a4e99a47b8544f6610ca34c52c55" kindref="member">n_ptrs_</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structpbl_1_1PMF_1_1PMFStruct" kindref="compound">PMFStruct</ref>(*<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="classpbl_1_1PMF_1a17ee2dd79085cb35f4ddcdfcece8e0a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF_1a17ee2dd79085cb35f4ddcdfcece8e0a6" kindref="member">PMF::getProbability</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>value)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF_1a17ee2dd79085cb35f4ddcdfcece8e0a6" kindref="member">getProbability</ref>(value,<sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ad3ff43283a376b351cf4b6a46d89edd5" kindref="member">domain_size_</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classpbl_1_1PMF_1a45eff5735b79a115732a704fb856bf25" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF_1a17ee2dd79085cb35f4ddcdfcece8e0a6" kindref="member">PMF::getProbability</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>domain_size)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map&lt;std::string, double&gt;::const_iterator</ref><sp/>it<sp/>=<sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>.<ref refid="cpp/container/map/find" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">find</ref>(value);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>.<ref refid="cpp/container/map/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>())<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*it).second;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>now<sp/>probability<sp/>is<sp/>known<sp/>for<sp/>this<sp/>value,<sp/>calculate<sp/>its<sp/>probability</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>based<sp/>on<sp/>a<sp/>uniform<sp/>distribution<sp/>over<sp/>all<sp/>unknown<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF_1a6a24d28c1e6b9391da2bd7d359dc6d80" kindref="member">getProbabilityUnknown</ref>(domain_size);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="classpbl_1_1PMF_1ac201a689345d7ce1e9eeee509c30c9a7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF_1ac201a689345d7ce1e9eeee509c30c9a7" kindref="member">PMF::setProbability</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>value,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpbl_1_1PMF_1a45cc297d994f687d8dda19f45d406193" kindref="member">cloneStruct</ref>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map&lt;std::string, double&gt;::iterator</ref><sp/>it<sp/>=<sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>.<ref refid="cpp/container/map/find" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">find</ref>(value);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>.<ref refid="cpp/container/map/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>())<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1a0e0190bcabf5aa82bf83f4ecbeb907c7" kindref="member">total_prob_</ref><sp/>-=<sp/>(*it).second;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it).second<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>[value]<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1a0e0190bcabf5aa82bf83f4ecbeb907c7" kindref="member">total_prob_</ref><sp/>+=<sp/>p;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="classpbl_1_1PMF_1a892662e026965349ad812c8ad79f7acb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF_1a892662e026965349ad812c8ad79f7acb" kindref="member">PMF::setExact</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ac398a4e99a47b8544f6610ca34c52c55" kindref="member">n_ptrs_</ref><sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ac398a4e99a47b8544f6610ca34c52c55" kindref="member">n_ptrs_</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structpbl_1_1PMF_1_1PMFStruct" kindref="compound">PMFStruct</ref>(<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ad3ff43283a376b351cf4b6a46d89edd5" kindref="member">domain_size_</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>.<ref refid="cpp/container/map/clear" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">clear</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>[value]<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1a0e0190bcabf5aa82bf83f4ecbeb907c7" kindref="member">total_prob_</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="classpbl_1_1PMF_1aca191ceb84ad368a898aad4c98fcacb2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF_1aca191ceb84ad368a898aad4c98fcacb2" kindref="member">PMF::getValues</ref>(<ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;std::string&gt;</ref>&amp;<sp/>values)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map&lt;std::string, double&gt;::const_iterator</ref><sp/>it<sp/>=<sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>.<ref refid="cpp/container/map/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>();<sp/>it<sp/>!=<sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>.<ref refid="cpp/container/map/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values.<ref refid="cpp/container/vector/push_back" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">push_back</ref>((*it).first);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="classpbl_1_1PMF_1a5b7ec442c0c4262eae8b6b41eb4e58ae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF_1a5b7ec442c0c4262eae8b6b41eb4e58ae" kindref="member">PMF::getProbabilities</ref>(<ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;double&gt;</ref>&amp;<sp/>probabilities)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map&lt;std::string, double&gt;::const_iterator</ref><sp/>it<sp/>=<sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>.<ref refid="cpp/container/map/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>();<sp/>it<sp/>!=<sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>.<ref refid="cpp/container/map/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probabilities.<ref refid="cpp/container/vector/push_back" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">push_back</ref>((*it).second);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="classpbl_1_1PMF_1ad62ee1f0155d5fb0c317f1c8838498e8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF_1ad62ee1f0155d5fb0c317f1c8838498e8" kindref="member">PMF::getExpectedValue</ref>(<ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>v)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_max<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map&lt;std::string, double&gt;::const_iterator</ref><sp/>it<sp/>=<sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>.<ref refid="cpp/container/map/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>();<sp/>it<sp/>!=<sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>.<ref refid="cpp/container/map/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*it).second<sp/>&gt;<sp/>p_max)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>(*it).first;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_max<sp/>=<sp/>(*it).second;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ad3ff43283a376b351cf4b6a46d89edd5" kindref="member">domain_size_</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>p_max<sp/>&lt;<sp/><ref refid="classpbl_1_1PMF_1a6a24d28c1e6b9391da2bd7d359dc6d80" kindref="member">getProbabilityUnknown</ref>(<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ad3ff43283a376b351cf4b6a46d89edd5" kindref="member">domain_size_</ref>))<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="classpbl_1_1PMF_1afa5684aeaa94bca52b84720b35840467" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF_1afa5684aeaa94bca52b84720b35840467" kindref="member">PMF::getLikelihood</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PDF" kindref="compound">PDF</ref>&amp;<sp/>pdf)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="globals_8h_1acebad8524ec2a061ebf0d4081a6db4bf" kindref="member">assert_msg</ref>(pdf.<ref refid="classpbl_1_1PDF_1a011b1bd8e470e856b50090de57119407" kindref="member">type</ref>()<sp/>==<sp/><ref refid="classpbl_1_1PDF_1aba652e46f5290da9745994cac0e78379aaf7cb21250734802ba35de4fba678fa7" kindref="member">PDF::DISCRETE</ref>,<sp/></highlight><highlight class="stringliteral">&quot;PMF:<sp/>Likelihood<sp/>can<sp/>only<sp/>be<sp/>calculated<sp/>with<sp/>another<sp/>PMF.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF" kindref="compound">PMF</ref>*<sp/>pmf<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classpbl_1_1PMF" kindref="compound">pbl::PMF</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;pdf);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF_1afa5684aeaa94bca52b84720b35840467" kindref="member">getLikelihood</ref>(*pmf);</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="classpbl_1_1PMF_1aad18c717c1dacfad3e52519fc8f163f6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF_1afa5684aeaa94bca52b84720b35840467" kindref="member">PMF::getLikelihood</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF" kindref="compound">PMF</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>my_domain_size<sp/>=<sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ad3ff43283a376b351cf4b6a46d89edd5" kindref="member">domain_size_</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>other_domain_size<sp/>=<sp/>other.<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ad3ff43283a376b351cf4b6a46d89edd5" kindref="member">domain_size_</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(my_domain_size<sp/>==<sp/>-1<sp/>||<sp/>other_domain_size<sp/>==<sp/>-1<sp/>||<sp/>my_domain_size<sp/>==<sp/>other_domain_size);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>domain_size<sp/>=<sp/><ref refid="cpp/algorithm/max" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::max</ref>(my_domain_size,<sp/>other_domain_size);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>which<sp/>pmf<sp/>has<sp/>the<sp/>most<sp/>determined<sp/>values,<sp/>and<sp/>which<sp/>one<sp/>less</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF" kindref="compound">PMF</ref>*<sp/>small_pmf<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF" kindref="compound">PMF</ref>*<sp/>big_pmf<sp/>=<sp/>&amp;other;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>.<ref refid="cpp/container/map/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>()<sp/>&gt;<sp/>other.<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>.<ref refid="cpp/container/map/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>())<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>small_pmf<sp/>=<sp/>&amp;other;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>big_pmf<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>the<sp/>likelihood<sp/>based<sp/>on<sp/>all<sp/>determined<sp/>values<sp/>in<sp/>small_pmf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>likelihood<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>big_p_total_match<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>keeps<sp/>track<sp/>of<sp/>the<sp/>total<sp/>probability<sp/>of<sp/>all<sp/>values<sp/>in<sp/>big_pmf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>are<sp/>matched<sp/>to<sp/>small_pmf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map&lt;std::string, double&gt;::const_iterator</ref><sp/>it<sp/>=<sp/>small_pmf-&gt;<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>.<ref refid="cpp/container/map/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>();<sp/>it<sp/>!=<sp/>small_pmf-&gt;<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>.<ref refid="cpp/container/map/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>big_p_v<sp/>=<sp/>big_pmf-&gt;<ref refid="classpbl_1_1PMF_1a17ee2dd79085cb35f4ddcdfcece8e0a6" kindref="member">getProbability</ref>((*it).first,<sp/>domain_size);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>likelihood<sp/>+=<sp/>big_p_v<sp/>*<sp/>(*it).second;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>big_p_total_match<sp/>+=<sp/>big_p_v;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>determined<sp/>values<sp/>in<sp/>small_pdf<sp/>do<sp/>NOT<sp/>add<sp/>up<sp/>to<sp/>probability<sp/>1,<sp/>AND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>not<sp/>yet<sp/>matched<sp/>all<sp/>values<sp/>in<sp/>big_pmf<sp/>with<sp/>a<sp/>total<sp/>probability<sp/>of<sp/>1,<sp/>it<sp/>means</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>still<sp/>need<sp/>to<sp/>match<sp/>the<sp/>undetermined<sp/>values<sp/>in<sp/>small_pmf<sp/>and<sp/>big_pmf.<sp/>ASSUME<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>UNIFORM<sp/>DISTRIBUTION<sp/>over<sp/>the<sp/>undetermined<sp/>values<sp/>in<sp/>both<sp/>small_pmf<sp/>and<sp/>big_pmf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(small_pmf-&gt;<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1a0e0190bcabf5aa82bf83f4ecbeb907c7" kindref="member">total_prob_</ref><sp/>&lt;<sp/>1<sp/>&amp;&amp;<sp/>big_p_total_match<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>the<sp/>number<sp/>of<sp/>unmatched<sp/>values.<sp/>Since<sp/>we<sp/>used<sp/>small_pmf<sp/>as<sp/>a<sp/>basis<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>matching<sp/>above<sp/>(we<sp/>matched<sp/>all<sp/>its<sp/>determined<sp/>values),<sp/>the<sp/>number<sp/>of<sp/>unmatched<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>equals<sp/>the<sp/>domain<sp/>size<sp/>MINUS<sp/>the<sp/>number<sp/>of<sp/>determined<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_unmatched_values<sp/>=<sp/>(domain_size<sp/>-<sp/>small_pmf-&gt;<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>.<ref refid="cpp/container/map/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>());</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(num_unmatched_values<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>the<sp/>average<sp/>probability<sp/>of<sp/>an<sp/>unknown<sp/>value<sp/>in<sp/>big_pmf,<sp/>assuming</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>uniform<sp/>distribution<sp/>over<sp/>all<sp/>unknown<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>big_p_unknown<sp/><sp/><sp/>=<sp/>(1<sp/>-<sp/>big_p_total_match)<sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>num_unmatched_values;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>the<sp/>probability<sp/>of<sp/>an<sp/>unknown<sp/>value<sp/>in<sp/>small_pmf,<sp/>assuming</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>uniform<sp/>distribution<sp/>over<sp/>all<sp/>unknown<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>small_p_unknown<sp/>=<sp/>(1<sp/>-<sp/>small_pmf-&gt;<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1a0e0190bcabf5aa82bf83f4ecbeb907c7" kindref="member">total_prob_</ref>)<sp/>/<sp/>num_unmatched_values;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>to<sp/>the<sp/>likelihood<sp/>the<sp/>SUM<sp/>of<sp/>big_p_unknown<sp/>*<sp/>small_p_unknown<sp/>over<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unmatches<sp/>values,<sp/>which<sp/>equals<sp/>num_unmatched_values<sp/>*<sp/>big_p_unknown<sp/>*<sp/>small_p_unknown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>likelihood<sp/>+=<sp/>num_unmatched_values<sp/>*<sp/>big_p_unknown<sp/>*<sp/>small_p_unknown;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>likelihood;</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="classpbl_1_1PMF_1a665bde2fd01bc35bda231bab8075d2ff" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF_1a665bde2fd01bc35bda231bab8075d2ff" kindref="member">PMF::update</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF" kindref="compound">pbl::PMF</ref>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(this-&gt;<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ad3ff43283a376b351cf4b6a46d89edd5" kindref="member">domain_size_</ref><sp/>==<sp/>-1<sp/>||<sp/>other.<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ad3ff43283a376b351cf4b6a46d89edd5" kindref="member">domain_size_</ref><sp/>==<sp/>-1</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>this-&gt;ptr_-&gt;domain_size_<sp/>==<sp/>other.<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ad3ff43283a376b351cf4b6a46d89edd5" kindref="member">domain_size_</ref>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpbl_1_1PMF_1a45cc297d994f687d8dda19f45d406193" kindref="member">cloneStruct</ref>();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ad3ff43283a376b351cf4b6a46d89edd5" kindref="member">domain_size_</ref><sp/>=<sp/><ref refid="cpp/algorithm/max" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::max</ref>(this-&gt;<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ad3ff43283a376b351cf4b6a46d89edd5" kindref="member">domain_size_</ref>,<sp/>other.<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ad3ff43283a376b351cf4b6a46d89edd5" kindref="member">domain_size_</ref>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>likelihood</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>likelihood<sp/>=<sp/><ref refid="classpbl_1_1PMF_1afa5684aeaa94bca52b84720b35840467" kindref="member">getLikelihood</ref>(other);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>the<sp/>current<sp/>probability<sp/>of<sp/>unknown<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_unknown<sp/>=<sp/><ref refid="classpbl_1_1PMF_1a6a24d28c1e6b9391da2bd7d359dc6d80" kindref="member">getProbabilityUnknown</ref>(this-&gt;<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ad3ff43283a376b351cf4b6a46d89edd5" kindref="member">domain_size_</ref>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/container/set" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::set&lt;std::string&gt;</ref><sp/>updated_values;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1a0e0190bcabf5aa82bf83f4ecbeb907c7" kindref="member">total_prob_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map&lt;std::string, double&gt;::iterator</ref><sp/>it<sp/>=<sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>.<ref refid="cpp/container/map/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>();<sp/>it<sp/>!=<sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>.<ref refid="cpp/container/map/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>new_prob<sp/>=<sp/>(*it).second<sp/>*<sp/>other.<ref refid="classpbl_1_1PMF_1a17ee2dd79085cb35f4ddcdfcece8e0a6" kindref="member">getProbability</ref>((*it).first,<sp/>this-&gt;ptr_-&gt;domain_size_)<sp/>/<sp/>likelihood;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it).second<sp/>=<sp/>new_prob;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1a0e0190bcabf5aa82bf83f4ecbeb907c7" kindref="member">total_prob_</ref><sp/>+=<sp/>new_prob;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updated_values.<ref refid="cpp/container/set/insert" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">insert</ref>((*it).first);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map&lt;std::string, double&gt;::const_iterator</ref><sp/>it<sp/>=<sp/>other.<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>.<ref refid="cpp/container/map/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>();<sp/>it<sp/>!=<sp/>other.<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>.<ref refid="cpp/container/map/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(updated_values.<ref refid="cpp/container/set/find" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">find</ref>((*it).first)<sp/>==<sp/>updated_values.<ref refid="cpp/container/set/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>())<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>new_prob<sp/>=<sp/>p_unknown<sp/>*<sp/>(*it).second<sp/>/<sp/>likelihood;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>[(*it).first]<sp/>=<sp/>new_prob;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1a0e0190bcabf5aa82bf83f4ecbeb907c7" kindref="member">total_prob_</ref><sp/>+=<sp/>new_prob;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="classpbl_1_1PMF_1a6b85c707edd95abc9aa0cd00f54684f6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF_1a6b85c707edd95abc9aa0cd00f54684f6" kindref="member">PMF::setDomainSize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>domain_size)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpbl_1_1PMF_1a45cc297d994f687d8dda19f45d406193" kindref="member">cloneStruct</ref>();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ad3ff43283a376b351cf4b6a46d89edd5" kindref="member">domain_size_</ref><sp/>=<sp/>domain_size;</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="classpbl_1_1PMF_1a8a8247838230b27c0f711723b18b2e3a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF_1a8a8247838230b27c0f711723b18b2e3a" kindref="member">PMF::getDomainSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ad3ff43283a376b351cf4b6a46d89edd5" kindref="member">domain_size_</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="classpbl_1_1PMF_1a6a24d28c1e6b9391da2bd7d359dc6d80" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF_1a6a24d28c1e6b9391da2bd7d359dc6d80" kindref="member">PMF::getProbabilityUnknown</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF_1a6a24d28c1e6b9391da2bd7d359dc6d80" kindref="member">getProbabilityUnknown</ref>(<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ad3ff43283a376b351cf4b6a46d89edd5" kindref="member">domain_size_</ref>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="classpbl_1_1PMF_1aa176572916fced010b17c2405822162f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF_1a6a24d28c1e6b9391da2bd7d359dc6d80" kindref="member">PMF::getProbabilityUnknown</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>domain_size)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1a0e0190bcabf5aa82bf83f4ecbeb907c7" kindref="member">total_prob_</ref><sp/>==<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(domain_size<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(domain_size<sp/>==<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>.<ref refid="cpp/container/map/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(1<sp/>-<sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1a0e0190bcabf5aa82bf83f4ecbeb907c7" kindref="member">total_prob_</ref>)<sp/>/<sp/>(domain_size<sp/>-<sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>.<ref refid="cpp/container/map/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>());</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="classpbl_1_1PMF_1a9e8c615a735e54d1cdb094c502cd37ba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF_1a9e8c615a735e54d1cdb094c502cd37ba" kindref="member">PMF::normalize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1a0e0190bcabf5aa82bf83f4ecbeb907c7" kindref="member">total_prob_</ref><sp/>==<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1a0e0190bcabf5aa82bf83f4ecbeb907c7" kindref="member">total_prob_</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpbl_1_1PMF_1a45cc297d994f687d8dda19f45d406193" kindref="member">cloneStruct</ref>();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map&lt;std::string, double&gt;::iterator</ref><sp/>it<sp/>=<sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>.<ref refid="cpp/container/map/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>();<sp/>it<sp/>!=<sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>.<ref refid="cpp/container/map/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it).second<sp/>/=<sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1a0e0190bcabf5aa82bf83f4ecbeb907c7" kindref="member">total_prob_</ref>;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ad3ff43283a376b351cf4b6a46d89edd5" kindref="member">domain_size_</ref><sp/>=<sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>.<ref refid="cpp/container/map/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1a0e0190bcabf5aa82bf83f4ecbeb907c7" kindref="member">total_prob_</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="classpbl_1_1PMF_1a5319a44f52864a672b736c449cbabc7e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF_1a5319a44f52864a672b736c449cbabc7e" kindref="member">PMF::getDensity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/>v)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="globals_8h_1acebad8524ec2a061ebf0d4081a6db4bf" kindref="member">assert_msg</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>get<sp/>density<sp/>of<sp/>a<sp/>PMF&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="classpbl_1_1PMF_1a70b74d8f4d5af89ad9de2582e2328ea2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classpbl_1_1PMF_1a70b74d8f4d5af89ad9de2582e2328ea2" kindref="member">PMF::getMaxDensity</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="globals_8h_1acebad8524ec2a061ebf0d4081a6db4bf" kindref="member">assert_msg</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>get<sp/>max<sp/>density<sp/>of<sp/>a<sp/>PMF&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="classpbl_1_1PMF_1af22f3fbc1db768c4d15e6f83ee29d076" refkind="member"><highlight class="normal"><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/><ref refid="classpbl_1_1PMF_1af22f3fbc1db768c4d15e6f83ee29d076" kindref="member">PMF::toString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>indent)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/io/basic_stringstream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::stringstream</ref><sp/>ss;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PMF(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ad3ff43283a376b351cf4b6a46d89edd5" kindref="member">domain_size_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)[&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map&lt;std::string, double&gt;::const_iterator</ref><sp/>it<sp/>=<sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>.<ref refid="cpp/container/map/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>.<ref refid="cpp/container/map/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>())<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(*it).first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(*it).second;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>it<sp/>!=<sp/><ref refid="classpbl_1_1PMF_1aa056db096e0b5dac563d8dfef81aa913" kindref="member">ptr_</ref>-&gt;<ref refid="structpbl_1_1PMF_1_1PMFStruct_1ae1cdda4c404e7a724a2c2291adf8a163" kindref="member">pmf_</ref>.<ref refid="cpp/container/map/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(*it).first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(*it).second;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.<ref refid="cpp/io/basic_stringstream/str" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">str</ref>();</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>OBSOLETE<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="classpbl_1_1PMF_1af1b1790c28cae43d5eb69b5ae4cd11a7" refkind="member"><highlight class="normal"><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/><ref refid="classpbl_1_1PMF_1af1b1790c28cae43d5eb69b5ae4cd11a7" kindref="member">PMF::getMostProbableValue</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>v;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpbl_1_1PMF_1ad62ee1f0155d5fb0c317f1c8838498e8" kindref="member">getExpectedValue</ref>(v);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/pdfs/PMF.cpp"/>
  </compounddef>
</doxygen>
