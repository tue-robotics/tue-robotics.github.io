<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classLRF" kind="class" language="C++" prot="public">
    <compoundname>LRF</compoundname>
    <includes refid="lrf_8h" local="no">lrf.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classLRF_1a253497e37a6ec208f4ba3d26bed2bf7b" prot="private" static="no" mutable="no">
        <type><ref refid="classgeo_1_1LaserRangeFinder" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::LaserRangeFinder</ref></type>
        <definition>geo::LaserRangeFinder LRF::lrf_</definition>
        <argsstring></argsstring>
        <name>lrf_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lrf.h" line="32" column="27" bodyfile="src/lrf.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classLRF_1afe643cd8be79d6c2be8d5587cf44b029" prot="private" static="no" mutable="no">
        <type>sensor_msgs::LaserScan</type>
        <definition>sensor_msgs::LaserScan LRF::msg_prototype_</definition>
        <argsstring></argsstring>
        <name>msg_prototype_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lrf.h" line="36" column="28" bodyfile="src/lrf.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classLRF_1a04942504a8e13691a5692cbcf194d746" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double LRF::noise_level_</definition>
        <argsstring></argsstring>
        <name>noise_level_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lrf.h" line="34" column="12" bodyfile="src/lrf.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classLRF_1aa093867741f0c3b706687c1be8ada09b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LRF::generateLaserData</definition>
        <argsstring>(const World &amp;world, const Robot &amp;robot, sensor_msgs::LaserScan &amp;scan_msg) const</argsstring>
        <name>generateLaserData</name>
        <param>
          <type>const <ref refid="classWorld" kindref="compound">World</ref> &amp;</type>
          <declname>world</declname>
        </param>
        <param>
          <type>const <ref refid="classRobot" kindref="compound">Robot</ref> &amp;</type>
          <declname>robot</declname>
        </param>
        <param>
          <type>sensor_msgs::LaserScan &amp;</type>
          <declname>scan_msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lrf.h" line="20" column="10" bodyfile="src/lrf.cpp" bodystart="57" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classLRF_1ab8a99ba2812cf2e64f2b897688580886" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LRF::LRF</definition>
        <argsstring>()</argsstring>
        <name>LRF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lrf.h" line="16" column="5" bodyfile="src/lrf.cpp" bodystart="15" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classLRF_1afa39d3f4a52ca32db16ec70db5350cd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LRF::setAngleLimits</definition>
        <argsstring>(double a_min, double a_max)</argsstring>
        <name>setAngleLimits</name>
        <param>
          <type>double</type>
          <declname>a_min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>a_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lrf.h" line="22" column="10" bodyfile="src/lrf.cpp" bodystart="28" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classLRF_1a5bcda68b4c0e11beec6006357a65621b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LRF::setNoiseLevel</definition>
        <argsstring>(double noise_level)</argsstring>
        <name>setNoiseLevel</name>
        <param>
          <type>double</type>
          <declname>noise_level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lrf.h" line="28" column="10" bodyfile="src/lrf.cpp" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classLRF_1ada8bcd6c29dd8ff751a24ce70ab8061f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LRF::setNumBeams</definition>
        <argsstring>(unsigned int n)</argsstring>
        <name>setNumBeams</name>
        <param>
          <type>unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lrf.h" line="24" column="10" bodyfile="src/lrf.cpp" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classLRF_1a15e0814c7e92a584b204123e07142a40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LRF::setRangeLimits</definition>
        <argsstring>(double r_min, double r_max)</argsstring>
        <name>setRangeLimits</name>
        <param>
          <type>double</type>
          <declname>r_min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>r_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lrf.h" line="26" column="10" bodyfile="src/lrf.cpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classLRF_1ae391922078471dd369c6dbfc933fe0fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LRF::~LRF</definition>
        <argsstring>()</argsstring>
        <name>~LRF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lrf.h" line="18" column="5" bodyfile="src/lrf.cpp" bodystart="22" bodyend="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4">
        <label>std::vector&lt; double &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="1">
        <label>LRF</label>
        <link refid="classLRF"/>
        <childnode refid="2" relation="usage">
          <edgelabel>lrf_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>geo::LaserRangeFinder</label>
        <link refid="classgeo_1_1LaserRangeFinder" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags"/>
        <childnode refid="3" relation="usage">
          <edgelabel>ray_dirs_</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>angles_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::vector&lt; geo::Vector3 &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="src/lrf.h" line="12" column="1" bodyfile="src/lrf.h" bodystart="11" bodyend="38"/>
    <listofallmembers>
      <member refid="classLRF_1aa093867741f0c3b706687c1be8ada09b" prot="public" virt="non-virtual"><scope>LRF</scope><name>generateLaserData</name></member>
      <member refid="classLRF_1ab8a99ba2812cf2e64f2b897688580886" prot="public" virt="non-virtual"><scope>LRF</scope><name>LRF</name></member>
      <member refid="classLRF_1a253497e37a6ec208f4ba3d26bed2bf7b" prot="private" virt="non-virtual"><scope>LRF</scope><name>lrf_</name></member>
      <member refid="classLRF_1afe643cd8be79d6c2be8d5587cf44b029" prot="private" virt="non-virtual"><scope>LRF</scope><name>msg_prototype_</name></member>
      <member refid="classLRF_1a04942504a8e13691a5692cbcf194d746" prot="private" virt="non-virtual"><scope>LRF</scope><name>noise_level_</name></member>
      <member refid="classLRF_1afa39d3f4a52ca32db16ec70db5350cd7" prot="public" virt="non-virtual"><scope>LRF</scope><name>setAngleLimits</name></member>
      <member refid="classLRF_1a5bcda68b4c0e11beec6006357a65621b" prot="public" virt="non-virtual"><scope>LRF</scope><name>setNoiseLevel</name></member>
      <member refid="classLRF_1ada8bcd6c29dd8ff751a24ce70ab8061f" prot="public" virt="non-virtual"><scope>LRF</scope><name>setNumBeams</name></member>
      <member refid="classLRF_1a15e0814c7e92a584b204123e07142a40" prot="public" virt="non-virtual"><scope>LRF</scope><name>setRangeLimits</name></member>
      <member refid="classLRF_1ae391922078471dd369c6dbfc933fe0fa" prot="public" virt="non-virtual"><scope>LRF</scope><name>~LRF</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
