<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="get__image_8py" kind="file" language="Python">
    <compoundname>get_image.py</compoundname>
    <innerclass refid="classchallenge__find__my__mates_1_1get__image_1_1Face" prot="public">challenge_find_my_mates::get_image::Face</innerclass>
    <innernamespace refid="namespacechallenge__find__my__mates_1_1get__image">challenge_find_my_mates::get_image</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacechallenge__find__my__mates_1_1get__image" refkind="compound"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pickle</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>datetime<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>datetime</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>cv2</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>rospy</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>cv_bridge<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>CvBridge</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacechallenge__find__my__mates_1_1cluster" kindref="compound">challenge_find_my_mates.cluster</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>cluster_people</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>image_recognition_util.image_writer<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>color_map</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="classchallenge__find__my__mates_1_1get__image_1_1Face" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face" kindref="compound">Face</ref>:</highlight></codeline>
<codeline lineno="15" refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a7ecb5ede32901c2049235c89d72475ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a7ecb5ede32901c2049235c89d72475ce" kindref="member">__init__</ref>(self,<sp/>px,<sp/>py,<sp/>image):</highlight></codeline>
<codeline lineno="16" refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a25af829032a95dcb812e4b05446cb158" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a25af829032a95dcb812e4b05446cb158" kindref="member">px</ref><sp/>=<sp/>px</highlight></codeline>
<codeline lineno="17" refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a40fabb41146bad487a2127f41da93c08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a40fabb41146bad487a2127f41da93c08" kindref="member">py</ref><sp/>=<sp/>py</highlight></codeline>
<codeline lineno="18" refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a44c5a78134528102276ec64089b26b8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a44c5a78134528102276ec64089b26b8b" kindref="member">_px</ref><sp/>=<sp/>px</highlight></codeline>
<codeline lineno="19" refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a3d218b30bf8c7af2a17472077b4b376e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a3d218b30bf8c7af2a17472077b4b376e" kindref="member">_py</ref><sp/>=<sp/>py</highlight></codeline>
<codeline lineno="20" refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1ada2ed5e375ba5789ddfd92c487a29afb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1ada2ed5e375ba5789ddfd92c487a29afb" kindref="member">image</ref><sp/>=<sp/>image</highlight></codeline>
<codeline lineno="21" refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a48c71b464882675f929d8323b943e96a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.image_height,<sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a48c71b464882675f929d8323b943e96a" kindref="member">image_width</ref><sp/>=<sp/>image.shape[:2]</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a244a4f53c46173d2b1292784d8843468" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a244a4f53c46173d2b1292784d8843468" kindref="member">_overlaps_x</ref>(self,<sp/>face):</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>abs(face.px<sp/>-<sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a25af829032a95dcb812e4b05446cb158" kindref="member">px</ref>)<sp/>&lt;<sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a48c71b464882675f929d8323b943e96a" kindref="member">image_width</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1ad2063f526bcafcce71c7fd69c8dbbcd5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1ad2063f526bcafcce71c7fd69c8dbbcd5" kindref="member">_overlaps_y</ref>(self,<sp/>face):</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>abs(face.py<sp/>-<sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a40fabb41146bad487a2127f41da93c08" kindref="member">py</ref>)<sp/>&lt;<sp/>self.image_height<sp/>/<sp/>2</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a47f6d014aa6526f6536e09b2a365980c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a47f6d014aa6526f6536e09b2a365980c" kindref="member">correct</ref>(self,<sp/>faces):</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>face<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>faces:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a244a4f53c46173d2b1292784d8843468" kindref="member">_overlaps_x</ref>(face)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1ad2063f526bcafcce71c7fd69c8dbbcd5" kindref="member">_overlaps_y</ref>(face):</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a244a4f53c46173d2b1292784d8843468" kindref="member">_overlaps_x</ref>(face):</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a25af829032a95dcb812e4b05446cb158" kindref="member">px</ref><sp/>&gt;<sp/>face.px:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a25af829032a95dcb812e4b05446cb158" kindref="member">px</ref><sp/>=<sp/>face.px<sp/>+<sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a48c71b464882675f929d8323b943e96a" kindref="member">image_width</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a25af829032a95dcb812e4b05446cb158" kindref="member">px</ref><sp/>=<sp/>face.px<sp/>-<sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a48c71b464882675f929d8323b943e96a" kindref="member">image_width</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1ad2063f526bcafcce71c7fd69c8dbbcd5" kindref="member">_overlaps_y</ref>(face):</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a40fabb41146bad487a2127f41da93c08" kindref="member">py</ref><sp/>&gt;<sp/>face.py:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a40fabb41146bad487a2127f41da93c08" kindref="member">py</ref><sp/>=<sp/>face.py<sp/>+<sp/>self.image_height</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a40fabb41146bad487a2127f41da93c08" kindref="member">py</ref><sp/>=<sp/>face.py<sp/>-<sp/>self.image_height</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a184fbf889a088339a10bbf0f458da664" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a184fbf889a088339a10bbf0f458da664" kindref="member">draw</ref>(self,<sp/>target_image,<sp/>color):</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv2.circle(target_image,<sp/>(self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a44c5a78134528102276ec64089b26b8b" kindref="member">_px</ref>,<sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a3d218b30bf8c7af2a17472077b4b376e" kindref="member">_py</ref>),<sp/>10,<sp/>(color[2]<sp/>*<sp/>255,<sp/>color[1]<sp/>*<sp/>255,<sp/>color[0]<sp/>*<sp/>255),<sp/>5)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv2.line(target_image,<sp/>(self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a44c5a78134528102276ec64089b26b8b" kindref="member">_px</ref>,<sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a3d218b30bf8c7af2a17472077b4b376e" kindref="member">_py</ref>),<sp/>(self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a25af829032a95dcb812e4b05446cb158" kindref="member">px</ref>,<sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a40fabb41146bad487a2127f41da93c08" kindref="member">py</ref>),</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(color[2]<sp/>*<sp/>255,<sp/>color[1]<sp/>*<sp/>255,<sp/>color[0]<sp/>*<sp/>255),<sp/>8)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_image_height,<sp/>target_image_width<sp/>=<sp/>target_image.shape[:2]</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>px_image<sp/>=<sp/>min(max(0,<sp/>int(self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a25af829032a95dcb812e4b05446cb158" kindref="member">px</ref><sp/>-<sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a48c71b464882675f929d8323b943e96a" kindref="member">image_width</ref><sp/>/<sp/>2)),<sp/>target_image_width<sp/>-<sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a48c71b464882675f929d8323b943e96a" kindref="member">image_width</ref><sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_image<sp/>=<sp/>min(max(0,<sp/>int(self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a40fabb41146bad487a2127f41da93c08" kindref="member">py</ref><sp/>-<sp/>self.image_height<sp/>/<sp/>2)),<sp/>target_image_height<sp/>-<sp/>self.image_height<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Alter<sp/>px_image<sp/>and<sp/>py_image<sp/>to<sp/>not<sp/>overlap<sp/>any<sp/>other<sp/>face</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>px_image<sp/>&gt;=<sp/>0<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>py_image<sp/>&gt;=<sp/>0:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Could<sp/>not<sp/>broadcast<sp/>input<sp/>array<sp/>from<sp/>shape<sp/>(150,<sp/>150,<sp/>3)<sp/>into<sp/>shape<sp/>(106,<sp/>150,<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_image[py_image:py_image<sp/>+<sp/>self.image_height,<sp/>px_image:px_image<sp/>+<sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a48c71b464882675f929d8323b943e96a" kindref="member">image_width</ref>]<sp/>=<sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1ada2ed5e375ba5789ddfd92c487a29afb" kindref="member">image</ref></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv2.rectangle(target_image,<sp/>(px_image,<sp/>py_image),</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(px_image<sp/>+<sp/>self.<ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face_1a48c71b464882675f929d8323b943e96a" kindref="member">image_width</ref>,<sp/>py_image<sp/>+<sp/>self.image_height),</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(color[2]<sp/>*<sp/>255,<sp/>color[1]<sp/>*<sp/>255,<sp/>color[0]<sp/>*<sp/>255),<sp/>10)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(</highlight><highlight class="stringliteral">&quot;bound<sp/>error&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="namespacechallenge__find__my__mates_1_1get__image_1afd9c157df69b384aae6b1b767a8f1929" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacechallenge__find__my__mates_1_1get__image_1afd9c157df69b384aae6b1b767a8f1929" kindref="member">get_image</ref>(robot,<sp/>room_id,<sp/>person_detections):</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>room_entity<sp/>=<sp/>robot.ed.get_entity(uuid=room_id)<sp/><sp/></highlight><highlight class="comment">#<sp/>type:<sp/>Entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>room_entity<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/>f</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>room:<sp/>&apos;{room_id}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(msg)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(msg)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>padding<sp/>=<sp/>-0.3<sp/><sp/></highlight><highlight class="comment">#<sp/>ToDo:<sp/>magic<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_get_clusters():</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_room_detections<sp/>=<sp/>[d<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>d<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>person_detections<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>room_entity.in_volume(d[</highlight><highlight class="stringliteral">&apos;map_vs&apos;</highlight><highlight class="normal">],<sp/></highlight><highlight class="stringliteral">&quot;in&quot;</highlight><highlight class="normal">,<sp/>padding)]</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(</highlight><highlight class="stringliteral">&quot;%d<sp/>in<sp/>room<sp/>before<sp/>clustering&quot;</highlight><highlight class="normal">,<sp/>len(in_room_detections))</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>center_point<sp/>=<sp/>room_entity.pose.frame.p</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clusters<sp/>=<sp/><ref refid="namespacechallenge__find__my__mates_1_1cluster_1ab520ea31e27f6f82592d42285fad28c5" kindref="member">cluster_people</ref>(in_room_detections,<sp/>np.array([center_point.x,<sp/>center_point.y]))</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>clusters</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>filter<sp/>in<sp/>room<sp/>and<sp/>perform<sp/>clustering<sp/>until<sp/>we<sp/>have<sp/>4<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>person_detection_clusters<sp/>=<sp/>_get_clusters()</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ValueError<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(e)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.speech.speak(</highlight><highlight class="stringliteral">&quot;Mates,<sp/>where<sp/>are<sp/>you?<sp/>Something<sp/>went<sp/>wrong&quot;</highlight><highlight class="normal">,<sp/>block=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError()</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(3):</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>floorplan<sp/>=<sp/>robot.ed.get_map([room_id])</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>floorplan<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>fetch<sp/>map<sp/>robot.ed.get_map([room_id])&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError()</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>floorplan_height,<sp/>floorplan_width,<sp/>_<sp/>=<sp/>floorplan.map.shape</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>bridge<sp/>=<sp/>CvBridge()</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>c_map<sp/>=<sp/>color_map(n=len(person_detection_clusters),<sp/>normalized=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>faces<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>person_detection<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(person_detection_clusters):</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image<sp/>=<sp/>bridge.imgmsg_to_cv2(person_detection[</highlight><highlight class="stringliteral">&apos;rgb&apos;</highlight><highlight class="normal">],<sp/></highlight><highlight class="stringliteral">&quot;bgr8&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roi<sp/>=<sp/>person_detection[</highlight><highlight class="stringliteral">&apos;person_detection&apos;</highlight><highlight class="normal">].face.roi</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roi_image<sp/>=<sp/>image[roi.y_offset:roi.y_offset<sp/>+<sp/>roi.height,<sp/>roi.x_offset:roi.x_offset<sp/>+<sp/>roi.width]</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desired_height<sp/>=<sp/>120</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height,<sp/>width,<sp/>channel<sp/>=<sp/>roi_image.shape</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ratio<sp/>=<sp/>float(height)<sp/>/<sp/>float(desired_height)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calculated_width<sp/>=<sp/>int(float(width)<sp/>/<sp/>ratio)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resized_roi_image<sp/>=<sp/>cv2.resize(roi_image,<sp/>(calculated_width,<sp/>desired_height))</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vs_image_frame<sp/>=<sp/>floorplan.map_pose.frame.Inverse()<sp/>*<sp/>person_detection[</highlight><highlight class="stringliteral">&apos;map_vs&apos;</highlight><highlight class="normal">].vector</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>px<sp/>=<sp/>int(vs_image_frame.x()<sp/>*<sp/>floorplan.pixels_per_meter_width)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py<sp/>=<sp/>int(vs_image_frame.y()<sp/>*<sp/>floorplan.pixels_per_meter_height)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face<sp/>=<sp/><ref refid="classchallenge__find__my__mates_1_1get__image_1_1Face" kindref="compound">Face</ref>(px,<sp/>py,<sp/>resized_roi_image)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>10):<sp/><sp/></highlight><highlight class="comment">#<sp/>Prevent<sp/>inf<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>face.correct(faces):</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(</highlight><highlight class="stringliteral">&quot;Correct<sp/>face&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face.draw(floorplan.map,<sp/>c_map[i])</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>faces.append(face)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(</highlight><highlight class="stringliteral">&quot;Drawing<sp/>image<sp/>roi<sp/>failed:<sp/>{}&quot;</highlight><highlight class="normal">.format(e))</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>label<sp/>=<sp/>&quot;female&quot;<sp/>if<sp/>person_detection[&apos;person_detection&apos;].gender<sp/>else<sp/>&quot;male&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>label<sp/>+=<sp/>&quot;,<sp/>&quot;<sp/>+<sp/>str(person_detection[&apos;person_detection&apos;].age)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>cv2.putText(floorplan.map,<sp/>label,<sp/>(px_image,<sp/>py_image<sp/>+<sp/>20),<sp/>cv2.FONT_HERSHEY_SIMPLEX,<sp/>0.7,<sp/>(0,<sp/>0,<sp/>255),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/>cv2.LINE_AA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>cv2.circle(floorplan,<sp/>(px,<sp/>py),<sp/>3,<sp/>(0,<sp/>0,<sp/>255),<sp/>5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>os.makedirs(os.path.expanduser(os.path.join(</highlight><highlight class="stringliteral">&quot;~&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;find_my_mates&quot;</highlight><highlight class="normal">)),<sp/>exist_ok=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>filename<sp/>=<sp/>os.path.expanduser(</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.path.join(</highlight><highlight class="stringliteral">&quot;~&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;find_my_mates&quot;</highlight><highlight class="normal">,<sp/>f</highlight><highlight class="stringliteral">&quot;floorplan-{datetime.now().strftime(&apos;%Y-%m-%d-%H-%M-%S&apos;)}.png&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>cv2.imwrite(filename,<sp/>floorplan.map)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>rospy.loginfo(f</highlight><highlight class="stringliteral">&quot;Wrote<sp/>image<sp/>to<sp/>{filename}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(person_detection_clusters)<sp/>&lt;<sp/>4:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logwarn(f</highlight><highlight class="stringliteral">&quot;Did<sp/>not<sp/>find<sp/>enough<sp/>ppl<sp/>in<sp/>room:<sp/>{len(person_detection_clusters)}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.speech.speak(</highlight><highlight class="stringliteral">&quot;Mates,<sp/>where<sp/>are<sp/>you?&quot;</highlight><highlight class="normal">,<sp/>block=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError()</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>filename</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robocup_knowledge<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>load_knowledge</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_skills<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>get_robot</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os.path</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="namespacechallenge__find__my__mates_1_1get__image_1aaac170e99d6010c0ea994d477ebd654d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>filename<sp/>=<sp/>os.path.expanduser(sys.argv[1])</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(filename,<sp/></highlight><highlight class="stringliteral">&apos;br&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="164" refid="namespacechallenge__find__my__mates_1_1get__image_1a92ca3174a2e8cf2cef291f732d38019a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ppl_dicts<sp/>=<sp/>pickle.load(f)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>rospy.init_node(os.path.splitext(</highlight><highlight class="stringliteral">&quot;test_&quot;</highlight><highlight class="normal"><sp/>+<sp/>os.path.basename(__file__))[0])</highlight></codeline>
<codeline lineno="167" refid="namespacechallenge__find__my__mates_1_1get__image_1a457b4293c7d843beca460b0a8f575365" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>robot<sp/>=<sp/>get_robot(</highlight><highlight class="stringliteral">&quot;hero&quot;</highlight><highlight class="normal">,<sp/>1)</highlight></codeline>
<codeline lineno="168" refid="namespacechallenge__find__my__mates_1_1get__image_1ada8a0fd5517944083a6a1d2530c791a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>challenge_knowledge<sp/>=<sp/>load_knowledge(</highlight><highlight class="stringliteral">&quot;challenge_find_my_mates&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacechallenge__find__my__mates_1_1get__image_1afd9c157df69b384aae6b1b767a8f1929" kindref="member">get_image</ref>(robot,<sp/>challenge_knowledge.room,<sp/>ppl_dicts)</highlight></codeline>
    </programlisting>
    <location file="src/challenge_find_my_mates/get_image.py"/>
  </compounddef>
</doxygen>
