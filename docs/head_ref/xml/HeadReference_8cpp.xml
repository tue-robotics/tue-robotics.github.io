<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="HeadReference_8cpp" kind="file" language="C++">
    <compoundname>HeadReference.cpp</compoundname>
    <includes refid="HeadReference_8h" local="yes">head_ref/HeadReference.h</includes>
    <includes local="no">std_msgs/Float64.h</includes>
    <includes local="no">urdf/model.h</includes>
    <includes local="no">visualization_msgs/Marker.h</includes>
    <includes local="no">tf2/transform_datatypes.h</includes>
    <includes local="no">tf2/LinearMath/Transform.h</includes>
    <includes local="no">tf2_geometry_msgs/tf2_geometry_msgs.h</includes>
    <includes local="no">tf2_ros/transform_listener.h</includes>
    <incdepgraph>
      <node id="13">
        <label>tf2/LinearMath/Transform.h</label>
      </node>
      <node id="8">
        <label>memory</label>
        <link refid="cpp/header/memory" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="6">
        <label>head_ref_msgs/HeadReferenceAction.h</label>
      </node>
      <node id="14">
        <label>tf2_geometry_msgs/tf2_geometry_msgs.h</label>
      </node>
      <node id="9">
        <label>std_msgs/Float64.h</label>
      </node>
      <node id="11">
        <label>visualization_msgs/Marker.h</label>
      </node>
      <node id="5">
        <label>actionlib/server/action_server.h</label>
      </node>
      <node id="4">
        <label>sensor_msgs/JointState.h</label>
      </node>
      <node id="3">
        <label>ros/ros.h</label>
      </node>
      <node id="12">
        <label>tf2/transform_datatypes.h</label>
      </node>
      <node id="1">
        <label>HeadReference.cpp</label>
        <link refid="HeadReference_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>tf2_ros/transform_listener.h</label>
      </node>
      <node id="2">
        <label>head_ref/HeadReference.h</label>
        <link refid="HeadReference_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>urdf/model.h</label>
      </node>
      <node id="7">
        <label>tf2_ros/buffer.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="HeadReference_8cpp_1a581f3bb272c94dcda52a5807fa29b091" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool compByPriority</definition>
        <argsstring>(HeadReferenceActionServer::GoalHandle a, HeadReferenceActionServer::GoalHandle b)</argsstring>
        <name>compByPriority</name>
        <param>
          <type>HeadReferenceActionServer::GoalHandle</type>
          <declname>a</declname>
        </param>
        <param>
          <type>HeadReferenceActionServer::GoalHandle</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/HeadReference.cpp" line="12" column="6" bodyfile="src/HeadReference.cpp" bodystart="12" bodyend="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="HeadReference_8h" kindref="compound">head_ref/HeadReference.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;std_msgs/Float64.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;urdf/model.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;visualization_msgs/Marker.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tf2/transform_datatypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tf2/LinearMath/Transform.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tf2_geometry_msgs/tf2_geometry_msgs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tf2_ros/transform_listener.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="HeadReference_8cpp_1a581f3bb272c94dcda52a5807fa29b091" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="HeadReference_8cpp_1a581f3bb272c94dcda52a5807fa29b091" kindref="member">compByPriority</ref>(HeadReferenceActionServer::GoalHandle<sp/>a,<sp/>HeadReferenceActionServer::GoalHandle<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.getGoal()-&gt;priority<sp/>&lt;<sp/>b.getGoal()-&gt;priority;</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classHeadReference_1a0d16e1b8cb3b85667e67cb228627f697" refkind="member"><highlight class="normal"><ref refid="classHeadReference_1a0d16e1b8cb3b85667e67cb228627f697" kindref="member">HeadReference::HeadReference</ref>()<sp/>:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>as_(nullptr),</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>tf_buffer_(),</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>tf_listener_(nullptr),</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>current_pan_(0),</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>current_tilt_(0),</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>goal_error_tolerance_(0.05)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_DEBUG(</highlight><highlight class="stringliteral">&quot;Init<sp/>HeadReference&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::NodeHandle<sp/>nh(</highlight><highlight class="stringliteral">&quot;~&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::NodeHandle<sp/><ref refid="look__around__client_8cpp_1ab34912f9ee005505c70ec21115e9573f" kindref="member">gh</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_DEBUG(</highlight><highlight class="stringliteral">&quot;Constructing<sp/>listener&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1a6b3214e36422aecff37dad87ca976ce5" kindref="member">tf_listener_</ref><sp/>=<sp/>std::make_unique&lt;tf2_ros::TransformListener&gt;(<ref refid="classHeadReference_1a26a97cb5ab914a8c0d922da85e339d4d" kindref="member">tf_buffer_</ref>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>action<sp/>server</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_DEBUG(</highlight><highlight class="stringliteral">&quot;Constructing<sp/>action<sp/>server&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1a5fa41898e8ae39d659ca5ff77b2218e2" kindref="member">as_</ref><sp/>=<sp/>std::make_unique&lt;HeadReferenceActionServer&gt;(nh,<sp/></highlight><highlight class="stringliteral">&quot;action_server&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1a5fa41898e8ae39d659ca5ff77b2218e2" kindref="member">as_</ref>-&gt;registerGoalCallback(boost::bind(&amp;<ref refid="classHeadReference_1a51870740dd48af624ac3d32265417b0c" kindref="member">HeadReference::goalCallback</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_1));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1a5fa41898e8ae39d659ca5ff77b2218e2" kindref="member">as_</ref>-&gt;registerCancelCallback(boost::bind(&amp;<ref refid="classHeadReference_1ad9cc27532e8e77de0147d730efd3c4bd" kindref="member">HeadReference::cancelCallback</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_1));</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>tf<sp/>prefix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_DEBUG(</highlight><highlight class="stringliteral">&quot;Getting<sp/>parameters&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::NodeHandle<sp/>n(</highlight><highlight class="stringliteral">&quot;~&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>n.param&lt;<ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&gt;(</highlight><highlight class="stringliteral">&quot;tf_prefix&quot;</highlight><highlight class="normal">,<sp/><ref refid="classHeadReference_1a5102cf6479d689b3c47192fe404659b8" kindref="member">tf_prefix_</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>n.param&lt;<ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&gt;(</highlight><highlight class="stringliteral">&quot;pan_joint_name&quot;</highlight><highlight class="normal">,<sp/><ref refid="classHeadReference_1abf0835ade8a5ad0824912e12a7873f14" kindref="member">pan_joint_props_</ref>.<ref refid="structJointProps_1affd0b7bec6e1bfe3ad58d9de909f7429" kindref="member">name</ref>,<sp/></highlight><highlight class="stringliteral">&quot;neck_pan_joint&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>n.param&lt;<ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&gt;(</highlight><highlight class="stringliteral">&quot;tilt_joint_name&quot;</highlight><highlight class="normal">,<sp/><ref refid="classHeadReference_1aabf0856d94f60c289d31befbfcdb7d80" kindref="member">tilt_joint_props_</ref>.<ref refid="structJointProps_1affd0b7bec6e1bfe3ad58d9de909f7429" kindref="member">name</ref>,<sp/></highlight><highlight class="stringliteral">&quot;neck_tilt_joint&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>n.param&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;default_pan&quot;</highlight><highlight class="normal">,<sp/><ref refid="classHeadReference_1af84c45151548c87e8f8364b81b86452b" kindref="member">default_pan_</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>n.param&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;default_tilt&quot;</highlight><highlight class="normal">,<sp/><ref refid="classHeadReference_1a557334f9d1cc592f29453c269d7efc8f" kindref="member">default_tilt_</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>n.param&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;float_topics&quot;</highlight><highlight class="normal">,<sp/><ref refid="classHeadReference_1af20ee9202bfd14383dc6569134899a4b" kindref="member">float_topics_</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classHeadReference_1a5102cf6479d689b3c47192fe404659b8" kindref="member">tf_prefix_</ref>.<ref refid="cpp/string/basic_string/empty" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">empty</ref>())</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1a61c3522c16e10e17749176792c86060a" kindref="member">frame_mount_</ref><sp/>=<sp/><ref refid="classHeadReference_1a5102cf6479d689b3c47192fe404659b8" kindref="member">tf_prefix_</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="classHeadReference_1a61c3522c16e10e17749176792c86060a" kindref="member">frame_mount_</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1ad2990dabd6331437490d206919d5e5e8" kindref="member">frame_neck_</ref><sp/>=<sp/><ref refid="classHeadReference_1a5102cf6479d689b3c47192fe404659b8" kindref="member">tf_prefix_</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="classHeadReference_1ad2990dabd6331437490d206919d5e5e8" kindref="member">frame_neck_</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1a7cdc5967e5214d9f6f6469fe92354d4f" kindref="member">frame_head_</ref><sp/>=<sp/><ref refid="classHeadReference_1a5102cf6479d689b3c47192fe404659b8" kindref="member">tf_prefix_</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="classHeadReference_1a7cdc5967e5214d9f6f6469fe92354d4f" kindref="member">frame_head_</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_DEBUG(</highlight><highlight class="stringliteral">&quot;Getting<sp/>joints<sp/>info&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classHeadReference_1a0417831a9f5a69294a9bf5ca45276616" kindref="member">getJointsInfo</ref>())</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ROS<sp/>publishers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_DEBUG(</highlight><highlight class="stringliteral">&quot;Creating<sp/>reference<sp/>publisher&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classHeadReference_1af20ee9202bfd14383dc6569134899a4b" kindref="member">float_topics_</ref>)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1a73839a241f2e000a3074f26d93668a73" kindref="member">pan_pub_</ref><sp/>=<sp/><ref refid="look__around__client_8cpp_1ab34912f9ee005505c70ec21115e9573f" kindref="member">gh</ref>.advertise&lt;std_msgs::Float64&gt;(</highlight><highlight class="stringliteral">&quot;pan_controller/command&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1a34916c8dd9f26ddeb209f153e067e223" kindref="member">tilt_pub_</ref><sp/>=<sp/><ref refid="look__around__client_8cpp_1ab34912f9ee005505c70ec21115e9573f" kindref="member">gh</ref>.advertise&lt;std_msgs::Float64&gt;(</highlight><highlight class="stringliteral">&quot;tilt_controller/command&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1a71a59193d48b41b7cbecf95ccd6aa6ec" kindref="member">head_pub_</ref><sp/>=<sp/><ref refid="look__around__client_8cpp_1ab34912f9ee005505c70ec21115e9573f" kindref="member">gh</ref>.advertise&lt;sensor_msgs::JointState&gt;(</highlight><highlight class="stringliteral">&quot;neck/references&quot;</highlight><highlight class="normal">,<sp/>50);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1aea7dfff914ee605d1ae2fc55fa6f9bf5" kindref="member">marker_pub_</ref><sp/>=<sp/>nh.advertise&lt;visualization_msgs::Marker&gt;(</highlight><highlight class="stringliteral">&quot;head_target_marker&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ROS<sp/>subscribers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_DEBUG(</highlight><highlight class="stringliteral">&quot;Creating<sp/>subscriber&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1a535a4809d0d23c986d1eb0de7036e7a4" kindref="member">measurement_sub_</ref><sp/>=<sp/><ref refid="look__around__client_8cpp_1ab34912f9ee005505c70ec21115e9573f" kindref="member">gh</ref>.subscribe(</highlight><highlight class="stringliteral">&quot;neck/measurements&quot;</highlight><highlight class="normal">,<sp/>5,<sp/>&amp;<ref refid="classHeadReference_1a7a34bc50bdb4c5b78bef1f5d445c8fb4" kindref="member">HeadReference::measurementCallBack</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>measurements<sp/>@<sp/>100<sp/>Hz<sp/>will<sp/>need<sp/>a<sp/>queue<sp/>of<sp/>100/25=4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>action<sp/>server</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_DEBUG(</highlight><highlight class="stringliteral">&quot;Starting<sp/>action<sp/>server&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1a5fa41898e8ae39d659ca5ff77b2218e2" kindref="member">as_</ref>-&gt;start();</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="classHeadReference_1a26030e2f309385700170de5c14b09b56" refkind="member"><highlight class="normal"><ref refid="classHeadReference_1a26030e2f309385700170de5c14b09b56" kindref="member">HeadReference::~HeadReference</ref>()</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classHeadReference_1a7a34bc50bdb4c5b78bef1f5d445c8fb4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHeadReference_1a7a34bc50bdb4c5b78bef1f5d445c8fb4" kindref="member">HeadReference::measurementCallBack</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sensor_msgs::JointState&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_DEBUG_STREAM_THROTTLE(1.0,<sp/></highlight><highlight class="stringliteral">&quot;Received<sp/>joint<sp/>measurement&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>msg.name.size();<sp/>++i)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg.name[i]<sp/>==<sp/><ref refid="classHeadReference_1abf0835ade8a5ad0824912e12a7873f14" kindref="member">pan_joint_props_</ref>.<ref refid="structJointProps_1affd0b7bec6e1bfe3ad58d9de909f7429" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_DEBUG_STREAM_THROTTLE(1.0,<sp/></highlight><highlight class="stringliteral">&quot;Updating<sp/>neck<sp/>pan<sp/>joint<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg.position[i]);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1a1f581773de7ae5b78cbc33686c3ef02f" kindref="member">current_pan_</ref><sp/>=<sp/>msg.position[i];</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg.name[i]<sp/>==<sp/><ref refid="classHeadReference_1aabf0856d94f60c289d31befbfcdb7d80" kindref="member">tilt_joint_props_</ref>.<ref refid="structJointProps_1affd0b7bec6e1bfe3ad58d9de909f7429" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_DEBUG_STREAM_THROTTLE(1.0,<sp/></highlight><highlight class="stringliteral">&quot;Updating<sp/>neck<sp/>tilt<sp/>joint<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg.position[i]);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1ab21c21d0457c9e2ee5bf98685d6f225b" kindref="member">current_tilt_</ref><sp/>=<sp/>msg.position[i];</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="classHeadReference_1a51870740dd48af624ac3d32265417b0c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHeadReference_1a51870740dd48af624ac3d32265417b0c" kindref="member">HeadReference::goalCallback</ref>(HeadReferenceActionServer::GoalHandle<sp/><ref refid="look__around__client_8cpp_1ab34912f9ee005505c70ec21115e9573f" kindref="member">gh</ref>)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>head_ref_msgs::HeadReferenceGoalConstPtr<sp/>goal<sp/>=<sp/><ref refid="look__around__client_8cpp_1ab34912f9ee005505c70ec21115e9573f" kindref="member">gh</ref>.getGoal();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_DEBUG_STREAM(</highlight><highlight class="stringliteral">&quot;HR:<sp/>Goal<sp/>Callback<sp/>of<sp/>priority<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>goal-&gt;priority);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ROBOCUP<sp/>HACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(goal-&gt;goal_type<sp/>==<sp/>head_ref_msgs::HeadReferenceGoal::LOOKAT_AND_FREEZE)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>pan<sp/>and<sp/>tilt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1ade91189272e082815599d5e8c425b5ae" kindref="member">targetToPanTilt</ref>(goal-&gt;target_point,<sp/><ref refid="classHeadReference_1a14468385fadbaedd63eb218468bb789e" kindref="member">lookat_and_freeze_goal_</ref>.pan,<sp/><ref refid="classHeadReference_1a14468385fadbaedd63eb218468bb789e" kindref="member">lookat_and_freeze_goal_</ref>.tilt);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>abort<sp/>goal<sp/>with<sp/>same<sp/>priority</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1ae274b77ee4624826ebe07a5ae1e57dc1" kindref="member">abortGoalWithSamePriority</ref>(goal-&gt;priority);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Accept<sp/>the<sp/>goal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="look__around__client_8cpp_1ab34912f9ee005505c70ec21115e9573f" kindref="member">gh</ref>.setAccepted();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Push<sp/>back<sp/>goal<sp/>handle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1a024f44d720f62e4426a94642615b3838" kindref="member">goal_handles_</ref>.<ref refid="cpp/container/vector/push_back" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">push_back</ref>(<ref refid="look__around__client_8cpp_1ab34912f9ee005505c70ec21115e9573f" kindref="member">gh</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sort<sp/>goal<sp/>handles<sp/>on<sp/>priority</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/algorithm/sort" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::sort</ref>(<ref refid="classHeadReference_1a024f44d720f62e4426a94642615b3838" kindref="member">goal_handles_</ref>.<ref refid="cpp/container/vector/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>(),<ref refid="classHeadReference_1a024f44d720f62e4426a94642615b3838" kindref="member">goal_handles_</ref>.<ref refid="cpp/container/vector/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>(),<ref refid="HeadReference_8cpp_1a581f3bb272c94dcda52a5807fa29b091" kindref="member">compByPriority</ref>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="classHeadReference_1ae274b77ee4624826ebe07a5ae1e57dc1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHeadReference_1ae274b77ee4624826ebe07a5ae1e57dc1" kindref="member">HeadReference::abortGoalWithSamePriority</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmd__vel__client_8cpp_1acec9ce2df15222151ad66fcb1d74eb9f" kindref="member">priority</ref>)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;HeadReferenceActionServer::GoalHandle&gt;::iterator</ref><sp/>it<sp/>=<sp/><ref refid="classHeadReference_1a024f44d720f62e4426a94642615b3838" kindref="member">goal_handles_</ref>.<ref refid="cpp/container/vector/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>it<sp/>!=<sp/><ref refid="classHeadReference_1a024f44d720f62e4426a94642615b3838" kindref="member">goal_handles_</ref>.<ref refid="cpp/container/vector/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>();<sp/>++it)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;getGoal()-&gt;priority<sp/>==<sp/><ref refid="cmd__vel__client_8cpp_1acec9ce2df15222151ad66fcb1d74eb9f" kindref="member">priority</ref>)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head_ref_msgs::HeadReferenceResult<sp/>result;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.error<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Client<sp/>with<sp/>same<sp/>priority<sp/>registered.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_DEBUG_STREAM(</highlight><highlight class="stringliteral">&quot;HR:<sp/>Client<sp/>with<sp/>same<sp/>priority<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cmd__vel__client_8cpp_1acec9ce2df15222151ad66fcb1d74eb9f" kindref="member">priority</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>registered.<sp/>Aborting<sp/>old<sp/>client.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;setAborted(result);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1a024f44d720f62e4426a94642615b3838" kindref="member">goal_handles_</ref>.<ref refid="cpp/container/vector/erase" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">erase</ref>(it);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="classHeadReference_1acbfe0b4fa3817209b5ab1fc5f3fb573d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHeadReference_1acbfe0b4fa3817209b5ab1fc5f3fb573d" kindref="member">HeadReference::checkTimeOuts</ref>()</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;HeadReferenceActionServer::GoalHandle&gt;::iterator</ref><sp/>it<sp/>=<sp/><ref refid="classHeadReference_1a024f44d720f62e4426a94642615b3838" kindref="member">goal_handles_</ref>.<ref refid="cpp/container/vector/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>();<sp/>it<sp/>!=<sp/><ref refid="classHeadReference_1a024f44d720f62e4426a94642615b3838" kindref="member">goal_handles_</ref>.<ref refid="cpp/container/vector/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>();)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>end_time<sp/>=<sp/>it-&gt;getGoal()-&gt;end_time;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(end_time<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>ros::Time::now().toSec()<sp/>&gt;<sp/>end_time)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head_ref_msgs::HeadReferenceResult<sp/>result;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.error<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TimeOut<sp/>exceeded!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;setAborted(result);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/><ref refid="classHeadReference_1a024f44d720f62e4426a94642615b3838" kindref="member">goal_handles_</ref>.<ref refid="cpp/container/vector/erase" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">erase</ref>(it);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="classHeadReference_1ad9cc27532e8e77de0147d730efd3c4bd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHeadReference_1ad9cc27532e8e77de0147d730efd3c4bd" kindref="member">HeadReference::cancelCallback</ref>(HeadReferenceActionServer::GoalHandle<sp/><ref refid="look__around__client_8cpp_1ab34912f9ee005505c70ec21115e9573f" kindref="member">gh</ref>)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_DEBUG_STREAM(</highlight><highlight class="stringliteral">&quot;HR:<sp/>Cancel<sp/>callback<sp/>with<sp/>priority<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><ref refid="look__around__client_8cpp_1ab34912f9ee005505c70ec21115e9573f" kindref="member">gh</ref>.getGoal()-&gt;priority);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>goalhandle<sp/>in<sp/>the<sp/>goal_handles_<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;HeadReferenceActionServer::GoalHandle&gt;::iterator</ref><sp/>it<sp/>=<sp/><ref refid="cpp/algorithm/find" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::find</ref>(<ref refid="classHeadReference_1a024f44d720f62e4426a94642615b3838" kindref="member">goal_handles_</ref>.<ref refid="cpp/container/vector/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>(),<sp/><ref refid="classHeadReference_1a024f44d720f62e4426a94642615b3838" kindref="member">goal_handles_</ref>.<ref refid="cpp/container/vector/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>(),<sp/><ref refid="look__around__client_8cpp_1ab34912f9ee005505c70ec21115e9573f" kindref="member">gh</ref>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>element<sp/>exist<sp/>(just<sp/>for<sp/>safety)<sp/>and<sp/>erase<sp/>the<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="classHeadReference_1a024f44d720f62e4426a94642615b3838" kindref="member">goal_handles_</ref>.<ref refid="cpp/container/vector/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>())</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1a024f44d720f62e4426a94642615b3838" kindref="member">goal_handles_</ref>.<ref refid="cpp/container/vector/erase" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">erase</ref>(it);</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="classHeadReference_1a9486bad207a969d750235989f2852a50" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHeadReference_1a9486bad207a969d750235989f2852a50" kindref="member">HeadReference::generateReferences</ref>()</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1acbfe0b4fa3817209b5ab1fc5f3fb573d" kindref="member">checkTimeOuts</ref>();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>head_ref_msgs::HeadReferenceGoal<sp/>goal;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classHeadReference_1a024f44d720f62e4426a94642615b3838" kindref="member">goal_handles_</ref>.<ref refid="cpp/container/vector/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Take<sp/>the<sp/>highest<sp/>priority<sp/>goal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeadReferenceActionServer::GoalHandle<sp/><ref refid="look__around__client_8cpp_1ab34912f9ee005505c70ec21115e9573f" kindref="member">gh</ref><sp/>=<sp/><ref refid="classHeadReference_1a024f44d720f62e4426a94642615b3838" kindref="member">goal_handles_</ref>.<ref refid="cpp/container/vector/front" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">front</ref>();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal<sp/>=<sp/>*<ref refid="look__around__client_8cpp_1ab34912f9ee005505c70ec21115e9573f" kindref="member">gh</ref>.getGoal();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(goal.goal_type<sp/>==<sp/>head_ref_msgs::HeadReferenceGoal::LOOKAT<sp/>||<sp/>goal.goal_type<sp/>==<sp/>head_ref_msgs::HeadReferenceGoal::LOOKAT_AND_FREEZE)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>pan<sp/>and<sp/>tilt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal.target_point.header.stamp<sp/>=<sp/>ros::Time();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pan_goal,<sp/>tilt_goal;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classHeadReference_1ade91189272e082815599d5e8c425b5ae" kindref="member">targetToPanTilt</ref>(goal.target_point,<sp/>pan_goal,<sp/>tilt_goal))</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="look__around__client_8cpp_1ab34912f9ee005505c70ec21115e9573f" kindref="member">gh</ref>.setAborted();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1a024f44d720f62e4426a94642615b3838" kindref="member">goal_handles_</ref>.<ref refid="cpp/container/vector/erase" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">erase</ref><sp/>(<ref refid="classHeadReference_1a024f44d720f62e4426a94642615b3838" kindref="member">goal_handles_</ref>.<ref refid="cpp/container/vector/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>(),<sp/><ref refid="classHeadReference_1a024f44d720f62e4426a94642615b3838" kindref="member">goal_handles_</ref>.<ref refid="cpp/container/vector/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>()+1);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal.pan<sp/>=<sp/><ref refid="classHeadReference_1aa7a4b58ec7eed4f496389d2bf1938376" kindref="member">limitReferences</ref>(<ref refid="classHeadReference_1abf0835ade8a5ad0824912e12a7873f14" kindref="member">pan_joint_props_</ref>,<sp/>pan_goal<sp/>*<sp/><ref refid="classHeadReference_1abf0835ade8a5ad0824912e12a7873f14" kindref="member">pan_joint_props_</ref>.<ref refid="structJointProps_1a943aea687f25ffb7e59fd9259f4025ed" kindref="member">direction</ref>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal.tilt<sp/>=<sp/><ref refid="classHeadReference_1aa7a4b58ec7eed4f496389d2bf1938376" kindref="member">limitReferences</ref>(<ref refid="classHeadReference_1aabf0856d94f60c289d31befbfcdb7d80" kindref="member">tilt_joint_props_</ref>,<sp/>tilt_goal<sp/>*<sp/><ref refid="classHeadReference_1aabf0856d94f60c289d31befbfcdb7d80" kindref="member">tilt_joint_props_</ref>.<ref refid="structJointProps_1a943aea687f25ffb7e59fd9259f4025ed" kindref="member">direction</ref>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1aff99dcd69d2c5933b90c4811c335e17e" kindref="member">publishMarker</ref>(goal.target_point);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(goal.goal_type<sp/>==<sp/>head_ref_msgs::HeadReferenceGoal::PAN_TILT)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal.pan<sp/>=<sp/><ref refid="classHeadReference_1aa7a4b58ec7eed4f496389d2bf1938376" kindref="member">limitReferences</ref>(<ref refid="classHeadReference_1abf0835ade8a5ad0824912e12a7873f14" kindref="member">pan_joint_props_</ref>,<sp/>goal.pan<sp/>*<sp/><ref refid="classHeadReference_1abf0835ade8a5ad0824912e12a7873f14" kindref="member">pan_joint_props_</ref>.<ref refid="structJointProps_1a943aea687f25ffb7e59fd9259f4025ed" kindref="member">direction</ref>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal.tilt<sp/>=<sp/><ref refid="classHeadReference_1aa7a4b58ec7eed4f496389d2bf1938376" kindref="member">limitReferences</ref>(<ref refid="classHeadReference_1aabf0856d94f60c289d31befbfcdb7d80" kindref="member">tilt_joint_props_</ref>,<sp/>goal.tilt<sp/>*<sp/><ref refid="classHeadReference_1aabf0856d94f60c289d31befbfcdb7d80" kindref="member">tilt_joint_props_</ref>.<ref refid="structJointProps_1a943aea687f25ffb7e59fd9259f4025ed" kindref="member">direction</ref>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>whether<sp/>we<sp/>are<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head_ref_msgs::HeadReferenceFeedback<sp/>fb;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pan_error<sp/>=<sp/>goal.pan<sp/>-<sp/><ref refid="classHeadReference_1a1f581773de7ae5b78cbc33686c3ef02f" kindref="member">current_pan_</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tilt_error<sp/>=<sp/>goal.tilt<sp/>-<sp/><ref refid="classHeadReference_1ab21c21d0457c9e2ee5bf98685d6f225b" kindref="member">current_tilt_</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(pan_error)<sp/>&lt;<sp/><ref refid="classHeadReference_1abc0991958b34ca3e1d6ffa2331d9ae2c" kindref="member">goal_error_tolerance_</ref><sp/>&amp;&amp;<sp/>fabs(tilt_error)<sp/>&lt;<sp/><ref refid="classHeadReference_1abc0991958b34ca3e1d6ffa2331d9ae2c" kindref="member">goal_error_tolerance_</ref>)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fb.at_setpoint<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="look__around__client_8cpp_1ab34912f9ee005505c70ec21115e9573f" kindref="member">gh</ref>.publishFeedback(fb);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_DEBUG_STREAM_THROTTLE(1.0,<sp/></highlight><highlight class="stringliteral">&quot;Pan<sp/>error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pan_error<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>tilt<sp/>error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tilt_error);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fb.at_setpoint<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="look__around__client_8cpp_1ab34912f9ee005505c70ec21115e9573f" kindref="member">gh</ref>.publishFeedback(fb);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal.goal_type<sp/>=<sp/>head_ref_msgs::HeadReferenceGoal::PAN_TILT;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal.pan<sp/>=<sp/><ref refid="classHeadReference_1af84c45151548c87e8f8364b81b86452b" kindref="member">default_pan_</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal.tilt<sp/>=<sp/><ref refid="classHeadReference_1a557334f9d1cc592f29453c269d7efc8f" kindref="member">default_tilt_</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_DEBUG_THROTTLE(1.0,<sp/></highlight><highlight class="stringliteral">&quot;Current<sp/>head<sp/>goal<sp/>(pan/tilt):<sp/>%.3f,%.3f&quot;</highlight><highlight class="normal">,goal.pan,goal.tilt);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ROBOCUP<sp/>HACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(goal.goal_type<sp/>==<sp/>head_ref_msgs::HeadReferenceGoal::LOOKAT_AND_FREEZE)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal<sp/>=<sp/><ref refid="classHeadReference_1a14468385fadbaedd63eb218468bb789e" kindref="member">lookat_and_freeze_goal_</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal.goal_type<sp/>=<sp/>head_ref_msgs::HeadReferenceGoal::PAN_TILT;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal.pan<sp/>=<sp/><ref refid="classHeadReference_1aa7a4b58ec7eed4f496389d2bf1938376" kindref="member">limitReferences</ref>(<ref refid="classHeadReference_1abf0835ade8a5ad0824912e12a7873f14" kindref="member">pan_joint_props_</ref>,<sp/>goal.pan<sp/>*<sp/><ref refid="classHeadReference_1abf0835ade8a5ad0824912e12a7873f14" kindref="member">pan_joint_props_</ref>.<ref refid="structJointProps_1a943aea687f25ffb7e59fd9259f4025ed" kindref="member">direction</ref>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal.tilt<sp/>=<sp/><ref refid="classHeadReference_1aa7a4b58ec7eed4f496389d2bf1938376" kindref="member">limitReferences</ref>(<ref refid="classHeadReference_1aabf0856d94f60c289d31befbfcdb7d80" kindref="member">tilt_joint_props_</ref>,<sp/>goal.tilt<sp/>*<sp/><ref refid="classHeadReference_1aabf0856d94f60c289d31befbfcdb7d80" kindref="member">tilt_joint_props_</ref>.<ref refid="structJointProps_1a943aea687f25ffb7e59fd9259f4025ed" kindref="member">direction</ref>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal.tilt_vel<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal.pan_vel<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1ad41d2378398cb2ea305d362cb3853519" kindref="member">publishReferences</ref>(goal);</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="classHeadReference_1aa7a4b58ec7eed4f496389d2bf1938376" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classHeadReference_1aa7a4b58ec7eed4f496389d2bf1938376" kindref="member">HeadReference::limitReferences</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structJointProps" kindref="compound">JointProps</ref>&amp;<sp/>props,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>reference)</highlight></codeline>
<codeline lineno="265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reference<sp/>&lt;<sp/>props.lower<sp/>||<sp/>reference<sp/>&gt;<sp/>props.<ref refid="structJointProps_1a3746bd48bb0103ef6a2ee4a98b4605a4" kindref="member">upper</ref>)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_WARN_STREAM_THROTTLE(1.0,<sp/></highlight><highlight class="stringliteral">&quot;Reference<sp/>for<sp/>joint<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>props.<ref refid="structJointProps_1affd0b7bec6e1bfe3ad58d9de909f7429" kindref="member">name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>reference<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>exceeds<sp/>limits<sp/>(&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>props.<ref refid="structJointProps_1a82463f04d197d4eac8574693a21d718d" kindref="member">lower</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>props.<ref refid="structJointProps_1a3746bd48bb0103ef6a2ee4a98b4605a4" kindref="member">upper</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;),<sp/>overwriting&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cpp/algorithm/max" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::max</ref>(props.<ref refid="structJointProps_1a82463f04d197d4eac8574693a21d718d" kindref="member">lower</ref>,<sp/><ref refid="cpp/algorithm/min" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::min</ref>(props.<ref refid="structJointProps_1a3746bd48bb0103ef6a2ee4a98b4605a4" kindref="member">upper</ref>,<sp/>reference));</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reference;</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="classHeadReference_1ad41d2378398cb2ea305d362cb3853519" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHeadReference_1ad41d2378398cb2ea305d362cb3853519" kindref="member">HeadReference::publishReferences</ref>(head_ref_msgs::HeadReferenceGoal<sp/>&amp;goal)</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Publish<sp/>angles<sp/>over<sp/>ROS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classHeadReference_1af20ee9202bfd14383dc6569134899a4b" kindref="member">float_topics_</ref><sp/>)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Populate<sp/>msgs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std_msgs::Float64<sp/>pan_ref,<sp/>tilt_ref;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pan_ref.data<sp/>=<sp/>goal.pan;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tilt_ref.data<sp/>=<sp/>goal.tilt;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1a73839a241f2e000a3074f26d93668a73" kindref="member">pan_pub_</ref>.publish(pan_ref);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1a34916c8dd9f26ddeb209f153e067e223" kindref="member">tilt_pub_</ref>.publish(tilt_ref);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Populate<sp/>msg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sensor_msgs::JointState<sp/>head_ref;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>head_ref.name.push_back(<ref refid="classHeadReference_1abf0835ade8a5ad0824912e12a7873f14" kindref="member">pan_joint_props_</ref>.<ref refid="structJointProps_1affd0b7bec6e1bfe3ad58d9de909f7429" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>head_ref.name.push_back(<ref refid="classHeadReference_1aabf0856d94f60c289d31befbfcdb7d80" kindref="member">tilt_joint_props_</ref>.<ref refid="structJointProps_1affd0b7bec6e1bfe3ad58d9de909f7429" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>head_ref.position.push_back(goal.pan);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>head_ref.position.push_back(goal.tilt);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>head_ref.velocity.push_back(goal.pan_vel);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>head_ref.velocity.push_back(goal.tilt_vel);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1a71a59193d48b41b7cbecf95ccd6aa6ec" kindref="member">head_pub_</ref>.publish(head_ref);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="classHeadReference_1ade91189272e082815599d5e8c425b5ae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classHeadReference_1ade91189272e082815599d5e8c425b5ae" kindref="member">HeadReference::targetToPanTilt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>geometry_msgs::PointStamped&amp;<sp/>target,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>pan,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>tilt)</highlight></codeline>
<codeline lineno="307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>tf2::Stamped&lt;tf2::Vector3&gt;<sp/>target_MOUNT;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1a26a97cb5ab914a8c0d922da85e339d4d" kindref="member">tf_buffer_</ref>.transform(target,<sp/>target_MOUNT,<sp/><ref refid="classHeadReference_1a61c3522c16e10e17749176792c86060a" kindref="member">frame_mount_</ref>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(tf2::TransformException&amp;<sp/>ex)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>tf2::Stamped&lt;tf2::Vector3&gt;<sp/>target_NECK;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1a26a97cb5ab914a8c0d922da85e339d4d" kindref="member">tf_buffer_</ref>.transform(target,<sp/>target_NECK,<sp/><ref refid="classHeadReference_1ad2990dabd6331437490d206919d5e5e8" kindref="member">frame_neck_</ref>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(tf2::TransformException&amp;<sp/>ex)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mount_to_neck;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::TransformStamped<sp/>transform;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transform<sp/>=<sp/><ref refid="classHeadReference_1a26a97cb5ab914a8c0d922da85e339d4d" kindref="member">tf_buffer_</ref>.lookupTransform(<ref refid="classHeadReference_1a61c3522c16e10e17749176792c86060a" kindref="member">frame_mount_</ref>,<sp/><ref refid="classHeadReference_1ad2990dabd6331437490d206919d5e5e8" kindref="member">frame_neck_</ref>,<sp/>ros::Time());</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount_to_neck<sp/>=<sp/>transform.transform.translation.x;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(tf2::TransformException&amp;<sp/>ex)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>neck_to_head_vert;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::TransformStamped<sp/>transform;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transform<sp/>=<sp/><ref refid="classHeadReference_1a26a97cb5ab914a8c0d922da85e339d4d" kindref="member">tf_buffer_</ref>.lookupTransform(<ref refid="classHeadReference_1ad2990dabd6331437490d206919d5e5e8" kindref="member">frame_neck_</ref>,<sp/><ref refid="classHeadReference_1a7cdc5967e5214d9f6f6469fe92354d4f" kindref="member">frame_head_</ref>,<sp/>ros::Time());</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neck_to_head_vert<sp/>=<sp/>transform.transform.translation.z;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(tf2::TransformException&amp;<sp/>ex)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>pan<sp/>=<sp/>-atan2(target_MOUNT.getY(),<sp/>target_MOUNT.getZ());</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>neck_to_target<sp/>=<sp/>target_NECK.length();</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>target_to_neck_vert<sp/>=<sp/>target_MOUNT.getX()<sp/>-<sp/>mount_to_neck;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>head_mount_to_target_flat<sp/>=<sp/>sqrt(target_MOUNT.getY()<sp/>*<sp/>target_MOUNT.getY()<sp/>+<sp/>target_MOUNT.getZ()<sp/>*<sp/>target_MOUNT.getZ());</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tilt_basic<sp/>=<sp/>-atan(target_to_neck_vert<sp/>/<sp/>head_mount_to_target_flat);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tilt_camera_offset_correction<sp/>=<sp/>asin(neck_to_head_vert<sp/>/<sp/>neck_to_target);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>tilt<sp/>=<sp/>tilt_basic<sp/>+<sp/>tilt_camera_offset_correction;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="classHeadReference_1a0417831a9f5a69294a9bf5ca45276616" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classHeadReference_1a0417831a9f5a69294a9bf5ca45276616" kindref="member">HeadReference::getJointsInfo</ref>()</highlight></codeline>
<codeline lineno="374"><highlight class="normal">{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>urdf::Model<sp/>model;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!model.initParam(</highlight><highlight class="stringliteral">&quot;robot_description&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>get<sp/>URDF<sp/>model<sp/>from<sp/>the<sp/>parameter<sp/>server&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classHeadReference_1a36f0299b3542cae73955433d738339c7" kindref="member">getJointInfo</ref>(model,<sp/><ref refid="classHeadReference_1abf0835ade8a5ad0824912e12a7873f14" kindref="member">pan_joint_props_</ref>))</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classHeadReference_1a36f0299b3542cae73955433d738339c7" kindref="member">getJointInfo</ref>(model,<sp/><ref refid="classHeadReference_1aabf0856d94f60c289d31befbfcdb7d80" kindref="member">tilt_joint_props_</ref>))</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392" refid="classHeadReference_1a36f0299b3542cae73955433d738339c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classHeadReference_1a36f0299b3542cae73955433d738339c7" kindref="member">HeadReference::getJointInfo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>urdf::Model<sp/>&amp;model,<sp/><ref refid="structJointProps" kindref="compound">JointProps</ref><sp/>&amp;props)</highlight></codeline>
<codeline lineno="393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>joint<sp/>info<sp/>from<sp/>urdf<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>urdf::JointConstSharedPtr<sp/>joint_ptr<sp/>=<sp/>model.getJoint(props.<ref refid="structJointProps_1affd0b7bec6e1bfe3ad58d9de909f7429" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(joint_ptr<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ERROR_STREAM(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>get<sp/>joint<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>props.<ref refid="structJointProps_1affd0b7bec6e1bfe3ad58d9de909f7429" kindref="member">name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>from<sp/>the<sp/>urdf<sp/>model&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>joint<sp/>limits<sp/>from<sp/>joint<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>props.<ref refid="structJointProps_1a82463f04d197d4eac8574693a21d718d" kindref="member">lower</ref><sp/>=<sp/>joint_ptr-&gt;limits-&gt;lower;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>props.<ref refid="structJointProps_1a3746bd48bb0103ef6a2ee4a98b4605a4" kindref="member">upper</ref><sp/>=<sp/>joint_ptr-&gt;limits-&gt;upper;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>direction<sp/>from<sp/>joint<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(joint_ptr-&gt;axis.x<sp/>&gt;<sp/>0.99<sp/>||<sp/>joint_ptr-&gt;axis.y<sp/>&gt;<sp/>0.99<sp/>||<sp/>joint_ptr-&gt;axis.z<sp/>&gt;<sp/>0.99)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>props.<ref refid="structJointProps_1a943aea687f25ffb7e59fd9259f4025ed" kindref="member">direction</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(joint_ptr-&gt;axis.x<sp/>&lt;<sp/>-0.99<sp/>||<sp/>joint_ptr-&gt;axis.y<sp/>&lt;<sp/>-0.99<sp/>||<sp/>joint_ptr-&gt;axis.z<sp/>&lt;<sp/>-0.99)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>props.<ref refid="structJointProps_1a943aea687f25ffb7e59fd9259f4025ed" kindref="member">direction</ref><sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ERROR_STREAM(</highlight><highlight class="stringliteral">&quot;Don&apos;t<sp/>know<sp/>how<sp/>to<sp/>define<sp/>the<sp/>direction<sp/>of<sp/>joint<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>props.<ref refid="structJointProps_1affd0b7bec6e1bfe3ad58d9de909f7429" kindref="member">name</ref><sp/></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(this<sp/>is<sp/>not<sp/>supported),<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;axis<sp/>of<sp/>rotation<sp/>should<sp/>coincide<sp/>with<sp/>one<sp/>of<sp/>the<sp/>principle<sp/>axes<sp/>(x,<sp/>y,<sp/>z,<sp/>-x,<sp/>-y,<sp/>-z)<sp/>of<sp/>the<sp/>joint&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>ROS_INFO_STREAM(</highlight><highlight class="stringliteral">&quot;Limits<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>props.<ref refid="structJointProps_1affd0b7bec6e1bfe3ad58d9de909f7429" kindref="member">name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>props.<ref refid="structJointProps_1a82463f04d197d4eac8574693a21d718d" kindref="member">lower</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>props.<ref refid="structJointProps_1a3746bd48bb0103ef6a2ee4a98b4605a4" kindref="member">upper</ref></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>direction:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>props.<ref refid="structJointProps_1a943aea687f25ffb7e59fd9259f4025ed" kindref="member">direction</ref>);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>is<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428" refid="classHeadReference_1aff99dcd69d2c5933b90c4811c335e17e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHeadReference_1aff99dcd69d2c5933b90c4811c335e17e" kindref="member">HeadReference::publishMarker</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>geometry_msgs::PointStamped&amp;<sp/>target)</highlight></codeline>
<codeline lineno="429"><highlight class="normal">{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//create<sp/>marker<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>visualization_msgs::Marker<sp/>marker;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>shape<sp/>=<sp/>visualization_msgs::Marker::SPHERE;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>frame<sp/>ID<sp/>and<sp/>timestamp.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.header.frame_id<sp/>=<sp/>target.header.frame_id;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.header.stamp<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.ns<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;head_target&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>marker<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.type<sp/>=<sp/>shape;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>marker<sp/>action.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.action<sp/>=<sp/>visualization_msgs::Marker::ADD;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>pose<sp/>of<sp/>the<sp/>marker.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.pose.position<sp/>=<sp/>target.point;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.pose.orientation<sp/>=<sp/>tf2::toMsg(tf2::Quaternion::getIdentity());</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>scale<sp/>of<sp/>the<sp/>marker<sp/>--<sp/>1x1x1<sp/>here<sp/>means<sp/>1m<sp/>on<sp/>a<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.scale.x<sp/>=<sp/>0.08;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.scale.y<sp/>=<sp/>0.08;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.scale.z<sp/>=<sp/>0.08;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>color<sp/>--<sp/>be<sp/>sure<sp/>to<sp/>set<sp/>alpha<sp/>to<sp/>something<sp/>non-zero!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.color.r<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.color.g<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.color.b<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.color.a<sp/>=<sp/>0.6;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Publish<sp/>the<sp/>marker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHeadReference_1aea7dfff914ee605d1ae2fc55fa6f9bf5" kindref="member">marker_pub_</ref>.publish(marker);</highlight></codeline>
<codeline lineno="465"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/HeadReference.cpp"/>
  </compounddef>
</doxygen>
