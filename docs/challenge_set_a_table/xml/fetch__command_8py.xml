<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="fetch__command_8py" kind="file" language="Python">
    <compoundname>fetch_command.py</compoundname>
    <innerclass refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder" prot="public">challenge_set_a_table_states::fetch_command::GetBreakfastOrder</innerclass>
    <innerclass refid="classchallenge__set__a__table__states_1_1fetch__command_1_1HearFetchCommand" prot="public">challenge_set_a_table_states::fetch_command::HearFetchCommand</innerclass>
    <innerclass refid="classchallenge__set__a__table__states_1_1fetch__command_1_1TestFetchCommand" prot="public">challenge_set_a_table_states::fetch_command::TestFetchCommand</innerclass>
    <innernamespace refid="namespacechallenge__set__a__table__states_1_1fetch__command">challenge_set_a_table_states::fetch_command</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacechallenge__set__a__table__states_1_1fetch__command" refkind="compound"><highlight class="comment">#!<sp/>/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>print_function</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>ROS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>rospy</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>smach</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>TU/e<sp/>Robotics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>hmi</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>robot_smach_states.util.designators<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ds</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_smach_states.human_interaction<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Say</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_smach_states.utility<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Initialize</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_smach_states.util.startup<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>startup</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="namespacechallenge__set__a__table__states_1_1fetch__command_1aee80d5456910b21f808a3bf7e1fb17ec" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacechallenge__set__a__table__states_1_1fetch__command_1aee80d5456910b21f808a3bf7e1fb17ec" kindref="member">fetch</ref>(robot,<sp/>time_out=15.0,<sp/>task=&quot;set&quot;):</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>robot:<sp/>robot<sp/>object</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>time_out:<sp/>timeout<sp/>in<sp/>seconds<sp/>(not<sp/>yet<sp/>used)</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>task:<sp/>string<sp/>with<sp/>set<sp/>or<sp/>clear</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:return:<sp/>string<sp/>with<sp/>heard<sp/>or<sp/>not<sp/>heard</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>confirmed<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>robot.speech.speak(</highlight><highlight class="stringliteral">&apos;What<sp/>can<sp/>I<sp/>do<sp/>for<sp/>you,<sp/>master?&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Listen<sp/>for<sp/>the<sp/>new<sp/>task</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>confirmed<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>i<sp/>&lt;<sp/>10:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>task<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;set&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sentence,<sp/>semantics<sp/>=<sp/>robot.hmi.query(</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;T<sp/>-&gt;<sp/>set<sp/>the<sp/>table&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;T&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;heard&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>task<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;clear&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sentence,<sp/>semantics<sp/>=<sp/>robot.hmi.query(</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;T<sp/>-&gt;<sp/>clear<sp/>the<sp/>table&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;T&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;heard&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(</highlight><highlight class="stringliteral">&quot;This<sp/>does<sp/>not<sp/>make<sp/>any<sp/>sense!!!&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>check<sp/>if<sp/>we<sp/>have<sp/>heard<sp/>this<sp/>correctly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.speech.speak(</highlight><highlight class="stringliteral">&apos;I<sp/>heard<sp/>%s,<sp/>is<sp/>this<sp/>correct?&apos;</highlight><highlight class="normal"><sp/>%<sp/>sentence)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>robot.hmi.query(</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;T<sp/>-&gt;<sp/>yes<sp/>|<sp/>no&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;T&apos;</highlight><highlight class="normal">).sentence</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>result<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;yes&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>confirmed<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>result<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;no&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.speech.speak(</highlight><highlight class="stringliteral">&apos;Sorry,<sp/>please<sp/>repeat&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>hmi.TimeoutException:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>confirmed<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>robot<sp/>did<sp/>not<sp/>hear<sp/>the<sp/>confirmation,<sp/>so<sp/>lets<sp/>assume<sp/>its<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>hmi.TimeoutException:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(</highlight><highlight class="stringliteral">&apos;exception:<sp/>%s&apos;</highlight><highlight class="normal">,<sp/>e)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;heard&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;not_heard&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classchallenge__set__a__table__states_1_1fetch__command_1_1HearFetchCommand" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1HearFetchCommand" kindref="compound">HearFetchCommand</ref>(smach.State):</highlight></codeline>
<codeline lineno="67" refid="classchallenge__set__a__table__states_1_1fetch__command_1_1HearFetchCommand_1a0d545eb493eeb867ee2052b8f8dcdd67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1HearFetchCommand_1a0d545eb493eeb867ee2052b8f8dcdd67" kindref="member">__init__</ref>(self,<sp/>robot,<sp/>time_out=15.0,<sp/>task=&quot;set&quot;):</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Constructor</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>robot:<sp/>robot<sp/>object</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>time_out:<sp/>timeout<sp/>in<sp/>seconds<sp/>(not<sp/>yet<sp/>used)</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>task:<sp/>string<sp/>with<sp/>set<sp/>or<sp/>clear</highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.State.__init__(self,<sp/>outcomes=[</highlight><highlight class="stringliteral">&quot;done&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="75" refid="classchallenge__set__a__table__states_1_1fetch__command_1_1HearFetchCommand_1a698b869b8ecc7c05e6ec1c36587f4344" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1HearFetchCommand_1a698b869b8ecc7c05e6ec1c36587f4344" kindref="member">robot</ref><sp/>=<sp/>robot</highlight></codeline>
<codeline lineno="76" refid="classchallenge__set__a__table__states_1_1fetch__command_1_1HearFetchCommand_1a2ffd9988cc59bb1b9849c803c52f316d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1HearFetchCommand_1a2ffd9988cc59bb1b9849c803c52f316d" kindref="member">time_out</ref><sp/>=<sp/>time_out</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>task<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[</highlight><highlight class="stringliteral">&quot;set&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;clear&quot;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(</highlight><highlight class="stringliteral">&quot;You<sp/>either<sp/>have<sp/>to<sp/>supply<sp/>the<sp/>set<sp/>or<sp/>clear<sp/>task&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="79" refid="classchallenge__set__a__table__states_1_1fetch__command_1_1HearFetchCommand_1ae7ba717c2e6801dca091999ec04a7c18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1HearFetchCommand_1ae7ba717c2e6801dca091999ec04a7c18" kindref="member">task</ref><sp/>=<sp/>task</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classchallenge__set__a__table__states_1_1fetch__command_1_1HearFetchCommand_1aa439fcfc2c939f0b6f814f692f777348" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1HearFetchCommand_1aa439fcfc2c939f0b6f814f692f777348" kindref="member">execute</ref>(self,<sp/>userdata):</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1HearFetchCommand_1a698b869b8ecc7c05e6ec1c36587f4344" kindref="member">robot</ref>.head.look_at_standing_person()</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespacechallenge__set__a__table__states_1_1fetch__command_1aee80d5456910b21f808a3bf7e1fb17ec" kindref="member">fetch</ref>(self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1HearFetchCommand_1a698b869b8ecc7c05e6ec1c36587f4344" kindref="member">robot</ref>,<sp/>time_out=self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1HearFetchCommand_1a2ffd9988cc59bb1b9849c803c52f316d" kindref="member">time_out</ref>)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>result<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;heard&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1HearFetchCommand_1a698b869b8ecc7c05e6ec1c36587f4344" kindref="member">robot</ref>.speech.speak(</highlight><highlight class="stringliteral">&quot;I<sp/>am<sp/>sorry<sp/>but<sp/>I<sp/>did<sp/>not<sp/>hear<sp/>you.<sp/>I<sp/>will<sp/>start<sp/>doing<sp/>some<sp/>work<sp/>anyway&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1HearFetchCommand_1a698b869b8ecc7c05e6ec1c36587f4344" kindref="member">robot</ref>.head.reset()</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;done&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder" kindref="compound">GetBreakfastOrder</ref>(smach.State):</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Gets<sp/>the<sp/>breakfast<sp/>order<sp/>by<sp/>asking<sp/>it<sp/>to<sp/>the<sp/>customer.<sp/>N.B.:<sp/>the<sp/>order<sp/>is<sp/>asked,<sp/>but<sp/>this<sp/>information<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/>stored<sp/>(we<sp/>won&apos;t<sp/>get<sp/>points<sp/>for<sp/>that<sp/>anyway<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a43d3bf3edb2d4768a4075619deaba72b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a43d3bf3edb2d4768a4075619deaba72b" kindref="member">__init__</ref>(self,<sp/>robot,<sp/>options,<sp/>grasp_designator1,<sp/>grasp_designator2,<sp/>grasp_designator3,<sp/>timeout=15.0):</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Constructor</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>robot:<sp/>robot<sp/>object</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>options:<sp/>list<sp/>with<sp/>strings<sp/>containing<sp/>the<sp/>possible<sp/>breakfast<sp/>choices</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>timeout:<sp/>timeout<sp/>in<sp/>seconds</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.State.__init__(self,<sp/>outcomes=[</highlight><highlight class="stringliteral">&quot;done&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="105" refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a53526cc6569ca26f9727ae7f57615022" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a53526cc6569ca26f9727ae7f57615022" kindref="member">robot</ref><sp/>=<sp/>robot</highlight></codeline>
<codeline lineno="106" refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1ae5ec0ebff30ecd058ca3470867388196" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1ae5ec0ebff30ecd058ca3470867388196" kindref="member">options</ref><sp/>=<sp/>options</highlight></codeline>
<codeline lineno="107" refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1adff4d89f973b974f392b111f620b0682" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1adff4d89f973b974f392b111f620b0682" kindref="member">grasp_designator1</ref><sp/>=<sp/>grasp_designator1</highlight></codeline>
<codeline lineno="108" refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a549ddc9cd2f71241da71595bdaaed5cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a549ddc9cd2f71241da71595bdaaed5cb" kindref="member">grasp_designator2</ref><sp/>=<sp/>grasp_designator2</highlight></codeline>
<codeline lineno="109" refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1aa83209bf306dad89b4b36d96866a554a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1aa83209bf306dad89b4b36d96866a554a" kindref="member">grasp_designator3</ref><sp/>=<sp/>grasp_designator3</highlight></codeline>
<codeline lineno="110" refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a83eb0ca33376d49ff9051202e476193c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a83eb0ca33376d49ff9051202e476193c" kindref="member">grammar</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;T[O]<sp/>-&gt;<sp/>SENTENCE[O]\n\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a83eb0ca33376d49ff9051202e476193c" kindref="member">grammar</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;DET<sp/>-&gt;<sp/>the<sp/>|<sp/>a<sp/>|<sp/>an<sp/>|<sp/>some\n\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a83eb0ca33376d49ff9051202e476193c" kindref="member">grammar</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;SENTENCE[O]<sp/>-&gt;<sp/>OPTIONS[O]\n\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a83eb0ca33376d49ff9051202e476193c" kindref="member">grammar</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;SENTENCE[O]<sp/>-&gt;<sp/>could<sp/>you<sp/>bring<sp/>me<sp/>DET<sp/>OPTIONS[O]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a83eb0ca33376d49ff9051202e476193c" kindref="member">grammar</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;SENTENCE[O]<sp/>-&gt;<sp/>can<sp/>you<sp/>bring<sp/>me<sp/>DET<sp/>OPTIONS[O]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a83eb0ca33376d49ff9051202e476193c" kindref="member">grammar</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;SENTENCE[O]<sp/>-&gt;<sp/>could<sp/>you<sp/>give<sp/>me<sp/>DET<sp/>OPTIONS[O]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a83eb0ca33376d49ff9051202e476193c" kindref="member">grammar</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;SENTENCE[O]<sp/>-&gt;<sp/>can<sp/>you<sp/>give<sp/>me<sp/>DET<sp/>OPTIONS[O]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a83eb0ca33376d49ff9051202e476193c" kindref="member">grammar</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;SENTENCE[O]<sp/>-&gt;<sp/>please<sp/>bring<sp/>me<sp/>DET<sp/>OPTIONS[O]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a83eb0ca33376d49ff9051202e476193c" kindref="member">grammar</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;SENTENCE[O]<sp/>-&gt;<sp/>bring<sp/>me<sp/>DET<sp/>OPTIONS[O]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a83eb0ca33376d49ff9051202e476193c" kindref="member">grammar</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;SENTENCE[O]<sp/>-&gt;<sp/>i<sp/>would<sp/>like<sp/>DET<sp/>OPTIONS[O]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a83eb0ca33376d49ff9051202e476193c" kindref="member">grammar</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;SENTENCE[O]<sp/>-&gt;<sp/>i<sp/>want<sp/>DET<sp/>OPTIONS[O]\n\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>option<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>options.keys():</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a83eb0ca33376d49ff9051202e476193c" kindref="member">grammar</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;OPTIONS[&apos;{}&apos;]<sp/>-&gt;<sp/>{}\n&quot;</highlight><highlight class="normal">.format(option,<sp/>option)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a83eb0ca33376d49ff9051202e476193c" kindref="member">grammar</ref>)</highlight></codeline>
<codeline lineno="125" refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a8dab9f27312c033c38bb0278e65dcd25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a8dab9f27312c033c38bb0278e65dcd25" kindref="member">timeout</ref><sp/>=<sp/>timeout</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a78ca635f8b21e8c56dab9847718d838b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a78ca635f8b21e8c56dab9847718d838b" kindref="member">execute</ref>(self,<sp/>userdata):</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>olist<sp/>=<sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1ae5ec0ebff30ecd058ca3470867388196" kindref="member">options</ref>.keys()</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options_sentence<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{}<sp/>and<sp/>{}&quot;</highlight><highlight class="normal">.format(olist[-2],<sp/>olist[-1])</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(olist)<sp/>&gt;<sp/>2:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>o<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>olist[:-2]:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options_sentence<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{},<sp/>&quot;</highlight><highlight class="normal">.format(o)<sp/>+<sp/>options_sentence</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a53526cc6569ca26f9727ae7f57615022" kindref="member">robot</ref>.speech.speak(</highlight><highlight class="stringliteral">&quot;What<sp/>would<sp/>you<sp/>like<sp/>to<sp/>have<sp/>for<sp/>breakfast?&quot;</highlight><highlight class="normal">,<sp/>block=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a53526cc6569ca26f9727ae7f57615022" kindref="member">robot</ref>.speech.speak(</highlight><highlight class="stringliteral">&quot;You<sp/>can<sp/>choose<sp/>from<sp/>{}&quot;</highlight><highlight class="normal">.format(options_sentence),<sp/>block=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a53526cc6569ca26f9727ae7f57615022" kindref="member">robot</ref>.head.look_at_standing_person()</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Try<sp/>for<sp/>a<sp/>max<sp/>of<sp/>3<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>i<sp/>&lt;<sp/>3:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sentence,<sp/>semantics<sp/>=<sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a53526cc6569ca26f9727ae7f57615022" kindref="member">robot</ref>.hmi.query(</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a83eb0ca33376d49ff9051202e476193c" kindref="member">grammar</ref>,<sp/></highlight><highlight class="stringliteral">&apos;T&apos;</highlight><highlight class="normal">)<sp/><sp/></highlight><highlight class="comment">#<sp/>ToDo:<sp/>add<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>order<sp/>=<sp/>semantics</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>check<sp/>if<sp/>we<sp/>have<sp/>heard<sp/>this<sp/>correctly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a53526cc6569ca26f9727ae7f57615022" kindref="member">robot</ref>.speech.speak(</highlight><highlight class="stringliteral">&apos;I<sp/>understood<sp/>you<sp/>would<sp/>like<sp/>{},<sp/>is<sp/>this<sp/>correct?&apos;</highlight><highlight class="normal">.format(order))</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a53526cc6569ca26f9727ae7f57615022" kindref="member">robot</ref>.hmi.query(</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;T<sp/>-&gt;<sp/>yes<sp/>|<sp/>no&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;T&apos;</highlight><highlight class="normal">).sentence</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>result<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;yes&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1ab3bf01262ec65cf62b05f1fee071f75a" kindref="member">_recite</ref>(order)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;done&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>result<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;no&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a53526cc6569ca26f9727ae7f57615022" kindref="member">robot</ref>.speech.speak(</highlight><highlight class="stringliteral">&apos;Sorry,<sp/>please<sp/>repeat&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>hmi.TimeoutException:</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;done&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>robot<sp/>did<sp/>not<sp/>hear<sp/>the<sp/>confirmation,<sp/>so<sp/>lets<sp/>assume<sp/>its<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>hmi.TimeoutException:</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(</highlight><highlight class="stringliteral">&apos;exception:<sp/>%s&apos;</highlight><highlight class="normal">,<sp/>e)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>nothing<sp/>has<sp/>been<sp/>heard,<sp/>make<sp/>a<sp/>guess</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1ab3bf01262ec65cf62b05f1fee071f75a" kindref="member">_recite</ref>(self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1ae5ec0ebff30ecd058ca3470867388196" kindref="member">options</ref>.keys()[0])</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;done&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1ab3bf01262ec65cf62b05f1fee071f75a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1ab3bf01262ec65cf62b05f1fee071f75a" kindref="member">_recite</ref>(self,<sp/>choice):</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Recites<sp/>the<sp/>order<sp/>based<sp/>on<sp/>the<sp/>main<sp/>course</highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>choice:<sp/>string<sp/>with<sp/>chosen<sp/>main<sp/>course</highlight></codeline>
<codeline lineno="177"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1adff4d89f973b974f392b111f620b0682" kindref="member">grasp_designator1</ref>.etype<sp/>=<sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1ae5ec0ebff30ecd058ca3470867388196" kindref="member">options</ref>[choice][</highlight><highlight class="stringliteral">&quot;drink1&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a549ddc9cd2f71241da71595bdaaed5cb" kindref="member">grasp_designator2</ref>.etype<sp/>=<sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1ae5ec0ebff30ecd058ca3470867388196" kindref="member">options</ref>[choice][</highlight><highlight class="stringliteral">&quot;drink2&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1aa83209bf306dad89b4b36d96866a554a" kindref="member">grasp_designator3</ref>.etype<sp/>=<sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1ae5ec0ebff30ecd058ca3470867388196" kindref="member">options</ref>[choice][</highlight><highlight class="stringliteral">&quot;food&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a53526cc6569ca26f9727ae7f57615022" kindref="member">robot</ref>.speech.speak(</highlight><highlight class="stringliteral">&quot;I<sp/>will<sp/>bring<sp/>you<sp/>{}&quot;</highlight><highlight class="normal">.format(choice),<sp/>block=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a53526cc6569ca26f9727ae7f57615022" kindref="member">robot</ref>.speech.speak(</highlight><highlight class="stringliteral">&quot;This<sp/>comes<sp/>with<sp/>{}<sp/>and<sp/>{}&quot;</highlight><highlight class="normal">.format(self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1ae5ec0ebff30ecd058ca3470867388196" kindref="member">options</ref>[choice][</highlight><highlight class="stringliteral">&quot;drink1&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1ae5ec0ebff30ecd058ca3470867388196" kindref="member">options</ref>[choice][</highlight><highlight class="stringliteral">&quot;drink2&quot;</highlight><highlight class="normal">]),<sp/>block=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1a53526cc6569ca26f9727ae7f57615022" kindref="member">robot</ref>.speech.speak(</highlight><highlight class="stringliteral">&quot;To<sp/>eat,<sp/>you<sp/>will<sp/>get<sp/>{}<sp/>and<sp/>{}&quot;</highlight><highlight class="normal">.format(self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1ae5ec0ebff30ecd058ca3470867388196" kindref="member">options</ref>[choice][</highlight><highlight class="stringliteral">&quot;difficult1&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1GetBreakfastOrder_1ae5ec0ebff30ecd058ca3470867388196" kindref="member">options</ref>[choice][</highlight><highlight class="stringliteral">&quot;difficult2&quot;</highlight><highlight class="normal">]),</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Standalone<sp/>testing<sp/>-----------------------------------------------------------------~</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="classchallenge__set__a__table__states_1_1fetch__command_1_1TestFetchCommand" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1TestFetchCommand" kindref="compound">TestFetchCommand</ref>(smach.StateMachine):</highlight></codeline>
<codeline lineno="194" refid="classchallenge__set__a__table__states_1_1fetch__command_1_1TestFetchCommand_1a1903c68a22dcfc7ecd6f8266220fed94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1TestFetchCommand_1a1903c68a22dcfc7ecd6f8266220fed94" kindref="member">__init__</ref>(self,<sp/>robot):</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.__init__(self,<sp/>outcomes=[</highlight><highlight class="stringliteral">&apos;Done&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Aborted&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>self:</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;INITIALIZE&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initialize(robot),</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;initialized&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;FETCH_COMMAND&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;abort&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;Aborted&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;FETCH_COMMAND&apos;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="comment">#<sp/>Hear<sp/>&quot;set<sp/>the<sp/>table&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classchallenge__set__a__table__states_1_1fetch__command_1_1HearFetchCommand" kindref="compound">HearFetchCommand</ref>(robot,<sp/>15.0),</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;heard&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;END_CHALLENGE&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>End</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;END_CHALLENGE&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Say(robot,<sp/></highlight><highlight class="stringliteral">&quot;I<sp/>am<sp/>finally<sp/>free!&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;spoken&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;Done&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ds.analyse_designators(self,<sp/></highlight><highlight class="stringliteral">&quot;set_a_table&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.init_node(</highlight><highlight class="stringliteral">&apos;set_a_table_exec&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="namespacechallenge__set__a__table__states_1_1fetch__command_1ae4396194052c72b2a1bfaf0c1d75793c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startup(TestFetchCommand,<sp/>challenge_name=</highlight><highlight class="stringliteral">&quot;challenge_set_a_table&quot;</highlight><highlight class="normal">)</highlight></codeline>
    </programlisting>
    <location file="src/challenge_set_a_table_states/fetch_command.py"/>
  </compounddef>
</doxygen>
