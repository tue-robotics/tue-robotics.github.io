<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="perception__plugin__image__recognition_8cpp" kind="file" language="C++">
    <compoundname>perception_plugin_image_recognition.cpp</compoundname>
    <includes refid="perception__plugin__image__recognition_8h" local="yes">perception_plugin_image_recognition.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">ros/package.h</includes>
    <includes local="no">ros/node_handle.h</includes>
    <includes local="no">ed/world_model.h</includes>
    <includes local="no">ed/entity.h</includes>
    <includes local="no">ed/update_request.h</includes>
    <includes local="no">ed/error_context.h</includes>
    <includes local="no">ed/measurement.h</includes>
    <includes local="no">ed_perception_msgs/CategoricalDistribution.h</includes>
    <includes local="yes">../plugins/shared_methods.h</includes>
    <includes local="no">opencv2/highgui/highgui.hpp</includes>
    <includes local="yes">ed/measurement.h</includes>
    <includes local="no">ed/entity.h</includes>
    <includes local="no">rgbd/image.h</includes>
    <includes local="no">rgbd/ros/conversions.h</includes>
    <includes local="no">tue/filesystem/path.h</includes>
    <includes local="no">image_recognition_msgs/Recognize.h</includes>
    <incdepgraph>
      <node id="17">
        <label>../plugins/shared_methods.h</label>
      </node>
      <node id="16">
        <label>ed_perception_msgs/CategoricalDistribution.h</label>
      </node>
      <node id="6">
        <label>ros/service_client.h</label>
      </node>
      <node id="8">
        <label>iostream</label>
        <link refid="cpp/header/iostream" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="9">
        <label>ros/package.h</label>
      </node>
      <node id="21">
        <label>rgbd/image.h</label>
        <link refid="image_8h.html" external="/home/docker/ros/noetic/system/build/docs/rgbd/tags"/>
      </node>
      <node id="22">
        <label>rgbd/ros/conversions.h</label>
        <link refid="conversions_8h.html" external="/home/docker/ros/noetic/system/build/docs/rgbd/tags"/>
      </node>
      <node id="5">
        <label>ros/service_server.h</label>
      </node>
      <node id="15">
        <label>ed/measurement.h</label>
        <link refid="measurement_8h.html" external="/home/docker/ros/noetic/system/build/docs/ed/tags"/>
      </node>
      <node id="19">
        <label>ed/measurement.h</label>
      </node>
      <node id="7">
        <label>ros/callback_queue.h</label>
      </node>
      <node id="4">
        <label>ed_perception_msgs/Classify.h</label>
      </node>
      <node id="1">
        <label>perception_plugin_image_recognition.cpp</label>
        <link refid="perception__plugin__image__recognition_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>opencv2/highgui/highgui.hpp</label>
      </node>
      <node id="14">
        <label>ed/error_context.h</label>
        <link refid="error__context_8h.html" external="/home/docker/ros/noetic/system/build/docs/ed/tags"/>
      </node>
      <node id="24">
        <label>image_recognition_msgs/Recognize.h</label>
      </node>
      <node id="12">
        <label>ed/entity.h</label>
        <link refid="entity_8h.html" external="/home/docker/ros/noetic/system/build/docs/ed/tags"/>
      </node>
      <node id="2">
        <label>perception_plugin_image_recognition.h</label>
        <link refid="perception__plugin__image__recognition_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>ed/entity.h</label>
      </node>
      <node id="10">
        <label>ros/node_handle.h</label>
      </node>
      <node id="23">
        <label>tue/filesystem/path.h</label>
        <link refid="path_8h.html" external="/home/docker/ros/noetic/system/build/docs/tue_filesystem/tags"/>
      </node>
      <node id="3">
        <label>ed/plugin.h</label>
        <link refid="plugin_8h.html" external="/home/docker/ros/noetic/system/build/docs/ed/tags"/>
      </node>
      <node id="13">
        <label>ed/update_request.h</label>
        <link refid="update__request_8h.html" external="/home/docker/ros/noetic/system/build/docs/ed/tags"/>
      </node>
      <node id="11">
        <label>ed/world_model.h</label>
        <link refid="world__model_8h.html" external="/home/docker/ros/noetic/system/build/docs/ed/tags"/>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceed">ed</innernamespace>
    <innernamespace refid="namespaceed_1_1perception">ed::perception</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="perception__plugin__image__recognition_8h" kindref="compound">perception_plugin_image_recognition.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cpp/header/iostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">iostream</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/package.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/node_handle.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="world__model_8h.html" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/ed/tags">ed/world_model.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="entity_8h.html" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/ed/tags">ed/entity.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="update__request_8h.html" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/ed/tags">ed/update_request.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="error__context_8h.html" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/ed/tags">ed/error_context.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="measurement_8h.html" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/ed/tags">ed/measurement.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ed_perception_msgs/CategoricalDistribution.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../plugins/shared_methods.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="image_8h.html" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/rgbd/tags">rgbd/image.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="conversions_8h.html" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/rgbd/tags">rgbd/ros/conversions.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="path_8h.html" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/tue_filesystem/tags">tue/filesystem/path.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;image_recognition_msgs/Recognize.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceed" kindref="compound">ed</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="namespaceed_1_1perception" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">perception</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classed_1_1perception_1_1PerceptionPluginImageRecognition_1af46366e1e93f4956349d8f23262b5cc0" refkind="member"><highlight class="normal"><ref refid="classed_1_1perception_1_1PerceptionPluginImageRecognition_1af46366e1e93f4956349d8f23262b5cc0" kindref="member">PerceptionPluginImageRecognition::PerceptionPluginImageRecognition</ref>()<sp/>:<sp/>roi_margin_(0)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classed_1_1perception_1_1PerceptionPluginImageRecognition_1a17d48014e7fa2790a9bfd2a36e5e4c39" refkind="member"><highlight class="normal"><ref refid="classed_1_1perception_1_1PerceptionPluginImageRecognition_1a17d48014e7fa2790a9bfd2a36e5e4c39" kindref="member">PerceptionPluginImageRecognition::~PerceptionPluginImageRecognition</ref>()</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classed_1_1perception_1_1PerceptionPluginImageRecognition_1a4a07311307a481af94e5720dde4b0441" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classed_1_1Plugin_1ab8c8222e24b842e7c07530954b2c111c" kindref="member" external="/home/docker/ros/noetic/system/build/docs/ed/tags">PerceptionPluginImageRecognition::initialize</ref>(<ref refid="structed_1_1InitData" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/ed/tags">ed::InitData</ref>&amp;<sp/>init)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>service</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::NodeHandle<sp/>nh_private(</highlight><highlight class="stringliteral">&quot;~&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>nh_private.setCallbackQueue(&amp;<ref refid="classed_1_1perception_1_1PerceptionPluginImageRecognition_1af33d937aa1e84ef74d90d5b2457ea7f2" kindref="member">cb_queue_</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classed_1_1perception_1_1PerceptionPluginImageRecognition_1a428987cee0e89f9ad1328e445d47147e" kindref="member">srv_classify_</ref><sp/>=<sp/>nh_private.advertiseService(</highlight><highlight class="stringliteral">&quot;classify&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classed_1_1perception_1_1PerceptionPluginImageRecognition_1aee20a5f2bf79728f925bbb2d0f1ee2ee" kindref="member">PerceptionPluginImageRecognition::srvClassify</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::NodeHandle<sp/>nh;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classed_1_1perception_1_1PerceptionPluginImageRecognition_1ac557013ed660a2b20d6e4f28636f09b7" kindref="member">srv_client_</ref><sp/>=<sp/>nh.serviceClient&lt;image_recognition_msgs::Recognize&gt;(</highlight><highlight class="stringliteral">&quot;object_recognition/recognize&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classed_1_1perception_1_1PerceptionPluginImageRecognition_1a4e1e281639f8ce39c9bd42f1c072d352" kindref="member">roi_margin_</ref><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>init.<ref refid="structed_1_1InitData_1a77615f186e631bc73885a798d1574004" kindref="member" external="/home/docker/ros/noetic/system/build/docs/ed/tags">config</ref>.<ref refid="classtue_1_1config_1_1ReaderWriter_1a6b49f39a05ada8016feb604bb2f801e8" kindref="member" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">value</ref>(</highlight><highlight class="stringliteral">&quot;roi_margin&quot;</highlight><highlight class="normal">,<sp/><ref refid="classed_1_1perception_1_1PerceptionPluginImageRecognition_1a4e1e281639f8ce39c9bd42f1c072d352" kindref="member">roi_margin_</ref>,<sp/><ref refid="namespacetue_1_1config_1a1ad7ac2e22b2d2ecdbdab22fea6f8eeba4a665c52d925f41ad398fcca3a82f5cb" kindref="member" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::OPTIONAL</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classed_1_1perception_1_1PerceptionPluginImageRecognition_1a086a4ef03063cc08ce809bae81bf1f32" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classed_1_1perception_1_1PerceptionPluginImageRecognition_1a086a4ef03063cc08ce809bae81bf1f32" kindref="member">PerceptionPluginImageRecognition::process</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structed_1_1PluginInput" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/ed/tags">ed::PluginInput</ref>&amp;<sp/>data,<sp/><ref refid="classed_1_1UpdateRequest" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/ed/tags">ed::UpdateRequest</ref>&amp;<sp/>req)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classed_1_1perception_1_1PerceptionPluginImageRecognition_1ad55f129468063d347e1df0a1360ad6ca" kindref="member">world_</ref><sp/>=<sp/>&amp;data.world;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classed_1_1perception_1_1PerceptionPluginImageRecognition_1af96e9098a05da6600b2b9c03975e178f" kindref="member">update_req_</ref><sp/>=<sp/>&amp;<ref refid="namespacereset_1ad13c6ac93e71952bf2f3b8c9aefcaf5d" kindref="member" external="/home/docker/ros/noetic/system/build/docs/ed/tags">req</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classed_1_1perception_1_1PerceptionPluginImageRecognition_1af33d937aa1e84ef74d90d5b2457ea7f2" kindref="member">cb_queue_</ref>.callAvailable();</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classed_1_1perception_1_1PerceptionPluginImageRecognition_1aee20a5f2bf79728f925bbb2d0f1ee2ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classed_1_1perception_1_1PerceptionPluginImageRecognition_1aee20a5f2bf79728f925bbb2d0f1ee2ee" kindref="member">PerceptionPluginImageRecognition::srvClassify</ref>(ed_perception_msgs::Classify::Request&amp;<sp/>req,<sp/>ed_perception_msgs::Classify::Response&amp;<sp/>res)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Classify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;std::string&gt;::const_iterator</ref><sp/>it<sp/>=<sp/><ref refid="namespacereset_1ad13c6ac93e71952bf2f3b8c9aefcaf5d" kindref="member" external="/home/docker/ros/noetic/system/build/docs/ed/tags">req</ref>.ids.begin();<sp/>it<sp/>!=<sp/><ref refid="namespacereset_1ad13c6ac93e71952bf2f3b8c9aefcaf5d" kindref="member" external="/home/docker/ros/noetic/system/build/docs/ed/tags">req</ref>.ids.end();<sp/>++it)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceed_1ac65887f1813a584fb493e0a93b80d277" kindref="member" external="/home/docker/ros/noetic/system/build/docs/ed/tags">ed::EntityConstPtr</ref><sp/>e<sp/>=<sp/><ref refid="classed_1_1perception_1_1PerceptionPluginImageRecognition_1ad55f129468063d347e1df0a1360ad6ca" kindref="member">world_</ref>-&gt;<ref refid="classed_1_1WorldModel_1a0cfaa16b705c5dff76ce0de3f1caa274" kindref="member" external="/home/docker/ros/noetic/system/build/docs/ed/tags">getEntity</ref>(*it);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>entity<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!e)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.error_msg<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Entity<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>*it<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>does<sp/>not<sp/>exist.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR_STREAM(res.error_msg);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>entity<sp/>has<sp/>a<sp/>measurement<sp/>associated<sp/>with<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!e-&gt;bestMeasurement())</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.error_msg<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Entity<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>*it<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>does<sp/>not<sp/>have<sp/>a<sp/>measurement.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR_STREAM(res.error_msg);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceed_1aa3cfa7eac850993cd6f1c808f8ab5165" kindref="member" external="/home/docker/ros/noetic/system/build/docs/ed/tags">MeasurementConstPtr</ref><sp/>meas_ptr<sp/>=<sp/>e-&gt;bestMeasurement();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>classificationrequest<sp/>and<sp/>call<sp/>the<sp/>service</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_recognition_msgs::Recognize<sp/>client_srv;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Mat<sp/><ref refid="view__model_8cpp_1aca3006a770e0e39a4c80202325df25ed" kindref="member" external="/home/docker/ros/noetic/system/build/docs/ed/tags">image</ref><sp/>=<sp/>meas_ptr-&gt;image()-&gt;getRGBImage();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>part<sp/>that<sp/>is<sp/>masked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classed_1_1ImageMask_1_1const__iterator" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/ed/tags">ed::ImageMask</ref><sp/>mask<sp/>=<sp/>meas_ptr-&gt;imageMask();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Point<sp/>p_min(<ref refid="view__model_8cpp_1aca3006a770e0e39a4c80202325df25ed" kindref="member" external="/home/docker/ros/noetic/system/build/docs/ed/tags">image</ref>.cols,<sp/><ref refid="view__model_8cpp_1aca3006a770e0e39a4c80202325df25ed" kindref="member" external="/home/docker/ros/noetic/system/build/docs/ed/tags">image</ref>.rows);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Point<sp/>p_max(0,<sp/>0);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classed_1_1ImageMask_1_1const__iterator" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/ed/tags">ed::ImageMask::const_iterator</ref><sp/>it2<sp/>=<sp/>mask.<ref refid="classed_1_1ImageMask_1a4db1f6c08c7ae94c25d7edc19187ba27" kindref="member" external="/home/docker/ros/noetic/system/build/docs/ed/tags">begin</ref>(<ref refid="view__model_8cpp_1aca3006a770e0e39a4c80202325df25ed" kindref="member" external="/home/docker/ros/noetic/system/build/docs/ed/tags">image</ref>.cols);<sp/>it2<sp/>!=<sp/>mask.<ref refid="classed_1_1ImageMask_1a874a34813d6cd7bf230ab4284799aae1" kindref="member" external="/home/docker/ros/noetic/system/build/docs/ed/tags">end</ref>();<sp/>++it2)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Point&amp;<sp/>p(it2());</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_min.x<sp/>=<sp/><ref refid="cpp/algorithm/min" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::min</ref>(p_min.x,<sp/>p.x);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_min.y<sp/>=<sp/><ref refid="cpp/algorithm/min" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::min</ref>(p_min.y,<sp/>p.y);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_max.x<sp/>=<sp/><ref refid="cpp/algorithm/max" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::max</ref>(p_max.x,<sp/>p.x);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_max.y<sp/>=<sp/><ref refid="cpp/algorithm/max" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::max</ref>(p_max.y,<sp/>p.y);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/><ref refid="cpp/algorithm/max" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::max</ref>(<ref refid="cpp/algorithm/min" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::min</ref>(p_min.x<sp/>-<sp/><ref refid="classed_1_1perception_1_1PerceptionPluginImageRecognition_1a4e1e281639f8ce39c9bd42f1c072d352" kindref="member">roi_margin_</ref>,<sp/><ref refid="view__model_8cpp_1aca3006a770e0e39a4c80202325df25ed" kindref="member" external="/home/docker/ros/noetic/system/build/docs/ed/tags">image</ref>.cols),<sp/>0);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/><ref refid="cpp/algorithm/max" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::max</ref>(<ref refid="cpp/algorithm/min" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::min</ref>(p_min.y<sp/>-<sp/><ref refid="classed_1_1perception_1_1PerceptionPluginImageRecognition_1a4e1e281639f8ce39c9bd42f1c072d352" kindref="member">roi_margin_</ref>,<sp/><ref refid="view__model_8cpp_1aca3006a770e0e39a4c80202325df25ed" kindref="member" external="/home/docker/ros/noetic/system/build/docs/ed/tags">image</ref>.rows),<sp/>0);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Rect<sp/>roi<sp/>=<sp/>cv::Rect(x,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/algorithm/max" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::max</ref>(<ref refid="cpp/algorithm/min" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::min</ref>(p_max.x<sp/>-<sp/>p_min.x<sp/>+<sp/>2*<ref refid="classed_1_1perception_1_1PerceptionPluginImageRecognition_1a4e1e281639f8ce39c9bd42f1c072d352" kindref="member">roi_margin_</ref>,<sp/><ref refid="view__model_8cpp_1aca3006a770e0e39a4c80202325df25ed" kindref="member" external="/home/docker/ros/noetic/system/build/docs/ed/tags">image</ref>.cols<sp/>-<sp/>x),<sp/>0),</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/algorithm/max" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::max</ref>(<ref refid="cpp/algorithm/min" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::min</ref>(p_max.y<sp/>-<sp/>p_min.y<sp/>+<sp/>2*<ref refid="classed_1_1perception_1_1PerceptionPluginImageRecognition_1a4e1e281639f8ce39c9bd42f1c072d352" kindref="member">roi_margin_</ref>,<sp/><ref refid="view__model_8cpp_1aca3006a770e0e39a4c80202325df25ed" kindref="member" external="/home/docker/ros/noetic/system/build/docs/ed/tags">image</ref>.rows<sp/>-<sp/>y),<sp/>0));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(roi.area()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR_STREAM(</highlight><highlight class="stringliteral">&quot;[ED<sp/>Perception]<sp/>Empty<sp/>ImageMask<sp/>of<sp/>entity:<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>e-&gt;id()&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;,<sp/>segmentation<sp/>has<sp/>probably<sp/>gone<sp/>wrong&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Mat<sp/>cropped_image<sp/>=<sp/><ref refid="view__model_8cpp_1aca3006a770e0e39a4c80202325df25ed" kindref="member" external="/home/docker/ros/noetic/system/build/docs/ed/tags">image</ref>(roi);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>it<sp/>to<sp/>the<sp/>image<sp/>request<sp/>and<sp/>call<sp/>the<sp/>service</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacergbd_1a4a2c2b1a757ba3a3ab5a16e5759539b6" kindref="member" external="/home/docker/ros/noetic/system/build/docs/rgbd/tags">rgbd::convert</ref>(cropped_image,<sp/>client_srv.request.image);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classed_1_1perception_1_1PerceptionPluginImageRecognition_1ac557013ed660a2b20d6e4f28636f09b7" kindref="member">srv_client_</ref>.call(client_srv))</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;[ED<sp/>Perception]<sp/>Classification<sp/>service<sp/>call<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>recognitions<sp/>and<sp/>the<sp/>highest<sp/>probability<sp/>is<sp/>above<sp/>a<sp/>certain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>threshold:<sp/>update<sp/>the<sp/>world<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>best_probability<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>We<sp/>just<sp/>always<sp/>update<sp/>with<sp/>our<sp/>best<sp/>guess</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>label;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(client_srv.response.recognitions.size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>image_recognition_msgs::Recognition&amp;<sp/>r<sp/>=<sp/>client_srv.response.recognitions[0];<sp/><sp/></highlight><highlight class="comment">//<sp/>Assuming<sp/>that<sp/>the<sp/>first<sp/>recognition<sp/>is<sp/>the<sp/>best<sp/>one!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>image_recognition_msgs::CategoryProbability&amp;<sp/>p<sp/>:<sp/>r.categorical_distribution.probabilities)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>p.probability<sp/>&gt;<sp/>best_probability<sp/>)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_probability<sp/>=<sp/>p.probability;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label<sp/>=<sp/>p.label;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR_STREAM(</highlight><highlight class="stringliteral">&quot;No<sp/>classification<sp/>for<sp/>entity<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>*it);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>result<sp/>to<sp/>the<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_probability<sp/>&gt;<sp/><ref refid="namespacereset_1ad13c6ac93e71952bf2f3b8c9aefcaf5d" kindref="member" external="/home/docker/ros/noetic/system/build/docs/ed/tags">req</ref>.unknown_probability)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label<sp/>!=<sp/>e-&gt;type()<sp/>&amp;&amp;<sp/>!e-&gt;type().<ref refid="cpp/string/basic_string/empty" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">empty</ref>())</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classed_1_1perception_1_1PerceptionPluginImageRecognition_1af96e9098a05da6600b2b9c03975e178f" kindref="member">update_req_</ref>-&gt;<ref refid="classed_1_1UpdateRequest_1aeb62399fbb4e8f90702d004fab559a1e" kindref="member" external="/home/docker/ros/noetic/system/build/docs/ed/tags">removeType</ref>(e-&gt;id(),<sp/>e-&gt;type());</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classed_1_1perception_1_1PerceptionPluginImageRecognition_1af96e9098a05da6600b2b9c03975e178f" kindref="member">update_req_</ref>-&gt;<ref refid="classed_1_1UpdateRequest_1ae6df26ca87514e76fc5576e3446c1900" kindref="member" external="/home/docker/ros/noetic/system/build/docs/ed/tags">setType</ref>(e-&gt;id(),<sp/>label);<sp/></highlight><highlight class="comment">//<sp/>no<sp/>need<sp/>to<sp/>set<sp/>type<sp/>when<sp/>label<sp/>is<sp/>equal<sp/>to<sp/>old<sp/>type<sp/>and<sp/>not<sp/>empty,<sp/>but<sp/>simpler<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classed_1_1perception_1_1PerceptionPluginImageRecognition_1af96e9098a05da6600b2b9c03975e178f" kindref="member">update_req_</ref>-&gt;<ref refid="classed_1_1UpdateRequest_1aef4e1b9203de79bea0eb86bc58762217" kindref="member" external="/home/docker/ros/noetic/system/build/docs/ed/tags">setExistenceProbability</ref>(e-&gt;id(),<sp/>best_probability);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>some<sp/>reason<sp/>we<sp/>defined<sp/>the<sp/>interface<sp/>this<sp/>way<sp/>but<sp/>this<sp/>is<sp/>much<sp/>too<sp/>much<sp/>info<sp/>for<sp/>the<sp/>client<sp/>..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>am<sp/>now<sp/>setting<sp/>all<sp/>these<sp/>things<sp/>because<sp/>the<sp/>client<sp/>expects<sp/>this<sp/>for<sp/>some<sp/>reason<sp/>..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>posteriors<sp/>=<sp/>[dict(zip(distr.values,<sp/>distr.probabilities))<sp/>for<sp/>distr<sp/>in<sp/>res.posteriors]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>[ClassificationResult(_id,<sp/>exp_val,<sp/>exp_prob,<sp/>distr)<sp/>for<sp/>_id,<sp/>exp_val,<sp/>exp_prob,<sp/>distr<sp/>in<sp/>zip(res.ids,<sp/>res.expected_values,<sp/>res.expected_value_probabilities,<sp/>posteriors)<sp/>if<sp/>exp_val<sp/>in<sp/>types]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed_perception_msgs::CategoricalDistribution<sp/>posterior;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>image_recognition_msgs::CategoryProbability&amp;<sp/>p<sp/>:<sp/>client_srv.response.recognitions[0].categorical_distribution.probabilities)<sp/></highlight><highlight class="comment">//<sp/>Assuming<sp/>that<sp/>there<sp/>is<sp/>only<sp/>one<sp/>recognition!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>posterior.values.push_back(p.label);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>posterior.probabilities.push_back(p.probability);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.ids.push_back(e-&gt;id().str());</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.expected_values.push_back(label);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.expected_value_probabilities.push_back(best_probability);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.posteriors.push_back(posterior);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_DEBUG_STREAM(</highlight><highlight class="stringliteral">&quot;response:<sp/>return<sp/>true:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>res<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>perception</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>ed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><ref refid="plugin_8h_1a9cb7a92c38d28d6074b1b1904d38d545" kindref="member" external="/home/docker/ros/noetic/system/build/docs/ed/tags">ED_REGISTER_PLUGIN</ref>(<ref refid="classed_1_1perception_1_1PerceptionPluginImageRecognition" kindref="compound">ed::perception::PerceptionPluginImageRecognition</ref>)</highlight></codeline>
    </programlisting>
    <location file="src/perception_plugin_image_recognition.cpp"/>
  </compounddef>
</doxygen>
