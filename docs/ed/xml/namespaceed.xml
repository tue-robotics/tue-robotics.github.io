<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespaceed" kind="namespace" language="C++">
    <compoundname>ed</compoundname>
    <innerclass refid="structed_1_1ConvexHull" prot="public">ed::ConvexHull</innerclass>
    <innerclass refid="structed_1_1ConvexHull2D" prot="public">ed::ConvexHull2D</innerclass>
    <innerclass refid="structed_1_1ConvexHull2DWithIndices" prot="public">ed::ConvexHull2DWithIndices</innerclass>
    <innerclass refid="classed_1_1Entity" prot="public">ed::Entity</innerclass>
    <innerclass refid="classed_1_1ErrorContext" prot="public">ed::ErrorContext</innerclass>
    <innerclass refid="structed_1_1ErrorContextData" prot="public">ed::ErrorContextData</innerclass>
    <innerclass refid="classed_1_1EventClock" prot="public">ed::EventClock</innerclass>
    <innerclass refid="classed_1_1IArchive" prot="public">ed::IArchive</innerclass>
    <innerclass refid="classed_1_1ImageMask" prot="public">ed::ImageMask</innerclass>
    <innerclass refid="structed_1_1InitData" prot="public">ed::InitData</innerclass>
    <innerclass refid="classed_1_1LoopUsageStatus" prot="public">ed::LoopUsageStatus</innerclass>
    <innerclass refid="classed_1_1Measurement" prot="public">ed::Measurement</innerclass>
    <innerclass refid="structed_1_1MeasurementConvexHull" prot="public">ed::MeasurementConvexHull</innerclass>
    <innerclass refid="classed_1_1OArchive" prot="public">ed::OArchive</innerclass>
    <innerclass refid="classed_1_1Plugin" prot="public">ed::Plugin</innerclass>
    <innerclass refid="classed_1_1PluginContainer" prot="public">ed::PluginContainer</innerclass>
    <innerclass refid="structed_1_1PluginInput" prot="public">ed::PluginInput</innerclass>
    <innerclass refid="classed_1_1Probe" prot="public">ed::Probe</innerclass>
    <innerclass refid="classed_1_1ProbeClient" prot="public">ed::ProbeClient</innerclass>
    <innerclass refid="classed_1_1ProbeROS" prot="public">ed::ProbeROS</innerclass>
    <innerclass refid="structed_1_1Property" prot="public">ed::Property</innerclass>
    <innerclass refid="classed_1_1PropertyInfo" prot="public">ed::PropertyInfo</innerclass>
    <innerclass refid="structed_1_1PropertyKey" prot="public">ed::PropertyKey</innerclass>
    <innerclass refid="classed_1_1PropertyKeyDB" prot="public">ed::PropertyKeyDB</innerclass>
    <innerclass refid="structed_1_1PropertyKeyDBEntry" prot="public">ed::PropertyKeyDBEntry</innerclass>
    <innerclass refid="classed_1_1Relation" prot="public">ed::Relation</innerclass>
    <innerclass refid="structed_1_1RGBDData" prot="public">ed::RGBDData</innerclass>
    <innerclass refid="classed_1_1SampleRenderResult" prot="public">ed::SampleRenderResult</innerclass>
    <innerclass refid="structed_1_1SearchNode" prot="public">ed::SearchNode</innerclass>
    <innerclass refid="classed_1_1Server" prot="public">ed::Server</innerclass>
    <innerclass refid="classed_1_1Time" prot="public">ed::Time</innerclass>
    <innerclass refid="classed_1_1TimeCache" prot="public">ed::TimeCache</innerclass>
    <innerclass refid="classed_1_1TransformCache" prot="public">ed::TransformCache</innerclass>
    <innerclass refid="structed_1_1TypeWrapper" prot="public">ed::TypeWrapper</innerclass>
    <innerclass refid="structed_1_1TypeWrapper_3_01const_01T_01_6_01_4" prot="public">ed::TypeWrapper&lt; const T &amp; &gt;</innerclass>
    <innerclass refid="structed_1_1TypeWrapper_3_01const_01T_01_4" prot="public">ed::TypeWrapper&lt; const T &gt;</innerclass>
    <innerclass refid="structed_1_1TypeWrapper_3_01T_01_6_01_4" prot="public">ed::TypeWrapper&lt; T &amp; &gt;</innerclass>
    <innerclass refid="classed_1_1UpdateRequest" prot="public">ed::UpdateRequest</innerclass>
    <innerclass refid="classed_1_1UUID" prot="public">ed::UUID</innerclass>
    <innerclass refid="classed_1_1Variant" prot="public">ed::Variant</innerclass>
    <innerclass refid="classed_1_1WorldModel" prot="public">ed::WorldModel</innerclass>
    <innernamespace refid="namespaceed_1_1convex__hull">ed::convex_hull</innernamespace>
    <innernamespace refid="namespaceed_1_1io">ed::io</innernamespace>
    <innernamespace refid="namespaceed_1_1log">ed::log</innernamespace>
    <innernamespace refid="namespaceed_1_1models">ed::models</innernamespace>
    <innernamespace refid="namespaceed_1_1world__model">ed::world_model</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespaceed_1a6d2e4db0e8652fd8b168440a6787d756" prot="public" static="no" strong="no">
        <type></type>
        <name>ShowVolumes</name>
        <enumvalue id="namespaceed_1a6d2e4db0e8652fd8b168440a6787d756a5b2c6908af6626d131d5a153aedb6cb4" prot="public">
          <name>NoVolumes</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceed_1a6d2e4db0e8652fd8b168440a6787d756a9912fc008e185a9ec799f9188e134982" prot="public">
          <name>ModelVolumes</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceed_1a6d2e4db0e8652fd8b168440a6787d756ac62aa067034f970ac9ffa2dd40d14daf" prot="public">
          <name>RoomVolumes</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The ShowVolumes enum indicates which volumes to render. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/rendering.h" line="24" column="1" bodyfile="include/ed/rendering.h" bodystart="23" bodyend="28"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespaceed_1ac65887f1813a584fb493e0a93b80d277" prot="public" static="no">
        <type>shared_ptr&lt; const <ref refid="classed_1_1Entity" kindref="compound">Entity</ref> &gt;</type>
        <definition>typedef shared_ptr&lt;const Entity&gt; ed::EntityConstPtr</definition>
        <argsstring></argsstring>
        <name>EntityConstPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/types.h" line="37" column="20" bodyfile="include/ed/types.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1ace225419bded8b3c865076e66a6b63be" prot="public" static="no">
        <type>shared_ptr&lt; <ref refid="classed_1_1Entity" kindref="compound">Entity</ref> &gt;</type>
        <definition>typedef shared_ptr&lt;Entity&gt; ed::EntityPtr</definition>
        <argsstring></argsstring>
        <name>EntityPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/types.h" line="36" column="20" bodyfile="include/ed/types.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1a0c6baa32727c3af9459b72c4e8314103" prot="public" static="no">
        <type>uint64_t</type>
        <definition>typedef uint64_t ed::Idx</definition>
        <argsstring></argsstring>
        <name>Idx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/types.h" line="21" column="18" bodyfile="include/ed/types.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1a834b2b0547221b28b0c4ccf15c18ba98" prot="public" static="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; cv::Point2i &gt; &gt;</type>
        <definition>typedef std::vector&lt; std::vector&lt;cv::Point2i&gt; &gt; ed::IndexMap</definition>
        <argsstring></argsstring>
        <name>IndexMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/convex_hull_2d.h" line="16" column="21" bodyfile="include/ed/convex_hull_2d.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1aa3cfa7eac850993cd6f1c808f8ab5165" prot="public" static="no">
        <type>shared_ptr&lt; const <ref refid="classed_1_1Measurement" kindref="compound">Measurement</ref> &gt;</type>
        <definition>typedef shared_ptr&lt;const Measurement&gt; ed::MeasurementConstPtr</definition>
        <argsstring></argsstring>
        <name>MeasurementConstPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/types.h" line="33" column="20" bodyfile="include/ed/types.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1a7e3c3532455f01d94a476e0106f074e4" prot="public" static="no">
        <type>shared_ptr&lt; <ref refid="classed_1_1Measurement" kindref="compound">Measurement</ref> &gt;</type>
        <definition>typedef shared_ptr&lt;Measurement&gt; ed::MeasurementPtr</definition>
        <argsstring></argsstring>
        <name>MeasurementPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/types.h" line="32" column="20" bodyfile="include/ed/types.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1aacd0e9c0696ff989d7e85202cc632c4f" prot="public" static="no">
        <type>shared_ptr&lt; const PerceptionModule &gt;</type>
        <definition>typedef shared_ptr&lt;const PerceptionModule&gt; ed::PerceptionModuleConstPtr</definition>
        <argsstring></argsstring>
        <name>PerceptionModuleConstPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/types.h" line="69" column="20" bodyfile="include/ed/types.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1a2dfbbf9a11a1ca5fc856826251adf52e" prot="public" static="no">
        <type>shared_ptr&lt; PerceptionModule &gt;</type>
        <definition>typedef shared_ptr&lt;PerceptionModule&gt; ed::PerceptionModulePtr</definition>
        <argsstring></argsstring>
        <name>PerceptionModulePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/types.h" line="68" column="20" bodyfile="include/ed/types.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1a519387f33981ea0a06c94ed7c73980ab" prot="public" static="no">
        <type>shared_ptr&lt; const <ref refid="classed_1_1Plugin" kindref="compound">Plugin</ref> &gt;</type>
        <definition>typedef shared_ptr&lt;const Plugin&gt; ed::PluginConstPtr</definition>
        <argsstring></argsstring>
        <name>PluginConstPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/types.h" line="41" column="20" bodyfile="include/ed/types.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1a70778fd03f654880b05d88c60055dbec" prot="public" static="no">
        <type>shared_ptr&lt; const <ref refid="classed_1_1PluginContainer" kindref="compound">PluginContainer</ref> &gt;</type>
        <definition>typedef shared_ptr&lt;const PluginContainer&gt; ed::PluginContainerConstPtr</definition>
        <argsstring></argsstring>
        <name>PluginContainerConstPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/types.h" line="53" column="20" bodyfile="include/ed/types.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1a7e7af8157639485ce6fe7ef3ece61fdf" prot="public" static="no">
        <type>shared_ptr&lt; <ref refid="classed_1_1PluginContainer" kindref="compound">PluginContainer</ref> &gt;</type>
        <definition>typedef shared_ptr&lt;PluginContainer&gt; ed::PluginContainerPtr</definition>
        <argsstring></argsstring>
        <name>PluginContainerPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/types.h" line="52" column="20" bodyfile="include/ed/types.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1ae593cf6fa6335ee6393441afb84dbb4a" prot="public" static="no">
        <type>shared_ptr&lt; <ref refid="classed_1_1Plugin" kindref="compound">Plugin</ref> &gt;</type>
        <definition>typedef shared_ptr&lt;Plugin&gt; ed::PluginPtr</definition>
        <argsstring></argsstring>
        <name>PluginPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/types.h" line="40" column="20" bodyfile="include/ed/types.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1ac2ada6171716e19de37dd3238facaa18" prot="public" static="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; int &gt;</type>
        <definition>typedef std::vector&lt;int&gt; ed::PointCloudMask</definition>
        <argsstring></argsstring>
        <name>PointCloudMask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/rgbd_data.h" line="14" column="21" bodyfile="include/ed/rgbd_data.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1a169d9d8e9007e6d0df8dbd15692c1141" prot="public" static="no">
        <type>pcl::IndicesConstPtr</type>
        <definition>typedef pcl::IndicesConstPtr ed::PointCloudMaskConstPtr</definition>
        <argsstring></argsstring>
        <name>PointCloudMaskConstPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/rgbd_data.h" line="16" column="30" bodyfile="include/ed/rgbd_data.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1aea431d36d7932e9fdd16025519868bb1" prot="public" static="no">
        <type>pcl::IndicesPtr</type>
        <definition>typedef pcl::IndicesPtr ed::PointCloudMaskPtr</definition>
        <argsstring></argsstring>
        <name>PointCloudMaskPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/rgbd_data.h" line="15" column="25" bodyfile="include/ed/rgbd_data.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1aa7d09efdb224ab43b16b75f3778eba27" prot="public" static="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; int &gt; &gt;</type>
        <definition>typedef std::vector&lt;std::vector&lt;int&gt; &gt; ed::PointCloudToPixelsMapping</definition>
        <argsstring></argsstring>
        <name>PointCloudToPixelsMapping</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/rgbd_data.h" line="17" column="21" bodyfile="include/ed/rgbd_data.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1a7dd282f5effbc2c0386d14d5f7843692" prot="public" static="no">
        <type>shared_ptr&lt; const <ref refid="classed_1_1Relation" kindref="compound">Relation</ref> &gt;</type>
        <definition>typedef shared_ptr&lt;const Relation&gt; ed::RelationConstPtr</definition>
        <argsstring></argsstring>
        <name>RelationConstPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/types.h" line="73" column="20" bodyfile="include/ed/types.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1a5400973e90eedd4805e1f72c337ac53d" prot="public" static="no">
        <type>shared_ptr&lt; <ref refid="classed_1_1Relation" kindref="compound">Relation</ref> &gt;</type>
        <definition>typedef shared_ptr&lt;Relation&gt; ed::RelationPtr</definition>
        <argsstring></argsstring>
        <name>RelationPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/types.h" line="72" column="20" bodyfile="include/ed/types.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1a93bfe2c510ade0faf0dc8f3679beb14a" prot="public" static="no">
        <type>shared_ptr&lt; const RGBDALModule &gt;</type>
        <definition>typedef shared_ptr&lt;const RGBDALModule&gt; ed::RGBDALModuleConstPtr</definition>
        <argsstring></argsstring>
        <name>RGBDALModuleConstPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/types.h" line="61" column="20" bodyfile="include/ed/types.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1a341a1638daab5a01e7dc7548b1d85235" prot="public" static="no">
        <type>shared_ptr&lt; RGBDALModule &gt;</type>
        <definition>typedef shared_ptr&lt;RGBDALModule&gt; ed::RGBDALModulePtr</definition>
        <argsstring></argsstring>
        <name>RGBDALModulePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/types.h" line="60" column="20" bodyfile="include/ed/types.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1a7006f2307e54bf63c59ec611591c2f06" prot="public" static="no">
        <type>shared_ptr&lt; const RGBDSegModule &gt;</type>
        <definition>typedef shared_ptr&lt;const RGBDSegModule&gt; ed::RGBDSegModuleConstPtr</definition>
        <argsstring></argsstring>
        <name>RGBDSegModuleConstPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/types.h" line="65" column="20" bodyfile="include/ed/types.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1ac809993227ab84bd9793e2870781afbe" prot="public" static="no">
        <type>shared_ptr&lt; RGBDSegModule &gt;</type>
        <definition>typedef shared_ptr&lt;RGBDSegModule&gt; ed::RGBDSegModulePtr</definition>
        <argsstring></argsstring>
        <name>RGBDSegModulePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/types.h" line="64" column="20" bodyfile="include/ed/types.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1a96b7e39bdf1a8bee98b917fdbc40d1ed" prot="public" static="no">
        <type>shared_ptr&lt; const SensorModule &gt;</type>
        <definition>typedef shared_ptr&lt;const SensorModule&gt; ed::SensorModuleConstPtr</definition>
        <argsstring></argsstring>
        <name>SensorModuleConstPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/types.h" line="57" column="20" bodyfile="include/ed/types.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1aa24b2e6f24bf03a4c6d9763bb2841607" prot="public" static="no">
        <type>shared_ptr&lt; SensorModule &gt;</type>
        <definition>typedef shared_ptr&lt;SensorModule&gt; ed::SensorModulePtr</definition>
        <argsstring></argsstring>
        <name>SensorModulePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/types.h" line="56" column="20" bodyfile="include/ed/types.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1a4842b68d9d11e63685b3220691e6b900" prot="public" static="no">
        <type>shared_ptr&lt; const tf2_ros::Buffer &gt;</type>
        <definition>typedef shared_ptr&lt;const tf2_ros::Buffer&gt; ed::TFBufferConstPtr</definition>
        <argsstring></argsstring>
        <name>TFBufferConstPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/types.h" line="84" column="20" bodyfile="include/ed/types.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1ac859c9fa4021641b9a51bdd307ba5c4e" prot="public" static="no">
        <type>shared_ptr&lt; tf2_ros::Buffer &gt;</type>
        <definition>typedef shared_ptr&lt;tf2_ros::Buffer&gt; ed::TFBufferPtr</definition>
        <argsstring></argsstring>
        <name>TFBufferPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/types.h" line="83" column="20" bodyfile="include/ed/types.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1a888610d9c38073fed048056503eb4d57" prot="public" static="no">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>typedef std::string ed::TYPE</definition>
        <argsstring></argsstring>
        <name>TYPE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/types.h" line="80" column="21" bodyfile="include/ed/types.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1a448738e6bb8cf0738192b39ba67a6de5" prot="public" static="no">
        <type>shared_ptr&lt; const <ref refid="classed_1_1UpdateRequest" kindref="compound">UpdateRequest</ref> &gt;</type>
        <definition>typedef shared_ptr&lt;const UpdateRequest&gt; ed::UpdateRequestConstPtr</definition>
        <argsstring></argsstring>
        <name>UpdateRequestConstPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/types.h" line="49" column="20" bodyfile="include/ed/types.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1a62fe7b96ea6afe74fe09eda6b60b274e" prot="public" static="no">
        <type>shared_ptr&lt; <ref refid="classed_1_1UpdateRequest" kindref="compound">UpdateRequest</ref> &gt;</type>
        <definition>typedef shared_ptr&lt;UpdateRequest&gt; ed::UpdateRequestPtr</definition>
        <argsstring></argsstring>
        <name>UpdateRequestPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/types.h" line="48" column="20" bodyfile="include/ed/types.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1a80dcf4947c6d8402668cc7ee84861a6b" prot="public" static="no">
        <type>shared_ptr&lt; const <ref refid="classed_1_1WorldModel" kindref="compound">WorldModel</ref> &gt;</type>
        <definition>typedef shared_ptr&lt;const WorldModel&gt; ed::WorldModelConstPtr</definition>
        <argsstring></argsstring>
        <name>WorldModelConstPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/types.h" line="45" column="20" bodyfile="include/ed/types.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceed_1aa653eae7a0d5346320e23fe03d8af4b4" prot="public" static="no">
        <type>shared_ptr&lt; <ref refid="classed_1_1WorldModel" kindref="compound">WorldModel</ref> &gt;</type>
        <definition>typedef shared_ptr&lt;WorldModel&gt; ed::WorldModelPtr</definition>
        <argsstring></argsstring>
        <name>WorldModelPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/types.h" line="44" column="20" bodyfile="include/ed/types.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceed_1aa0222e872783d035211905a455b2dc1f" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float ed::COLORS[27][3]</definition>
        <argsstring>[27][3]</argsstring>
        <name>COLORS</name>
        <initializer>= { { 0.6, 0.6, 0.6}, { 0.6, 0.6, 0.4}, { 0.6, 0.6, 0.2},
                        { 0.6, 0.4, 0.6}, { 0.6, 0.4, 0.4}, { 0.6, 0.4, 0.2},
                        { 0.6, 0.2, 0.6}, { 0.6, 0.2, 0.4}, { 0.6, 0.2, 0.2},
                        { 0.4, 0.6, 0.6}, { 0.4, 0.6, 0.4}, { 0.4, 0.6, 0.2},
                        { 0.4, 0.4, 0.6}, { 0.4, 0.4, 0.4}, { 0.4, 0.4, 0.2},
                        { 0.4, 0.2, 0.6}, { 0.4, 0.2, 0.4}, { 0.4, 0.2, 0.2},
                        { 0.2, 0.6, 0.6}, { 0.2, 0.6, 0.4}, { 0.2, 0.6, 0.2},
                        { 0.2, 0.4, 0.6}, { 0.2, 0.4, 0.4}, { 0.2, 0.4, 0.2},
                        { 0.2, 0.2, 0.6}, { 0.2, 0.2, 0.4}, { 0.2, 0.2, 0.2} }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rendering.cpp" line="18" column="7" bodyfile="src/rendering.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceed_1af66ae5dddfb44207513169ee32fae547" prot="public" static="yes" mutable="no">
        <type>const <ref refid="namespaceed_1a0c6baa32727c3af9459b72c4e8314103" kindref="member">Idx</ref></type>
        <definition>const Idx ed::INVALID_IDX</definition>
        <argsstring></argsstring>
        <name>INVALID_IDX</name>
        <initializer>= <ref refid="cpp/types/numeric_limits" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::numeric_limits</ref>&lt;<ref refid="namespaceed_1a0c6baa32727c3af9459b72c4e8314103" kindref="member">Idx</ref>&gt;::<ref refid="namespaceKDL_1adb3f6f67f41bc87f6d98423ac7a5b92f" kindref="member" external="/home/docker/ros/noetic/system/build/docs/orocos_kdl/tags">max</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/types.h" line="22" column="18" bodyfile="include/ed/types.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceed_1ae6683848fdba078a85bef7de7b4e0433" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float ed::clamp</definition>
        <argsstring>(float x, float a, float b)</argsstring>
        <name>clamp</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/transform_cache.cpp" line="8" column="14" bodyfile="src/transform_cache.cpp" bodystart="8" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1a3e975bdb62676dcc028d5646bb61dde5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed::convert</definition>
        <argsstring>(const ed::Entity &amp;e, ed_msgs::EntityInfo &amp;msg)</argsstring>
        <name>convert</name>
        <param>
          <type>const <ref refid="classed_1_1Entity" kindref="compound">ed::Entity</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <param>
          <type>ed_msgs::EntityInfo &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>converting <ref refid="classed_1_1Entity" kindref="compound">ed::Entity</ref> to ed_msgs::EntityInfo message </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classed_1_1Entity" kindref="compound">ed::Entity</ref> as input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>filled ed_msgs::EntityInfo message as output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/helpers/msg_conversions.h" line="49" column="6" bodyfile="include/ed/helpers/msg_conversions.h" bodystart="49" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1afad12056bd61ad94fda9eac7f8a6c8ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed::convert</definition>
        <argsstring>(const geo::ShapeConstPtr shape, ed_msgs::SubVolume &amp;sub_Volume)</argsstring>
        <name>convert</name>
        <param>
          <type>const <ref refid="namespacegeo_1aa7962fa7450fc503b1c737eae84e10df" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::ShapeConstPtr</ref></type>
          <declname>shape</declname>
        </param>
        <param>
          <type>ed_msgs::SubVolume &amp;</type>
          <declname>sub_Volume</declname>
        </param>
        <briefdescription>
<para>converting <ref refid="namespacegeo_1aa7962fa7450fc503b1c737eae84e10df" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::ShapeConstPtr</ref> to ed_msgs::SubVolume message </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="namespacegeo_1aa7962fa7450fc503b1c737eae84e10df" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::ShapeConstPtr</ref> as input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>filled ed_msgs::SubVolume message as output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/helpers/msg_conversions.h" line="26" column="6" bodyfile="include/ed/helpers/msg_conversions.h" bodystart="26" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1af80e577b1ab36be06f87e63929511576" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::deserialize</definition>
        <argsstring>(ed::io::Reader &amp;r, ConvexHull &amp;ch)</argsstring>
        <name>deserialize</name>
        <param>
          <type><ref refid="classed_1_1io_1_1Reader" kindref="compound">ed::io::Reader</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="structed_1_1ConvexHull" kindref="compound">ConvexHull</ref> &amp;</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/serialization/serialization.cpp" line="281" column="6" bodyfile="src/serialization/serialization.cpp" bodystart="281" bodyend="302" declfile="include/ed/serialization/serialization.h" declline="57" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1a18e7f463cc84dd1ea854e4ba09bbe1f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::deserialize</definition>
        <argsstring>(ed::io::Reader &amp;r, geo::Pose3D &amp;pose)</argsstring>
        <name>deserialize</name>
        <param>
          <type><ref refid="classed_1_1io_1_1Reader" kindref="compound">ed::io::Reader</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="namespacegeo_1a6c851aec5e98801c86d46d508de5c05d" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D</ref> &amp;</type>
          <declname>pose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/serialization/serialization.cpp" line="165" column="6" bodyfile="src/serialization/serialization.cpp" bodystart="165" bodyend="210" declfile="include/ed/serialization/serialization.h" declline="48" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1adda664977fab26814adfdfd814257c3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::deserialize</definition>
        <argsstring>(ed::io::Reader &amp;r, geo::Shape &amp;s)</argsstring>
        <name>deserialize</name>
        <param>
          <type><ref refid="classed_1_1io_1_1Reader" kindref="compound">ed::io::Reader</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="classgeo_1_1Shape" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Shape</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/serialization/serialization.cpp" line="334" column="6" bodyfile="src/serialization/serialization.cpp" bodystart="334" bodyend="374" declfile="include/ed/serialization/serialization.h" declline="62" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1a37054a276a10bc78ebdedeb0afb00295" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::deserialize</definition>
        <argsstring>(io::Reader &amp;r, UpdateRequest &amp;req)</argsstring>
        <name>deserialize</name>
        <param>
          <type><ref refid="classed_1_1io_1_1Reader" kindref="compound">io::Reader</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="classed_1_1UpdateRequest" kindref="compound">UpdateRequest</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/serialization/serialization.cpp" line="37" column="6" bodyfile="src/serialization/serialization.cpp" bodystart="37" bodyend="146" declfile="include/ed/serialization/serialization.h" declline="43" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1a36097696931560e438ee6eafb27a96bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::deserialize</definition>
        <argsstring>(tue::config::Reader &amp;r, const std::string &amp;group, geo::Pose3D &amp;pose)</argsstring>
        <name>deserialize</name>
        <param>
          <type><ref refid="classtue_1_1config_1_1Reader" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::Reader</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>group</declname>
        </param>
        <param>
          <type><ref refid="namespacegeo_1a6c851aec5e98801c86d46d508de5c05d" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D</ref> &amp;</type>
          <declname>pose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/serialization/serialization.cpp" line="214" column="6" bodyfile="src/serialization/serialization.cpp" bodystart="214" bodyend="246" declfile="include/ed/serialization/serialization.h" declline="50" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1a02d985f5ba70a60e2247d268b638867a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::deserialize</definition>
        <argsstring>(tue::config::Reader &amp;r, const std::string &amp;group, geo::Shape &amp;s)</argsstring>
        <name>deserialize</name>
        <param>
          <type><ref refid="classtue_1_1config_1_1Reader" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::Reader</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>group</declname>
        </param>
        <param>
          <type><ref refid="classgeo_1_1Shape" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Shape</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/serialization/serialization.cpp" line="378" column="6" bodyfile="src/serialization/serialization.cpp" bodystart="378" bodyend="453" declfile="include/ed/serialization/serialization.h" declline="64" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1aca85019694e69108555ae992d7c4d99b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::deserialize</definition>
        <argsstring>(tue::config::Reader &amp;r, const std::string &amp;group, geo::Vec3 &amp;p)</argsstring>
        <name>deserialize</name>
        <param>
          <type><ref refid="classtue_1_1config_1_1Reader" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::Reader</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>group</declname>
        </param>
        <param>
          <type><ref refid="namespacegeo_1a7cee017284c7b2011db63a83abfac2c5" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Vec3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/serialization/serialization.cpp" line="250" column="6" bodyfile="src/serialization/serialization.cpp" bodystart="250" bodyend="261" declfile="include/ed/serialization/serialization.h" declline="52" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1a951767825281c228ab9a9859fc24ef61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::deserialize</definition>
        <argsstring>(tue::serialization::InputArchive &amp;m, ImageMask &amp;mask)</argsstring>
        <name>deserialize</name>
        <param>
          <type><ref refid="classtue_1_1serialization_1_1InputArchive" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/tue_serialization/tags">tue::serialization::InputArchive</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type><ref refid="classed_1_1ImageMask" kindref="compound">ImageMask</ref> &amp;</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/serialization/serialization.cpp" line="501" column="6" bodyfile="src/serialization/serialization.cpp" bodystart="501" bodyend="523" declfile="include/ed/serialization/serialization.h" declline="74" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1a2be62bd4ab77ea4f9dba62eda2a320e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::deserializeTimestamp</definition>
        <argsstring>(ed::io::Reader &amp;r, double &amp;time)</argsstring>
        <name>deserializeTimestamp</name>
        <param>
          <type><ref refid="classed_1_1io_1_1Reader" kindref="compound">ed::io::Reader</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/serialization/serialization.cpp" line="465" column="6" bodyfile="src/serialization/serialization.cpp" bodystart="465" bodyend="472" declfile="include/ed/serialization/serialization.h" declline="69" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1ade6669102d8e3d89a66a3c5d5b176d6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int ed::djb2</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>djb2</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rendering.cpp" line="78" column="14" bodyfile="src/rendering.cpp" bodystart="78" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1a8c1918a62359f6eaaee9793207875b59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed::interpolate</definition>
        <argsstring>(const geo::Transform &amp;t1, const geo::Transform &amp;t2, float alpha, geo::Pose3D &amp;result)</argsstring>
        <name>interpolate</name>
        <param>
          <type>const <ref refid="classgeo_1_1Transform" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Transform</ref> &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1Transform" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Transform</ref> &amp;</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>float</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type><ref refid="namespacegeo_1a6c851aec5e98801c86d46d508de5c05d" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/transform_cache.cpp" line="44" column="6" bodyfile="src/transform_cache.cpp" bodystart="44" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1a728954859baa44511c3b2574ef787e5b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const static <ref refid="namespaceed_1ac2ada6171716e19de37dd3238facaa18" kindref="member">PointCloudMask</ref></type>
        <definition>const static PointCloudMask ed::NO_MASK</definition>
        <argsstring>(1, -1)</argsstring>
        <name>NO_MASK</name>
        <param>
          <type>1</type>
        </param>
        <param>
          <type>-</type>
          <declname>1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/rgbd_data.h" line="20" column="29" declfile="include/ed/rgbd_data.h" declline="20" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1a5bd83e91c37b427297c78ce79b2710f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::read</definition>
        <argsstring>(const std::string &amp;filename, Measurement &amp;msr)</argsstring>
        <name>read</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="classed_1_1Measurement" kindref="compound">Measurement</ref> &amp;</type>
          <declname>msr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/filesystem/read.cpp" line="68" column="6" bodyfile="src/io/filesystem/read.cpp" bodystart="68" bodyend="80" declfile="include/ed/io/filesystem/read.h" declline="12" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1a7a4ca45846a5a923b5f41d8a4fc99904" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::readEntity</definition>
        <argsstring>(const std::string &amp;filename, UpdateRequest &amp;req)</argsstring>
        <name>readEntity</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="classed_1_1UpdateRequest" kindref="compound">UpdateRequest</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/filesystem/read.cpp" line="84" column="6" bodyfile="src/io/filesystem/read.cpp" bodystart="84" bodyend="186" declfile="include/ed/io/filesystem/read.h" declline="14" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1a74bd2d4aa316e11f350c88e87b440176" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed::renderMesh</definition>
        <argsstring>(const geo::DepthCamera &amp;cam, const geo::Pose3D &amp;pose, const geo::Mesh &amp;mesh, const cv::Vec3b &amp;color, SampleRenderResult &amp;res, bool flatten=false)</argsstring>
        <name>renderMesh</name>
        <param>
          <type>const <ref refid="classgeo_1_1DepthCamera" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::DepthCamera</ref> &amp;</type>
          <declname>cam</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegeo_1a6c851aec5e98801c86d46d508de5c05d" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D</ref> &amp;</type>
          <declname>pose</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1Mesh" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const cv::Vec3b &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type><ref refid="classed_1_1SampleRenderResult" kindref="compound">SampleRenderResult</ref> &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>flatten</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Render a mesh. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cam</parametername>
</parameternamelist>
<parameterdescription>
<para>DepthCamera to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pose</parametername>
</parameternamelist>
<parameterdescription>
<para>Pose of the mesh in the camera frame </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mesh</parametername>
</parameternamelist>
<parameterdescription>
<para>Mesh to render </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>color vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>Renderresult, which stores the renderer image </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flatten</parametername>
</parameternamelist>
<parameterdescription>
<para>Flatten all the meshes to the groundplane (default: false) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rendering.cpp" line="99" column="6" bodyfile="src/rendering.cpp" bodystart="99" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1a3fbde2505e8ed4ccc1bf11b27edaf860" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::renderWorldModel</definition>
        <argsstring>(const ed::WorldModel &amp;world_model, const enum ShowVolumes show_volumes, const geo::DepthCamera &amp;cam, const geo::Pose3D &amp;cam_pose_inv, cv::Mat &amp;depth_image, cv::Mat &amp;image, bool flatten=false)</argsstring>
        <name>renderWorldModel</name>
        <param>
          <type>const <ref refid="classed_1_1WorldModel" kindref="compound">ed::WorldModel</ref> &amp;</type>
          <declname>world_model</declname>
        </param>
        <param>
          <type>const enum <ref refid="namespaceed_1a6d2e4db0e8652fd8b168440a6787d756" kindref="member">ShowVolumes</ref></type>
          <declname>show_volumes</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1DepthCamera" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::DepthCamera</ref> &amp;</type>
          <declname>cam</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegeo_1a6c851aec5e98801c86d46d508de5c05d" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D</ref> &amp;</type>
          <declname>cam_pose_inv</declname>
        </param>
        <param>
          <type>cv::Mat &amp;</type>
          <declname>depth_image</declname>
        </param>
        <param>
          <type>cv::Mat &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>flatten</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>renderWorldModel renders a world model on a depth image and a colored (3D) image </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="namespaceed_1_1world__model" kindref="compound">world_model</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>world model to render </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>show_volumes</parametername>
</parameternamelist>
<parameterdescription>
<para>configures which volumes to render </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cam</parametername>
</parameternamelist>
<parameterdescription>
<para>DepthCamera object used for rendering </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cam_pose_inv</parametername>
</parameternamelist>
<parameterdescription>
<para>inverse pose of the depth camera </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>depth_image</parametername>
</parameternamelist>
<parameterdescription>
<para>depth image that will be rendered </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>colored 3D image that will be rendered. N.B.: needs to be of the same size as the depth image </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flatten</parametername>
</parameternamelist>
<parameterdescription>
<para>Flatten all the meshes to the groundplane (default: false) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rendering.cpp" line="128" column="6" bodyfile="src/rendering.cpp" bodystart="128" bodyend="203" declfile="include/ed/rendering.h" declline="42" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1a997deb8d1c86ddee6846024b453f79b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed::serialize</definition>
        <argsstring>(const ConvexHull &amp;ch, ed::io::Writer &amp;w)</argsstring>
        <name>serialize</name>
        <param>
          <type>const <ref refid="structed_1_1ConvexHull" kindref="compound">ConvexHull</ref> &amp;</type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="classed_1_1io_1_1Writer" kindref="compound">ed::io::Writer</ref> &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/serialization/serialization.cpp" line="265" column="6" bodyfile="src/serialization/serialization.cpp" bodystart="265" bodyend="277" declfile="include/ed/serialization/serialization.h" declline="55" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1a608c22b020907e04bb62daa3a216f12e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed::serialize</definition>
        <argsstring>(const geo::Pose3D &amp;pose, ed::io::Writer &amp;w)</argsstring>
        <name>serialize</name>
        <param>
          <type>const <ref refid="namespacegeo_1a6c851aec5e98801c86d46d508de5c05d" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D</ref> &amp;</type>
          <declname>pose</declname>
        </param>
        <param>
          <type><ref refid="classed_1_1io_1_1Writer" kindref="compound">ed::io::Writer</ref> &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/serialization/serialization.cpp" line="150" column="6" bodyfile="src/serialization/serialization.cpp" bodystart="150" bodyend="161" declfile="include/ed/serialization/serialization.h" declline="46" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1a401ab80d2ecfcd79751e9c7711071345" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed::serialize</definition>
        <argsstring>(const geo::Shape &amp;s, ed::io::Writer &amp;w)</argsstring>
        <name>serialize</name>
        <param>
          <type>const <ref refid="classgeo_1_1Shape" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Shape</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classed_1_1io_1_1Writer" kindref="compound">ed::io::Writer</ref> &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/serialization/serialization.cpp" line="306" column="6" bodyfile="src/serialization/serialization.cpp" bodystart="306" bodyend="330" declfile="include/ed/serialization/serialization.h" declline="60" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1ae12ddcfec4e26805cfe6b21666f60508" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed::serialize</definition>
        <argsstring>(const ImageMask &amp;mask, tue::serialization::OutputArchive &amp;m)</argsstring>
        <name>serialize</name>
        <param>
          <type>const <ref refid="classed_1_1ImageMask" kindref="compound">ImageMask</ref> &amp;</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="classtue_1_1serialization_1_1OutputArchive" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/tue_serialization/tags">tue::serialization::OutputArchive</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/serialization/serialization.cpp" line="476" column="6" bodyfile="src/serialization/serialization.cpp" bodystart="476" bodyend="497" declfile="include/ed/serialization/serialization.h" declline="72" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1a631c7dd3d53f4ac823db54fb3576bb21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed::serializeTimestamp</definition>
        <argsstring>(double time, ed::io::Writer &amp;w)</argsstring>
        <name>serializeTimestamp</name>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="classed_1_1io_1_1Writer" kindref="compound">ed::io::Writer</ref> &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/serialization/serialization.cpp" line="457" column="6" bodyfile="src/serialization/serialization.cpp" bodystart="457" bodyend="461" declfile="include/ed/serialization/serialization.h" declline="67" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1a67fe6957b12fa6c3fe3102311e7a343f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegeo_1a69dc5a665d9be978dac4ac9545977402" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Quaternion</ref></type>
        <definition>geo::Quaternion ed::slerp</definition>
        <argsstring>(const geo::Quaternion &amp;v0, const geo::Quaternion &amp;v1, float alpha)</argsstring>
        <name>slerp</name>
        <param>
          <type>const <ref refid="namespacegeo_1a69dc5a665d9be978dac4ac9545977402" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Quaternion</ref> &amp;</type>
          <declname>v0</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegeo_1a69dc5a665d9be978dac4ac9545977402" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Quaternion</ref> &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/transform_cache.cpp" line="15" column="17" bodyfile="src/transform_cache.cpp" bodystart="15" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1a9019b31c77a2507e8f051db0f780c3ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::write</definition>
        <argsstring>(const std::string &amp;filename, const Entity &amp;e)</argsstring>
        <name>write</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const <ref refid="classed_1_1Entity" kindref="compound">Entity</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/filesystem/write.cpp" line="60" column="6" bodyfile="src/io/filesystem/write.cpp" bodystart="60" bodyend="118" declfile="include/ed/io/filesystem/write.h" declline="14" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1ab63bb66bf01be8a784dc561a4e95f29b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::write</definition>
        <argsstring>(const std::string &amp;filename, const Measurement &amp;msr)</argsstring>
        <name>write</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const <ref refid="classed_1_1Measurement" kindref="compound">Measurement</ref> &amp;</type>
          <declname>msr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/filesystem/write.cpp" line="21" column="6" bodyfile="src/io/filesystem/write.cpp" bodystart="21" bodyend="56" declfile="include/ed/io/filesystem/write.h" declline="12" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/ed/convex_hull.h" line="9" column="1"/>
  </compounddef>
</doxygen>
