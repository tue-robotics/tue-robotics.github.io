<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classed_1_1models_1_1ModelLoader" kind="class" language="C++" prot="public">
    <compoundname>ed::models::ModelLoader</compoundname>
    <includes refid="model__loader_8h" local="no">model_loader.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classed_1_1models_1_1ModelLoader_1a94b83587074b70a2fab570e35c54c87c" prot="private" static="no">
        <type><ref refid="cpp/utility/pair" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::pair</ref>&lt; <ref refid="classtue_1_1config_1_1DataConstPointer" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::DataConstPointer</ref>, <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &gt; &gt;</type>
        <definition>typedef std::pair&lt;tue::config::DataConstPointer, std::vector&lt;std::string&gt; &gt; ed::models::ModelLoader::ModelData</definition>
        <argsstring></argsstring>
        <name>ModelData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/models/model_loader.h" line="87" column="23" bodyfile="include/ed/models/model_loader.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classed_1_1models_1_1ModelLoader_1a05760b2a51b681871bd70d3cfee131d8" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &gt;</type>
        <definition>std::vector&lt;std::string&gt; ed::models::ModelLoader::ed_model_paths_</definition>
        <argsstring></argsstring>
        <name>ed_model_paths_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/models/model_loader.h" line="96" column="17" bodyfile="include/ed/models/model_loader.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1models_1_1ModelLoader_1a314e7cab803dfd6de489b2bd69954736" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &gt;</type>
        <definition>std::vector&lt;std::string&gt; ed::models::ModelLoader::file_paths_</definition>
        <argsstring></argsstring>
        <name>file_paths_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/models/model_loader.h" line="98" column="17" bodyfile="include/ed/models/model_loader.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1models_1_1ModelLoader_1affb911331417fea9cd5ee7d22a84ebdb" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>, <ref refid="classed_1_1models_1_1ModelLoader_1a94b83587074b70a2fab570e35c54c87c" kindref="member">ModelData</ref> &gt;</type>
        <definition>std::map&lt;std::string, ModelData&gt; ed::models::ModelLoader::model_cache_</definition>
        <argsstring></argsstring>
        <name>model_cache_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/models/model_loader.h" line="90" column="14" bodyfile="include/ed/models/model_loader.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1models_1_1ModelLoader_1a43094191cddf7d39ab13678d7f479d0e" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &gt;</type>
        <definition>std::vector&lt;std::string&gt; ed::models::ModelLoader::model_paths_</definition>
        <argsstring></argsstring>
        <name>model_paths_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/models/model_loader.h" line="97" column="17" bodyfile="include/ed/models/model_loader.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1models_1_1ModelLoader_1a759cd02fecb77391d1b755cb2cf4359e" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>, <ref refid="namespacegeo_1aef28655bad0d2414bb89fe6dba28bad1" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::ShapePtr</ref> &gt;</type>
        <definition>std::map&lt;std::string, geo::ShapePtr&gt; ed::models::ModelLoader::shape_cache_</definition>
        <argsstring></argsstring>
        <name>shape_cache_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/models/model_loader.h" line="93" column="14" bodyfile="include/ed/models/model_loader.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classed_1_1models_1_1ModelLoader_1a95a72bf34f14c947066c42fdd0ab29b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::models::ModelLoader::create</definition>
        <argsstring>(const tue::config::DataConstPointer &amp;data, const UUID &amp;id_opt, const UUID &amp;parent_id, UpdateRequest &amp;req, std::stringstream &amp;error, const std::string &amp;model_path=&quot;&quot;, const geo::Pose3D &amp;pose_offset=geo::Pose3D::identity())</argsstring>
        <name>create</name>
        <param>
          <type>const <ref refid="classtue_1_1config_1_1DataConstPointer" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::DataConstPointer</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>id_opt</declname>
        </param>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>parent_id</declname>
        </param>
        <param>
          <type><ref refid="classed_1_1UpdateRequest" kindref="compound">UpdateRequest</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type><ref refid="cpp/io/basic_stringstream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::stringstream</ref> &amp;</type>
          <declname>error</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>model_path</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const <ref refid="namespacegeo_1a6c851aec5e98801c86d46d508de5c05d" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D</ref> &amp;</type>
          <declname>pose_offset</declname>
          <defval><ref refid="classgeo_1_1Transform3T_1a0b569228b1e6eb2889d646158e7e11d1" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D::identity</ref>()</defval>
        </param>
        <briefdescription>
<para>create add entity to update_request from config data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>should contain the right data and should be at the correct reading point </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id_opt</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional id, if no id in data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent_id</parametername>
</parameternamelist>
<parameterdescription>
<para>prefix to id, unless starting with &quot;_&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classed_1_1UpdateRequest" kindref="compound">UpdateRequest</ref> to &apos;fill&apos; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>error stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>model_path</parametername>
</parameternamelist>
<parameterdescription>
<para>path where the data is read. Is used for relative paths in the data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pose_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>pose offset, if no pose in data, this pose will be the final pose. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool, which indicates succes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/models/model_loader.h" line="59" column="10" bodyfile="src/models/model_loader.cpp" bodystart="329" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1models_1_1ModelLoader_1a112349301720dbafca8f4db73d60ab04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::models::ModelLoader::create</definition>
        <argsstring>(const tue::config::DataConstPointer &amp;data, UpdateRequest &amp;req, std::stringstream &amp;error)</argsstring>
        <name>create</name>
        <param>
          <type>const <ref refid="classtue_1_1config_1_1DataConstPointer" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::DataConstPointer</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="classed_1_1UpdateRequest" kindref="compound">UpdateRequest</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type><ref refid="cpp/io/basic_stringstream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::stringstream</ref> &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>create add entity to update_request from config data. &quot;_root&quot; will be used as id. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>should contain the right data and should be at the correct reading point </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classed_1_1UpdateRequest" kindref="compound">UpdateRequest</ref> to &apos;fill&apos; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>error stream </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool, which indicates succes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/models/model_loader.h" line="46" column="10" bodyfile="src/models/model_loader.cpp" bodystart="322" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1models_1_1ModelLoader_1ad17eb362fe5c181e04ea6e697ec0d958" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::models::ModelLoader::create</definition>
        <argsstring>(const UUID &amp;id, const std::string &amp;type, UpdateRequest &amp;req, std::stringstream &amp;error, const bool allow_sdf=false)</argsstring>
        <name>create</name>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="classed_1_1UpdateRequest" kindref="compound">UpdateRequest</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type><ref refid="cpp/io/basic_stringstream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::stringstream</ref> &amp;</type>
          <declname>error</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>allow_sdf</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>create add entity to update_request with id &apos;id&apos; of the type &apos;type&apos;. If allow_sdf is true, also sdf models are considered. Otherwise only ED yaml models are used. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>new id of the entity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the entity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classed_1_1UpdateRequest" kindref="compound">UpdateRequest</ref> to &apos;fill&apos; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>error stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allow_sdf</parametername>
</parameternamelist>
<parameterdescription>
<para>Allow SDF models, or only ED yaml models </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool, which indicates succes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/models/model_loader.h" line="37" column="10" bodyfile="src/models/model_loader.cpp" bodystart="285" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1models_1_1ModelLoader_1a2763c48ea391c7ce6e3dfa742dab903d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::models::ModelLoader::createSDF</definition>
        <argsstring>(const tue::config::DataConstPointer &amp;data, const UUID &amp;parent_id, const geo::Pose3D &amp;parent_pose, const UUID &amp;id_override, const boost::shared_ptr&lt; const geo::Pose3D &gt; pose_override, UpdateRequest &amp;req, std::stringstream &amp;error)</argsstring>
        <name>createSDF</name>
        <param>
          <type>const <ref refid="classtue_1_1config_1_1DataConstPointer" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::DataConstPointer</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>parent_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegeo_1a6c851aec5e98801c86d46d508de5c05d" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D</ref> &amp;</type>
          <declname>parent_pose</declname>
        </param>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>id_override</declname>
        </param>
        <param>
          <type>const boost::shared_ptr&lt; const <ref refid="namespacegeo_1a6c851aec5e98801c86d46d508de5c05d" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D</ref> &gt;</type>
          <declname>pose_override</declname>
        </param>
        <param>
          <type><ref refid="classed_1_1UpdateRequest" kindref="compound">UpdateRequest</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type><ref refid="cpp/io/basic_stringstream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::stringstream</ref> &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>createSDF add SDF entity to update_request from config data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>should contain the right data and should be at the correct reading point </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent_id</parametername>
</parameternamelist>
<parameterdescription>
<para>prefix to id, unless starting with &quot;_&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent_pose</parametername>
</parameternamelist>
<parameterdescription>
<para>pose offset which will always be applied </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id_override</parametername>
</parameternamelist>
<parameterdescription>
<para>if not empty, this will override the id of the model </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pose_override</parametername>
</parameternamelist>
<parameterdescription>
<para>if not empty, this will override the pose of the model </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classed_1_1UpdateRequest" kindref="compound">UpdateRequest</ref> to &apos;fill&apos; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>error stream </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool, which indicates succes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/models/model_loader.h" line="74" column="10" bodyfile="src/models/model_loader.cpp" bodystart="466" bodyend="616"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1models_1_1ModelLoader_1a7ff4c4e5afaab1c8f93d004b4189bbd7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::models::ModelLoader::exists</definition>
        <argsstring>(const std::string &amp;type) const</argsstring>
        <name>exists</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>exists Check of a model of type &apos;type&apos; exist </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>model type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool, which indicates of type exist </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/models/model_loader.h" line="83" column="10" bodyfile="src/models/model_loader.cpp" bodystart="264" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1models_1_1ModelLoader_1ad48fc49e7d1519783c0c979aea90aed2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ed::models::ModelLoader::ModelLoader</definition>
        <argsstring>()</argsstring>
        <name>ModelLoader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/models/model_loader.h" line="23" column="5" bodyfile="src/models/model_loader.cpp" bodystart="51" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1models_1_1ModelLoader_1a0079b83d54e694dfa59bfccfe7013989" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ed::models::ModelLoader::~ModelLoader</definition>
        <argsstring>()</argsstring>
        <name>~ModelLoader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/models/model_loader.h" line="25" column="5" bodyfile="src/models/model_loader.cpp" bodystart="78" bodyend="80"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classed_1_1models_1_1ModelLoader_1ab0e564637c0e804b7a1e8ce39759468d" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>std::string ed::models::ModelLoader::getModelPath</definition>
        <argsstring>(const std::string &amp;type) const</argsstring>
        <name>getModelPath</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>getModelPath get file path of model of type &apos;type&apos; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classed_1_1models_1_1ModelLoader_1ab0e564637c0e804b7a1e8ce39759468d" kindref="member">ModelLoader::getModelPath</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the model </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>path of the model, empty if model not found</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The full path or empty string, if not found </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/models/model_loader.h" line="125" column="17" bodyfile="src/models/model_loader.cpp" bodystart="90" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1models_1_1ModelLoader_1a893261b10eef44ead37d21e95b085feb" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>std::string ed::models::ModelLoader::getSDFPath</definition>
        <argsstring>(const std::string &amp;uri) const</argsstring>
        <name>getSDFPath</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
<para>getSDFPath get file path of SDF model with uri &apos;uri&apos; </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uri</parametername>
</parameternamelist>
<parameterdescription>
<para>uri of the model </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>path of the model, empty if model not found </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/models/model_loader.h" line="132" column="17" bodyfile="src/models/model_loader.cpp" bodystart="104" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1models_1_1ModelLoader_1a34aa8d0c6ea159266c07b526b45b9ec1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtue_1_1config_1_1DataConstPointer" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::DataConstPointer</ref></type>
        <definition>tue::config::DataConstPointer ed::models::ModelLoader::loadModelData</definition>
        <argsstring>(std::string type, std::vector&lt; std::string &gt; &amp;types, std::stringstream &amp;error, const bool allow_sdf=false)</argsstring>
        <name>loadModelData</name>
        <param>
          <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &gt; &amp;</type>
          <declname>types</declname>
        </param>
        <param>
          <type><ref refid="cpp/io/basic_stringstream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::stringstream</ref> &amp;</type>
          <declname>error</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>allow_sdf</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>loadModelData load data of model of type &apos;type&apos; </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the model </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>types</parametername>
</parameternamelist>
<parameterdescription>
<para>vector of model types for recursive inheritance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>error stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allow_sdf</parametername>
</parameternamelist>
<parameterdescription>
<para>Allow SDF models, or only ED yaml models </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DataConstPointer with the data, empty in case of error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/models/model_loader.h" line="108" column="35" bodyfile="src/models/model_loader.cpp" bodystart="156" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1models_1_1ModelLoader_1acda981c119c0d0a5e99029072b8921ea" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtue_1_1config_1_1DataConstPointer" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::DataConstPointer</ref></type>
        <definition>tue::config::DataConstPointer ed::models::ModelLoader::loadSDFData</definition>
        <argsstring>(std::string uri, std::stringstream &amp;error)</argsstring>
        <name>loadSDFData</name>
        <param>
          <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
          <declname>uri</declname>
        </param>
        <param>
          <type><ref refid="cpp/io/basic_stringstream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::stringstream</ref> &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>loadSDFData load data of SDF model of uri &apos;uri&apos; </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uri</parametername>
</parameternamelist>
<parameterdescription>
<para>uri of the model </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>error stream </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DataConstPointer with the data, empty in case of error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/models/model_loader.h" line="117" column="35" bodyfile="src/models/model_loader.cpp" bodystart="225" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1models_1_1ModelLoader_1a03ab18da95662c7406e097ad11a76842" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classed_1_1models_1_1ModelLoader_1a94b83587074b70a2fab570e35c54c87c" kindref="member">ModelData</ref></type>
        <definition>ModelLoader::ModelData ed::models::ModelLoader::readModelCache</definition>
        <argsstring>(std::string type) const</argsstring>
        <name>readModelCache</name>
        <param>
          <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>readModelCache read the model cache, which contains the data and all types </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the model to look for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ModelData, DataPointer is empty in case type not in cache </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/models/model_loader.h" line="139" column="15" bodyfile="src/models/model_loader.cpp" bodystart="143" bodyend="152"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>std::map&lt; std::string, std::pair &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="1">
        <label>ed::models::ModelLoader</label>
        <link refid="classed_1_1models_1_1ModelLoader"/>
        <childnode refid="2" relation="usage">
          <edgelabel>shape_cache_</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>model_cache_</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>model_paths_</edgelabel>
          <edgelabel>file_paths_</edgelabel>
          <edgelabel>ed_model_paths_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::vector&lt; std::string &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="2">
        <label>std::map&lt; std::string, std::shared_ptr &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="include/ed/models/model_loader.h" line="19" column="1" bodyfile="include/ed/models/model_loader.h" bodystart="18" bodyend="141"/>
    <listofallmembers>
      <member refid="classed_1_1models_1_1ModelLoader_1ad17eb362fe5c181e04ea6e697ec0d958" prot="public" virt="non-virtual"><scope>ed::models::ModelLoader</scope><name>create</name></member>
      <member refid="classed_1_1models_1_1ModelLoader_1a112349301720dbafca8f4db73d60ab04" prot="public" virt="non-virtual"><scope>ed::models::ModelLoader</scope><name>create</name></member>
      <member refid="classed_1_1models_1_1ModelLoader_1a95a72bf34f14c947066c42fdd0ab29b6" prot="public" virt="non-virtual"><scope>ed::models::ModelLoader</scope><name>create</name></member>
      <member refid="classed_1_1models_1_1ModelLoader_1a2763c48ea391c7ce6e3dfa742dab903d" prot="public" virt="non-virtual"><scope>ed::models::ModelLoader</scope><name>createSDF</name></member>
      <member refid="classed_1_1models_1_1ModelLoader_1a05760b2a51b681871bd70d3cfee131d8" prot="private" virt="non-virtual"><scope>ed::models::ModelLoader</scope><name>ed_model_paths_</name></member>
      <member refid="classed_1_1models_1_1ModelLoader_1a7ff4c4e5afaab1c8f93d004b4189bbd7" prot="public" virt="non-virtual"><scope>ed::models::ModelLoader</scope><name>exists</name></member>
      <member refid="classed_1_1models_1_1ModelLoader_1a314e7cab803dfd6de489b2bd69954736" prot="private" virt="non-virtual"><scope>ed::models::ModelLoader</scope><name>file_paths_</name></member>
      <member refid="classed_1_1models_1_1ModelLoader_1ab0e564637c0e804b7a1e8ce39759468d" prot="private" virt="non-virtual"><scope>ed::models::ModelLoader</scope><name>getModelPath</name></member>
      <member refid="classed_1_1models_1_1ModelLoader_1a893261b10eef44ead37d21e95b085feb" prot="private" virt="non-virtual"><scope>ed::models::ModelLoader</scope><name>getSDFPath</name></member>
      <member refid="classed_1_1models_1_1ModelLoader_1a34aa8d0c6ea159266c07b526b45b9ec1" prot="private" virt="non-virtual"><scope>ed::models::ModelLoader</scope><name>loadModelData</name></member>
      <member refid="classed_1_1models_1_1ModelLoader_1acda981c119c0d0a5e99029072b8921ea" prot="private" virt="non-virtual"><scope>ed::models::ModelLoader</scope><name>loadSDFData</name></member>
      <member refid="classed_1_1models_1_1ModelLoader_1affb911331417fea9cd5ee7d22a84ebdb" prot="private" virt="non-virtual"><scope>ed::models::ModelLoader</scope><name>model_cache_</name></member>
      <member refid="classed_1_1models_1_1ModelLoader_1a43094191cddf7d39ab13678d7f479d0e" prot="private" virt="non-virtual"><scope>ed::models::ModelLoader</scope><name>model_paths_</name></member>
      <member refid="classed_1_1models_1_1ModelLoader_1a94b83587074b70a2fab570e35c54c87c" prot="private" virt="non-virtual"><scope>ed::models::ModelLoader</scope><name>ModelData</name></member>
      <member refid="classed_1_1models_1_1ModelLoader_1ad48fc49e7d1519783c0c979aea90aed2" prot="public" virt="non-virtual"><scope>ed::models::ModelLoader</scope><name>ModelLoader</name></member>
      <member refid="classed_1_1models_1_1ModelLoader_1a03ab18da95662c7406e097ad11a76842" prot="private" virt="non-virtual"><scope>ed::models::ModelLoader</scope><name>readModelCache</name></member>
      <member refid="classed_1_1models_1_1ModelLoader_1a759cd02fecb77391d1b755cb2cf4359e" prot="private" virt="non-virtual"><scope>ed::models::ModelLoader</scope><name>shape_cache_</name></member>
      <member refid="classed_1_1models_1_1ModelLoader_1a0079b83d54e694dfa59bfccfe7013989" prot="public" virt="non-virtual"><scope>ed::models::ModelLoader</scope><name>~ModelLoader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
