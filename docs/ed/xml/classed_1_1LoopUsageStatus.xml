<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classed_1_1LoopUsageStatus" kind="class" language="C++" prot="public">
    <compoundname>ed::LoopUsageStatus</compoundname>
    <basecompoundref prot="public" virt="non-virtual">DiagnosticTask</basecompoundref>
    <includes refid="loop__usage__status_8h" local="no">loop_usage_status.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classed_1_1LoopUsageStatus_1a1c94bd291c1647a5e815649e482bdc2b" prot="private" static="no" mutable="no">
        <type>long double</type>
        <definition>long double ed::LoopUsageStatus::duration_</definition>
        <argsstring></argsstring>
        <name>duration_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/loop_usage_status.h" line="38" column="17" bodyfile="include/ed/loop_usage_status.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1LoopUsageStatus_1a597d2bd526226de04279a2509a972a7a" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; long double &gt;</type>
        <definition>std::vector&lt;long double&gt; ed::LoopUsageStatus::durations_</definition>
        <argsstring></argsstring>
        <name>durations_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/loop_usage_status.h" line="34" column="17" bodyfile="include/ed/loop_usage_status.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1LoopUsageStatus_1a6c835bdc5d1a3bcddab9f6249778bb1e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int ed::LoopUsageStatus::hist_indx_</definition>
        <argsstring></argsstring>
        <name>hist_indx_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/loop_usage_status.h" line="36" column="9" bodyfile="include/ed/loop_usage_status.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1LoopUsageStatus_1aaa0b8d4b95a95e0cea5710c65be33942" prot="private" static="no" mutable="no">
        <type>boost::mutex</type>
        <definition>boost::mutex ed::LoopUsageStatus::lock_</definition>
        <argsstring></argsstring>
        <name>lock_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/loop_usage_status.h" line="40" column="18" bodyfile="include/ed/loop_usage_status.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1LoopUsageStatus_1a3238189aea05f434f7fd0a9c016aeebb" prot="private" static="no" mutable="no">
        <type>const diagnostic_updater::FrequencyStatusParam</type>
        <definition>const diagnostic_updater::FrequencyStatusParam ed::LoopUsageStatus::params_</definition>
        <argsstring></argsstring>
        <name>params_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/loop_usage_status.h" line="30" column="52" bodyfile="include/ed/loop_usage_status.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1LoopUsageStatus_1a597c1a578184b254dd26aaa3a38ed29c" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; ed::LoopUsageStatus::seq_nums_</definition>
        <argsstring></argsstring>
        <name>seq_nums_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/loop_usage_status.h" line="35" column="17" bodyfile="include/ed/loop_usage_status.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1LoopUsageStatus_1ac1fd89efa38a8939c70bb0579f0da32d" prot="private" static="no" mutable="no">
        <type>long double</type>
        <definition>long double ed::LoopUsageStatus::start_</definition>
        <argsstring></argsstring>
        <name>start_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/loop_usage_status.h" line="37" column="17" bodyfile="include/ed/loop_usage_status.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1LoopUsageStatus_1a9023dcdc4bd888e1260a62ee0ef8f535" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; long double &gt;</type>
        <definition>std::vector&lt;long double&gt; ed::LoopUsageStatus::starts_</definition>
        <argsstring></argsstring>
        <name>starts_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/loop_usage_status.h" line="33" column="17" bodyfile="include/ed/loop_usage_status.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1LoopUsageStatus_1a301b876edf53f1056d2fd896c62e0204" prot="private" static="no" mutable="no">
        <type><ref refid="classtue_1_1LoopTimer" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">tue::LoopTimer</ref></type>
        <definition>tue::LoopTimer ed::LoopUsageStatus::timer_</definition>
        <argsstring></argsstring>
        <name>timer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/loop_usage_status.h" line="32" column="20" bodyfile="include/ed/loop_usage_status.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classed_1_1LoopUsageStatus_1aa98fd73f50d2d1367407f4627e4de538" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::LoopUsageStatus::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>Resets the statistics. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/loop_usage_status.h" line="74" column="10" bodyfile="include/ed/loop_usage_status.h" bodystart="74" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1LoopUsageStatus_1adc83336bd4b9eb1c626ececbdfdf43ba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtue_1_1LoopTimer" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">tue::LoopTimer</ref> &amp;</type>
        <definition>const tue::LoopTimer&amp; ed::LoopUsageStatus::getTimer</definition>
        <argsstring>() const</argsstring>
        <name>getTimer</name>
        <briefdescription>
<para>Expose const reference to loop timer. No call to the const timer will be able to influence the behaviour of this class. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>const reference to the loop timer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/loop_usage_status.h" line="69" column="26" bodyfile="include/ed/loop_usage_status.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1LoopUsageStatus_1a9df1f1e496d5bdb05ca5b715461db0b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ed::LoopUsageStatus::LoopUsageStatus</definition>
        <argsstring>(const diagnostic_updater::FrequencyStatusParam &amp;params)</argsstring>
        <name>LoopUsageStatus</name>
        <param>
          <type>const diagnostic_updater::FrequencyStatusParam &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classed_1_1LoopUsageStatus" kindref="compound">LoopUsageStatus</ref> class with the given parameters. Uses a default diagnostic task name of &quot;Loop Usage Status&quot;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/loop_usage_status.h" line="58" column="5" bodyfile="include/ed/loop_usage_status.h" bodystart="58" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1LoopUsageStatus_1a1a8a2d0a70e28ba30fb7d9b68755d8e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ed::LoopUsageStatus::LoopUsageStatus</definition>
        <argsstring>(const diagnostic_updater::FrequencyStatusParam &amp;params, std::string name)</argsstring>
        <name>LoopUsageStatus</name>
        <param>
          <type>const diagnostic_updater::FrequencyStatusParam &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classed_1_1LoopUsageStatus" kindref="compound">LoopUsageStatus</ref> class with the given parameters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/loop_usage_status.h" line="46" column="5" bodyfile="include/ed/loop_usage_status.h" bodystart="46" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1LoopUsageStatus_1a4f058a40d9e7f8f180d1c138d1c20bda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void ed::LoopUsageStatus::run</definition>
        <argsstring>(diagnostic_updater::DiagnosticStatusWrapper &amp;stat)</argsstring>
        <name>run</name>
        <param>
          <type>diagnostic_updater::DiagnosticStatusWrapper &amp;</type>
          <declname>stat</declname>
        </param>
        <briefdescription>
<para>Fills out this Task&apos;s DiagnosticStatusWrapper. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/loop_usage_status.h" line="108" column="18" bodyfile="include/ed/loop_usage_status.h" bodystart="108" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1LoopUsageStatus_1acb1de7fb9129ee89475091cdf25c74ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::LoopUsageStatus::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <briefdescription>
<para>Signals that a start event has occurred. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/loop_usage_status.h" line="90" column="10" bodyfile="include/ed/loop_usage_status.h" bodystart="90" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1LoopUsageStatus_1a14cab9553715c328d23580eaf0ae7ede" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::LoopUsageStatus::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
<para>Signals that a stop event has occurred. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/loop_usage_status.h" line="99" column="10" bodyfile="include/ed/loop_usage_status.h" bodystart="99" bodyend="103"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A diagnostic task that monitors the frequency of an event. </para>
    </briefdescription>
    <detaileddescription>
<para>This diagnostic task monitors the frequency and usage of a loop and creates corresponding diagnostics. It will report a warning if the frequency is outside acceptable bounds, and report an error if there have been no events in the latest window. Heavily inspired by diagnostic_updater::FrequencyStatus </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>ed::LoopUsageStatus</label>
        <link refid="classed_1_1LoopUsageStatus"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>diagnostic_updater::DiagnosticTask</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>std::vector&lt; long double &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="4">
        <label>tue::LoopTimer</label>
        <link refid="classtue_1_1LoopTimer" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags"/>
        <childnode refid="5" relation="usage">
          <edgelabel>timer_</edgelabel>
          <edgelabel>total_timer_</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>tue::Timer</label>
        <link refid="classtue_1_1Timer" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags"/>
      </node>
      <node id="1">
        <label>ed::LoopUsageStatus</label>
        <link refid="classed_1_1LoopUsageStatus"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>durations_</edgelabel>
          <edgelabel>starts_</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>timer_</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>seq_nums_</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::vector&lt; int &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="2">
        <label>diagnostic_updater::DiagnosticTask</label>
      </node>
    </collaborationgraph>
    <location file="include/ed/loop_usage_status.h" line="28" column="1" bodyfile="include/ed/loop_usage_status.h" bodystart="27" bodyend="168"/>
    <listofallmembers>
      <member refid="classed_1_1LoopUsageStatus_1aa98fd73f50d2d1367407f4627e4de538" prot="public" virt="non-virtual"><scope>ed::LoopUsageStatus</scope><name>clear</name></member>
      <member refid="classed_1_1LoopUsageStatus_1a1c94bd291c1647a5e815649e482bdc2b" prot="private" virt="non-virtual"><scope>ed::LoopUsageStatus</scope><name>duration_</name></member>
      <member refid="classed_1_1LoopUsageStatus_1a597d2bd526226de04279a2509a972a7a" prot="private" virt="non-virtual"><scope>ed::LoopUsageStatus</scope><name>durations_</name></member>
      <member refid="classed_1_1LoopUsageStatus_1adc83336bd4b9eb1c626ececbdfdf43ba" prot="public" virt="non-virtual"><scope>ed::LoopUsageStatus</scope><name>getTimer</name></member>
      <member refid="classed_1_1LoopUsageStatus_1a6c835bdc5d1a3bcddab9f6249778bb1e" prot="private" virt="non-virtual"><scope>ed::LoopUsageStatus</scope><name>hist_indx_</name></member>
      <member refid="classed_1_1LoopUsageStatus_1aaa0b8d4b95a95e0cea5710c65be33942" prot="private" virt="non-virtual"><scope>ed::LoopUsageStatus</scope><name>lock_</name></member>
      <member refid="classed_1_1LoopUsageStatus_1a1a8a2d0a70e28ba30fb7d9b68755d8e1" prot="public" virt="non-virtual"><scope>ed::LoopUsageStatus</scope><name>LoopUsageStatus</name></member>
      <member refid="classed_1_1LoopUsageStatus_1a9df1f1e496d5bdb05ca5b715461db0b9" prot="public" virt="non-virtual"><scope>ed::LoopUsageStatus</scope><name>LoopUsageStatus</name></member>
      <member refid="classed_1_1LoopUsageStatus_1a3238189aea05f434f7fd0a9c016aeebb" prot="private" virt="non-virtual"><scope>ed::LoopUsageStatus</scope><name>params_</name></member>
      <member refid="classed_1_1LoopUsageStatus_1a4f058a40d9e7f8f180d1c138d1c20bda" prot="public" virt="virtual"><scope>ed::LoopUsageStatus</scope><name>run</name></member>
      <member refid="classed_1_1LoopUsageStatus_1a597c1a578184b254dd26aaa3a38ed29c" prot="private" virt="non-virtual"><scope>ed::LoopUsageStatus</scope><name>seq_nums_</name></member>
      <member refid="classed_1_1LoopUsageStatus_1acb1de7fb9129ee89475091cdf25c74ff" prot="public" virt="non-virtual"><scope>ed::LoopUsageStatus</scope><name>start</name></member>
      <member refid="classed_1_1LoopUsageStatus_1ac1fd89efa38a8939c70bb0579f0da32d" prot="private" virt="non-virtual"><scope>ed::LoopUsageStatus</scope><name>start_</name></member>
      <member refid="classed_1_1LoopUsageStatus_1a9023dcdc4bd888e1260a62ee0ef8f535" prot="private" virt="non-virtual"><scope>ed::LoopUsageStatus</scope><name>starts_</name></member>
      <member refid="classed_1_1LoopUsageStatus_1a14cab9553715c328d23580eaf0ae7ede" prot="public" virt="non-virtual"><scope>ed::LoopUsageStatus</scope><name>stop</name></member>
      <member refid="classed_1_1LoopUsageStatus_1a301b876edf53f1056d2fd896c62e0204" prot="private" virt="non-virtual"><scope>ed::LoopUsageStatus</scope><name>timer_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
