<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classed_1_1Entity" kind="class" language="C++" prot="public">
    <compoundname>ed::Entity</compoundname>
    <includes refid="entity_8h" local="no">entity.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classed_1_1Entity_1a1f5ecae2348c66b4c6c9fcd7da160cc6" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceed_1aa3cfa7eac850993cd6f1c808f8ab5165" kindref="member">MeasurementConstPtr</ref></type>
        <definition>MeasurementConstPtr ed::Entity::best_measurement_</definition>
        <argsstring></argsstring>
        <name>best_measurement_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="245" column="25" bodyfile="include/ed/entity.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1Entity_1a5223dcf368086e38bf45650afd6938e9" prot="private" static="no" mutable="no">
        <type><ref refid="namespacegeo_1aa7962fa7450fc503b1c737eae84e10df" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::ShapeConstPtr</ref></type>
        <definition>geo::ShapeConstPtr ed::Entity::collision_</definition>
        <argsstring></argsstring>
        <name>collision_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="249" column="24" bodyfile="include/ed/entity.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1Entity_1abfce9e9f5b2f8c32c363f10c5fb137aa" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long ed::Entity::collision_revision_</definition>
        <argsstring></argsstring>
        <name>collision_revision_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="252" column="19" bodyfile="include/ed/entity.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1Entity_1a15e6ec3b566414c1f9ff46f65075e395" prot="private" static="no" mutable="no">
        <type><ref refid="classtue_1_1config_1_1DataConstPointer" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::DataConstPointer</ref></type>
        <definition>tue::config::DataConstPointer ed::Entity::config_</definition>
        <argsstring></argsstring>
        <name>config_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="263" column="35" bodyfile="include/ed/entity.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1Entity_1a55614c644a0ede93b2233f58590fbfe4" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>, <ref refid="structed_1_1MeasurementConvexHull" kindref="compound">MeasurementConvexHull</ref> &gt;</type>
        <definition>std::map&lt;std::string, MeasurementConvexHull&gt; ed::Entity::convex_hull_map_</definition>
        <argsstring></argsstring>
        <name>convex_hull_map_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="255" column="14" bodyfile="include/ed/entity.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1Entity_1a9557836d22994cf6ebf69b8a3417d062" prot="private" static="no" mutable="no">
        <type><ref refid="structed_1_1ConvexHull" kindref="compound">ConvexHull</ref></type>
        <definition>ConvexHull ed::Entity::convex_hull_new_</definition>
        <argsstring></argsstring>
        <name>convex_hull_new_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="256" column="16" bodyfile="include/ed/entity.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1Entity_1a4bf261d11edbf7e212e2743df19e2841" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double ed::Entity::existence_prob_</definition>
        <argsstring></argsstring>
        <name>existence_prob_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="240" column="12" bodyfile="include/ed/entity.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1Entity_1acf200ce715f14a56aeac3cf9972b54f0" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/set" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::set</ref>&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &gt;</type>
        <definition>std::set&lt;std::string&gt; ed::Entity::flags_</definition>
        <argsstring></argsstring>
        <name>flags_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="275" column="14" bodyfile="include/ed/entity.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1Entity_1a1f8c764394fa7d9215fd78f56d11ebd5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ed::Entity::has_pose_</definition>
        <argsstring></argsstring>
        <name>has_pose_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="258" column="10" bodyfile="include/ed/entity.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1Entity_1a60545fc9559d03d907a27aa341ede6eb" prot="private" static="no" mutable="no">
        <type><ref refid="classed_1_1UUID" kindref="compound">UUID</ref></type>
        <definition>UUID ed::Entity::id_</definition>
        <argsstring></argsstring>
        <name>id_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="232" column="10" bodyfile="include/ed/entity.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1Entity_1a56ce9967273aa82b82e8522f01ec609a" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double ed::Entity::last_update_timestamp_</definition>
        <argsstring></argsstring>
        <name>last_update_timestamp_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="242" column="12" bodyfile="include/ed/entity.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1Entity_1a4338e09848168b121a880ba764e1405e" prot="private" static="no" mutable="no">
        <type>boost::circular_buffer&lt; <ref refid="namespaceed_1aa3cfa7eac850993cd6f1c808f8ab5165" kindref="member">MeasurementConstPtr</ref> &gt;</type>
        <definition>boost::circular_buffer&lt;MeasurementConstPtr&gt; ed::Entity::measurements_</definition>
        <argsstring></argsstring>
        <name>measurements_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="244" column="28" bodyfile="include/ed/entity.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1Entity_1ad35dfe990c8f61621fd2d35694f5792d" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int ed::Entity::measurements_seq_</definition>
        <argsstring></argsstring>
        <name>measurements_seq_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="246" column="18" bodyfile="include/ed/entity.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1Entity_1ab049b5f7c92e3393104df1b3f7803d48" prot="private" static="no" mutable="no">
        <type><ref refid="namespacegeo_1a6c851aec5e98801c86d46d508de5c05d" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D</ref></type>
        <definition>geo::Pose3D ed::Entity::pose_</definition>
        <argsstring></argsstring>
        <name>pose_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="259" column="17" bodyfile="include/ed/entity.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1Entity_1a2ea1def86e9ab23ec8c455af02b33eac" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="namespaceed_1a0c6baa32727c3af9459b72c4e8314103" kindref="member">Idx</ref>, <ref refid="structed_1_1Property" kindref="compound">Property</ref> &gt;</type>
        <definition>std::map&lt;Idx, Property&gt; ed::Entity::properties_</definition>
        <argsstring></argsstring>
        <name>properties_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="269" column="14" bodyfile="include/ed/entity.h" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1Entity_1ad1759a7f575f7079d6bdc72f95a8343f" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="namespaceed_1a0c6baa32727c3af9459b72c4e8314103" kindref="member">Idx</ref>, <ref refid="namespaceed_1a0c6baa32727c3af9459b72c4e8314103" kindref="member">Idx</ref> &gt;</type>
        <definition>std::map&lt;Idx, Idx&gt; ed::Entity::relations_from_</definition>
        <argsstring></argsstring>
        <name>relations_from_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="265" column="14" bodyfile="include/ed/entity.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1Entity_1aeaf209c190b9d9421058520cf93d578d" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="namespaceed_1a0c6baa32727c3af9459b72c4e8314103" kindref="member">Idx</ref>, <ref refid="namespaceed_1a0c6baa32727c3af9459b72c4e8314103" kindref="member">Idx</ref> &gt;</type>
        <definition>std::map&lt;Idx, Idx&gt; ed::Entity::relations_to_</definition>
        <argsstring></argsstring>
        <name>relations_to_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="266" column="14" bodyfile="include/ed/entity.h" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1Entity_1affb47850dd88c4b9da705bdb75406942" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long ed::Entity::revision_</definition>
        <argsstring></argsstring>
        <name>revision_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="234" column="19" bodyfile="include/ed/entity.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1Entity_1a19cc815658ea6850011d582660bdd739" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceed_1a888610d9c38073fed048056503eb4d57" kindref="member">TYPE</ref></type>
        <definition>TYPE ed::Entity::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="236" column="10" bodyfile="include/ed/entity.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1Entity_1a3e882163c3126d5f7b920bbb316d732f" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/set" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::set</ref>&lt; <ref refid="namespaceed_1a888610d9c38073fed048056503eb4d57" kindref="member">TYPE</ref> &gt;</type>
        <definition>std::set&lt;TYPE&gt; ed::Entity::types_</definition>
        <argsstring></argsstring>
        <name>types_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="238" column="14" bodyfile="include/ed/entity.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1Entity_1aa848b1fb8c7df2c787a9bb4276521d9c" prot="private" static="no" mutable="no">
        <type><ref refid="namespacegeo_1aa7962fa7450fc503b1c737eae84e10df" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::ShapeConstPtr</ref></type>
        <definition>geo::ShapeConstPtr ed::Entity::visual_</definition>
        <argsstring></argsstring>
        <name>visual_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="248" column="24" bodyfile="include/ed/entity.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1Entity_1a6df3acfd1efe7d3408ebfb62286d68fd" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long ed::Entity::visual_revision_</definition>
        <argsstring></argsstring>
        <name>visual_revision_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="251" column="19" bodyfile="include/ed/entity.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1Entity_1a04dc3ed0e0ba22f6f32a689881ffd63b" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>, <ref refid="namespacegeo_1aa7962fa7450fc503b1c737eae84e10df" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::ShapeConstPtr</ref> &gt;</type>
        <definition>std::map&lt;std::string, geo::ShapeConstPtr&gt; ed::Entity::volumes_</definition>
        <argsstring></argsstring>
        <name>volumes_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="250" column="14" bodyfile="include/ed/entity.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1Entity_1a65f9a8502bceb6e12b479cd69be55103" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long ed::Entity::volumes_revision_</definition>
        <argsstring></argsstring>
        <name>volumes_revision_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="253" column="19" bodyfile="include/ed/entity.h" bodystart="253" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classed_1_1Entity_1a5d9292305fb3885109e5fd658103fc5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed::Entity::addMeasurement</definition>
        <argsstring>(MeasurementConstPtr measurement)</argsstring>
        <name>addMeasurement</name>
        <param>
          <type><ref refid="namespaceed_1aa3cfa7eac850993cd6f1c808f8ab5165" kindref="member">MeasurementConstPtr</ref></type>
          <declname>measurement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="54" column="10" bodyfile="src/entity.cpp" bodystart="144" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a1a1d7402ea4494f97b811fffdbaf393a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::Entity::addType</definition>
        <argsstring>(const TYPE &amp;type)</argsstring>
        <name>addType</name>
        <param>
          <type>const <ref refid="namespaceed_1a888610d9c38073fed048056503eb4d57" kindref="member">TYPE</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="44" column="17" bodyfile="include/ed/entity.h" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a7d96f10e7c87e2fca274f047e73d294a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::Entity::addVolume</definition>
        <argsstring>(const std::string &amp;volume_name, const geo::ShapeConstPtr &amp;volume_shape)</argsstring>
        <name>addVolume</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>volume_name</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegeo_1aa7962fa7450fc503b1c737eae84e10df" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::ShapeConstPtr</ref> &amp;</type>
          <declname>volume_shape</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="66" column="17" bodyfile="include/ed/entity.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a03b059a31e80c06db15249a0033ee337" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceed_1aa3cfa7eac850993cd6f1c808f8ab5165" kindref="member">MeasurementConstPtr</ref></type>
        <definition>MeasurementConstPtr ed::Entity::bestMeasurement</definition>
        <argsstring>() const</argsstring>
        <name>bestMeasurement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="52" column="32" bodyfile="include/ed/entity.h" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1ae3ea98ff4dedcd997a532f9af605f5ea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegeo_1aa7962fa7450fc503b1c737eae84e10df" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::ShapeConstPtr</ref></type>
        <definition>geo::ShapeConstPtr ed::Entity::collision</definition>
        <argsstring>() const</argsstring>
        <name>collision</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="59" column="31" bodyfile="include/ed/entity.h" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a0bfcc879ce8710962449ca9c91115977" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long ed::Entity::collisionRevision</definition>
        <argsstring>() const</argsstring>
        <name>collisionRevision</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="72" column="26" bodyfile="include/ed/entity.h" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a1d62c897f99e13a898c0d3de0c605c9c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structed_1_1ConvexHull" kindref="compound">ConvexHull</ref> &amp;</type>
        <definition>const ConvexHull&amp; ed::Entity::convexHull</definition>
        <argsstring>() const</argsstring>
        <name>convexHull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="75" column="29" bodyfile="include/ed/entity.h" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a7e457092a652e6f4e4d6e2b4ecea9070" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>, <ref refid="structed_1_1MeasurementConvexHull" kindref="compound">MeasurementConvexHull</ref> &gt; &amp;</type>
        <definition>const std::map&lt;std::string, MeasurementConvexHull&gt;&amp; ed::Entity::convexHullMap</definition>
        <argsstring>() const</argsstring>
        <name>convexHullMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="95" column="27" bodyfile="include/ed/entity.h" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1abe824f970a5ba01884c0e83acd728e2c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtue_1_1config_1_1DataConstPointer" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::DataConstPointer</ref> &amp;</type>
        <definition>const tue::config::DataConstPointer&amp; ed::Entity::data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="117" column="48" bodyfile="include/ed/entity.h" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a97639e82f31b1dfa8042a3111cb0358e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ed::Entity::Entity</definition>
        <argsstring>(const UUID &amp;id=generateID(), const TYPE &amp;type=&quot;&quot;, const unsigned int &amp;measurement_buffer_size=5)</argsstring>
        <name>Entity</name>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>id</declname>
          <defval><ref refid="classed_1_1Entity_1a31f32ec0127db84f8fd3ad9a0064cabb" kindref="member">generateID</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="namespaceed_1a888610d9c38073fed048056503eb4d57" kindref="member">TYPE</ref> &amp;</type>
          <declname>type</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const unsigned int &amp;</type>
          <declname>measurement_buffer_size</declname>
          <defval>5</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="34" column="5" bodyfile="src/entity.cpp" bodystart="17" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a1c968bd1cb231b52f50a349344e5c566" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double ed::Entity::existenceProbability</definition>
        <argsstring>() const</argsstring>
        <name>existenceProbability</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="216" column="19" bodyfile="include/ed/entity.h" bodystart="216" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1afded50179734b8d67a4c99656d92cbfa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="cpp/container/set" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::set</ref>&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &gt; &amp;</type>
        <definition>const std::set&lt;std::string&gt;&amp; ed::Entity::flags</definition>
        <argsstring>() const</argsstring>
        <name>flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="228" column="27" bodyfile="include/ed/entity.h" bodystart="228" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1ac24889ef29643df7034a383a394dd2f9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::Entity::has_pose</definition>
        <argsstring>() const</argsstring>
        <name>has_pose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="115" column="17" bodyfile="include/ed/entity.h" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a44dbfae23477ecffbbf8acd1c3276149" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::Entity::hasFlag</definition>
        <argsstring>(const std::string &amp;flag) const</argsstring>
        <name>hasFlag</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="226" column="17" bodyfile="include/ed/entity.h" bodystart="226" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a0b8311251d0a214b65e58ff0cc235a7e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::Entity::hasType</definition>
        <argsstring>(const TYPE &amp;type) const</argsstring>
        <name>hasType</name>
        <param>
          <type>const <ref refid="namespaceed_1a888610d9c38073fed048056503eb4d57" kindref="member">TYPE</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="46" column="17" bodyfile="include/ed/entity.h" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1ad0c88553a6c89f014b75049109685289" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
        <definition>const UUID&amp; ed::Entity::id</definition>
        <argsstring>() const</argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="38" column="23" bodyfile="include/ed/entity.h" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a8c30f5ff4847b4ac514fe0964e037149" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceed_1aa3cfa7eac850993cd6f1c808f8ab5165" kindref="member">MeasurementConstPtr</ref></type>
        <definition>MeasurementConstPtr ed::Entity::lastMeasurement</definition>
        <argsstring>() const</argsstring>
        <name>lastMeasurement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="50" column="25" bodyfile="src/entity.cpp" bodystart="188" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a9636cdfe53e5e80e00bd696fbbe09a05" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double ed::Entity::lastUpdateTimestamp</definition>
        <argsstring>() const</argsstring>
        <name>lastUpdateTimestamp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="220" column="19" bodyfile="include/ed/entity.h" bodystart="220" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a226a721fe9f946468ba05cfe6b9a00c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed::Entity::measurements</definition>
        <argsstring>(std::vector&lt; MeasurementConstPtr &gt; &amp;measurements, double min_timestamp=0) const</argsstring>
        <name>measurements</name>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="namespaceed_1aa3cfa7eac850993cd6f1c808f8ab5165" kindref="member">MeasurementConstPtr</ref> &gt; &amp;</type>
          <declname>measurements</declname>
        </param>
        <param>
          <type>double</type>
          <declname>min_timestamp</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="48" column="10" bodyfile="src/entity.cpp" bodystart="165" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a8977d0a28ecba8eba634c711d4487a9c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed::Entity::measurements</definition>
        <argsstring>(std::vector&lt; MeasurementConstPtr &gt; &amp;measurements, unsigned int num) const</argsstring>
        <name>measurements</name>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="namespaceed_1aa3cfa7eac850993cd6f1c808f8ab5165" kindref="member">MeasurementConstPtr</ref> &gt; &amp;</type>
          <declname>measurements</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="49" column="10" bodyfile="src/entity.cpp" bodystart="178" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1ae11fbac537f452df425eabf1ea3cd263" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int ed::Entity::measurementSeq</definition>
        <argsstring>() const</argsstring>
        <name>measurementSeq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="51" column="25" bodyfile="include/ed/entity.h" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a8629d1a37cfa1987d4b4559c2e382ea0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespacegeo_1a6c851aec5e98801c86d46d508de5c05d" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D</ref> &amp;</type>
        <definition>const geo::Pose3D&amp; ed::Entity::pose</definition>
        <argsstring>() const</argsstring>
        <name>pose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="97" column="30" bodyfile="include/ed/entity.h" bodystart="97" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1abedb303eab7704db5bac0ea339512567" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="namespaceed_1a0c6baa32727c3af9459b72c4e8314103" kindref="member">Idx</ref>, <ref refid="structed_1_1Property" kindref="compound">Property</ref> &gt; &amp;</type>
        <definition>const std::map&lt;Idx, Property&gt;&amp; ed::Entity::properties</definition>
        <argsstring>() const</argsstring>
        <name>properties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="208" column="20" bodyfile="include/ed/entity.h" bodystart="208" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1abd0b8b9c994df72bf5beffef633f2009" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>const T *</type>
        <definition>const T* ed::Entity::property</definition>
        <argsstring>(const PropertyKey&lt; T &gt; &amp;key) const</argsstring>
        <name>property</name>
        <param>
          <type>const <ref refid="structed_1_1PropertyKey" kindref="compound">PropertyKey</ref>&lt; T &gt; &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="147" column="13" bodyfile="include/ed/entity.h" bodystart="147" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1ad95cb2af266b4494006a93b8bc881ec1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceed_1a0c6baa32727c3af9459b72c4e8314103" kindref="member">Idx</ref></type>
        <definition>Idx ed::Entity::relationFrom</definition>
        <argsstring>(Idx parent_idx) const</argsstring>
        <name>relationFrom</name>
        <param>
          <type><ref refid="namespaceed_1a0c6baa32727c3af9459b72c4e8314103" kindref="member">Idx</ref></type>
          <declname>parent_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="134" column="16" bodyfile="include/ed/entity.h" bodystart="134" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a471e53e5b90060fbaa29981bd89c3b40" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="namespaceed_1a0c6baa32727c3af9459b72c4e8314103" kindref="member">Idx</ref>, <ref refid="namespaceed_1a0c6baa32727c3af9459b72c4e8314103" kindref="member">Idx</ref> &gt; &amp;</type>
        <definition>const std::map&lt;Idx, Idx&gt;&amp; ed::Entity::relationsFrom</definition>
        <argsstring>() const</argsstring>
        <name>relationsFrom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="142" column="27" bodyfile="include/ed/entity.h" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a02d781df482d455cb0b1ef6dcd79818d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="namespaceed_1a0c6baa32727c3af9459b72c4e8314103" kindref="member">Idx</ref>, <ref refid="namespaceed_1a0c6baa32727c3af9459b72c4e8314103" kindref="member">Idx</ref> &gt; &amp;</type>
        <definition>const std::map&lt;Idx, Idx&gt;&amp; ed::Entity::relationsTo</definition>
        <argsstring>() const</argsstring>
        <name>relationsTo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="144" column="27" bodyfile="include/ed/entity.h" bodystart="144" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1ad4f557a89558064a48e5cd05b772bcb7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceed_1a0c6baa32727c3af9459b72c4e8314103" kindref="member">Idx</ref></type>
        <definition>Idx ed::Entity::relationTo</definition>
        <argsstring>(Idx child_idx) const</argsstring>
        <name>relationTo</name>
        <param>
          <type><ref refid="namespaceed_1a0c6baa32727c3af9459b72c4e8314103" kindref="member">Idx</ref></type>
          <declname>child_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="126" column="16" bodyfile="include/ed/entity.h" bodystart="126" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a9e68868026ba1e0f5da050f457102c62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::Entity::removeFlag</definition>
        <argsstring>(const std::string &amp;flag)</argsstring>
        <name>removeFlag</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="224" column="17" bodyfile="include/ed/entity.h" bodystart="224" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1adc1f0826da0fcec2b69bf32baf82aaba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::Entity::removePose</definition>
        <argsstring>()</argsstring>
        <name>removePose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="113" column="17" bodyfile="include/ed/entity.h" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1adc107ce09f36c8bd06be811c95376726" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::Entity::removeType</definition>
        <argsstring>(const TYPE &amp;type)</argsstring>
        <name>removeType</name>
        <param>
          <type>const <ref refid="namespaceed_1a888610d9c38073fed048056503eb4d57" kindref="member">TYPE</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="45" column="17" bodyfile="include/ed/entity.h" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1ac9e5f7a76e427d04f73083191bede488" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::Entity::removeVolume</definition>
        <argsstring>(const std::string &amp;volume_name)</argsstring>
        <name>removeVolume</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>volume_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="67" column="17" bodyfile="include/ed/entity.h" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1ac773304534d5a212fa73f4f087ace4a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long ed::Entity::revision</definition>
        <argsstring>() const</argsstring>
        <name>revision</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="210" column="26" bodyfile="include/ed/entity.h" bodystart="210" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1aea724d774bb8572054a850405a4d04b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed::Entity::setCollision</definition>
        <argsstring>(const geo::ShapeConstPtr &amp;collision)</argsstring>
        <name>setCollision</name>
        <param>
          <type>const <ref refid="namespacegeo_1aa7962fa7450fc503b1c737eae84e10df" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::ShapeConstPtr</ref> &amp;</type>
          <declname>collision</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="63" column="10" bodyfile="src/entity.cpp" bodystart="132" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a43b2133ae954cf0b31c72d3b1f448918" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::Entity::setConvexHull</definition>
        <argsstring>(const ConvexHull &amp;convex_hull, const geo::Pose3D &amp;pose, double time, const std::string &amp;source=&quot;&quot;)</argsstring>
        <name>setConvexHull</name>
        <param>
          <type>const <ref refid="structed_1_1ConvexHull" kindref="compound">ConvexHull</ref> &amp;</type>
          <declname>convex_hull</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegeo_1a6c851aec5e98801c86d46d508de5c05d" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D</ref> &amp;</type>
          <declname>pose</declname>
        </param>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>source</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="77" column="10" bodyfile="include/ed/entity.h" bodystart="77" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a3eec02fb07c9e7ce8d9c7c2da1024682" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::Entity::setData</definition>
        <argsstring>(const tue::config::DataConstPointer &amp;data)</argsstring>
        <name>setData</name>
        <param>
          <type>const <ref refid="classtue_1_1config_1_1DataConstPointer" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::DataConstPointer</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="118" column="17" bodyfile="include/ed/entity.h" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a9db4911ff203191380dfc1b8db75a6a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::Entity::setExistenceProbability</definition>
        <argsstring>(double prob)</argsstring>
        <name>setExistenceProbability</name>
        <param>
          <type>double</type>
          <declname>prob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="214" column="17" bodyfile="include/ed/entity.h" bodystart="214" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a46af5efd10644284d6f155b7356abb8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::Entity::setFlag</definition>
        <argsstring>(const std::string &amp;flag)</argsstring>
        <name>setFlag</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="222" column="17" bodyfile="include/ed/entity.h" bodystart="222" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a4186ba217c550430bc8ddfd555ed7232" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::Entity::setLastUpdateTimestamp</definition>
        <argsstring>(double t)</argsstring>
        <name>setLastUpdateTimestamp</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="218" column="17" bodyfile="include/ed/entity.h" bodystart="218" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a44a589c4658f7d12742cefead2e41d66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::Entity::setPose</definition>
        <argsstring>(const geo::Pose3D &amp;pose)</argsstring>
        <name>setPose</name>
        <param>
          <type>const <ref refid="namespacegeo_1a6c851aec5e98801c86d46d508de5c05d" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D</ref> &amp;</type>
          <declname>pose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="104" column="17" bodyfile="include/ed/entity.h" bodystart="104" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a70b59e72e8fcdead851a71d86e2ae646" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::Entity::setProperty</definition>
        <argsstring>(Idx idx, const Property &amp;p)</argsstring>
        <name>setProperty</name>
        <param>
          <type><ref refid="namespaceed_1a0c6baa32727c3af9459b72c4e8314103" kindref="member">Idx</ref></type>
          <declname>idx</declname>
        </param>
        <param>
          <type>const <ref refid="structed_1_1Property" kindref="compound">Property</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="187" column="10" bodyfile="include/ed/entity.h" bodystart="187" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a9f13baa549118750e29ea8e3810d909a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::Entity::setRelationFrom</definition>
        <argsstring>(Idx parent_idx, Idx r_idx)</argsstring>
        <name>setRelationFrom</name>
        <param>
          <type><ref refid="namespaceed_1a0c6baa32727c3af9459b72c4e8314103" kindref="member">Idx</ref></type>
          <declname>parent_idx</declname>
        </param>
        <param>
          <type><ref refid="namespaceed_1a0c6baa32727c3af9459b72c4e8314103" kindref="member">Idx</ref></type>
          <declname>r_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="124" column="17" bodyfile="include/ed/entity.h" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a265a9c2e5ee2ba943567eab070489e81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::Entity::setRelationTo</definition>
        <argsstring>(Idx child_idx, Idx r_idx)</argsstring>
        <name>setRelationTo</name>
        <param>
          <type><ref refid="namespaceed_1a0c6baa32727c3af9459b72c4e8314103" kindref="member">Idx</ref></type>
          <declname>child_idx</declname>
        </param>
        <param>
          <type><ref refid="namespaceed_1a0c6baa32727c3af9459b72c4e8314103" kindref="member">Idx</ref></type>
          <declname>r_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="122" column="17" bodyfile="include/ed/entity.h" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1ab3d3d19912496b546f99ca03647a2755" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::Entity::setRevision</definition>
        <argsstring>(unsigned long revision)</argsstring>
        <name>setRevision</name>
        <param>
          <type>unsigned long</type>
          <declname>revision</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="212" column="17" bodyfile="include/ed/entity.h" bodystart="212" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a5f7763b5f102e9bd3f04eac95e9c7c04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::Entity::setShape</definition>
        <argsstring>(const geo::ShapeConstPtr &amp;shape)</argsstring>
        <name>setShape</name>
        <param>
          <type>const <ref refid="namespacegeo_1aa7962fa7450fc503b1c737eae84e10df" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::ShapeConstPtr</ref> &amp;</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="61" column="17" bodyfile="include/ed/entity.h" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1ad6cdcab7674d32a6957f4f0712032ee1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::Entity::setType</definition>
        <argsstring>(const TYPE &amp;type)</argsstring>
        <name>setType</name>
        <param>
          <type>const <ref refid="namespaceed_1a888610d9c38073fed048056503eb4d57" kindref="member">TYPE</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="41" column="17" bodyfile="include/ed/entity.h" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a9fd32948fdb6c65fa267ab2f03c2badd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed::Entity::setVisual</definition>
        <argsstring>(const geo::ShapeConstPtr &amp;visual)</argsstring>
        <name>setVisual</name>
        <param>
          <type>const <ref refid="namespacegeo_1aa7962fa7450fc503b1c737eae84e10df" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::ShapeConstPtr</ref> &amp;</type>
          <declname>visual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="62" column="10" bodyfile="src/entity.cpp" bodystart="119" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a0a8c322eb22795479d65ab5fa6a042a5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegeo_1aa7962fa7450fc503b1c737eae84e10df" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::ShapeConstPtr</ref></type>
        <definition>geo::ShapeConstPtr ed::Entity::shape</definition>
        <argsstring>() const</argsstring>
        <name>shape</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="57" column="31" bodyfile="include/ed/entity.h" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a276216c09e7c86a44ce6c23bf5b76d1c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long ed::Entity::shapeRevision</definition>
        <argsstring>() const</argsstring>
        <name>shapeRevision</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="70" column="26" bodyfile="include/ed/entity.h" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a1ccd8d66274d17272b56475a3b920bc1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespaceed_1a888610d9c38073fed048056503eb4d57" kindref="member">TYPE</ref> &amp;</type>
        <definition>const TYPE&amp; ed::Entity::type</definition>
        <argsstring>() const</argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="40" column="23" bodyfile="include/ed/entity.h" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a66441b53c91a67b2bdf75118ca70741b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="cpp/container/set" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::set</ref>&lt; <ref refid="namespaceed_1a888610d9c38073fed048056503eb4d57" kindref="member">TYPE</ref> &gt; &amp;</type>
        <definition>const std::set&lt;TYPE&gt;&amp; ed::Entity::types</definition>
        <argsstring>() const</argsstring>
        <name>types</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="43" column="27" bodyfile="include/ed/entity.h" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a68c653e58a569efcfdebdff5a4aab5d3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegeo_1aa7962fa7450fc503b1c737eae84e10df" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::ShapeConstPtr</ref></type>
        <definition>geo::ShapeConstPtr ed::Entity::visual</definition>
        <argsstring>() const</argsstring>
        <name>visual</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="58" column="31" bodyfile="include/ed/entity.h" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a7f2bae27342f3aed8e5fb42a5a2040d6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long ed::Entity::visualRevision</definition>
        <argsstring>() const</argsstring>
        <name>visualRevision</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="71" column="26" bodyfile="include/ed/entity.h" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1ab21dfc659fd0465533034e693caccaca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>, <ref refid="namespacegeo_1aa7962fa7450fc503b1c737eae84e10df" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::ShapeConstPtr</ref> &gt; &amp;</type>
        <definition>const std::map&lt;std::string, geo::ShapeConstPtr&gt;&amp; ed::Entity::volumes</definition>
        <argsstring>() const</argsstring>
        <name>volumes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="65" column="27" bodyfile="include/ed/entity.h" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1ab2f669fe4f15314123d2c4a67ca875f0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long ed::Entity::volumesRevision</definition>
        <argsstring>() const</argsstring>
        <name>volumesRevision</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="73" column="26" bodyfile="include/ed/entity.h" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a40731c49b7c218d526e0005c7440ba7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ed::Entity::~Entity</definition>
        <argsstring>()</argsstring>
        <name>~Entity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="35" column="5" bodyfile="src/entity.cpp" bodystart="36" bodyend="39"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classed_1_1Entity_1a31f32ec0127db84f8fd3ad9a0064cabb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classed_1_1UUID" kindref="compound">UUID</ref></type>
        <definition>UUID ed::Entity::generateID</definition>
        <argsstring>()</argsstring>
        <name>generateID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="37" column="17" bodyfile="src/entity.cpp" bodystart="198" bodyend="210"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classed_1_1Entity_1a3fe7cc62267bf5c990ce6b8789b98192" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed::Entity::updateConvexHull</definition>
        <argsstring>()</argsstring>
        <name>updateConvexHull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="271" column="10" bodyfile="src/entity.cpp" bodystart="43" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1Entity_1a894717b54aabe16c48040dd9c6b74825" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed::Entity::updateConvexHullFromVisual</definition>
        <argsstring>()</argsstring>
        <name>updateConvexHullFromVisual</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/entity.h" line="273" column="10" bodyfile="src/entity.cpp" bodystart="88" bodyend="115"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="9">
        <label>std::shared_ptr&lt; const Shape &gt;</label>
        <link refid="cpp/memory/shared_ptr" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="5">
        <label>std::vector&lt; geo::Vec2T &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="8">
        <label>std::map&lt; Idx, Idx &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="2">
        <label>std::map&lt; Idx, ed::Property &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="1">
        <label>ed::Entity</label>
        <link refid="classed_1_1Entity"/>
        <childnode refid="2" relation="usage">
          <edgelabel>properties_</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>volumes_</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>convex_hull_new_</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>config_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>types_</edgelabel>
          <edgelabel>flags_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>relations_from_</edgelabel>
          <edgelabel>relations_to_</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>visual_</edgelabel>
          <edgelabel>collision_</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>type_</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>convex_hull_map_</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>best_measurement_</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>id_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>std::set&lt; std::string &gt;</label>
        <link refid="cpp/container/set" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="13">
        <label>ed::UUID</label>
        <link refid="classed_1_1UUID"/>
        <childnode refid="10" relation="usage">
          <edgelabel>id_</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>shared_ptr&lt; const Measurement &gt;</label>
      </node>
      <node id="3">
        <label>std::map&lt; std::string, std::shared_ptr &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="6">
        <label>tue::config::DataConstPointer</label>
        <link refid="classtue_1_1config_1_1DataConstPointer" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags"/>
      </node>
      <node id="4">
        <label>ed::ConvexHull</label>
        <link refid="structed_1_1ConvexHull"/>
        <childnode refid="5" relation="usage">
          <edgelabel>points</edgelabel>
          <edgelabel>normals</edgelabel>
          <edgelabel>edges</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>std::string</label>
        <link refid="cpp/string/basic_string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="11">
        <label>std::map&lt; std::string, ed::MeasurementConvexHull &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="include/ed/entity.h" line="31" column="1" bodyfile="include/ed/entity.h" bodystart="30" bodyend="277"/>
    <listofallmembers>
      <member refid="classed_1_1Entity_1a5d9292305fb3885109e5fd658103fc5c" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>addMeasurement</name></member>
      <member refid="classed_1_1Entity_1a1a1d7402ea4494f97b811fffdbaf393a" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>addType</name></member>
      <member refid="classed_1_1Entity_1a7d96f10e7c87e2fca274f047e73d294a" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>addVolume</name></member>
      <member refid="classed_1_1Entity_1a1f5ecae2348c66b4c6c9fcd7da160cc6" prot="private" virt="non-virtual"><scope>ed::Entity</scope><name>best_measurement_</name></member>
      <member refid="classed_1_1Entity_1a03b059a31e80c06db15249a0033ee337" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>bestMeasurement</name></member>
      <member refid="classed_1_1Entity_1ae3ea98ff4dedcd997a532f9af605f5ea" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>collision</name></member>
      <member refid="classed_1_1Entity_1a5223dcf368086e38bf45650afd6938e9" prot="private" virt="non-virtual"><scope>ed::Entity</scope><name>collision_</name></member>
      <member refid="classed_1_1Entity_1abfce9e9f5b2f8c32c363f10c5fb137aa" prot="private" virt="non-virtual"><scope>ed::Entity</scope><name>collision_revision_</name></member>
      <member refid="classed_1_1Entity_1a0bfcc879ce8710962449ca9c91115977" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>collisionRevision</name></member>
      <member refid="classed_1_1Entity_1a15e6ec3b566414c1f9ff46f65075e395" prot="private" virt="non-virtual"><scope>ed::Entity</scope><name>config_</name></member>
      <member refid="classed_1_1Entity_1a55614c644a0ede93b2233f58590fbfe4" prot="private" virt="non-virtual"><scope>ed::Entity</scope><name>convex_hull_map_</name></member>
      <member refid="classed_1_1Entity_1a9557836d22994cf6ebf69b8a3417d062" prot="private" virt="non-virtual"><scope>ed::Entity</scope><name>convex_hull_new_</name></member>
      <member refid="classed_1_1Entity_1a1d62c897f99e13a898c0d3de0c605c9c" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>convexHull</name></member>
      <member refid="classed_1_1Entity_1a7e457092a652e6f4e4d6e2b4ecea9070" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>convexHullMap</name></member>
      <member refid="classed_1_1Entity_1abe824f970a5ba01884c0e83acd728e2c" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>data</name></member>
      <member refid="classed_1_1Entity_1a97639e82f31b1dfa8042a3111cb0358e" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>Entity</name></member>
      <member refid="classed_1_1Entity_1a4bf261d11edbf7e212e2743df19e2841" prot="private" virt="non-virtual"><scope>ed::Entity</scope><name>existence_prob_</name></member>
      <member refid="classed_1_1Entity_1a1c968bd1cb231b52f50a349344e5c566" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>existenceProbability</name></member>
      <member refid="classed_1_1Entity_1afded50179734b8d67a4c99656d92cbfa" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>flags</name></member>
      <member refid="classed_1_1Entity_1acf200ce715f14a56aeac3cf9972b54f0" prot="private" virt="non-virtual"><scope>ed::Entity</scope><name>flags_</name></member>
      <member refid="classed_1_1Entity_1a31f32ec0127db84f8fd3ad9a0064cabb" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>generateID</name></member>
      <member refid="classed_1_1Entity_1ac24889ef29643df7034a383a394dd2f9" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>has_pose</name></member>
      <member refid="classed_1_1Entity_1a1f8c764394fa7d9215fd78f56d11ebd5" prot="private" virt="non-virtual"><scope>ed::Entity</scope><name>has_pose_</name></member>
      <member refid="classed_1_1Entity_1a44dbfae23477ecffbbf8acd1c3276149" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>hasFlag</name></member>
      <member refid="classed_1_1Entity_1a0b8311251d0a214b65e58ff0cc235a7e" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>hasType</name></member>
      <member refid="classed_1_1Entity_1ad0c88553a6c89f014b75049109685289" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>id</name></member>
      <member refid="classed_1_1Entity_1a60545fc9559d03d907a27aa341ede6eb" prot="private" virt="non-virtual"><scope>ed::Entity</scope><name>id_</name></member>
      <member refid="classed_1_1Entity_1a56ce9967273aa82b82e8522f01ec609a" prot="private" virt="non-virtual"><scope>ed::Entity</scope><name>last_update_timestamp_</name></member>
      <member refid="classed_1_1Entity_1a8c30f5ff4847b4ac514fe0964e037149" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>lastMeasurement</name></member>
      <member refid="classed_1_1Entity_1a9636cdfe53e5e80e00bd696fbbe09a05" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>lastUpdateTimestamp</name></member>
      <member refid="classed_1_1Entity_1a226a721fe9f946468ba05cfe6b9a00c6" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>measurements</name></member>
      <member refid="classed_1_1Entity_1a8977d0a28ecba8eba634c711d4487a9c" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>measurements</name></member>
      <member refid="classed_1_1Entity_1a4338e09848168b121a880ba764e1405e" prot="private" virt="non-virtual"><scope>ed::Entity</scope><name>measurements_</name></member>
      <member refid="classed_1_1Entity_1ad35dfe990c8f61621fd2d35694f5792d" prot="private" virt="non-virtual"><scope>ed::Entity</scope><name>measurements_seq_</name></member>
      <member refid="classed_1_1Entity_1ae11fbac537f452df425eabf1ea3cd263" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>measurementSeq</name></member>
      <member refid="classed_1_1Entity_1a8629d1a37cfa1987d4b4559c2e382ea0" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>pose</name></member>
      <member refid="classed_1_1Entity_1ab049b5f7c92e3393104df1b3f7803d48" prot="private" virt="non-virtual"><scope>ed::Entity</scope><name>pose_</name></member>
      <member refid="classed_1_1Entity_1abedb303eab7704db5bac0ea339512567" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>properties</name></member>
      <member refid="classed_1_1Entity_1a2ea1def86e9ab23ec8c455af02b33eac" prot="private" virt="non-virtual"><scope>ed::Entity</scope><name>properties_</name></member>
      <member refid="classed_1_1Entity_1abd0b8b9c994df72bf5beffef633f2009" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>property</name></member>
      <member refid="classed_1_1Entity_1ad95cb2af266b4494006a93b8bc881ec1" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>relationFrom</name></member>
      <member refid="classed_1_1Entity_1ad1759a7f575f7079d6bdc72f95a8343f" prot="private" virt="non-virtual"><scope>ed::Entity</scope><name>relations_from_</name></member>
      <member refid="classed_1_1Entity_1aeaf209c190b9d9421058520cf93d578d" prot="private" virt="non-virtual"><scope>ed::Entity</scope><name>relations_to_</name></member>
      <member refid="classed_1_1Entity_1a471e53e5b90060fbaa29981bd89c3b40" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>relationsFrom</name></member>
      <member refid="classed_1_1Entity_1a02d781df482d455cb0b1ef6dcd79818d" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>relationsTo</name></member>
      <member refid="classed_1_1Entity_1ad4f557a89558064a48e5cd05b772bcb7" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>relationTo</name></member>
      <member refid="classed_1_1Entity_1a9e68868026ba1e0f5da050f457102c62" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>removeFlag</name></member>
      <member refid="classed_1_1Entity_1adc1f0826da0fcec2b69bf32baf82aaba" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>removePose</name></member>
      <member refid="classed_1_1Entity_1adc107ce09f36c8bd06be811c95376726" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>removeType</name></member>
      <member refid="classed_1_1Entity_1ac9e5f7a76e427d04f73083191bede488" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>removeVolume</name></member>
      <member refid="classed_1_1Entity_1ac773304534d5a212fa73f4f087ace4a9" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>revision</name></member>
      <member refid="classed_1_1Entity_1affb47850dd88c4b9da705bdb75406942" prot="private" virt="non-virtual"><scope>ed::Entity</scope><name>revision_</name></member>
      <member refid="classed_1_1Entity_1aea724d774bb8572054a850405a4d04b9" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>setCollision</name></member>
      <member refid="classed_1_1Entity_1a43b2133ae954cf0b31c72d3b1f448918" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>setConvexHull</name></member>
      <member refid="classed_1_1Entity_1a3eec02fb07c9e7ce8d9c7c2da1024682" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>setData</name></member>
      <member refid="classed_1_1Entity_1a9db4911ff203191380dfc1b8db75a6a3" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>setExistenceProbability</name></member>
      <member refid="classed_1_1Entity_1a46af5efd10644284d6f155b7356abb8e" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>setFlag</name></member>
      <member refid="classed_1_1Entity_1a4186ba217c550430bc8ddfd555ed7232" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>setLastUpdateTimestamp</name></member>
      <member refid="classed_1_1Entity_1a44a589c4658f7d12742cefead2e41d66" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>setPose</name></member>
      <member refid="classed_1_1Entity_1a70b59e72e8fcdead851a71d86e2ae646" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>setProperty</name></member>
      <member refid="classed_1_1Entity_1a9f13baa549118750e29ea8e3810d909a" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>setRelationFrom</name></member>
      <member refid="classed_1_1Entity_1a265a9c2e5ee2ba943567eab070489e81" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>setRelationTo</name></member>
      <member refid="classed_1_1Entity_1ab3d3d19912496b546f99ca03647a2755" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>setRevision</name></member>
      <member refid="classed_1_1Entity_1a5f7763b5f102e9bd3f04eac95e9c7c04" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>setShape</name></member>
      <member refid="classed_1_1Entity_1ad6cdcab7674d32a6957f4f0712032ee1" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>setType</name></member>
      <member refid="classed_1_1Entity_1a9fd32948fdb6c65fa267ab2f03c2badd" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>setVisual</name></member>
      <member refid="classed_1_1Entity_1a0a8c322eb22795479d65ab5fa6a042a5" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>shape</name></member>
      <member refid="classed_1_1Entity_1a276216c09e7c86a44ce6c23bf5b76d1c" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>shapeRevision</name></member>
      <member refid="classed_1_1Entity_1a1ccd8d66274d17272b56475a3b920bc1" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>type</name></member>
      <member refid="classed_1_1Entity_1a19cc815658ea6850011d582660bdd739" prot="private" virt="non-virtual"><scope>ed::Entity</scope><name>type_</name></member>
      <member refid="classed_1_1Entity_1a66441b53c91a67b2bdf75118ca70741b" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>types</name></member>
      <member refid="classed_1_1Entity_1a3e882163c3126d5f7b920bbb316d732f" prot="private" virt="non-virtual"><scope>ed::Entity</scope><name>types_</name></member>
      <member refid="classed_1_1Entity_1a3fe7cc62267bf5c990ce6b8789b98192" prot="private" virt="non-virtual"><scope>ed::Entity</scope><name>updateConvexHull</name></member>
      <member refid="classed_1_1Entity_1a894717b54aabe16c48040dd9c6b74825" prot="private" virt="non-virtual"><scope>ed::Entity</scope><name>updateConvexHullFromVisual</name></member>
      <member refid="classed_1_1Entity_1a68c653e58a569efcfdebdff5a4aab5d3" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>visual</name></member>
      <member refid="classed_1_1Entity_1aa848b1fb8c7df2c787a9bb4276521d9c" prot="private" virt="non-virtual"><scope>ed::Entity</scope><name>visual_</name></member>
      <member refid="classed_1_1Entity_1a6df3acfd1efe7d3408ebfb62286d68fd" prot="private" virt="non-virtual"><scope>ed::Entity</scope><name>visual_revision_</name></member>
      <member refid="classed_1_1Entity_1a7f2bae27342f3aed8e5fb42a5a2040d6" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>visualRevision</name></member>
      <member refid="classed_1_1Entity_1ab21dfc659fd0465533034e693caccaca" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>volumes</name></member>
      <member refid="classed_1_1Entity_1a04dc3ed0e0ba22f6f32a689881ffd63b" prot="private" virt="non-virtual"><scope>ed::Entity</scope><name>volumes_</name></member>
      <member refid="classed_1_1Entity_1a65f9a8502bceb6e12b479cd69be55103" prot="private" virt="non-virtual"><scope>ed::Entity</scope><name>volumes_revision_</name></member>
      <member refid="classed_1_1Entity_1ab2f669fe4f15314123d2c4a67ca875f0" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>volumesRevision</name></member>
      <member refid="classed_1_1Entity_1a40731c49b7c218d526e0005c7440ba7f" prot="public" virt="non-virtual"><scope>ed::Entity</scope><name>~Entity</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
