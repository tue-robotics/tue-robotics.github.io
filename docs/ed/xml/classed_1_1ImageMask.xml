<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classed_1_1ImageMask" kind="class" language="C++" prot="public">
    <compoundname>ed::ImageMask</compoundname>
    <includes refid="mask_8h" local="no">mask.h</includes>
    <innerclass refid="classed_1_1ImageMask_1_1const__iterator" prot="public">ed::ImageMask::const_iterator</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classed_1_1ImageMask_1a48bd280c4d7c288b40bad25a3bb056bb" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int ed::ImageMask::height_</definition>
        <argsstring></argsstring>
        <name>height_</name>
        <briefdescription>
<para>Height of the mask. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/mask.h" line="195" column="9" bodyfile="include/ed/mask.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1ImageMask_1a7c11cffdab1b879db8401f85c73dcc77" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; cv::Point2i &gt;</type>
        <definition>std::vector&lt;cv::Point2i&gt; ed::ImageMask::points_</definition>
        <argsstring></argsstring>
        <name>points_</name>
        <briefdescription>
<para>Base points of the sub-images. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/mask.h" line="196" column="17" bodyfile="include/ed/mask.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1ImageMask_1a7603ab9887a901035f6c8fcd337d470d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int ed::ImageMask::width_</definition>
        <argsstring></argsstring>
        <name>width_</name>
        <briefdescription>
<para>Width of the mask. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/mask.h" line="194" column="9" bodyfile="include/ed/mask.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classed_1_1ImageMask_1a14351cf6f3f32d02258c5fa43f5c7d83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::ImageMask::addPoint</definition>
        <argsstring>(const cv::Point2i &amp;p)</argsstring>
        <name>addPoint</name>
        <param>
          <type>const cv::Point2i &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a sub-image. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Base-point of the new sub-image. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/mask.h" line="71" column="17" bodyfile="include/ed/mask.h" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1ImageMask_1a9027b1cfdac51d535b1122133a6d9e27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::ImageMask::addPoint</definition>
        <argsstring>(int idx)</argsstring>
        <name>addPoint</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a one-pixel sub-image. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index number of the pixel (scanning horizontally, from top to bottom). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/mask.h" line="90" column="17" bodyfile="include/ed/mask.h" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1ImageMask_1ac393f9b80ac6629be822c95e7129baaa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::ImageMask::addPoint</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>addPoint</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a sub-image. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>X coordinate of the new sub-image. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Y coordinate of the new sub-image. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/mask.h" line="81" column="17" bodyfile="include/ed/mask.h" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1ImageMask_1ac7bd33b5af201674f62855e03a588d05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::ImageMask::addPoints</definition>
        <argsstring>(const std::vector&lt; cv::Point2i &gt; &amp;ps)</argsstring>
        <name>addPoints</name>
        <param>
          <type>const <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; cv::Point2i &gt; &amp;</type>
          <declname>ps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a number of sub-images. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ps</parametername>
</parameternamelist>
<parameterdescription>
<para>Base points of the new sub-images. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/mask.h" line="99" column="17" bodyfile="include/ed/mask.h" bodystart="99" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1ImageMask_1a4db1f6c08c7ae94c25d7edc19187ba27" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classed_1_1ImageMask_1_1const__iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator ed::ImageMask::begin</definition>
        <argsstring>(int width=0) const</argsstring>
        <name>begin</name>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/mask.h" line="180" column="20" bodyfile="include/ed/mask.h" bodystart="180" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1ImageMask_1a1df0c51de536994ac8f5b189770f60b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::ImageMask::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove all sub-images. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/mask.h" line="44" column="17" bodyfile="include/ed/mask.h" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1ImageMask_1a874a34813d6cd7bf230ab4284799aae1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classed_1_1ImageMask_1_1const__iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator ed::ImageMask::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/mask.h" line="188" column="20" bodyfile="include/ed/mask.h" bodystart="188" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1ImageMask_1a0fe144777d8df1f571ca769c7727fb12" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ed::ImageMask::getSize</definition>
        <argsstring>() const</argsstring>
        <name>getSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of sub-images. <simplesect kind="return"><para>The number of sub-images in the mask. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/mask.h" line="53" column="16" bodyfile="include/ed/mask.h" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1ImageMask_1a20454379060eec0fa7ec20969dc7aa38" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ed::ImageMask::height</definition>
        <argsstring>() const</argsstring>
        <name>height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the height of the mask. <simplesect kind="return"><para>The height of the mask. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/mask.h" line="65" column="16" bodyfile="include/ed/mask.h" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1ImageMask_1a6abc087be6c283f2a6739e2d8f82685d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ed::ImageMask::ImageMask</definition>
        <argsstring>()</argsstring>
        <name>ImageMask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/mask.h" line="21" column="5" bodyfile="include/ed/mask.h" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1ImageMask_1a64de87c59c7c8fa1ec41775a0ff7c8ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ed::ImageMask::ImageMask</definition>
        <argsstring>(int width, int height)</argsstring>
        <name>ImageMask</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct the mask, while setting the mask size. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the mask. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the mask. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/mask.h" line="28" column="5" bodyfile="include/ed/mask.h" bodystart="28" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1ImageMask_1a4f6a03ea85a4d65ad5c487dc94327b6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::ImageMask::setSize</definition>
        <argsstring>(int width, int height)</argsstring>
        <name>setSize</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the size of the image. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the mask. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the mask. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/mask.h" line="37" column="17" bodyfile="include/ed/mask.h" bodystart="37" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1ImageMask_1ab82e87fdf3d58168a3b1cfe501242fb2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ed::ImageMask::width</definition>
        <argsstring>() const</argsstring>
        <name>width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the width of the mask. <simplesect kind="return"><para>The width of the mask. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/mask.h" line="59" column="16" bodyfile="include/ed/mask.h" bodystart="59" bodyend="59"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Support for scanning an image as a number of sub-image scans. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>ed::ImageMask</label>
        <link refid="classed_1_1ImageMask"/>
        <childnode refid="2" relation="usage">
          <edgelabel>points_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::vector&lt; cv::Point2i &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="include/ed/mask.h" line="17" column="16" bodyfile="include/ed/mask.h" bodystart="17" bodyend="197"/>
    <listofallmembers>
      <member refid="classed_1_1ImageMask_1a14351cf6f3f32d02258c5fa43f5c7d83" prot="public" virt="non-virtual"><scope>ed::ImageMask</scope><name>addPoint</name></member>
      <member refid="classed_1_1ImageMask_1ac393f9b80ac6629be822c95e7129baaa" prot="public" virt="non-virtual"><scope>ed::ImageMask</scope><name>addPoint</name></member>
      <member refid="classed_1_1ImageMask_1a9027b1cfdac51d535b1122133a6d9e27" prot="public" virt="non-virtual"><scope>ed::ImageMask</scope><name>addPoint</name></member>
      <member refid="classed_1_1ImageMask_1ac7bd33b5af201674f62855e03a588d05" prot="public" virt="non-virtual"><scope>ed::ImageMask</scope><name>addPoints</name></member>
      <member refid="classed_1_1ImageMask_1a4db1f6c08c7ae94c25d7edc19187ba27" prot="public" virt="non-virtual"><scope>ed::ImageMask</scope><name>begin</name></member>
      <member refid="classed_1_1ImageMask_1a1df0c51de536994ac8f5b189770f60b5" prot="public" virt="non-virtual"><scope>ed::ImageMask</scope><name>clear</name></member>
      <member refid="classed_1_1ImageMask_1a874a34813d6cd7bf230ab4284799aae1" prot="public" virt="non-virtual"><scope>ed::ImageMask</scope><name>end</name></member>
      <member refid="classed_1_1ImageMask_1a0fe144777d8df1f571ca769c7727fb12" prot="public" virt="non-virtual"><scope>ed::ImageMask</scope><name>getSize</name></member>
      <member refid="classed_1_1ImageMask_1a20454379060eec0fa7ec20969dc7aa38" prot="public" virt="non-virtual"><scope>ed::ImageMask</scope><name>height</name></member>
      <member refid="classed_1_1ImageMask_1a48bd280c4d7c288b40bad25a3bb056bb" prot="private" virt="non-virtual"><scope>ed::ImageMask</scope><name>height_</name></member>
      <member refid="classed_1_1ImageMask_1a6abc087be6c283f2a6739e2d8f82685d" prot="public" virt="non-virtual"><scope>ed::ImageMask</scope><name>ImageMask</name></member>
      <member refid="classed_1_1ImageMask_1a64de87c59c7c8fa1ec41775a0ff7c8ab" prot="public" virt="non-virtual"><scope>ed::ImageMask</scope><name>ImageMask</name></member>
      <member refid="classed_1_1ImageMask_1a7c11cffdab1b879db8401f85c73dcc77" prot="private" virt="non-virtual"><scope>ed::ImageMask</scope><name>points_</name></member>
      <member refid="classed_1_1ImageMask_1a4f6a03ea85a4d65ad5c487dc94327b6e" prot="public" virt="non-virtual"><scope>ed::ImageMask</scope><name>setSize</name></member>
      <member refid="classed_1_1ImageMask_1ab82e87fdf3d58168a3b1cfe501242fb2" prot="public" virt="non-virtual"><scope>ed::ImageMask</scope><name>width</name></member>
      <member refid="classed_1_1ImageMask_1a7603ab9887a901035f6c8fcd337d470d" prot="private" virt="non-virtual"><scope>ed::ImageMask</scope><name>width_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
