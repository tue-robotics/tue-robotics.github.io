<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classed_1_1ImageMask_1_1const__iterator" kind="class" language="C++" prot="public">
    <compoundname>ed::ImageMask::const_iterator</compoundname>
    <includes refid="mask_8h" local="no">mask.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classed_1_1ImageMask_1_1const__iterator_1a8beb274587ad6336ac75084d546bf235" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int ed::ImageMask::const_iterator::dx_</definition>
        <argsstring></argsstring>
        <name>dx_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/mask.h" line="176" column="13" bodyfile="include/ed/mask.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1ImageMask_1_1const__iterator_1ac7a8fcb184343a43ae2809400da4e92b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int ed::ImageMask::const_iterator::dy_</definition>
        <argsstring></argsstring>
        <name>dy_</name>
        <briefdescription>
<para>Variables tracking the x/y position in the current sub-image. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/mask.h" line="176" column="17" bodyfile="include/ed/mask.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1ImageMask_1_1const__iterator_1a1fac54cf601bc1dfc6b3505b44d4c473" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int ed::ImageMask::const_iterator::factor_</definition>
        <argsstring></argsstring>
        <name>factor_</name>
        <briefdescription>
<para>Sub-image X/Y size (sub-image is rectangular). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/mask.h" line="177" column="13" bodyfile="include/ed/mask.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1ImageMask_1_1const__iterator_1adad871acf8a5de2e59fe5116a54f98c5" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t ed::ImageMask::const_iterator::index_</definition>
        <argsstring></argsstring>
        <name>index_</name>
        <briefdescription>
<para>Current sub-image being scanned. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/mask.h" line="175" column="16" bodyfile="include/ed/mask.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1ImageMask_1_1const__iterator_1a754267e15953d8dc11e558b460d4aed9" prot="private" static="no" mutable="no">
        <type>const <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; cv::Point2i &gt; &amp;</type>
        <definition>const std::vector&lt;cv::Point2i&gt;&amp; ed::ImageMask::const_iterator::points_</definition>
        <argsstring></argsstring>
        <name>points_</name>
        <briefdescription>
<para>Base points of the sub-images. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/mask.h" line="174" column="27" bodyfile="include/ed/mask.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classed_1_1ImageMask_1_1const__iterator_1ab3f07727785504ef8ddbbc8c476dafe9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ed::ImageMask::const_iterator::const_iterator</definition>
        <argsstring>(const std::vector&lt; cv::Point2i &gt; &amp;points, size_t index, int factor)</argsstring>
        <name>const_iterator</name>
        <param>
          <type>const <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; cv::Point2i &gt; &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Iterator constructor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>points</parametername>
</parameternamelist>
<parameterdescription>
<para>Base points of the sub-images. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the first sub-image to scan. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>factor</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of a rectangular sub-image. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/mask.h" line="121" column="9" bodyfile="include/ed/mask.h" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1ImageMask_1_1const__iterator_1a1aea57c53cc9669a710895a18079199e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::ImageMask::const_iterator::operator!=</definition>
        <argsstring>(const const_iterator &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classed_1_1ImageMask_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/mask.h" line="171" column="21" bodyfile="include/ed/mask.h" bodystart="171" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1ImageMask_1_1const__iterator_1a57d5279aa5ceef1d649d7b2e95c2b98c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>cv::Point2i</type>
        <definition>cv::Point2i ed::ImageMask::const_iterator::operator()</definition>
        <argsstring>()</argsstring>
        <name>operator()</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the xy mask position of the iterator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/mask.h" line="162" column="28" bodyfile="include/ed/mask.h" bodystart="162" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1ImageMask_1_1const__iterator_1aab2497d55c24951c1967e6d0c5494fc5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classed_1_1ImageMask_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
        <definition>const_iterator&amp; ed::ImageMask::const_iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pre-increment operator. Increment the X position of the scan line, wrapping to the start of the next scan line, jump to the next sub-image at the end of the current sub-image. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/mask.h" line="140" column="31" bodyfile="include/ed/mask.h" bodystart="140" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1ImageMask_1_1const__iterator_1a687e2dbe518bb21dbd754c3c68c5c412" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classed_1_1ImageMask_1_1const__iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator ed::ImageMask::const_iterator::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/mask.h" line="127" column="31" bodyfile="include/ed/mask.h" bodystart="127" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1ImageMask_1_1const__iterator_1a923a8defe9bb30376f0082cfd87021dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::ImageMask::const_iterator::operator==</definition>
        <argsstring>(const const_iterator &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classed_1_1ImageMask_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/mask.h" line="170" column="21" bodyfile="include/ed/mask.h" bodystart="170" bodyend="170"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Iterator that scans all sub-images in turn, scanning each sub-image from left to right, from top to bottom (assuming base position of a sub-image is its top-left corner). </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>ed::ImageMask::const_iterator</label>
        <link refid="classed_1_1ImageMask_1_1const__iterator"/>
        <childnode refid="2" relation="usage">
          <edgelabel>points_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::vector&lt; cv::Point2i &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="include/ed/mask.h" line="113" column="1" bodyfile="include/ed/mask.h" bodystart="112" bodyend="178"/>
    <listofallmembers>
      <member refid="classed_1_1ImageMask_1_1const__iterator_1ab3f07727785504ef8ddbbc8c476dafe9" prot="public" virt="non-virtual"><scope>ed::ImageMask::const_iterator</scope><name>const_iterator</name></member>
      <member refid="classed_1_1ImageMask_1_1const__iterator_1a8beb274587ad6336ac75084d546bf235" prot="private" virt="non-virtual"><scope>ed::ImageMask::const_iterator</scope><name>dx_</name></member>
      <member refid="classed_1_1ImageMask_1_1const__iterator_1ac7a8fcb184343a43ae2809400da4e92b" prot="private" virt="non-virtual"><scope>ed::ImageMask::const_iterator</scope><name>dy_</name></member>
      <member refid="classed_1_1ImageMask_1_1const__iterator_1a1fac54cf601bc1dfc6b3505b44d4c473" prot="private" virt="non-virtual"><scope>ed::ImageMask::const_iterator</scope><name>factor_</name></member>
      <member refid="classed_1_1ImageMask_1_1const__iterator_1adad871acf8a5de2e59fe5116a54f98c5" prot="private" virt="non-virtual"><scope>ed::ImageMask::const_iterator</scope><name>index_</name></member>
      <member refid="classed_1_1ImageMask_1_1const__iterator_1a1aea57c53cc9669a710895a18079199e" prot="public" virt="non-virtual"><scope>ed::ImageMask::const_iterator</scope><name>operator!=</name></member>
      <member refid="classed_1_1ImageMask_1_1const__iterator_1a57d5279aa5ceef1d649d7b2e95c2b98c" prot="public" virt="non-virtual"><scope>ed::ImageMask::const_iterator</scope><name>operator()</name></member>
      <member refid="classed_1_1ImageMask_1_1const__iterator_1a687e2dbe518bb21dbd754c3c68c5c412" prot="public" virt="non-virtual"><scope>ed::ImageMask::const_iterator</scope><name>operator++</name></member>
      <member refid="classed_1_1ImageMask_1_1const__iterator_1aab2497d55c24951c1967e6d0c5494fc5" prot="public" virt="non-virtual"><scope>ed::ImageMask::const_iterator</scope><name>operator++</name></member>
      <member refid="classed_1_1ImageMask_1_1const__iterator_1a923a8defe9bb30376f0082cfd87021dd" prot="public" virt="non-virtual"><scope>ed::ImageMask::const_iterator</scope><name>operator==</name></member>
      <member refid="classed_1_1ImageMask_1_1const__iterator_1a754267e15953d8dc11e558b460d4aed9" prot="private" virt="non-virtual"><scope>ed::ImageMask::const_iterator</scope><name>points_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
