<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="loop__usage__status_8h" kind="file" language="C++">
    <compoundname>loop_usage_status.h</compoundname>
    <includes local="no">diagnostic_updater/diagnostic_updater.h</includes>
    <includes local="no">diagnostic_updater/update_functions.h</includes>
    <includes local="no">diagnostic_msgs/DiagnosticStatus.h</includes>
    <includes local="no">tue/profiling/loop_timer.h</includes>
    <includes local="no">tue/profiling/timer.h</includes>
    <includes local="no">math.h</includes>
    <includedby refid="plugin__container_8h" local="yes">plugin_container.h</includedby>
    <incdepgraph>
      <node id="5">
        <label>tue/profiling/loop_timer.h</label>
        <link refid="loop__timer_8h.html" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags"/>
      </node>
      <node id="2">
        <label>diagnostic_updater/diagnostic_updater.h</label>
      </node>
      <node id="1">
        <label>loop_usage_status.h</label>
        <link refid="loop__usage__status_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>diagnostic_updater/update_functions.h</label>
      </node>
      <node id="6">
        <label>tue/profiling/timer.h</label>
        <link refid="timer_8h.html" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags"/>
      </node>
      <node id="7">
        <label>math.h</label>
      </node>
      <node id="4">
        <label>diagnostic_msgs/DiagnosticStatus.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>plugin_container.h</label>
        <link refid="plugin__container_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>server.cpp</label>
        <link refid="server_8cpp"/>
      </node>
      <node id="1">
        <label>loop_usage_status.h</label>
        <link refid="loop__usage__status_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>plugin_container.cpp</label>
        <link refid="plugin__container_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classed_1_1LoopUsageStatus" prot="public">ed::LoopUsageStatus</innerclass>
    <innernamespace refid="namespaceed">ed</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>ED_LOOP_USAGE_STATUS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ED_LOOP_USAGE_STATUS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;diagnostic_updater/diagnostic_updater.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;diagnostic_updater/update_functions.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;diagnostic_msgs/DiagnosticStatus.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="loop__timer_8h.html" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">tue/profiling/loop_timer.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="timer_8h.html" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">tue/profiling/timer.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceed" kindref="compound">ed</ref></highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classed_1_1LoopUsageStatus" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classed_1_1LoopUsageStatus" kindref="compound">LoopUsageStatus</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>diagnostic_updater::DiagnosticTask</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30" refid="classed_1_1LoopUsageStatus_1a3238189aea05f434f7fd0a9c016aeebb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>diagnostic_updater::FrequencyStatusParam<sp/><ref refid="classed_1_1LoopUsageStatus_1a3238189aea05f434f7fd0a9c016aeebb" kindref="member">params_</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classed_1_1LoopUsageStatus_1a301b876edf53f1056d2fd896c62e0204" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtue_1_1LoopTimer" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">tue::LoopTimer</ref><sp/><ref refid="classed_1_1LoopUsageStatus_1a301b876edf53f1056d2fd896c62e0204" kindref="member">timer_</ref>;</highlight></codeline>
<codeline lineno="33" refid="classed_1_1LoopUsageStatus_1a9023dcdc4bd888e1260a62ee0ef8f535" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;long double&gt;</ref><sp/><ref refid="classed_1_1LoopUsageStatus_1a9023dcdc4bd888e1260a62ee0ef8f535" kindref="member">starts_</ref>;<sp/></highlight><highlight class="comment">//<sp/>Micro-seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classed_1_1LoopUsageStatus_1a597d2bd526226de04279a2509a972a7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;long double&gt;</ref><sp/><ref refid="classed_1_1LoopUsageStatus_1a597d2bd526226de04279a2509a972a7a" kindref="member">durations_</ref>;<sp/></highlight><highlight class="comment">//<sp/>Seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classed_1_1LoopUsageStatus_1a597c1a578184b254dd26aaa3a38ed29c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;int&gt;</ref><sp/><ref refid="classed_1_1LoopUsageStatus_1a597c1a578184b254dd26aaa3a38ed29c" kindref="member">seq_nums_</ref>;</highlight></codeline>
<codeline lineno="36" refid="classed_1_1LoopUsageStatus_1a6c835bdc5d1a3bcddab9f6249778bb1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classed_1_1LoopUsageStatus_1a6c835bdc5d1a3bcddab9f6249778bb1e" kindref="member">hist_indx_</ref>;</highlight></codeline>
<codeline lineno="37" refid="classed_1_1LoopUsageStatus_1ac1fd89efa38a8939c70bb0579f0da32d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classed_1_1LoopUsageStatus_1ac1fd89efa38a8939c70bb0579f0da32d" kindref="member">start_</ref>;</highlight></codeline>
<codeline lineno="38" refid="classed_1_1LoopUsageStatus_1a1c94bd291c1647a5e815649e482bdc2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classed_1_1LoopUsageStatus_1a1c94bd291c1647a5e815649e482bdc2b" kindref="member">duration_</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classed_1_1LoopUsageStatus_1aaa0b8d4b95a95e0cea5710c65be33942" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::mutex<sp/><ref refid="classed_1_1LoopUsageStatus_1aaa0b8d4b95a95e0cea5710c65be33942" kindref="member">lock_</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46" refid="classed_1_1LoopUsageStatus_1a1a8a2d0a70e28ba30fb7d9b68755d8e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classed_1_1LoopUsageStatus_1a1a8a2d0a70e28ba30fb7d9b68755d8e1" kindref="member">LoopUsageStatus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>diagnostic_updater::FrequencyStatusParam<sp/>&amp;params,<sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>name)<sp/>:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>DiagnosticTask(name),<sp/><ref refid="classed_1_1LoopUsageStatus_1a3238189aea05f434f7fd0a9c016aeebb" kindref="member">params_</ref>(params),</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classed_1_1LoopUsageStatus_1a9023dcdc4bd888e1260a62ee0ef8f535" kindref="member">starts_</ref>(<ref refid="classed_1_1LoopUsageStatus_1a3238189aea05f434f7fd0a9c016aeebb" kindref="member">params_</ref>.window_size_),<sp/><ref refid="classed_1_1LoopUsageStatus_1a597d2bd526226de04279a2509a972a7a" kindref="member">durations_</ref>(<ref refid="classed_1_1LoopUsageStatus_1a3238189aea05f434f7fd0a9c016aeebb" kindref="member">params_</ref>.window_size_),<sp/><ref refid="classed_1_1LoopUsageStatus_1a597c1a578184b254dd26aaa3a38ed29c" kindref="member">seq_nums_</ref>(<ref refid="classed_1_1LoopUsageStatus_1a3238189aea05f434f7fd0a9c016aeebb" kindref="member">params_</ref>.window_size_)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classed_1_1LoopUsageStatus_1aa98fd73f50d2d1367407f4627e4de538" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classed_1_1LoopUsageStatus_1a9df1f1e496d5bdb05ca5b715461db0b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classed_1_1LoopUsageStatus_1a9df1f1e496d5bdb05ca5b715461db0b9" kindref="member">LoopUsageStatus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>diagnostic_updater::FrequencyStatusParam<sp/>&amp;params)<sp/>:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>DiagnosticTask(</highlight><highlight class="stringliteral">&quot;Loop<sp/>Usage<sp/>Status&quot;</highlight><highlight class="normal">),<sp/><ref refid="classed_1_1LoopUsageStatus_1a3238189aea05f434f7fd0a9c016aeebb" kindref="member">params_</ref>(params),</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classed_1_1LoopUsageStatus_1a9023dcdc4bd888e1260a62ee0ef8f535" kindref="member">starts_</ref>(<ref refid="classed_1_1LoopUsageStatus_1a3238189aea05f434f7fd0a9c016aeebb" kindref="member">params_</ref>.window_size_),<sp/><ref refid="classed_1_1LoopUsageStatus_1a597d2bd526226de04279a2509a972a7a" kindref="member">durations_</ref>(<ref refid="classed_1_1LoopUsageStatus_1a3238189aea05f434f7fd0a9c016aeebb" kindref="member">params_</ref>.window_size_),<sp/><ref refid="classed_1_1LoopUsageStatus_1a597c1a578184b254dd26aaa3a38ed29c" kindref="member">seq_nums_</ref>(<ref refid="classed_1_1LoopUsageStatus_1a3238189aea05f434f7fd0a9c016aeebb" kindref="member">params_</ref>.window_size_)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classed_1_1LoopUsageStatus_1aa98fd73f50d2d1367407f4627e4de538" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classed_1_1LoopUsageStatus_1adc83336bd4b9eb1c626ececbdfdf43ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1LoopTimer" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">tue::LoopTimer</ref>&amp;<sp/><ref refid="classed_1_1LoopUsageStatus_1adc83336bd4b9eb1c626ececbdfdf43ba" kindref="member">getTimer</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classed_1_1LoopUsageStatus_1a301b876edf53f1056d2fd896c62e0204" kindref="member">timer_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="classed_1_1LoopUsageStatus_1aa98fd73f50d2d1367407f4627e4de538" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classed_1_1LoopUsageStatus_1aa98fd73f50d2d1367407f4627e4de538" kindref="member">clear</ref>()</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::mutex::scoped_lock<sp/>lock(<ref refid="classed_1_1LoopUsageStatus_1aaa0b8d4b95a95e0cea5710c65be33942" kindref="member">lock_</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classed_1_1LoopUsageStatus_1a301b876edf53f1056d2fd896c62e0204" kindref="member">timer_</ref>.<ref refid="classtue_1_1LoopTimer_1adfdf89b84000ebc9fd5b9900171eb220" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">reset</ref>();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>curtime<sp/>=<sp/><ref refid="classtue_1_1Timer_1ab3561855eb90bc5fbe9d8290c0cae3e0" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">tue::Timer::nowMicroSec</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/algorithm/fill" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::fill</ref>(<ref refid="classed_1_1LoopUsageStatus_1a9023dcdc4bd888e1260a62ee0ef8f535" kindref="member">starts_</ref>.<ref refid="cpp/container/vector/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>(),<sp/><ref refid="classed_1_1LoopUsageStatus_1a9023dcdc4bd888e1260a62ee0ef8f535" kindref="member">starts_</ref>.<ref refid="cpp/container/vector/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>(),<sp/>curtime);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/algorithm/fill" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::fill</ref>(<ref refid="classed_1_1LoopUsageStatus_1a597d2bd526226de04279a2509a972a7a" kindref="member">durations_</ref>.<ref refid="cpp/container/vector/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>(),<sp/><ref refid="classed_1_1LoopUsageStatus_1a597d2bd526226de04279a2509a972a7a" kindref="member">durations_</ref>.<ref refid="cpp/container/vector/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>(),<sp/>0);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/algorithm/fill" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::fill</ref>(<ref refid="classed_1_1LoopUsageStatus_1a597c1a578184b254dd26aaa3a38ed29c" kindref="member">seq_nums_</ref>.<ref refid="cpp/container/vector/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>(),<sp/><ref refid="classed_1_1LoopUsageStatus_1a597c1a578184b254dd26aaa3a38ed29c" kindref="member">seq_nums_</ref>.<ref refid="cpp/container/vector/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>(),<sp/><ref refid="classed_1_1LoopUsageStatus_1a301b876edf53f1056d2fd896c62e0204" kindref="member">timer_</ref>.<ref refid="classtue_1_1LoopTimer_1a5aaace052532a2c51e3bed62ee344530" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">getIterationCount</ref>());</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classed_1_1LoopUsageStatus_1a6c835bdc5d1a3bcddab9f6249778bb1e" kindref="member">hist_indx_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classed_1_1LoopUsageStatus_1acb1de7fb9129ee89475091cdf25c74ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classed_1_1LoopUsageStatus_1acb1de7fb9129ee89475091cdf25c74ff" kindref="member">start</ref>()</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::mutex::scoped_lock<sp/>lock(<ref refid="classed_1_1LoopUsageStatus_1aaa0b8d4b95a95e0cea5710c65be33942" kindref="member">lock_</ref>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classed_1_1LoopUsageStatus_1a301b876edf53f1056d2fd896c62e0204" kindref="member">timer_</ref>.<ref refid="classtue_1_1LoopTimer_1a41840045a5a7616394fdae6a9152fb3d" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">start</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classed_1_1LoopUsageStatus_1a14cab9553715c328d23580eaf0ae7ede" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classed_1_1LoopUsageStatus_1a14cab9553715c328d23580eaf0ae7ede" kindref="member">stop</ref>()</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::mutex::scoped_lock<sp/>lock(<ref refid="classed_1_1LoopUsageStatus_1aaa0b8d4b95a95e0cea5710c65be33942" kindref="member">lock_</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classed_1_1LoopUsageStatus_1a301b876edf53f1056d2fd896c62e0204" kindref="member">timer_</ref>.<ref refid="classtue_1_1LoopTimer_1a6137d4f050df6af3ab0db1bb567978da" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">stop</ref>();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="classed_1_1LoopUsageStatus_1a4f058a40d9e7f8f180d1c138d1c20bda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classed_1_1LoopUsageStatus_1a4f058a40d9e7f8f180d1c138d1c20bda" kindref="member">run</ref>(diagnostic_updater::DiagnosticStatusWrapper<sp/>&amp;stat)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::mutex::scoped_lock<sp/>lock(<ref refid="classed_1_1LoopUsageStatus_1aaa0b8d4b95a95e0cea5710c65be33942" kindref="member">lock_</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>curtime<sp/>=<sp/><ref refid="classtue_1_1Timer_1ab3561855eb90bc5fbe9d8290c0cae3e0" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">tue::Timer::nowMicroSec</ref>();<sp/></highlight><highlight class="comment">//<sp/>Micro-seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>total_loop_time<sp/>=<sp/><ref refid="classed_1_1LoopUsageStatus_1a301b876edf53f1056d2fd896c62e0204" kindref="member">timer_</ref>.<ref refid="classtue_1_1LoopTimer_1a7eda6542b79e2f4d6000125064104d1f" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">getTotalLoopTime</ref>();<sp/></highlight><highlight class="comment">//<sp/>Seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curseq<sp/>=<sp/><ref refid="classed_1_1LoopUsageStatus_1a301b876edf53f1056d2fd896c62e0204" kindref="member">timer_</ref>.<ref refid="classtue_1_1LoopTimer_1a5aaace052532a2c51e3bed62ee344530" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">getIterationCount</ref>();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>events<sp/>=<sp/>curseq<sp/>-<sp/><ref refid="classed_1_1LoopUsageStatus_1a597c1a578184b254dd26aaa3a38ed29c" kindref="member">seq_nums_</ref>[<ref refid="classed_1_1LoopUsageStatus_1a6c835bdc5d1a3bcddab9f6249778bb1e" kindref="member">hist_indx_</ref>];</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>window<sp/>=<sp/>(curtime<sp/>-<sp/><ref refid="classed_1_1LoopUsageStatus_1a9023dcdc4bd888e1260a62ee0ef8f535" kindref="member">starts_</ref>[<ref refid="classed_1_1LoopUsageStatus_1a6c835bdc5d1a3bcddab9f6249778bb1e" kindref="member">hist_indx_</ref>])<sp/>*<sp/>0.000001;<sp/></highlight><highlight class="comment">//<sp/>Micro-seconds<sp/>-&gt;<sp/>Seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>loop_time_window<sp/>=<sp/>total_loop_time<sp/>-<sp/><ref refid="classed_1_1LoopUsageStatus_1a597d2bd526226de04279a2509a972a7a" kindref="member">durations_</ref>[<ref refid="classed_1_1LoopUsageStatus_1a6c835bdc5d1a3bcddab9f6249778bb1e" kindref="member">hist_indx_</ref>];<sp/></highlight><highlight class="comment">//<sp/>Seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freq<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freq<sp/>=<sp/>events<sp/>/<sp/>window;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classed_1_1LoopUsageStatus_1a597c1a578184b254dd26aaa3a38ed29c" kindref="member">seq_nums_</ref>[<ref refid="classed_1_1LoopUsageStatus_1a6c835bdc5d1a3bcddab9f6249778bb1e" kindref="member">hist_indx_</ref>]<sp/>=<sp/>curseq;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classed_1_1LoopUsageStatus_1a9023dcdc4bd888e1260a62ee0ef8f535" kindref="member">starts_</ref>[<ref refid="classed_1_1LoopUsageStatus_1a6c835bdc5d1a3bcddab9f6249778bb1e" kindref="member">hist_indx_</ref>]<sp/>=<sp/>curtime;<sp/></highlight><highlight class="comment">//<sp/>Micro-seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classed_1_1LoopUsageStatus_1a597d2bd526226de04279a2509a972a7a" kindref="member">durations_</ref>[<ref refid="classed_1_1LoopUsageStatus_1a6c835bdc5d1a3bcddab9f6249778bb1e" kindref="member">hist_indx_</ref>]<sp/>=<sp/>total_loop_time;<sp/></highlight><highlight class="comment">//<sp/>Seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classed_1_1LoopUsageStatus_1a6c835bdc5d1a3bcddab9f6249778bb1e" kindref="member">hist_indx_</ref><sp/>=<sp/>(<ref refid="classed_1_1LoopUsageStatus_1a6c835bdc5d1a3bcddab9f6249778bb1e" kindref="member">hist_indx_</ref><sp/>+<sp/>1)<sp/>%<sp/><ref refid="classed_1_1LoopUsageStatus_1a3238189aea05f434f7fd0a9c016aeebb" kindref="member">params_</ref>.window_size_;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(events<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat.summary(diagnostic_msgs::DiagnosticStatus::ERROR,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>events<sp/>recorded.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>freq<sp/>&lt;<sp/>*<ref refid="classed_1_1LoopUsageStatus_1a3238189aea05f434f7fd0a9c016aeebb" kindref="member">params_</ref>.min_freq_<sp/>*<sp/>(1<sp/>-<sp/><ref refid="classed_1_1LoopUsageStatus_1a3238189aea05f434f7fd0a9c016aeebb" kindref="member">params_</ref>.tolerance_))</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat.summary(diagnostic_msgs::DiagnosticStatus::WARN,<sp/></highlight><highlight class="stringliteral">&quot;Frequency<sp/>too<sp/>low.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>freq<sp/>&gt;<sp/>*<ref refid="classed_1_1LoopUsageStatus_1a3238189aea05f434f7fd0a9c016aeebb" kindref="member">params_</ref>.max_freq_<sp/>*<sp/>(1<sp/>+<sp/><ref refid="classed_1_1LoopUsageStatus_1a3238189aea05f434f7fd0a9c016aeebb" kindref="member">params_</ref>.tolerance_))</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat.summary(diagnostic_msgs::DiagnosticStatus::WARN,<sp/></highlight><highlight class="stringliteral">&quot;Frequency<sp/>too<sp/>high.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat.summary(diagnostic_msgs::DiagnosticStatus::OK,<sp/></highlight><highlight class="stringliteral">&quot;Desired<sp/>frequency<sp/>met&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat.addf(</highlight><highlight class="stringliteral">&quot;Events<sp/>in<sp/>window&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>events);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat.addf(</highlight><highlight class="stringliteral">&quot;Events<sp/>since<sp/>startup&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>curseq);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat.addf(</highlight><highlight class="stringliteral">&quot;Duration<sp/>of<sp/>window<sp/>(s)&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>window);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat.addf(</highlight><highlight class="stringliteral">&quot;Total<sp/>loop<sp/>time<sp/>during<sp/>window<sp/>(s)&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>loop_time_window);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat.addf(</highlight><highlight class="stringliteral">&quot;Loop<sp/>Usage<sp/>(%)&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>100*loop_time_window/window);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat.addf(</highlight><highlight class="stringliteral">&quot;Actual<sp/>frequency<sp/>(Hz)&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>freq);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="classed_1_1LoopUsageStatus_1a3238189aea05f434f7fd0a9c016aeebb" kindref="member">params_</ref>.min_freq_<sp/>==<sp/>*<ref refid="classed_1_1LoopUsageStatus_1a3238189aea05f434f7fd0a9c016aeebb" kindref="member">params_</ref>.max_freq_)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat.addf(</highlight><highlight class="stringliteral">&quot;Target<sp/>frequency<sp/>(Hz)&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,*<ref refid="classed_1_1LoopUsageStatus_1a3238189aea05f434f7fd0a9c016aeebb" kindref="member">params_</ref>.min_freq_);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="classed_1_1LoopUsageStatus_1a3238189aea05f434f7fd0a9c016aeebb" kindref="member">params_</ref>.min_freq_<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat.addf(</highlight><highlight class="stringliteral">&quot;Minimum<sp/>acceptable<sp/>frequency<sp/>(Hz)&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>*<ref refid="classed_1_1LoopUsageStatus_1a3238189aea05f434f7fd0a9c016aeebb" kindref="member">params_</ref>.min_freq_<sp/>*<sp/>(1<sp/>-<sp/><ref refid="classed_1_1LoopUsageStatus_1a3238189aea05f434f7fd0a9c016aeebb" kindref="member">params_</ref>.tolerance_));</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cpp/numeric/math/isfinite" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::isfinite</ref>(*<ref refid="classed_1_1LoopUsageStatus_1a3238189aea05f434f7fd0a9c016aeebb" kindref="member">params_</ref>.max_freq_))</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat.addf(</highlight><highlight class="stringliteral">&quot;Maximum<sp/>acceptable<sp/>frequency<sp/>(Hz)&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>*<ref refid="classed_1_1LoopUsageStatus_1a3238189aea05f434f7fd0a9c016aeebb" kindref="member">params_</ref>.max_freq_<sp/>*<sp/>(1<sp/>+<sp/><ref refid="classed_1_1LoopUsageStatus_1a3238189aea05f434f7fd0a9c016aeebb" kindref="member">params_</ref>.tolerance_));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal">};</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>ed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/ed/loop_usage_status.h"/>
  </compounddef>
</doxygen>
