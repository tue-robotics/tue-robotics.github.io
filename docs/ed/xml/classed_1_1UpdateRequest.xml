<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classed_1_1UpdateRequest" kind="class" language="C++" prot="public">
    <compoundname>ed::UpdateRequest</compoundname>
    <includes refid="update__request_8h" local="no">update_request.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classed_1_1UpdateRequest_1ac17cd77653beb534049f042c45242533" prot="public" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="classed_1_1UUID" kindref="compound">ed::UUID</ref>, <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &gt;</type>
        <definition>std::map&lt;ed::UUID, std::string&gt; ed::UpdateRequest::added_flags</definition>
        <argsstring></argsstring>
        <name>added_flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="199" column="14" bodyfile="include/ed/update_request.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1UpdateRequest_1acf3e33190b0c9814726c66e9f2a23404" prot="public" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="classed_1_1UUID" kindref="compound">UUID</ref>, <ref refid="namespacegeo_1aa7962fa7450fc503b1c737eae84e10df" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::ShapeConstPtr</ref> &gt;</type>
        <definition>std::map&lt;UUID, geo::ShapeConstPtr&gt; ed::UpdateRequest::collisions</definition>
        <argsstring></argsstring>
        <name>collisions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="56" column="14" bodyfile="include/ed/update_request.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1UpdateRequest_1a96005e4c5b090de81f80a713cea7d087" prot="public" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="classed_1_1UUID" kindref="compound">UUID</ref>, <ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>, <ref refid="structed_1_1MeasurementConvexHull" kindref="compound">ed::MeasurementConvexHull</ref> &gt; &gt;</type>
        <definition>std::map&lt;UUID, std::map&lt;std::string, ed::MeasurementConvexHull&gt; &gt; ed::UpdateRequest::convex_hulls_new</definition>
        <argsstring></argsstring>
        <name>convex_hulls_new</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="86" column="14" bodyfile="include/ed/update_request.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1UpdateRequest_1a9823171acbd06657decd54cb20b285fb" prot="public" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="classed_1_1UUID" kindref="compound">UUID</ref>, <ref refid="classtue_1_1config_1_1DataConstPointer" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::DataConstPointer</ref> &gt;</type>
        <definition>std::map&lt;UUID, tue::config::DataConstPointer&gt; ed::UpdateRequest::datas</definition>
        <argsstring></argsstring>
        <name>datas</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="146" column="14" bodyfile="include/ed/update_request.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1UpdateRequest_1a27c835cbd1a313be858ad753895ffbc4" prot="public" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="classed_1_1UUID" kindref="compound">UUID</ref>, double &gt;</type>
        <definition>std::map&lt;UUID, double&gt; ed::UpdateRequest::existence_probabilities</definition>
        <argsstring></argsstring>
        <name>existence_probabilities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="117" column="14" bodyfile="include/ed/update_request.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1UpdateRequest_1a7755a68e2ba0b8a772ba577f7f5040af" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ed::UpdateRequest::is_sync_update</definition>
        <argsstring></argsstring>
        <name>is_sync_update</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="218" column="10" bodyfile="include/ed/update_request.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1UpdateRequest_1a5caebb26724a48f800e4c316260a2f60" prot="public" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="classed_1_1UUID" kindref="compound">UUID</ref>, double &gt;</type>
        <definition>std::map&lt;UUID, double&gt; ed::UpdateRequest::last_update_timestamps</definition>
        <argsstring></argsstring>
        <name>last_update_timestamps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="124" column="14" bodyfile="include/ed/update_request.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1UpdateRequest_1ae74716d4bc942600225d560c0f6bdb4c" prot="public" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="classed_1_1UUID" kindref="compound">UUID</ref>, <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="namespaceed_1aa3cfa7eac850993cd6f1c808f8ab5165" kindref="member">MeasurementConstPtr</ref> &gt; &gt;</type>
        <definition>std::map&lt;UUID, std::vector&lt;MeasurementConstPtr&gt; &gt; ed::UpdateRequest::measurements</definition>
        <argsstring></argsstring>
        <name>measurements</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="34" column="14" bodyfile="include/ed/update_request.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1UpdateRequest_1a69d6066f0435d366fc3dfa6ad6b5d9b7" prot="public" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="classed_1_1UUID" kindref="compound">UUID</ref>, <ref refid="namespacegeo_1a6c851aec5e98801c86d46d508de5c05d" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D</ref> &gt;</type>
        <definition>std::map&lt;UUID, geo::Pose3D&gt; ed::UpdateRequest::poses</definition>
        <argsstring></argsstring>
        <name>poses</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="131" column="14" bodyfile="include/ed/update_request.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1UpdateRequest_1a97e2f497717f73caa8f156ac776919ce" prot="public" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &gt;</type>
        <definition>std::vector&lt;UUID&gt; ed::UpdateRequest::poses_removed</definition>
        <argsstring></argsstring>
        <name>poses_removed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="134" column="17" bodyfile="include/ed/update_request.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1UpdateRequest_1a8fe7240ffbd57e53ad38b10c926014db" prot="public" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="classed_1_1UUID" kindref="compound">UUID</ref>, <ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="namespaceed_1a0c6baa32727c3af9459b72c4e8314103" kindref="member">Idx</ref>, <ref refid="structed_1_1Property" kindref="compound">Property</ref> &gt; &gt;</type>
        <definition>std::map&lt;UUID, std::map&lt;Idx, Property&gt; &gt; ed::UpdateRequest::properties</definition>
        <argsstring></argsstring>
        <name>properties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="167" column="14" bodyfile="include/ed/update_request.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1UpdateRequest_1aaa410ce76f98b6ebc46f58fb8efbea40" prot="public" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="classed_1_1UUID" kindref="compound">UUID</ref>, <ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="classed_1_1UUID" kindref="compound">UUID</ref>, <ref refid="namespaceed_1a7dd282f5effbc2c0386d14d5f7843692" kindref="member">RelationConstPtr</ref> &gt; &gt;</type>
        <definition>std::map&lt;UUID, std::map&lt;UUID, RelationConstPtr&gt; &gt; ed::UpdateRequest::relations</definition>
        <argsstring></argsstring>
        <name>relations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="140" column="14" bodyfile="include/ed/update_request.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1UpdateRequest_1a56291f3bb42bc5677c8bcdc81d66da6b" prot="public" static="no" mutable="no">
        <type><ref refid="cpp/container/set" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::set</ref>&lt; <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &gt;</type>
        <definition>std::set&lt;UUID&gt; ed::UpdateRequest::removed_entities</definition>
        <argsstring></argsstring>
        <name>removed_entities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="192" column="14" bodyfile="include/ed/update_request.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1UpdateRequest_1ade342a62093f295cac8687c9e88c99bf" prot="public" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="classed_1_1UUID" kindref="compound">ed::UUID</ref>, <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &gt;</type>
        <definition>std::map&lt;ed::UUID, std::string&gt; ed::UpdateRequest::removed_flags</definition>
        <argsstring></argsstring>
        <name>removed_flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="203" column="14" bodyfile="include/ed/update_request.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1UpdateRequest_1a9f8190b73959377dff77f150f12402a2" prot="public" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="classed_1_1UUID" kindref="compound">UUID</ref>, <ref refid="cpp/container/set" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::set</ref>&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &gt; &gt;</type>
        <definition>std::map&lt;UUID, std::set&lt;std::string&gt; &gt; ed::UpdateRequest::type_sets_added</definition>
        <argsstring></argsstring>
        <name>type_sets_added</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="108" column="14" bodyfile="include/ed/update_request.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1UpdateRequest_1adaa4eddd4c9f3281ea294abd55bae610" prot="public" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="classed_1_1UUID" kindref="compound">UUID</ref>, <ref refid="cpp/container/set" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::set</ref>&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &gt; &gt;</type>
        <definition>std::map&lt;UUID, std::set&lt;std::string&gt; &gt; ed::UpdateRequest::type_sets_removed</definition>
        <argsstring></argsstring>
        <name>type_sets_removed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="111" column="14" bodyfile="include/ed/update_request.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1UpdateRequest_1a0ea4e36b0492197890447e8fc9563483" prot="public" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="classed_1_1UUID" kindref="compound">UUID</ref>, <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &gt;</type>
        <definition>std::map&lt;UUID, std::string&gt; ed::UpdateRequest::types</definition>
        <argsstring></argsstring>
        <name>types</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="105" column="14" bodyfile="include/ed/update_request.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1UpdateRequest_1a52db0b93e6406284a3df04408dc40139" prot="public" static="no" mutable="no">
        <type><ref refid="cpp/container/set" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::set</ref>&lt; <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &gt;</type>
        <definition>std::set&lt;UUID&gt; ed::UpdateRequest::updated_entities</definition>
        <argsstring></argsstring>
        <name>updated_entities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="211" column="14" bodyfile="include/ed/update_request.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1UpdateRequest_1a58e164f79fb9b0f9f1b9840a6639f025" prot="public" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="classed_1_1UUID" kindref="compound">UUID</ref>, <ref refid="namespacegeo_1aa7962fa7450fc503b1c737eae84e10df" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::ShapeConstPtr</ref> &gt;</type>
        <definition>std::map&lt;UUID, geo::ShapeConstPtr&gt; ed::UpdateRequest::visuals</definition>
        <argsstring></argsstring>
        <name>visuals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="50" column="14" bodyfile="include/ed/update_request.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1UpdateRequest_1ad6a79a8e4914e8aca95a5db395126067" prot="public" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="classed_1_1UUID" kindref="compound">UUID</ref>, <ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>, <ref refid="namespacegeo_1aa7962fa7450fc503b1c737eae84e10df" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::ShapeConstPtr</ref> &gt; &gt;</type>
        <definition>std::map&lt;UUID, std::map&lt;std::string, geo::ShapeConstPtr&gt; &gt; ed::UpdateRequest::volumes_added</definition>
        <argsstring></argsstring>
        <name>volumes_added</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="60" column="14" bodyfile="include/ed/update_request.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1UpdateRequest_1aeb07fc06f6a095b9c5f52f13436b3734" prot="public" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="classed_1_1UUID" kindref="compound">UUID</ref>, <ref refid="cpp/container/set" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::set</ref>&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &gt; &gt;</type>
        <definition>std::map&lt;UUID, std::set&lt;std::string&gt; &gt; ed::UpdateRequest::volumes_removed</definition>
        <argsstring></argsstring>
        <name>volumes_removed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="80" column="14" bodyfile="include/ed/update_request.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classed_1_1UpdateRequest_1a0d57d236ab59650e0b0590a9485693ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::UpdateRequest::addData</definition>
        <argsstring>(const UUID &amp;id, const tue::config::DataConstPointer &amp;data)</argsstring>
        <name>addData</name>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classtue_1_1config_1_1DataConstPointer" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::DataConstPointer</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="148" column="10" bodyfile="include/ed/update_request.h" bodystart="148" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1UpdateRequest_1ad6bc4ac39cb4365f23cd6acd0c7d5f85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::UpdateRequest::addMeasurement</definition>
        <argsstring>(const UUID &amp;id, const MeasurementConstPtr &amp;m)</argsstring>
        <name>addMeasurement</name>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceed_1aa3cfa7eac850993cd6f1c808f8ab5165" kindref="member">MeasurementConstPtr</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="35" column="10" bodyfile="include/ed/update_request.h" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1UpdateRequest_1a7e0b356f1a2edf81a6a85793ca4a9899" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::UpdateRequest::addMeasurements</definition>
        <argsstring>(const UUID &amp;id, const std::vector&lt; MeasurementConstPtr &gt; &amp;measurements_)</argsstring>
        <name>addMeasurements</name>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="namespaceed_1aa3cfa7eac850993cd6f1c808f8ab5165" kindref="member">MeasurementConstPtr</ref> &gt; &amp;</type>
          <declname>measurements_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="37" column="10" bodyfile="include/ed/update_request.h" bodystart="37" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1UpdateRequest_1a1aab436a6faad26bf4638a5633f1f5be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::UpdateRequest::addType</definition>
        <argsstring>(const UUID &amp;id, const std::string &amp;type)</argsstring>
        <name>addType</name>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="109" column="10" bodyfile="include/ed/update_request.h" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1UpdateRequest_1a133ba4a786a92a2d919272568bf726b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::UpdateRequest::addVolume</definition>
        <argsstring>(const UUID &amp;id, const std::string Volume_name, const geo::ShapeConstPtr &amp;Volume_shape)</argsstring>
        <name>addVolume</name>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
          <declname>Volume_name</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegeo_1aa7962fa7450fc503b1c737eae84e10df" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::ShapeConstPtr</ref> &amp;</type>
          <declname>Volume_shape</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="61" column="10" bodyfile="include/ed/update_request.h" bodystart="61" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1UpdateRequest_1ae663db540b5127cdd4b9708f289e1a81" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::UpdateRequest::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="213" column="10" bodyfile="include/ed/update_request.h" bodystart="213" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1UpdateRequest_1a1bb9d1f8d8112e8cf33624a0ba3aad7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::UpdateRequest::removeConvexHullNew</definition>
        <argsstring>(const UUID &amp;id, const std::string &amp;source)</argsstring>
        <name>removeConvexHullNew</name>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="96" column="10" bodyfile="include/ed/update_request.h" bodystart="96" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1UpdateRequest_1ab05e193cf13efa2fa2b200de876584af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::UpdateRequest::removeEntity</definition>
        <argsstring>(const UUID &amp;id)</argsstring>
        <name>removeEntity</name>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="194" column="10" bodyfile="include/ed/update_request.h" bodystart="194" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1UpdateRequest_1a83a109d4c93ca648d91d2f0d74af96d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::UpdateRequest::removeFlag</definition>
        <argsstring>(const UUID &amp;id, const std::string &amp;flag)</argsstring>
        <name>removeFlag</name>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="205" column="10" bodyfile="include/ed/update_request.h" bodystart="205" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1UpdateRequest_1af9c0cec8a08dde5ea617fbcd920b5942" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::UpdateRequest::removePose</definition>
        <argsstring>(const UUID &amp;id)</argsstring>
        <name>removePose</name>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="135" column="10" bodyfile="include/ed/update_request.h" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1UpdateRequest_1aeb62399fbb4e8f90702d004fab559a1e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::UpdateRequest::removeType</definition>
        <argsstring>(const UUID &amp;id, const std::string &amp;type)</argsstring>
        <name>removeType</name>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="112" column="10" bodyfile="include/ed/update_request.h" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1UpdateRequest_1a4369434ff57db47df135249a3c40c17a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::UpdateRequest::removeVolume</definition>
        <argsstring>(const UUID &amp;id, const std::string Volume_name)</argsstring>
        <name>removeVolume</name>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
          <declname>Volume_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="81" column="10" bodyfile="include/ed/update_request.h" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1UpdateRequest_1aabfdc6c663abb2c6d7967ce8682e46f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::UpdateRequest::setCollision</definition>
        <argsstring>(const UUID &amp;id, const geo::ShapeConstPtr &amp;collision)</argsstring>
        <name>setCollision</name>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegeo_1aa7962fa7450fc503b1c737eae84e10df" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::ShapeConstPtr</ref> &amp;</type>
          <declname>collision</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="57" column="10" bodyfile="include/ed/update_request.h" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1UpdateRequest_1aea900f2a4649f9604a5056b52f98e9f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::UpdateRequest::setConvexHullNew</definition>
        <argsstring>(const UUID &amp;id, const ed::ConvexHull &amp;convex_hull, const geo::Pose3D &amp;pose, double time, std::string source=&quot;&quot;)</argsstring>
        <name>setConvexHullNew</name>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="structed_1_1ConvexHull" kindref="compound">ed::ConvexHull</ref> &amp;</type>
          <declname>convex_hull</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegeo_1a6c851aec5e98801c86d46d508de5c05d" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D</ref> &amp;</type>
          <declname>pose</declname>
        </param>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
          <declname>source</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="87" column="10" bodyfile="include/ed/update_request.h" bodystart="87" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1UpdateRequest_1aef4e1b9203de79bea0eb86bc58762217" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::UpdateRequest::setExistenceProbability</definition>
        <argsstring>(const UUID &amp;id, double prob)</argsstring>
        <name>setExistenceProbability</name>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>prob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="119" column="10" bodyfile="include/ed/update_request.h" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1UpdateRequest_1a215bd27584687848f27660b8b44dfef0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::UpdateRequest::setFlag</definition>
        <argsstring>(const UUID &amp;id, const std::string &amp;flag)</argsstring>
        <name>setFlag</name>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="201" column="10" bodyfile="include/ed/update_request.h" bodystart="201" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1UpdateRequest_1a7aa50fb4ba20cdf6967851f8f29822e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::UpdateRequest::setLastUpdateTimestamp</definition>
        <argsstring>(const UUID &amp;id, double t)</argsstring>
        <name>setLastUpdateTimestamp</name>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="126" column="10" bodyfile="include/ed/update_request.h" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1UpdateRequest_1ae4421e2c1b3ac1074bb8d067655030e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::UpdateRequest::setPose</definition>
        <argsstring>(const UUID &amp;id, const geo::Pose3D &amp;pose)</argsstring>
        <name>setPose</name>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegeo_1a6c851aec5e98801c86d46d508de5c05d" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D</ref> &amp;</type>
          <declname>pose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="132" column="10" bodyfile="include/ed/update_request.h" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1UpdateRequest_1a32c5d7e63c19353d5986360dc51287f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ed::UpdateRequest::setProperty</definition>
        <argsstring>(const UUID &amp;id, const PropertyKey&lt; T &gt; &amp;key, const T &amp;value)</argsstring>
        <name>setProperty</name>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="structed_1_1PropertyKey" kindref="compound">PropertyKey</ref>&lt; T &gt; &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="170" column="10" bodyfile="include/ed/update_request.h" bodystart="170" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1UpdateRequest_1abd3cfc4430c538a61d47b09033f20948" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::UpdateRequest::setProperty</definition>
        <argsstring>(const UUID &amp;id, const PropertyKeyDBEntry *entry, const ed::Variant &amp;v)</argsstring>
        <name>setProperty</name>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="structed_1_1PropertyKeyDBEntry" kindref="compound">PropertyKeyDBEntry</ref> *</type>
          <declname>entry</declname>
        </param>
        <param>
          <type>const <ref refid="classed_1_1Variant" kindref="compound">ed::Variant</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="181" column="10" bodyfile="include/ed/update_request.h" bodystart="181" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1UpdateRequest_1a866a7d3564d52c0f6ce93814ccf92c58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::UpdateRequest::setRelation</definition>
        <argsstring>(const UUID &amp;id1, const UUID &amp;id2, const RelationConstPtr &amp;r)</argsstring>
        <name>setRelation</name>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>id1</declname>
        </param>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>id2</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceed_1a7dd282f5effbc2c0386d14d5f7843692" kindref="member">RelationConstPtr</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="141" column="10" bodyfile="include/ed/update_request.h" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1UpdateRequest_1a4d6f2a7588c7c656d8b9f34e59724faf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::UpdateRequest::setShape</definition>
        <argsstring>(const UUID &amp;id, const geo::ShapeConstPtr &amp;shape)</argsstring>
        <name>setShape</name>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegeo_1aa7962fa7450fc503b1c737eae84e10df" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::ShapeConstPtr</ref> &amp;</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="52" column="10" bodyfile="include/ed/update_request.h" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1UpdateRequest_1ad357746a49249a2aab6562943fbf207d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::UpdateRequest::setSyncUpdate</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>setSyncUpdate</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="220" column="10" bodyfile="include/ed/update_request.h" bodystart="220" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1UpdateRequest_1ae6df26ca87514e76fc5576e3446c1900" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::UpdateRequest::setType</definition>
        <argsstring>(const UUID &amp;id, const std::string &amp;type)</argsstring>
        <name>setType</name>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="106" column="10" bodyfile="include/ed/update_request.h" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1UpdateRequest_1a626a602959d707ca4e25f721bb01966c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::UpdateRequest::setVisual</definition>
        <argsstring>(const UUID &amp;id, const geo::ShapeConstPtr &amp;visual)</argsstring>
        <name>setVisual</name>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">UUID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegeo_1aa7962fa7450fc503b1c737eae84e10df" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::ShapeConstPtr</ref> &amp;</type>
          <declname>visual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="53" column="10" bodyfile="include/ed/update_request.h" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1UpdateRequest_1a99eda371de7a34326fb49b2e9123d9fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ed::UpdateRequest::UpdateRequest</definition>
        <argsstring>()</argsstring>
        <name>UpdateRequest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="29" column="5" bodyfile="include/ed/update_request.h" bodystart="29" bodyend="29"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classed_1_1UpdateRequest_1aacf6b9e1ea1473ec3220fea10b7b9e86" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ed::UpdateRequest::flagUpdated</definition>
        <argsstring>(const ed::UUID &amp;id)</argsstring>
        <name>flagUpdated</name>
        <param>
          <type>const <ref refid="classed_1_1UUID" kindref="compound">ed::UUID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/update_request.h" line="225" column="10" bodyfile="include/ed/update_request.h" bodystart="225" bodyend="225"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="9">
        <label>std::map&lt; ed::UUID, tue::config::DataConstPointer &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="14">
        <label>std::map&lt; ed::UUID, double &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="5">
        <label>std::set&lt; ed::UUID &gt;</label>
        <link refid="cpp/container/set" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="3">
        <label>std::map&lt; ed::UUID, std::map&lt; std::string, std::shared_ptr &gt; &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="12">
        <label>std::vector&lt; ed::UUID &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="10">
        <label>std::map&lt; ed::UUID, std::string &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="2">
        <label>std::map&lt; ed::UUID, std::shared_ptr &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="8">
        <label>std::map&lt; ed::UUID, geo::Transform3T &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="7">
        <label>std::map&lt; ed::UUID, std::map&lt; ed::UUID, RelationConstPtr &gt; &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="11">
        <label>std::map&lt; ed::UUID, std::map&lt; Idx, ed::Property &gt; &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="4">
        <label>std::map&lt; ed::UUID, std::vector&lt; MeasurementConstPtr &gt; &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="6">
        <label>std::map&lt; ed::UUID, std::map&lt; std::string, ed::MeasurementConvexHull &gt; &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="1">
        <label>ed::UpdateRequest</label>
        <link refid="classed_1_1UpdateRequest"/>
        <childnode refid="2" relation="usage">
          <edgelabel>visuals</edgelabel>
          <edgelabel>collisions</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>volumes_added</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>measurements</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>updated_entities</edgelabel>
          <edgelabel>removed_entities</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>convex_hulls_new</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>relations</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>poses</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>datas</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>types</edgelabel>
          <edgelabel>added_flags</edgelabel>
          <edgelabel>removed_flags</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>poses_removed</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>type_sets_removed</edgelabel>
          <edgelabel>volumes_removed</edgelabel>
          <edgelabel>type_sets_added</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>existence_probabilities</edgelabel>
          <edgelabel>last_update_timestamps</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>std::map&lt; ed::UUID, std::set&lt; std::string &gt; &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="include/ed/update_request.h" line="25" column="1" bodyfile="include/ed/update_request.h" bodystart="24" bodyend="227"/>
    <listofallmembers>
      <member refid="classed_1_1UpdateRequest_1a0d57d236ab59650e0b0590a9485693ff" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>addData</name></member>
      <member refid="classed_1_1UpdateRequest_1ac17cd77653beb534049f042c45242533" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>added_flags</name></member>
      <member refid="classed_1_1UpdateRequest_1ad6bc4ac39cb4365f23cd6acd0c7d5f85" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>addMeasurement</name></member>
      <member refid="classed_1_1UpdateRequest_1a7e0b356f1a2edf81a6a85793ca4a9899" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>addMeasurements</name></member>
      <member refid="classed_1_1UpdateRequest_1a1aab436a6faad26bf4638a5633f1f5be" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>addType</name></member>
      <member refid="classed_1_1UpdateRequest_1a133ba4a786a92a2d919272568bf726b2" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>addVolume</name></member>
      <member refid="classed_1_1UpdateRequest_1acf3e33190b0c9814726c66e9f2a23404" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>collisions</name></member>
      <member refid="classed_1_1UpdateRequest_1a96005e4c5b090de81f80a713cea7d087" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>convex_hulls_new</name></member>
      <member refid="classed_1_1UpdateRequest_1a9823171acbd06657decd54cb20b285fb" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>datas</name></member>
      <member refid="classed_1_1UpdateRequest_1ae663db540b5127cdd4b9708f289e1a81" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>empty</name></member>
      <member refid="classed_1_1UpdateRequest_1a27c835cbd1a313be858ad753895ffbc4" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>existence_probabilities</name></member>
      <member refid="classed_1_1UpdateRequest_1aacf6b9e1ea1473ec3220fea10b7b9e86" prot="private" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>flagUpdated</name></member>
      <member refid="classed_1_1UpdateRequest_1a7755a68e2ba0b8a772ba577f7f5040af" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>is_sync_update</name></member>
      <member refid="classed_1_1UpdateRequest_1a5caebb26724a48f800e4c316260a2f60" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>last_update_timestamps</name></member>
      <member refid="classed_1_1UpdateRequest_1ae74716d4bc942600225d560c0f6bdb4c" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>measurements</name></member>
      <member refid="classed_1_1UpdateRequest_1a69d6066f0435d366fc3dfa6ad6b5d9b7" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>poses</name></member>
      <member refid="classed_1_1UpdateRequest_1a97e2f497717f73caa8f156ac776919ce" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>poses_removed</name></member>
      <member refid="classed_1_1UpdateRequest_1a8fe7240ffbd57e53ad38b10c926014db" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>properties</name></member>
      <member refid="classed_1_1UpdateRequest_1aaa410ce76f98b6ebc46f58fb8efbea40" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>relations</name></member>
      <member refid="classed_1_1UpdateRequest_1a1bb9d1f8d8112e8cf33624a0ba3aad7f" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>removeConvexHullNew</name></member>
      <member refid="classed_1_1UpdateRequest_1a56291f3bb42bc5677c8bcdc81d66da6b" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>removed_entities</name></member>
      <member refid="classed_1_1UpdateRequest_1ade342a62093f295cac8687c9e88c99bf" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>removed_flags</name></member>
      <member refid="classed_1_1UpdateRequest_1ab05e193cf13efa2fa2b200de876584af" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>removeEntity</name></member>
      <member refid="classed_1_1UpdateRequest_1a83a109d4c93ca648d91d2f0d74af96d3" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>removeFlag</name></member>
      <member refid="classed_1_1UpdateRequest_1af9c0cec8a08dde5ea617fbcd920b5942" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>removePose</name></member>
      <member refid="classed_1_1UpdateRequest_1aeb62399fbb4e8f90702d004fab559a1e" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>removeType</name></member>
      <member refid="classed_1_1UpdateRequest_1a4369434ff57db47df135249a3c40c17a" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>removeVolume</name></member>
      <member refid="classed_1_1UpdateRequest_1aabfdc6c663abb2c6d7967ce8682e46f9" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>setCollision</name></member>
      <member refid="classed_1_1UpdateRequest_1aea900f2a4649f9604a5056b52f98e9f7" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>setConvexHullNew</name></member>
      <member refid="classed_1_1UpdateRequest_1aef4e1b9203de79bea0eb86bc58762217" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>setExistenceProbability</name></member>
      <member refid="classed_1_1UpdateRequest_1a215bd27584687848f27660b8b44dfef0" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>setFlag</name></member>
      <member refid="classed_1_1UpdateRequest_1a7aa50fb4ba20cdf6967851f8f29822e6" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>setLastUpdateTimestamp</name></member>
      <member refid="classed_1_1UpdateRequest_1ae4421e2c1b3ac1074bb8d067655030e6" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>setPose</name></member>
      <member refid="classed_1_1UpdateRequest_1a32c5d7e63c19353d5986360dc51287f3" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>setProperty</name></member>
      <member refid="classed_1_1UpdateRequest_1abd3cfc4430c538a61d47b09033f20948" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>setProperty</name></member>
      <member refid="classed_1_1UpdateRequest_1a866a7d3564d52c0f6ce93814ccf92c58" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>setRelation</name></member>
      <member refid="classed_1_1UpdateRequest_1a4d6f2a7588c7c656d8b9f34e59724faf" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>setShape</name></member>
      <member refid="classed_1_1UpdateRequest_1ad357746a49249a2aab6562943fbf207d" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>setSyncUpdate</name></member>
      <member refid="classed_1_1UpdateRequest_1ae6df26ca87514e76fc5576e3446c1900" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>setType</name></member>
      <member refid="classed_1_1UpdateRequest_1a626a602959d707ca4e25f721bb01966c" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>setVisual</name></member>
      <member refid="classed_1_1UpdateRequest_1a9f8190b73959377dff77f150f12402a2" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>type_sets_added</name></member>
      <member refid="classed_1_1UpdateRequest_1adaa4eddd4c9f3281ea294abd55bae610" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>type_sets_removed</name></member>
      <member refid="classed_1_1UpdateRequest_1a0ea4e36b0492197890447e8fc9563483" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>types</name></member>
      <member refid="classed_1_1UpdateRequest_1a52db0b93e6406284a3df04408dc40139" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>updated_entities</name></member>
      <member refid="classed_1_1UpdateRequest_1a99eda371de7a34326fb49b2e9123d9fb" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>UpdateRequest</name></member>
      <member refid="classed_1_1UpdateRequest_1a58e164f79fb9b0f9f1b9840a6639f025" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>visuals</name></member>
      <member refid="classed_1_1UpdateRequest_1ad6a79a8e4914e8aca95a5db395126067" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>volumes_added</name></member>
      <member refid="classed_1_1UpdateRequest_1aeb07fc06f6a095b9c5f52f13436b3734" prot="public" virt="non-virtual"><scope>ed::UpdateRequest</scope><name>volumes_removed</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
