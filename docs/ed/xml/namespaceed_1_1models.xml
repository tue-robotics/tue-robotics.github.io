<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespaceed_1_1models" kind="namespace" language="C++">
    <compoundname>ed::models</compoundname>
    <innerclass refid="classed_1_1models_1_1ModelLoader" prot="public">ed::models::ModelLoader</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespaceed_1_1models_1abb01a150cd62d7c57c58d947604c502a" prot="public" static="no" strong="yes">
        <type></type>
        <name>LoadType</name>
        <enumvalue id="namespaceed_1_1models_1a295fad07fa42495baf72e03e2b457dc7a9fc5887c030f7a3e19821ebec457e719" prot="public">
          <name>FILE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceed_1_1models_1a295fad07fa42495baf72e03e2b457dc7a7a03bac2692f8d17e2cda1b0721ffd0e" prot="public">
          <name>MODEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The LoadType enum indicates whether to load directly from a file or from a model that is part of the ED_MODEL_PATH. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/models/model_loader.h" line="149" column="1" bodyfile="include/ed/models/model_loader.h" bodystart="148" bodyend="152"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceed_1_1models_1a295fad07fa42495baf72e03e2b457dc7" prot="public" static="no" strong="no">
        <type></type>
        <name>ModelOrFile</name>
        <enumvalue id="namespaceed_1_1models_1a295fad07fa42495baf72e03e2b457dc7acfaced7c682cf08a831eb1e2d62d2306" prot="public">
          <name>MODEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceed_1_1models_1a295fad07fa42495baf72e03e2b457dc7a7a03bac2692f8d17e2cda1b0721ffd0e" prot="public">
          <name>MODEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceed_1_1models_1a295fad07fa42495baf72e03e2b457dc7a11e0c8229af08116ccfdbbd6b27ae95d" prot="public">
          <name>FILE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceed_1_1models_1a295fad07fa42495baf72e03e2b457dc7a9fc5887c030f7a3e19821ebec457e719" prot="public">
          <name>FILE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The ModelOrFile enum This is used to determine the URI type in SDF. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/models/shape_loader_private.h" line="26" column="1" bodyfile="src/models/shape_loader_private.h" bodystart="25" bodyend="29"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceed_1_1models_1abce08aa1bdee27df3208896213b942dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed::models::createCylinder</definition>
        <argsstring>(geo::Shape &amp;shape, double radius, double height, int num_corners=12)</argsstring>
        <name>createCylinder</name>
        <param>
          <type><ref refid="classgeo_1_1Shape" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Shape</ref> &amp;</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>double</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>double</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_corners</declname>
          <defval>12</defval>
        </param>
        <briefdescription>
<para>createCylinder create a mesh from radius and height </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>filled mesh </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radius</parametername>
</parameternamelist>
<parameterdescription>
<para>radius of the cylinder </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>height of the cylinder </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_corners</parametername>
</parameternamelist>
<parameterdescription>
<para>divided the circumference in N points and N+1 lines </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/models/shape_loader.cpp" line="884" column="6" bodyfile="src/models/shape_loader.cpp" bodystart="884" bodyend="920" declfile="include/ed/models/shape_loader.h" declline="25" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1_1models_1a47c177163ea0fd2af761f7eef804605a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed::models::createPolygon</definition>
        <argsstring>(geo::Shape &amp;shape, const std::vector&lt; geo::Vec2 &gt; &amp;points, double height, std::stringstream &amp;error, bool create_bottom=true)</argsstring>
        <name>createPolygon</name>
        <param>
          <type><ref refid="classgeo_1_1Shape" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Shape</ref> &amp;</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="namespacegeo_1a721c6e5b9502c5b4337a1c0b61668362" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Vec2</ref> &gt; &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>double</type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="cpp/io/basic_stringstream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::stringstream</ref> &amp;</type>
          <declname>error</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>create_bottom</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>createPolygon create polygon mesh from points </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>filled mesh </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>points</parametername>
</parameternamelist>
<parameterdescription>
<para>2D points which define the mesh </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>height of the mesh </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>error stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>create_bottom</parametername>
</parameternamelist>
<parameterdescription>
<para>false: open bottom; true: closed bottom </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/models/shape_loader.cpp" line="451" column="6" bodyfile="src/models/shape_loader.cpp" bodystart="451" bodyend="511" declfile="src/models/shape_loader_private.h" declline="86" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1_1models_1a3081a762c755b76395f0a459a39c1693" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed::models::createSphere</definition>
        <argsstring>(geo::Shape &amp;shape, double radius, uint recursion_level=2)</argsstring>
        <name>createSphere</name>
        <param>
          <type><ref refid="classgeo_1_1Shape" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Shape</ref> &amp;</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>double</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>recursion_level</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
<para>createSphere Create a shape of sphere </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object to be filled </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radius</parametername>
</parameternamelist>
<parameterdescription>
<para>radius of the sphere </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>recursion_level</parametername>
</parameternamelist>
<parameterdescription>
<para>number of recursions to smooth the mesh, but rapidly increases the mesh. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/models/shape_loader.cpp" line="953" column="6" bodyfile="src/models/shape_loader.cpp" bodystart="953" bodyend="1029" declfile="include/ed/models/shape_loader.h" declline="45" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1_1models_1aa5a8d0d999e33455adb5f1cb62f9e398" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed::models::findContours</definition>
        <argsstring>(const cv::Mat &amp;image, const geo::Vec2i &amp;p_start, int d_start, std::vector&lt; geo::Vec2i &gt; &amp;points, std::vector&lt; geo::Vec2i &gt; &amp;line_starts, cv::Mat &amp;contour_map)</argsstring>
        <name>findContours</name>
        <param>
          <type>const cv::Mat &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegeo_1a57e107163744ece0b13f534dba061436" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Vec2i</ref> &amp;</type>
          <declname>p_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>d_start</declname>
        </param>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="namespacegeo_1a57e107163744ece0b13f534dba061436" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Vec2i</ref> &gt; &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="namespacegeo_1a57e107163744ece0b13f534dba061436" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Vec2i</ref> &gt; &amp;</type>
          <declname>line_starts</declname>
        </param>
        <param>
          <type>cv::Mat &amp;</type>
          <declname>contour_map</declname>
        </param>
        <briefdescription>
<para>findContours </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>Grayscale image </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_start</parametername>
</parameternamelist>
<parameterdescription>
<para>starting point </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d_start</parametername>
</parameternamelist>
<parameterdescription>
<para>starting direction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>points</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line_starts</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contour_map</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/models/shape_loader.cpp" line="143" column="6" bodyfile="src/models/shape_loader.cpp" bodystart="143" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1_1models_1a98e1918a10b4bfa466a9c630218c3488" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegeo_1aef28655bad0d2414bb89fe6dba28bad1" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::ShapePtr</ref></type>
        <definition>geo::ShapePtr ed::models::getHeightMapShape</definition>
        <argsstring>(const std::string &amp;image_filename, const geo::Vec3 &amp;pos, const double blockheight, const double resolution_x, const double resolution_y, const bool inverted, std::stringstream &amp;error)</argsstring>
        <name>getHeightMapShape</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>image_filename</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegeo_1a7cee017284c7b2011db63a83abfac2c5" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Vec3</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>blockheight</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>resolution_x</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>resolution_y</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>inverted</declname>
        </param>
        <param>
          <type><ref refid="cpp/io/basic_stringstream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::stringstream</ref> &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>getHeightMapShape convert grayscale image in a heigtmap mesh </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>image_filename</parametername>
</parameternamelist>
<parameterdescription>
<para>full path of grayscale image </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>position of the origin of the heigtmap </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blockheight</parametername>
</parameternamelist>
<parameterdescription>
<para>height of the heightmap of max grayscale value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resolution_x</parametername>
</parameternamelist>
<parameterdescription>
<para>resolution in x direction in meters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resolution_y</parametername>
</parameternamelist>
<parameterdescription>
<para>resolution in y direction in meters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inverted</parametername>
</parameternamelist>
<parameterdescription>
<para>false: CV/ROS standard (black = height); true: SDF/GAZEBO (White = height) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>errorerrorstream</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>final mesh; or empty mesh in case of error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/models/shape_loader.cpp" line="400" column="15" bodyfile="src/models/shape_loader.cpp" bodystart="400" bodyend="416" declfile="src/models/shape_loader_private.h" declline="63" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1_1models_1a288241262e0917fae59dd74f2e6efec2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegeo_1aef28655bad0d2414bb89fe6dba28bad1" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::ShapePtr</ref></type>
        <definition>geo::ShapePtr ed::models::getHeightMapShape</definition>
        <argsstring>(const std::string &amp;image_filename, const geo::Vec3 &amp;pos, const geo::Vec3 &amp;size, const bool inverted, std::stringstream &amp;error)</argsstring>
        <name>getHeightMapShape</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>image_filename</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegeo_1a7cee017284c7b2011db63a83abfac2c5" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Vec3</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegeo_1a7cee017284c7b2011db63a83abfac2c5" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Vec3</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>inverted</declname>
        </param>
        <param>
          <type><ref refid="cpp/io/basic_stringstream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::stringstream</ref> &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>getHeightMapShape convert grayscale image in a heigtmap mesh </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>image_filename</parametername>
</parameternamelist>
<parameterdescription>
<para>full path of grayscale image </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>position of the origin of the heigtmap </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the final mesh </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inverted</parametername>
</parameternamelist>
<parameterdescription>
<para>false: CV/ROS standard (black = height); true: SDF/GAZEBO (White = height) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>errorerrorstream</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>final mesh; or empty mesh in case of error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/models/shape_loader.cpp" line="383" column="15" bodyfile="src/models/shape_loader.cpp" bodystart="383" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1_1models_1afec10cc40cff094c6953228713b6391b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegeo_1aef28655bad0d2414bb89fe6dba28bad1" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::ShapePtr</ref></type>
        <definition>geo::ShapePtr ed::models::getHeightMapShape</definition>
        <argsstring>(const std::string &amp;image_filename, tue::config::Reader cfg, std::stringstream &amp;error)</argsstring>
        <name>getHeightMapShape</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>image_filename</declname>
        </param>
        <param>
          <type><ref refid="classtue_1_1config_1_1Reader" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::Reader</ref></type>
          <declname>cfg</declname>
        </param>
        <param>
          <type><ref refid="cpp/io/basic_stringstream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::stringstream</ref> &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>getHeightMapShape convert grayscale image in a heigtmap mesh </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>image_filename</parametername>
</parameternamelist>
<parameterdescription>
<para>image_filename full path of grayscale image </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>reader with model/shape information </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>errorstream </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>final mesh; or empty mesh in case of error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/models/shape_loader.cpp" line="428" column="15" bodyfile="src/models/shape_loader.cpp" bodystart="428" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1_1models_1a026a26ec13c6cdd211540bc2bc278692" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegeo_1aef28655bad0d2414bb89fe6dba28bad1" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::ShapePtr</ref></type>
        <definition>geo::ShapePtr ed::models::getHeightMapShape</definition>
        <argsstring>(cv::Mat &amp;image_orig, const geo::Vec3 &amp;pos, const geo::Vec3 &amp;size, const bool inverted, std::stringstream &amp;error)</argsstring>
        <name>getHeightMapShape</name>
        <param>
          <type>cv::Mat &amp;</type>
          <declname>image_orig</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegeo_1a7cee017284c7b2011db63a83abfac2c5" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Vec3</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegeo_1a7cee017284c7b2011db63a83abfac2c5" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Vec3</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>inverted</declname>
        </param>
        <param>
          <type><ref refid="cpp/io/basic_stringstream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::stringstream</ref> &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>getHeightMapShape convert grayscale image in a heigtmap mesh </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>image_orig</parametername>
</parameternamelist>
<parameterdescription>
<para>grayscale image </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>position of the origin of the heigtmap </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the final mesh </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inverted</parametername>
</parameternamelist>
<parameterdescription>
<para>false: CV/ROS standard (black = height); true: SDF/GAZEBO (White = height) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>errorstream </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>final mesh; or empty mesh in case of error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/models/shape_loader.cpp" line="213" column="15" bodyfile="src/models/shape_loader.cpp" bodystart="213" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1_1models_1adaa540228a9ec6609e5890165221e072" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint</type>
        <definition>uint ed::models::getMiddlePoint</definition>
        <argsstring>(geo::Mesh &amp;mesh, uint i1, uint i2, std::map&lt; unsigned long, uint &gt; cache, double radius)</argsstring>
        <name>getMiddlePoint</name>
        <param>
          <type><ref refid="classgeo_1_1Mesh" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>i2</declname>
        </param>
        <param>
          <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; unsigned long, uint &gt;</type>
          <declname>cache</declname>
        </param>
        <param>
          <type>double</type>
          <declname>radius</declname>
        </param>
        <briefdescription>
<para>getMiddlePoint Gets the middle point of two points in a mesh of a sphere. Uses a cache to not create double points. The new point is placed on the radius of the sphere. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mesh</parametername>
</parameternamelist>
<parameterdescription>
<para>Mesh of the sphere </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i1</parametername>
</parameternamelist>
<parameterdescription>
<para>index of first point </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i2</parametername>
</parameternamelist>
<parameterdescription>
<para>index of second point </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cache</parametername>
</parameternamelist>
<parameterdescription>
<para>cache of the middle points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radius</parametername>
</parameternamelist>
<parameterdescription>
<para>radius of teh sphere </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>index of the inserted point </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/models/shape_loader.cpp" line="924" column="6" bodyfile="src/models/shape_loader.cpp" bodystart="924" bodyend="949" declfile="include/ed/models/shape_loader.h" declline="37" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1_1models_1a5e634211c939fe58fb00a63f2ed5de29" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>static std::string ed::models::getUriPath</definition>
        <argsstring>(std::string type)</argsstring>
        <name>getUriPath</name>
        <param>
          <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>getUriPath searches GAZEBO_MODEL_PATH and GAZEBO_RESOURCH_PATH for file </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>subpath+filename incl. extension </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>full path or empty string in case not found </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/models/shape_loader.cpp" line="78" column="20" bodyfile="src/models/shape_loader.cpp" bodystart="78" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1_1models_1a15de4d87b43ca6ea8b03aadbcf47d389" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::models::loadModel</definition>
        <argsstring>(const LoadType load_type, const std::string &amp;source, ed::UpdateRequest &amp;req)</argsstring>
        <name>loadModel</name>
        <param>
          <type>const <ref refid="namespaceed_1_1models_1abb01a150cd62d7c57c58d947604c502a" kindref="member">LoadType</ref></type>
          <declname>load_type</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="classed_1_1UpdateRequest" kindref="compound">ed::UpdateRequest</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
<para>loadModel loads an ED model from file </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>load_type</parametername>
</parameternamelist>
<parameterdescription>
<para>indicates whether the provided source is a filename or an identifier of a model in the ED_MODEL_PATH </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>source filename or entity type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>update request that will be filled with the data from the model </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/models/load_model.cpp" line="21" column="6" bodyfile="src/models/load_model.cpp" bodystart="21" bodyend="72" declfile="include/ed/models/model_loader.h" declline="163" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1_1models_1a66ffe67b16470a388a818723e0af1ae2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegeo_1aef28655bad0d2414bb89fe6dba28bad1" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::ShapePtr</ref></type>
        <definition>geo::ShapePtr ed::models::loadShape</definition>
        <argsstring>(const std::string &amp;model_path, tue::config::Reader cfg, std::map&lt; std::string, geo::ShapePtr &gt; &amp;shape_cache, std::stringstream &amp;error)</argsstring>
        <name>loadShape</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>model_path</declname>
        </param>
        <param>
          <type><ref refid="classtue_1_1config_1_1Reader" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::Reader</ref></type>
          <declname>cfg</declname>
        </param>
        <param>
          <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>, <ref refid="namespacegeo_1aef28655bad0d2414bb89fe6dba28bad1" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::ShapePtr</ref> &gt; &amp;</type>
          <declname>shape_cache</declname>
        </param>
        <param>
          <type><ref refid="cpp/io/basic_stringstream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::stringstream</ref> &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>loadShape load the shape of a model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>model_path</parametername>
</parameternamelist>
<parameterdescription>
<para>path of the model </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>reader </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shape_cache</parametername>
</parameternamelist>
<parameterdescription>
<para>cache for complex models </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>errorstream </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>final mesh; or empty mesh in case of error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/models/shape_loader.cpp" line="621" column="15" bodyfile="src/models/shape_loader.cpp" bodystart="621" bodyend="880" declfile="src/models/shape_loader_private.h" declline="49" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1_1models_1ae04ca5e148f88494aba191005de7d481" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>std::string ed::models::parseURI</definition>
        <argsstring>(const std::string &amp;uri, ModelOrFile &amp;uri_type)</argsstring>
        <name>parseURI</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>uri</declname>
        </param>
        <param>
          <type><ref refid="namespaceed_1_1models_1a295fad07fa42495baf72e03e2b457dc7" kindref="member">ModelOrFile</ref> &amp;</type>
          <declname>uri_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/models/shape_loader.cpp" line="48" column="13" bodyfile="src/models/shape_loader.cpp" bodystart="48" bodyend="69" declfile="src/models/shape_loader_private.h" declline="39" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1_1models_1a919f46cbb6aa697f900d26df75544715" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::models::readPose</definition>
        <argsstring>(tue::config::Reader &amp;cfg, geo::Pose3D &amp;pose, tue::config::RequiredOrOptional pos_req=tue::config::REQUIRED, tue::config::RequiredOrOptional rot_req=tue::config::OPTIONAL)</argsstring>
        <name>readPose</name>
        <param>
          <type><ref refid="classtue_1_1config_1_1Reader" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::Reader</ref> &amp;</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type><ref refid="namespacegeo_1a6c851aec5e98801c86d46d508de5c05d" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D</ref> &amp;</type>
          <declname>pose</declname>
        </param>
        <param>
          <type><ref refid="namespacetue_1_1config_1a1ad7ac2e22b2d2ecdbdab22fea6f8eeb" kindref="member" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::RequiredOrOptional</ref></type>
          <declname>pos_req</declname>
          <defval><ref refid="namespacetue_1_1config_1a1ad7ac2e22b2d2ecdbdab22fea6f8eeba0ec9805a558257d9f2760c0769646cd8" kindref="member" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::REQUIRED</ref></defval>
        </param>
        <param>
          <type><ref refid="namespacetue_1_1config_1a1ad7ac2e22b2d2ecdbdab22fea6f8eeb" kindref="member" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::RequiredOrOptional</ref></type>
          <declname>rot_req</declname>
          <defval><ref refid="namespacetue_1_1config_1a1ad7ac2e22b2d2ecdbdab22fea6f8eeba4a665c52d925f41ad398fcca3a82f5cb" kindref="member" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::OPTIONAL</ref></defval>
        </param>
        <briefdescription>
<para>readPose read pose into Pose3D. Both ED yaml and SDF. Also reads pos(position) of SDF. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>reader </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pose</parametername>
</parameternamelist>
<parameterdescription>
<para>filled Pose3D pose </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos_req</parametername>
</parameternamelist>
<parameterdescription>
<para>position RequiredOrOptional </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rot_req</parametername>
</parameternamelist>
<parameterdescription>
<para>rotation RequiredOrOptional </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>indicates succes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/models/shape_loader.cpp" line="561" column="6" bodyfile="src/models/shape_loader.cpp" bodystart="561" bodyend="617" declfile="src/models/shape_loader_private.h" declline="74" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1_1models_1aa9317ea9bae5d33e36a48977b98fffb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::models::readSDFGeometry</definition>
        <argsstring>(tue::config::Reader r, geo::CompositeShapePtr &amp;composite, std::stringstream &amp;error, geo::Pose3D pose_offset=geo::Pose3D::identity())</argsstring>
        <name>readSDFGeometry</name>
        <param>
          <type><ref refid="classtue_1_1config_1_1Reader" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::Reader</ref></type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="namespacegeo_1a03e226d6b555df77c3636a7a6940e744" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::CompositeShapePtr</ref> &amp;</type>
          <declname>composite</declname>
        </param>
        <param>
          <type><ref refid="cpp/io/basic_stringstream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::stringstream</ref> &amp;</type>
          <declname>error</declname>
        </param>
        <param>
          <type><ref refid="namespacegeo_1a6c851aec5e98801c86d46d508de5c05d" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D</ref></type>
          <declname>pose_offset</declname>
          <defval><ref refid="classgeo_1_1Transform3T_1a0b569228b1e6eb2889d646158e7e11d1" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Pose3D::identity</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/models/model_loader.cpp" line="29" column="6" bodyfile="src/models/model_loader.cpp" bodystart="29" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1_1models_1aed32010b6970fa70d4bc41912ca620ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed::models::readVec3</definition>
        <argsstring>(tue::config::Reader &amp;cfg, geo::Vec3 &amp;v, tue::config::RequiredOrOptional pos_req=tue::config::REQUIRED)</argsstring>
        <name>readVec3</name>
        <param>
          <type><ref refid="classtue_1_1config_1_1Reader" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::Reader</ref> &amp;</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type><ref refid="namespacegeo_1a7cee017284c7b2011db63a83abfac2c5" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Vec3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="namespacetue_1_1config_1a1ad7ac2e22b2d2ecdbdab22fea6f8eeb" kindref="member" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::RequiredOrOptional</ref></type>
          <declname>pos_req</declname>
          <defval><ref refid="namespacetue_1_1config_1a1ad7ac2e22b2d2ecdbdab22fea6f8eeba0ec9805a558257d9f2760c0769646cd8" kindref="member" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::REQUIRED</ref></defval>
        </param>
        <briefdescription>
<para>readVec3 read x, y and z into a vector </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>reader </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>filled Vec3 vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos_req</parametername>
</parameternamelist>
<parameterdescription>
<para>RequiredOrOptional </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/models/shape_loader.cpp" line="521" column="6" bodyfile="src/models/shape_loader.cpp" bodystart="521" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1_1models_1a5679fc82e6b79564021e0e033e309e30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::models::readVec3Group</definition>
        <argsstring>(tue::config::Reader &amp;cfg, geo::Vec3 &amp;v, const std::string &amp;vector_name, tue::config::RequiredOrOptional=tue::config::REQUIRED)</argsstring>
        <name>readVec3Group</name>
        <param>
          <type><ref refid="classtue_1_1config_1_1Reader" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::Reader</ref> &amp;</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type><ref refid="namespacegeo_1a7cee017284c7b2011db63a83abfac2c5" kindref="member" external="/home/docker/ros/noetic/system/build/docs/geolib2/tags">geo::Vec3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>vector_name</declname>
        </param>
        <param>
          <type><ref refid="namespacetue_1_1config_1a1ad7ac2e22b2d2ecdbdab22fea6f8eeb" kindref="member" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::RequiredOrOptional</ref></type>
          <defval><ref refid="namespacetue_1_1config_1a1ad7ac2e22b2d2ecdbdab22fea6f8eeba0ec9805a558257d9f2760c0769646cd8" kindref="member" external="/home/docker/ros/noetic/system/build/docs/tue_config/tags">tue::config::REQUIRED</ref></defval>
        </param>
        <briefdescription>
<para>readVec3Group read a config group into a Vec3 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>reader </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>filled Vec3 vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vector_name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the reader group to be read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos_req</parametername>
</parameternamelist>
<parameterdescription>
<para>RequiredOrOptional </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>indicates succes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/models/shape_loader.cpp" line="538" column="6" bodyfile="src/models/shape_loader.cpp" bodystart="538" bodyend="557"/>
      </memberdef>
      <memberdef kind="function" id="namespaceed_1_1models_1adaa66084781517c44bbf4401d72edf58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &gt;</type>
        <definition>std::vector&lt; std::string &gt; ed::models::split</definition>
        <argsstring>(const std::string &amp;strToSplit, char delimeter)</argsstring>
        <name>split</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>strToSplit</declname>
        </param>
        <param>
          <type>char</type>
          <declname>delimeter</declname>
        </param>
        <briefdescription>
<para>split Implementation by using delimiter as a character. Multiple delimeters are removed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>strToSplit</parametername>
</parameternamelist>
<parameterdescription>
<para>input string, which is splitted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delimeter</parametername>
</parameternamelist>
<parameterdescription>
<para>char on which the string is split </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>vector of sub-strings </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/models/shape_loader.cpp" line="33" column="13" bodyfile="src/models/shape_loader.cpp" bodystart="33" bodyend="44" declfile="src/models/shape_loader_private.h" declline="37" declcolumn="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/ed/models/model_loader.h" line="16" column="1"/>
  </compounddef>
</doxygen>
