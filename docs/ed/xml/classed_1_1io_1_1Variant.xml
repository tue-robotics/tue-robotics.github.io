<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classed_1_1io_1_1Variant" kind="class" language="C++" prot="public">
    <compoundname>ed::io::Variant</compoundname>
    <includes refid="io_2variant_8h" local="no">variant.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classed_1_1io_1_1Variant_1afead65985bcdf5e54856976098ac5f0d" prot="private" static="no" mutable="no">
        <type>union ed::io::Variant::@0</type>
        <definition>union ed::io::Variant::@0 ed::io::Variant::@1</definition>
        <argsstring></argsstring>
        <name>@1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/io/variant.h" line="52" column="5"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1io_1_1Variant_1ad5b408a6d6542bdeaeea2b94fec76f40" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>std::string ed::io::Variant::s_</definition>
        <argsstring></argsstring>
        <name>s_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/io/variant.h" line="54" column="17" bodyfile="include/ed/io/variant.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1io_1_1Variant_1a367e65b1b038a87f3be1235ac4029ba5" prot="private" static="no" mutable="no">
        <type>char</type>
        <definition>char ed::io::Variant::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/io/variant.h" line="47" column="10" bodyfile="include/ed/io/variant.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classed_1_1io_1_1Variant_1a069576286c6563f33242ad8e27c34e49" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double ed::io::Variant::d_</definition>
        <argsstring></argsstring>
        <name>d_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/io/variant.h" line="51" column="16" bodyfile="include/ed/io/variant.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classed_1_1io_1_1Variant_1aa5ae890e02d07340613cb36a249ea200" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int ed::io::Variant::i_</definition>
        <argsstring></argsstring>
        <name>i_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/io/variant.h" line="50" column="13" bodyfile="include/ed/io/variant.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classed_1_1io_1_1Variant_1accea26a897c8f901143c62f9116584da" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::io::Variant::getValue</definition>
        <argsstring>(bool &amp;v) const</argsstring>
        <name>getValue</name>
        <param>
          <type>bool &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/io/variant.h" line="32" column="10" bodyfile="include/ed/io/variant.h" bodystart="32" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1io_1_1Variant_1a4ba7da8c1b01e7f3c5a9111ae7546515" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::io::Variant::getValue</definition>
        <argsstring>(double &amp;v) const</argsstring>
        <name>getValue</name>
        <param>
          <type>double &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/io/variant.h" line="28" column="10" bodyfile="include/ed/io/variant.h" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1io_1_1Variant_1a1815abbee54d9b317efa0e29bb2d09a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::io::Variant::getValue</definition>
        <argsstring>(float &amp;v) const</argsstring>
        <name>getValue</name>
        <param>
          <type>float &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/io/variant.h" line="29" column="10" bodyfile="include/ed/io/variant.h" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1io_1_1Variant_1ae61ba13a8b550f1d6efd748b75ed4aa5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::io::Variant::getValue</definition>
        <argsstring>(int &amp;v) const</argsstring>
        <name>getValue</name>
        <param>
          <type>int &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/io/variant.h" line="27" column="10" bodyfile="include/ed/io/variant.h" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1io_1_1Variant_1a97e7c3de8e505b352cdb0e38628a005c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::io::Variant::getValue</definition>
        <argsstring>(std::string &amp;v) const</argsstring>
        <name>getValue</name>
        <param>
          <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/io/variant.h" line="30" column="10" bodyfile="include/ed/io/variant.h" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1io_1_1Variant_1a36f56562f7a4b61277c928f978b72364" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::io::Variant::isString</definition>
        <argsstring>() const</argsstring>
        <name>isString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/io/variant.h" line="41" column="10" bodyfile="include/ed/io/variant.h" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1io_1_1Variant_1a813d07edf790a97425a89f5856bea1a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ed::io::Variant::valid</definition>
        <argsstring>() const</argsstring>
        <name>valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/io/variant.h" line="43" column="17" bodyfile="include/ed/io/variant.h" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1io_1_1Variant_1aec88c358662bb49e8ee80f6c9a67d7d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ed::io::Variant::Variant</definition>
        <argsstring>()</argsstring>
        <name>Variant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/io/variant.h" line="20" column="5" bodyfile="include/ed/io/variant.h" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1io_1_1Variant_1a96fd5ef13469687581243d79d04fd06f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ed::io::Variant::Variant</definition>
        <argsstring>(const char *s)</argsstring>
        <name>Variant</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/io/variant.h" line="25" column="5" bodyfile="include/ed/io/variant.h" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1io_1_1Variant_1a9bbc3f404e27fbd3a7dd7028d01284ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ed::io::Variant::Variant</definition>
        <argsstring>(const double &amp;d)</argsstring>
        <name>Variant</name>
        <param>
          <type>const double &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/io/variant.h" line="22" column="5" bodyfile="include/ed/io/variant.h" bodystart="22" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1io_1_1Variant_1aac09e76aea7405abd14c4fef3ec3b6f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ed::io::Variant::Variant</definition>
        <argsstring>(const std::string &amp;s)</argsstring>
        <name>Variant</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/io/variant.h" line="24" column="5" bodyfile="include/ed/io/variant.h" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classed_1_1io_1_1Variant_1affb74bf491fb1638e8ea48f6ddc416e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ed::io::Variant::Variant</definition>
        <argsstring>(int i)</argsstring>
        <name>Variant</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/io/variant.h" line="23" column="5" bodyfile="include/ed/io/variant.h" bodystart="23" bodyend="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classed_1_1io_1_1Variant_1a4a6342dd5dcc602a93492aaa0995918d" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool ed::io::Variant::checkAndGet</definition>
        <argsstring>(const T &amp;v, char type, T &amp;out) const</argsstring>
        <name>checkAndGet</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>char</type>
          <declname>type</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/io/variant.h" line="57" column="17" bodyfile="include/ed/io/variant.h" bodystart="57" bodyend="63"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classed_1_1io_1_1Variant_1aee754e7f4f42fccd10d2a65a8531cee6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref> &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const Variant &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classed_1_1io_1_1Variant" kindref="compound">Variant</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ed/io/variant.h" line="65" column="12" bodyfile="include/ed/io/variant.h" bodystart="65" bodyend="80"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>ed::io::Variant</label>
        <link refid="classed_1_1io_1_1Variant"/>
        <childnode refid="2" relation="usage">
          <edgelabel>s_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::string</label>
        <link refid="cpp/string/basic_string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="include/ed/io/variant.h" line="16" column="1" bodyfile="include/ed/io/variant.h" bodystart="15" bodyend="82"/>
    <listofallmembers>
      <member refid="classed_1_1io_1_1Variant_1a4a6342dd5dcc602a93492aaa0995918d" prot="private" virt="non-virtual"><scope>ed::io::Variant</scope><name>checkAndGet</name></member>
      <member refid="classed_1_1io_1_1Variant_1a069576286c6563f33242ad8e27c34e49" prot="public" virt="non-virtual"><scope>ed::io::Variant</scope><name>d_</name></member>
      <member refid="classed_1_1io_1_1Variant_1ae61ba13a8b550f1d6efd748b75ed4aa5" prot="public" virt="non-virtual"><scope>ed::io::Variant</scope><name>getValue</name></member>
      <member refid="classed_1_1io_1_1Variant_1a4ba7da8c1b01e7f3c5a9111ae7546515" prot="public" virt="non-virtual"><scope>ed::io::Variant</scope><name>getValue</name></member>
      <member refid="classed_1_1io_1_1Variant_1a1815abbee54d9b317efa0e29bb2d09a7" prot="public" virt="non-virtual"><scope>ed::io::Variant</scope><name>getValue</name></member>
      <member refid="classed_1_1io_1_1Variant_1a97e7c3de8e505b352cdb0e38628a005c" prot="public" virt="non-virtual"><scope>ed::io::Variant</scope><name>getValue</name></member>
      <member refid="classed_1_1io_1_1Variant_1accea26a897c8f901143c62f9116584da" prot="public" virt="non-virtual"><scope>ed::io::Variant</scope><name>getValue</name></member>
      <member refid="classed_1_1io_1_1Variant_1aa5ae890e02d07340613cb36a249ea200" prot="public" virt="non-virtual"><scope>ed::io::Variant</scope><name>i_</name></member>
      <member refid="classed_1_1io_1_1Variant_1a36f56562f7a4b61277c928f978b72364" prot="public" virt="non-virtual"><scope>ed::io::Variant</scope><name>isString</name></member>
      <member refid="classed_1_1io_1_1Variant_1aee754e7f4f42fccd10d2a65a8531cee6" prot="private" virt="non-virtual"><scope>ed::io::Variant</scope><name>operator&lt;&lt;</name></member>
      <member refid="classed_1_1io_1_1Variant_1ad5b408a6d6542bdeaeea2b94fec76f40" prot="private" virt="non-virtual"><scope>ed::io::Variant</scope><name>s_</name></member>
      <member refid="classed_1_1io_1_1Variant_1a367e65b1b038a87f3be1235ac4029ba5" prot="private" virt="non-virtual"><scope>ed::io::Variant</scope><name>type_</name></member>
      <member refid="classed_1_1io_1_1Variant_1a813d07edf790a97425a89f5856bea1a3" prot="public" virt="non-virtual"><scope>ed::io::Variant</scope><name>valid</name></member>
      <member refid="classed_1_1io_1_1Variant_1aec88c358662bb49e8ee80f6c9a67d7d6" prot="public" virt="non-virtual"><scope>ed::io::Variant</scope><name>Variant</name></member>
      <member refid="classed_1_1io_1_1Variant_1a9bbc3f404e27fbd3a7dd7028d01284ff" prot="public" virt="non-virtual"><scope>ed::io::Variant</scope><name>Variant</name></member>
      <member refid="classed_1_1io_1_1Variant_1affb74bf491fb1638e8ea48f6ddc416e6" prot="public" virt="non-virtual"><scope>ed::io::Variant</scope><name>Variant</name></member>
      <member refid="classed_1_1io_1_1Variant_1aac09e76aea7405abd14c4fef3ec3b6f6" prot="public" virt="non-virtual"><scope>ed::io::Variant</scope><name>Variant</name></member>
      <member refid="classed_1_1io_1_1Variant_1a96fd5ef13469687581243d79d04fd06f" prot="public" virt="non-virtual"><scope>ed::io::Variant</scope><name>Variant</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
