<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classchallenge__serve__breakfast_1_1serve__breakfast_1_1CheckIfWeHaveItAll" kind="class" language="Python" prot="public">
    <compoundname>challenge_serve_breakfast::serve_breakfast::CheckIfWeHaveItAll</compoundname>
    <basecompoundref prot="public" virt="non-virtual">State</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classchallenge__serve__breakfast_1_1serve__breakfast_1_1CheckIfWeHaveItAll_1ae19b67dbac240ce634f0d5d015c2f3bd" prot="public" static="no" mutable="no">
        <type></type>
        <definition>challenge_serve_breakfast.serve_breakfast.CheckIfWeHaveItAll::items_picked</definition>
        <argsstring></argsstring>
        <name>items_picked</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/challenge_serve_breakfast/serve_breakfast.py" line="26" column="1" bodyfile="src/challenge_serve_breakfast/serve_breakfast.py" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classchallenge__serve__breakfast_1_1serve__breakfast_1_1CheckIfWeHaveItAll_1a00db859b195d36b0416e9a2f65e41be9" prot="public" static="no" mutable="no">
        <type></type>
        <definition>challenge_serve_breakfast.serve_breakfast.CheckIfWeHaveItAll::iteration</definition>
        <argsstring></argsstring>
        <name>iteration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/challenge_serve_breakfast/serve_breakfast.py" line="25" column="1" bodyfile="src/challenge_serve_breakfast/serve_breakfast.py" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classchallenge__serve__breakfast_1_1serve__breakfast_1_1CheckIfWeHaveItAll_1a956803538200d3ac22a4d3114e6982a2" prot="public" static="no" mutable="no">
        <type></type>
        <definition>challenge_serve_breakfast.serve_breakfast.CheckIfWeHaveItAll::max_iterations</definition>
        <argsstring></argsstring>
        <name>max_iterations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/challenge_serve_breakfast/serve_breakfast.py" line="27" column="1" bodyfile="src/challenge_serve_breakfast/serve_breakfast.py" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classchallenge__serve__breakfast_1_1serve__breakfast_1_1CheckIfWeHaveItAll_1a516a3e85326a9ff0570ce937b984d953" prot="public" static="no" mutable="no">
        <type></type>
        <definition>challenge_serve_breakfast.serve_breakfast.CheckIfWeHaveItAll::robot</definition>
        <argsstring></argsstring>
        <name>robot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/challenge_serve_breakfast/serve_breakfast.py" line="24" column="1" bodyfile="src/challenge_serve_breakfast/serve_breakfast.py" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classchallenge__serve__breakfast_1_1serve__breakfast_1_1CheckIfWeHaveItAll_1a59b3a4b8c3b4a53be28f955c15e203d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def challenge_serve_breakfast.serve_breakfast.CheckIfWeHaveItAll.__init__</definition>
        <argsstring>(self, robot, max_iterations=10)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="classchallenge__serve__breakfast_1_1serve__breakfast_1_1CheckIfWeHaveItAll_1a516a3e85326a9ff0570ce937b984d953" kindref="member">robot</ref></type>
          <defname>robot</defname>
        </param>
        <param>
          <type><ref refid="classchallenge__serve__breakfast_1_1serve__breakfast_1_1CheckIfWeHaveItAll_1a956803538200d3ac22a4d3114e6982a2" kindref="member">max_iterations</ref></type>
          <defname>max_iterations</defname>
          <defval>10</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/challenge_serve_breakfast/serve_breakfast.py" line="22" column="1" bodyfile="src/challenge_serve_breakfast/serve_breakfast.py" bodystart="22" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classchallenge__serve__breakfast_1_1serve__breakfast_1_1CheckIfWeHaveItAll_1aee200cfdf998d728c180d90881fed9bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def challenge_serve_breakfast.serve_breakfast.CheckIfWeHaveItAll.execute</definition>
        <argsstring>(self, userdata)</argsstring>
        <name>execute</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>userdata</type>
          <defname>userdata</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/challenge_serve_breakfast/serve_breakfast.py" line="29" column="1" bodyfile="src/challenge_serve_breakfast/serve_breakfast.py" bodystart="29" bodyend="51"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>challenge_serve_breakfast.serve_breakfast.CheckIfWeHaveItAll</label>
        <link refid="classchallenge__serve__breakfast_1_1serve__breakfast_1_1CheckIfWeHaveItAll"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>State</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>challenge_serve_breakfast.serve_breakfast.CheckIfWeHaveItAll</label>
        <link refid="classchallenge__serve__breakfast_1_1serve__breakfast_1_1CheckIfWeHaveItAll"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>State</label>
      </node>
    </collaborationgraph>
    <location file="src/challenge_serve_breakfast/serve_breakfast.py" line="21" column="1" bodyfile="src/challenge_serve_breakfast/serve_breakfast.py" bodystart="21" bodyend="52"/>
    <listofallmembers>
      <member refid="classchallenge__serve__breakfast_1_1serve__breakfast_1_1CheckIfWeHaveItAll_1a59b3a4b8c3b4a53be28f955c15e203d6" prot="public" virt="non-virtual"><scope>challenge_serve_breakfast::serve_breakfast::CheckIfWeHaveItAll</scope><name>__init__</name></member>
      <member refid="classchallenge__serve__breakfast_1_1serve__breakfast_1_1CheckIfWeHaveItAll_1aee200cfdf998d728c180d90881fed9bf" prot="public" virt="non-virtual"><scope>challenge_serve_breakfast::serve_breakfast::CheckIfWeHaveItAll</scope><name>execute</name></member>
      <member refid="classchallenge__serve__breakfast_1_1serve__breakfast_1_1CheckIfWeHaveItAll_1ae19b67dbac240ce634f0d5d015c2f3bd" prot="public" virt="non-virtual"><scope>challenge_serve_breakfast::serve_breakfast::CheckIfWeHaveItAll</scope><name>items_picked</name></member>
      <member refid="classchallenge__serve__breakfast_1_1serve__breakfast_1_1CheckIfWeHaveItAll_1a00db859b195d36b0416e9a2f65e41be9" prot="public" virt="non-virtual"><scope>challenge_serve_breakfast::serve_breakfast::CheckIfWeHaveItAll</scope><name>iteration</name></member>
      <member refid="classchallenge__serve__breakfast_1_1serve__breakfast_1_1CheckIfWeHaveItAll_1a956803538200d3ac22a4d3114e6982a2" prot="public" virt="non-virtual"><scope>challenge_serve_breakfast::serve_breakfast::CheckIfWeHaveItAll</scope><name>max_iterations</name></member>
      <member refid="classchallenge__serve__breakfast_1_1serve__breakfast_1_1CheckIfWeHaveItAll_1a516a3e85326a9ff0570ce937b984d953" prot="public" virt="non-virtual"><scope>challenge_serve_breakfast::serve_breakfast::CheckIfWeHaveItAll</scope><name>robot</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
