<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="navigate__to__and__pick__item_8py" kind="file" language="Python">
    <compoundname>navigate_to_and_pick_item.py</compoundname>
    <innerclass refid="classchallenge__serve__breakfast_1_1navigate__to__and__pick__item_1_1NavigateToAndPickItem" prot="public">challenge_serve_breakfast::navigate_to_and_pick_item::NavigateToAndPickItem</innerclass>
    <innerclass refid="classchallenge__serve__breakfast_1_1navigate__to__and__pick__item_1_1PickItem" prot="public">challenge_serve_breakfast::navigate_to_and_pick_item::PickItem</innerclass>
    <innernamespace refid="namespacechallenge__serve__breakfast_1_1navigate__to__and__pick__item">challenge_serve_breakfast::navigate_to_and_pick_item</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacechallenge__serve__breakfast_1_1navigate__to__and__pick__item" refkind="compound"><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>2022,<sp/>TU/e<sp/>Robotics,<sp/>Netherlands</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>\author<sp/>Rein<sp/>Appeldoorn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>rospkg</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>rospy</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacechallenge__serve__breakfast_1_1tuning" kindref="compound">challenge_serve_breakfast.tuning</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>REQUIRED_ITEMS,<sp/>JOINTS_HANDOVER</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_skills<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>get_robot</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_skills.arm.arms<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>GripperTypes</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pykdl_ros<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>VectorStamped</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_smach_states.human_interaction<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Say</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_smach_states.manipulation.active_grasp_detector<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ActiveGraspDetector</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_smach_states.navigation<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>NavigateToSymbolic</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_smach_states.util.designators<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>EdEntityDesignator,<sp/>ArmDesignator</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>smach<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>StateMachine,<sp/>cb_interface,<sp/>CBState</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="namespacechallenge__serve__breakfast_1_1navigate__to__and__pick__item_1ad0730d332eebe2b06a25159e59bc55b3" refkind="member"><highlight class="normal">item_img_dict<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;bowl&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;images/bowl.jpg&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;spoon&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;images/spoon.jpg&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;cereal_box&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;images/cereal_box.jpg&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;milk_carton&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;images/milk_carton.jpg&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classchallenge__serve__breakfast_1_1navigate__to__and__pick__item_1_1PickItem" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classchallenge__serve__breakfast_1_1navigate__to__and__pick__item_1_1PickItem" kindref="compound">PickItem</ref>(StateMachine):</highlight></codeline>
<codeline lineno="32" refid="classchallenge__serve__breakfast_1_1navigate__to__and__pick__item_1_1PickItem_1a98724630f4f68da767d0650b5787d3ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classchallenge__serve__breakfast_1_1navigate__to__and__pick__item_1_1PickItem_1a98724630f4f68da767d0650b5787d3ac" kindref="member">__init__</ref>(self,<sp/>robot):</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StateMachine.__init__(self,<sp/>outcomes=[</highlight><highlight class="stringliteral">&quot;succeeded&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal">],<sp/>output_keys=[</highlight><highlight class="stringliteral">&quot;item_picked&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>noinspection<sp/>PyProtectedMember</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arm<sp/>=<sp/>robot.get_arm()._arm</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>picked_items<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>armdes<sp/>=<sp/>ArmDesignator(robot,<sp/>{</highlight><highlight class="stringliteral">&quot;required_gripper_types&quot;</highlight><highlight class="normal">:<sp/>[GripperTypes.GRASPING]})</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">send_joint_goal(position_array,<sp/>wait_for_motion_done=True):</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>noinspection<sp/>PyProtectedMember</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arm._send_joint_trajectory([position_array],<sp/>timeout=0.0)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>wait_for_motion_done:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arm.wait_for_motion_done()</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">send_gripper_goal(open_close_string,<sp/>max_torque=0.1):</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arm.gripper.send_goal(open_close_string,<sp/>max_torque=max_torque)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">show_image(package_name,<sp/>path_to_image_in_package):</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/>os.path.join(rospkg.RosPack().get_path(package_name),<sp/>path_to_image_in_package)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>os.path.exists(path):</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(</highlight><highlight class="stringliteral">&quot;Image<sp/>path<sp/>{}<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal">.format(path))</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(</highlight><highlight class="stringliteral">&quot;Showing<sp/>{}&quot;</highlight><highlight class="normal">.format(path))</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.hmi.show_image(path,<sp/>10)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>show<sp/>image<sp/>{}:<sp/>{}&quot;</highlight><highlight class="normal">.format(path,<sp/>e))</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;succeeded&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@cb_interface(outcomes=[</highlight><highlight class="stringliteral">&quot;done&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_rotate(_):</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arm.gripper.send_goal(</highlight><highlight class="stringliteral">&quot;close&quot;</highlight><highlight class="normal">,<sp/>timeout=0.0)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Look<sp/>to<sp/>the<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.head.look_at_point(VectorStamped.from_xyz(0.2,<sp/>-0.2,<sp/>1.75,<sp/>stamp=rospy.Time.now(),</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_id=robot.base_link_frame))</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.head.wait_for_motion_done()</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;done&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@cb_interface(outcomes=[</highlight><highlight class="stringliteral">&quot;done&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_handover_pose(user_data):</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_joint_goal(JOINTS_HANDOVER,<sp/>wait_for_motion_done=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;done&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@cb_interface(outcomes=[</highlight><highlight class="stringliteral">&quot;succeeded&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal">],<sp/>output_keys=[</highlight><highlight class="stringliteral">&quot;item_picked&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_ask_user(user_data):</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftover_items<sp/>=<sp/>[item<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>item<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>REQUIRED_ITEMS<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>item<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>picked_items]</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>leftover_items:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.speech.speak(</highlight><highlight class="stringliteral">&quot;We<sp/>picked<sp/>&apos;m<sp/>all<sp/>apparently&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item_name<sp/>=<sp/>leftover_items[0]</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.speech.speak(</highlight><highlight class="stringliteral">&quot;Please<sp/>put<sp/>the<sp/>{}<sp/>in<sp/>my<sp/>gripper,<sp/>like<sp/>this&quot;</highlight><highlight class="normal">.format(item_name),<sp/>block=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>show_image(</highlight><highlight class="stringliteral">&quot;challenge_serve_breakfast&quot;</highlight><highlight class="normal">,<sp/>item_img_dict[item_name])</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_gripper_goal(</highlight><highlight class="stringliteral">&quot;open&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.sleep(7.0)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_gripper_goal(</highlight><highlight class="stringliteral">&quot;close&quot;</highlight><highlight class="normal">,<sp/>max_torque=0.6)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.head.reset()</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>output<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user_data[</highlight><highlight class="stringliteral">&quot;item_picked&quot;</highlight><highlight class="normal">]<sp/>=<sp/>item_name</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;succeeded&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@cb_interface(outcomes=[</highlight><highlight class="stringliteral">&quot;done&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_carrying_pose(user_data):</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arm.send_joint_goal(</highlight><highlight class="stringliteral">&quot;carrying_pose&quot;</highlight><highlight class="normal">,<sp/>timeout=0.)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.speech.speak(</highlight><highlight class="stringliteral">&quot;Thanks<sp/>for<sp/>that!&quot;</highlight><highlight class="normal">,<sp/>block=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;done&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@cb_interface(outcomes=[</highlight><highlight class="stringliteral">&quot;done&quot;</highlight><highlight class="normal">],<sp/>input_keys=[</highlight><highlight class="stringliteral">&quot;item_picked&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_remember_item(user_data):</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>picked_items.append(user_data[</highlight><highlight class="stringliteral">&quot;item_picked&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;done&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>self:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.add(</highlight><highlight class="stringliteral">&quot;ROTATE&quot;</highlight><highlight class="normal">,<sp/>CBState(_rotate),<sp/>transitions={</highlight><highlight class="stringliteral">&quot;done&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;HANDOVER_POSE&quot;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.add(</highlight><highlight class="stringliteral">&quot;HANDOVER_POSE&quot;</highlight><highlight class="normal">,<sp/>CBState(_handover_pose),<sp/>transitions={</highlight><highlight class="stringliteral">&quot;done&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;ASK_USER&quot;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.add(</highlight><highlight class="stringliteral">&quot;ASK_USER&quot;</highlight><highlight class="normal">,<sp/>CBState(_ask_user),</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&quot;succeeded&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;CHECK_PICK_SUCCESSFUL&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.add(</highlight><highlight class="stringliteral">&quot;CHECK_PICK_SUCCESSFUL&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActiveGraspDetector(robot,<sp/>armdes),</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;true&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;ADD_MM_TO_LIST&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;false&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;SAY_SOMETHING_WENT_WRONG&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;failed&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;cannot_determine&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;SAY_SOMETHING_WENT_WRONG&quot;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.add(</highlight><highlight class="stringliteral">&quot;SAY_SOMETHING_WENT_WRONG&quot;</highlight><highlight class="normal">,<sp/>Say(robot,<sp/></highlight><highlight class="stringliteral">&quot;Oops,<sp/>it<sp/>seems<sp/>I<sp/>missed<sp/>it.<sp/>Lets<sp/>try<sp/>again&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&quot;spoken&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;ASK_USER2&quot;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.add(</highlight><highlight class="stringliteral">&quot;ASK_USER2&quot;</highlight><highlight class="normal">,<sp/>CBState(_ask_user),<sp/>transitions={</highlight><highlight class="stringliteral">&quot;succeeded&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;ADD_ITEM_TO_LIST&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.add(</highlight><highlight class="stringliteral">&quot;ADD_ITEM_TO_LIST&quot;</highlight><highlight class="normal">,<sp/>CBState(_remember_item),<sp/>transitions={</highlight><highlight class="stringliteral">&quot;done&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;CARRYING_POSE&quot;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.add(</highlight><highlight class="stringliteral">&quot;CARRYING_POSE&quot;</highlight><highlight class="normal">,<sp/>CBState(_carrying_pose),<sp/>transitions={</highlight><highlight class="stringliteral">&quot;done&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;succeeded&quot;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="classchallenge__serve__breakfast_1_1navigate__to__and__pick__item_1_1NavigateToAndPickItem" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classchallenge__serve__breakfast_1_1navigate__to__and__pick__item_1_1NavigateToAndPickItem" kindref="compound">NavigateToAndPickItem</ref>(StateMachine):</highlight></codeline>
<codeline lineno="127" refid="classchallenge__serve__breakfast_1_1navigate__to__and__pick__item_1_1NavigateToAndPickItem_1a7c0b0c79e201d4ecd7efd2512bbf3185" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classchallenge__serve__breakfast_1_1navigate__to__and__pick__item_1_1NavigateToAndPickItem_1a7c0b0c79e201d4ecd7efd2512bbf3185" kindref="member">__init__</ref>(self,<sp/>robot,<sp/>pick_spot_id,<sp/>pick_spot_navigation_area):</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StateMachine.__init__(self,<sp/>outcomes=[</highlight><highlight class="stringliteral">&quot;succeeded&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal">],<sp/>output_keys=[</highlight><highlight class="stringliteral">&quot;item_picked&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pick_spot<sp/>=<sp/>EdEntityDesignator(robot=robot,<sp/>uuid=pick_spot_id)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>self:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StateMachine.add(</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NAVIGATE_TO_PICK_SPOT&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavigateToSymbolic(robot,<sp/>{pick_spot:<sp/>pick_spot_navigation_area},<sp/>pick_spot,<sp/>speak=</highlight><highlight class="keyword">False</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&quot;arrived&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;PICK_ITEM&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;unreachable&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;goal_not_defined&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StateMachine.add(</highlight><highlight class="stringliteral">&quot;PICK_ITEM&quot;</highlight><highlight class="normal">,<sp/><ref refid="classchallenge__serve__breakfast_1_1navigate__to__and__pick__item_1_1PickItem" kindref="compound">PickItem</ref>(robot),<sp/>transitions={</highlight><highlight class="stringliteral">&quot;succeeded&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;succeeded&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>rospy.init_node(os.path.splitext(</highlight><highlight class="stringliteral">&quot;test_&quot;</highlight><highlight class="normal"><sp/>+<sp/>os.path.basename(__file__))[0])</highlight></codeline>
<codeline lineno="144" refid="namespacechallenge__serve__breakfast_1_1navigate__to__and__pick__item_1a61176f67ba83ae7c85f369db6bacaf03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>robot_instance<sp/>=<sp/>get_robot(</highlight><highlight class="stringliteral">&quot;hero&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>robot_instance.reset()</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classchallenge__serve__breakfast_1_1navigate__to__and__pick__item_1_1NavigateToAndPickItem" kindref="compound">NavigateToAndPickItem</ref>(robot_instance,<sp/></highlight><highlight class="stringliteral">&quot;dinner_table&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;in_front_of&quot;</highlight><highlight class="normal">).execute()</highlight></codeline>
    </programlisting>
    <location file="src/challenge_serve_breakfast/navigate_to_and_pick_item.py"/>
  </compounddef>
</doxygen>
