image_recognition_util.classification_score_matrix
==================================================

.. py:module:: image_recognition_util.classification_score_matrix


Classes
-------

.. autoapisummary::

   image_recognition_util.classification_score_matrix.ClassificationScoreMatrix


Module Contents
---------------

.. py:class:: ClassificationScoreMatrix(labels)

   Bases: :py:obj:`object`


   
   ClassificationScoreMatrix that holds classification results from a classifier
   :param labels: The possible labels of the classifier


   .. py:attribute:: _labels


   .. py:attribute:: _classifications
      :value: []



   .. py:property:: labels


   .. py:property:: classifications_ground_truth

      List of ground truths per detection


   .. py:property:: classifications_predicted_label

      Return the predicted label per classification


   .. py:property:: classifications_ground_truth_as_score_matrix

      Create a matrix of the one-hot ground truths for each classification
      :return: numpy.ndarray of shape (number of classifications, number of labels)
      Axis 0 indexes over classifications, axis 1 is the score for the class at that position
      (i.e. 1 because this takes the ground truth as input)
      result[x][y] is 1 when the ground truth class for classification x is labels[y]. The other values are 0


   .. py:property:: classifications_scores

      Numpy matrix of scores per label per classification


   .. py:method:: from_file(csv_filename)
      :staticmethod:


      Reads a classification score matrix generated by one one of the classifiers.
      :param csv_filename: The csv filename
      :return: a classification score matrix constructed from the csv_file



   .. py:method:: add_classification(ground_truth, scores)

      Add a classification to the matrix (together with the ground truth)
      :param ground_truth: Ground truth label, should exist in the labels
      :param scores: Score per label for this classification, length should be the same as the number of labels
      :return: match (correct classification), best_label, best_score



   .. py:method:: write_to_file(csv_filename)

      Write the classification score matrix instance to a file
      :param csv_filename: The csv filename



   .. py:method:: __repr__()


