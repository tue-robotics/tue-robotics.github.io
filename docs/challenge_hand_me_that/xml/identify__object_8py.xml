<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="identify__object_8py" kind="file" language="Python">
    <compoundname>identify_object.py</compoundname>
    <innerclass refid="classchallenge__hand__me__that_1_1identify__object_1_1IdentifyObject" prot="public">challenge_hand_me_that::identify_object::IdentifyObject</innerclass>
    <innerclass refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt" prot="public">challenge_hand_me_that::identify_object::PointAt</innerclass>
    <innernamespace refid="namespacechallenge__hand__me__that_1_1identify__object">challenge_hand_me_that::identify_object</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacechallenge__hand__me__that_1_1identify__object" refkind="compound"><highlight class="comment">#<sp/>ROS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>PyKDL<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>kdl</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pykdl_ros<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>FrameStamped,<sp/>VectorStamped</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>rospy</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>smach</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>tf2_ros</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>TU/e<sp/>Robotics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>ed.entity<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Entity</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>robot_smach_states.util.designators<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ds</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_smach_states.designator_iterator<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>IterateDesignator</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_smach_states.human_interaction<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>AskYesNo,<sp/>Say</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_smach_states.manipulation<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>PrepareEdGrasp,<sp/>ResetOnFailure</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_smach_states.navigation<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>NavigateToGrasp</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_smach_states.utility<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>WaitTime</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_skills.arm.arms<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>PublicArm</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_smach_states.utility<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ResolveArm,<sp/>check_arm_requirements</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt" kindref="compound">PointAt</ref>(smach.State):</highlight></codeline>
<codeline lineno="22" refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt_1a861137942398a9e81ecfc6d426582700" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRED_ARM_PROPERTIES<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;required_goals&quot;</highlight><highlight class="normal">:<sp/>[</highlight><highlight class="stringliteral">&quot;carrying_pose&quot;</highlight><highlight class="normal">],<sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt_1aebef013b71a2d6b0dd3474100c38bf0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt_1aebef013b71a2d6b0dd3474100c38bf0c" kindref="member">__init__</ref>(self,<sp/>robot,<sp/>arm,<sp/>point_entity_designator):</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Points<sp/>at<sp/>an<sp/>item,<sp/>similar<sp/>to<sp/>picking<sp/>it<sp/>up.</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>robot:<sp/>robot<sp/>to<sp/>execute<sp/>this<sp/>state<sp/>with</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>arm:<sp/>Designator<sp/>that<sp/>resolves<sp/>to<sp/>the<sp/>arm<sp/>to<sp/>point<sp/>at<sp/>the<sp/>entity<sp/>with.<sp/>E.g.<sp/>UnoccupiedArmDesignator</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>point_entity_designator:<sp/>Designator<sp/>that<sp/>resolves<sp/>to<sp/>the<sp/>entity<sp/>to<sp/>point<sp/>at.<sp/>e.g<sp/>EntityByIdDesignator</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.State.__init__(self,<sp/>outcomes=[</highlight><highlight class="stringliteral">&apos;succeeded&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;failed&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Assign<sp/>member<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt_1ada0d878ce6393b5946b848b2835209f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt_1ada0d878ce6393b5946b848b2835209f1" kindref="member">robot</ref><sp/>=<sp/>robot</highlight></codeline>
<codeline lineno="36" refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt_1abece5c63a0b3c7170d93c7be970918ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt_1abece5c63a0b3c7170d93c7be970918ac" kindref="member">arm_des</ref><sp/>=<sp/>arm</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ds.check_type(point_entity_designator,<sp/>Entity)</highlight></codeline>
<codeline lineno="39" refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt_1ab2af0492f698207def1332d18e1976e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt_1ab2af0492f698207def1332d18e1976e1" kindref="member">point_entity_designator</ref><sp/>=<sp/>point_entity_designator</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt_1a83a307ae59dd764a4662670c2a598dc5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt_1a83a307ae59dd764a4662670c2a598dc5" kindref="member">execute</ref>(self,<sp/>userdata=None):</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point_entity<sp/>=<sp/>self.<ref refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt_1ab2af0492f698207def1332d18e1976e1" kindref="member">point_entity_designator</ref>.resolve()</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>point_entity:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>resolve<sp/>grab_entity&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arm<sp/>=<sp/>self.<ref refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt_1abece5c63a0b3c7170d93c7be970918ac" kindref="member">arm_des</ref>.resolve()</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>arm:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>resolve<sp/>arm&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal_map<sp/>=<sp/>VectorStamped.from_xyz(0,<sp/>0,<sp/>0,<sp/>rospy.Time(),<sp/>point_entity.uuid)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Transform<sp/>to<sp/>base<sp/>link<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal_bl<sp/>=<sp/>self.<ref refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt_1ada0d878ce6393b5946b848b2835209f1" kindref="member">robot</ref>.tf_buffer.transform(goal_map,<sp/>self.<ref refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt_1ada0d878ce6393b5946b848b2835209f1" kindref="member">robot</ref>.base_link_frame)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>goal_bl<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(</highlight><highlight class="stringliteral">&apos;Transformation<sp/>of<sp/>goal<sp/>to<sp/>base<sp/>failed&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;failed&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>tf2_ros.TransformException<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>tfe:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(</highlight><highlight class="stringliteral">&apos;Transformation<sp/>of<sp/>goal<sp/>to<sp/>base<sp/>failed:<sp/>{0}&apos;</highlight><highlight class="normal">.format(tfe))</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;failed&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Make<sp/>sure<sp/>the<sp/>torso<sp/>and<sp/>the<sp/>arm<sp/>are<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt_1ada0d878ce6393b5946b848b2835209f1" kindref="member">robot</ref>.torso.wait_for_motion_done(cancel=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arm.wait_for_motion_done(cancel=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>is<sp/>needed<sp/>because<sp/>the<sp/>head<sp/>is<sp/>not<sp/>entirely<sp/>still<sp/>when<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>look_at_point<sp/>function<sp/>finishes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.sleep(0.5)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Resolve<sp/>the<sp/>entity<sp/>again<sp/>because<sp/>we<sp/>want<sp/>the<sp/>latest<sp/>pose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updated_point_entity<sp/>=<sp/>self.<ref refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt_1ab2af0492f698207def1332d18e1976e1" kindref="member">point_entity_designator</ref>.resolve()<sp/><sp/></highlight><highlight class="comment">#<sp/>type:<sp/>Entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(</highlight><highlight class="stringliteral">&quot;ID<sp/>to<sp/>update:<sp/>{0}&quot;</highlight><highlight class="normal">.format(point_entity.uuid))</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>updated_point_entity:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>resolve<sp/>the<sp/>updated<sp/>grab_entity,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;this<sp/>should<sp/>not<sp/>happen<sp/>[CHECK<sp/>WHY<sp/>THIS<sp/>IS<sp/>HAPPENING]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point_entity<sp/>=<sp/>self.associate(original_entity=point_entity)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(</highlight><highlight class="stringliteral">&quot;Updated<sp/>pose<sp/>of<sp/>entity<sp/>(dx,<sp/>dy,<sp/>dz)<sp/>:<sp/>(%f,<sp/>%f,<sp/>%f)&quot;</highlight><highlight class="normal"><sp/>%</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(updated_point_entity.pose.frame.p.x()<sp/>-<sp/>point_entity.pose.frame.p.x(),</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updated_point_entity.pose.frame.p.y()<sp/>-<sp/>point_entity.pose.frame.p.y(),</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updated_point_entity.pose.frame.p.z()<sp/>-<sp/>point_entity.pose.frame.p.z()))</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point_entity<sp/>=<sp/>updated_point_entity</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point_entity._last_update_time<sp/>=<sp/>rospy.Time()<sp/><sp/></highlight><highlight class="comment">#<sp/>Just<sp/>the<sp/>most<sp/>recent<sp/>time<sp/>ToDo:<sp/>Hack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Grasp<sp/>point<sp/>determination</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal_bl<sp/>=<sp/>self.<ref refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt_1a1453313e9420e088fa3dabc9df4f86d0" kindref="member">_get_pointing_pose</ref>(point_entity)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Pointing<sp/>with<sp/>gripper<sp/>closed<sp/>is<sp/>better</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arm.gripper.send_goal(</highlight><highlight class="stringliteral">&apos;close&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Grasp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(</highlight><highlight class="stringliteral">&apos;Start<sp/>pointing&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>one_pointing_succeeded<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_offset<sp/>=<sp/>0.02<sp/><sp/></highlight><highlight class="comment">#<sp/>2cm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x_offset<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[-0.15,<sp/>0.0]:<sp/><sp/></highlight><highlight class="comment">#<sp/>Hack<sp/>because<sp/>Hero<sp/>does<sp/>not<sp/>pre-grasp<sp/>reliably</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_goal_bl<sp/>=<sp/>FrameStamped(goal_bl.frame<sp/>*<sp/>kdl.Frame(kdl.Vector(x_offset,<sp/>0.0,<sp/>z_offset)),<sp/>rospy.Time(),</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal_bl.header.frame_id)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>arm.send_goal(_goal_bl,<sp/>timeout=20,<sp/>pre_grasp=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>allowed_touch_objects=[point_entity.uuid]):</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt_1ada0d878ce6393b5946b848b2835209f1" kindref="member">robot</ref>.speech.speak(</highlight><highlight class="stringliteral">&apos;I<sp/>am<sp/>sorry<sp/>but<sp/>I<sp/>cannot<sp/>move<sp/>my<sp/>arm<sp/>to<sp/>the<sp/>object<sp/>position&apos;</highlight><highlight class="normal">,<sp/>block=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(</highlight><highlight class="stringliteral">&apos;Pointing<sp/>failed&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arm.reset()</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>one_pointing_succeeded<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>one_pointing_succeeded:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(</highlight><highlight class="stringliteral">&quot;Both<sp/>Pointing<sp/>at<sp/>failed&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;failed&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Retract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(</highlight><highlight class="stringliteral">&apos;Start<sp/>retracting&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roll<sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal_bl.frame.p.x(goal_bl.frame.p.x()<sp/>-<sp/>0.1)<sp/><sp/></highlight><highlight class="comment">#<sp/>Retract<sp/>10<sp/>cm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal_bl.frame.p.z(goal_bl.frame.p.z()<sp/>+<sp/>0.05)<sp/><sp/></highlight><highlight class="comment">#<sp/>Go<sp/>5<sp/>cm<sp/>higher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal_bl.frame.M<sp/>=<sp/>kdl.Rotation.RPY(roll,<sp/>0.0,<sp/>0.0)<sp/><sp/></highlight><highlight class="comment">#<sp/>Update<sp/>the<sp/>roll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(</highlight><highlight class="stringliteral">&quot;Start<sp/>retract&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>arm.send_goal(goal_bl,<sp/>timeout=0.0,<sp/>allowed_touch_objects=[point_entity.uuid]):</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(</highlight><highlight class="stringliteral">&apos;Failed<sp/>retract&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arm.wait_for_motion_done()</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt_1ada0d878ce6393b5946b848b2835209f1" kindref="member">robot</ref>.base.force_drive(-0.125,<sp/>0,<sp/>0,<sp/>2.0)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Close<sp/>gripper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arm.wait_for_motion_done(cancel=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Carrying<sp/>pose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arm.send_joint_goal(</highlight><highlight class="stringliteral">&apos;carrying_pose&apos;</highlight><highlight class="normal">,<sp/>timeout=0.0)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Reset<sp/>head</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt_1ada0d878ce6393b5946b848b2835209f1" kindref="member">robot</ref>.head.cancel_goal()</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;succeeded&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt_1a1453313e9420e088fa3dabc9df4f86d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt_1a1453313e9420e088fa3dabc9df4f86d0" kindref="member">_get_pointing_pose</ref>(self,<sp/>point_entity):</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>type:<sp/>(Entity,<sp/>Arm)<sp/>-&gt;<sp/>FrameStamped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="142"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Computes<sp/>the<sp/>pointing<sp/>pose,<sp/>i.e.,<sp/>where<sp/>the<sp/>grippoint<sp/>should<sp/>go<sp/>to.<sp/>The<sp/>position<sp/>is<sp/>equal<sp/>to<sp/>the<sp/>position<sp/>of</highlight></codeline>
<codeline lineno="143"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>entity.<sp/>The<sp/>orientation<sp/>is<sp/>determined<sp/>such<sp/>that<sp/>it<sp/>easily<sp/>aligns<sp/>with<sp/>the<sp/>robot.</highlight></codeline>
<codeline lineno="144"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="145"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>point_entity:<sp/>(Entity)</highlight></codeline>
<codeline lineno="146"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:return:<sp/>(FrameStamped)</highlight></codeline>
<codeline lineno="147"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>the<sp/>frame<sp/>w.r.t.<sp/>base<sp/>link</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs_robot<sp/>=<sp/>self.<ref refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt_1ada0d878ce6393b5946b848b2835209f1" kindref="member">robot</ref>.tf_buffer.transform(point_entity.pose,<sp/>self.<ref refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt_1ada0d878ce6393b5946b848b2835209f1" kindref="member">robot</ref>.base_link_frame)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>the<sp/>orientation<sp/>to<sp/>unity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs_robot.frame.M<sp/>=<sp/>kdl.Rotation()</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fs_robot</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="classchallenge__hand__me__that_1_1identify__object_1_1IdentifyObject" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classchallenge__hand__me__that_1_1identify__object_1_1IdentifyObject" kindref="compound">IdentifyObject</ref>(smach.StateMachine):</highlight></codeline>
<codeline lineno="158" refid="classchallenge__hand__me__that_1_1identify__object_1_1IdentifyObject_1a84ee085db91a65c3e8a713b9219ccae4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classchallenge__hand__me__that_1_1identify__object_1_1IdentifyObject_1a84ee085db91a65c3e8a713b9219ccae4" kindref="member">__init__</ref>(self,<sp/>robot,<sp/>items,<sp/>arm):</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Has<sp/>the<sp/>robot<sp/>points<sp/>to<sp/>the<sp/>object<sp/>that<sp/>was<sp/>pointed<sp/>to<sp/>by<sp/>the<sp/>operator.</highlight></codeline>
<codeline lineno="161"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="162"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>based<sp/>on<sp/>the<sp/>&apos;Grab&apos;<sp/>state,<sp/>with<sp/>difference<sp/>that<sp/>pickup<sp/>is<sp/>changed,<sp/>i.e.,<sp/>without<sp/>closing<sp/>gripper.</highlight></codeline>
<codeline lineno="163"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="164"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>robot:<sp/>Robot<sp/>to<sp/>use</highlight></codeline>
<codeline lineno="165"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>items:<sp/>Designator<sp/>that<sp/>resolves<sp/>to<sp/>the<sp/>list<sp/>of<sp/>items<sp/>to<sp/>point.</highlight></codeline>
<codeline lineno="166"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>arm:<sp/>Designator<sp/>that<sp/>resolves<sp/>to<sp/>the<sp/>arm<sp/>to<sp/>use<sp/>for<sp/>grabbing.<sp/>Eg.<sp/>UnoccupiedArmDesignator</highlight></codeline>
<codeline lineno="167"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:return:</highlight></codeline>
<codeline lineno="168"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.__init__(self,<sp/>outcomes=[</highlight><highlight class="stringliteral">&apos;done&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;failed&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>types<sp/>or<sp/>designator<sp/>resolve<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ds.check_type(items,<sp/>[Entity])</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ds.check_type(arm,<sp/>PublicArm)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>ds.VariableDesignator(resolve_type=Entity)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>self:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;RESOLVE_ARM&apos;</highlight><highlight class="normal">,<sp/>ResolveArm(arm,<sp/>self),</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;succeeded&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;ITERATE_ITEM&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;failed&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;failed&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&quot;ITERATE_ITEM&quot;</highlight><highlight class="normal">,<sp/>IterateDesignator(items,<sp/>item.writeable),</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;next&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;NAVIGATE_TO_POINT&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;stop_iteration&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;failed&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;NAVIGATE_TO_POINT&apos;</highlight><highlight class="normal">,<sp/>NavigateToGrasp(robot,<sp/>arm,<sp/>item),</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;unreachable&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;WAIT_BEFORE_NAVIGATE_BACKUP&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;goal_not_defined&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;WAIT_BEFORE_NAVIGATE_BACKUP&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;arrived&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;PREPARE_POINT&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&quot;ASK_OPERATOR_MOVE&quot;</highlight><highlight class="normal">,<sp/>Say(robot,<sp/></highlight><highlight class="stringliteral">&quot;Operator,<sp/>please<sp/>move,<sp/>so<sp/>I<sp/>can<sp/>drive&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;spoken&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;WAIT_BEFORE_NAVIGATE_BACKUP&quot;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;WAIT_BEFORE_NAVIGATE_BACKUP&apos;</highlight><highlight class="normal">,<sp/>WaitTime(robot,<sp/>5),</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;waited&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;NAVIGATE_TO_POINT_BACKUP&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;preempted&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;failed&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;NAVIGATE_TO_POINT_BACKUP&apos;</highlight><highlight class="normal">,<sp/>NavigateToGrasp(robot,<sp/>arm,<sp/>item),</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;unreachable&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;RESET_FAILURE&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;goal_not_defined&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;RESET_FAILURE&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;arrived&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;PREPARE_POINT&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;PREPARE_POINT&apos;</highlight><highlight class="normal">,<sp/>PrepareEdGrasp(robot,<sp/>arm,<sp/>item),</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;succeeded&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;POINT&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;failed&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;RESET_FAILURE&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;POINT&apos;</highlight><highlight class="normal">,<sp/><ref refid="classchallenge__hand__me__that_1_1identify__object_1_1PointAt" kindref="compound">PointAt</ref>(robot,<sp/>arm,<sp/>item),</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;succeeded&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;ASK_CORRECT&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;failed&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;RESET_FAILURE&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&quot;ASK_CORRECT&quot;</highlight><highlight class="normal">,<sp/>Say(robot,<sp/>[</highlight><highlight class="stringliteral">&quot;Is<sp/>this<sp/>the<sp/>object<sp/>you<sp/>pointed<sp/>at?&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Did<sp/>I<sp/>got<sp/>the<sp/>correct<sp/>object?&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>],</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>look_at_standing_person=</highlight><highlight class="keyword">True</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;spoken&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;LISTEN_ANSWER&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&quot;LISTEN_ANSWER&quot;</highlight><highlight class="normal">,<sp/>AskYesNo(robot),</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;yes&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;done&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;no&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;SAY_ANOTHER_GUESS&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;no_result&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;done&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&quot;SAY_ANOTHER_GUESS&quot;</highlight><highlight class="normal">,<sp/>Say(robot,<sp/>[</highlight><highlight class="stringliteral">&quot;Let<sp/>me<sp/>maybe<sp/>try<sp/>another<sp/>guess&quot;</highlight><highlight class="normal">]),</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;spoken&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;ITERATE_ITEM&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&quot;RESET_FAILURE&quot;</highlight><highlight class="normal">,<sp/>ResetOnFailure(robot,<sp/>arm),</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;done&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;failed&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_arm_requirements(self,<sp/>robot)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_skills<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>get_robot_from_argv</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>rospy.init_node(</highlight><highlight class="stringliteral">&quot;test_grasping&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="namespacechallenge__hand__me__that_1_1identify__object_1a72372fb607848562d3a3c9c7141f5cc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>robot<sp/>=<sp/>get_robot_from_argv(index=1)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="namespacechallenge__hand__me__that_1_1identify__object_1aaf5bad3acdd1325f9034b8f42b22e76d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>entity_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;test_item&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="namespacechallenge__hand__me__that_1_1identify__object_1a2e0729d3dd74f3ed9727dbe72c5b7dce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pose<sp/>=<sp/>FrameStamped(kdl.Frame(kdl.Rotation.RPY(0,<sp/>0,<sp/>-1.57),<sp/>kdl.Vector(2.6,<sp/>-0.95,<sp/>0.8)),<sp/>rospy.Time.now(),<sp/></highlight><highlight class="stringliteral">&quot;map&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="namespacechallenge__hand__me__that_1_1identify__object_1a1c71db53e74730a68562254e6c899a98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>robot.ed.update_entity(uuid=entity_id,<sp/>frame_stamped=pose)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="namespacechallenge__hand__me__that_1_1identify__object_1a8d26047f822a9192fe11ed97f75c5d3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>item<sp/>=<sp/>ds.EdEntityDesignator(robot,<sp/>uuid=entity_id)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="namespacechallenge__hand__me__that_1_1identify__object_1aaeaacae7e020963ba24d4ed6e88487dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>arm<sp/>=<sp/>ds.UnoccupiedArmDesignator(robot,<sp/>{})</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="namespacechallenge__hand__me__that_1_1identify__object_1ad9aacac993271a896e6ee5e913692e73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>grab_state<sp/>=<sp/><ref refid="classchallenge__hand__me__that_1_1identify__object_1_1IdentifyObject" kindref="compound">IdentifyObject</ref>(robot,<sp/>item,<sp/>arm)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>grab_state.execute()</highlight></codeline>
    </programlisting>
    <location file="src/challenge_hand_me_that/identify_object.py"/>
  </compounddef>
</doxygen>
