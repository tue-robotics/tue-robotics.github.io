<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classKDL_1_1Jacobian" kind="class" language="C++" prot="public">
    <compoundname>KDL::Jacobian</compoundname>
    <includes refid="jacobian_8hpp" local="no">jacobian.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classKDL_1_1Jacobian_1a73cf18ac91b146f6be631a941d5bee3c" prot="public" static="no" mutable="no">
        <type>EIGEN_MAKE_ALIGNED_OPERATOR_NEW Eigen::Matrix&lt; double, 6, Eigen::Dynamic &gt;</type>
        <definition>EIGEN_MAKE_ALIGNED_OPERATOR_NEW Eigen::Matrix&lt;double,6,Eigen::Dynamic&gt; KDL::Jacobian::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jacobian.hpp" line="41" column="23" bodyfile="src/jacobian.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classKDL_1_1Jacobian_1ae435c8487ef02ae21276084d3e8bbb13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KDL::Jacobian::changeBase</definition>
        <argsstring>(const Rotation &amp;rot)</argsstring>
        <name>changeBase</name>
        <param>
          <type>const <ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref> &amp;</type>
          <declname>rot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jacobian.hpp" line="75" column="14" bodyfile="src/jacobian.cpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Jacobian_1aabd1e9f0b2ff5f1dead2376958d27c95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KDL::Jacobian::changeRefFrame</definition>
        <argsstring>(const Frame &amp;frame)</argsstring>
        <name>changeRefFrame</name>
        <param>
          <type>const <ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref> &amp;</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jacobian.hpp" line="76" column="14" bodyfile="src/jacobian.cpp" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Jacobian_1a1002c33bdcab53e26c98d1521eb3ac7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KDL::Jacobian::changeRefPoint</definition>
        <argsstring>(const Vector &amp;base_AB)</argsstring>
        <name>changeRefPoint</name>
        <param>
          <type>const <ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>base_AB</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jacobian.hpp" line="74" column="14" bodyfile="src/jacobian.cpp" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Jacobian_1a8a49fa5fc952d21c4bbda5eb7c9e1e3a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int KDL::Jacobian::columns</definition>
        <argsstring>() const</argsstring>
        <name>columns</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jacobian.hpp" line="63" column="22" bodyfile="src/jacobian.cpp" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Jacobian_1aa09bdd0332f437bd2db55a62f750aced" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref></type>
        <definition>Twist KDL::Jacobian::getColumn</definition>
        <argsstring>(unsigned int i) const</argsstring>
        <name>getColumn</name>
        <param>
          <type>unsigned int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jacobian.hpp" line="71" column="15" bodyfile="src/jacobian.cpp" bodystart="144" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Jacobian_1a7c31b866a79a9e20b9ace52654ad5da9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KDL::Jacobian::Jacobian</definition>
        <argsstring>()</argsstring>
        <name>Jacobian</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jacobian.hpp" line="42" column="9" bodyfile="src/jacobian.cpp" bodystart="26" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Jacobian_1a2337e899a223ddda2298e40f1f07408d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KDL::Jacobian::Jacobian</definition>
        <argsstring>(const Jacobian &amp;arg)</argsstring>
        <name>Jacobian</name>
        <param>
          <type>const <ref refid="classKDL_1_1Jacobian" kindref="compound">Jacobian</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jacobian.hpp" line="44" column="9" bodyfile="src/jacobian.cpp" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Jacobian_1a8ec8969578a37ecc4ec0970699efa827" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KDL::Jacobian::Jacobian</definition>
        <argsstring>(unsigned int nr_of_columns)</argsstring>
        <name>Jacobian</name>
        <param>
          <type>unsigned int</type>
          <declname>nr_of_columns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jacobian.hpp" line="43" column="18" bodyfile="src/jacobian.cpp" bodystart="31" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Jacobian_1aab6805004b0d808aae598c4ae5f62b39" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KDL::Jacobian::operator!=</definition>
        <argsstring>(const Jacobian &amp;arg) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classKDL_1_1Jacobian" kindref="compound">Jacobian</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jacobian.hpp" line="53" column="14" bodyfile="src/jacobian.cpp" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Jacobian_1ae2068e50defa55976433185af2d7edc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double &amp; KDL::Jacobian::operator()</definition>
        <argsstring>(unsigned int i, unsigned int j)</argsstring>
        <name>operator()</name>
        <param>
          <type>unsigned int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jacobian.hpp" line="61" column="16" bodyfile="src/jacobian.cpp" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Jacobian_1a7e2f4f5e97aea744adfc317ebcf419a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double KDL::Jacobian::operator()</definition>
        <argsstring>(unsigned int i, unsigned int j) const</argsstring>
        <name>operator()</name>
        <param>
          <type>unsigned int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jacobian.hpp" line="60" column="16" bodyfile="src/jacobian.cpp" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Jacobian_1ab95a6f65d3bcb8b5da78675269ba8c19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKDL_1_1Jacobian" kindref="compound">Jacobian</ref> &amp;</type>
        <definition>Jacobian &amp; KDL::Jacobian::operator=</definition>
        <argsstring>(const Jacobian &amp;arg)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classKDL_1_1Jacobian" kindref="compound">Jacobian</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Allocates memory if size of this and argument is different. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jacobian.hpp" line="50" column="18" bodyfile="src/jacobian.cpp" bodystart="42" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Jacobian_1aa1775b56d478901f1c2a8f45e8596ea9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KDL::Jacobian::operator==</definition>
        <argsstring>(const Jacobian &amp;arg) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classKDL_1_1Jacobian" kindref="compound">Jacobian</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jacobian.hpp" line="52" column="14" bodyfile="src/jacobian.cpp" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Jacobian_1a296c2e29811beb1769221f26d3e6556b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KDL::Jacobian::resize</definition>
        <argsstring>(unsigned int newNrOfColumns)</argsstring>
        <name>resize</name>
        <param>
          <type>unsigned int</type>
          <declname>newNrOfColumns</declname>
        </param>
        <briefdescription>
<para>Allocates memory for new size (can break realtime behavior) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jacobian.hpp" line="47" column="14" bodyfile="src/jacobian.cpp" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Jacobian_1aceb13ee968c4b162b1f944539a5e0616" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int KDL::Jacobian::rows</definition>
        <argsstring>() const</argsstring>
        <name>rows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jacobian.hpp" line="62" column="22" bodyfile="src/jacobian.cpp" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Jacobian_1a3979dcece692c902643548f8979f6ca2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KDL::Jacobian::setColumn</definition>
        <argsstring>(unsigned int i, const Twist &amp;t)</argsstring>
        <name>setColumn</name>
        <param>
          <type>unsigned int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jacobian.hpp" line="72" column="14" bodyfile="src/jacobian.cpp" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Jacobian_1a0b490c8dbac5d3c5359b0852fd7d60dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KDL::Jacobian::~Jacobian</definition>
        <argsstring>()</argsstring>
        <name>~Jacobian</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jacobian.hpp" line="58" column="9" bodyfile="src/jacobian.cpp" bodystart="49" bodyend="52"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classKDL_1_1Jacobian_1afa20159619bb7d3ab4faae7fd0c03691" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool changeBase</definition>
        <argsstring>(const Jacobian &amp;src1, const Rotation &amp;rot, Jacobian &amp;dest)</argsstring>
        <name>changeBase</name>
        <param>
          <type>const <ref refid="classKDL_1_1Jacobian" kindref="compound">Jacobian</ref> &amp;</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref> &amp;</type>
          <declname>rot</declname>
        </param>
        <param>
          <type><ref refid="classKDL_1_1Jacobian" kindref="compound">Jacobian</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jacobian.hpp" line="68" column="21" bodyfile="src/jacobian.cpp" bodystart="103" bodyend="110"/>
      </memberdef>
      <memberdef kind="friend" id="classKDL_1_1Jacobian_1a902ce9b838d432690e2a681c5796eddf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool changeRefFrame</definition>
        <argsstring>(const Jacobian &amp;src1, const Frame &amp;frame, Jacobian &amp;dest)</argsstring>
        <name>changeRefFrame</name>
        <param>
          <type>const <ref refid="classKDL_1_1Jacobian" kindref="compound">Jacobian</ref> &amp;</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref> &amp;</type>
          <declname>frame</declname>
        </param>
        <param>
          <type><ref refid="classKDL_1_1Jacobian" kindref="compound">Jacobian</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jacobian.hpp" line="69" column="21" bodyfile="src/jacobian.cpp" bodystart="117" bodyend="124"/>
      </memberdef>
      <memberdef kind="friend" id="classKDL_1_1Jacobian_1a3fd746c265191f8a79ab9fae0d137479" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool changeRefPoint</definition>
        <argsstring>(const Jacobian &amp;src1, const Vector &amp;base_AB, Jacobian &amp;dest)</argsstring>
        <name>changeRefPoint</name>
        <param>
          <type>const <ref refid="classKDL_1_1Jacobian" kindref="compound">Jacobian</ref> &amp;</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>base_AB</declname>
        </param>
        <param>
          <type><ref refid="classKDL_1_1Jacobian" kindref="compound">Jacobian</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jacobian.hpp" line="67" column="21" bodyfile="src/jacobian.cpp" bodystart="89" bodyend="96"/>
      </memberdef>
      <memberdef kind="friend" id="classKDL_1_1Jacobian_1a8ced141c7bfa86fa4060e4aba25c25bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool Equal</definition>
        <argsstring>(const Jacobian &amp;a, const Jacobian &amp;b, double eps)</argsstring>
        <name>Equal</name>
        <param>
          <type>const <ref refid="classKDL_1_1Jacobian" kindref="compound">Jacobian</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Jacobian" kindref="compound">Jacobian</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jacobian.hpp" line="55" column="21" bodyfile="src/jacobian.cpp" bodystart="136" bodyend="142"/>
      </memberdef>
      <memberdef kind="friend" id="classKDL_1_1Jacobian_1a8221041dd47084d0d186ec31ad2a4ccd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend void</type>
        <definition>void SetToZero</definition>
        <argsstring>(Jacobian &amp;jac)</argsstring>
        <name>SetToZero</name>
        <param>
          <type><ref refid="classKDL_1_1Jacobian" kindref="compound">Jacobian</ref> &amp;</type>
          <declname>jac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jacobian.hpp" line="65" column="21" bodyfile="src/jacobian.cpp" bodystart="79" bodyend="82"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/jacobian.hpp" line="37" column="1" bodyfile="src/jacobian.hpp" bodystart="36" bodyend="79"/>
    <listofallmembers>
      <member refid="classKDL_1_1Jacobian_1afa20159619bb7d3ab4faae7fd0c03691" prot="public" virt="non-virtual"><scope>KDL::Jacobian</scope><name>changeBase</name></member>
      <member refid="classKDL_1_1Jacobian_1ae435c8487ef02ae21276084d3e8bbb13" prot="public" virt="non-virtual"><scope>KDL::Jacobian</scope><name>changeBase</name></member>
      <member refid="classKDL_1_1Jacobian_1a902ce9b838d432690e2a681c5796eddf" prot="public" virt="non-virtual"><scope>KDL::Jacobian</scope><name>changeRefFrame</name></member>
      <member refid="classKDL_1_1Jacobian_1aabd1e9f0b2ff5f1dead2376958d27c95" prot="public" virt="non-virtual"><scope>KDL::Jacobian</scope><name>changeRefFrame</name></member>
      <member refid="classKDL_1_1Jacobian_1a3fd746c265191f8a79ab9fae0d137479" prot="public" virt="non-virtual"><scope>KDL::Jacobian</scope><name>changeRefPoint</name></member>
      <member refid="classKDL_1_1Jacobian_1a1002c33bdcab53e26c98d1521eb3ac7d" prot="public" virt="non-virtual"><scope>KDL::Jacobian</scope><name>changeRefPoint</name></member>
      <member refid="classKDL_1_1Jacobian_1a8a49fa5fc952d21c4bbda5eb7c9e1e3a" prot="public" virt="non-virtual"><scope>KDL::Jacobian</scope><name>columns</name></member>
      <member refid="classKDL_1_1Jacobian_1a73cf18ac91b146f6be631a941d5bee3c" prot="public" virt="non-virtual"><scope>KDL::Jacobian</scope><name>data</name></member>
      <member refid="classKDL_1_1Jacobian_1a8ced141c7bfa86fa4060e4aba25c25bc" prot="public" virt="non-virtual"><scope>KDL::Jacobian</scope><name>Equal</name></member>
      <member refid="classKDL_1_1Jacobian_1aa09bdd0332f437bd2db55a62f750aced" prot="public" virt="non-virtual"><scope>KDL::Jacobian</scope><name>getColumn</name></member>
      <member refid="classKDL_1_1Jacobian_1a7c31b866a79a9e20b9ace52654ad5da9" prot="public" virt="non-virtual"><scope>KDL::Jacobian</scope><name>Jacobian</name></member>
      <member refid="classKDL_1_1Jacobian_1a8ec8969578a37ecc4ec0970699efa827" prot="public" virt="non-virtual"><scope>KDL::Jacobian</scope><name>Jacobian</name></member>
      <member refid="classKDL_1_1Jacobian_1a2337e899a223ddda2298e40f1f07408d" prot="public" virt="non-virtual"><scope>KDL::Jacobian</scope><name>Jacobian</name></member>
      <member refid="classKDL_1_1Jacobian_1aab6805004b0d808aae598c4ae5f62b39" prot="public" virt="non-virtual"><scope>KDL::Jacobian</scope><name>operator!=</name></member>
      <member refid="classKDL_1_1Jacobian_1a7e2f4f5e97aea744adfc317ebcf419a5" prot="public" virt="non-virtual"><scope>KDL::Jacobian</scope><name>operator()</name></member>
      <member refid="classKDL_1_1Jacobian_1ae2068e50defa55976433185af2d7edc5" prot="public" virt="non-virtual"><scope>KDL::Jacobian</scope><name>operator()</name></member>
      <member refid="classKDL_1_1Jacobian_1ab95a6f65d3bcb8b5da78675269ba8c19" prot="public" virt="non-virtual"><scope>KDL::Jacobian</scope><name>operator=</name></member>
      <member refid="classKDL_1_1Jacobian_1aa1775b56d478901f1c2a8f45e8596ea9" prot="public" virt="non-virtual"><scope>KDL::Jacobian</scope><name>operator==</name></member>
      <member refid="classKDL_1_1Jacobian_1a296c2e29811beb1769221f26d3e6556b" prot="public" virt="non-virtual"><scope>KDL::Jacobian</scope><name>resize</name></member>
      <member refid="classKDL_1_1Jacobian_1aceb13ee968c4b162b1f944539a5e0616" prot="public" virt="non-virtual"><scope>KDL::Jacobian</scope><name>rows</name></member>
      <member refid="classKDL_1_1Jacobian_1a3979dcece692c902643548f8979f6ca2" prot="public" virt="non-virtual"><scope>KDL::Jacobian</scope><name>setColumn</name></member>
      <member refid="classKDL_1_1Jacobian_1a8221041dd47084d0d186ec31ad2a4ccd" prot="public" virt="non-virtual"><scope>KDL::Jacobian</scope><name>SetToZero</name></member>
      <member refid="classKDL_1_1Jacobian_1a0b490c8dbac5d3c5359b0852fd7d60dc" prot="public" virt="non-virtual"><scope>KDL::Jacobian</scope><name>~Jacobian</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
