<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classKDL_1_1Stiffness" kind="class" language="C++" prot="public">
    <compoundname>KDL::Stiffness</compoundname>
    <includes refid="stiffness_8hpp" local="no">stiffness.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classKDL_1_1Stiffness_1a2c15a0add6f032471e878108d8db4f89" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double KDL::Stiffness::data[6]</definition>
        <argsstring>[6]</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/stiffness.hpp" line="37" column="12" bodyfile="src/stiffness.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classKDL_1_1Stiffness_1a3389cf42d4d822b3a1e1b50dfaf27bf7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref></type>
        <definition>Twist KDL::Stiffness::Inverse</definition>
        <argsstring>(const Wrench &amp;w) const</argsstring>
        <name>Inverse</name>
        <param>
          <type>const <ref refid="classKDL_1_1Wrench" kindref="compound">Wrench</ref> &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/stiffness.hpp" line="69" column="7" bodyfile="src/stiffness.hpp" bodystart="69" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Stiffness_1a08bce72f9057c08ba35a692a8a22306a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; KDL::Stiffness::operator[]</definition>
        <argsstring>(int i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/stiffness.hpp" line="63" column="12" bodyfile="src/stiffness.hpp" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Stiffness_1a8b4e438265ae2a90a9104fedd6b9b54d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double KDL::Stiffness::operator[]</definition>
        <argsstring>(int i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/stiffness.hpp" line="66" column="12" bodyfile="src/stiffness.hpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Stiffness_1ae3c8057cabecf153f4396589584d1f37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KDL::Stiffness::Stiffness</definition>
        <argsstring>()</argsstring>
        <name>Stiffness</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/stiffness.hpp" line="39" column="1" bodyfile="src/stiffness.hpp" bodystart="39" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Stiffness_1a8819fb776e0f653aad41edb6e11a7f0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KDL::Stiffness::Stiffness</definition>
        <argsstring>(double *d)</argsstring>
        <name>Stiffness</name>
        <param>
          <type>double *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/stiffness.hpp" line="47" column="5" bodyfile="src/stiffness.hpp" bodystart="47" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Stiffness_1a2b49811126d67a3288ff94dd3febe00c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KDL::Stiffness::Stiffness</definition>
        <argsstring>(double x, double y, double z, double rx, double ry, double rz)</argsstring>
        <name>Stiffness</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ry</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/stiffness.hpp" line="55" column="5" bodyfile="src/stiffness.hpp" bodystart="55" bodyend="62"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Preliminary class to implement <ref refid="classKDL_1_1Stiffness" kindref="compound">Stiffness</ref>, only diagonal stiffness is implemented no transformations provided...</para>
<para>Implements a diagonal stiffness matrix. first 3 elements are stiffness for translations last 3 elements are stiffness for rotations. </para>
    </detaileddescription>
    <location file="src/stiffness.hpp" line="36" column="16" bodyfile="src/stiffness.hpp" bodystart="36" bodyend="79"/>
    <listofallmembers>
      <member refid="classKDL_1_1Stiffness_1a2c15a0add6f032471e878108d8db4f89" prot="private" virt="non-virtual"><scope>KDL::Stiffness</scope><name>data</name></member>
      <member refid="classKDL_1_1Stiffness_1a3389cf42d4d822b3a1e1b50dfaf27bf7" prot="public" virt="non-virtual"><scope>KDL::Stiffness</scope><name>Inverse</name></member>
      <member refid="classKDL_1_1Stiffness_1a08bce72f9057c08ba35a692a8a22306a" prot="public" virt="non-virtual"><scope>KDL::Stiffness</scope><name>operator[]</name></member>
      <member refid="classKDL_1_1Stiffness_1a8b4e438265ae2a90a9104fedd6b9b54d" prot="public" virt="non-virtual"><scope>KDL::Stiffness</scope><name>operator[]</name></member>
      <member refid="classKDL_1_1Stiffness_1ae3c8057cabecf153f4396589584d1f37" prot="public" virt="non-virtual"><scope>KDL::Stiffness</scope><name>Stiffness</name></member>
      <member refid="classKDL_1_1Stiffness_1a8819fb776e0f653aad41edb6e11a7f0c" prot="public" virt="non-virtual"><scope>KDL::Stiffness</scope><name>Stiffness</name></member>
      <member refid="classKDL_1_1Stiffness_1a2b49811126d67a3288ff94dd3febe00c" prot="public" virt="non-virtual"><scope>KDL::Stiffness</scope><name>Stiffness</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
