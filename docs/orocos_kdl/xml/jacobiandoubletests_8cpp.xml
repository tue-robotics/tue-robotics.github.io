<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="jacobiandoubletests_8cpp" kind="file" language="C++">
    <compoundname>jacobiandoubletests.cpp</compoundname>
    <includes refid="jacobiandoubletests_8hpp" local="yes">jacobiandoubletests.hpp</includes>
    <incdepgraph>
      <node id="7">
        <label>iostream</label>
        <link refid="cpp/header/iostream" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="1">
        <label>jacobiandoubletests.cpp</label>
        <link refid="jacobiandoubletests_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>kdl/test_macros.h</label>
      </node>
      <node id="5">
        <label>jacobiantests.hpp</label>
        <link refid="jacobiantests_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>jacobiandoubletests.hpp</label>
        <link refid="jacobiandoubletests_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>iomanip</label>
        <link refid="cpp/header/iomanip" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="8">
        <label>string</label>
        <link refid="cpp/header/string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="3">
        <label>kdl/jacobianexpr.hpp</label>
      </node>
      <node id="4">
        <label>kdl/jacobiandouble.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceKDL">KDL</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="jacobiandoubletests_8hpp" kindref="compound">jacobiandoubletests.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceKDL" kindref="compound">KDL</ref><sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="namespaceKDL_1a6cdf7ff2b751c04cb8c248d064cf3eff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceKDL_1a6cdf7ff2b751c04cb8c248d064cf3eff" kindref="member">checkDoubleOps</ref>()<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>KDL_CTX;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1checkUnary_1aa152d994c3b07dc26c94efdcd599d795" kindref="member">checkUnary&lt;OpTan,double&gt;::check</ref>();</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1checkUnary_1aa152d994c3b07dc26c94efdcd599d795" kindref="member">checkUnary&lt;OpExp,double&gt;::check</ref>();</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1checkUnary_1aa152d994c3b07dc26c94efdcd599d795" kindref="member">checkUnary&lt;OpSin,double&gt;::check</ref>();</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1checkUnary_1aa152d994c3b07dc26c94efdcd599d795" kindref="member">checkUnary&lt;OpCos,double&gt;::check</ref>();</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1checkUnary_1aa152d994c3b07dc26c94efdcd599d795" kindref="member">checkUnary&lt;OpLog,double&gt;::check</ref>(&amp;<ref refid="namespaceKDL_1ac19da83b9af24139e10645a8d85a46be" kindref="member">posrandom</ref>);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1checkUnary_1aa152d994c3b07dc26c94efdcd599d795" kindref="member">checkUnary&lt;OpAtan,double&gt;::check</ref>();</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1checkUnary_1aa152d994c3b07dc26c94efdcd599d795" kindref="member">checkUnary&lt;OpAsin,double&gt;::check</ref>(&amp;<ref refid="namespaceKDL_1a910caae27c05e168ff9e13c1e1646319" kindref="member">random</ref>,1E-8,1E-3);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1checkUnary_1aa152d994c3b07dc26c94efdcd599d795" kindref="member">checkUnary&lt;OpAcos,double&gt;::check</ref>(&amp;<ref refid="namespaceKDL_1a910caae27c05e168ff9e13c1e1646319" kindref="member">random</ref>,1E-8,1E-3);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1checkUnary_1aa152d994c3b07dc26c94efdcd599d795" kindref="member">checkUnary&lt;OpSqrt,double&gt;::check</ref>(&amp;<ref refid="namespaceKDL_1ac19da83b9af24139e10645a8d85a46be" kindref="member">posrandom</ref>);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1checkBinary_1a955dd597762e13eb7e47d53a038d9e82" kindref="member">checkBinary&lt;OpMult,double,double&gt;::check</ref>();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1checkBinary_1a955dd597762e13eb7e47d53a038d9e82" kindref="member">checkBinary&lt;OpAtan2,double,double&gt;::check</ref>(1E-8,1E-3);</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="22"><highlight class="comment">void<sp/>checkDoubleCodeSize()<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/><sp/>PV&lt;double&gt;<sp/>a(2);</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/>PV&lt;double&gt;<sp/>b(2);</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/><sp/>PV&lt;double&gt;<sp/>res(2);</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/>random(a);</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/><sp/>random(b);</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/><sp/>checkDoubleCodeSizeMult(a,b,res);</highlight></codeline>
<codeline lineno="29"><highlight class="comment">}</highlight></codeline>
<codeline lineno="30"><highlight class="comment">**<sp/>VISUAL<sp/>C++<sp/>assembler<sp/>code<sp/>:<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>Shows<sp/>that<sp/>there<sp/>is<sp/>little<sp/>overhead<sp/>from<sp/>the<sp/>framework</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>There<sp/>is<sp/>some<sp/>overhead<sp/>because<sp/>of<sp/>the<sp/>isConstant()<sp/>tests,<sp/>but<sp/>this<sp/>pays<sp/>itself<sp/>back</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>if<sp/>one<sp/>deals<sp/>with<sp/>e.g.<sp/>Frames<sp/>or<sp/>higher<sp/>number<sp/>of<sp/>derivatives.</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment">?checkDoubleCodeSizeMult@@YAXABV?$PV@N@@0AAV1@@Z<sp/>PROC<sp/>NEAR<sp/>;<sp/>checkDoubleCodeSizeMult,<sp/>COMDAT</highlight></codeline>
<codeline lineno="36"><highlight class="comment"></highlight></codeline>
<codeline lineno="37"><highlight class="comment">;<sp/>60<sp/><sp/><sp/>:<sp/><sp/><sp/><sp/>res<sp/>=<sp/>a*b;</highlight></codeline>
<codeline lineno="38"><highlight class="comment"></highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/><sp/>mov<sp/>ecx,<sp/>DWORD<sp/>PTR<sp/>_b$[esp-4]</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/><sp/>mov<sp/>edx,<sp/>DWORD<sp/>PTR<sp/>_res$[esp-4]</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/><sp/>push<sp/><sp/><sp/><sp/>esi</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/><sp/>mov<sp/>esi,<sp/>DWORD<sp/>PTR<sp/>_a$[esp]</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/><sp/>fld<sp/>QWORD<sp/>PTR<sp/>[esi]</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/><sp/>mov<sp/>al,<sp/>BYTE<sp/>PTR<sp/>[esi+16]</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/><sp/>test<sp/><sp/><sp/><sp/>al,<sp/>al</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/><sp/>fmul<sp/><sp/><sp/><sp/>QWORD<sp/>PTR<sp/>[ecx]</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/><sp/>push<sp/><sp/><sp/><sp/>edi</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/><sp/>fstp<sp/><sp/><sp/><sp/>QWORD<sp/>PTR<sp/>[edx]</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/><sp/>je<sp/><sp/>SHORT<sp/>$L13435</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/><sp/>mov<sp/>al,<sp/>BYTE<sp/>PTR<sp/>[ecx+16]</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/><sp/>test<sp/><sp/><sp/><sp/>al,<sp/>al</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/><sp/>je<sp/><sp/>SHORT<sp/>$L13435</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/><sp/>mov<sp/>eax,<sp/>1</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/>jmp<sp/>SHORT<sp/>$L13436</highlight></codeline>
<codeline lineno="55"><highlight class="comment">$L13435:</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/><sp/>xor<sp/>eax,<sp/>eax</highlight></codeline>
<codeline lineno="57"><highlight class="comment">$L13436:</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/>test<sp/><sp/><sp/><sp/>al,<sp/>al</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/>mov<sp/>BYTE<sp/>PTR<sp/>[edx+16],<sp/>al</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/>jne<sp/>SHORT<sp/>$L13419</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/>mov<sp/>edi,<sp/>DWORD<sp/>PTR<sp/>[edx+12]</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/>xor<sp/>eax,<sp/>eax</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/>test<sp/><sp/><sp/><sp/>edi,<sp/>edi</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/>jle<sp/>SHORT<sp/>$L13419</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/>mov<sp/>edx,<sp/>DWORD<sp/>PTR<sp/>[edx+8]</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/>push<sp/><sp/><sp/><sp/>ebx</highlight></codeline>
<codeline lineno="67"><highlight class="comment">$L13417:</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/><sp/>mov<sp/>bl,<sp/>BYTE<sp/>PTR<sp/>[esi+16]</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/>test<sp/><sp/><sp/><sp/>bl,<sp/>bl</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/>je<sp/><sp/>SHORT<sp/>$L13446</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/>mov<sp/>ebx,<sp/>DWORD<sp/>PTR<sp/>[ecx+8]</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/>fld<sp/>QWORD<sp/>PTR<sp/>[ebx+eax*8]</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/>fmul<sp/><sp/><sp/><sp/>QWORD<sp/>PTR<sp/>[esi]</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/>jmp<sp/>SHORT<sp/>$L13445</highlight></codeline>
<codeline lineno="75"><highlight class="comment">$L13446:</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/>mov<sp/>bl,<sp/>BYTE<sp/>PTR<sp/>[ecx+16]</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/>test<sp/><sp/><sp/><sp/>bl,<sp/>bl</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/>je<sp/><sp/>SHORT<sp/>$L13447</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/>mov<sp/>ebx,<sp/>DWORD<sp/>PTR<sp/>[esi+8]</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/>fld<sp/>QWORD<sp/>PTR<sp/>[ebx+eax*8]</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/>fmul<sp/><sp/><sp/><sp/>QWORD<sp/>PTR<sp/>[ecx]</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/>jmp<sp/>SHORT<sp/>$L13445</highlight></codeline>
<codeline lineno="83"><highlight class="comment">$L13447:</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/>mov<sp/>ebx,<sp/>DWORD<sp/>PTR<sp/>[ecx+8]</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/><sp/>fld<sp/>QWORD<sp/>PTR<sp/>[ebx+eax*8]</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/>mov<sp/>ebx,<sp/>DWORD<sp/>PTR<sp/>[esi+8]</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/><sp/>fmul<sp/><sp/><sp/><sp/>QWORD<sp/>PTR<sp/>[esi]</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/><sp/>fld<sp/>QWORD<sp/>PTR<sp/>[ebx+eax*8]</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/><sp/>fmul<sp/><sp/><sp/><sp/>QWORD<sp/>PTR<sp/>[ecx]</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/>faddp<sp/><sp/><sp/>ST(1),<sp/>ST(0)</highlight></codeline>
<codeline lineno="91"><highlight class="comment">$L13445:</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/>fstp<sp/><sp/><sp/><sp/>QWORD<sp/>PTR<sp/>[edx+eax*8]</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/>inc<sp/>eax</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/>cmp<sp/>eax,<sp/>edi</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/>jl<sp/><sp/>SHORT<sp/>$L13417</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/>pop<sp/>ebx</highlight></codeline>
<codeline lineno="97"><highlight class="comment">$L13419:</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/>pop<sp/>edi</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/>pop<sp/>esi</highlight></codeline>
<codeline lineno="100"><highlight class="comment"></highlight></codeline>
<codeline lineno="101"><highlight class="comment">;<sp/>61<sp/><sp/><sp/>:<sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="comment"></highlight></codeline>
<codeline lineno="103"><highlight class="comment">*</highlight></codeline>
<codeline lineno="104"><highlight class="comment">void<sp/>checkDoubleCodeSizeMult(const<sp/>PV&lt;double&gt;&amp;<sp/>a,const<sp/>PV&lt;double&gt;&amp;<sp/>b,PV&lt;double&gt;&amp;<sp/>res)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>a*b;</highlight></codeline>
<codeline lineno="106"><highlight class="comment">}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tests/jacobiandoubletests.cpp"/>
  </compounddef>
</doxygen>
