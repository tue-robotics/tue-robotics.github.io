<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classFramesTest" kind="class" language="C++" prot="public">
    <compoundname>FramesTest</compoundname>
    <basecompoundref prot="public" virt="non-virtual">TestFixture</basecompoundref>
    <includes refid="framestest_8hpp" local="no">framestest.hpp</includes>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classFramesTest_1a89bc8587d864695b6d18890ca1ad859a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FramesTest::CPPUNIT_TEST</definition>
        <argsstring>(TestEuler)</argsstring>
        <name>CPPUNIT_TEST</name>
        <param>
          <type><ref refid="classFramesTest_1a4ae25315e1e309c05ac65517814ed44c" kindref="member">TestEuler</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="22" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1abdc662c3e3e88e7e05d17cd1054038aa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FramesTest::CPPUNIT_TEST</definition>
        <argsstring>(TestFrame)</argsstring>
        <name>CPPUNIT_TEST</name>
        <param>
          <type><ref refid="classFramesTest_1ab230d71edae7c2f4e8311e0d9f4ea7e2" kindref="member">TestFrame</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="19" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1a22ddea3851d2da3a966cfad4e38c2a05" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FramesTest::CPPUNIT_TEST</definition>
        <argsstring>(TestGetRotAngle)</argsstring>
        <name>CPPUNIT_TEST</name>
        <param>
          <type><ref refid="classFramesTest_1acdf82029010980d2a241737e070d2bd5" kindref="member">TestGetRotAngle</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="23" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1a65fe77596d5eb6c10683e444463fdb1a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FramesTest::CPPUNIT_TEST</definition>
        <argsstring>(TestJntArray)</argsstring>
        <name>CPPUNIT_TEST</name>
        <param>
          <type><ref refid="classFramesTest_1a29fb5d2e31d115c518e0518c140d77c3" kindref="member">TestJntArray</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="20" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1a61dd931462e3dacb24ce64e12bdd64be" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FramesTest::CPPUNIT_TEST</definition>
        <argsstring>(TestQuaternion)</argsstring>
        <name>CPPUNIT_TEST</name>
        <param>
          <type><ref refid="classFramesTest_1a073ebed9f5d592e1398bd9d4d876f1ab" kindref="member">TestQuaternion</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="18" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1a93d8f0d4896eb550c48f5ece9ddb5b5b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FramesTest::CPPUNIT_TEST</definition>
        <argsstring>(TestRotation)</argsstring>
        <name>CPPUNIT_TEST</name>
        <param>
          <type><ref refid="classFramesTest_1a8d0c9e755c8dfdd6dd5d2b65fb9b080a" kindref="member">TestRotation</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="17" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1a9161df8cb70dfce260b364e8cef1ce40" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FramesTest::CPPUNIT_TEST</definition>
        <argsstring>(TestRotationDiff)</argsstring>
        <name>CPPUNIT_TEST</name>
        <param>
          <type><ref refid="classFramesTest_1a6e1672d7d09c85475738619fee679238" kindref="member">TestRotationDiff</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="21" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1ab9c55c91096b39c78c6be55605100a36" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FramesTest::CPPUNIT_TEST</definition>
        <argsstring>(TestTwist)</argsstring>
        <name>CPPUNIT_TEST</name>
        <param>
          <type><ref refid="classFramesTest_1a4b85f7bafc513776d56cb1129d43d0a6" kindref="member">TestTwist</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="15" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1a122d90e629217451893eb5229ea864b2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FramesTest::CPPUNIT_TEST</definition>
        <argsstring>(TestVector)</argsstring>
        <name>CPPUNIT_TEST</name>
        <param>
          <type><ref refid="classFramesTest_1acfd43a9701b93ed185e40d675d189b43" kindref="member">TestVector</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="13" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1a7ca51b01ee939d7201389202bd2b6355" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FramesTest::CPPUNIT_TEST</definition>
        <argsstring>(TestVector2DNorm)</argsstring>
        <name>CPPUNIT_TEST</name>
        <param>
          <type><ref refid="classFramesTest_1a50de11520106cc79ad512e45276a1210" kindref="member">TestVector2DNorm</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="14" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1a817839503ae2d645e8a9cd8fdf6ddeb8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FramesTest::CPPUNIT_TEST</definition>
        <argsstring>(TestWrench)</argsstring>
        <name>CPPUNIT_TEST</name>
        <param>
          <type><ref refid="classFramesTest_1a4f443fd67818600c13ceec79930dee29" kindref="member">TestWrench</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="16" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1aa31950cda15d465b1b05132c6165a978" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FramesTest::CPPUNIT_TEST_SUITE</definition>
        <argsstring>(FramesTest)</argsstring>
        <name>CPPUNIT_TEST_SUITE</name>
        <param>
          <type><ref refid="classFramesTest" kindref="compound">FramesTest</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="12" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1a51f119b775b046fd76506c2e25b38de5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FramesTest::CPPUNIT_TEST_SUITE_END</definition>
        <argsstring>()</argsstring>
        <name>CPPUNIT_TEST_SUITE_END</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="24" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1a71e3a57abe60d480f855b8467d097149" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FramesTest::TestArbitraryRotation</definition>
        <argsstring>(const std::string &amp;msg, const KDL::Vector &amp;v, const double angle, const double expectedAngle, const KDL::Vector &amp;expectedVector)</argsstring>
        <name>TestArbitraryRotation</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>expectedAngle</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref> &amp;</type>
          <declname>expectedVector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="52" column="10" bodyfile="tests/framestest.cpp" bodystart="195" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1a1fdceb21b5c8e4e27269b0c38e6e51cb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FramesTest::TestOneRotation</definition>
        <argsstring>(const std::string &amp;msg, const KDL::Rotation &amp;R, const double expectedAngle, const KDL::Vector &amp;expectedAxis)</argsstring>
        <name>TestOneRotation</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Rotation" kindref="compound">KDL::Rotation</ref> &amp;</type>
          <declname>R</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>expectedAngle</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref> &amp;</type>
          <declname>expectedAxis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="48" column="10" bodyfile="tests/framestest.cpp" bodystart="176" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1af197eec57e0a370a5d8eae7e588552e4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FramesTest::TestOneRotationDiff</definition>
        <argsstring>(const std::string &amp;msg, const KDL::Rotation &amp;R_a_b1, const KDL::Rotation &amp;R_a_b2, const KDL::Vector &amp;expectedDiff)</argsstring>
        <name>TestOneRotationDiff</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Rotation" kindref="compound">KDL::Rotation</ref> &amp;</type>
          <declname>R_a_b1</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Rotation" kindref="compound">KDL::Rotation</ref> &amp;</type>
          <declname>R_a_b2</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref> &amp;</type>
          <declname>expectedDiff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="60" column="10" bodyfile="tests/framestest.cpp" bodystart="525" bodyend="532"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1a012d5ca74e559c18fe1c9b0d2393c32e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FramesTest::TestRangeArbitraryRotation</definition>
        <argsstring>(const std::string &amp;msg, const KDL::Vector &amp;v, const KDL::Vector &amp;expectedVector)</argsstring>
        <name>TestRangeArbitraryRotation</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref> &amp;</type>
          <declname>expectedVector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="57" column="10" bodyfile="tests/framestest.cpp" bodystart="312" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1aa67cab09050573e5053b38963b97faf3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FramesTest::TestRotation2</definition>
        <argsstring>(const Vector &amp;v, double a, double b, double c)</argsstring>
        <name>TestRotation2</name>
        <param>
          <type>const <ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <param>
          <type>double</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="47" column="10" bodyfile="tests/framestest.cpp" bodystart="116" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1a01c3cbf2780d75edd9f22466fabe2999" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FramesTest::TestTwist2</definition>
        <argsstring>(Twist &amp;t)</argsstring>
        <name>TestTwist2</name>
        <param>
          <type><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="45" column="10" bodyfile="tests/framestest.cpp" bodystart="58" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1a31da8977e650dc2f7a2ae571ac5cc4ac" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FramesTest::TestVector2</definition>
        <argsstring>(Vector &amp;v)</argsstring>
        <name>TestVector2</name>
        <param>
          <type><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="44" column="10" bodyfile="tests/framestest.cpp" bodystart="17" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1a9a62e6a223b3678c41f4c81b4cad99c6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FramesTest::TestWrench2</definition>
        <argsstring>(Wrench &amp;w)</argsstring>
        <name>TestWrench2</name>
        <param>
          <type><ref refid="classKDL_1_1Wrench" kindref="compound">Wrench</ref> &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="46" column="10" bodyfile="tests/framestest.cpp" bodystart="87" bodyend="102"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classFramesTest_1afb428074be72f4480af785c808943d2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FramesTest::setUp</definition>
        <argsstring>()</argsstring>
        <name>setUp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="27" column="10" bodyfile="tests/framestest.cpp" bodystart="9" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1a7707dbb990067450b8cbedbc333d13d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FramesTest::tearDown</definition>
        <argsstring>()</argsstring>
        <name>tearDown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="28" column="10" bodyfile="tests/framestest.cpp" bodystart="13" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1a4ae25315e1e309c05ac65517814ed44c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FramesTest::TestEuler</definition>
        <argsstring>()</argsstring>
        <name>TestEuler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="40" column="6" bodyfile="tests/framestest.cpp" bodystart="242" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1ab230d71edae7c2f4e8311e0d9f4ea7e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FramesTest::TestFrame</definition>
        <argsstring>()</argsstring>
        <name>TestFrame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="36" column="10" bodyfile="tests/framestest.cpp" bodystart="628" bodyend="671"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1acdf82029010980d2a241737e070d2bd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FramesTest::TestGetRotAngle</definition>
        <argsstring>()</argsstring>
        <name>TestGetRotAngle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="41" column="6" bodyfile="tests/framestest.cpp" bodystart="427" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1a29fb5d2e31d115c518e0518c140d77c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FramesTest::TestJntArray</definition>
        <argsstring>()</argsstring>
        <name>TestJntArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="37" column="10" bodyfile="tests/framestest.cpp" bodystart="681" bodyend="730"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1aa4b53330c3183d118fbcd7156426125d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FramesTest::TestJntArrayWhenEmpty</definition>
        <argsstring>()</argsstring>
        <name>TestJntArrayWhenEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="38" column="10" bodyfile="tests/framestest.cpp" bodystart="733" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1a073ebed9f5d592e1398bd9d4d876f1ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FramesTest::TestQuaternion</definition>
        <argsstring>()</argsstring>
        <name>TestQuaternion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="35" column="10" bodyfile="tests/framestest.cpp" bodystart="483" bodyend="523"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1a8d0c9e755c8dfdd6dd5d2b65fb9b080a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FramesTest::TestRotation</definition>
        <argsstring>()</argsstring>
        <name>TestRotation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="34" column="10" bodyfile="tests/framestest.cpp" bodystart="355" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1a6e1672d7d09c85475738619fee679238" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FramesTest::TestRotationDiff</definition>
        <argsstring>()</argsstring>
        <name>TestRotationDiff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="39" column="6" bodyfile="tests/framestest.cpp" bodystart="534" bodyend="626"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1a4b85f7bafc513776d56cb1129d43d0a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FramesTest::TestTwist</definition>
        <argsstring>()</argsstring>
        <name>TestTwist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="32" column="10" bodyfile="tests/framestest.cpp" bodystart="75" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1acfd43a9701b93ed185e40d675d189b43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FramesTest::TestVector</definition>
        <argsstring>()</argsstring>
        <name>TestVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="30" column="10" bodyfile="tests/framestest.cpp" bodystart="33" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1a50de11520106cc79ad512e45276a1210" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FramesTest::TestVector2DNorm</definition>
        <argsstring>()</argsstring>
        <name>TestVector2DNorm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="31" column="10" bodyfile="tests/framestest.cpp" bodystart="48" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classFramesTest_1a4f443fd67818600c13ceec79930dee29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FramesTest::TestWrench</definition>
        <argsstring>()</argsstring>
        <name>TestWrench</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.hpp" line="33" column="10" bodyfile="tests/framestest.cpp" bodystart="104" bodyend="114"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>TestFixture</label>
      </node>
      <node id="1">
        <label>FramesTest</label>
        <link refid="classFramesTest"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>TestFixture</label>
      </node>
      <node id="1">
        <label>FramesTest</label>
        <link refid="classFramesTest"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="tests/framestest.hpp" line="11" column="1" bodyfile="tests/framestest.hpp" bodystart="10" bodyend="65"/>
    <listofallmembers>
      <member refid="classFramesTest_1a122d90e629217451893eb5229ea864b2" prot="private" virt="non-virtual"><scope>FramesTest</scope><name>CPPUNIT_TEST</name></member>
      <member refid="classFramesTest_1a7ca51b01ee939d7201389202bd2b6355" prot="private" virt="non-virtual"><scope>FramesTest</scope><name>CPPUNIT_TEST</name></member>
      <member refid="classFramesTest_1ab9c55c91096b39c78c6be55605100a36" prot="private" virt="non-virtual"><scope>FramesTest</scope><name>CPPUNIT_TEST</name></member>
      <member refid="classFramesTest_1a817839503ae2d645e8a9cd8fdf6ddeb8" prot="private" virt="non-virtual"><scope>FramesTest</scope><name>CPPUNIT_TEST</name></member>
      <member refid="classFramesTest_1a93d8f0d4896eb550c48f5ece9ddb5b5b" prot="private" virt="non-virtual"><scope>FramesTest</scope><name>CPPUNIT_TEST</name></member>
      <member refid="classFramesTest_1a61dd931462e3dacb24ce64e12bdd64be" prot="private" virt="non-virtual"><scope>FramesTest</scope><name>CPPUNIT_TEST</name></member>
      <member refid="classFramesTest_1abdc662c3e3e88e7e05d17cd1054038aa" prot="private" virt="non-virtual"><scope>FramesTest</scope><name>CPPUNIT_TEST</name></member>
      <member refid="classFramesTest_1a65fe77596d5eb6c10683e444463fdb1a" prot="private" virt="non-virtual"><scope>FramesTest</scope><name>CPPUNIT_TEST</name></member>
      <member refid="classFramesTest_1a9161df8cb70dfce260b364e8cef1ce40" prot="private" virt="non-virtual"><scope>FramesTest</scope><name>CPPUNIT_TEST</name></member>
      <member refid="classFramesTest_1a89bc8587d864695b6d18890ca1ad859a" prot="private" virt="non-virtual"><scope>FramesTest</scope><name>CPPUNIT_TEST</name></member>
      <member refid="classFramesTest_1a22ddea3851d2da3a966cfad4e38c2a05" prot="private" virt="non-virtual"><scope>FramesTest</scope><name>CPPUNIT_TEST</name></member>
      <member refid="classFramesTest_1aa31950cda15d465b1b05132c6165a978" prot="private" virt="non-virtual"><scope>FramesTest</scope><name>CPPUNIT_TEST_SUITE</name></member>
      <member refid="classFramesTest_1a51f119b775b046fd76506c2e25b38de5" prot="private" virt="non-virtual"><scope>FramesTest</scope><name>CPPUNIT_TEST_SUITE_END</name></member>
      <member refid="classFramesTest_1afb428074be72f4480af785c808943d2e" prot="public" virt="non-virtual"><scope>FramesTest</scope><name>setUp</name></member>
      <member refid="classFramesTest_1a7707dbb990067450b8cbedbc333d13d6" prot="public" virt="non-virtual"><scope>FramesTest</scope><name>tearDown</name></member>
      <member refid="classFramesTest_1a71e3a57abe60d480f855b8467d097149" prot="private" virt="non-virtual"><scope>FramesTest</scope><name>TestArbitraryRotation</name></member>
      <member refid="classFramesTest_1a4ae25315e1e309c05ac65517814ed44c" prot="public" virt="non-virtual"><scope>FramesTest</scope><name>TestEuler</name></member>
      <member refid="classFramesTest_1ab230d71edae7c2f4e8311e0d9f4ea7e2" prot="public" virt="non-virtual"><scope>FramesTest</scope><name>TestFrame</name></member>
      <member refid="classFramesTest_1acdf82029010980d2a241737e070d2bd5" prot="public" virt="non-virtual"><scope>FramesTest</scope><name>TestGetRotAngle</name></member>
      <member refid="classFramesTest_1a29fb5d2e31d115c518e0518c140d77c3" prot="public" virt="non-virtual"><scope>FramesTest</scope><name>TestJntArray</name></member>
      <member refid="classFramesTest_1aa4b53330c3183d118fbcd7156426125d" prot="public" virt="non-virtual"><scope>FramesTest</scope><name>TestJntArrayWhenEmpty</name></member>
      <member refid="classFramesTest_1a1fdceb21b5c8e4e27269b0c38e6e51cb" prot="private" virt="non-virtual"><scope>FramesTest</scope><name>TestOneRotation</name></member>
      <member refid="classFramesTest_1af197eec57e0a370a5d8eae7e588552e4" prot="private" virt="non-virtual"><scope>FramesTest</scope><name>TestOneRotationDiff</name></member>
      <member refid="classFramesTest_1a073ebed9f5d592e1398bd9d4d876f1ab" prot="public" virt="non-virtual"><scope>FramesTest</scope><name>TestQuaternion</name></member>
      <member refid="classFramesTest_1a012d5ca74e559c18fe1c9b0d2393c32e" prot="private" virt="non-virtual"><scope>FramesTest</scope><name>TestRangeArbitraryRotation</name></member>
      <member refid="classFramesTest_1a8d0c9e755c8dfdd6dd5d2b65fb9b080a" prot="public" virt="non-virtual"><scope>FramesTest</scope><name>TestRotation</name></member>
      <member refid="classFramesTest_1aa67cab09050573e5053b38963b97faf3" prot="private" virt="non-virtual"><scope>FramesTest</scope><name>TestRotation2</name></member>
      <member refid="classFramesTest_1a6e1672d7d09c85475738619fee679238" prot="public" virt="non-virtual"><scope>FramesTest</scope><name>TestRotationDiff</name></member>
      <member refid="classFramesTest_1a4b85f7bafc513776d56cb1129d43d0a6" prot="public" virt="non-virtual"><scope>FramesTest</scope><name>TestTwist</name></member>
      <member refid="classFramesTest_1a01c3cbf2780d75edd9f22466fabe2999" prot="private" virt="non-virtual"><scope>FramesTest</scope><name>TestTwist2</name></member>
      <member refid="classFramesTest_1acfd43a9701b93ed185e40d675d189b43" prot="public" virt="non-virtual"><scope>FramesTest</scope><name>TestVector</name></member>
      <member refid="classFramesTest_1a31da8977e650dc2f7a2ae571ac5cc4ac" prot="private" virt="non-virtual"><scope>FramesTest</scope><name>TestVector2</name></member>
      <member refid="classFramesTest_1a50de11520106cc79ad512e45276a1210" prot="public" virt="non-virtual"><scope>FramesTest</scope><name>TestVector2DNorm</name></member>
      <member refid="classFramesTest_1a4f443fd67818600c13ceec79930dee29" prot="public" virt="non-virtual"><scope>FramesTest</scope><name>TestWrench</name></member>
      <member refid="classFramesTest_1a9a62e6a223b3678c41f4c81b4cad99c6" prot="private" virt="non-virtual"><scope>FramesTest</scope><name>TestWrench2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
