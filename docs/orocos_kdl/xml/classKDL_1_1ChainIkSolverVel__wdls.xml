<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classKDL_1_1ChainIkSolverVel__wdls" kind="class" language="C++" prot="public">
    <compoundname>KDL::ChainIkSolverVel_wdls</compoundname>
    <basecompoundref refid="classKDL_1_1ChainIkSolverVel" prot="public" virt="non-virtual">KDL::ChainIkSolverVel</basecompoundref>
    <includes refid="chainiksolvervel__wdls_8hpp" local="no">chainiksolvervel_wdls.hpp</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__wdls_1a740d84e22565a0fcf73dd834e4152fbf" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int KDL::ChainIkSolverVel_wdls::E_CONVERGE_PINV_SINGULAR</definition>
        <argsstring></argsstring>
        <name>E_CONVERGE_PINV_SINGULAR</name>
        <initializer>= +100</initializer>
        <briefdescription>
<para>solution converged but (pseudo)inverse is singular </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="67" column="26" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__wdls_1a740ab879917a5a23997a4a77198a0c20" prot="private" static="no" mutable="no">
        <type>const <ref refid="classKDL_1_1Chain" kindref="compound">Chain</ref> &amp;</type>
        <definition>const Chain&amp; KDL::ChainIkSolverVel_wdls::chain</definition>
        <argsstring></argsstring>
        <name>chain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="219" column="21" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__wdls_1a7bf9cd814386299d25aa3568d27072ca" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double KDL::ChainIkSolverVel_wdls::eps</definition>
        <argsstring></argsstring>
        <name>eps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="226" column="16" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__wdls_1ac9299ef563ec5815499f2c35ce0b883e" prot="private" static="no" mutable="no">
        <type><ref refid="classKDL_1_1Jacobian" kindref="compound">Jacobian</ref></type>
        <definition>Jacobian KDL::ChainIkSolverVel_wdls::jac</definition>
        <argsstring></argsstring>
        <name>jac</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="222" column="18" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__wdls_1a8796ef16f6cd2830e3a43c9eb8ff88e2" prot="private" static="no" mutable="no">
        <type><ref refid="classKDL_1_1ChainJntToJacSolver" kindref="compound">ChainJntToJacSolver</ref></type>
        <definition>ChainJntToJacSolver KDL::ChainIkSolverVel_wdls::jnt2jac</definition>
        <argsstring></argsstring>
        <name>jnt2jac</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="220" column="29" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__wdls_1aeba04bde651f4277dad25c8955cd69ad" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double KDL::ChainIkSolverVel_wdls::lambda</definition>
        <argsstring></argsstring>
        <name>lambda</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="236" column="16" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__wdls_1af175343fb975a5c945ff8685d757112a" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double KDL::ChainIkSolverVel_wdls::lambda_scaled</definition>
        <argsstring></argsstring>
        <name>lambda_scaled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="237" column="8" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__wdls_1ad0f5514e9e2a16f08fee14c88036c18f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KDL::ChainIkSolverVel_wdls::maxiter</definition>
        <argsstring></argsstring>
        <name>maxiter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="227" column="13" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__wdls_1a021ceab3f844d7900134cd4ccb2a28bc" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int KDL::ChainIkSolverVel_wdls::nj</definition>
        <argsstring></argsstring>
        <name>nj</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="221" column="22" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__wdls_1a363e75fec6563ede5b459e1f031c592d" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int KDL::ChainIkSolverVel_wdls::nrZeroSigmas</definition>
        <argsstring></argsstring>
        <name>nrZeroSigmas</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="238" column="14" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__wdls_1ad94b2a63197896582aad47602c5b084d" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd KDL::ChainIkSolverVel_wdls::S</definition>
        <argsstring></argsstring>
        <name>S</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="224" column="25" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__wdls_1a06bcbfed8887292f167934f920dd40ed" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double KDL::ChainIkSolverVel_wdls::sigmaMin</definition>
        <argsstring></argsstring>
        <name>sigmaMin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="240" column="8" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__wdls_1a3a2889789ba0f8a625ec5046a1a7f6c7" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KDL::ChainIkSolverVel_wdls::svdResult</definition>
        <argsstring></argsstring>
        <name>svdResult</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="239" column="5" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__wdls_1ac1cb14a25dbe53fa78a4b7c2b278292f" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd KDL::ChainIkSolverVel_wdls::tmp</definition>
        <argsstring></argsstring>
        <name>tmp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="228" column="25" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__wdls_1aefd27c642fc0e793a18e9cdac6cf3ac2" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd KDL::ChainIkSolverVel_wdls::tmp_jac</definition>
        <argsstring></argsstring>
        <name>tmp_jac</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="229" column="25" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__wdls_1ae9fba66e3d579e64d3f565a8445225f1" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd KDL::ChainIkSolverVel_wdls::tmp_jac_weight1</definition>
        <argsstring></argsstring>
        <name>tmp_jac_weight1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="230" column="25" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__wdls_1aa8214cd2b7a4c3975dc349866616a2cd" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd KDL::ChainIkSolverVel_wdls::tmp_jac_weight2</definition>
        <argsstring></argsstring>
        <name>tmp_jac_weight2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="231" column="25" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__wdls_1a01d81182077b1106dd5f3e7557f769f7" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd KDL::ChainIkSolverVel_wdls::tmp_js</definition>
        <argsstring></argsstring>
        <name>tmp_js</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="233" column="25" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__wdls_1a42647f11371d7c5321c177f17091ab46" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd KDL::ChainIkSolverVel_wdls::tmp_ts</definition>
        <argsstring></argsstring>
        <name>tmp_ts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="232" column="25" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__wdls_1a89fd8e0a34b6c574efed0a9141489417" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd KDL::ChainIkSolverVel_wdls::U</definition>
        <argsstring></argsstring>
        <name>U</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="223" column="25" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__wdls_1ac1c7f7091da0a3b419399b9944ca5dc7" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd KDL::ChainIkSolverVel_wdls::V</definition>
        <argsstring></argsstring>
        <name>V</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="225" column="25" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__wdls_1ab90f39f954fbd6ba7c342c556bf069e5" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd KDL::ChainIkSolverVel_wdls::weight_js</definition>
        <argsstring></argsstring>
        <name>weight_js</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="235" column="25" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__wdls_1ab3f86f99a1660a8eddbfa325f83d8c31" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd KDL::ChainIkSolverVel_wdls::weight_ts</definition>
        <argsstring></argsstring>
        <name>weight_ts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="234" column="25" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="234" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classKDL_1_1ChainIkSolverVel__wdls_1aa4ffe2d3d6d1d015b4a0fdf3dcc48ec1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int KDL::ChainIkSolverVel_wdls::CartToJnt</definition>
        <argsstring>(const JntArray &amp;, const FrameVel &amp;, JntArrayVel &amp;)</argsstring>
        <name>CartToJnt</name>
        <reimplements refid="classKDL_1_1ChainIkSolverVel_1a50009426df14377d417396596dc48c2a">CartToJnt</reimplements>
        <param>
          <type>const <ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1FrameVel" kindref="compound">FrameVel</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="classKDL_1_1JntArrayVel" kindref="compound">JntArrayVel</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>not (yet) implemented. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="105" column="21" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainIkSolverVel__wdls_1a3076f9888b9e3905abbadf37cfa0e692" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int KDL::ChainIkSolverVel_wdls::CartToJnt</definition>
        <argsstring>(const JntArray &amp;q_in, const Twist &amp;v_in, JntArray &amp;qdot_out)</argsstring>
        <name>CartToJnt</name>
        <reimplements refid="classKDL_1_1ChainIkSolverVel_1a761853db487c901485737c6334953cbe">CartToJnt</reimplements>
        <param>
          <type>const <ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref> &amp;</type>
          <declname>q_in</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref> &amp;</type>
          <declname>v_in</declname>
        </param>
        <param>
          <type><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref> &amp;</type>
          <declname>qdot_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find an output joint velocity <emphasis>qdot_out</emphasis>, given a starting joint pose <emphasis>q_init</emphasis> and a desired cartesian velocity <emphasis>v_in</emphasis> </para>
<para><simplesect kind="return"><para>E_NOERROR=svd solution converged in maxiter E_SVD_FAILED=svd solution failed E_CONVERGE_PINV_SINGULAR=svd solution converged but (pseudo)inverse singular</para>
</simplesect>
<simplesect kind="note"><para>if E_CONVERGE_PINV_SINGULAR returned then converged and can continue motion, but have degraded solution</para>
</simplesect>
<simplesect kind="note"><para>If E_SVD_FAILED returned, then getSvdResult() returns the error code from the SVD algorithm. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="100" column="21" bodyfile="src/chainiksolvervel_wdls.cpp" bodystart="116" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainIkSolverVel__wdls_1ab4595a4bfb75e1b941c37ffc226d24e4" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KDL::ChainIkSolverVel_wdls::ChainIkSolverVel_wdls</definition>
        <argsstring>(const Chain &amp;chain, double eps=0.00001, int maxiter=150)</argsstring>
        <name>ChainIkSolverVel_wdls</name>
        <param>
          <type>const <ref refid="classKDL_1_1Chain" kindref="compound">Chain</ref> &amp;</type>
          <declname>chain</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
          <defval>0.00001</defval>
        </param>
        <param>
          <type>int</type>
          <declname>maxiter</declname>
          <defval>150</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor of the solver</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chain</parametername>
</parameternamelist>
<parameterdescription>
<para>the chain to calculate the inverse velocity kinematics for </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eps</parametername>
</parameternamelist>
<parameterdescription>
<para>if a singular value is below this value, its inverse is set to zero, default: 0.00001 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxiter</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum iterations for the svd calculation, default: 150 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="81" column="18" bodyfile="src/chainiksolvervel_wdls.cpp" bodystart="28" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainIkSolverVel__wdls_1a3a9c88ff9df9e99b41bae1128d6d3c3c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double KDL::ChainIkSolverVel_wdls::getEps</definition>
        <argsstring>() const</argsstring>
        <name>getEps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request the value of eps </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="193" column="16" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="193" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainIkSolverVel__wdls_1a9a2d3d473c84e0ae952f2d72db5cb9c7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double KDL::ChainIkSolverVel_wdls::getLambda</definition>
        <argsstring>() const</argsstring>
        <name>getLambda</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request the value of lambda for the minimum </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="198" column="16" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="198" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainIkSolverVel__wdls_1afc24c8c3e751a2e663080b00924bc9a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double KDL::ChainIkSolverVel_wdls::getLambdaScaled</definition>
        <argsstring>() const</argsstring>
        <name>getLambdaScaled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request the scaled value of lambda for the minimum singular value 1-6 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="204" column="16" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="204" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainIkSolverVel__wdls_1ab27c3a6690943b78673b386884794a65" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int KDL::ChainIkSolverVel_wdls::getNrZeroSigmas</definition>
        <argsstring>() const</argsstring>
        <name>getNrZeroSigmas</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request the number of singular values of the jacobian that are &lt; eps; if the number of near zero singular values is &gt; jac.col()-jac.row(), then the jacobian pseudoinverse is singular </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="178" column="22" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="178" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainIkSolverVel__wdls_1a80147eb86301b71df08d450855d78d4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int KDL::ChainIkSolverVel_wdls::getSigma</definition>
        <argsstring>(Eigen::VectorXd &amp;Sout)</argsstring>
        <name>getSigma</name>
        <param>
          <type>Eigen::VectorXd &amp;</type>
          <declname>Sout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request the six singular values of the <ref refid="classKDL_1_1Jacobian" kindref="compound">Jacobian</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="188" column="13" bodyfile="src/chainiksolvervel_wdls.cpp" bodystart="108" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainIkSolverVel__wdls_1a44685c39e2cc8e65c3565fdaadb96a75" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double KDL::ChainIkSolverVel_wdls::getSigmaMin</definition>
        <argsstring>() const</argsstring>
        <name>getSigmaMin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request the minimum of the first six singular values </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="183" column="16" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="183" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainIkSolverVel__wdls_1a212013a7540fad2921d1fa847709b566" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int KDL::ChainIkSolverVel_wdls::getSVDResult</definition>
        <argsstring>() const</argsstring>
        <name>getSVDResult</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the latest return code from the SVD algorithm <simplesect kind="return"><para>0 if <ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a3076f9888b9e3905abbadf37cfa0e692" kindref="member">CartToJnt()</ref> not yet called, otherwise latest SVD result code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="210" column="13" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="210" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainIkSolverVel__wdls_1ac0671b5612e17c1bbe942ab591159607" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KDL::ChainIkSolverVel_wdls::setEps</definition>
        <argsstring>(const double eps_in)</argsstring>
        <name>setEps</name>
        <param>
          <type>const double</type>
          <declname>eps_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set eps </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="167" column="14" bodyfile="src/chainiksolvervel_wdls.cpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainIkSolverVel__wdls_1aae31a982ea6a043a37592329cc51fab4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KDL::ChainIkSolverVel_wdls::setLambda</definition>
        <argsstring>(const double lambda)</argsstring>
        <name>setLambda</name>
        <param>
          <type>const double</type>
          <declname>lambda</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set lambda </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="163" column="14" bodyfile="src/chainiksolvervel_wdls.cpp" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainIkSolverVel__wdls_1a4c4e3125e980f4085c6c9f96fffad231" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KDL::ChainIkSolverVel_wdls::setMaxIter</definition>
        <argsstring>(const int maxiter_in)</argsstring>
        <name>setMaxIter</name>
        <param>
          <type>const int</type>
          <declname>maxiter_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set maxIter </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="171" column="14" bodyfile="src/chainiksolvervel_wdls.cpp" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainIkSolverVel__wdls_1af8176314e82309489e4087888d488acd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int KDL::ChainIkSolverVel_wdls::setWeightJS</definition>
        <argsstring>(const Eigen::MatrixXd &amp;Mq)</argsstring>
        <name>setWeightJS</name>
        <param>
          <type>const Eigen::MatrixXd &amp;</type>
          <declname>Mq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the joint space weighting matrix</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>weight_js</parametername>
</parameternamelist>
<parameterdescription>
<para>joint space weighting symmetric matrix, default : identity. M_q : This matrix being used as a weight for the norm of the joint space speed it HAS TO BE symmetric and positive definite. We can actually deal with matrices containing a symmetric and positive definite block and 0s otherwise. Taking a diagonal matrix as an example, a 0 on the diagonal means that the corresponding joints will not contribute to the motion of the system. On the other hand, the bigger the value, the most the corresponding joint will contribute to the overall motion. The obtained solution q_dot will actually minimize the weighted norm sqrt(q_dot&apos;*(M_q^-2)*q_dot). In the special case we deal with, it does not make sense to invert M_q but what is important is the physical meaning of all this : a joint that has a zero weight in M_q will not contribute to the motion of the system and this is equivalent to saying that it gets an infinite weight in the norm computation. For more detailed explanation : <ulink url="mailto:vincent.padois@upmc.fr">vincent.padois@upmc.fr</ulink></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success/error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="131" column="13" bodyfile="src/chainiksolvervel_wdls.cpp" bodystart="76" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainIkSolverVel__wdls_1ae1b05a989d6e0fb29fa763a24d9e112c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int KDL::ChainIkSolverVel_wdls::setWeightTS</definition>
        <argsstring>(const Eigen::MatrixXd &amp;Mx)</argsstring>
        <name>setWeightTS</name>
        <param>
          <type>const Eigen::MatrixXd &amp;</type>
          <declname>Mx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the task space weighting matrix</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>weight_ts</parametername>
</parameternamelist>
<parameterdescription>
<para>task space weighting symmetric matrix, default: identity M_x : This matrix being used as a weight for the norm of the error (in terms of task space speed) it HAS TO BE symmetric and positive definite. We can actually deal with matrices containing a symmetric and positive definite block and 0s otherwise. Taking a diagonal matrix as an example, a 0 on the diagonal means that the corresponding task coordinate will not be taken into account (ie the corresponding error can be really big). If the rank of the jacobian is equal to the number of task space coordinates which do not have a 0 weight in M_x, the weighting will actually not impact the results (ie there is an exact solution to the velocity inverse kinematics problem). In cases without an exact solution, the bigger the value, the most the corresponding task coordinate will be taken into account (ie the more the corresponding error will be reduced). The obtained solution will minimize the weighted norm sqrt(|x_dot-Jq_dot|&apos;*(M_x^2)*|x_dot-Jq_dot|). For more detailed explanation : <ulink url="mailto:vincent.padois@upmc.fr">vincent.padois@upmc.fr</ulink></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success/error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="158" column="13" bodyfile="src/chainiksolvervel_wdls.cpp" bodystart="86" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainIkSolverVel__wdls_1a233d66f30b218edff6619c7aa21aec17" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const char *</type>
        <definition>const char * KDL::ChainIkSolverVel_wdls::strError</definition>
        <argsstring>(const int error) const</argsstring>
        <name>strError</name>
        <reimplements refid="classKDL_1_1SolverI_1a5f9c4f020d4d609d8d10a7a949e8195c">strError</reimplements>
        <param>
          <type>const int</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a description of the latest error <simplesect kind="return"><para>if <emphasis>error</emphasis> is known then a description of <emphasis>error</emphasis>, otherwise &quot;UNKNOWN ERROR&quot; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="213" column="28" bodyfile="src/chainiksolvervel_wdls.cpp" bodystart="218" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainIkSolverVel__wdls_1a30247d462ff6438cd6fb1d552c9866a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KDL::ChainIkSolverVel_wdls::updateInternalDataStructures</definition>
        <argsstring>()</argsstring>
        <name>updateInternalDataStructures</name>
        <reimplements refid="classKDL_1_1ChainIkSolverVel_1a174a1c69f3a2ffca72de3448311e93e5">updateInternalDataStructures</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update the internal data structures. This is required if the number of segments or number of joints of a chain/tree have changed. This provides a single point of contact for solver memory allocations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="216" column="22" bodyfile="src/chainiksolvervel_wdls.cpp" bodystart="54" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainIkSolverVel__wdls_1a19e3463732c52875823df1380c5cd5e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KDL::ChainIkSolverVel_wdls::~ChainIkSolverVel_wdls</definition>
        <argsstring>()</argsstring>
        <name>~ChainIkSolverVel_wdls</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_wdls.hpp" line="83" column="9" bodyfile="src/chainiksolvervel_wdls.cpp" bodystart="72" bodyend="74"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Implementation of a inverse velocity kinematics algorithm based on the weighted pseudo inverse with damped least-square to calculate the velocity transformation from Cartesian to joint space of a general <ref refid="classKDL_1_1Chain" kindref="compound">KDL::Chain</ref>. It uses a svd-calculation based on householders rotations.</para>
<para>J# = M_q*Vb*pinv_dls(Db)*Ub&apos;*M_x</para>
<para>where B = Mx*J*Mq</para>
<para>and B = Ub*Db*Vb&apos; is the SVD decomposition of B</para>
<para>Mq and Mx represent, respectively, the joint-space and task-space weighting matrices. Please refer to the documentation of <ref refid="classKDL_1_1ChainIkSolverVel__wdls_1af8176314e82309489e4087888d488acd" kindref="member">setWeightJS(const Eigen::MatrixXd&amp; Mq)</ref> and <ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ae1b05a989d6e0fb29fa763a24d9e112c" kindref="member">setWeightTS(const Eigen::MatrixXd&amp; Mx)</ref> for details on the effects of these matrices.</para>
<para>For more details on Weighted Pseudo Inverse, see : 1) [Ben Israel 03] A. Ben Israel &amp; T.N.E. Greville. Generalized Inverses : Theory and Applications, second edition. Springer, 2003. ISBN 0-387-00293-6.</para>
<para>2) [Doty 93] K. L. Doty, C. Melchiorri &amp; C. Boniveto. A theory of generalized inverses applied to Robotics. The International Journal of Robotics Research, vol. 12, no. 1, pages 1-19, february 1993. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KDL::ChainIkSolverVel</label>
        <link refid="classKDL_1_1ChainIkSolverVel"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>KDL::SolverI</label>
        <link refid="classKDL_1_1SolverI"/>
      </node>
      <node id="1">
        <label>KDL::ChainIkSolverVel_wdls</label>
        <link refid="classKDL_1_1ChainIkSolverVel__wdls"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>KDL::ChainIkSolverVel</label>
        <link refid="classKDL_1_1ChainIkSolverVel"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>KDL::Rotation</label>
        <link refid="classKDL_1_1Rotation"/>
      </node>
      <node id="6">
        <label>std::vector&lt; KDL::Segment &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="8">
        <label>KDL::Twist</label>
        <link refid="classKDL_1_1Twist"/>
        <childnode refid="9" relation="usage">
          <edgelabel>rot</edgelabel>
          <edgelabel>vel</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>KDL::ChainJntToJacSolver</label>
        <link refid="classKDL_1_1ChainJntToJacSolver"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>t_tmp</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>chain</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>T_tmp</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>locked_joints_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>KDL::SolverI</label>
        <link refid="classKDL_1_1SolverI"/>
      </node>
      <node id="10">
        <label>KDL::Frame</label>
        <link refid="classKDL_1_1Frame"/>
        <childnode refid="9" relation="usage">
          <edgelabel>p</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>M</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>KDL::ChainIkSolverVel_wdls</label>
        <link refid="classKDL_1_1ChainIkSolverVel__wdls"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>jac</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>chain</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>jnt2jac</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>KDL::Chain</label>
        <link refid="classKDL_1_1Chain"/>
        <childnode refid="6" relation="usage">
          <edgelabel>segments</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>std::vector&lt; bool &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="4">
        <label>KDL::Jacobian</label>
        <link refid="classKDL_1_1Jacobian"/>
      </node>
      <node id="9">
        <label>KDL::Vector</label>
        <link refid="classKDL_1_1Vector"/>
      </node>
    </collaborationgraph>
    <location file="src/chainiksolvervel_wdls.hpp" line="64" column="1" bodyfile="src/chainiksolvervel_wdls.hpp" bodystart="63" bodyend="241"/>
    <listofallmembers>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1a3076f9888b9e3905abbadf37cfa0e692" prot="public" virt="virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>CartToJnt</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1aa4ffe2d3d6d1d015b4a0fdf3dcc48ec1" prot="public" virt="virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>CartToJnt</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1a740ab879917a5a23997a4a77198a0c20" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>chain</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1ab4595a4bfb75e1b941c37ffc226d24e4" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>ChainIkSolverVel_wdls</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1a740d84e22565a0fcf73dd834e4152fbf" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>E_CONVERGE_PINV_SINGULAR</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a037090bae35fcc0264c70287d3b926d6" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>E_DEGRADED</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a17178be368599dd456b54c2d37c4fb50" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>E_MAX_ITERATIONS_EXCEEDED</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148aa19df6d3f1007614f98aadbaea84d89f" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>E_NO_CONVERGE</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a95f2e049884a3a08fc4f839e4cbf6191" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>E_NOERROR</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a749aec827a10228473b653f18bc20197" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>E_NOT_IMPLEMENTED</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a1803914d79d602cbc5ffced121c5278c" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>E_NOT_UP_TO_DATE</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148af7440fec45c6d1657a89d344ff5b6583" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>E_OUT_OF_RANGE</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a713b62c139a0caee351f94aa7598e56a" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>E_SIZE_MISMATCH</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148ac70eed0a4997fd525b00e5eddeb39ba5" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>E_SVD_FAILED</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a4ad4b1f9f4f4c7dd43898c06ecc73c06" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>E_UNDEFINED</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1a7bf9cd814386299d25aa3568d27072ca" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>eps</name></member>
      <member refid="classKDL_1_1SolverI_1a62d29639f6396a0660ce7e3958d14718" prot="protected" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>error</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1a3a9c88ff9df9e99b41bae1128d6d3c3c" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>getEps</name></member>
      <member refid="classKDL_1_1SolverI_1a0473a25058060878b90ace7324ae1d47" prot="public" virt="virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>getError</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1a9a2d3d473c84e0ae952f2d72db5cb9c7" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>getLambda</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1afc24c8c3e751a2e663080b00924bc9a9" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>getLambdaScaled</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1ab27c3a6690943b78673b386884794a65" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>getNrZeroSigmas</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1a80147eb86301b71df08d450855d78d4b" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>getSigma</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1a44685c39e2cc8e65c3565fdaadb96a75" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>getSigmaMin</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1a212013a7540fad2921d1fa847709b566" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>getSVDResult</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1ac9299ef563ec5815499f2c35ce0b883e" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>jac</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1a8796ef16f6cd2830e3a43c9eb8ff88e2" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>jnt2jac</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1aeba04bde651f4277dad25c8955cd69ad" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>lambda</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1af175343fb975a5c945ff8685d757112a" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>lambda_scaled</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1ad0f5514e9e2a16f08fee14c88036c18f" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>maxiter</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1a021ceab3f844d7900134cd4ccb2a28bc" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>nj</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1a363e75fec6563ede5b459e1f031c592d" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>nrZeroSigmas</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1ad94b2a63197896582aad47602c5b084d" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>S</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1ac0671b5612e17c1bbe942ab591159607" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>setEps</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1aae31a982ea6a043a37592329cc51fab4" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>setLambda</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1a4c4e3125e980f4085c6c9f96fffad231" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>setMaxIter</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1af8176314e82309489e4087888d488acd" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>setWeightJS</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1ae1b05a989d6e0fb29fa763a24d9e112c" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>setWeightTS</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1a06bcbfed8887292f167934f920dd40ed" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>sigmaMin</name></member>
      <member refid="classKDL_1_1SolverI_1a2fd94680969bab93b792dabfdcfc9a80" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>SolverI</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1a233d66f30b218edff6619c7aa21aec17" prot="public" virt="virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>strError</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1a3a2889789ba0f8a625ec5046a1a7f6c7" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>svdResult</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1ac1cb14a25dbe53fa78a4b7c2b278292f" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>tmp</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1aefd27c642fc0e793a18e9cdac6cf3ac2" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>tmp_jac</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1ae9fba66e3d579e64d3f565a8445225f1" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>tmp_jac_weight1</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1aa8214cd2b7a4c3975dc349866616a2cd" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>tmp_jac_weight2</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1a01d81182077b1106dd5f3e7557f769f7" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>tmp_js</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1a42647f11371d7c5321c177f17091ab46" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>tmp_ts</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1a89fd8e0a34b6c574efed0a9141489417" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>U</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1a30247d462ff6438cd6fb1d552c9866a0" prot="public" virt="virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>updateInternalDataStructures</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1ac1c7f7091da0a3b419399b9944ca5dc7" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>V</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1ab90f39f954fbd6ba7c342c556bf069e5" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>weight_js</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1ab3f86f99a1660a8eddbfa325f83d8c31" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>weight_ts</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel_1ad9499ad2dfd55a21ae6e3ecf233e49be" prot="public" virt="virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>~ChainIkSolverVel</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__wdls_1a19e3463732c52875823df1380c5cd5e8" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>~ChainIkSolverVel_wdls</name></member>
      <member refid="classKDL_1_1SolverI_1ab70782f0d3632c22fcd430ef719d0f2f" prot="public" virt="virtual"><scope>KDL::ChainIkSolverVel_wdls</scope><name>~SolverI</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
