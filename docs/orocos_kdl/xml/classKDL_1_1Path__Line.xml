<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classKDL_1_1Path__Line" kind="class" language="C++" prot="public">
    <compoundname>KDL::Path_Line</compoundname>
    <basecompoundref refid="classKDL_1_1Path" prot="public" virt="non-virtual">KDL::Path</basecompoundref>
    <includes refid="path__line_8hpp" local="no">path_line.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classKDL_1_1Path__Line_1ad9fbf372c9cb56f92dbf6d45ffd81755" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KDL::Path_Line::aggregate</definition>
        <argsstring></argsstring>
        <name>aggregate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_line.hpp" line="154" column="6" bodyfile="src/path_line.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Path__Line_1a4ae08c6b523e1ff5b7481e644cb88a77" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double KDL::Path_Line::eqradius</definition>
        <argsstring></argsstring>
        <name>eqradius</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_line.hpp" line="147" column="8" bodyfile="src/path_line.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Path__Line_1a907dd36ae9b96312d04b22934f2ecd72" prot="private" static="no" mutable="no">
        <type><ref refid="classKDL_1_1RotationalInterpolation" kindref="compound">RotationalInterpolation</ref> *</type>
        <definition>RotationalInterpolation* KDL::Path_Line::orient</definition>
        <argsstring></argsstring>
        <name>orient</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_line.hpp" line="140" column="25" bodyfile="src/path_line.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Path__Line_1a2f3bea5155b5cb8216ed0de5a173364f" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double KDL::Path_Line::pathlength</definition>
        <argsstring></argsstring>
        <name>pathlength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_line.hpp" line="150" column="8" bodyfile="src/path_line.hpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Path__Line_1ad544981b25c332713885934091534e48" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double KDL::Path_Line::scalelin</definition>
        <argsstring></argsstring>
        <name>scalelin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_line.hpp" line="151" column="8" bodyfile="src/path_line.hpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Path__Line_1adbcf86b75f3c8fe740f3a02407c0098f" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double KDL::Path_Line::scalerot</definition>
        <argsstring></argsstring>
        <name>scalerot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_line.hpp" line="152" column="8" bodyfile="src/path_line.hpp" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Path__Line_1a86856f07c1e7062d1faa1c891c77e461" prot="private" static="no" mutable="no">
        <type><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref></type>
        <definition>Vector KDL::Path_Line::V_base_end</definition>
        <argsstring></argsstring>
        <name>V_base_end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_line.hpp" line="144" column="8" bodyfile="src/path_line.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Path__Line_1a81c8bba71c110bb33f08f6e405ad8ca5" prot="private" static="no" mutable="no">
        <type><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref></type>
        <definition>Vector KDL::Path_Line::V_base_start</definition>
        <argsstring></argsstring>
        <name>V_base_start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_line.hpp" line="143" column="8" bodyfile="src/path_line.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Path__Line_1a6a5400b8308eaef00de2377f44bbed00" prot="private" static="no" mutable="no">
        <type><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref></type>
        <definition>Vector KDL::Path_Line::V_start_end</definition>
        <argsstring></argsstring>
        <name>V_start_end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_line.hpp" line="145" column="8" bodyfile="src/path_line.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classKDL_1_1Path__Line_1acb27d85f86eab3b0946835746665c1ff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref></type>
        <definition>Twist KDL::Path_Line::Acc</definition>
        <argsstring>(double s, double sd, double sdd) const</argsstring>
        <name>Acc</name>
        <reimplements refid="classKDL_1_1Path_1a274dd481c1ab921f898cddb618e7e42b">Acc</reimplements>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sd</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sdd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the acceleration twist at path length s and with derivative of s == sd, and 2nd derivative of s == sdd </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_line.hpp" line="199" column="15" bodyfile="src/path_line.cpp" bodystart="181" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Line_1ace0ec0812ca24700061af1b7fe5e898c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classKDL_1_1Path" kindref="compound">Path</ref> *</type>
        <definition>Path * KDL::Path_Line::Clone</definition>
        <argsstring>()</argsstring>
        <name>Clone</name>
        <reimplements refid="classKDL_1_1Path_1a06926be0592bbe853ee9d040a4e420d3">Clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Virtual constructor, constructing by copying, Returns a deep copy of this <ref refid="classKDL_1_1Path" kindref="compound">Path</ref> Object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_line.hpp" line="201" column="14" bodyfile="src/path_line.cpp" bodystart="191" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Line_1ab8345944b208bf4715df86ed99982a8b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09" kindref="member">IdentifierType</ref></type>
        <definition>virtual IdentifierType KDL::Path_Line::getIdentifier</definition>
        <argsstring>() const</argsstring>
        <name>getIdentifier</name>
        <reimplements refid="classKDL_1_1Path_1aa28b0993963870a6c754b19e5cd06fec">getIdentifier</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets an identifier indicating the type of this <ref refid="classKDL_1_1Path" kindref="compound">Path</ref> object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_line.hpp" line="206" column="24" bodyfile="src/path_line.hpp" bodystart="206" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Line_1a972c1d45a18ff464da6ed01fb8613d27" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double KDL::Path_Line::LengthToS</definition>
        <argsstring>(double length)</argsstring>
        <name>LengthToS</name>
        <reimplements refid="group__Motion_1gad7f55a1d6f7a076b0959c76c29cc323d">LengthToS</reimplements>
        <param>
          <type>double</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classKDL_1_1Path__Line_1a972c1d45a18ff464da6ed01fb8613d27" kindref="member">LengthToS()</ref> converts a physical length along the trajectory to the parameter s used in Pos, Vel and Acc. This is used because in cases with large rotations the parameter s does NOT correspond to the lineair length along the trajectory. User should be sure that the lineair distance travelled by this path object is NOT zero, when using this method ! (e.g. the case of only rotational change) throws <ref refid="classKDL_1_1Error__MotionPlanning__Not__Applicable" kindref="compound">Error_MotionPlanning_Not_Applicable</ref> if used on composed path objects. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_line.hpp" line="195" column="8" bodyfile="src/path_line.cpp" bodystart="167" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Line_1a1ea3f21f577aee2a4252c5a802b6a7f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KDL::Path_Line::Path_Line</definition>
        <argsstring>(const Frame &amp;F_base_start, const Frame &amp;F_base_end, RotationalInterpolation *orient, double eqradius, bool _aggregate=true)</argsstring>
        <name>Path_Line</name>
        <param>
          <type>const <ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref> &amp;</type>
          <declname>F_base_start</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref> &amp;</type>
          <declname>F_base_end</declname>
        </param>
        <param>
          <type><ref refid="classKDL_1_1RotationalInterpolation" kindref="compound">RotationalInterpolation</ref> *</type>
          <declname>orient</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eqradius</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>_aggregate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a Line <ref refid="classKDL_1_1Path" kindref="compound">Path</ref> F_base_start and F_base_end give the begin and end frame wrt the base orient gives the method of rotation interpolation eqradius : equivalent radius : serves to compare rotations and translations. the &quot;amount of motion&quot;(pos,vel,acc) of the rotation is taken to be the amount motion of a point at distance eqradius from the rotation axis.</para>
<para>Eqradius is introduced because it is unavoidable that you have to compare rotations and translations : e.g. : You can have motions that only contain rotation, and motions that only contain translations. The motion planning goes as follows :<itemizedlist>
<listitem><para>translation is planned with the given parameters</para>
</listitem><listitem><para>rotation is planned planned with the parameters calculated with eqradius.</para>
</listitem><listitem><para>The longest of the previous two remains unchanged, the shortest in duration is scaled to take as long as the longest. This guarantees that the geometric path in 6D space remains independent of the motion profile parameters.</para>
</listitem></itemizedlist>
</para>
<para>RotationalInterpolation_SingleAxis() has the advantage that it is independent of the frame in which you express your path. Other implementations for RotationalInterpolations COULD be (not implemented) (yet) : 1) quaternion interpolation : but this is more difficult for the human to interpret 2) 3-axis interpolation : express the orientation of the frame in e.g. euler zyx angles alfa,beta, gamma and interpolate these parameters. But this is dependent of the frame you choose as a reference and their can occur representation singularities. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_line.hpp" line="185" column="1" bodyfile="src/path_line.cpp" bodystart="85" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Line_1aad9dcba467fad065263f3d07f3b76b6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KDL::Path_Line::Path_Line</definition>
        <argsstring>(const Frame &amp;F_base_start, const Twist &amp;twist_in_base, RotationalInterpolation *orient, double eqradius, bool _aggregate=true)</argsstring>
        <name>Path_Line</name>
        <param>
          <type>const <ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref> &amp;</type>
          <declname>F_base_start</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref> &amp;</type>
          <declname>twist_in_base</declname>
        </param>
        <param>
          <type><ref refid="classKDL_1_1RotationalInterpolation" kindref="compound">RotationalInterpolation</ref> *</type>
          <declname>orient</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eqradius</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>_aggregate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_line.hpp" line="190" column="1" bodyfile="src/path_line.cpp" bodystart="124" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Line_1a47c2bb2d49e35ab901765f488608ab7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double KDL::Path_Line::PathLength</definition>
        <argsstring>()</argsstring>
        <name>PathLength</name>
        <reimplements refid="classKDL_1_1Path_1a095d3ce8d48bd9f8953793c60532cd1a">PathLength</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the total path length of the trajectory (has dimension LENGTH) This is not always a physical length , ie when dealing with rotations that are dominant. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_line.hpp" line="196" column="16" bodyfile="src/path_line.cpp" bodystart="170" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Line_1af7cd0542bae1752e8340db9b3182bb33" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref></type>
        <definition>Frame KDL::Path_Line::Pos</definition>
        <argsstring>(double s) const</argsstring>
        <name>Pos</name>
        <reimplements refid="classKDL_1_1Path_1ab0121ec33eee9525bd3c883a1631bf6c">Pos</reimplements>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref> at the current path length s </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_line.hpp" line="197" column="15" bodyfile="src/path_line.cpp" bodystart="173" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Line_1a69b0f00c5c61c633390c76b9a93bc6c8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref></type>
        <definition>Twist KDL::Path_Line::Vel</definition>
        <argsstring>(double s, double sd) const</argsstring>
        <name>Vel</name>
        <reimplements refid="classKDL_1_1Path_1a6982dc012ef4299cffc1be99ef225d98">Vel</reimplements>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the velocity twist at path length s theta and with derivative of s == sd </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_line.hpp" line="198" column="15" bodyfile="src/path_line.cpp" bodystart="177" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Line_1ab475571f13fca95765696dcc23e84db8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KDL::Path_Line::Write</definition>
        <argsstring>(std::ostream &amp;os)</argsstring>
        <name>Write</name>
        <reimplements refid="classKDL_1_1Path_1a3c1c34464d34183fc965af1ea260879d">Write</reimplements>
        <param>
          <type><ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref> &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes one of the derived objects to the stream </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_line.hpp" line="200" column="14" bodyfile="src/path_line.cpp" bodystart="211" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Line_1a84f6a9593a8b67868fa07929ae6c4e79" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>KDL::Path_Line::~Path_Line</definition>
        <argsstring>()</argsstring>
        <name>~Path_Line</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_line.hpp" line="209" column="9" bodyfile="src/path_line.cpp" bodystart="186" bodyend="189"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A path representing a line from A to B. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KDL::Path_Line</label>
        <link refid="classKDL_1_1Path__Line"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KDL::Path</label>
        <link refid="classKDL_1_1Path"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>KDL::RotationalInterpolation</label>
        <link refid="classKDL_1_1RotationalInterpolation"/>
      </node>
      <node id="1">
        <label>KDL::Path_Line</label>
        <link refid="classKDL_1_1Path__Line"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>V_base_start</edgelabel>
          <edgelabel>V_start_end</edgelabel>
          <edgelabel>V_base_end</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>orient</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>KDL::Path</label>
        <link refid="classKDL_1_1Path"/>
      </node>
      <node id="3">
        <label>KDL::Vector</label>
        <link refid="classKDL_1_1Vector"/>
      </node>
    </collaborationgraph>
    <location file="src/path_line.hpp" line="99" column="1" bodyfile="src/path_line.hpp" bodystart="98" bodyend="171"/>
    <listofallmembers>
      <member refid="classKDL_1_1Path__Line_1acb27d85f86eab3b0946835746665c1ff" prot="public" virt="virtual"><scope>KDL::Path_Line</scope><name>Acc</name></member>
      <member refid="classKDL_1_1Path__Line_1ad9fbf372c9cb56f92dbf6d45ffd81755" prot="private" virt="non-virtual"><scope>KDL::Path_Line</scope><name>aggregate</name></member>
      <member refid="classKDL_1_1Path__Line_1ace0ec0812ca24700061af1b7fe5e898c" prot="public" virt="virtual"><scope>KDL::Path_Line</scope><name>Clone</name></member>
      <member refid="classKDL_1_1Path__Line_1a4ae08c6b523e1ff5b7481e644cb88a77" prot="private" virt="non-virtual"><scope>KDL::Path_Line</scope><name>eqradius</name></member>
      <member refid="classKDL_1_1Path__Line_1ab8345944b208bf4715df86ed99982a8b" prot="public" virt="virtual"><scope>KDL::Path_Line</scope><name>getIdentifier</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09a0ce2e4f0f5a61c01cecafbe0084682cd" prot="public" virt="non-virtual"><scope>KDL::Path_Line</scope><name>ID_CIRCLE</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09a0e63c4744e46f92e2599ca9fbf50f6a4" prot="public" virt="non-virtual"><scope>KDL::Path_Line</scope><name>ID_COMPOSITE</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09ae0cd5b91c304ea865d3e2ffe642a47d8" prot="public" virt="non-virtual"><scope>KDL::Path_Line</scope><name>ID_CYCLIC_CLOSED</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09a4f9ed1827474558375d8fdcc6fa22a8c" prot="public" virt="non-virtual"><scope>KDL::Path_Line</scope><name>ID_LINE</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09ad0c76d25569cecb6d38bce3ec92cd8eb" prot="public" virt="non-virtual"><scope>KDL::Path_Line</scope><name>ID_POINT</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09a6458e9e3355fb8ebdcd540ae753aadbd" prot="public" virt="non-virtual"><scope>KDL::Path_Line</scope><name>ID_ROUNDED_COMPOSITE</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09" prot="public" virt="non-virtual"><scope>KDL::Path_Line</scope><name>IdentifierType</name></member>
      <member refid="classKDL_1_1Path__Line_1a972c1d45a18ff464da6ed01fb8613d27" prot="public" virt="virtual"><scope>KDL::Path_Line</scope><name>LengthToS</name></member>
      <member refid="classKDL_1_1Path__Line_1a907dd36ae9b96312d04b22934f2ecd72" prot="private" virt="non-virtual"><scope>KDL::Path_Line</scope><name>orient</name></member>
      <member refid="classKDL_1_1Path__Line_1a1ea3f21f577aee2a4252c5a802b6a7f2" prot="public" virt="non-virtual"><scope>KDL::Path_Line</scope><name>Path_Line</name></member>
      <member refid="classKDL_1_1Path__Line_1aad9dcba467fad065263f3d07f3b76b6c" prot="public" virt="non-virtual"><scope>KDL::Path_Line</scope><name>Path_Line</name></member>
      <member refid="classKDL_1_1Path__Line_1a47c2bb2d49e35ab901765f488608ab7e" prot="public" virt="virtual"><scope>KDL::Path_Line</scope><name>PathLength</name></member>
      <member refid="classKDL_1_1Path__Line_1a2f3bea5155b5cb8216ed0de5a173364f" prot="private" virt="non-virtual"><scope>KDL::Path_Line</scope><name>pathlength</name></member>
      <member refid="classKDL_1_1Path__Line_1af7cd0542bae1752e8340db9b3182bb33" prot="public" virt="virtual"><scope>KDL::Path_Line</scope><name>Pos</name></member>
      <member refid="classKDL_1_1Path_1a15dfd941258db019a5b30c666e51b358" prot="public" virt="non-virtual"><scope>KDL::Path_Line</scope><name>Read</name></member>
      <member refid="classKDL_1_1Path__Line_1ad544981b25c332713885934091534e48" prot="private" virt="non-virtual"><scope>KDL::Path_Line</scope><name>scalelin</name></member>
      <member refid="classKDL_1_1Path__Line_1adbcf86b75f3c8fe740f3a02407c0098f" prot="private" virt="non-virtual"><scope>KDL::Path_Line</scope><name>scalerot</name></member>
      <member refid="classKDL_1_1Path__Line_1a86856f07c1e7062d1faa1c891c77e461" prot="private" virt="non-virtual"><scope>KDL::Path_Line</scope><name>V_base_end</name></member>
      <member refid="classKDL_1_1Path__Line_1a81c8bba71c110bb33f08f6e405ad8ca5" prot="private" virt="non-virtual"><scope>KDL::Path_Line</scope><name>V_base_start</name></member>
      <member refid="classKDL_1_1Path__Line_1a6a5400b8308eaef00de2377f44bbed00" prot="private" virt="non-virtual"><scope>KDL::Path_Line</scope><name>V_start_end</name></member>
      <member refid="classKDL_1_1Path__Line_1a69b0f00c5c61c633390c76b9a93bc6c8" prot="public" virt="virtual"><scope>KDL::Path_Line</scope><name>Vel</name></member>
      <member refid="classKDL_1_1Path__Line_1ab475571f13fca95765696dcc23e84db8" prot="public" virt="virtual"><scope>KDL::Path_Line</scope><name>Write</name></member>
      <member refid="classKDL_1_1Path_1a10f16828c888527755e8a59c906b5a57" prot="public" virt="virtual"><scope>KDL::Path_Line</scope><name>~Path</name></member>
      <member refid="classKDL_1_1Path__Line_1a84f6a9593a8b67868fa07929ae6c4e79" prot="public" virt="virtual"><scope>KDL::Path_Line</scope><name>~Path_Line</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
