<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classKDL_1_1RotationVel" kind="class" language="C++" prot="public">
    <compoundname>KDL::RotationVel</compoundname>
    <includes refid="framevel_8hpp" local="no">framevel.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classKDL_1_1RotationVel_1abedea5aebf8b52c940c2fe0d31888fda" prot="public" static="no" mutable="no">
        <type><ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref></type>
        <definition>Rotation KDL::RotationVel::R</definition>
        <argsstring></argsstring>
        <name>R</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="153" column="14" bodyfile="src/framevel.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1RotationVel_1abb9af995b6b6e823d84f730c85d337e5" prot="public" static="no" mutable="no">
        <type><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref></type>
        <definition>Vector KDL::RotationVel::w</definition>
        <argsstring></argsstring>
        <name>w</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="154" column="14" bodyfile="src/framevel.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classKDL_1_1RotationVel_1a40958600a097df56867c477e20738696" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref></type>
        <definition>Vector KDL::RotationVel::deriv</definition>
        <argsstring>() const</argsstring>
        <name>deriv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="162" column="14" bodyfile="src/framevel.hpp" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1RotationVel_1ab46bacd9316fbce13fed525c1e6c8223" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> void</type>
        <definition>void RotationVel::DoRotX</definition>
        <argsstring>(const doubleVel &amp;angle)</argsstring>
        <name>DoRotX</name>
        <param>
          <type>const <ref refid="namespaceKDL_1a6725eee11f82dfb8f65f78b107bbe7e8" kindref="member">doubleVel</ref> &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="176" column="18" bodyfile="src/framevel.inl" bodystart="204" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1RotationVel_1ab65743af4d6caa11f500b5aa2023d410" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> void</type>
        <definition>void RotationVel::DoRotY</definition>
        <argsstring>(const doubleVel &amp;angle)</argsstring>
        <name>DoRotY</name>
        <param>
          <type>const <ref refid="namespaceKDL_1a6725eee11f82dfb8f65f78b107bbe7e8" kindref="member">doubleVel</ref> &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="177" column="18" bodyfile="src/framevel.inl" bodystart="212" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1RotationVel_1ac37639bf292a7076025dfb382f1ee874" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> void</type>
        <definition>void RotationVel::DoRotZ</definition>
        <argsstring>(const doubleVel &amp;angle)</argsstring>
        <name>DoRotZ</name>
        <param>
          <type>const <ref refid="namespaceKDL_1a6725eee11f82dfb8f65f78b107bbe7e8" kindref="member">doubleVel</ref> &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="178" column="18" bodyfile="src/framevel.inl" bodystart="220" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1RotationVel_1a3b08ee648757e2cebc6a19fdd508ce9f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref></type>
        <definition>RotationVel RotationVel::Inverse</definition>
        <argsstring>() const</argsstring>
        <name>Inverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="171" column="25" bodyfile="src/framevel.inl" bodystart="170" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1RotationVel_1a5cafbeb61d5c6a6fbeac95c5ce8e3b84" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> <ref refid="classKDL_1_1TwistVel" kindref="compound">TwistVel</ref></type>
        <definition>TwistVel RotationVel::Inverse</definition>
        <argsstring>(const Twist &amp;arg) const</argsstring>
        <name>Inverse</name>
        <param>
          <type>const <ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="203" column="22" bodyfile="src/framevel.inl" bodystart="612" bodyend="615"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1RotationVel_1ad390e0fb49d8860a9445044a182e778d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> <ref refid="classKDL_1_1TwistVel" kindref="compound">TwistVel</ref></type>
        <definition>TwistVel RotationVel::Inverse</definition>
        <argsstring>(const TwistVel &amp;arg) const</argsstring>
        <name>Inverse</name>
        <param>
          <type>const <ref refid="classKDL_1_1TwistVel" kindref="compound">TwistVel</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="202" column="22" bodyfile="src/framevel.inl" bodystart="602" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1RotationVel_1a59526e654b12f2aebeb6a28687f03e12" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> <ref refid="classKDL_1_1VectorVel" kindref="compound">VectorVel</ref></type>
        <definition>VectorVel RotationVel::Inverse</definition>
        <argsstring>(const Vector &amp;arg) const</argsstring>
        <name>Inverse</name>
        <param>
          <type>const <ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="173" column="23" bodyfile="src/framevel.inl" bodystart="181" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1RotationVel_1a90f8b6dc2b81e7ffd888b8fc0926d5d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> <ref refid="classKDL_1_1VectorVel" kindref="compound">VectorVel</ref></type>
        <definition>VectorVel RotationVel::Inverse</definition>
        <argsstring>(const VectorVel &amp;arg) const</argsstring>
        <name>Inverse</name>
        <param>
          <type>const <ref refid="classKDL_1_1VectorVel" kindref="compound">VectorVel</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="172" column="23" bodyfile="src/framevel.inl" bodystart="174" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1RotationVel_1abc1e5dd5ebf0295215e0610f041441db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> <ref refid="classKDL_1_1TwistVel" kindref="compound">TwistVel</ref></type>
        <definition>TwistVel RotationVel::operator*</definition>
        <argsstring>(const Twist &amp;arg) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="205" column="22" bodyfile="src/framevel.inl" bodystart="617" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1RotationVel_1a48e2deaeb3111f9c4b3bd8735a52441f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> <ref refid="classKDL_1_1TwistVel" kindref="compound">TwistVel</ref></type>
        <definition>TwistVel RotationVel::operator*</definition>
        <argsstring>(const TwistVel &amp;arg) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classKDL_1_1TwistVel" kindref="compound">TwistVel</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="204" column="22" bodyfile="src/framevel.inl" bodystart="607" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1RotationVel_1a0f0a14113b94df7371adc7010b98c3d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> <ref refid="classKDL_1_1VectorVel" kindref="compound">VectorVel</ref></type>
        <definition>VectorVel RotationVel::operator*</definition>
        <argsstring>(const Vector &amp;arg) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="175" column="23" bodyfile="src/framevel.inl" bodystart="194" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1RotationVel_1ae6b986c0c33460438978b786ffb18867" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> <ref refid="classKDL_1_1VectorVel" kindref="compound">VectorVel</ref></type>
        <definition>VectorVel RotationVel::operator*</definition>
        <argsstring>(const VectorVel &amp;arg) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classKDL_1_1VectorVel" kindref="compound">VectorVel</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="174" column="23" bodyfile="src/framevel.inl" bodystart="189" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1RotationVel_1a6b913e295aac5a439995d99f6a04b627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref> &amp;</type>
        <definition>RotationVel &amp; RotationVel::operator=</definition>
        <argsstring>(const Rotation &amp;arg)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="166" column="25" bodyfile="src/framevel.inl" bodystart="146" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1RotationVel_1a36978b5fbc14047fdba3f10ea7d78daf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref> &amp;</type>
        <definition>RotationVel &amp; RotationVel::operator=</definition>
        <argsstring>(const RotationVel &amp;arg)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="165" column="25" bodyfile="src/framevel.inl" bodystart="141" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1RotationVel_1a9b9dd57f815c0e36f2067867dc090778" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KDL::RotationVel::RotationVel</definition>
        <argsstring>()</argsstring>
        <name>RotationVel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="156" column="5" bodyfile="src/framevel.hpp" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1RotationVel_1acd5d416a2922afc581f244cf7b7993cf" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KDL::RotationVel::RotationVel</definition>
        <argsstring>(const Rotation &amp;_R)</argsstring>
        <name>RotationVel</name>
        <param>
          <type>const <ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref> &amp;</type>
          <declname>_R</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="157" column="14" bodyfile="src/framevel.hpp" bodystart="157" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1RotationVel_1a3680af08ae2318bf86e793d7785dc37a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KDL::RotationVel::RotationVel</definition>
        <argsstring>(const Rotation &amp;_R, const Vector &amp;_w)</argsstring>
        <name>RotationVel</name>
        <param>
          <type>const <ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref> &amp;</type>
          <declname>_R</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>_w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="158" column="5" bodyfile="src/framevel.hpp" bodystart="158" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1RotationVel_1a460c61bcf94b9782695f7adc3324376a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> <ref refid="classKDL_1_1VectorVel" kindref="compound">VectorVel</ref></type>
        <definition>VectorVel RotationVel::UnitX</definition>
        <argsstring>() const</argsstring>
        <name>UnitX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="167" column="19" bodyfile="src/framevel.inl" bodystart="152" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1RotationVel_1a1185bac322af677712a8cec6e3070557" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> <ref refid="classKDL_1_1VectorVel" kindref="compound">VectorVel</ref></type>
        <definition>VectorVel RotationVel::UnitY</definition>
        <argsstring>() const</argsstring>
        <name>UnitY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="168" column="19" bodyfile="src/framevel.inl" bodystart="156" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1RotationVel_1a8f5b07d6f26e9cebacfea5ef0305c3e6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> <ref refid="classKDL_1_1VectorVel" kindref="compound">VectorVel</ref></type>
        <definition>VectorVel RotationVel::UnitZ</definition>
        <argsstring>() const</argsstring>
        <name>UnitZ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="169" column="19" bodyfile="src/framevel.inl" bodystart="160" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1RotationVel_1ada54e6c417507aac053e6a3c15e3fd8b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref></type>
        <definition>Rotation KDL::RotationVel::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="161" column="14" bodyfile="src/framevel.hpp" bodystart="161" bodyend="161"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classKDL_1_1RotationVel_1a4f04b2e1f5b6bc15f75cc3430644324e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref></type>
        <definition>RotationVel RotationVel::Identity</definition>
        <argsstring>()</argsstring>
        <name>Identity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="170" column="32" bodyfile="src/framevel.inl" bodystart="166" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1RotationVel_1a656cd1c47442d72f3c2fc9be017558f8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref></type>
        <definition>RotationVel RotationVel::Rot</definition>
        <argsstring>(const Vector &amp;rotvec, const doubleVel &amp;angle)</argsstring>
        <name>Rot</name>
        <param>
          <type>const <ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rotvec</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceKDL_1a6725eee11f82dfb8f65f78b107bbe7e8" kindref="member">doubleVel</ref> &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="182" column="32" bodyfile="src/framevel.inl" bodystart="229" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1RotationVel_1abea45a6dabc8afd7bce83055cf5265f5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref></type>
        <definition>RotationVel RotationVel::Rot2</definition>
        <argsstring>(const Vector &amp;rotvec, const doubleVel &amp;angle)</argsstring>
        <name>Rot2</name>
        <param>
          <type>const <ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rotvec</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceKDL_1a6725eee11f82dfb8f65f78b107bbe7e8" kindref="member">doubleVel</ref> &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="185" column="32" bodyfile="src/framevel.inl" bodystart="238" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1RotationVel_1a5093811dbac9b5dbbd717bb241376f24" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref></type>
        <definition>RotationVel RotationVel::RotX</definition>
        <argsstring>(const doubleVel &amp;angle)</argsstring>
        <name>RotX</name>
        <param>
          <type>const <ref refid="namespaceKDL_1a6725eee11f82dfb8f65f78b107bbe7e8" kindref="member">doubleVel</ref> &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="179" column="32" bodyfile="src/framevel.inl" bodystart="208" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1RotationVel_1ace38098fd10b8a8ccbe5abbb3198d5e9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref></type>
        <definition>RotationVel RotationVel::RotY</definition>
        <argsstring>(const doubleVel &amp;angle)</argsstring>
        <name>RotY</name>
        <param>
          <type>const <ref refid="namespaceKDL_1a6725eee11f82dfb8f65f78b107bbe7e8" kindref="member">doubleVel</ref> &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="180" column="32" bodyfile="src/framevel.inl" bodystart="216" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1RotationVel_1a22630379ffe864673bb003adf85a4483" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref></type>
        <definition>RotationVel RotationVel::RotZ</definition>
        <argsstring>(const doubleVel &amp;angle)</argsstring>
        <name>RotZ</name>
        <param>
          <type>const <ref refid="namespaceKDL_1a6725eee11f82dfb8f65f78b107bbe7e8" kindref="member">doubleVel</ref> &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="181" column="32" bodyfile="src/framevel.inl" bodystart="224" bodyend="226"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classKDL_1_1RotationVel_1a8c3603deb8779771b9f7aa3d2c0abbf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> friend bool</type>
        <definition>IMETHOD friend bool Equal</definition>
        <argsstring>(const Rotation &amp;r1, const RotationVel &amp;r2, double eps)</argsstring>
        <name>Equal</name>
        <param>
          <type>const <ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="192" column="25"/>
      </memberdef>
      <memberdef kind="friend" id="classKDL_1_1RotationVel_1aab9627c8f9f2cc1fdbfb7420298aa41b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> friend bool</type>
        <definition>IMETHOD friend bool Equal</definition>
        <argsstring>(const RotationVel &amp;r1, const Rotation &amp;r2, double eps)</argsstring>
        <name>Equal</name>
        <param>
          <type>const <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="193" column="25"/>
      </memberdef>
      <memberdef kind="friend" id="classKDL_1_1RotationVel_1a5de55dd5b2ab677385aab17ec44aa59b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> friend bool</type>
        <definition>IMETHOD friend bool Equal</definition>
        <argsstring>(const RotationVel &amp;r1, const RotationVel &amp;r2, double eps)</argsstring>
        <name>Equal</name>
        <param>
          <type>const <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="191" column="25"/>
      </memberdef>
      <memberdef kind="friend" id="classKDL_1_1RotationVel_1a0c7ba87f8bd9371ceb56ebd95878fe39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> friend bool</type>
        <definition>IMETHOD friend bool operator!=</definition>
        <argsstring>(const Rotation &amp;r1, const RotationVel &amp;r2)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="198" column="25"/>
      </memberdef>
      <memberdef kind="friend" id="classKDL_1_1RotationVel_1a8a9765dd0afb58e723bbf41ce2362511" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> friend bool</type>
        <definition>IMETHOD friend bool operator!=</definition>
        <argsstring>(const RotationVel &amp;r1, const Rotation &amp;r2)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="200" column="25"/>
      </memberdef>
      <memberdef kind="friend" id="classKDL_1_1RotationVel_1a9861a9cf65d60b4d7f4bfc8b0523f5d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> friend bool</type>
        <definition>IMETHOD friend bool operator!=</definition>
        <argsstring>(const RotationVel &amp;r1, const RotationVel &amp;r2)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="196" column="25"/>
      </memberdef>
      <memberdef kind="friend" id="classKDL_1_1RotationVel_1a0752b1c5da48d41eb7299921757f432f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> friend <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref></type>
        <definition>IMETHOD friend RotationVel operator*</definition>
        <argsstring>(const Rotation &amp;r1, const RotationVel &amp;r2)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="189" column="32"/>
      </memberdef>
      <memberdef kind="friend" id="classKDL_1_1RotationVel_1a0df98fafa80d9423317e0533aac2bde5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> friend <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref></type>
        <definition>IMETHOD friend RotationVel operator*</definition>
        <argsstring>(const RotationVel &amp;r1, const Rotation &amp;r2)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="190" column="32"/>
      </memberdef>
      <memberdef kind="friend" id="classKDL_1_1RotationVel_1aca7e61229634c8da283dbe0593bbca24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> friend <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref></type>
        <definition>IMETHOD friend RotationVel operator*</definition>
        <argsstring>(const RotationVel &amp;r1, const RotationVel &amp;r2)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="188" column="32"/>
      </memberdef>
      <memberdef kind="friend" id="classKDL_1_1RotationVel_1af8a397a66ab8e7c884b7017c71409927" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> friend bool</type>
        <definition>IMETHOD friend bool operator==</definition>
        <argsstring>(const Rotation &amp;r1, const RotationVel &amp;r2)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="197" column="25"/>
      </memberdef>
      <memberdef kind="friend" id="classKDL_1_1RotationVel_1ab49f91ca85ef1cb62803886850c7252f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> friend bool</type>
        <definition>IMETHOD friend bool operator==</definition>
        <argsstring>(const RotationVel &amp;r1, const Rotation &amp;r2)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="199" column="25"/>
      </memberdef>
      <memberdef kind="friend" id="classKDL_1_1RotationVel_1a3c1b4a9eb847d9bb524dfc6fe830863c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="utility_8h_1aa516142b5f3c749c4774febbf30b1a30" kindref="member">IMETHOD</ref> friend bool</type>
        <definition>IMETHOD friend bool operator==</definition>
        <argsstring>(const RotationVel &amp;r1, const RotationVel &amp;r2)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1RotationVel" kindref="compound">RotationVel</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/framevel.hpp" line="195" column="25"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>KDL::Rotation</label>
        <link refid="classKDL_1_1Rotation"/>
      </node>
      <node id="1">
        <label>KDL::RotationVel</label>
        <link refid="classKDL_1_1RotationVel"/>
        <childnode refid="2" relation="usage">
          <edgelabel>w</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>R</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>KDL::Vector</label>
        <link refid="classKDL_1_1Vector"/>
      </node>
    </collaborationgraph>
    <location file="src/framevel.hpp" line="151" column="1" bodyfile="src/framevel.hpp" bodystart="146" bodyend="206"/>
    <listofallmembers>
      <member refid="classKDL_1_1RotationVel_1a40958600a097df56867c477e20738696" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>deriv</name></member>
      <member refid="classKDL_1_1RotationVel_1ab46bacd9316fbce13fed525c1e6c8223" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>DoRotX</name></member>
      <member refid="classKDL_1_1RotationVel_1ab65743af4d6caa11f500b5aa2023d410" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>DoRotY</name></member>
      <member refid="classKDL_1_1RotationVel_1ac37639bf292a7076025dfb382f1ee874" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>DoRotZ</name></member>
      <member refid="classKDL_1_1RotationVel_1a5de55dd5b2ab677385aab17ec44aa59b" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>Equal</name></member>
      <member refid="classKDL_1_1RotationVel_1a8c3603deb8779771b9f7aa3d2c0abbf8" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>Equal</name></member>
      <member refid="classKDL_1_1RotationVel_1aab9627c8f9f2cc1fdbfb7420298aa41b" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>Equal</name></member>
      <member refid="classKDL_1_1RotationVel_1a4f04b2e1f5b6bc15f75cc3430644324e" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>Identity</name></member>
      <member refid="classKDL_1_1RotationVel_1a3b08ee648757e2cebc6a19fdd508ce9f" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>Inverse</name></member>
      <member refid="classKDL_1_1RotationVel_1a90f8b6dc2b81e7ffd888b8fc0926d5d9" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>Inverse</name></member>
      <member refid="classKDL_1_1RotationVel_1a59526e654b12f2aebeb6a28687f03e12" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>Inverse</name></member>
      <member refid="classKDL_1_1RotationVel_1ad390e0fb49d8860a9445044a182e778d" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>Inverse</name></member>
      <member refid="classKDL_1_1RotationVel_1a5cafbeb61d5c6a6fbeac95c5ce8e3b84" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>Inverse</name></member>
      <member refid="classKDL_1_1RotationVel_1a9861a9cf65d60b4d7f4bfc8b0523f5d9" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>operator!=</name></member>
      <member refid="classKDL_1_1RotationVel_1a0c7ba87f8bd9371ceb56ebd95878fe39" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>operator!=</name></member>
      <member refid="classKDL_1_1RotationVel_1a8a9765dd0afb58e723bbf41ce2362511" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>operator!=</name></member>
      <member refid="classKDL_1_1RotationVel_1ae6b986c0c33460438978b786ffb18867" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>operator*</name></member>
      <member refid="classKDL_1_1RotationVel_1a0f0a14113b94df7371adc7010b98c3d7" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>operator*</name></member>
      <member refid="classKDL_1_1RotationVel_1aca7e61229634c8da283dbe0593bbca24" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>operator*</name></member>
      <member refid="classKDL_1_1RotationVel_1a0752b1c5da48d41eb7299921757f432f" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>operator*</name></member>
      <member refid="classKDL_1_1RotationVel_1a0df98fafa80d9423317e0533aac2bde5" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>operator*</name></member>
      <member refid="classKDL_1_1RotationVel_1a48e2deaeb3111f9c4b3bd8735a52441f" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>operator*</name></member>
      <member refid="classKDL_1_1RotationVel_1abc1e5dd5ebf0295215e0610f041441db" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>operator*</name></member>
      <member refid="classKDL_1_1RotationVel_1a36978b5fbc14047fdba3f10ea7d78daf" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>operator=</name></member>
      <member refid="classKDL_1_1RotationVel_1a6b913e295aac5a439995d99f6a04b627" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>operator=</name></member>
      <member refid="classKDL_1_1RotationVel_1a3c1b4a9eb847d9bb524dfc6fe830863c" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>operator==</name></member>
      <member refid="classKDL_1_1RotationVel_1af8a397a66ab8e7c884b7017c71409927" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>operator==</name></member>
      <member refid="classKDL_1_1RotationVel_1ab49f91ca85ef1cb62803886850c7252f" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>operator==</name></member>
      <member refid="classKDL_1_1RotationVel_1abedea5aebf8b52c940c2fe0d31888fda" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>R</name></member>
      <member refid="classKDL_1_1RotationVel_1a656cd1c47442d72f3c2fc9be017558f8" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>Rot</name></member>
      <member refid="classKDL_1_1RotationVel_1abea45a6dabc8afd7bce83055cf5265f5" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>Rot2</name></member>
      <member refid="classKDL_1_1RotationVel_1a9b9dd57f815c0e36f2067867dc090778" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>RotationVel</name></member>
      <member refid="classKDL_1_1RotationVel_1acd5d416a2922afc581f244cf7b7993cf" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>RotationVel</name></member>
      <member refid="classKDL_1_1RotationVel_1a3680af08ae2318bf86e793d7785dc37a" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>RotationVel</name></member>
      <member refid="classKDL_1_1RotationVel_1a5093811dbac9b5dbbd717bb241376f24" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>RotX</name></member>
      <member refid="classKDL_1_1RotationVel_1ace38098fd10b8a8ccbe5abbb3198d5e9" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>RotY</name></member>
      <member refid="classKDL_1_1RotationVel_1a22630379ffe864673bb003adf85a4483" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>RotZ</name></member>
      <member refid="classKDL_1_1RotationVel_1a460c61bcf94b9782695f7adc3324376a" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>UnitX</name></member>
      <member refid="classKDL_1_1RotationVel_1a1185bac322af677712a8cec6e3070557" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>UnitY</name></member>
      <member refid="classKDL_1_1RotationVel_1a8f5b07d6f26e9cebacfea5ef0305c3e6" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>UnitZ</name></member>
      <member refid="classKDL_1_1RotationVel_1ada54e6c417507aac053e6a3c15e3fd8b" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>value</name></member>
      <member refid="classKDL_1_1RotationVel_1abb9af995b6b6e823d84f730c85d337e5" prot="public" virt="non-virtual"><scope>KDL::RotationVel</scope><name>w</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
