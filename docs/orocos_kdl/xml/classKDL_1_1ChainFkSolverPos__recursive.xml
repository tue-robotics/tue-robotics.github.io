<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classKDL_1_1ChainFkSolverPos__recursive" kind="class" language="C++" prot="public">
    <compoundname>KDL::ChainFkSolverPos_recursive</compoundname>
    <basecompoundref refid="classKDL_1_1ChainFkSolverPos" prot="public" virt="non-virtual">KDL::ChainFkSolverPos</basecompoundref>
    <includes refid="chainfksolverpos__recursive_8hpp" local="no">chainfksolverpos_recursive.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classKDL_1_1ChainFkSolverPos__recursive_1af6ca8b78affdae1139c732689dba6c7b" prot="private" static="no" mutable="no">
        <type>const <ref refid="classKDL_1_1Chain" kindref="compound">Chain</ref> &amp;</type>
        <definition>const Chain&amp; KDL::ChainFkSolverPos_recursive::chain</definition>
        <argsstring></argsstring>
        <name>chain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainfksolverpos_recursive.hpp" line="48" column="21" bodyfile="src/chainfksolverpos_recursive.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classKDL_1_1ChainFkSolverPos__recursive_1ab710e9b2e4b6e2daa09ef3e139c4554e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KDL::ChainFkSolverPos_recursive::ChainFkSolverPos_recursive</definition>
        <argsstring>(const Chain &amp;chain)</argsstring>
        <name>ChainFkSolverPos_recursive</name>
        <param>
          <type>const <ref refid="classKDL_1_1Chain" kindref="compound">Chain</ref> &amp;</type>
          <declname>chain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainfksolverpos_recursive.hpp" line="39" column="9" bodyfile="src/chainfksolverpos_recursive.cpp" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainFkSolverPos__recursive_1a2b34c9fae293b9866ede9df203ec1fc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int KDL::ChainFkSolverPos_recursive::JntToCart</definition>
        <argsstring>(const JntArray &amp;q_in, Frame &amp;p_out, int segmentNr=-1)</argsstring>
        <name>JntToCart</name>
        <reimplements refid="classKDL_1_1ChainFkSolverPos_1aee36d4b6ef10c9776e6cd0c2a105606e">JntToCart</reimplements>
        <param>
          <type>const <ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref> &amp;</type>
          <declname>q_in</declname>
        </param>
        <param>
          <type><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref> &amp;</type>
          <declname>p_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>segmentNr</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate forward position kinematics for a <ref refid="classKDL_1_1Chain" kindref="compound">KDL::Chain</ref>, from joint coordinates to cartesian pose.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>q_in</parametername>
</parameternamelist>
<parameterdescription>
<para>input joint coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_out</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to output cartesian pose</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>if &lt; 0 something went wrong </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainfksolverpos_recursive.hpp" line="42" column="21" bodyfile="src/chainfksolverpos_recursive.cpp" bodystart="34" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainFkSolverPos__recursive_1a80e2107f662af8783ad0738fcb4b0718" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int KDL::ChainFkSolverPos_recursive::JntToCart</definition>
        <argsstring>(const JntArray &amp;q_in, std::vector&lt; Frame &gt; &amp;p_out, int segmentNr=-1)</argsstring>
        <name>JntToCart</name>
        <reimplements refid="classKDL_1_1ChainFkSolverPos_1a3bf2d933b1d7c7b011e84e2c6bd1caea">JntToCart</reimplements>
        <param>
          <type>const <ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref> &amp;</type>
          <declname>q_in</declname>
        </param>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref> &gt; &amp;</type>
          <declname>p_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>segmentNr</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate forward position kinematics for a <ref refid="classKDL_1_1Chain" kindref="compound">KDL::Chain</ref>, from joint coordinates to cartesian pose.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>q_in</parametername>
</parameternamelist>
<parameterdescription>
<para>input joint coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_out</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to a vector of output cartesian poses for all segments</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>if &lt; 0 something went wrong </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainfksolverpos_recursive.hpp" line="43" column="21" bodyfile="src/chainfksolverpos_recursive.cpp" bodystart="60" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainFkSolverPos__recursive_1add89f7d75ae7c0c971bb958dda01643c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void KDL::ChainFkSolverPos_recursive::updateInternalDataStructures</definition>
        <argsstring>()</argsstring>
        <name>updateInternalDataStructures</name>
        <reimplements refid="classKDL_1_1ChainFkSolverPos_1ab45b6f23b4f05e402000af66c7c3d25a">updateInternalDataStructures</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update the internal data structures. This is required if the number of segments or number of joints of a chain/tree have changed. This provides a single point of contact for solver memory allocations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainfksolverpos_recursive.hpp" line="45" column="22" bodyfile="src/chainfksolverpos_recursive.hpp" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainFkSolverPos__recursive_1a865a04321e9bf79d56c691445f14d457" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KDL::ChainFkSolverPos_recursive::~ChainFkSolverPos_recursive</definition>
        <argsstring>()</argsstring>
        <name>~ChainFkSolverPos_recursive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainfksolverpos_recursive.hpp" line="40" column="9" bodyfile="src/chainfksolverpos_recursive.cpp" bodystart="96" bodyend="98"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Implementation of a recursive forward position kinematics algorithm to calculate the position transformation from joint space to Cartesian space of a general kinematic chain (<ref refid="classKDL_1_1Chain" kindref="compound">KDL::Chain</ref>). </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>KDL::SolverI</label>
        <link refid="classKDL_1_1SolverI"/>
      </node>
      <node id="1">
        <label>KDL::ChainFkSolverPos_recursive</label>
        <link refid="classKDL_1_1ChainFkSolverPos__recursive"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KDL::ChainFkSolverPos</label>
        <link refid="classKDL_1_1ChainFkSolverPos"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>std::vector&lt; KDL::Segment &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="3">
        <label>KDL::SolverI</label>
        <link refid="classKDL_1_1SolverI"/>
      </node>
      <node id="1">
        <label>KDL::ChainFkSolverPos_recursive</label>
        <link refid="classKDL_1_1ChainFkSolverPos__recursive"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>chain</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>KDL::Chain</label>
        <link refid="classKDL_1_1Chain"/>
        <childnode refid="5" relation="usage">
          <edgelabel>segments</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>KDL::ChainFkSolverPos</label>
        <link refid="classKDL_1_1ChainFkSolverPos"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/chainfksolverpos_recursive.hpp" line="37" column="1" bodyfile="src/chainfksolverpos_recursive.hpp" bodystart="36" bodyend="49"/>
    <listofallmembers>
      <member refid="classKDL_1_1ChainFkSolverPos__recursive_1af6ca8b78affdae1139c732689dba6c7b" prot="private" virt="non-virtual"><scope>KDL::ChainFkSolverPos_recursive</scope><name>chain</name></member>
      <member refid="classKDL_1_1ChainFkSolverPos__recursive_1ab710e9b2e4b6e2daa09ef3e139c4554e" prot="public" virt="non-virtual"><scope>KDL::ChainFkSolverPos_recursive</scope><name>ChainFkSolverPos_recursive</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a037090bae35fcc0264c70287d3b926d6" prot="public" virt="non-virtual"><scope>KDL::ChainFkSolverPos_recursive</scope><name>E_DEGRADED</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a17178be368599dd456b54c2d37c4fb50" prot="public" virt="non-virtual"><scope>KDL::ChainFkSolverPos_recursive</scope><name>E_MAX_ITERATIONS_EXCEEDED</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148aa19df6d3f1007614f98aadbaea84d89f" prot="public" virt="non-virtual"><scope>KDL::ChainFkSolverPos_recursive</scope><name>E_NO_CONVERGE</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a95f2e049884a3a08fc4f839e4cbf6191" prot="public" virt="non-virtual"><scope>KDL::ChainFkSolverPos_recursive</scope><name>E_NOERROR</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a749aec827a10228473b653f18bc20197" prot="public" virt="non-virtual"><scope>KDL::ChainFkSolverPos_recursive</scope><name>E_NOT_IMPLEMENTED</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a1803914d79d602cbc5ffced121c5278c" prot="public" virt="non-virtual"><scope>KDL::ChainFkSolverPos_recursive</scope><name>E_NOT_UP_TO_DATE</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148af7440fec45c6d1657a89d344ff5b6583" prot="public" virt="non-virtual"><scope>KDL::ChainFkSolverPos_recursive</scope><name>E_OUT_OF_RANGE</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a713b62c139a0caee351f94aa7598e56a" prot="public" virt="non-virtual"><scope>KDL::ChainFkSolverPos_recursive</scope><name>E_SIZE_MISMATCH</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148ac70eed0a4997fd525b00e5eddeb39ba5" prot="public" virt="non-virtual"><scope>KDL::ChainFkSolverPos_recursive</scope><name>E_SVD_FAILED</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a4ad4b1f9f4f4c7dd43898c06ecc73c06" prot="public" virt="non-virtual"><scope>KDL::ChainFkSolverPos_recursive</scope><name>E_UNDEFINED</name></member>
      <member refid="classKDL_1_1SolverI_1a62d29639f6396a0660ce7e3958d14718" prot="protected" virt="non-virtual"><scope>KDL::ChainFkSolverPos_recursive</scope><name>error</name></member>
      <member refid="classKDL_1_1SolverI_1a0473a25058060878b90ace7324ae1d47" prot="public" virt="virtual"><scope>KDL::ChainFkSolverPos_recursive</scope><name>getError</name></member>
      <member refid="classKDL_1_1ChainFkSolverPos__recursive_1a2b34c9fae293b9866ede9df203ec1fc8" prot="public" virt="virtual"><scope>KDL::ChainFkSolverPos_recursive</scope><name>JntToCart</name></member>
      <member refid="classKDL_1_1ChainFkSolverPos__recursive_1a80e2107f662af8783ad0738fcb4b0718" prot="public" virt="virtual"><scope>KDL::ChainFkSolverPos_recursive</scope><name>JntToCart</name></member>
      <member refid="classKDL_1_1SolverI_1a2fd94680969bab93b792dabfdcfc9a80" prot="public" virt="non-virtual"><scope>KDL::ChainFkSolverPos_recursive</scope><name>SolverI</name></member>
      <member refid="classKDL_1_1SolverI_1a5f9c4f020d4d609d8d10a7a949e8195c" prot="public" virt="virtual"><scope>KDL::ChainFkSolverPos_recursive</scope><name>strError</name></member>
      <member refid="classKDL_1_1ChainFkSolverPos__recursive_1add89f7d75ae7c0c971bb958dda01643c" prot="public" virt="virtual"><scope>KDL::ChainFkSolverPos_recursive</scope><name>updateInternalDataStructures</name></member>
      <member refid="classKDL_1_1ChainFkSolverPos_1a68dcdf4c69a6dd3dc9b04f4dfe43bd6a" prot="public" virt="virtual"><scope>KDL::ChainFkSolverPos_recursive</scope><name>~ChainFkSolverPos</name></member>
      <member refid="classKDL_1_1ChainFkSolverPos__recursive_1a865a04321e9bf79d56c691445f14d457" prot="public" virt="non-virtual"><scope>KDL::ChainFkSolverPos_recursive</scope><name>~ChainFkSolverPos_recursive</name></member>
      <member refid="classKDL_1_1SolverI_1ab70782f0d3632c22fcd430ef719d0f2f" prot="public" virt="virtual"><scope>KDL::ChainFkSolverPos_recursive</scope><name>~SolverI</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
