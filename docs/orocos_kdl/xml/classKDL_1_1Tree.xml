<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classKDL_1_1Tree" kind="class" language="C++" prot="public">
    <compoundname>KDL::Tree</compoundname>
    <includes refid="tree_8hpp" local="no">tree.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classKDL_1_1Tree_1a2ceab0992f079a0c660ecea04adc0c5f" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int KDL::Tree::nrOfJoints</definition>
        <argsstring></argsstring>
        <name>nrOfJoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tree.hpp" line="103" column="22" bodyfile="src/tree.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Tree_1a8243891d120587880d5c0208a5e4c41d" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int KDL::Tree::nrOfSegments</definition>
        <argsstring></argsstring>
        <name>nrOfSegments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tree.hpp" line="104" column="22" bodyfile="src/tree.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Tree_1a44ddc18522a5cd2ea096dce215f309ec" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>std::string KDL::Tree::root_name</definition>
        <argsstring></argsstring>
        <name>root_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tree.hpp" line="106" column="21" bodyfile="src/tree.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Tree_1a5004f557bed3267e3a501fa8bcd6bba2" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceKDL_1a6bfcccbcc840654a88822ddd0ee6bdaa" kindref="member">SegmentMap</ref></type>
        <definition>SegmentMap KDL::Tree::segments</definition>
        <argsstring></argsstring>
        <name>segments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tree.hpp" line="102" column="20" bodyfile="src/tree.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classKDL_1_1Tree_1a825fb0cbb281afd4dd03fe7efe1974f0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KDL::Tree::addTreeRecursive</definition>
        <argsstring>(SegmentMap::const_iterator root, const std::string &amp;hook_name)</argsstring>
        <name>addTreeRecursive</name>
        <param>
          <type>SegmentMap::const_iterator</type>
          <declname>root</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>hook_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tree.hpp" line="108" column="14" bodyfile="src/tree.cpp" bodystart="97" bodyend="114"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classKDL_1_1Tree_1a64846c4151ff7ef97897ae4b462a23c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KDL::Tree::addChain</definition>
        <argsstring>(const Chain &amp;chain, const std::string &amp;hook_name)</argsstring>
        <name>addChain</name>
        <param>
          <type>const <ref refid="classKDL_1_1Chain" kindref="compound">Chain</ref> &amp;</type>
          <declname>chain</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>hook_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a complete chain to the end of the segment with hook_name as segment_name.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hook_name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the segment to connect the chain with.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if hook_name could not be found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tree.hpp" line="138" column="14" bodyfile="src/tree.cpp" bodystart="82" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Tree_1a6a0b05c008c3d1d64696560bd30df666" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KDL::Tree::addSegment</definition>
        <argsstring>(const Segment &amp;segment, const std::string &amp;hook_name)</argsstring>
        <name>addSegment</name>
        <param>
          <type>const <ref refid="classKDL_1_1Segment" kindref="compound">Segment</ref> &amp;</type>
          <declname>segment</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>hook_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a new segment to the end of the segment with hook_name as segment_name</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>segment</parametername>
</parameternamelist>
<parameterdescription>
<para>new segment to add </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hook_name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the segment to connect this segment with.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if hook_name could not be found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tree.hpp" line="128" column="15" bodyfile="src/tree.cpp" bodystart="54" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Tree_1a8696ea29e3e98668f37b4ba937d0e9ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KDL::Tree::addTree</definition>
        <argsstring>(const Tree &amp;tree, const std::string &amp;hook_name)</argsstring>
        <name>addTree</name>
        <param>
          <type>const <ref refid="classKDL_1_1Tree" kindref="compound">Tree</ref> &amp;</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>hook_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a complete tree to the end of the segment with hookname as segment_name.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classKDL_1_1Tree" kindref="compound">Tree</ref> to add </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hook_name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the segment to connect the tree with</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if hook_name could not be found </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tree.hpp" line="149" column="14" bodyfile="src/tree.cpp" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Tree_1a8f68dc4d321c6c74a35f30fb1966b1e7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KDL::Tree::getChain</definition>
        <argsstring>(const std::string &amp;chain_root, const std::string &amp;chain_tip, Chain &amp;chain) const</argsstring>
        <name>getChain</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>chain_root</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>chain_tip</declname>
        </param>
        <param>
          <type><ref refid="classKDL_1_1Chain" kindref="compound">Chain</ref> &amp;</type>
          <declname>chain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request the chain of the tree between chain_root and chain_tip. The chain_root and chain_tip can be in different branches of the tree, the chain_root can be an ancestor of chain_tip, and chain_tip can be an ancestor of chain_root.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chain_root</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the root segment of the chain </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chain_tip</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the tip segment of the chain </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chain</parametername>
</parameternamelist>
<parameterdescription>
<para>the resulting chain</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success or failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tree.hpp" line="202" column="14" bodyfile="src/tree.cpp" bodystart="116" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Tree_1afd53537e6aeacc9f8a524f6ea90d1360" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int KDL::Tree::getNrOfJoints</definition>
        <argsstring>() const</argsstring>
        <name>getNrOfJoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request the total number of joints in the tree.<linebreak/>
<bold> Important:</bold> It is not the same as the total number of segments since a segment does not need to have a joint.</para>
<para><simplesect kind="return"><para>total nr of joints </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tree.hpp" line="159" column="22" bodyfile="src/tree.hpp" bodystart="159" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Tree_1a654283bac6ca20937f32c728188204e6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int KDL::Tree::getNrOfSegments</definition>
        <argsstring>() const</argsstring>
        <name>getNrOfSegments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request the total number of segments in the tree. <simplesect kind="return"><para>total number of segments </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tree.hpp" line="168" column="22" bodyfile="src/tree.hpp" bodystart="168" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Tree_1a5e09f42e17a4916ddb82467f07c3b777" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>SegmentMap::const_iterator</type>
        <definition>SegmentMap::const_iterator KDL::Tree::getRootSegment</definition>
        <argsstring>() const</argsstring>
        <name>getRootSegment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request the root segment of the tree</para>
<para><simplesect kind="return"><para>constant iterator pointing to the root segment </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tree.hpp" line="186" column="36" bodyfile="src/tree.hpp" bodystart="186" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Tree_1a492af8de617b36db29cbbda7d79e2be8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>SegmentMap::const_iterator</type>
        <definition>SegmentMap::const_iterator KDL::Tree::getSegment</definition>
        <argsstring>(const std::string &amp;segment_name) const</argsstring>
        <name>getSegment</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>segment_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request the segment of the tree with name segment_name.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>segment_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the requested segment</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>constant iterator pointing to the requested segment </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tree.hpp" line="177" column="36" bodyfile="src/tree.hpp" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Tree_1a311a9126ac60f87246223ef584df49c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespaceKDL_1a6bfcccbcc840654a88822ddd0ee6bdaa" kindref="member">SegmentMap</ref> &amp;</type>
        <definition>const SegmentMap&amp; KDL::Tree::getSegments</definition>
        <argsstring>() const</argsstring>
        <name>getSegments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tree.hpp" line="218" column="26" bodyfile="src/tree.hpp" bodystart="218" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Tree_1acf6603c458e8ebbc86e20e4185b2c42c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KDL::Tree::getSubTree</definition>
        <argsstring>(const std::string &amp;segment_name, Tree &amp;tree) const</argsstring>
        <name>getSubTree</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>segment_name</declname>
        </param>
        <param>
          <type><ref refid="classKDL_1_1Tree" kindref="compound">Tree</ref> &amp;</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extract a tree having segment_name as root. Only child segments of segment_name are added to the new tree.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>segment_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the segment to be used as root of the new tree </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>the resulting sub-tree</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success or failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tree.hpp" line="216" column="14" bodyfile="src/tree.cpp" bodystart="165" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Tree_1a0bae12b4952112c15c3647ae04dd35e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKDL_1_1Tree" kindref="compound">Tree</ref> &amp;</type>
        <definition>Tree &amp; KDL::Tree::operator=</definition>
        <argsstring>(const Tree &amp;arg)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classKDL_1_1Tree" kindref="compound">Tree</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tree.hpp" line="116" column="14" bodyfile="src/tree.cpp" bodystart="43" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Tree_1acdc877b83d656b85ac5e8d9a1f162f3c" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KDL::Tree::Tree</definition>
        <argsstring>(const std::string &amp;root_name=&quot;root&quot;)</argsstring>
        <name>Tree</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>root_name</declname>
          <defval>&quot;root&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The constructor of a tree, a new tree is always empty </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tree.hpp" line="114" column="18" bodyfile="src/tree.cpp" bodystart="27" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Tree_1adb37b7fbd9be35e875efc3c84af67090" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KDL::Tree::Tree</definition>
        <argsstring>(const Tree &amp;in)</argsstring>
        <name>Tree</name>
        <param>
          <type>const <ref refid="classKDL_1_1Tree" kindref="compound">Tree</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tree.hpp" line="115" column="9" bodyfile="src/tree.cpp" bodystart="33" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Tree_1a992c012dce434166eebaa759087e5fdb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual KDL::Tree::~Tree</definition>
        <argsstring>()</argsstring>
        <name>~Tree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tree.hpp" line="223" column="17" bodyfile="src/tree.hpp" bodystart="223" bodyend="223"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class encapsulates a <bold>tree</bold> kinematic interconnection structure. It is built out of segments. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>KDL::Tree</label>
        <link refid="classKDL_1_1Tree"/>
        <childnode refid="2" relation="usage">
          <edgelabel>segments</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>root_name</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::map&lt; std::string, TreeElement &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="3">
        <label>std::string</label>
        <link refid="cpp/string/basic_string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="src/tree.hpp" line="100" column="1" bodyfile="src/tree.hpp" bodystart="99" bodyend="225"/>
    <listofallmembers>
      <member refid="classKDL_1_1Tree_1a64846c4151ff7ef97897ae4b462a23c4" prot="public" virt="non-virtual"><scope>KDL::Tree</scope><name>addChain</name></member>
      <member refid="classKDL_1_1Tree_1a6a0b05c008c3d1d64696560bd30df666" prot="public" virt="non-virtual"><scope>KDL::Tree</scope><name>addSegment</name></member>
      <member refid="classKDL_1_1Tree_1a8696ea29e3e98668f37b4ba937d0e9ba" prot="public" virt="non-virtual"><scope>KDL::Tree</scope><name>addTree</name></member>
      <member refid="classKDL_1_1Tree_1a825fb0cbb281afd4dd03fe7efe1974f0" prot="private" virt="non-virtual"><scope>KDL::Tree</scope><name>addTreeRecursive</name></member>
      <member refid="classKDL_1_1Tree_1a8f68dc4d321c6c74a35f30fb1966b1e7" prot="public" virt="non-virtual"><scope>KDL::Tree</scope><name>getChain</name></member>
      <member refid="classKDL_1_1Tree_1afd53537e6aeacc9f8a524f6ea90d1360" prot="public" virt="non-virtual"><scope>KDL::Tree</scope><name>getNrOfJoints</name></member>
      <member refid="classKDL_1_1Tree_1a654283bac6ca20937f32c728188204e6" prot="public" virt="non-virtual"><scope>KDL::Tree</scope><name>getNrOfSegments</name></member>
      <member refid="classKDL_1_1Tree_1a5e09f42e17a4916ddb82467f07c3b777" prot="public" virt="non-virtual"><scope>KDL::Tree</scope><name>getRootSegment</name></member>
      <member refid="classKDL_1_1Tree_1a492af8de617b36db29cbbda7d79e2be8" prot="public" virt="non-virtual"><scope>KDL::Tree</scope><name>getSegment</name></member>
      <member refid="classKDL_1_1Tree_1a311a9126ac60f87246223ef584df49c1" prot="public" virt="non-virtual"><scope>KDL::Tree</scope><name>getSegments</name></member>
      <member refid="classKDL_1_1Tree_1acf6603c458e8ebbc86e20e4185b2c42c" prot="public" virt="non-virtual"><scope>KDL::Tree</scope><name>getSubTree</name></member>
      <member refid="classKDL_1_1Tree_1a2ceab0992f079a0c660ecea04adc0c5f" prot="private" virt="non-virtual"><scope>KDL::Tree</scope><name>nrOfJoints</name></member>
      <member refid="classKDL_1_1Tree_1a8243891d120587880d5c0208a5e4c41d" prot="private" virt="non-virtual"><scope>KDL::Tree</scope><name>nrOfSegments</name></member>
      <member refid="classKDL_1_1Tree_1a0bae12b4952112c15c3647ae04dd35e9" prot="public" virt="non-virtual"><scope>KDL::Tree</scope><name>operator=</name></member>
      <member refid="classKDL_1_1Tree_1a44ddc18522a5cd2ea096dce215f309ec" prot="private" virt="non-virtual"><scope>KDL::Tree</scope><name>root_name</name></member>
      <member refid="classKDL_1_1Tree_1a5004f557bed3267e3a501fa8bcd6bba2" prot="private" virt="non-virtual"><scope>KDL::Tree</scope><name>segments</name></member>
      <member refid="classKDL_1_1Tree_1acdc877b83d656b85ac5e8d9a1f162f3c" prot="public" virt="non-virtual"><scope>KDL::Tree</scope><name>Tree</name></member>
      <member refid="classKDL_1_1Tree_1adb37b7fbd9be35e875efc3c84af67090" prot="public" virt="non-virtual"><scope>KDL::Tree</scope><name>Tree</name></member>
      <member refid="classKDL_1_1Tree_1a992c012dce434166eebaa759087e5fdb" prot="public" virt="virtual"><scope>KDL::Tree</scope><name>~Tree</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
