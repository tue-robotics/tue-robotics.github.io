<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classKDL_1_1Path__Point" kind="class" language="C++" prot="public">
    <compoundname>KDL::Path_Point</compoundname>
    <basecompoundref refid="classKDL_1_1Path" prot="public" virt="non-virtual">KDL::Path</basecompoundref>
    <includes refid="path__point_8hpp" local="no">path_point.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classKDL_1_1Path__Point_1aac2750961582b732c6628ceedad71271" prot="private" static="no" mutable="no">
        <type><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref></type>
        <definition>Frame KDL::Path_Point::F_base_start</definition>
        <argsstring></argsstring>
        <name>F_base_start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_point.hpp" line="143" column="7" bodyfile="src/path_point.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classKDL_1_1Path__Point_1a67ad2f25fbe4c5c6cc5fe17bdc122fab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref></type>
        <definition>Twist KDL::Path_Point::Acc</definition>
        <argsstring>(double s, double sd, double sdd) const</argsstring>
        <name>Acc</name>
        <reimplements refid="classKDL_1_1Path_1a274dd481c1ab921f898cddb618e7e42b">Acc</reimplements>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sd</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sdd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the acceleration twist at path length s and with derivative of s == sd, and 2nd derivative of s == sdd </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_point.hpp" line="153" column="15" bodyfile="src/path_point.cpp" bodystart="104" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Point_1a54b78f0225a17c2e384fdca0267ebe72" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classKDL_1_1Path" kindref="compound">Path</ref> *</type>
        <definition>Path * KDL::Path_Point::Clone</definition>
        <argsstring>()</argsstring>
        <name>Clone</name>
        <reimplements refid="classKDL_1_1Path_1a06926be0592bbe853ee9d040a4e420d3">Clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Virtual constructor, constructing by copying, Returns a deep copy of this <ref refid="classKDL_1_1Path" kindref="compound">Path</ref> Object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_point.hpp" line="155" column="14" bodyfile="src/path_point.cpp" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Point_1a1f0df92db10b750a1ecc11635bf96115" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09" kindref="member">IdentifierType</ref></type>
        <definition>virtual IdentifierType KDL::Path_Point::getIdentifier</definition>
        <argsstring>() const</argsstring>
        <name>getIdentifier</name>
        <reimplements refid="classKDL_1_1Path_1aa28b0993963870a6c754b19e5cd06fec">getIdentifier</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets an identifier indicating the type of this <ref refid="classKDL_1_1Path" kindref="compound">Path</ref> object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_point.hpp" line="160" column="24" bodyfile="src/path_point.hpp" bodystart="160" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Point_1a920f57134fdf4234dd04c7728f978567" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double KDL::Path_Point::LengthToS</definition>
        <argsstring>(double length)</argsstring>
        <name>LengthToS</name>
        <reimplements refid="group__Motion_1gad7f55a1d6f7a076b0959c76c29cc323d">LengthToS</reimplements>
        <param>
          <type>double</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classKDL_1_1Path__Point_1a920f57134fdf4234dd04c7728f978567" kindref="member">LengthToS()</ref> converts a physical length along the trajectory to the parameter s used in Pos, Vel and Acc. This is used because in cases with large rotations the parameter s does NOT correspond to the lineair length along the trajectory. User should be sure that the lineair distance travelled by this path object is NOT zero, when using this method ! (e.g. the case of only rotational change) throws <ref refid="classKDL_1_1Error__MotionPlanning__Not__Applicable" kindref="compound">Error_MotionPlanning_Not_Applicable</ref> if used on composed path objects. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_point.hpp" line="149" column="8" bodyfile="src/path_point.cpp" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Point_1a3ce8e76365cc81c92f6285e5ba5feaf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KDL::Path_Point::Path_Point</definition>
        <argsstring>(const Frame &amp;F_base_start)</argsstring>
        <name>Path_Point</name>
        <param>
          <type>const <ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref> &amp;</type>
          <declname>F_base_start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a Point <ref refid="classKDL_1_1Path" kindref="compound">Path</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_point.hpp" line="148" column="1" bodyfile="src/path_point.cpp" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Point_1a2fc2b2a544257183d4d21bb23029e6ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double KDL::Path_Point::PathLength</definition>
        <argsstring>()</argsstring>
        <name>PathLength</name>
        <reimplements refid="classKDL_1_1Path_1a095d3ce8d48bd9f8953793c60532cd1a">PathLength</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the total path length of the trajectory (has dimension LENGTH) This is not always a physical length , ie when dealing with rotations that are dominant. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_point.hpp" line="150" column="16" bodyfile="src/path_point.cpp" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Point_1aecdb16b134d27bb0c6f457e0f340699e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref></type>
        <definition>Frame KDL::Path_Point::Pos</definition>
        <argsstring>(double s) const</argsstring>
        <name>Pos</name>
        <reimplements refid="classKDL_1_1Path_1ab0121ec33eee9525bd3c883a1631bf6c">Pos</reimplements>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref> at the current path length s </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_point.hpp" line="151" column="15" bodyfile="src/path_point.cpp" bodystart="96" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Point_1a849e3c029cfd21f7488b57c2da79b809" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref></type>
        <definition>Twist KDL::Path_Point::Vel</definition>
        <argsstring>(double s, double sd) const</argsstring>
        <name>Vel</name>
        <reimplements refid="classKDL_1_1Path_1a6982dc012ef4299cffc1be99ef225d98">Vel</reimplements>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the velocity twist at path length s theta and with derivative of s == sd </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_point.hpp" line="152" column="15" bodyfile="src/path_point.cpp" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Point_1aaee84835ba0e8fc0c39bf48b2e4a681a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KDL::Path_Point::Write</definition>
        <argsstring>(std::ostream &amp;os)</argsstring>
        <name>Write</name>
        <reimplements refid="classKDL_1_1Path_1a3c1c34464d34183fc965af1ea260879d">Write</reimplements>
        <param>
          <type><ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref> &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes one of the derived objects to the stream </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_point.hpp" line="154" column="14" bodyfile="src/path_point.cpp" bodystart="115" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Point_1ab2f4ecd33e3769e3f56044167eb592a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>KDL::Path_Point::~Path_Point</definition>
        <argsstring>()</argsstring>
        <name>~Path_Point</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_point.hpp" line="163" column="9" bodyfile="src/path_point.cpp" bodystart="108" bodyend="109"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A <ref refid="classKDL_1_1Path" kindref="compound">Path</ref> consisting only of a point in space. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KDL::Path_Point</label>
        <link refid="classKDL_1_1Path__Point"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KDL::Path</label>
        <link refid="classKDL_1_1Path"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>KDL::Rotation</label>
        <link refid="classKDL_1_1Rotation"/>
      </node>
      <node id="1">
        <label>KDL::Path_Point</label>
        <link refid="classKDL_1_1Path__Point"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>F_base_start</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>KDL::Path</label>
        <link refid="classKDL_1_1Path"/>
      </node>
      <node id="3">
        <label>KDL::Frame</label>
        <link refid="classKDL_1_1Frame"/>
        <childnode refid="4" relation="usage">
          <edgelabel>p</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>M</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>KDL::Vector</label>
        <link refid="classKDL_1_1Vector"/>
      </node>
    </collaborationgraph>
    <location file="src/path_point.hpp" line="102" column="1" bodyfile="src/path_point.hpp" bodystart="101" bodyend="124"/>
    <listofallmembers>
      <member refid="classKDL_1_1Path__Point_1a67ad2f25fbe4c5c6cc5fe17bdc122fab" prot="public" virt="virtual"><scope>KDL::Path_Point</scope><name>Acc</name></member>
      <member refid="classKDL_1_1Path__Point_1a54b78f0225a17c2e384fdca0267ebe72" prot="public" virt="virtual"><scope>KDL::Path_Point</scope><name>Clone</name></member>
      <member refid="classKDL_1_1Path__Point_1aac2750961582b732c6628ceedad71271" prot="private" virt="non-virtual"><scope>KDL::Path_Point</scope><name>F_base_start</name></member>
      <member refid="classKDL_1_1Path__Point_1a1f0df92db10b750a1ecc11635bf96115" prot="public" virt="virtual"><scope>KDL::Path_Point</scope><name>getIdentifier</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09a0ce2e4f0f5a61c01cecafbe0084682cd" prot="public" virt="non-virtual"><scope>KDL::Path_Point</scope><name>ID_CIRCLE</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09a0e63c4744e46f92e2599ca9fbf50f6a4" prot="public" virt="non-virtual"><scope>KDL::Path_Point</scope><name>ID_COMPOSITE</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09ae0cd5b91c304ea865d3e2ffe642a47d8" prot="public" virt="non-virtual"><scope>KDL::Path_Point</scope><name>ID_CYCLIC_CLOSED</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09a4f9ed1827474558375d8fdcc6fa22a8c" prot="public" virt="non-virtual"><scope>KDL::Path_Point</scope><name>ID_LINE</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09ad0c76d25569cecb6d38bce3ec92cd8eb" prot="public" virt="non-virtual"><scope>KDL::Path_Point</scope><name>ID_POINT</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09a6458e9e3355fb8ebdcd540ae753aadbd" prot="public" virt="non-virtual"><scope>KDL::Path_Point</scope><name>ID_ROUNDED_COMPOSITE</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09" prot="public" virt="non-virtual"><scope>KDL::Path_Point</scope><name>IdentifierType</name></member>
      <member refid="classKDL_1_1Path__Point_1a920f57134fdf4234dd04c7728f978567" prot="public" virt="virtual"><scope>KDL::Path_Point</scope><name>LengthToS</name></member>
      <member refid="classKDL_1_1Path__Point_1a3ce8e76365cc81c92f6285e5ba5feaf1" prot="public" virt="non-virtual"><scope>KDL::Path_Point</scope><name>Path_Point</name></member>
      <member refid="classKDL_1_1Path__Point_1a2fc2b2a544257183d4d21bb23029e6ee" prot="public" virt="virtual"><scope>KDL::Path_Point</scope><name>PathLength</name></member>
      <member refid="classKDL_1_1Path__Point_1aecdb16b134d27bb0c6f457e0f340699e" prot="public" virt="virtual"><scope>KDL::Path_Point</scope><name>Pos</name></member>
      <member refid="classKDL_1_1Path_1a15dfd941258db019a5b30c666e51b358" prot="public" virt="non-virtual"><scope>KDL::Path_Point</scope><name>Read</name></member>
      <member refid="classKDL_1_1Path__Point_1a849e3c029cfd21f7488b57c2da79b809" prot="public" virt="virtual"><scope>KDL::Path_Point</scope><name>Vel</name></member>
      <member refid="classKDL_1_1Path__Point_1aaee84835ba0e8fc0c39bf48b2e4a681a" prot="public" virt="virtual"><scope>KDL::Path_Point</scope><name>Write</name></member>
      <member refid="classKDL_1_1Path_1a10f16828c888527755e8a59c906b5a57" prot="public" virt="virtual"><scope>KDL::Path_Point</scope><name>~Path</name></member>
      <member refid="classKDL_1_1Path__Point_1ab2f4ecd33e3769e3f56044167eb592a1" prot="public" virt="virtual"><scope>KDL::Path_Point</scope><name>~Path_Point</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
