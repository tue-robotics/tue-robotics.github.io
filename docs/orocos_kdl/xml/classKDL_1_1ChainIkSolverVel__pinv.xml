<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classKDL_1_1ChainIkSolverVel__pinv" kind="class" language="C++" prot="public">
    <compoundname>KDL::ChainIkSolverVel_pinv</compoundname>
    <basecompoundref refid="classKDL_1_1ChainIkSolverVel" prot="public" virt="non-virtual">KDL::ChainIkSolverVel</basecompoundref>
    <includes refid="chainiksolvervel__pinv_8hpp" local="no">chainiksolvervel_pinv.hpp</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__pinv_1a5c3646dc5104390e7d6a92490b2785e6" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int KDL::ChainIkSolverVel_pinv::E_CONVERGE_PINV_SINGULAR</definition>
        <argsstring></argsstring>
        <name>E_CONVERGE_PINV_SINGULAR</name>
        <initializer>= +100</initializer>
        <briefdescription>
<para>solution converged but (pseudo)inverse is singular </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_pinv.hpp" line="44" column="26" bodyfile="src/chainiksolvervel_pinv.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__pinv_1ae15d4865aa87eed56119383e285b15f0" prot="private" static="no" mutable="no">
        <type>const <ref refid="classKDL_1_1Chain" kindref="compound">Chain</ref> &amp;</type>
        <definition>const Chain&amp; KDL::ChainIkSolverVel_pinv::chain</definition>
        <argsstring></argsstring>
        <name>chain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_pinv.hpp" line="101" column="21" bodyfile="src/chainiksolvervel_pinv.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__pinv_1a899ca50575fa2174bb72f8df7a054cd9" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double KDL::ChainIkSolverVel_pinv::eps</definition>
        <argsstring></argsstring>
        <name>eps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_pinv.hpp" line="110" column="16" bodyfile="src/chainiksolvervel_pinv.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__pinv_1a791d302c1b7c9ff069cc95753e545372" prot="private" static="no" mutable="no">
        <type><ref refid="classKDL_1_1Jacobian" kindref="compound">Jacobian</ref></type>
        <definition>Jacobian KDL::ChainIkSolverVel_pinv::jac</definition>
        <argsstring></argsstring>
        <name>jac</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_pinv.hpp" line="104" column="18" bodyfile="src/chainiksolvervel_pinv.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__pinv_1a5a5db8bae9e8d072f38e6d099b24ac3a" prot="private" static="no" mutable="no">
        <type><ref refid="classKDL_1_1ChainJntToJacSolver" kindref="compound">ChainJntToJacSolver</ref></type>
        <definition>ChainJntToJacSolver KDL::ChainIkSolverVel_pinv::jnt2jac</definition>
        <argsstring></argsstring>
        <name>jnt2jac</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_pinv.hpp" line="102" column="29" bodyfile="src/chainiksolvervel_pinv.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__pinv_1aecff45cca9a71c1f9d05b667e745440c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KDL::ChainIkSolverVel_pinv::maxiter</definition>
        <argsstring></argsstring>
        <name>maxiter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_pinv.hpp" line="111" column="13" bodyfile="src/chainiksolvervel_pinv.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__pinv_1a25bdc9ae589ead9552edcfca97dc4d04" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int KDL::ChainIkSolverVel_pinv::nj</definition>
        <argsstring></argsstring>
        <name>nj</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_pinv.hpp" line="103" column="22" bodyfile="src/chainiksolvervel_pinv.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__pinv_1a1770935b3f28015b17e9a2e6c84ec438" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int KDL::ChainIkSolverVel_pinv::nrZeroSigmas</definition>
        <argsstring></argsstring>
        <name>nrZeroSigmas</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_pinv.hpp" line="112" column="22" bodyfile="src/chainiksolvervel_pinv.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__pinv_1a9fe563b395d48ce3bbd9b80a4fee485f" prot="private" static="no" mutable="no">
        <type><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref></type>
        <definition>JntArray KDL::ChainIkSolverVel_pinv::S</definition>
        <argsstring></argsstring>
        <name>S</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_pinv.hpp" line="107" column="18" bodyfile="src/chainiksolvervel_pinv.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__pinv_1a448317e52547e8113d460c00c90e5425" prot="private" static="no" mutable="no">
        <type><ref refid="classKDL_1_1SVD__HH" kindref="compound">SVD_HH</ref></type>
        <definition>SVD_HH KDL::ChainIkSolverVel_pinv::svd</definition>
        <argsstring></argsstring>
        <name>svd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_pinv.hpp" line="105" column="16" bodyfile="src/chainiksolvervel_pinv.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__pinv_1adc14c8852cd3c9d5e8a3e14d1832f081" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KDL::ChainIkSolverVel_pinv::svdResult</definition>
        <argsstring></argsstring>
        <name>svdResult</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_pinv.hpp" line="113" column="13" bodyfile="src/chainiksolvervel_pinv.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__pinv_1a77b203bedac04433f540562bfe091a1b" prot="private" static="no" mutable="no">
        <type><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref></type>
        <definition>JntArray KDL::ChainIkSolverVel_pinv::tmp</definition>
        <argsstring></argsstring>
        <name>tmp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_pinv.hpp" line="109" column="18" bodyfile="src/chainiksolvervel_pinv.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__pinv_1a066f9a8b464e5dd5a9ab49e3b72d43e9" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref> &gt;</type>
        <definition>std::vector&lt;JntArray&gt; KDL::ChainIkSolverVel_pinv::U</definition>
        <argsstring></argsstring>
        <name>U</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_pinv.hpp" line="106" column="21" bodyfile="src/chainiksolvervel_pinv.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1ChainIkSolverVel__pinv_1a4d223e586714627dd109b3072d7d6ea5" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref> &gt;</type>
        <definition>std::vector&lt;JntArray&gt; KDL::ChainIkSolverVel_pinv::V</definition>
        <argsstring></argsstring>
        <name>V</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_pinv.hpp" line="108" column="21" bodyfile="src/chainiksolvervel_pinv.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classKDL_1_1ChainIkSolverVel__pinv_1a1a61506b8dc256e52a6c924987014eac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int KDL::ChainIkSolverVel_pinv::CartToJnt</definition>
        <argsstring>(const JntArray &amp;, const FrameVel &amp;, JntArrayVel &amp;)</argsstring>
        <name>CartToJnt</name>
        <reimplements refid="classKDL_1_1ChainIkSolverVel_1a50009426df14377d417396596dc48c2a">CartToJnt</reimplements>
        <param>
          <type>const <ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1FrameVel" kindref="compound">FrameVel</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="classKDL_1_1JntArrayVel" kindref="compound">JntArrayVel</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>not (yet) implemented. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_pinv.hpp" line="80" column="21" bodyfile="src/chainiksolvervel_pinv.hpp" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainIkSolverVel__pinv_1a202bae1336d36647917b761ee8d5f7ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int KDL::ChainIkSolverVel_pinv::CartToJnt</definition>
        <argsstring>(const JntArray &amp;q_in, const Twist &amp;v_in, JntArray &amp;qdot_out)</argsstring>
        <name>CartToJnt</name>
        <reimplements refid="classKDL_1_1ChainIkSolverVel_1a761853db487c901485737c6334953cbe">CartToJnt</reimplements>
        <param>
          <type>const <ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref> &amp;</type>
          <declname>q_in</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref> &amp;</type>
          <declname>v_in</declname>
        </param>
        <param>
          <type><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref> &amp;</type>
          <declname>qdot_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find an output joint velocity <emphasis>qdot_out</emphasis>, given a starting joint pose <emphasis>q_init</emphasis> and a desired cartesian velocity <emphasis>v_in</emphasis> </para>
<para><simplesect kind="return"><para>E_NOERROR=solution converged to &lt;eps in maxiter E_SVD_FAILED=SVD computation failed E_CONVERGE_PINV_SINGULAR=solution converged but (pseudo)inverse is singular</para>
</simplesect>
<simplesect kind="note"><para>if E_CONVERGE_PINV_SINGULAR returned then converged and can continue motion, but have degraded solution</para>
</simplesect>
<simplesect kind="note"><para>If E_SVD_FAILED returned, then getSvdResult() returns the error code from the SVD algorithm. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_pinv.hpp" line="75" column="21" bodyfile="src/chainiksolvervel_pinv.cpp" bodystart="62" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainIkSolverVel__pinv_1a3a8f66b7d3c05ec2f0bcccbd7790f401" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KDL::ChainIkSolverVel_pinv::ChainIkSolverVel_pinv</definition>
        <argsstring>(const Chain &amp;chain, double eps=0.00001, int maxiter=150)</argsstring>
        <name>ChainIkSolverVel_pinv</name>
        <param>
          <type>const <ref refid="classKDL_1_1Chain" kindref="compound">Chain</ref> &amp;</type>
          <declname>chain</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
          <defval>0.00001</defval>
        </param>
        <param>
          <type>int</type>
          <declname>maxiter</declname>
          <defval>150</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor of the solver</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chain</parametername>
</parameternamelist>
<parameterdescription>
<para>the chain to calculate the inverse velocity kinematics for </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eps</parametername>
</parameternamelist>
<parameterdescription>
<para>if a singular value is below this value, its inverse is set to zero, default: 0.00001 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxiter</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum iterations for the svd calculation, default: 150 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_pinv.hpp" line="57" column="18" bodyfile="src/chainiksolvervel_pinv.cpp" bodystart="26" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainIkSolverVel__pinv_1a11d9df2fdfea7c7d616298c907ce672a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int KDL::ChainIkSolverVel_pinv::getNrZeroSigmas</definition>
        <argsstring>() const</argsstring>
        <name>getNrZeroSigmas</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the number of singular values of the jacobian that are &lt; eps; if the number of near zero singular values is &gt; jac.col()-jac.row(), then the jacobian pseudoinverse is singular </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_pinv.hpp" line="87" column="22" bodyfile="src/chainiksolvervel_pinv.hpp" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainIkSolverVel__pinv_1a3e5125ad0249c6b0227b687f5b269ece" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int KDL::ChainIkSolverVel_pinv::getSVDResult</definition>
        <argsstring>() const</argsstring>
        <name>getSVDResult</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the latest return code from the SVD algorithm <simplesect kind="return"><para>0 if <ref refid="classKDL_1_1ChainIkSolverVel__pinv_1a202bae1336d36647917b761ee8d5f7ea" kindref="member">CartToJnt()</ref> not yet called, otherwise latest SVD result code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_pinv.hpp" line="93" column="13" bodyfile="src/chainiksolvervel_pinv.hpp" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainIkSolverVel__pinv_1abc41e45b6a29f461755e2aa9ffd70b56" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const char *</type>
        <definition>const char * KDL::ChainIkSolverVel_pinv::strError</definition>
        <argsstring>(const int error) const</argsstring>
        <name>strError</name>
        <reimplements refid="classKDL_1_1SolverI_1a5f9c4f020d4d609d8d10a7a949e8195c">strError</reimplements>
        <param>
          <type>const int</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a description of the latest error <simplesect kind="return"><para>if <emphasis>error</emphasis> is known then a description of <emphasis>error</emphasis>, otherwise &quot;UNKNOWN ERROR&quot; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_pinv.hpp" line="96" column="28" bodyfile="src/chainiksolvervel_pinv.cpp" bodystart="132" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainIkSolverVel__pinv_1adfbf3b47f5f4aaf94df885adac06cad1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KDL::ChainIkSolverVel_pinv::updateInternalDataStructures</definition>
        <argsstring>()</argsstring>
        <name>updateInternalDataStructures</name>
        <reimplements refid="classKDL_1_1ChainIkSolverVel_1a174a1c69f3a2ffca72de3448311e93e5">updateInternalDataStructures</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update the internal data structures. This is required if the number of segments or number of joints of a chain/tree have changed. This provides a single point of contact for solver memory allocations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_pinv.hpp" line="99" column="22" bodyfile="src/chainiksolvervel_pinv.cpp" bodystart="43" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainIkSolverVel__pinv_1a6b84a108236d152c1aa3e8d42bab4df8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KDL::ChainIkSolverVel_pinv::~ChainIkSolverVel_pinv</definition>
        <argsstring>()</argsstring>
        <name>~ChainIkSolverVel_pinv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainiksolvervel_pinv.hpp" line="58" column="9" bodyfile="src/chainiksolvervel_pinv.cpp" bodystart="57" bodyend="59"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Implementation of a inverse velocity kinematics algorithm based on the generalize pseudo inverse to calculate the velocity transformation from Cartesian to joint space of a general <ref refid="classKDL_1_1Chain" kindref="compound">KDL::Chain</ref>. It uses a svd-calculation based on householders rotations. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KDL::ChainIkSolverVel</label>
        <link refid="classKDL_1_1ChainIkSolverVel"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KDL::ChainIkSolverVel_pinv</label>
        <link refid="classKDL_1_1ChainIkSolverVel__pinv"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>KDL::SolverI</label>
        <link refid="classKDL_1_1SolverI"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>KDL::ChainIkSolverVel</label>
        <link refid="classKDL_1_1ChainIkSolverVel"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>KDL::Rotation</label>
        <link refid="classKDL_1_1Rotation"/>
      </node>
      <node id="6">
        <label>std::vector&lt; KDL::Segment &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="7">
        <label>KDL::SVD_HH</label>
        <link refid="classKDL_1_1SVD__HH"/>
        <childnode refid="8" relation="usage">
          <edgelabel>tmp</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>KDL::ChainIkSolverVel_pinv</label>
        <link refid="classKDL_1_1ChainIkSolverVel__pinv"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>jac</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>chain</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>svd</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>U</edgelabel>
          <edgelabel>V</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>jnt2jac</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>tmp</edgelabel>
          <edgelabel>S</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>KDL::Twist</label>
        <link refid="classKDL_1_1Twist"/>
        <childnode refid="12" relation="usage">
          <edgelabel>rot</edgelabel>
          <edgelabel>vel</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>KDL::ChainJntToJacSolver</label>
        <link refid="classKDL_1_1ChainJntToJacSolver"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>t_tmp</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>chain</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>T_tmp</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>locked_joints_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>KDL::SolverI</label>
        <link refid="classKDL_1_1SolverI"/>
      </node>
      <node id="8">
        <label>KDL::JntArray</label>
        <link refid="classKDL_1_1JntArray"/>
      </node>
      <node id="9">
        <label>std::vector&lt; KDL::JntArray &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="13">
        <label>KDL::Frame</label>
        <link refid="classKDL_1_1Frame"/>
        <childnode refid="12" relation="usage">
          <edgelabel>p</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>M</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>KDL::Chain</label>
        <link refid="classKDL_1_1Chain"/>
        <childnode refid="6" relation="usage">
          <edgelabel>segments</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>std::vector&lt; bool &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="4">
        <label>KDL::Jacobian</label>
        <link refid="classKDL_1_1Jacobian"/>
      </node>
      <node id="12">
        <label>KDL::Vector</label>
        <link refid="classKDL_1_1Vector"/>
      </node>
    </collaborationgraph>
    <location file="src/chainiksolvervel_pinv.hpp" line="41" column="1" bodyfile="src/chainiksolvervel_pinv.hpp" bodystart="40" bodyend="115"/>
    <listofallmembers>
      <member refid="classKDL_1_1ChainIkSolverVel__pinv_1a202bae1336d36647917b761ee8d5f7ea" prot="public" virt="virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>CartToJnt</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__pinv_1a1a61506b8dc256e52a6c924987014eac" prot="public" virt="virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>CartToJnt</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__pinv_1ae15d4865aa87eed56119383e285b15f0" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>chain</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__pinv_1a3a8f66b7d3c05ec2f0bcccbd7790f401" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>ChainIkSolverVel_pinv</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__pinv_1a5c3646dc5104390e7d6a92490b2785e6" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>E_CONVERGE_PINV_SINGULAR</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a037090bae35fcc0264c70287d3b926d6" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>E_DEGRADED</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a17178be368599dd456b54c2d37c4fb50" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>E_MAX_ITERATIONS_EXCEEDED</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148aa19df6d3f1007614f98aadbaea84d89f" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>E_NO_CONVERGE</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a95f2e049884a3a08fc4f839e4cbf6191" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>E_NOERROR</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a749aec827a10228473b653f18bc20197" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>E_NOT_IMPLEMENTED</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a1803914d79d602cbc5ffced121c5278c" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>E_NOT_UP_TO_DATE</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148af7440fec45c6d1657a89d344ff5b6583" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>E_OUT_OF_RANGE</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a713b62c139a0caee351f94aa7598e56a" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>E_SIZE_MISMATCH</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148ac70eed0a4997fd525b00e5eddeb39ba5" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>E_SVD_FAILED</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a4ad4b1f9f4f4c7dd43898c06ecc73c06" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>E_UNDEFINED</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__pinv_1a899ca50575fa2174bb72f8df7a054cd9" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>eps</name></member>
      <member refid="classKDL_1_1SolverI_1a62d29639f6396a0660ce7e3958d14718" prot="protected" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>error</name></member>
      <member refid="classKDL_1_1SolverI_1a0473a25058060878b90ace7324ae1d47" prot="public" virt="virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>getError</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__pinv_1a11d9df2fdfea7c7d616298c907ce672a" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>getNrZeroSigmas</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__pinv_1a3e5125ad0249c6b0227b687f5b269ece" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>getSVDResult</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__pinv_1a791d302c1b7c9ff069cc95753e545372" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>jac</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__pinv_1a5a5db8bae9e8d072f38e6d099b24ac3a" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>jnt2jac</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__pinv_1aecff45cca9a71c1f9d05b667e745440c" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>maxiter</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__pinv_1a25bdc9ae589ead9552edcfca97dc4d04" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>nj</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__pinv_1a1770935b3f28015b17e9a2e6c84ec438" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>nrZeroSigmas</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__pinv_1a9fe563b395d48ce3bbd9b80a4fee485f" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>S</name></member>
      <member refid="classKDL_1_1SolverI_1a2fd94680969bab93b792dabfdcfc9a80" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>SolverI</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__pinv_1abc41e45b6a29f461755e2aa9ffd70b56" prot="public" virt="virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>strError</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__pinv_1a448317e52547e8113d460c00c90e5425" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>svd</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__pinv_1adc14c8852cd3c9d5e8a3e14d1832f081" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>svdResult</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__pinv_1a77b203bedac04433f540562bfe091a1b" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>tmp</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__pinv_1a066f9a8b464e5dd5a9ab49e3b72d43e9" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>U</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__pinv_1adfbf3b47f5f4aaf94df885adac06cad1" prot="public" virt="virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>updateInternalDataStructures</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__pinv_1a4d223e586714627dd109b3072d7d6ea5" prot="private" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>V</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel_1ad9499ad2dfd55a21ae6e3ecf233e49be" prot="public" virt="virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>~ChainIkSolverVel</name></member>
      <member refid="classKDL_1_1ChainIkSolverVel__pinv_1a6b84a108236d152c1aa3e8d42bab4df8" prot="public" virt="non-virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>~ChainIkSolverVel_pinv</name></member>
      <member refid="classKDL_1_1SolverI_1ab70782f0d3632c22fcd430ef719d0f2f" prot="public" virt="virtual"><scope>KDL::ChainIkSolverVel_pinv</scope><name>~SolverI</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
