<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classKDL_1_1TreeIdSolver__RNE" kind="class" language="C++" prot="public">
    <compoundname>KDL::TreeIdSolver_RNE</compoundname>
    <basecompoundref refid="classKDL_1_1TreeIdSolver" prot="public" virt="non-virtual">KDL::TreeIdSolver</basecompoundref>
    <includes refid="treeidsolver__recursive__newton__euler_8hpp" local="no">treeidsolver_recursive_newton_euler.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classKDL_1_1TreeIdSolver__RNE_1a47aa943ffc89504001e403a6026f576d" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>, <ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref> &gt;</type>
        <definition>std::map&lt;std::string,Twist&gt; KDL::TreeIdSolver_RNE::a</definition>
        <argsstring></argsstring>
        <name>a</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/treeidsolver_recursive_newton_euler.hpp" line="78" column="18" bodyfile="src/treeidsolver_recursive_newton_euler.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1TreeIdSolver__RNE_1a58885d9cd050863cb3222afa05ee14e4" prot="private" static="no" mutable="no">
        <type><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref></type>
        <definition>Twist KDL::TreeIdSolver_RNE::ag</definition>
        <argsstring></argsstring>
        <name>ag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/treeidsolver_recursive_newton_euler.hpp" line="80" column="15" bodyfile="src/treeidsolver_recursive_newton_euler.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1TreeIdSolver__RNE_1a4820c36c37c53ea7c75462566d78f966" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>, <ref refid="classKDL_1_1Wrench" kindref="compound">Wrench</ref> &gt;</type>
        <definition>std::map&lt;std::string,Wrench&gt; KDL::TreeIdSolver_RNE::f</definition>
        <argsstring></argsstring>
        <name>f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/treeidsolver_recursive_newton_euler.hpp" line="79" column="18" bodyfile="src/treeidsolver_recursive_newton_euler.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1TreeIdSolver__RNE_1a380a2d726491855beae017c7e2576c86" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int KDL::TreeIdSolver_RNE::nj</definition>
        <argsstring></argsstring>
        <name>nj</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/treeidsolver_recursive_newton_euler.hpp" line="73" column="22" bodyfile="src/treeidsolver_recursive_newton_euler.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1TreeIdSolver__RNE_1a85d747210462c0ccf108165fce24b452" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int KDL::TreeIdSolver_RNE::ns</definition>
        <argsstring></argsstring>
        <name>ns</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/treeidsolver_recursive_newton_euler.hpp" line="74" column="22" bodyfile="src/treeidsolver_recursive_newton_euler.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1TreeIdSolver__RNE_1a6469f77cd47bea95975c0e544a5c2441" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>, <ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref> &gt;</type>
        <definition>std::map&lt;std::string,Twist&gt; KDL::TreeIdSolver_RNE::S</definition>
        <argsstring></argsstring>
        <name>S</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/treeidsolver_recursive_newton_euler.hpp" line="76" column="18" bodyfile="src/treeidsolver_recursive_newton_euler.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1TreeIdSolver__RNE_1afacdc675649fef061300789a98f42abc" prot="private" static="no" mutable="no">
        <type>const <ref refid="classKDL_1_1Tree" kindref="compound">Tree</ref> &amp;</type>
        <definition>const Tree&amp; KDL::TreeIdSolver_RNE::tree</definition>
        <argsstring></argsstring>
        <name>tree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/treeidsolver_recursive_newton_euler.hpp" line="72" column="20" bodyfile="src/treeidsolver_recursive_newton_euler.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1TreeIdSolver__RNE_1aaebe43d51338496265478bde334169ab" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>, <ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref> &gt;</type>
        <definition>std::map&lt;std::string,Twist&gt; KDL::TreeIdSolver_RNE::v</definition>
        <argsstring></argsstring>
        <name>v</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/treeidsolver_recursive_newton_euler.hpp" line="77" column="18" bodyfile="src/treeidsolver_recursive_newton_euler.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1TreeIdSolver__RNE_1a4699de17a1caca970add4feda464da81" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map</ref>&lt; <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>, <ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref> &gt;</type>
        <definition>std::map&lt;std::string,Frame&gt; KDL::TreeIdSolver_RNE::X</definition>
        <argsstring></argsstring>
        <name>X</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/treeidsolver_recursive_newton_euler.hpp" line="75" column="18" bodyfile="src/treeidsolver_recursive_newton_euler.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classKDL_1_1TreeIdSolver__RNE_1a75267397fac4995f58af1f006e0a18ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int KDL::TreeIdSolver_RNE::CartToJnt</definition>
        <argsstring>(const JntArray &amp;q, const JntArray &amp;q_dot, const JntArray &amp;q_dotdot, const WrenchMap &amp;f_ext, JntArray &amp;torques)</argsstring>
        <name>CartToJnt</name>
        <reimplements refid="classKDL_1_1TreeIdSolver_1a2124bba6e94b9d83534113fd372eb653">CartToJnt</reimplements>
        <param>
          <type>const <ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref> &amp;</type>
          <declname>q_dot</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref> &amp;</type>
          <declname>q_dotdot</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceKDL_1a6461f6198aeae25076631dfd74486f8f" kindref="member">WrenchMap</ref> &amp;</type>
          <declname>f_ext</declname>
        </param>
        <param>
          <type><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref> &amp;</type>
          <declname>torques</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function to calculate from Cartesian forces to joint torques. Input parameters; <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>q</parametername>
</parameternamelist>
<parameterdescription>
<para>The current joint positions </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>q_dot</parametername>
</parameternamelist>
<parameterdescription>
<para>The current joint velocities </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>q_dotdot</parametername>
</parameternamelist>
<parameterdescription>
<para>The current joint accelerations </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f_ext</parametername>
</parameternamelist>
<parameterdescription>
<para>The external forces (no gravity) on the segments Output parameters: </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>torques</parametername>
</parameternamelist>
<parameterdescription>
<para>the resulting torques for the joints </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/treeidsolver_recursive_newton_euler.hpp" line="60" column="13" bodyfile="src/treeidsolver_recursive_newton_euler.cpp" bodystart="52" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1TreeIdSolver__RNE_1a1ed0550833118fc583823d99bb2f29b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KDL::TreeIdSolver_RNE::TreeIdSolver_RNE</definition>
        <argsstring>(const Tree &amp;tree, Vector grav)</argsstring>
        <name>TreeIdSolver_RNE</name>
        <param>
          <type>const <ref refid="classKDL_1_1Tree" kindref="compound">Tree</ref> &amp;</type>
          <declname>tree</declname>
        </param>
        <param>
          <type><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref></type>
          <declname>grav</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor for the solver, it will allocate all the necessary memory <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>The kinematic tree to calculate the inverse dynamics for, an internal reference will be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>grav</parametername>
</parameternamelist>
<parameterdescription>
<para>The gravity vector to use during the calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/treeidsolver_recursive_newton_euler.hpp" line="48" column="9" bodyfile="src/treeidsolver_recursive_newton_euler.cpp" bodystart="28" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1TreeIdSolver__RNE_1a1a2850b7607a176313f03f7fa61d6814" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KDL::TreeIdSolver_RNE::updateInternalDataStructures</definition>
        <argsstring>()</argsstring>
        <name>updateInternalDataStructures</name>
        <reimplements refid="classKDL_1_1SolverI_1a15c4651a994d1c767e14494b37791e79">updateInternalDataStructures</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update the internal data structures. This is required if the number of segments or number of joints of a chain/tree have changed. This provides a single point of contact for solver memory allocations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/treeidsolver_recursive_newton_euler.hpp" line="63" column="22" bodyfile="src/treeidsolver_recursive_newton_euler.cpp" bodystart="35" bodyend="39"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classKDL_1_1TreeIdSolver__RNE_1abb1444e39ff3dac14e7484464e486720" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KDL::TreeIdSolver_RNE::initAuxVariables</definition>
        <argsstring>()</argsstring>
        <name>initAuxVariables</name>
        <briefdescription>
<para>Helper function to initialize private members X, S, v, a, f. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/treeidsolver_recursive_newton_euler.hpp" line="67" column="14" bodyfile="src/treeidsolver_recursive_newton_euler.cpp" bodystart="41" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1TreeIdSolver__RNE_1a4a876eda53317784644758022e12c298" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KDL::TreeIdSolver_RNE::rne_step</definition>
        <argsstring>(SegmentMap::const_iterator segment, const JntArray &amp;q, const JntArray &amp;q_dot, const JntArray &amp;q_dotdot, const WrenchMap &amp;f_ext, JntArray &amp;torques)</argsstring>
        <name>rne_step</name>
        <param>
          <type>SegmentMap::const_iterator</type>
          <declname>segment</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref> &amp;</type>
          <declname>q_dot</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref> &amp;</type>
          <declname>q_dotdot</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceKDL_1a6461f6198aeae25076631dfd74486f8f" kindref="member">WrenchMap</ref> &amp;</type>
          <declname>f_ext</declname>
        </param>
        <param>
          <type><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref> &amp;</type>
          <declname>torques</declname>
        </param>
        <briefdescription>
<para>One recursion step. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/treeidsolver_recursive_newton_euler.hpp" line="70" column="14" bodyfile="src/treeidsolver_recursive_newton_euler.cpp" bodystart="78" bodyend="138"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Recursive newton euler inverse dynamics solver for kinematic trees. </para>
    </briefdescription>
    <detaileddescription>
<para>It calculates the torques for the joints, given the motion of the joints (q,qdot,qdotdot), external forces on the segments (expressed in the segments reference frame) and the dynamical parameters of the segments.</para>
<para>This is an extension of the inverse dynamic solver for kinematic chains, <simplesect kind="see"><para><ref refid="classKDL_1_1ChainIdSolver__RNE" kindref="compound">ChainIdSolver_RNE</ref>. The <ref refid="zxxzxztest_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref> difference is the use of STL maps instead of vectors to represent external wrenches (as well as internal variables exploited during the recursion). </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KDL::TreeIdSolver_RNE</label>
        <link refid="classKDL_1_1TreeIdSolver__RNE"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>KDL::SolverI</label>
        <link refid="classKDL_1_1SolverI"/>
      </node>
      <node id="2">
        <label>KDL::TreeIdSolver</label>
        <link refid="classKDL_1_1TreeIdSolver"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>KDL::Twist</label>
        <link refid="classKDL_1_1Twist"/>
        <childnode refid="5" relation="usage">
          <edgelabel>rot</edgelabel>
          <edgelabel>vel</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>std::map&lt; std::string, KDL::Twist &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="7">
        <label>KDL::Tree</label>
        <link refid="classKDL_1_1Tree"/>
        <childnode refid="8" relation="usage">
          <edgelabel>segments</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>root_name</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>KDL::TreeIdSolver_RNE</label>
        <link refid="classKDL_1_1TreeIdSolver__RNE"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>ag</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>f</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>tree</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>a</edgelabel>
          <edgelabel>S</edgelabel>
          <edgelabel>v</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>X</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>KDL::SolverI</label>
        <link refid="classKDL_1_1SolverI"/>
      </node>
      <node id="6">
        <label>std::map&lt; std::string, KDL::Wrench &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="2">
        <label>KDL::TreeIdSolver</label>
        <link refid="classKDL_1_1TreeIdSolver"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>std::map&lt; std::string, KDL::Frame &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="5">
        <label>KDL::Vector</label>
        <link refid="classKDL_1_1Vector"/>
      </node>
      <node id="8">
        <label>std::map&lt; std::string, TreeElement &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="9">
        <label>std::string</label>
        <link refid="cpp/string/basic_string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="src/treeidsolver_recursive_newton_euler.hpp" line="41" column="47" bodyfile="src/treeidsolver_recursive_newton_euler.hpp" bodystart="41" bodyend="81"/>
    <listofallmembers>
      <member refid="classKDL_1_1TreeIdSolver__RNE_1a47aa943ffc89504001e403a6026f576d" prot="private" virt="non-virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>a</name></member>
      <member refid="classKDL_1_1TreeIdSolver__RNE_1a58885d9cd050863cb3222afa05ee14e4" prot="private" virt="non-virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>ag</name></member>
      <member refid="classKDL_1_1TreeIdSolver__RNE_1a75267397fac4995f58af1f006e0a18ad" prot="public" virt="virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>CartToJnt</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a037090bae35fcc0264c70287d3b926d6" prot="public" virt="non-virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>E_DEGRADED</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a17178be368599dd456b54c2d37c4fb50" prot="public" virt="non-virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>E_MAX_ITERATIONS_EXCEEDED</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148aa19df6d3f1007614f98aadbaea84d89f" prot="public" virt="non-virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>E_NO_CONVERGE</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a95f2e049884a3a08fc4f839e4cbf6191" prot="public" virt="non-virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>E_NOERROR</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a749aec827a10228473b653f18bc20197" prot="public" virt="non-virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>E_NOT_IMPLEMENTED</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a1803914d79d602cbc5ffced121c5278c" prot="public" virt="non-virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>E_NOT_UP_TO_DATE</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148af7440fec45c6d1657a89d344ff5b6583" prot="public" virt="non-virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>E_OUT_OF_RANGE</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a713b62c139a0caee351f94aa7598e56a" prot="public" virt="non-virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>E_SIZE_MISMATCH</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148ac70eed0a4997fd525b00e5eddeb39ba5" prot="public" virt="non-virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>E_SVD_FAILED</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a4ad4b1f9f4f4c7dd43898c06ecc73c06" prot="public" virt="non-virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>E_UNDEFINED</name></member>
      <member refid="classKDL_1_1SolverI_1a62d29639f6396a0660ce7e3958d14718" prot="protected" virt="non-virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>error</name></member>
      <member refid="classKDL_1_1TreeIdSolver__RNE_1a4820c36c37c53ea7c75462566d78f966" prot="private" virt="non-virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>f</name></member>
      <member refid="classKDL_1_1SolverI_1a0473a25058060878b90ace7324ae1d47" prot="public" virt="virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>getError</name></member>
      <member refid="classKDL_1_1TreeIdSolver__RNE_1abb1444e39ff3dac14e7484464e486720" prot="private" virt="non-virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>initAuxVariables</name></member>
      <member refid="classKDL_1_1TreeIdSolver__RNE_1a380a2d726491855beae017c7e2576c86" prot="private" virt="non-virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>nj</name></member>
      <member refid="classKDL_1_1TreeIdSolver__RNE_1a85d747210462c0ccf108165fce24b452" prot="private" virt="non-virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>ns</name></member>
      <member refid="classKDL_1_1TreeIdSolver__RNE_1a4a876eda53317784644758022e12c298" prot="private" virt="non-virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>rne_step</name></member>
      <member refid="classKDL_1_1TreeIdSolver__RNE_1a6469f77cd47bea95975c0e544a5c2441" prot="private" virt="non-virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>S</name></member>
      <member refid="classKDL_1_1SolverI_1a2fd94680969bab93b792dabfdcfc9a80" prot="public" virt="non-virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>SolverI</name></member>
      <member refid="classKDL_1_1SolverI_1a5f9c4f020d4d609d8d10a7a949e8195c" prot="public" virt="virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>strError</name></member>
      <member refid="classKDL_1_1TreeIdSolver__RNE_1afacdc675649fef061300789a98f42abc" prot="private" virt="non-virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>tree</name></member>
      <member refid="classKDL_1_1TreeIdSolver__RNE_1a1ed0550833118fc583823d99bb2f29b3" prot="public" virt="non-virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>TreeIdSolver_RNE</name></member>
      <member refid="classKDL_1_1TreeIdSolver__RNE_1a1a2850b7607a176313f03f7fa61d6814" prot="public" virt="virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>updateInternalDataStructures</name></member>
      <member refid="classKDL_1_1TreeIdSolver__RNE_1aaebe43d51338496265478bde334169ab" prot="private" virt="non-virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>v</name></member>
      <member refid="classKDL_1_1TreeIdSolver__RNE_1a4699de17a1caca970add4feda464da81" prot="private" virt="non-virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>X</name></member>
      <member refid="classKDL_1_1SolverI_1ab70782f0d3632c22fcd430ef719d0f2f" prot="public" virt="virtual"><scope>KDL::TreeIdSolver_RNE</scope><name>~SolverI</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
