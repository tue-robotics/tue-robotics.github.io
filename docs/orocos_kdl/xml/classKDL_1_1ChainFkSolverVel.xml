<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classKDL_1_1ChainFkSolverVel" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>KDL::ChainFkSolverVel</compoundname>
    <basecompoundref refid="classKDL_1_1SolverI" prot="public" virt="non-virtual">KDL::SolverI</basecompoundref>
    <derivedcompoundref refid="classKDL_1_1ChainFkSolverVel__recursive" prot="public" virt="non-virtual">KDL::ChainFkSolverVel_recursive</derivedcompoundref>
    <includes refid="chainfksolver_8hpp" local="no">chainfksolver.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classKDL_1_1ChainFkSolverVel_1a7ae7b44890420e9459a3e8da73994edb" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int KDL::ChainFkSolverVel::JntToCart</definition>
        <argsstring>(const JntArrayVel &amp;q_in, FrameVel &amp;out, int segmentNr=-1)=0</argsstring>
        <name>JntToCart</name>
        <reimplementedby refid="classKDL_1_1ChainFkSolverVel__recursive_1adacf6fa9df12ab1876859d3296f22400">JntToCart</reimplementedby>
        <param>
          <type>const <ref refid="classKDL_1_1JntArrayVel" kindref="compound">JntArrayVel</ref> &amp;</type>
          <declname>q_in</declname>
        </param>
        <param>
          <type><ref refid="classKDL_1_1FrameVel" kindref="compound">FrameVel</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>segmentNr</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate forward position and velocity kinematics, from joint coordinates to cartesian coordinates.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>q_in</parametername>
</parameternamelist>
<parameterdescription>
<para>input joint coordinates (position and velocity) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>output cartesian coordinates (position and velocity)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>if &lt; 0 something went wrong </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainfksolver.hpp" line="85" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainFkSolverVel_1addd81ffa87f3320526d6eae5cd5b00f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int KDL::ChainFkSolverVel::JntToCart</definition>
        <argsstring>(const JntArrayVel &amp;q_in, std::vector&lt; KDL::FrameVel &gt; &amp;out, int segmentNr=-1)=0</argsstring>
        <name>JntToCart</name>
        <reimplementedby refid="classKDL_1_1ChainFkSolverVel__recursive_1a9426f36b788628088e07013e73ce8302">JntToCart</reimplementedby>
        <param>
          <type>const <ref refid="classKDL_1_1JntArrayVel" kindref="compound">JntArrayVel</ref> &amp;</type>
          <declname>q_in</declname>
        </param>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="classKDL_1_1FrameVel" kindref="compound">KDL::FrameVel</ref> &gt; &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>segmentNr</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate forward position and velocity kinematics, from joint coordinates to cartesian coordinates.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>q_in</parametername>
</parameternamelist>
<parameterdescription>
<para>input joint coordinates (position and velocity) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>output cartesian coordinates for all segments (position and velocity)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>if &lt; 0 something went wrong </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainfksolver.hpp" line="95" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainFkSolverVel_1ac4390272a86bb3353bf8465150f4c376" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void KDL::ChainFkSolverVel::updateInternalDataStructures</definition>
        <argsstring>()=0</argsstring>
        <name>updateInternalDataStructures</name>
        <reimplements refid="classKDL_1_1SolverI_1a15c4651a994d1c767e14494b37791e79">updateInternalDataStructures</reimplements>
        <reimplementedby refid="classKDL_1_1ChainFkSolverVel__recursive_1a7c366eee0c84a9c7972eb0988cfacae2">updateInternalDataStructures</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update the internal data structures. This is required if the number of segments or number of joints of a chain/tree have changed. This provides a single point of contact for solver memory allocations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainfksolver.hpp" line="97" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1ChainFkSolverVel_1a0f16ca3887783696d1b310adbd36f635" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual KDL::ChainFkSolverVel::~ChainFkSolverVel</definition>
        <argsstring>()</argsstring>
        <name>~ChainFkSolverVel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/chainfksolver.hpp" line="98" column="17" bodyfile="src/chainfksolver.hpp" bodystart="98" bodyend="98"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This <bold>abstract</bold> class encapsulates a solver for the forward velocity kinematics for a <ref refid="classKDL_1_1Chain" kindref="compound">KDL::Chain</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KDL::SolverI</label>
        <link refid="classKDL_1_1SolverI"/>
      </node>
      <node id="3">
        <label>KDL::ChainFkSolverVel_recursive</label>
        <link refid="classKDL_1_1ChainFkSolverVel__recursive"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KDL::ChainFkSolverVel</label>
        <link refid="classKDL_1_1ChainFkSolverVel"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>KDL::SolverI</label>
        <link refid="classKDL_1_1SolverI"/>
      </node>
      <node id="1">
        <label>KDL::ChainFkSolverVel</label>
        <link refid="classKDL_1_1ChainFkSolverVel"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/chainfksolver.hpp" line="74" column="47" bodyfile="src/chainfksolver.hpp" bodystart="74" bodyend="99"/>
    <listofallmembers>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a037090bae35fcc0264c70287d3b926d6" prot="public" virt="non-virtual"><scope>KDL::ChainFkSolverVel</scope><name>E_DEGRADED</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a17178be368599dd456b54c2d37c4fb50" prot="public" virt="non-virtual"><scope>KDL::ChainFkSolverVel</scope><name>E_MAX_ITERATIONS_EXCEEDED</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148aa19df6d3f1007614f98aadbaea84d89f" prot="public" virt="non-virtual"><scope>KDL::ChainFkSolverVel</scope><name>E_NO_CONVERGE</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a95f2e049884a3a08fc4f839e4cbf6191" prot="public" virt="non-virtual"><scope>KDL::ChainFkSolverVel</scope><name>E_NOERROR</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a749aec827a10228473b653f18bc20197" prot="public" virt="non-virtual"><scope>KDL::ChainFkSolverVel</scope><name>E_NOT_IMPLEMENTED</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a1803914d79d602cbc5ffced121c5278c" prot="public" virt="non-virtual"><scope>KDL::ChainFkSolverVel</scope><name>E_NOT_UP_TO_DATE</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148af7440fec45c6d1657a89d344ff5b6583" prot="public" virt="non-virtual"><scope>KDL::ChainFkSolverVel</scope><name>E_OUT_OF_RANGE</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a713b62c139a0caee351f94aa7598e56a" prot="public" virt="non-virtual"><scope>KDL::ChainFkSolverVel</scope><name>E_SIZE_MISMATCH</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148ac70eed0a4997fd525b00e5eddeb39ba5" prot="public" virt="non-virtual"><scope>KDL::ChainFkSolverVel</scope><name>E_SVD_FAILED</name></member>
      <member refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a4ad4b1f9f4f4c7dd43898c06ecc73c06" prot="public" virt="non-virtual"><scope>KDL::ChainFkSolverVel</scope><name>E_UNDEFINED</name></member>
      <member refid="classKDL_1_1SolverI_1a62d29639f6396a0660ce7e3958d14718" prot="protected" virt="non-virtual"><scope>KDL::ChainFkSolverVel</scope><name>error</name></member>
      <member refid="classKDL_1_1SolverI_1a0473a25058060878b90ace7324ae1d47" prot="public" virt="virtual"><scope>KDL::ChainFkSolverVel</scope><name>getError</name></member>
      <member refid="classKDL_1_1ChainFkSolverVel_1a7ae7b44890420e9459a3e8da73994edb" prot="public" virt="pure-virtual"><scope>KDL::ChainFkSolverVel</scope><name>JntToCart</name></member>
      <member refid="classKDL_1_1ChainFkSolverVel_1addd81ffa87f3320526d6eae5cd5b00f6" prot="public" virt="pure-virtual"><scope>KDL::ChainFkSolverVel</scope><name>JntToCart</name></member>
      <member refid="classKDL_1_1SolverI_1a2fd94680969bab93b792dabfdcfc9a80" prot="public" virt="non-virtual"><scope>KDL::ChainFkSolverVel</scope><name>SolverI</name></member>
      <member refid="classKDL_1_1SolverI_1a5f9c4f020d4d609d8d10a7a949e8195c" prot="public" virt="virtual"><scope>KDL::ChainFkSolverVel</scope><name>strError</name></member>
      <member refid="classKDL_1_1ChainFkSolverVel_1ac4390272a86bb3353bf8465150f4c376" prot="public" virt="pure-virtual"><scope>KDL::ChainFkSolverVel</scope><name>updateInternalDataStructures</name></member>
      <member refid="classKDL_1_1ChainFkSolverVel_1a0f16ca3887783696d1b310adbd36f635" prot="public" virt="virtual"><scope>KDL::ChainFkSolverVel</scope><name>~ChainFkSolverVel</name></member>
      <member refid="classKDL_1_1SolverI_1ab70782f0d3632c22fcd430ef719d0f2f" prot="public" virt="virtual"><scope>KDL::ChainFkSolverVel</scope><name>~SolverI</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
