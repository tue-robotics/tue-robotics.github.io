<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="framestest_8cpp" kind="file" language="C++">
    <compoundname>framestest.cpp</compoundname>
    <includes refid="framestest_8hpp" local="yes">framestest.hpp</includes>
    <includes refid="frames__io_8hpp" local="no">frames_io.hpp</includes>
    <includes refid="utility_8h" local="no">utilities/utility.h</includes>
    <incdepgraph>
      <node id="11">
        <label>functional</label>
        <link refid="cpp/header/functional" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="10">
        <label>utilities/hash_combine.h</label>
        <link refid="hash__combine_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>cstdlib</label>
        <link refid="cpp/header/cstdlib" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="16">
        <label>frames_io.hpp</label>
        <link refid="frames__io_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>Eigen/Core</label>
      </node>
      <node id="18">
        <label>iostream</label>
        <link refid="cpp/header/iostream" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="2">
        <label>framestest.hpp</label>
        <link refid="framestest_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>fstream</label>
        <link refid="cpp/header/fstream" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="4">
        <label>frames.hpp</label>
        <link refid="frames_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>jacobian.hpp</label>
        <link refid="jacobian_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>utilities/utility_io.h</label>
        <link refid="utility__io_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cassert</label>
        <link refid="cpp/header/cassert" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="6">
        <label>utilities/utility.h</label>
        <link refid="utility_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>iomanip</label>
        <link refid="cpp/header/iomanip" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="12">
        <label>frames.inl</label>
        <link refid="frames_8inl"/>
      </node>
      <node id="13">
        <label>jntarray.hpp</label>
        <link refid="jntarray_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cppunit/extensions/HelperMacros.h</label>
      </node>
      <node id="9">
        <label>cmath</label>
        <link refid="cpp/header/cmath" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="5">
        <label>utilities/kdl-config.h</label>
        <link refid="kdl-config_8h"/>
      </node>
      <node id="1">
        <label>framestest.cpp</label>
        <link refid="framestest_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" prot="public" static="no">
        <name>TESTEULERZYX</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>g</defname></param>
        <initializer>		{\
			double eps=1E-14;\
			<ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref> R = Rotation::EulerZYX((a),(b),(g));\
			double alpha,beta,gamma;\
			R.GetEulerZYX(alpha,beta,gamma);\
			CPPUNIT_ASSERT_DOUBLES_EQUAL((a),alpha,eps);\
			CPPUNIT_ASSERT_DOUBLES_EQUAL((b),beta,eps);\
			CPPUNIT_ASSERT_DOUBLES_EQUAL((g),gamma,eps);\
		}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.cpp" line="207" column="9" bodyfile="tests/framestest.cpp" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="framestest_8cpp_1a8117612f626f80ffe7eb07cb2142b0d5" prot="public" static="no">
        <name>TESTEULERZYX_INVARIANT</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>g</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>b2</defname></param>
        <param><defname>g2</defname></param>
        <initializer>		{\
			double eps=1E-14;\
			<ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref> R1=Rotation::EulerZYX(a,b,g);\
			<ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref> R2=Rotation::EulerZYX(a2,b2,g2);\
			CPPUNIT_ASSERT_DOUBLES_EQUAL(0,<ref refid="jacobiandottest_8cpp_1a57214bd2f9e7fde694351f93b8bcc2ce" kindref="member">diff</ref>(R2,R1).Norm(),eps);\
		}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.cpp" line="228" column="9" bodyfile="tests/framestest.cpp" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="framestest_8cpp_1a4bb204411a1440f3da39179f796f9767" prot="public" static="no">
        <name>TESTEULERZYZ</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>g</defname></param>
        <initializer>		{\
			double eps=1E-14;\
			<ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref> R = Rotation::EulerZYZ((a),(b),(g));\
			double alpha,beta,gamma;\
			R.GetEulerZYZ(alpha,beta,gamma);\
			CPPUNIT_ASSERT_DOUBLES_EQUAL((a),alpha,eps);\
			CPPUNIT_ASSERT_DOUBLES_EQUAL((b),beta,eps);\
			CPPUNIT_ASSERT_DOUBLES_EQUAL((g),gamma,eps);\
		}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.cpp" line="218" column="9" bodyfile="tests/framestest.cpp" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="framestest_8cpp_1a336e2b9d894e2c1583725ba48d368bec" prot="public" static="no">
        <name>TESTEULERZYZ_INVARIANT</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>g</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>b2</defname></param>
        <param><defname>g2</defname></param>
        <initializer>		{\
			double eps=1E-14;\
			<ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref> R1=Rotation::EulerZYZ(a,b,g);\
			<ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref> R2=Rotation::EulerZYZ(a2,b2,g2);\
			CPPUNIT_ASSERT_DOUBLES_EQUAL(0,<ref refid="jacobiandottest_8cpp_1a57214bd2f9e7fde694351f93b8bcc2ce" kindref="member">diff</ref>(R2,R1).Norm(),eps);\
		}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.cpp" line="235" column="9" bodyfile="tests/framestest.cpp" bodystart="235" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="framestest_8cpp_1a27c7f19c7d526544989c44448c6d93e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CPPUNIT_TEST_SUITE_REGISTRATION</definition>
        <argsstring>(FramesTest)</argsstring>
        <name>CPPUNIT_TEST_SUITE_REGISTRATION</name>
        <param>
          <type><ref refid="classFramesTest" kindref="compound">FramesTest</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.cpp" line="5" column="1" declfile="tests/framestest.cpp" declline="5" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="framestest_8cpp_1a8031ae12733db0bc6d4c60426b5baa09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref></type>
        <definition>JntArray CreateRandomJntArray</definition>
        <argsstring>(int size)</argsstring>
        <name>CreateRandomJntArray</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/framestest.cpp" line="673" column="10" bodyfile="tests/framestest.cpp" bodystart="673" bodyend="679"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="framestest_8hpp" kindref="compound">framestest.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="frames__io_8hpp" kindref="compound">frames_io.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="utility_8h" kindref="compound">utilities/utility.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><ref refid="framestest_8cpp_1a27c7f19c7d526544989c44448c6d93e1" kindref="member">CPPUNIT_TEST_SUITE_REGISTRATION</ref>(<sp/><ref refid="classFramesTest" kindref="compound">FramesTest</ref><sp/>);</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceKDL" kindref="compound">KDL</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="classFramesTest_1afb428074be72f4480af785c808943d2e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classFramesTest_1afb428074be72f4480af785c808943d2e" kindref="member">FramesTest::setUp</ref>()</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classFramesTest_1a7707dbb990067450b8cbedbc333d13d6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classFramesTest_1a7707dbb990067450b8cbedbc333d13d6" kindref="member">FramesTest::tearDown</ref>()</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classFramesTest_1a31da8977e650dc2f7a2ae571ac5cc4ac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classFramesTest_1a31da8977e650dc2f7a2ae571ac5cc4ac" kindref="member">FramesTest::TestVector2</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>&amp;<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref><sp/><sp/><sp/>v2;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(2*v-v,v);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(v*2-v,v);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(v+v+v-2*v,v);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>v2=v;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(v,v2);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<ref refid="cpp/utility/hash" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::hash&lt;Vector&gt;</ref>{}(v),<sp/><ref refid="cpp/utility/hash" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::hash&lt;Vector&gt;</ref>{}(v2));</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>v2+=v;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(2*v,v2);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>v2-=v;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(v,v2);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>v2.<ref refid="classKDL_1_1Vector_1a18b996436214594500892b6cfd5e1aad" kindref="member">ReverseSign</ref>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(v,-v2);</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classFramesTest_1acfd43a9701b93ed185e40d675d189b43" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classFramesTest_1acfd43a9701b93ed185e40d675d189b43" kindref="member">FramesTest::TestVector</ref>()<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref><sp/><sp/><sp/>v(3,4,5);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>TestVector2(v);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref><sp/><sp/><sp/>v2(0,0,0);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>TestVector2(v2);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<ref refid="cpp/utility/hash" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::hash&lt;Vector&gt;</ref>{}(v),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(3450679443808348711u));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<ref refid="cpp/utility/hash" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::hash&lt;Vector&gt;</ref>{}(v2),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(11093822414574u));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref><sp/>nu(0,0,0);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(nu.Norm(),0.0);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref><sp/>nu2(10,0,0);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(nu2.<ref refid="classKDL_1_1Vector_1ade3f16bb567c5f4ab314346605c66056" kindref="member">Norm</ref>(),10.0);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classFramesTest_1a50de11520106cc79ad512e45276a1210" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classFramesTest_1a50de11520106cc79ad512e45276a1210" kindref="member">FramesTest::TestVector2DNorm</ref>()<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Vector2" kindref="compound">Vector2</ref><sp/>nu(0,<sp/>0);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(nu.<ref refid="classKDL_1_1Vector2_1ac94ac7bcbb534395ead55de5c71dbdba" kindref="member">Norm</ref>(),<sp/>0.0);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<ref refid="classKDL_1_1Vector2" kindref="compound">Vector2</ref>(1,<sp/>0).<ref refid="namespaceKDL_1a04a201d7eeb1d5e1ebcea1d297efe9a4" kindref="member">Norm</ref>(),<sp/>1.0);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<ref refid="classKDL_1_1Vector2" kindref="compound">Vector2</ref>(0,<sp/>1).<ref refid="namespaceKDL_1a04a201d7eeb1d5e1ebcea1d297efe9a4" kindref="member">Norm</ref>(),<sp/>1.0);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<ref refid="classKDL_1_1Vector2" kindref="compound">Vector2</ref>(-1,<sp/>0).<ref refid="namespaceKDL_1a04a201d7eeb1d5e1ebcea1d297efe9a4" kindref="member">Norm</ref>(),<sp/>1.0);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<ref refid="classKDL_1_1Vector2" kindref="compound">Vector2</ref>(0,<sp/>-1).<ref refid="namespaceKDL_1a04a201d7eeb1d5e1ebcea1d297efe9a4" kindref="member">Norm</ref>(),<sp/>1.0);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classFramesTest_1a01c3cbf2780d75edd9f22466fabe2999" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classFramesTest_1a01c3cbf2780d75edd9f22466fabe2999" kindref="member">FramesTest::TestTwist2</ref>(<ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref>&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref><sp/>t2(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(16,-3,5),<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(-4,2,1));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(2*t-t,t);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(t*2-t,t);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(t+t+t-2*t,t);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>t2=t;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(t,t2);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<ref refid="cpp/utility/hash" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::hash&lt;Twist&gt;</ref>{}(t),<sp/><ref refid="cpp/utility/hash" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::hash&lt;Twist&gt;</ref>{}(t2));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>t2+=t;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(2*t,t2);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>t2-=t;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(t,t2);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>t2.<ref refid="classKDL_1_1Twist_1aaa84dee400c40843546885ee6d7f8ec7" kindref="member">ReverseSign</ref>();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(t,-t2);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classFramesTest_1a4b85f7bafc513776d56cb1129d43d0a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classFramesTest_1a4b85f7bafc513776d56cb1129d43d0a6" kindref="member">FramesTest::TestTwist</ref>()<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref><sp/><sp/><sp/><sp/>t(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(6,3,5),<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(4,-2,7));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>TestTwist2(t);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref><sp/><sp/><sp/><sp/>t2(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,0),<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,0));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>TestTwist2(t2);<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref><sp/><sp/><sp/><sp/>t3(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,-9,-3),<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(1,-2,-4));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>TestTwist2(t3);<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<ref refid="cpp/utility/hash" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::hash&lt;Twist&gt;</ref>{}(t3),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(3373832976806748309u));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<ref refid="cpp/utility/hash" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::hash&lt;Twist&gt;</ref>{}(t2),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(730713428471863u));</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="classFramesTest_1a9a62e6a223b3678c41f4c81b4cad99c6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classFramesTest_1a9a62e6a223b3678c41f4c81b4cad99c6" kindref="member">FramesTest::TestWrench2</ref>(<ref refid="classKDL_1_1Wrench" kindref="compound">Wrench</ref>&amp;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wrench</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Wrench" kindref="compound">Wrench</ref><sp/><sp/><sp/>w2;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(2*w-w,w);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(w*2-w,w);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(w+w+w-2*w,w);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>w2=w;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(w,w2);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<ref refid="cpp/utility/hash" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::hash&lt;Wrench&gt;</ref>{}(w),<sp/><ref refid="cpp/utility/hash" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::hash&lt;Wrench&gt;</ref>{}(w2));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>w2+=w;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(2*w,w2);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>w2-=w;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(w,w2);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>w2.<ref refid="classKDL_1_1Wrench_1af38ab9d4d4e87cfa3505118351b1ed26" kindref="member">ReverseSign</ref>();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(w,-w2);</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classFramesTest_1a4f443fd67818600c13ceec79930dee29" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classFramesTest_1a4f443fd67818600c13ceec79930dee29" kindref="member">FramesTest::TestWrench</ref>()<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Wrench" kindref="compound">Wrench</ref><sp/><sp/><sp/>w(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(7,-1,3),<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(2,-3,3));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>TestWrench2(w);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Wrench" kindref="compound">Wrench</ref><sp/><sp/><sp/>w2(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,0),<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,0));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>TestWrench2(w2);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Wrench" kindref="compound">Wrench</ref><sp/><sp/><sp/>w3(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(2,1,4),<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(5,3,1));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>TestWrench2(w3);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<ref refid="cpp/utility/hash" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::hash&lt;Wrench&gt;</ref>{}(w3),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(13897938943539516747u));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<ref refid="cpp/utility/hash" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::hash&lt;Wrench&gt;</ref>{}(w2),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(730713428471863u));</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classFramesTest_1aa67cab09050573e5053b38963b97faf3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classFramesTest_1aa67cab09050573e5053b38963b97faf3" kindref="member">FramesTest::TestRotation2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>&amp;<sp/>v,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref><sp/><sp/><sp/>v2;<sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wrench</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Wrench" kindref="compound">Wrench</ref><sp/><sp/><sp/>w(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(7,-1,3),<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(2,-3,3));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref><sp/><sp/><sp/><sp/>t(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(6,3,5),<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(4,-2,7));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotation<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref><sp/>R;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref><sp/>R2;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ra;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rb;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>R<sp/>=<sp/><ref refid="classKDL_1_1Rotation_1afbe17f3c9249078626fba1736aed8d31" kindref="member">Rotation::RPY</ref>(a,b,c);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(<ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(R.<ref refid="classKDL_1_1Rotation_1a281f21f3d632bd84a44fa5caaaebf8e6" kindref="member">UnitX</ref>(),R.<ref refid="classKDL_1_1Rotation_1a281f21f3d632bd84a44fa5caaaebf8e6" kindref="member">UnitX</ref>()),1.0,<ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(<ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(R.<ref refid="classKDL_1_1Rotation_1a197ba79e104bb6ff43994fceed8f7672" kindref="member">UnitY</ref>(),R.<ref refid="classKDL_1_1Rotation_1a197ba79e104bb6ff43994fceed8f7672" kindref="member">UnitY</ref>()),1.0,<ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(<ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(R.<ref refid="classKDL_1_1Rotation_1a1fc6a54d079f1ded3414b870b7607a60" kindref="member">UnitZ</ref>(),R.<ref refid="classKDL_1_1Rotation_1a1fc6a54d079f1ded3414b870b7607a60" kindref="member">UnitZ</ref>()),1.0,<ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(<ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(R.<ref refid="classKDL_1_1Rotation_1a281f21f3d632bd84a44fa5caaaebf8e6" kindref="member">UnitX</ref>(),R.<ref refid="classKDL_1_1Rotation_1a197ba79e104bb6ff43994fceed8f7672" kindref="member">UnitY</ref>()),0.0,<ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(<ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(R.<ref refid="classKDL_1_1Rotation_1a281f21f3d632bd84a44fa5caaaebf8e6" kindref="member">UnitX</ref>(),R.<ref refid="classKDL_1_1Rotation_1a1fc6a54d079f1ded3414b870b7607a60" kindref="member">UnitZ</ref>()),0.0,<ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(<ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(R.<ref refid="classKDL_1_1Rotation_1a197ba79e104bb6ff43994fceed8f7672" kindref="member">UnitY</ref>(),R.<ref refid="classKDL_1_1Rotation_1a1fc6a54d079f1ded3414b870b7607a60" kindref="member">UnitZ</ref>()),0.0,<ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>R2=R;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(R,R2);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<ref refid="cpp/utility/hash" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::hash&lt;Rotation&gt;</ref>{}(R),<sp/><ref refid="cpp/utility/hash" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::hash&lt;Rotation&gt;</ref>{}(R2));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL((R*v).<ref refid="namespaceKDL_1a04a201d7eeb1d5e1ebcea1d297efe9a4" kindref="member">Norm</ref>(),v.Norm(),<ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(R.<ref refid="classKDL_1_1Rotation_1a09a2ee554e814222ef86a8d1ce3267b1" kindref="member">Inverse</ref>(R*v),v);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(R.<ref refid="classKDL_1_1Rotation_1a09a2ee554e814222ef86a8d1ce3267b1" kindref="member">Inverse</ref>(R*t),t);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(R.<ref refid="classKDL_1_1Rotation_1a09a2ee554e814222ef86a8d1ce3267b1" kindref="member">Inverse</ref>(R*w),w);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(R*R.<ref refid="classKDL_1_1Rotation_1a09a2ee554e814222ef86a8d1ce3267b1" kindref="member">Inverse</ref>(v),v);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(R*<ref refid="classKDL_1_1Rotation_1a5a5d40d8e6cf179cac35bc378c83017c" kindref="member">Rotation::Identity</ref>(),R);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<ref refid="classKDL_1_1Rotation_1a5a5d40d8e6cf179cac35bc378c83017c" kindref="member">Rotation::Identity</ref>()*R,R);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(R*(R*(R*v)),(R*R*R)*v);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(R*(R*(R*t)),(R*R*R)*t);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(R*(R*(R*w)),(R*R*R)*w);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(R*R.Inverse(),<ref refid="classKDL_1_1Rotation_1a5a5d40d8e6cf179cac35bc378c83017c" kindref="member">Rotation::Identity</ref>());</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(R.Inverse()*R,<ref refid="classKDL_1_1Rotation_1a5a5d40d8e6cf179cac35bc378c83017c" kindref="member">Rotation::Identity</ref>());</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(R.Inverse()*v,R.Inverse(v));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>R.GetRPY(ra,rb,rc);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(ra,a,<ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(rb,b,<ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(rc,c,<ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>R<sp/>=<sp/><ref refid="classKDL_1_1Rotation_1a39de86d0df854dda05aa9d8516b8e119" kindref="member">Rotation::EulerZYX</ref>(a,b,c);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>R.GetEulerZYX(ra,rb,rc);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(ra,a,<ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(rb,b,<ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(rc,c,<ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>R<sp/>=<sp/><ref refid="classKDL_1_1Rotation_1ad671cdd779a469544b1d903420d0ded9" kindref="member">Rotation::EulerZYZ</ref>(a,b,c);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>R.GetEulerZYZ(ra,rb,rc);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(ra,a,<ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(rb,b,<ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(rc,c,<ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle=<sp/>R.GetRotAngle(v2);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>R2=<ref refid="classKDL_1_1Rotation_1a4e909036d2aad30b631884daa3c15b3b" kindref="member">Rotation::Rot2</ref>(v2,angle);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(R2,R);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>R2=<ref refid="classKDL_1_1Rotation_1ad05c91ff1d5bab2c51b92e349ff9bebb" kindref="member">Rotation::Rot</ref>(v2*1E20,angle);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(R,R2);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>v2=<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(6,2,4);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL((v2).<ref refid="namespaceKDL_1a04a201d7eeb1d5e1ebcea1d297efe9a4" kindref="member">Norm</ref>(),::<ref refid="namespaceKDL_1aa6caeaeca2777225cf1f09355e286d27" kindref="member">sqrt</ref>(<ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(v2,v2)),<ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compare<sp/>a<sp/>rotation<sp/>R<sp/>with<sp/>the<sp/>expected<sp/>angle<sp/>and<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="classFramesTest_1a1fdceb21b5c8e4e27269b0c38e6e51cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classFramesTest_1a1fdceb21b5c8e4e27269b0c38e6e51cb" kindref="member">FramesTest::TestOneRotation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>msg,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Rotation" kindref="compound">KDL::Rotation</ref>&amp;<sp/>R,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>expectedAngle,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref>&amp;<sp/>expectedAxis)</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>angle<sp/>=0;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref><sp/><sp/><sp/><sp/><sp/><sp/>axis;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>angle<sp/>=<sp/>R.<ref refid="classKDL_1_1Rotation_1a34f8fdc2586b09f59c880bed076cdea5" kindref="member">GetRotAngle</ref>(axis);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL_MESSAGE(msg,<sp/>expectedAngle,<sp/>angle,<sp/><ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL_MESSAGE(msg,<sp/>expectedAxis,<sp/>axis);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL_MESSAGE(msg,<sp/>expectedAngle<sp/>*<sp/>expectedAxis,<sp/>R.<ref refid="classKDL_1_1Rotation_1a0602575044d3b1fdcb4608443f4bff7d" kindref="member">GetRot</ref>());</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL_MESSAGE(msg,<sp/><ref refid="classKDL_1_1Rotation_1ad05c91ff1d5bab2c51b92e349ff9bebb" kindref="member">Rotation::Rot</ref>(axis,<sp/>angle),<sp/>R);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)axis.<ref refid="classKDL_1_1Vector_1a82226cbbe86665615c3548cad5d8855f" kindref="member">Normalize</ref>();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL_MESSAGE(msg,<sp/><ref refid="classKDL_1_1Rotation_1a4e909036d2aad30b631884daa3c15b3b" kindref="member">Rotation::Rot2</ref>(axis,<sp/>angle),<sp/>R);</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="classFramesTest_1a71e3a57abe60d480f855b8467d097149" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classFramesTest_1a71e3a57abe60d480f855b8467d097149" kindref="member">FramesTest::TestArbitraryRotation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>msg,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref>&amp;<sp/>v,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>expectedAngle,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref>&amp;<sp/>expectedVector)</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/io/basic_stringstream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::stringstream</ref><sp/><sp/><sp/>ss;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;rot(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;],(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>angle<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotation(ss.<ref refid="cpp/io/basic_stringstream/str" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">str</ref>(),<sp/><ref refid="classKDL_1_1Rotation_1ad05c91ff1d5bab2c51b92e349ff9bebb" kindref="member">Rotation::Rot</ref>(v,angle*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/>expectedAngle*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,<sp/>expectedVector);</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TESTEULERZYX(a,b,g)<sp/>\</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="209"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>eps=1E-14;\</highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rotation<sp/>R<sp/>=<sp/>Rotation::EulerZYX((a),(b),(g));\</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>alpha,beta,gamma;\</highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R.GetEulerZYX(alpha,beta,gamma);\</highlight></codeline>
<codeline lineno="213"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL((a),alpha,eps);\</highlight></codeline>
<codeline lineno="214"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL((b),beta,eps);\</highlight></codeline>
<codeline lineno="215"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL((g),gamma,eps);\</highlight></codeline>
<codeline lineno="216"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="framestest_8cpp_1a4bb204411a1440f3da39179f796f9767" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TESTEULERZYZ(a,b,g)<sp/>\</highlight></codeline>
<codeline lineno="219"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="220"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>eps=1E-14;\</highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rotation<sp/>R<sp/>=<sp/>Rotation::EulerZYZ((a),(b),(g));\</highlight></codeline>
<codeline lineno="222"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>alpha,beta,gamma;\</highlight></codeline>
<codeline lineno="223"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R.GetEulerZYZ(alpha,beta,gamma);\</highlight></codeline>
<codeline lineno="224"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL((a),alpha,eps);\</highlight></codeline>
<codeline lineno="225"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL((b),beta,eps);\</highlight></codeline>
<codeline lineno="226"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL((g),gamma,eps);\</highlight></codeline>
<codeline lineno="227"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="framestest_8cpp_1a8117612f626f80ffe7eb07cb2142b0d5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TESTEULERZYX_INVARIANT(a,b,g,a2,b2,g2)\</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="230"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>eps=1E-14;\</highlight></codeline>
<codeline lineno="231"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rotation<sp/>R1=Rotation::EulerZYX(a,b,g);\</highlight></codeline>
<codeline lineno="232"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rotation<sp/>R2=Rotation::EulerZYX(a2,b2,g2);\</highlight></codeline>
<codeline lineno="233"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(0,diff(R2,R1).Norm(),eps);\</highlight></codeline>
<codeline lineno="234"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="framestest_8cpp_1a336e2b9d894e2c1583725ba48d368bec" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TESTEULERZYZ_INVARIANT(a,b,g,a2,b2,g2)\</highlight></codeline>
<codeline lineno="236"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="237"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>eps=1E-14;\</highlight></codeline>
<codeline lineno="238"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rotation<sp/>R1=Rotation::EulerZYZ(a,b,g);\</highlight></codeline>
<codeline lineno="239"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rotation<sp/>R2=Rotation::EulerZYZ(a2,b2,g2);\</highlight></codeline>
<codeline lineno="240"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(0,diff(R2,R1).Norm(),eps);\</highlight></codeline>
<codeline lineno="241"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="classFramesTest_1a4ae25315e1e309c05ac65517814ed44c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classFramesTest_1a4ae25315e1e309c05ac65517814ed44c" kindref="member">FramesTest::TestEuler</ref>()<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceKDL" kindref="compound">KDL</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(0.1,0.2,0.3)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(-0.1,0.2,0.3)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(0.1,-0.2,0.3)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(0.1,0.2,-0.3)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(0,0.2,0.3)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(0.1,0.2,0)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(0.1,0,0.3)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(0.1,0,0)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(0,0,0.3)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(0,0,0)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(0.3,0.999*<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0.1)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>beta==<sp/>+/-<sp/>PI/2<sp/>=&gt;<sp/>multiple<sp/>solutions<sp/>available,<sp/>gamma<sp/>will<sp/>be<sp/>chosen<sp/>to<sp/>be<sp/>zero<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>we<sp/>test<sp/>with<sp/>gamma==0<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(0.3,0.9999999999*<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(0.3,0.99999999*<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(0.3,0.999999*<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(0.3,0.9999*<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(0.3,0.99*<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TESTEULERZYX(0.1,-PI_2,0.3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(0,<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(0.3,-<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(0.3,-0.9999999999*<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(0.3,-0.99999999*<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(0.3,-0.999999*<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(0.3,-0.9999*<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(0.3,-0.99*<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(0,-<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>extremes<sp/>of<sp/>the<sp/>range:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>,-<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(-<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>,-<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>,1,0)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(-<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>,1,0)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TESTEULERZYX(0,-PI_2,PI)<sp/><sp/>gamma<sp/>will<sp/>be<sp/>chosen<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TESTEULERZYX(0,PI_2,-PI)<sp/><sp/>gamma<sp/>will<sp/>be<sp/>chosen<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(0,1,<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a4bb204411a1440f3da39179f796f9767" kindref="member">TESTEULERZYZ</ref>(0.1,0.2,0.3)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a4bb204411a1440f3da39179f796f9767" kindref="member">TESTEULERZYZ</ref>(-0.1,0.2,0.3)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a4bb204411a1440f3da39179f796f9767" kindref="member">TESTEULERZYZ</ref>(0.1,0.9*<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>,0.3)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a4bb204411a1440f3da39179f796f9767" kindref="member">TESTEULERZYZ</ref>(0.1,0.2,-0.3)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a4bb204411a1440f3da39179f796f9767" kindref="member">TESTEULERZYZ</ref>(0,0,0)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a4bb204411a1440f3da39179f796f9767" kindref="member">TESTEULERZYZ</ref>(0,0,0)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a4bb204411a1440f3da39179f796f9767" kindref="member">TESTEULERZYZ</ref>(0,0,0)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a4bb204411a1440f3da39179f796f9767" kindref="member">TESTEULERZYZ</ref>(<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>,0,0)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a4bb204411a1440f3da39179f796f9767" kindref="member">TESTEULERZYZ</ref>(0,0.2,<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a4bb204411a1440f3da39179f796f9767" kindref="member">TESTEULERZYZ</ref>(0.4,<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>,0)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a4bb204411a1440f3da39179f796f9767" kindref="member">TESTEULERZYZ</ref>(0,<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>,0)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a4bb204411a1440f3da39179f796f9767" kindref="member">TESTEULERZYZ</ref>(<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>,<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>,0)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a58b89709dddeb3432cdc1cb9f30e7591" kindref="member">TESTEULERZYX</ref>(0.3,<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a4bb204411a1440f3da39179f796f9767" kindref="member">TESTEULERZYZ</ref>(0.3,0.9999999999*<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a4bb204411a1440f3da39179f796f9767" kindref="member">TESTEULERZYZ</ref>(0.3,0.99999999*<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a4bb204411a1440f3da39179f796f9767" kindref="member">TESTEULERZYZ</ref>(0.3,0.999999*<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a4bb204411a1440f3da39179f796f9767" kindref="member">TESTEULERZYZ</ref>(0.3,0.9999*<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a4bb204411a1440f3da39179f796f9767" kindref="member">TESTEULERZYZ</ref>(0.3,0.99*<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a8117612f626f80ffe7eb07cb2142b0d5" kindref="member">TESTEULERZYX_INVARIANT</ref>(0.1,0.2,0.3,<sp/><sp/><sp/>0.1+<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>,<sp/><sp/><ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>-0.2,<sp/>0.3+<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a8117612f626f80ffe7eb07cb2142b0d5" kindref="member">TESTEULERZYX_INVARIANT</ref>(0.1,0.2,0.3,<sp/><sp/><sp/>0.1-<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>,<sp/><sp/><ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>-0.2,<sp/>0.3-<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a8117612f626f80ffe7eb07cb2142b0d5" kindref="member">TESTEULERZYX_INVARIANT</ref>(0.1,0.2,0.3,<sp/><sp/><sp/>0.1-<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>,<sp/><sp/><ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>-0.2,<sp/>0.3+<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a8117612f626f80ffe7eb07cb2142b0d5" kindref="member">TESTEULERZYX_INVARIANT</ref>(0.1,0.2,0.3,<sp/><sp/><sp/>0.1+<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>,<sp/><sp/><ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>-0.2,<sp/>0.3-<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a336e2b9d894e2c1583725ba48d368bec" kindref="member">TESTEULERZYZ_INVARIANT</ref>(0.1,0.2,0.3,<sp/><sp/><sp/>0.1+<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>,<sp/><sp/>-0.2,<sp/>0.3+<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a336e2b9d894e2c1583725ba48d368bec" kindref="member">TESTEULERZYZ_INVARIANT</ref>(0.1,0.2,0.3,<sp/><sp/><sp/>0.1-<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>,<sp/><sp/>-0.2,<sp/>0.3+<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a336e2b9d894e2c1583725ba48d368bec" kindref="member">TESTEULERZYZ_INVARIANT</ref>(0.1,0.2,0.3,<sp/><sp/><sp/>0.1+<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>,<sp/><sp/>-0.2,<sp/>0.3-<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="framestest_8cpp_1a336e2b9d894e2c1583725ba48d368bec" kindref="member">TESTEULERZYZ_INVARIANT</ref>(0.1,0.2,0.3,<sp/><sp/><sp/>0.1-<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>,<sp/><sp/>-0.2,<sp/>0.3-<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>);</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="classFramesTest_1a012d5ca74e559c18fe1c9b0d2393c32e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classFramesTest_1a012d5ca74e559c18fe1c9b0d2393c32e" kindref="member">FramesTest::TestRangeArbitraryRotation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>msg,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref>&amp;<sp/>v,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref>&amp;<sp/>expectedVector)</highlight></codeline>
<codeline lineno="315"><highlight class="normal">{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,1));<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>45,<sp/><sp/><sp/>45,<sp/>expectedVector);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>90,<sp/><sp/><sp/>90,<sp/>expectedVector);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>179,<sp/>179,<sp/>expectedVector);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>180,<sp/>180,<sp/>expectedVector);<sp/><sp/><sp/><sp/>//<sp/>sign<sp/>VARIES<sp/>by<sp/>case<sp/>because<sp/>180<sp/>degrees<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>full<sp/>determined:<sp/>it<sp/>can<sp/>return<sp/>+/-<sp/>the<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>depending<sp/>on<sp/>what<sp/>the<sp/>original<sp/>axis<sp/>was.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BOTH<sp/>RESULTS<sp/>ARE<sp/>CORRECT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>181,<sp/>179,<sp/>-expectedVector);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&gt;+180<sp/>rotation<sp/>=&gt;<sp/>&lt;+180<sp/>+<sp/>negative<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>270,<sp/><sp/>90,<sp/>-expectedVector);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>359,<sp/><sp/><sp/>1,<sp/>-expectedVector);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>360,<sp/><sp/><sp/>0,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,1));<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>361,<sp/><sp/><sp/>1,<sp/>expectedVector);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>450,<sp/><sp/>90,<sp/>expectedVector);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>539,<sp/>179,<sp/>expectedVector);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>540,<sp/>180,<sp/>expectedVector);<sp/><sp/><sp/><sp/>//<sp/>see<sp/>above<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>541,<sp/>179,<sp/>-expectedVector);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>like<sp/>181</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>630,<sp/><sp/>90,<sp/>-expectedVector);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>like<sp/>270</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>719,<sp/><sp/><sp/>1,<sp/>-expectedVector);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>like<sp/>259</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>720,<sp/><sp/><sp/>0,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,1));<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>-45,<sp/><sp/><sp/>45,<sp/>-expectedVector);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>-90,<sp/><sp/><sp/>90,<sp/>-expectedVector);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>-179,<sp/>179,<sp/>-expectedVector);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>-180,<sp/>180,<sp/>expectedVector);<sp/><sp/><sp/>//<sp/>see<sp/>above<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>-181,<sp/>179,<sp/>expectedVector);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>-270,<sp/><sp/>90,<sp/>expectedVector);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>-359,<sp/><sp/><sp/>1,<sp/>expectedVector);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>-360,<sp/><sp/><sp/>0,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,1));<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>-361,<sp/><sp/><sp/>1,<sp/>-expectedVector);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>-450,<sp/><sp/>90,<sp/>-expectedVector);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>-539,<sp/>179,<sp/>-expectedVector);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>-540,<sp/>180,<sp/>-expectedVector);<sp/><sp/>//<sp/>see<sp/>above<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>-541,<sp/>179,<sp/>expectedVector);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>-630,<sp/><sp/>90,<sp/>expectedVector);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>-719,<sp/><sp/><sp/>1,<sp/>expectedVector);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>TestArbitraryRotation(msg,<sp/>v,<sp/>-720,<sp/><sp/><sp/>0,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,1));<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="classFramesTest_1a8d0c9e755c8dfdd6dd5d2b65fb9b080a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classFramesTest_1a8d0c9e755c8dfdd6dd5d2b65fb9b080a" kindref="member">FramesTest::TestRotation</ref>()<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>TestRotation2(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(3,4,5),10*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,20*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,30*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>X<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>TestRangeArbitraryRotation(</highlight><highlight class="stringliteral">&quot;[1,0,0]&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(1,0,0),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(1,0,0));</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>TestRangeArbitraryRotation(</highlight><highlight class="stringliteral">&quot;[-1,0,0]&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(-1,0,0),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(-1,0,0));</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Y<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>TestRangeArbitraryRotation(</highlight><highlight class="stringliteral">&quot;[0,1,0]&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,1,0),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,1,0));</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>TestRangeArbitraryRotation(</highlight><highlight class="stringliteral">&quot;[0,-1,0]&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,-1,0),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,-1,0));</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Z<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>TestRangeArbitraryRotation(</highlight><highlight class="stringliteral">&quot;[0,0,1]&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,1),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,1));</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>TestRangeArbitraryRotation(</highlight><highlight class="stringliteral">&quot;[0,0,-1]&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,-1),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,-1));</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>X,Y<sp/>axes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>TestRangeArbitraryRotation(</highlight><highlight class="stringliteral">&quot;[1,1,0]&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(1,1,0),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(1,1,0)/<ref refid="namespaceKDL_1aa6caeaeca2777225cf1f09355e286d27" kindref="member">sqrt</ref>(2.0));</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>TestRangeArbitraryRotation(</highlight><highlight class="stringliteral">&quot;[-1,-1,0]&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(-1,-1,0),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(-1,-1,0)/<ref refid="namespaceKDL_1aa6caeaeca2777225cf1f09355e286d27" kindref="member">sqrt</ref>(2.0));</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>X,Z<sp/>axes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>TestRangeArbitraryRotation(</highlight><highlight class="stringliteral">&quot;[1,0,1]&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(1,0,1),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(1,0,1)/<ref refid="namespaceKDL_1aa6caeaeca2777225cf1f09355e286d27" kindref="member">sqrt</ref>(2.0));</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>TestRangeArbitraryRotation(</highlight><highlight class="stringliteral">&quot;[-1,0,-1]&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(-1,0,-1),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(-1,0,-1)/<ref refid="namespaceKDL_1aa6caeaeca2777225cf1f09355e286d27" kindref="member">sqrt</ref>(2.0));</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Y,Z<sp/>axes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>TestRangeArbitraryRotation(</highlight><highlight class="stringliteral">&quot;[0,1,1]&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,1,1),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,1,1)/<ref refid="namespaceKDL_1aa6caeaeca2777225cf1f09355e286d27" kindref="member">sqrt</ref>(2.0));</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>TestRangeArbitraryRotation(</highlight><highlight class="stringliteral">&quot;[0,-1,-1]&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,-1,-1),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,-1,-1)/<ref refid="namespaceKDL_1aa6caeaeca2777225cf1f09355e286d27" kindref="member">sqrt</ref>(2.0));</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>X,Y,Z<sp/>axes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>TestRangeArbitraryRotation(</highlight><highlight class="stringliteral">&quot;[1,1,1]&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(1,1,1),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(1,1,1)/<ref refid="namespaceKDL_1aa6caeaeca2777225cf1f09355e286d27" kindref="member">sqrt</ref>(3.0));</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>TestRangeArbitraryRotation(</highlight><highlight class="stringliteral">&quot;[-1,-1,-1]&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(-1,-1,-1),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(-1,-1,-1)/<ref refid="namespaceKDL_1aa6caeaeca2777225cf1f09355e286d27" kindref="member">sqrt</ref>(3.0));</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>change<sp/>...<sp/>some<sp/>of<sp/>the<sp/>-180<sp/>are<sp/>the<sp/>same<sp/>as<sp/>the<sp/>+180,<sp/>and<sp/>some</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>results<sp/>are<sp/>the<sp/>opposite<sp/>sign.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotation(</highlight><highlight class="stringliteral">&quot;rot([1,0,0],180)&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Rotation_1ad05c91ff1d5bab2c51b92e349ff9bebb" kindref="member">KDL::Rotation::Rot</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref>(1,0,0),180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/>180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(1,0,0));</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>as<sp/>+180</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotation(</highlight><highlight class="stringliteral">&quot;rot([-1,0,0],180)&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Rotation_1ad05c91ff1d5bab2c51b92e349ff9bebb" kindref="member">KDL::Rotation::Rot</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref>(-1,0,0),180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/>180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(1,0,0));</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotation(</highlight><highlight class="stringliteral">&quot;rot([0,1,0],180)&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Rotation_1ad05c91ff1d5bab2c51b92e349ff9bebb" kindref="member">KDL::Rotation::Rot</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref>(0,1,0),180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/>180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,1,0));</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>as<sp/>+180</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotation(</highlight><highlight class="stringliteral">&quot;rot([0,-1,0],180)&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Rotation_1ad05c91ff1d5bab2c51b92e349ff9bebb" kindref="member">KDL::Rotation::Rot</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref>(0,-1,0),180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/>180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,1,0));</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotation(</highlight><highlight class="stringliteral">&quot;rot([0,0,1],180)&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Rotation_1ad05c91ff1d5bab2c51b92e349ff9bebb" kindref="member">KDL::Rotation::Rot</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref>(0,0,1),180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/>180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,1));</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>as<sp/>+180</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotation(</highlight><highlight class="stringliteral">&quot;rot([0,0,-1],180)&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Rotation_1ad05c91ff1d5bab2c51b92e349ff9bebb" kindref="member">KDL::Rotation::Rot</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref>(0,0,-1),180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/>180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,1));</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotation(</highlight><highlight class="stringliteral">&quot;rot([1,0,1],180)&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Rotation_1ad05c91ff1d5bab2c51b92e349ff9bebb" kindref="member">KDL::Rotation::Rot</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref>(1,0,1),180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/>180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(1,0,1)/<ref refid="namespaceKDL_1aa6caeaeca2777225cf1f09355e286d27" kindref="member">sqrt</ref>(2.0));</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>as<sp/>+180</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotation(</highlight><highlight class="stringliteral">&quot;rot([1,0,1],-180)&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Rotation_1ad05c91ff1d5bab2c51b92e349ff9bebb" kindref="member">KDL::Rotation::Rot</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref>(1,0,1),-180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/>180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(1,0,1)/<ref refid="namespaceKDL_1aa6caeaeca2777225cf1f09355e286d27" kindref="member">sqrt</ref>(2.0));</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotation(</highlight><highlight class="stringliteral">&quot;rot([-1,0,-1],180)&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Rotation_1ad05c91ff1d5bab2c51b92e349ff9bebb" kindref="member">KDL::Rotation::Rot</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref>(-1,0,-1),180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/>180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(1,0,1)/<ref refid="namespaceKDL_1aa6caeaeca2777225cf1f09355e286d27" kindref="member">sqrt</ref>(2.0));</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>as<sp/>+180</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotation(</highlight><highlight class="stringliteral">&quot;rot([-1,0,-1],-180)&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Rotation_1ad05c91ff1d5bab2c51b92e349ff9bebb" kindref="member">KDL::Rotation::Rot</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref>(-1,0,-1),-180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/>180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(1,0,1)/<ref refid="namespaceKDL_1aa6caeaeca2777225cf1f09355e286d27" kindref="member">sqrt</ref>(2.0));</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotation(</highlight><highlight class="stringliteral">&quot;rot([1,1,0],180)&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Rotation_1ad05c91ff1d5bab2c51b92e349ff9bebb" kindref="member">KDL::Rotation::Rot</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref>(1,1,0),180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/>180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(1,1,0)/<ref refid="namespaceKDL_1aa6caeaeca2777225cf1f09355e286d27" kindref="member">sqrt</ref>(2.0));</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>opposite<sp/>of<sp/>+180</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotation(</highlight><highlight class="stringliteral">&quot;rot([1,1,0],-180)&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Rotation_1ad05c91ff1d5bab2c51b92e349ff9bebb" kindref="member">KDL::Rotation::Rot</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref>(1,1,0),-180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/>180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(1,1,0)/<ref refid="namespaceKDL_1aa6caeaeca2777225cf1f09355e286d27" kindref="member">sqrt</ref>(2.0));</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotation(</highlight><highlight class="stringliteral">&quot;rot([-1,-1,0],180)&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Rotation_1ad05c91ff1d5bab2c51b92e349ff9bebb" kindref="member">KDL::Rotation::Rot</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref>(-1,-1,0),180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/>180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(1,1,0)/<ref refid="namespaceKDL_1aa6caeaeca2777225cf1f09355e286d27" kindref="member">sqrt</ref>(2.0));</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>opposite<sp/>of<sp/>+180</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotation(</highlight><highlight class="stringliteral">&quot;rot([-1,-1,0],-180)&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Rotation_1ad05c91ff1d5bab2c51b92e349ff9bebb" kindref="member">KDL::Rotation::Rot</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref>(-1,-1,0),-180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/>180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(1,1,0)/<ref refid="namespaceKDL_1aa6caeaeca2777225cf1f09355e286d27" kindref="member">sqrt</ref>(2.0));</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotation(</highlight><highlight class="stringliteral">&quot;rot([0,1,1],180)&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Rotation_1ad05c91ff1d5bab2c51b92e349ff9bebb" kindref="member">KDL::Rotation::Rot</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref>(0,1,1),180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/>180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,1,1)/<ref refid="namespaceKDL_1aa6caeaeca2777225cf1f09355e286d27" kindref="member">sqrt</ref>(2.0));</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>as<sp/>+180</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotation(</highlight><highlight class="stringliteral">&quot;rot([0,1,1],-180)&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Rotation_1ad05c91ff1d5bab2c51b92e349ff9bebb" kindref="member">KDL::Rotation::Rot</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref>(0,1,1),-180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/>180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,1,1)/<ref refid="namespaceKDL_1aa6caeaeca2777225cf1f09355e286d27" kindref="member">sqrt</ref>(2.0));</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotation(</highlight><highlight class="stringliteral">&quot;rot([0,-1,-1],180)&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Rotation_1ad05c91ff1d5bab2c51b92e349ff9bebb" kindref="member">KDL::Rotation::Rot</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref>(0,-1,-1),180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/>180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,1,1)/<ref refid="namespaceKDL_1aa6caeaeca2777225cf1f09355e286d27" kindref="member">sqrt</ref>(2.0));</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>as<sp/>+180</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotation(</highlight><highlight class="stringliteral">&quot;rot([0,-1,-1],-180)&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Rotation_1ad05c91ff1d5bab2c51b92e349ff9bebb" kindref="member">KDL::Rotation::Rot</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref>(0,-1,-1),-180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/>180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,1,1)/<ref refid="namespaceKDL_1aa6caeaeca2777225cf1f09355e286d27" kindref="member">sqrt</ref>(2.0));</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotation(</highlight><highlight class="stringliteral">&quot;rot([1,1,1],180)&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Rotation_1ad05c91ff1d5bab2c51b92e349ff9bebb" kindref="member">KDL::Rotation::Rot</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref>(1,1,1),180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/>180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(1,1,1)/<ref refid="namespaceKDL_1aa6caeaeca2777225cf1f09355e286d27" kindref="member">sqrt</ref>(3.0));</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>as<sp/>+180</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotation(</highlight><highlight class="stringliteral">&quot;rot([1,1,1],-180)&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Rotation_1ad05c91ff1d5bab2c51b92e349ff9bebb" kindref="member">KDL::Rotation::Rot</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref>(1,1,1),-180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/>180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(1,1,1)/<ref refid="namespaceKDL_1aa6caeaeca2777225cf1f09355e286d27" kindref="member">sqrt</ref>(3.0));</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotation(</highlight><highlight class="stringliteral">&quot;rot([-1,-1,-1],180)&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Rotation_1ad05c91ff1d5bab2c51b92e349ff9bebb" kindref="member">KDL::Rotation::Rot</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref>(-1,-1,-1),180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/>180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(1,1,1)/<ref refid="namespaceKDL_1aa6caeaeca2777225cf1f09355e286d27" kindref="member">sqrt</ref>(3.0));</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>as<sp/>+180</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotation(</highlight><highlight class="stringliteral">&quot;rot([-1,-1,-1],-180)&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Rotation_1ad05c91ff1d5bab2c51b92e349ff9bebb" kindref="member">KDL::Rotation::Rot</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref>(-1,-1,-1),-180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/>180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(1,1,1)/<ref refid="namespaceKDL_1aa6caeaeca2777225cf1f09355e286d27" kindref="member">sqrt</ref>(3.0));</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotation(</highlight><highlight class="stringliteral">&quot;rot([0.707107,<sp/>0,<sp/>0.707107&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Rotation_1afbe17f3c9249078626fba1736aed8d31" kindref="member">KDL::Rotation::RPY</ref>(-2.9811968953315162,<sp/>-<ref refid="namespaceKDL_1ab35b68b021e044b46c03f38c4c14738f" kindref="member">atan</ref>(1)*2,<sp/>-0.1603957582582825),<sp/>180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0.707107,0,0.707107)<sp/>);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<ref refid="cpp/utility/hash" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::hash&lt;Rotation&gt;</ref>{}(<ref refid="classKDL_1_1Rotation_1a1b1c1e1843d10ac70043d3c3d0358b2f" kindref="member">Rotation::Quaternion</ref>(1,<sp/>0,<sp/>0,<sp/>0)),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(5526237894416316219u));</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<ref refid="cpp/utility/hash" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::hash&lt;Rotation&gt;</ref>{}(<ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref>()),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(8386870752212395617u));</highlight></codeline>
<codeline lineno="425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427" refid="classFramesTest_1acdf82029010980d2a241737e070d2bd5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classFramesTest_1acdf82029010980d2a241737e070d2bd5" kindref="member">FramesTest::TestGetRotAngle</ref>()<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>roll<sp/>=<sp/>-2.9811968953315162;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pitch<sp/>=<sp/>-<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yaw<sp/>=<sp/>-0.1603957582582825;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rpy<sp/>-&gt;<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation" kindref="compound">KDL::Rotation</ref><sp/>kdlRotation1<sp/>=<sp/><ref refid="classKDL_1_1Rotation_1afbe17f3c9249078626fba1736aed8d31" kindref="member">KDL::Rotation::RPY</ref>(roll,<sp/>pitch,<sp/>yaw);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rotation<sp/>-&gt;<sp/>angle-axis<sp/>(with<sp/>KDL::GetRotAngle)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Vector" kindref="compound">KDL::Vector</ref><sp/>kdlAxis;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta<sp/>=<sp/>kdlRotation1.<ref refid="classKDL_1_1Rotation_1a34f8fdc2586b09f59c880bed076cdea5" kindref="member">GetRotAngle</ref>(kdlAxis);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT(0==isnan(theta));</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT(0==isnan(kdlAxis[0]));</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT(0==isnan(kdlAxis[1]));</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT(0==isnan(kdlAxis[2]));</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>GetRotAngle<sp/>on<sp/>slightly<sp/>non-orthogonal<sp/>rotation<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref><sp/>axis;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/><ref refid="classKDL_1_1Rotation" kindref="compound">KDL::Rotation</ref>(<sp/>1,<sp/>0,<sp/>0<sp/>+<sp/>1e-6,<sp/>0,<sp/>1,<sp/>0,<sp/>0,<sp/>0,<sp/><sp/>1<sp/>+<sp/>1e-6).<ref refid="classKDL_1_1Rotation_1a34f8fdc2586b09f59c880bed076cdea5" kindref="member">GetRotAngle</ref>(axis);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL_MESSAGE(</highlight><highlight class="stringliteral">&quot;rot(NON-ORTHOGONAL,<sp/>0)&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>angle,<sp/><ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref><sp/>axis;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/><ref refid="classKDL_1_1Rotation" kindref="compound">KDL::Rotation</ref>(-1,<sp/>0,<sp/>0<sp/>+<sp/>1e-6,<sp/>0,<sp/>1,<sp/>0,<sp/>0,<sp/>0,<sp/>-1<sp/>-<sp/>1e-6).<ref refid="classKDL_1_1Rotation_1a34f8fdc2586b09f59c880bed076cdea5" kindref="member">GetRotAngle</ref>(axis);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL_MESSAGE(</highlight><highlight class="stringliteral">&quot;rot(NON-ORTHOGONAL,<sp/>PI)&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>,<sp/>angle,<sp/><ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Tests<sp/>to<sp/>show<sp/>that<sp/>GetRotAngle<sp/>does<sp/>not<sp/>work<sp/>for<sp/>an<sp/>improper<sp/>rotation<sp/>matrix<sp/>which<sp/>has<sp/>a<sp/>determinant<sp/>of<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>an<sp/>improper<sp/>rotation<sp/>matrix<sp/>corresponds<sp/>to<sp/>a<sp/>rotation<sp/>between<sp/>a<sp/>right-hand<sp/>and<sp/>left-hand<sp/>coordinate<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref><sp/>axis;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref><sp/>R,<sp/>Rout;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>det;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Improper<sp/>Rotation<sp/>Matrix<sp/>for<sp/>120<sp/>deg<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>R<sp/>=<sp/><ref refid="classKDL_1_1Rotation" kindref="compound">KDL::Rotation</ref>(<sp/>0,<sp/>-1,<sp/>0,<sp/>0,<sp/>0,<sp/>-1,<sp/>-1,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>det<sp/>=<sp/>+R(0,0)*(R(1,1)*R(2,2)-R(2,1)*R(1,2))-R(0,1)*(R(1,0)*R(2,2)-R(2,0)*R(1,2))+R(0,2)*(R(1,0)*R(2,1)-R(2,0)*R(1,1));</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(det,-1.0);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>angle<sp/>=<sp/>R.<ref refid="classKDL_1_1Rotation_1a34f8fdc2586b09f59c880bed076cdea5" kindref="member">GetRotAngle</ref>(axis);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>Rout<sp/>=<sp/><ref refid="classKDL_1_1Rotation_1ad05c91ff1d5bab2c51b92e349ff9bebb" kindref="member">KDL::Rotation::Rot</ref>(axis,<sp/>angle);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_ASSERTION_FAIL(CPPUNIT_ASSERT_EQUAL(R,Rout));</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Improper<sp/>Rotation<sp/>matrix<sp/>for<sp/>180<sp/>deg<sp/>rotation<sp/>(singular)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>R<sp/>=<sp/><ref refid="classKDL_1_1Rotation" kindref="compound">KDL::Rotation</ref>(<sp/>-1,<sp/>0,<sp/>0,<sp/>0,<sp/>-1,<sp/>0,<sp/>0,<sp/>0,<sp/>-1);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>det<sp/>=<sp/>+R(0,0)*(R(1,1)*R(2,2)-R(2,1)*R(1,2))-R(0,1)*(R(1,0)*R(2,2)-R(2,0)*R(1,2))+R(0,2)*(R(1,0)*R(2,1)-R(2,0)*R(1,1));</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(det,-1.0);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>angle<sp/>=<sp/>R.<ref refid="classKDL_1_1Rotation_1a34f8fdc2586b09f59c880bed076cdea5" kindref="member">GetRotAngle</ref>(axis);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>Rout<sp/>=<sp/><ref refid="classKDL_1_1Rotation_1ad05c91ff1d5bab2c51b92e349ff9bebb" kindref="member">KDL::Rotation::Rot</ref>(axis,<sp/>angle);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_ASSERTION_FAIL(CPPUNIT_ASSERT_EQUAL(R,Rout));</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="classFramesTest_1a073ebed9f5d592e1398bd9d4d876f1ab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classFramesTest_1a073ebed9f5d592e1398bd9d4d876f1ab" kindref="member">FramesTest::TestQuaternion</ref>()<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref><sp/><sp/><sp/><sp/>R;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref><sp/><sp/><sp/><sp/>R2;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x,y,z,w;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x2,y2,z2,w2;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>identity<sp/>R<sp/>-&gt;<sp/>quat<sp/>-&gt;<sp/>R2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>R.<ref refid="classKDL_1_1Rotation_1ac8e51b8dce630de273d054710f7458fb" kindref="member">GetQuaternion</ref>(x,y,z,w);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>R2.<ref refid="classKDL_1_1Rotation_1a1b1c1e1843d10ac70043d3c3d0358b2f" kindref="member">Quaternion</ref>(x,y,z,w);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(R,R2);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>45<sp/>deg<sp/>rotation<sp/>in<sp/>X</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>R<sp/>=<sp/><ref refid="classKDL_1_1Rotation_1a39de86d0df854dda05aa9d8516b8e119" kindref="member">Rotation::EulerZYX</ref>(0,0,45*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>R.<ref refid="classKDL_1_1Rotation_1ac8e51b8dce630de273d054710f7458fb" kindref="member">GetQuaternion</ref>(x,y,z,w);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(x,<sp/><ref refid="namespaceKDL_1ad75e917c4141823627a64b5cfc912eda" kindref="member">sin</ref>((45*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>)/2),<sp/><ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(y,<sp/>0,<sp/><ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(z,<sp/>0,<sp/><ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(w,<sp/><ref refid="namespaceKDL_1a28fb39c2d77d3050aebc60d3fcb67797" kindref="member">cos</ref>((45*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>)/2),<sp/><ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>R2<sp/>=<sp/><ref refid="classKDL_1_1Rotation_1a1b1c1e1843d10ac70043d3c3d0358b2f" kindref="member">Rotation::Quaternion</ref>(x,y,z,w);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(R,R2);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>direct<sp/>45<sp/>deg<sp/>rotation<sp/>in<sp/>X</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>R2<sp/>=<sp/><ref refid="classKDL_1_1Rotation_1a1b1c1e1843d10ac70043d3c3d0358b2f" kindref="member">Rotation::Quaternion</ref>(<ref refid="namespaceKDL_1ad75e917c4141823627a64b5cfc912eda" kindref="member">sin</ref>((45*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>)/2),<sp/>0,<sp/>0,<sp/><ref refid="namespaceKDL_1a28fb39c2d77d3050aebc60d3fcb67797" kindref="member">cos</ref>((45*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>)/2));</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(R,R2);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>R2.<ref refid="classKDL_1_1Rotation_1ac8e51b8dce630de273d054710f7458fb" kindref="member">GetQuaternion</ref>(x2,y2,z2,w2);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(x,<sp/>x2,<sp/><ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(y,<sp/>y2,<sp/><ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(z,<sp/>z2,<sp/><ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(w,<sp/>w2,<sp/><ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>45<sp/>deg<sp/>rotation<sp/>in<sp/>X<sp/>and<sp/>in<sp/>Z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>R<sp/>=<sp/><ref refid="classKDL_1_1Rotation_1a39de86d0df854dda05aa9d8516b8e119" kindref="member">Rotation::EulerZYX</ref>(45*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,0,45*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>R.<ref refid="classKDL_1_1Rotation_1ac8e51b8dce630de273d054710f7458fb" kindref="member">GetQuaternion</ref>(x,y,z,w);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>R2<sp/>=<sp/><ref refid="classKDL_1_1Rotation_1a1b1c1e1843d10ac70043d3c3d0358b2f" kindref="member">Rotation::Quaternion</ref>(x,y,z,w);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(R,R2);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>R2.<ref refid="classKDL_1_1Rotation_1ac8e51b8dce630de273d054710f7458fb" kindref="member">GetQuaternion</ref>(x2,y2,z2,w2);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(x,<sp/>x2,<sp/><ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(y,<sp/>y2,<sp/><ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(z,<sp/>z2,<sp/><ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_DOUBLES_EQUAL(w,<sp/>w2,<sp/><ref refid="namespaceKDL_1ad69840ad33dc4985798237acfd5fd048" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525" refid="classFramesTest_1af197eec57e0a370a5d8eae7e588552e4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classFramesTest_1af197eec57e0a370a5d8eae7e588552e4" kindref="member">FramesTest::TestOneRotationDiff</ref>(</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>msg,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref>&amp;<sp/>R_a_b1,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref>&amp;<sp/>R_a_b2,</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>&amp;<sp/>expectedDiff)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL_MESSAGE(msg,<sp/><ref refid="namespaceKDL_1a721ba3f54f506bc1004fb981a9ea7b13" kindref="member">diff</ref>(R_a_b1,<sp/>R_a_b2),<sp/>expectedDiff);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL_MESSAGE(msg,<sp/><ref refid="namespaceKDL_1ac90990ec8c80f1c7a411052f6b1f322b" kindref="member">addDelta</ref>(R_a_b1,<sp/>expectedDiff),<sp/>R_a_b2);</highlight></codeline>
<codeline lineno="532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534" refid="classFramesTest_1a6e1672d7d09c85475738619fee679238" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classFramesTest_1a6e1672d7d09c85475738619fee679238" kindref="member">FramesTest::TestRotationDiff</ref>()<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotX(0*deg2rad),RotX(0*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1a60d5c0a5b439a0c2413e94aa45db8cc1" kindref="member">Rotation::RotX</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1a60d5c0a5b439a0c2413e94aa45db8cc1" kindref="member">Rotation::RotX</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,0));<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotX(0*deg2rad),RotX(90*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1a60d5c0a5b439a0c2413e94aa45db8cc1" kindref="member">Rotation::RotX</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1a60d5c0a5b439a0c2413e94aa45db8cc1" kindref="member">Rotation::RotX</ref>(90*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0,0));</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotX(0*deg2rad),RotX(180*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1a60d5c0a5b439a0c2413e94aa45db8cc1" kindref="member">Rotation::RotX</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1a60d5c0a5b439a0c2413e94aa45db8cc1" kindref="member">Rotation::RotX</ref>(180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>,0,0));</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotX(0*deg2rad),RotX(270*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1a60d5c0a5b439a0c2413e94aa45db8cc1" kindref="member">Rotation::RotX</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1a60d5c0a5b439a0c2413e94aa45db8cc1" kindref="member">Rotation::RotX</ref>(270*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(-<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0,0));</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotX(0*deg2rad),RotX(360*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1a60d5c0a5b439a0c2413e94aa45db8cc1" kindref="member">Rotation::RotX</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1a60d5c0a5b439a0c2413e94aa45db8cc1" kindref="member">Rotation::RotX</ref>(360*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,0));<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotX(0*deg2rad),RotX(-360*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1a60d5c0a5b439a0c2413e94aa45db8cc1" kindref="member">Rotation::RotX</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1a60d5c0a5b439a0c2413e94aa45db8cc1" kindref="member">Rotation::RotX</ref>(-360*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,0));<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotX(0*deg2rad),RotX(-270*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1a60d5c0a5b439a0c2413e94aa45db8cc1" kindref="member">Rotation::RotX</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1a60d5c0a5b439a0c2413e94aa45db8cc1" kindref="member">Rotation::RotX</ref>(-270*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0,0));</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotX(0*deg2rad),RotX(-180*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1a60d5c0a5b439a0c2413e94aa45db8cc1" kindref="member">Rotation::RotX</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1a60d5c0a5b439a0c2413e94aa45db8cc1" kindref="member">Rotation::RotX</ref>(-180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>,0,0));</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotX(0*deg2rad),RotX(-90*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1a60d5c0a5b439a0c2413e94aa45db8cc1" kindref="member">Rotation::RotX</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1a60d5c0a5b439a0c2413e94aa45db8cc1" kindref="member">Rotation::RotX</ref>(-90*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(-<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0,0));</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotX(0*deg2rad),RotX(-0*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1a60d5c0a5b439a0c2413e94aa45db8cc1" kindref="member">Rotation::RotX</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1a60d5c0a5b439a0c2413e94aa45db8cc1" kindref="member">Rotation::RotX</ref>(-0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,0));<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotY(0*deg2rad),RotY(0*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1ac37c940f7c95f8e2ee84c5f66e7b648e" kindref="member">Rotation::RotY</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1ac37c940f7c95f8e2ee84c5f66e7b648e" kindref="member">Rotation::RotY</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,0));<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotY(0*deg2rad),RotY(90*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1ac37c940f7c95f8e2ee84c5f66e7b648e" kindref="member">Rotation::RotY</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1ac37c940f7c95f8e2ee84c5f66e7b648e" kindref="member">Rotation::RotY</ref>(90*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0));</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotY(0*deg2rad),RotY(180*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1ac37c940f7c95f8e2ee84c5f66e7b648e" kindref="member">Rotation::RotY</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1ac37c940f7c95f8e2ee84c5f66e7b648e" kindref="member">Rotation::RotY</ref>(180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>,0));</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotY(0*deg2rad),RotY(270*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1ac37c940f7c95f8e2ee84c5f66e7b648e" kindref="member">Rotation::RotY</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1ac37c940f7c95f8e2ee84c5f66e7b648e" kindref="member">Rotation::RotY</ref>(270*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,-<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0));</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotY(0*deg2rad),RotY(360*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1ac37c940f7c95f8e2ee84c5f66e7b648e" kindref="member">Rotation::RotY</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1ac37c940f7c95f8e2ee84c5f66e7b648e" kindref="member">Rotation::RotY</ref>(360*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,0));<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotY(0*deg2rad),RotY(-360*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1ac37c940f7c95f8e2ee84c5f66e7b648e" kindref="member">Rotation::RotY</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1ac37c940f7c95f8e2ee84c5f66e7b648e" kindref="member">Rotation::RotY</ref>(-360*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,0));<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotY(0*deg2rad),RotY(-270*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1ac37c940f7c95f8e2ee84c5f66e7b648e" kindref="member">Rotation::RotY</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1ac37c940f7c95f8e2ee84c5f66e7b648e" kindref="member">Rotation::RotY</ref>(-270*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0));</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotY(0*deg2rad),RotY(-180*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1ac37c940f7c95f8e2ee84c5f66e7b648e" kindref="member">Rotation::RotY</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1ac37c940f7c95f8e2ee84c5f66e7b648e" kindref="member">Rotation::RotY</ref>(-180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>,0));</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotY(0*deg2rad),RotY(-90*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1ac37c940f7c95f8e2ee84c5f66e7b648e" kindref="member">Rotation::RotY</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1ac37c940f7c95f8e2ee84c5f66e7b648e" kindref="member">Rotation::RotY</ref>(-90*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,-<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0));</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotY(0*deg2rad),RotY(-0*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1ac37c940f7c95f8e2ee84c5f66e7b648e" kindref="member">Rotation::RotY</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1ac37c940f7c95f8e2ee84c5f66e7b648e" kindref="member">Rotation::RotY</ref>(-0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,0));<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotZ(0*deg2rad),RotZ(0*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1aeaa7d2485bb79c3a5be0046eed71c9ce" kindref="member">Rotation::RotZ</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1aeaa7d2485bb79c3a5be0046eed71c9ce" kindref="member">Rotation::RotZ</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,0));<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotZ(0*deg2rad),RotZ(90*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1aeaa7d2485bb79c3a5be0046eed71c9ce" kindref="member">Rotation::RotZ</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1aeaa7d2485bb79c3a5be0046eed71c9ce" kindref="member">Rotation::RotZ</ref>(90*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>));</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotZ(0*deg2rad),RotZ(180*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1aeaa7d2485bb79c3a5be0046eed71c9ce" kindref="member">Rotation::RotZ</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1aeaa7d2485bb79c3a5be0046eed71c9ce" kindref="member">Rotation::RotZ</ref>(180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>));</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotZ(0*deg2rad),RotZ(270*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1aeaa7d2485bb79c3a5be0046eed71c9ce" kindref="member">Rotation::RotZ</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1aeaa7d2485bb79c3a5be0046eed71c9ce" kindref="member">Rotation::RotZ</ref>(270*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,-<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>));</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotZ(0*deg2rad),RotZ(360*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1aeaa7d2485bb79c3a5be0046eed71c9ce" kindref="member">Rotation::RotZ</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1aeaa7d2485bb79c3a5be0046eed71c9ce" kindref="member">Rotation::RotZ</ref>(360*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,0));<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotZ(0*deg2rad),RotZ(-360*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1aeaa7d2485bb79c3a5be0046eed71c9ce" kindref="member">Rotation::RotZ</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1aeaa7d2485bb79c3a5be0046eed71c9ce" kindref="member">Rotation::RotZ</ref>(-360*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,0));<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotZ(0*deg2rad),RotZ(-270*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1aeaa7d2485bb79c3a5be0046eed71c9ce" kindref="member">Rotation::RotZ</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1aeaa7d2485bb79c3a5be0046eed71c9ce" kindref="member">Rotation::RotZ</ref>(-270*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>));</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotZ(0*deg2rad),RotZ(-180*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1aeaa7d2485bb79c3a5be0046eed71c9ce" kindref="member">Rotation::RotZ</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1aeaa7d2485bb79c3a5be0046eed71c9ce" kindref="member">Rotation::RotZ</ref>(-180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>));</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotZ(0*deg2rad),RotZ(-90*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1aeaa7d2485bb79c3a5be0046eed71c9ce" kindref="member">Rotation::RotZ</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1aeaa7d2485bb79c3a5be0046eed71c9ce" kindref="member">Rotation::RotZ</ref>(-90*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,-<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>));</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotZ(0*deg2rad),RotZ(-0*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1aeaa7d2485bb79c3a5be0046eed71c9ce" kindref="member">Rotation::RotZ</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1aeaa7d2485bb79c3a5be0046eed71c9ce" kindref="member">Rotation::RotZ</ref>(-0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,0));<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotX(0*deg2rad),RotZ(90*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1a60d5c0a5b439a0c2413e94aa45db8cc1" kindref="member">Rotation::RotX</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1aeaa7d2485bb79c3a5be0046eed71c9ce" kindref="member">Rotation::RotZ</ref>(90*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>));</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotX(0*deg2rad),RotY(90*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1a60d5c0a5b439a0c2413e94aa45db8cc1" kindref="member">Rotation::RotX</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1ac37c940f7c95f8e2ee84c5f66e7b648e" kindref="member">Rotation::RotY</ref>(90*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0));</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(RotY(0*deg2rad),RotZ(90*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1ac37c940f7c95f8e2ee84c5f66e7b648e" kindref="member">Rotation::RotY</ref>(0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Rotation_1aeaa7d2485bb79c3a5be0046eed71c9ce" kindref="member">Rotation::RotZ</ref>(90*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>));</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(Identity(),RotX(90*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1a5a5d40d8e6cf179cac35bc378c83017c" kindref="member">Rotation::Identity</ref>(),<sp/><ref refid="classKDL_1_1Rotation_1a60d5c0a5b439a0c2413e94aa45db8cc1" kindref="member">Rotation::RotX</ref>(90*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0,0));</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(Identity(),RotY(0*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1a5a5d40d8e6cf179cac35bc378c83017c" kindref="member">Rotation::Identity</ref>(),<sp/><ref refid="classKDL_1_1Rotation_1ac37c940f7c95f8e2ee84c5f66e7b648e" kindref="member">Rotation::RotY</ref>(90*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>,0));</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(Identity(),RotZ(0*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1a5a5d40d8e6cf179cac35bc378c83017c" kindref="member">Rotation::Identity</ref>(),<sp/><ref refid="classKDL_1_1Rotation_1aeaa7d2485bb79c3a5be0046eed71c9ce" kindref="member">Rotation::RotZ</ref>(90*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,<ref refid="namespaceKDL_1ade3c77f3bc3e28d8cb67aa59162599cf" kindref="member">PI_2</ref>));</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(Rotation::RPY(+0*deg2rad,0,-90*deg2rad),Rotation::RPY(-0*deg2rad,0,+90*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1afbe17f3c9249078626fba1736aed8d31" kindref="member">Rotation::RPY</ref>(+0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,0,-90*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1afbe17f3c9249078626fba1736aed8d31" kindref="member">Rotation::RPY</ref>(-0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,0,+90*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,<ref refid="namespaceKDL_1a8deb2bd8c8926513a18283b4af0de0fd" kindref="member">PI</ref>));</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(Rotation::RPY(+5*deg2rad,0,-0*deg2rad),Rotation::RPY(-5*deg2rad,0,+0*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1afbe17f3c9249078626fba1736aed8d31" kindref="member">Rotation::RPY</ref>(+5*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,0,-0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation_1afbe17f3c9249078626fba1736aed8d31" kindref="member">Rotation::RPY</ref>(-5*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,0,+0*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(-10*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,0,0));</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation" kindref="compound">KDL::Rotation</ref><sp/>R1<sp/>=<sp/><ref refid="classKDL_1_1Rotation_1afbe17f3c9249078626fba1736aed8d31" kindref="member">Rotation::RPY</ref>(+5*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,0,-90*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>TestOneRotationDiff(</highlight><highlight class="stringliteral">&quot;diff(Rotation::RPY(+5*deg2rad,0,-90*deg2rad),Rotation::RPY(-5*deg2rad,0,+90*deg2rad))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R1,<sp/><ref refid="classKDL_1_1Rotation_1afbe17f3c9249078626fba1736aed8d31" kindref="member">Rotation::RPY</ref>(-5*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,0,+90*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R1*<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,<sp/>0,<sp/>180*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>));</highlight></codeline>
<codeline lineno="626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628" refid="classFramesTest_1ab230d71edae7c2f4e8311e0d9f4ea7e2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classFramesTest_1ab230d71edae7c2f4e8311e0d9f4ea7e2" kindref="member">FramesTest::TestFrame</ref>()<sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref><sp/><sp/><sp/>v(3,4,5);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Wrench" kindref="compound">Wrench</ref><sp/><sp/><sp/>w(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(7,-1,3),<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(2,-3,3))<sp/>;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref><sp/><sp/><sp/><sp/>t(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(6,3,5),<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(4,-2,7))<sp/>;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref><sp/>R<sp/>;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref><sp/>F;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref><sp/>F2<sp/>;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>F<sp/>=<sp/><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref>(<ref refid="classKDL_1_1Rotation_1a39de86d0df854dda05aa9d8516b8e119" kindref="member">Rotation::EulerZYX</ref>(10*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,20*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>,-10*<ref refid="namespaceKDL_1a13e35fb20991715e2e62f926f50d32ef" kindref="member">deg2rad</ref>),<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(4,-2,1));</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>F2=F<sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(F,F2);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<ref refid="cpp/utility/hash" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::hash&lt;Frame&gt;</ref>{}(F),<sp/><ref refid="cpp/utility/hash" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::hash&lt;Frame&gt;</ref>{}(F2));</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(F.<ref refid="classKDL_1_1Frame_1ac508fa4e7c59527f8f377a3c6c225d12" kindref="member">Inverse</ref>(F*v),v);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(F.<ref refid="classKDL_1_1Frame_1ac508fa4e7c59527f8f377a3c6c225d12" kindref="member">Inverse</ref>(F*t),t);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(F.<ref refid="classKDL_1_1Frame_1ac508fa4e7c59527f8f377a3c6c225d12" kindref="member">Inverse</ref>(F*w),w);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(F*F.<ref refid="classKDL_1_1Frame_1ac508fa4e7c59527f8f377a3c6c225d12" kindref="member">Inverse</ref>(v),v);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(F*F.<ref refid="classKDL_1_1Frame_1ac508fa4e7c59527f8f377a3c6c225d12" kindref="member">Inverse</ref>(t),t);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(F*F.<ref refid="classKDL_1_1Frame_1ac508fa4e7c59527f8f377a3c6c225d12" kindref="member">Inverse</ref>(w),w);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(F*<ref refid="classKDL_1_1Frame_1a21cc8438f71b522154d2ef4cd6933d69" kindref="member">Frame::Identity</ref>(),F);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<ref refid="classKDL_1_1Frame_1a21cc8438f71b522154d2ef4cd6933d69" kindref="member">Frame::Identity</ref>()*F,F);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(F*(F*(F*v)),(F*F*F)*v);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(F*(F*(F*t)),(F*F*F)*t);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(F*(F*(F*w)),(F*F*F)*w);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(F*F.Inverse(),<ref refid="classKDL_1_1Frame_1a21cc8438f71b522154d2ef4cd6933d69" kindref="member">Frame::Identity</ref>());</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(F.Inverse()*F,<ref refid="classKDL_1_1Frame_1a21cc8438f71b522154d2ef4cd6933d69" kindref="member">Frame::Identity</ref>());</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(F.Inverse()*v,F.Inverse(v));</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Denavit-Hartenberg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref><sp/>F_DH<sp/>=<sp/><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref>(<ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref>(1,<sp/>0,<sp/>0,</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>-1,</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>1,<sp/>0),</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,<sp/>0,<sp/>0.36));</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT(<ref refid="namespaceKDL_1afbaac359311f16d1bbd3ea75c4ea7463" kindref="member">Equal</ref>(<ref refid="classKDL_1_1Frame_1a80ee82a53ab3ceb0aa79b7b5892a14eb" kindref="member">Frame::DH</ref>(0.0,<sp/>M_PI_2,<sp/>0.36,<sp/>0.0),<sp/>F_DH));</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT(<ref refid="namespaceKDL_1afbaac359311f16d1bbd3ea75c4ea7463" kindref="member">Equal</ref>(<ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref>().DH(0.0,<sp/>M_PI_2,<sp/>0.36,<sp/>0.0),<sp/>F_DH));<sp/></highlight><highlight class="comment">//<sp/>Only<sp/>for<sp/>testing<sp/>purposes,<sp/>shouldn&apos;t<sp/>use<sp/>static<sp/>function<sp/>of<sp/>instances</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref><sp/>F_DH_Craig1989<sp/>=<sp/><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref>(<ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref>(1,<sp/>0,<sp/>0,</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>-1,</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>1,<sp/>0),</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,<sp/>-0.36,<sp/>0));</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT(<ref refid="namespaceKDL_1afbaac359311f16d1bbd3ea75c4ea7463" kindref="member">Equal</ref>(<ref refid="classKDL_1_1Frame_1a0185c3081fd5459ae0a6081bf6fd5474" kindref="member">Frame::DH_Craig1989</ref>(0.0,<sp/>M_PI_2,<sp/>0.36,<sp/>0.0),<sp/>F_DH_Craig1989));</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT(<ref refid="namespaceKDL_1afbaac359311f16d1bbd3ea75c4ea7463" kindref="member">Equal</ref>(<ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref>().DH_Craig1989(0.0,<sp/>M_PI_2,<sp/>0.36,<sp/>0.0),<sp/>F_DH_Craig1989));<sp/></highlight><highlight class="comment">//<sp/>Only<sp/>for<sp/>testing<sp/>purposes,<sp/>shouldn&apos;t<sp/>use<sp/>static<sp/>function<sp/>of<sp/>instances</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<ref refid="cpp/utility/hash" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::hash&lt;Frame&gt;</ref>{}(F),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(6112004106257185417u));</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<ref refid="cpp/utility/hash" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::hash&lt;Frame&gt;</ref>{}(<ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref>()),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(8387572672274540708u));</highlight></codeline>
<codeline lineno="671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673" refid="framestest_8cpp_1a8031ae12733db0bc6d4c60426b5baa09" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/><ref refid="framestest_8cpp_1a8031ae12733db0bc6d4c60426b5baa09" kindref="member">CreateRandomJntArray</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="674"><highlight class="normal">{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>j(size);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i&lt;size;<sp/>++i)</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceKDL_1a910caae27c05e168ff9e13c1e1646319" kindref="member">random</ref>(j(i));</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681" refid="classFramesTest_1a29fb5d2e31d115c518e0518c140d77c3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classFramesTest_1a29fb5d2e31d115c518e0518c140d77c3" kindref="member">FramesTest::TestJntArray</ref>()</highlight></codeline>
<codeline lineno="682"><highlight class="normal">{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>random1<sp/>=<sp/><ref refid="framestest_8cpp_1a8031ae12733db0bc6d4c60426b5baa09" kindref="member">CreateRandomJntArray</ref>(4);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>random1_copy(random1);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT(<ref refid="namespaceKDL_1afbaac359311f16d1bbd3ea75c4ea7463" kindref="member">Equal</ref>(random1_copy,random1));</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>zero_set_to_zero(4);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceKDL_1aa2015ef4bf3ebb5f6defaf8bc1cf5184" kindref="member">SetToZero</ref>(zero_set_to_zero);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT(!<ref refid="namespaceKDL_1afbaac359311f16d1bbd3ea75c4ea7463" kindref="member">Equal</ref>(random1,zero_set_to_zero));</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>zero(4);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT(<ref refid="namespaceKDL_1afbaac359311f16d1bbd3ea75c4ea7463" kindref="member">Equal</ref>(zero_set_to_zero,zero));</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>almost_zero<sp/>=<sp/><ref refid="framestest_8cpp_1a8031ae12733db0bc6d4c60426b5baa09" kindref="member">CreateRandomJntArray</ref>(4);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>almost_zero(0)<sp/>=<sp/>almost_zero(0)*1e-7;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>almost_zero(1)<sp/>=<sp/>almost_zero(1)*1e-7;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>almost_zero(2)<sp/>=<sp/>almost_zero(2)*1e-7;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>almost_zero(3)<sp/>=<sp/>almost_zero(3)*1e-7;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>should<sp/>obviously<sp/>be<sp/>equal,<sp/>but<sp/>fails<sp/>in<sp/>old<sp/>buggy<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT(<ref refid="namespaceKDL_1afbaac359311f16d1bbd3ea75c4ea7463" kindref="member">Equal</ref>(almost_zero,zero,1));</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT(<ref refid="namespaceKDL_1afbaac359311f16d1bbd3ea75c4ea7463" kindref="member">Equal</ref>(almost_zero,zero,1e-6));</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT(!<ref refid="namespaceKDL_1afbaac359311f16d1bbd3ea75c4ea7463" kindref="member">Equal</ref>(almost_zero,zero,1e-8));</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>sum_random_zero(4);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceKDL_1a3247ff837ae01a286d6f267f3611bd78" kindref="member">Add</ref>(random1,zero_set_to_zero,sum_random_zero);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT(<ref refid="namespaceKDL_1afbaac359311f16d1bbd3ea75c4ea7463" kindref="member">Equal</ref>(random1,sum_random_zero));</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>add_subtract(4);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>random2<sp/>=<sp/><ref refid="framestest_8cpp_1a8031ae12733db0bc6d4c60426b5baa09" kindref="member">CreateRandomJntArray</ref>(4);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceKDL_1a3247ff837ae01a286d6f267f3611bd78" kindref="member">Add</ref>(random1,random2,add_subtract);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceKDL_1ac44746c206c669411831b6caff88e421" kindref="member">Subtract</ref>(add_subtract,random2,add_subtract);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT(<ref refid="namespaceKDL_1afbaac359311f16d1bbd3ea75c4ea7463" kindref="member">Equal</ref>(random1,add_subtract));</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>random_multiply_by_2(4);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>sum_random_same_random(4);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceKDL_1a65d854aa88f96a677c66b50bc06b54bd" kindref="member">Multiply</ref>(random1,2,random_multiply_by_2);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceKDL_1a3247ff837ae01a286d6f267f3611bd78" kindref="member">Add</ref>(random1,random1,sum_random_same_random);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT(<ref refid="namespaceKDL_1afbaac359311f16d1bbd3ea75c4ea7463" kindref="member">Equal</ref>(sum_random_same_random,random_multiply_by_2));</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceKDL_1a910caae27c05e168ff9e13c1e1646319" kindref="member">random</ref>(a);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>random_multiply_devide(4);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceKDL_1a65d854aa88f96a677c66b50bc06b54bd" kindref="member">Multiply</ref>(random1,a,random_multiply_devide);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceKDL_1a58ae4682bfa96df290a84bc8764db2f3" kindref="member">Divide</ref>(random_multiply_devide,a,random_multiply_devide);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT(<ref refid="namespaceKDL_1afbaac359311f16d1bbd3ea75c4ea7463" kindref="member">Equal</ref>(random_multiply_devide,random1));</highlight></codeline>
<codeline lineno="730"><highlight class="normal">}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="733" refid="classFramesTest_1aa4b53330c3183d118fbcd7156426125d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classFramesTest_1aa4b53330c3183d118fbcd7156426125d" kindref="member">FramesTest::TestJntArrayWhenEmpty</ref>()</highlight></codeline>
<codeline lineno="734"><highlight class="normal">{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>a1;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>a2;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>a3(a2);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>won&apos;t<sp/>assert()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)0,a1.<ref refid="classKDL_1_1JntArray_1a3176b3c2ebbeeca6e45a3e8d4d692e5b" kindref="member">rows</ref>());</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT(<ref refid="namespaceKDL_1afbaac359311f16d1bbd3ea75c4ea7463" kindref="member">Equal</ref>(a2,a1));</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>a2<sp/>=<sp/>a1;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT(<ref refid="namespaceKDL_1afbaac359311f16d1bbd3ea75c4ea7463" kindref="member">Equal</ref>(a2,a1));</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceKDL_1aa2015ef4bf3ebb5f6defaf8bc1cf5184" kindref="member">SetToZero</ref>(a2);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT(<ref refid="namespaceKDL_1afbaac359311f16d1bbd3ea75c4ea7463" kindref="member">Equal</ref>(a2,a1));</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceKDL_1a3247ff837ae01a286d6f267f3611bd78" kindref="member">Add</ref>(a1,a2,a3);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT(<ref refid="namespaceKDL_1afbaac359311f16d1bbd3ea75c4ea7463" kindref="member">Equal</ref>(a1,a3));</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceKDL_1ac44746c206c669411831b6caff88e421" kindref="member">Subtract</ref>(a1,a2,a3);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT(<ref refid="namespaceKDL_1afbaac359311f16d1bbd3ea75c4ea7463" kindref="member">Equal</ref>(a1,a3));</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceKDL_1a65d854aa88f96a677c66b50bc06b54bd" kindref="member">Multiply</ref>(a1,3.1,a3);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT(<ref refid="namespaceKDL_1afbaac359311f16d1bbd3ea75c4ea7463" kindref="member">Equal</ref>(a1,a3));</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceKDL_1a58ae4682bfa96df290a84bc8764db2f3" kindref="member">Divide</ref>(a1,3.1,a3);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT(<ref refid="namespaceKDL_1afbaac359311f16d1bbd3ea75c4ea7463" kindref="member">Equal</ref>(a1,a3));</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MultiplyJacobian()<sp/>-<sp/>not<sp/>tested<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>will<sp/>assert()<sp/>-<sp/>not<sp/>tested<sp/>here</highlight></codeline>
<codeline lineno="765"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>j1<sp/>=<sp/>a1(0);</highlight></codeline>
<codeline lineno="766"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>now<sp/>resize,<sp/>and<sp/>do<sp/>just<sp/>a<sp/>few<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>a1.<ref refid="classKDL_1_1JntArray_1a4ea82246fd0aa8badff28deb24c2e629" kindref="member">resize</ref>(3);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>a2.<ref refid="classKDL_1_1JntArray_1a4ea82246fd0aa8badff28deb24c2e629" kindref="member">resize</ref>(3);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)3,a1.<ref refid="classKDL_1_1JntArray_1a3176b3c2ebbeeca6e45a3e8d4d692e5b" kindref="member">rows</ref>());</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT(<ref refid="namespaceKDL_1afbaac359311f16d1bbd3ea75c4ea7463" kindref="member">Equal</ref>(a2,a1));</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceKDL_1a910caae27c05e168ff9e13c1e1646319" kindref="member">random</ref>(a1(0));</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceKDL_1a910caae27c05e168ff9e13c1e1646319" kindref="member">random</ref>(a1(1));</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceKDL_1a910caae27c05e168ff9e13c1e1646319" kindref="member">random</ref>(a1(2));</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>a1<sp/>=<sp/>a2;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT(<ref refid="namespaceKDL_1afbaac359311f16d1bbd3ea75c4ea7463" kindref="member">Equal</ref>(a1,a2));</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(a1(1),a2(1));</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>a3.<ref refid="classKDL_1_1JntArray_1a4ea82246fd0aa8badff28deb24c2e629" kindref="member">resize</ref>(3);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceKDL_1ac44746c206c669411831b6caff88e421" kindref="member">Subtract</ref>(a1,a2,a3);<sp/></highlight><highlight class="comment">//<sp/>a3<sp/>=<sp/>a2<sp/>-<sp/>a1<sp/>=<sp/>{0}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceKDL_1aa2015ef4bf3ebb5f6defaf8bc1cf5184" kindref="member">SetToZero</ref>(a1);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT(<ref refid="namespaceKDL_1afbaac359311f16d1bbd3ea75c4ea7463" kindref="member">Equal</ref>(a1,a3));</highlight></codeline>
<codeline lineno="785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tests/framestest.cpp"/>
  </compounddef>
</doxygen>
