<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classKDL_1_1Path__Circle" kind="class" language="C++" prot="public">
    <compoundname>KDL::Path_Circle</compoundname>
    <basecompoundref refid="classKDL_1_1Path" prot="public" virt="non-virtual">KDL::Path</basecompoundref>
    <includes refid="path__circle_8hpp" local="no">path_circle.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classKDL_1_1Path__Circle_1a1873c3889b106676fe8d90802d8df096" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KDL::Path_Circle::aggregate</definition>
        <argsstring></argsstring>
        <name>aggregate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_circle.hpp" line="156" column="6" bodyfile="src/path_circle.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Path__Circle_1a54fe75952f21dc4d63d43bd22a64c239" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double KDL::Path_Circle::eqradius</definition>
        <argsstring></argsstring>
        <name>eqradius</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_circle.hpp" line="149" column="8" bodyfile="src/path_circle.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Path__Circle_1a7d8959c4fcfff7447e4b7d3579db1986" prot="private" static="no" mutable="no">
        <type><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref></type>
        <definition>Frame KDL::Path_Circle::F_base_center</definition>
        <argsstring></argsstring>
        <name>F_base_center</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_circle.hpp" line="146" column="8" bodyfile="src/path_circle.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Path__Circle_1a28ab38824d05ec0dce4e788c202bb721" prot="private" static="no" mutable="no">
        <type><ref refid="classKDL_1_1RotationalInterpolation" kindref="compound">RotationalInterpolation</ref> *</type>
        <definition>RotationalInterpolation* KDL::Path_Circle::orient</definition>
        <argsstring></argsstring>
        <name>orient</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_circle.hpp" line="142" column="25" bodyfile="src/path_circle.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Path__Circle_1ac800c1849eadc199c507fee8c95ce135" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double KDL::Path_Circle::pathlength</definition>
        <argsstring></argsstring>
        <name>pathlength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_circle.hpp" line="152" column="8" bodyfile="src/path_circle.hpp" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Path__Circle_1a5c20ed64d1a038dda98293837745d22f" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double KDL::Path_Circle::radius</definition>
        <argsstring></argsstring>
        <name>radius</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_circle.hpp" line="145" column="8" bodyfile="src/path_circle.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Path__Circle_1aec8e7b778de7f8768618b7527a4957f0" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double KDL::Path_Circle::scalelin</definition>
        <argsstring></argsstring>
        <name>scalelin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_circle.hpp" line="153" column="8" bodyfile="src/path_circle.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Path__Circle_1acc8c849025f0ef75083eb98c1d360725" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double KDL::Path_Circle::scalerot</definition>
        <argsstring></argsstring>
        <name>scalerot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_circle.hpp" line="154" column="8" bodyfile="src/path_circle.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classKDL_1_1Path__Circle_1a518a52ffff1e348bf6d63751b583538c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref></type>
        <definition>Twist KDL::Path_Circle::Acc</definition>
        <argsstring>(double s, double sd, double sdd) const</argsstring>
        <name>Acc</name>
        <reimplements refid="classKDL_1_1Path_1a274dd481c1ab921f898cddb618e7e42b">Acc</reimplements>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sd</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sdd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the acceleration twist at path length s and with derivative of s == sd, and 2nd derivative of s == sdd </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_circle.hpp" line="178" column="15" bodyfile="src/path_circle.cpp" bodystart="163" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Circle_1aecea40890bda02ff12af808b00ea6f83" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classKDL_1_1Path" kindref="compound">Path</ref> *</type>
        <definition>Path * KDL::Path_Circle::Clone</definition>
        <argsstring>()</argsstring>
        <name>Clone</name>
        <reimplements refid="classKDL_1_1Path_1a06926be0592bbe853ee9d040a4e420d3">Clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Virtual constructor, constructing by copying, Returns a deep copy of this <ref refid="classKDL_1_1Path" kindref="compound">Path</ref> Object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_circle.hpp" line="179" column="14" bodyfile="src/path_circle.cpp" bodystart="178" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Circle_1abc318bc561a6fc96d589f2ee54f46c73" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09" kindref="member">IdentifierType</ref></type>
        <definition>virtual IdentifierType KDL::Path_Circle::getIdentifier</definition>
        <argsstring>() const</argsstring>
        <name>getIdentifier</name>
        <reimplements refid="classKDL_1_1Path_1aa28b0993963870a6c754b19e5cd06fec">getIdentifier</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets an identifier indicating the type of this <ref refid="classKDL_1_1Path" kindref="compound">Path</ref> object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_circle.hpp" line="185" column="24" bodyfile="src/path_circle.hpp" bodystart="185" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Circle_1a9ee876743434ad8c232dc693f237d60d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double KDL::Path_Circle::LengthToS</definition>
        <argsstring>(double length)</argsstring>
        <name>LengthToS</name>
        <reimplements refid="group__Motion_1gad7f55a1d6f7a076b0959c76c29cc323d">LengthToS</reimplements>
        <param>
          <type>double</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classKDL_1_1Path__Circle_1a9ee876743434ad8c232dc693f237d60d" kindref="member">LengthToS()</ref> converts a physical length along the trajectory to the parameter s used in Pos, Vel and Acc. This is used because in cases with large rotations the parameter s does NOT correspond to the lineair length along the trajectory. User should be sure that the lineair distance travelled by this path object is NOT zero, when using this method ! (e.g. the case of only rotational change) throws <ref refid="classKDL_1_1Error__MotionPlanning__Not__Applicable" kindref="compound">Error_MotionPlanning_Not_Applicable</ref> if used on composed path objects. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_circle.hpp" line="173" column="8" bodyfile="src/path_circle.cpp" bodystart="138" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Circle_1a2ea743324c49ce71ce07b8add71590ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KDL::Path_Circle::Path_Circle</definition>
        <argsstring>(const Frame &amp;F_base_start, const Vector &amp;V_base_center, const Vector &amp;V_base_p, const Rotation &amp;R_base_end, double alpha, RotationalInterpolation *otraj, double eqradius, bool _aggregate=true)</argsstring>
        <name>Path_Circle</name>
        <param>
          <type>const <ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref> &amp;</type>
          <declname>F_base_start</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>V_base_center</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>V_base_p</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref> &amp;</type>
          <declname>R_base_end</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type><ref refid="classKDL_1_1RotationalInterpolation" kindref="compound">RotationalInterpolation</ref> *</type>
          <declname>otraj</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eqradius</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>_aggregate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN THROW <ref refid="classKDL_1_1Error__MotionPlanning__Circle__ToSmall" kindref="compound">Error_MotionPlanning_Circle_ToSmall</ref> CAN THROW <ref refid="classKDL_1_1Error__MotionPlanning__Circle__No__Plane" kindref="compound">Error_MotionPlanning_Circle_No_Plane</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_circle.hpp" line="165" column="1" bodyfile="src/path_circle.cpp" bodystart="86" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Circle_1a33e50afc4d0d03475ee65d3ee9dfb4f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double KDL::Path_Circle::PathLength</definition>
        <argsstring>()</argsstring>
        <name>PathLength</name>
        <reimplements refid="classKDL_1_1Path_1a095d3ce8d48bd9f8953793c60532cd1a">PathLength</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the total path length of the trajectory (has dimension LENGTH) This is not always a physical length , ie when dealing with rotations that are dominant. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_circle.hpp" line="175" column="16" bodyfile="src/path_circle.cpp" bodystart="143" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Circle_1aea97235e3dcc3e4d1e8339de3dd3e445" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref></type>
        <definition>Frame KDL::Path_Circle::Pos</definition>
        <argsstring>(double s) const</argsstring>
        <name>Pos</name>
        <reimplements refid="classKDL_1_1Path_1ab0121ec33eee9525bd3c883a1631bf6c">Pos</reimplements>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref> at the current path length s </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_circle.hpp" line="176" column="15" bodyfile="src/path_circle.cpp" bodystart="147" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Circle_1a6d12cf804729d6d88b9741d5ad0c30f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref></type>
        <definition>Twist KDL::Path_Circle::Vel</definition>
        <argsstring>(double s, double sd) const</argsstring>
        <name>Vel</name>
        <reimplements refid="classKDL_1_1Path_1a6982dc012ef4299cffc1be99ef225d98">Vel</reimplements>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the velocity twist at path length s theta and with derivative of s == sd </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_circle.hpp" line="177" column="15" bodyfile="src/path_circle.cpp" bodystart="155" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Circle_1a20176764e85bc180024b45ac336e37a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KDL::Path_Circle::Write</definition>
        <argsstring>(std::ostream &amp;os)</argsstring>
        <name>Write</name>
        <reimplements refid="classKDL_1_1Path_1a3c1c34464d34183fc965af1ea260879d">Write</reimplements>
        <param>
          <type><ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref> &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes one of the derived objects to the stream </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_circle.hpp" line="180" column="14" bodyfile="src/path_circle.cpp" bodystart="196" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Circle_1a7884241172d2a08d3fe97ffcf3e5b5f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>KDL::Path_Circle::~Path_Circle</definition>
        <argsstring>()</argsstring>
        <name>~Path_Circle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_circle.hpp" line="189" column="9" bodyfile="src/path_circle.cpp" bodystart="191" bodyend="194"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A circular <ref refid="classKDL_1_1Path" kindref="compound">Path</ref> with &apos;open ends&apos;. Path_Arc would have been a better name though. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KDL::Path_Circle</label>
        <link refid="classKDL_1_1Path__Circle"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KDL::Path</label>
        <link refid="classKDL_1_1Path"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>KDL::Rotation</label>
        <link refid="classKDL_1_1Rotation"/>
      </node>
      <node id="6">
        <label>KDL::RotationalInterpolation</label>
        <link refid="classKDL_1_1RotationalInterpolation"/>
      </node>
      <node id="1">
        <label>KDL::Path_Circle</label>
        <link refid="classKDL_1_1Path__Circle"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>F_base_center</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>orient</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>KDL::Path</label>
        <link refid="classKDL_1_1Path"/>
      </node>
      <node id="3">
        <label>KDL::Frame</label>
        <link refid="classKDL_1_1Frame"/>
        <childnode refid="4" relation="usage">
          <edgelabel>p</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>M</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>KDL::Vector</label>
        <link refid="classKDL_1_1Vector"/>
      </node>
    </collaborationgraph>
    <location file="src/path_circle.hpp" line="100" column="1" bodyfile="src/path_circle.hpp" bodystart="99" bodyend="151"/>
    <listofallmembers>
      <member refid="classKDL_1_1Path__Circle_1a518a52ffff1e348bf6d63751b583538c" prot="public" virt="virtual"><scope>KDL::Path_Circle</scope><name>Acc</name></member>
      <member refid="classKDL_1_1Path__Circle_1a1873c3889b106676fe8d90802d8df096" prot="private" virt="non-virtual"><scope>KDL::Path_Circle</scope><name>aggregate</name></member>
      <member refid="classKDL_1_1Path__Circle_1aecea40890bda02ff12af808b00ea6f83" prot="public" virt="virtual"><scope>KDL::Path_Circle</scope><name>Clone</name></member>
      <member refid="classKDL_1_1Path__Circle_1a54fe75952f21dc4d63d43bd22a64c239" prot="private" virt="non-virtual"><scope>KDL::Path_Circle</scope><name>eqradius</name></member>
      <member refid="classKDL_1_1Path__Circle_1a7d8959c4fcfff7447e4b7d3579db1986" prot="private" virt="non-virtual"><scope>KDL::Path_Circle</scope><name>F_base_center</name></member>
      <member refid="classKDL_1_1Path__Circle_1abc318bc561a6fc96d589f2ee54f46c73" prot="public" virt="virtual"><scope>KDL::Path_Circle</scope><name>getIdentifier</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09a0ce2e4f0f5a61c01cecafbe0084682cd" prot="public" virt="non-virtual"><scope>KDL::Path_Circle</scope><name>ID_CIRCLE</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09a0e63c4744e46f92e2599ca9fbf50f6a4" prot="public" virt="non-virtual"><scope>KDL::Path_Circle</scope><name>ID_COMPOSITE</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09ae0cd5b91c304ea865d3e2ffe642a47d8" prot="public" virt="non-virtual"><scope>KDL::Path_Circle</scope><name>ID_CYCLIC_CLOSED</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09a4f9ed1827474558375d8fdcc6fa22a8c" prot="public" virt="non-virtual"><scope>KDL::Path_Circle</scope><name>ID_LINE</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09ad0c76d25569cecb6d38bce3ec92cd8eb" prot="public" virt="non-virtual"><scope>KDL::Path_Circle</scope><name>ID_POINT</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09a6458e9e3355fb8ebdcd540ae753aadbd" prot="public" virt="non-virtual"><scope>KDL::Path_Circle</scope><name>ID_ROUNDED_COMPOSITE</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09" prot="public" virt="non-virtual"><scope>KDL::Path_Circle</scope><name>IdentifierType</name></member>
      <member refid="classKDL_1_1Path__Circle_1a9ee876743434ad8c232dc693f237d60d" prot="public" virt="virtual"><scope>KDL::Path_Circle</scope><name>LengthToS</name></member>
      <member refid="classKDL_1_1Path__Circle_1a28ab38824d05ec0dce4e788c202bb721" prot="private" virt="non-virtual"><scope>KDL::Path_Circle</scope><name>orient</name></member>
      <member refid="classKDL_1_1Path__Circle_1a2ea743324c49ce71ce07b8add71590ca" prot="public" virt="non-virtual"><scope>KDL::Path_Circle</scope><name>Path_Circle</name></member>
      <member refid="classKDL_1_1Path__Circle_1a33e50afc4d0d03475ee65d3ee9dfb4f7" prot="public" virt="virtual"><scope>KDL::Path_Circle</scope><name>PathLength</name></member>
      <member refid="classKDL_1_1Path__Circle_1ac800c1849eadc199c507fee8c95ce135" prot="private" virt="non-virtual"><scope>KDL::Path_Circle</scope><name>pathlength</name></member>
      <member refid="classKDL_1_1Path__Circle_1aea97235e3dcc3e4d1e8339de3dd3e445" prot="public" virt="virtual"><scope>KDL::Path_Circle</scope><name>Pos</name></member>
      <member refid="classKDL_1_1Path__Circle_1a5c20ed64d1a038dda98293837745d22f" prot="private" virt="non-virtual"><scope>KDL::Path_Circle</scope><name>radius</name></member>
      <member refid="classKDL_1_1Path_1a15dfd941258db019a5b30c666e51b358" prot="public" virt="non-virtual"><scope>KDL::Path_Circle</scope><name>Read</name></member>
      <member refid="classKDL_1_1Path__Circle_1aec8e7b778de7f8768618b7527a4957f0" prot="private" virt="non-virtual"><scope>KDL::Path_Circle</scope><name>scalelin</name></member>
      <member refid="classKDL_1_1Path__Circle_1acc8c849025f0ef75083eb98c1d360725" prot="private" virt="non-virtual"><scope>KDL::Path_Circle</scope><name>scalerot</name></member>
      <member refid="classKDL_1_1Path__Circle_1a6d12cf804729d6d88b9741d5ad0c30f8" prot="public" virt="virtual"><scope>KDL::Path_Circle</scope><name>Vel</name></member>
      <member refid="classKDL_1_1Path__Circle_1a20176764e85bc180024b45ac336e37a3" prot="public" virt="virtual"><scope>KDL::Path_Circle</scope><name>Write</name></member>
      <member refid="classKDL_1_1Path_1a10f16828c888527755e8a59c906b5a57" prot="public" virt="virtual"><scope>KDL::Path_Circle</scope><name>~Path</name></member>
      <member refid="classKDL_1_1Path__Circle_1a7884241172d2a08d3fe97ffcf3e5b5f3" prot="public" virt="virtual"><scope>KDL::Path_Circle</scope><name>~Path_Circle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
