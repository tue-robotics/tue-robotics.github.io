<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="treeinvdyntest_8cpp" kind="file" language="C++">
    <compoundname>treeinvdyntest.cpp</compoundname>
    <includes refid="treeinvdyntest_8hpp" local="yes">treeinvdyntest.hpp</includes>
    <includes refid="kinfam__io_8hpp" local="no">kinfam_io.hpp</includes>
    <includes refid="frames__io_8hpp" local="no">frames_io.hpp</includes>
    <includes refid="chainidsolver__recursive__newton__euler_8hpp" local="no">chainidsolver_recursive_newton_euler.hpp</includes>
    <includes refid="treeidsolver__recursive__newton__euler_8hpp" local="no">treeidsolver_recursive_newton_euler.hpp</includes>
    <includes local="no">time.h</includes>
    <includes local="no">cmath</includes>
    <incdepgraph>
      <node id="19">
        <label>exception</label>
        <link refid="cpp/header/exception" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="34">
        <label>chainidsolver_recursive_newton_euler.hpp</label>
        <link refid="chainidsolver__recursive__newton__euler_8hpp"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>functional</label>
        <link refid="cpp/header/functional" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="2">
        <label>treeinvdyntest.hpp</label>
        <link refid="treeinvdyntest_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>utilities/hash_combine.h</label>
        <link refid="hash__combine_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>chainidsolver.hpp</label>
        <link refid="chainidsolver_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>vector</label>
        <link refid="cpp/header/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="38">
        <label>treeidsolver.hpp</label>
        <link refid="treeidsolver_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>joint.hpp</label>
        <link refid="joint_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>cstdlib</label>
        <link refid="cpp/header/cstdlib" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="15">
        <label>rigidbodyinertia.hpp</label>
        <link refid="rigidbodyinertia_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>frames_io.hpp</label>
        <link refid="frames__io_8hpp"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>Eigen/Core</label>
      </node>
      <node id="25">
        <label>iostream</label>
        <link refid="cpp/header/iostream" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="26">
        <label>fstream</label>
        <link refid="cpp/header/fstream" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="1">
        <label>treeinvdyntest.cpp</label>
        <link refid="treeinvdyntest_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>frames.hpp</label>
        <link refid="frames_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>jacobian.hpp</label>
        <link refid="jacobian_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>treeidsolver_recursive_newton_euler.hpp</label>
        <link refid="treeidsolver__recursive__newton__euler_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>kinfam_io.hpp</label>
        <link refid="kinfam__io_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>map</label>
        <link refid="cpp/header/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="32">
        <label>utilities/utility_io.h</label>
        <link refid="utility__io_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>cassert</label>
        <link refid="cpp/header/cassert" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="8">
        <label>utilities/utility.h</label>
        <link refid="utility_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>iomanip</label>
        <link refid="cpp/header/iomanip" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="14">
        <label>frames.inl</label>
        <link refid="frames_8inl"/>
      </node>
      <node id="21">
        <label>tree.hpp</label>
        <link refid="tree_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>time.h</label>
      </node>
      <node id="5">
        <label>segment.hpp</label>
        <link refid="segment_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>jntarray.hpp</label>
        <link refid="jntarray_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>string</label>
        <link refid="cpp/header/string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="36">
        <label>solveri.hpp</label>
        <link refid="solveri_8hpp"/>
      </node>
      <node id="4">
        <label>chain.hpp</label>
        <link refid="chain_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>rotationalinertia.hpp</label>
        <link refid="rotationalinertia_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>jntspaceinertiamatrix.hpp</label>
        <link refid="jntspaceinertiamatrix_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cppunit/extensions/HelperMacros.h</label>
      </node>
      <node id="22">
        <label>config.h</label>
      </node>
      <node id="11">
        <label>cmath</label>
        <link refid="cpp/header/cmath" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="7">
        <label>utilities/kdl-config.h</label>
        <link refid="kdl-config_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="treeinvdyntest_8cpp_1a7d34e719a47566f6d3fd8bf184b3399b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CPPUNIT_TEST_SUITE_REGISTRATION</definition>
        <argsstring>(TreeInvDynTest)</argsstring>
        <name>CPPUNIT_TEST_SUITE_REGISTRATION</name>
        <param>
          <type><ref refid="classTreeInvDynTest" kindref="compound">TreeInvDynTest</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/treeinvdyntest.cpp" line="10" column="1" declfile="tests/treeinvdyntest.cpp" declline="10" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="treeinvdyntest_8hpp" kindref="compound">treeinvdyntest.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="kinfam__io_8hpp" kindref="compound">kinfam_io.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="frames__io_8hpp" kindref="compound">frames_io.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="chainidsolver__recursive__newton__euler_8hpp" kindref="compound">chainidsolver_recursive_newton_euler.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="treeidsolver__recursive__newton__euler_8hpp" kindref="compound">treeidsolver_recursive_newton_euler.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cpp/header/cmath" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">cmath</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><ref refid="treeinvdyntest_8cpp_1a7d34e719a47566f6d3fd8bf184b3399b" kindref="member">CPPUNIT_TEST_SUITE_REGISTRATION</ref>(<sp/><ref refid="classTreeInvDynTest" kindref="compound">TreeInvDynTest</ref><sp/>);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceKDL" kindref="compound">KDL</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="classTreeInvDynTest_1a2b681797024073c629575dae33417fb0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTreeInvDynTest_1a2b681797024073c629575dae33417fb0" kindref="member">TreeInvDynTest::setUp</ref>()</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>srand(<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)time(<sp/>NULL<sp/>));</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//spatial<sp/>inertia<sp/>(just<sp/>to<sp/>test<sp/>dynamics)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1RigidBodyInertia" kindref="compound">RigidBodyInertia</ref><sp/>inertia(0.3,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0.0,<sp/>0.1,<sp/>0.0),<sp/><ref refid="classKDL_1_1RotationalInertia" kindref="compound">RotationalInertia</ref>(0.005,<sp/>0.001,<sp/>0.001));</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//create<sp/>chain<sp/>#1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>chain1.addSegment(<ref refid="classKDL_1_1Segment" kindref="compound">Segment</ref>(</highlight><highlight class="stringliteral">&quot;Segment<sp/>11&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint" kindref="compound">Joint</ref>(</highlight><highlight class="stringliteral">&quot;Joint<sp/>11&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint_1ad05f78142c8b73c3977f038a7a2c544eac218b252dc3dbaa7468cb23634e2392f" kindref="member">Joint::RotZ</ref>),</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0.0,0.0,0.0)),<sp/>inertia));</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>chain1.addSegment(<ref refid="classKDL_1_1Segment" kindref="compound">Segment</ref>(</highlight><highlight class="stringliteral">&quot;Segment<sp/>12&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint" kindref="compound">Joint</ref>(</highlight><highlight class="stringliteral">&quot;Joint<sp/>12&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint_1ad05f78142c8b73c3977f038a7a2c544ea87b4021f0c0b1d9e8e21c7eb222a9f75" kindref="member">Joint::RotX</ref>),</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0.0,0.0,0.9)),<sp/>inertia));</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>chain1.addSegment(<ref refid="classKDL_1_1Segment" kindref="compound">Segment</ref>(</highlight><highlight class="stringliteral">&quot;Segment<sp/>13&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint" kindref="compound">Joint</ref>(</highlight><highlight class="stringliteral">&quot;Joint<sp/>13&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint_1ad05f78142c8b73c3977f038a7a2c544ea4c8d7947a02e72496641ea3bac5c7b84" kindref="member">Joint::None</ref>),</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(-0.4,0.0,0.0))));</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>chain1.addSegment(<ref refid="classKDL_1_1Segment" kindref="compound">Segment</ref>(</highlight><highlight class="stringliteral">&quot;Segment<sp/>14&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint" kindref="compound">Joint</ref>(</highlight><highlight class="stringliteral">&quot;Joint<sp/>14&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint_1ad05f78142c8b73c3977f038a7a2c544ea87b4021f0c0b1d9e8e21c7eb222a9f75" kindref="member">Joint::RotX</ref>),</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0.0,0.0,1.2)),<sp/>inertia));</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>chain1.addSegment(<ref refid="classKDL_1_1Segment" kindref="compound">Segment</ref>(</highlight><highlight class="stringliteral">&quot;Segment<sp/>15&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint" kindref="compound">Joint</ref>(</highlight><highlight class="stringliteral">&quot;Joint<sp/>15&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint_1ad05f78142c8b73c3977f038a7a2c544ea4c8d7947a02e72496641ea3bac5c7b84" kindref="member">Joint::None</ref>),</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0.4,0.0,0.0)),<sp/>inertia));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>chain1.addSegment(<ref refid="classKDL_1_1Segment" kindref="compound">Segment</ref>(</highlight><highlight class="stringliteral">&quot;Segment<sp/>16&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint" kindref="compound">Joint</ref>(</highlight><highlight class="stringliteral">&quot;Joint<sp/>16&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint_1ad05f78142c8b73c3977f038a7a2c544eac218b252dc3dbaa7468cb23634e2392f" kindref="member">Joint::RotZ</ref>),</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0.0,0.0,1.4)),<sp/>inertia));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>chain1.addSegment(<ref refid="classKDL_1_1Segment" kindref="compound">Segment</ref>(</highlight><highlight class="stringliteral">&quot;Segment<sp/>17&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint" kindref="compound">Joint</ref>(</highlight><highlight class="stringliteral">&quot;Joint<sp/>17&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint_1ad05f78142c8b73c3977f038a7a2c544ea87b4021f0c0b1d9e8e21c7eb222a9f75" kindref="member">Joint::RotX</ref>),</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0.0,0.0,0.0)),<sp/>inertia));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>chain1.addSegment(<ref refid="classKDL_1_1Segment" kindref="compound">Segment</ref>(</highlight><highlight class="stringliteral">&quot;Segment<sp/>18&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint" kindref="compound">Joint</ref>(</highlight><highlight class="stringliteral">&quot;Joint<sp/>18&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint_1ad05f78142c8b73c3977f038a7a2c544eac218b252dc3dbaa7468cb23634e2392f" kindref="member">Joint::RotZ</ref>),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0.0,0.0,0.4)),<sp/>inertia));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>chain1.addSegment(<ref refid="classKDL_1_1Segment" kindref="compound">Segment</ref>(</highlight><highlight class="stringliteral">&quot;Segment<sp/>19&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint" kindref="compound">Joint</ref>(</highlight><highlight class="stringliteral">&quot;Joint<sp/>19&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint_1ad05f78142c8b73c3977f038a7a2c544ea4c8d7947a02e72496641ea3bac5c7b84" kindref="member">Joint::None</ref>),</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0.0,0.0,0.0)),<sp/>inertia));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//create<sp/>chain<sp/>#2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>chain2.addSegment(<ref refid="classKDL_1_1Segment" kindref="compound">Segment</ref>(</highlight><highlight class="stringliteral">&quot;Segment<sp/>21&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint" kindref="compound">Joint</ref>(</highlight><highlight class="stringliteral">&quot;Joint<sp/>21&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint_1ad05f78142c8b73c3977f038a7a2c544eac218b252dc3dbaa7468cb23634e2392f" kindref="member">Joint::RotZ</ref>),</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0.0,0.0,0.5)),<sp/>inertia));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>chain2.addSegment(<ref refid="classKDL_1_1Segment" kindref="compound">Segment</ref>(</highlight><highlight class="stringliteral">&quot;Segment<sp/>22&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint" kindref="compound">Joint</ref>(</highlight><highlight class="stringliteral">&quot;Joint<sp/>22&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint_1ad05f78142c8b73c3977f038a7a2c544ea87b4021f0c0b1d9e8e21c7eb222a9f75" kindref="member">Joint::RotX</ref>),</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0.0,0.0,0.4)),<sp/>inertia));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>chain2.addSegment(<ref refid="classKDL_1_1Segment" kindref="compound">Segment</ref>(</highlight><highlight class="stringliteral">&quot;Segment<sp/>23&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint" kindref="compound">Joint</ref>(</highlight><highlight class="stringliteral">&quot;Joint<sp/>23&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint_1ad05f78142c8b73c3977f038a7a2c544ea87b4021f0c0b1d9e8e21c7eb222a9f75" kindref="member">Joint::RotX</ref>),</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0.0,0.0,0.3)),<sp/>inertia));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>chain2.addSegment(<ref refid="classKDL_1_1Segment" kindref="compound">Segment</ref>(</highlight><highlight class="stringliteral">&quot;Segment<sp/>24&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint" kindref="compound">Joint</ref>(</highlight><highlight class="stringliteral">&quot;Joint<sp/>24&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint_1ad05f78142c8b73c3977f038a7a2c544ea87b4021f0c0b1d9e8e21c7eb222a9f75" kindref="member">Joint::RotX</ref>),</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0.0,0.0,0.2)),<sp/>inertia));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>chain2.addSegment(<ref refid="classKDL_1_1Segment" kindref="compound">Segment</ref>(</highlight><highlight class="stringliteral">&quot;Segment<sp/>25&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint" kindref="compound">Joint</ref>(</highlight><highlight class="stringliteral">&quot;Joint<sp/>25&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint_1ad05f78142c8b73c3977f038a7a2c544eac218b252dc3dbaa7468cb23634e2392f" kindref="member">Joint::RotZ</ref>),</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0.0,0.0,0.1)),<sp/>inertia));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//create<sp/>tree<sp/>as<sp/>two<sp/>chains<sp/>attached<sp/>to<sp/>the<sp/>root</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>tree<sp/>=<sp/><ref refid="classKDL_1_1Tree" kindref="compound">Tree</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>tree.addChain(chain1,<sp/>tree.getRootSegment()-&gt;first);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>tree.addChain(chain2,<sp/>tree.getRootSegment()-&gt;first);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//create<sp/>a<sp/>simple<sp/>&quot;y-shaped&quot;<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>m=1.0,<sp/>Iz=0.05,<sp/>L=0.5;<sp/></highlight><highlight class="comment">//geometric<sp/>and<sp/>dynamic<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Segment" kindref="compound">Segment</ref><sp/>s1(</highlight><highlight class="stringliteral">&quot;S1&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint" kindref="compound">Joint</ref>(</highlight><highlight class="stringliteral">&quot;q1&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint_1ad05f78142c8b73c3977f038a7a2c544eac218b252dc3dbaa7468cb23634e2392f" kindref="member">Joint::RotZ</ref>),<sp/><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref>(),<sp/><ref refid="classKDL_1_1RigidBodyInertia" kindref="compound">RigidBodyInertia</ref>(m,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(L,0,0),<sp/><ref refid="classKDL_1_1RotationalInertia" kindref="compound">RotationalInertia</ref>(0,0,Iz)));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Segment" kindref="compound">Segment</ref><sp/>s2(</highlight><highlight class="stringliteral">&quot;S2&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint" kindref="compound">Joint</ref>(</highlight><highlight class="stringliteral">&quot;q2&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(L,0,0),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,1),<sp/><ref refid="classKDL_1_1Joint_1ad05f78142c8b73c3977f038a7a2c544eaad375ba3ac2b5a6864dbb7e246f3b242" kindref="member">Joint::RotAxis</ref>),<sp/><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(L,0,0)),<sp/><ref refid="classKDL_1_1RigidBodyInertia" kindref="compound">RigidBodyInertia</ref>(m,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(L/2,0,0),<sp/><ref refid="classKDL_1_1RotationalInertia" kindref="compound">RotationalInertia</ref>(0,0,Iz)));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Segment" kindref="compound">Segment</ref><sp/>s3(</highlight><highlight class="stringliteral">&quot;S3&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Joint" kindref="compound">Joint</ref>(</highlight><highlight class="stringliteral">&quot;q3&quot;</highlight><highlight class="normal">,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(2*L,0,0),<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,0,1),<sp/><ref refid="classKDL_1_1Joint_1ad05f78142c8b73c3977f038a7a2c544eaad375ba3ac2b5a6864dbb7e246f3b242" kindref="member">Joint::RotAxis</ref>),<sp/><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(2*L,0,0)),<sp/><ref refid="classKDL_1_1RigidBodyInertia" kindref="compound">RigidBodyInertia</ref>(m,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(L/2,0,0),<sp/><ref refid="classKDL_1_1RotationalInertia" kindref="compound">RotationalInertia</ref>(0,0,Iz)));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>ytree<sp/>=<sp/><ref refid="classKDL_1_1Tree" kindref="compound">Tree</ref>(</highlight><highlight class="stringliteral">&quot;root&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>ytree.addSegment(s1,<sp/></highlight><highlight class="stringliteral">&quot;root&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>ytree.addSegment(s2,<sp/></highlight><highlight class="stringliteral">&quot;S1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>ytree.addSegment(s3,<sp/></highlight><highlight class="stringliteral">&quot;S1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classTreeInvDynTest_1ae20f32510efa72c401662ea122eae9c2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTreeInvDynTest_1ae20f32510efa72c401662ea122eae9c2" kindref="member">TreeInvDynTest::tearDown</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classTreeInvDynTest_1a9b89e416ac6c265e43f2fb964ba0534b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTreeInvDynTest_1a9b89e416ac6c265e43f2fb964ba0534b" kindref="member">TreeInvDynTest::UpdateTreeTest</ref>()<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;Tree:<sp/>&quot;<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>tree2str(tree)<sp/>&lt;&lt;<sp/>endl;<sp/>//NOTE:<sp/>tree2str<sp/>is<sp/>not<sp/>available<sp/>as<sp/>I<sp/>implemented<sp/>it<sp/>in<sp/>another<sp/>&quot;parallel&quot;<sp/>commit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nTree:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>tree<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="classKDL_1_1Tree" kindref="compound">Tree</ref><sp/>temp_tree(tree);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><ref refid="classKDL_1_1TreeIdSolver__RNE" kindref="compound">TreeIdSolver_RNE</ref><sp/>solver(temp_tree,<sp/><ref refid="classKDL_1_1Vector_1aac50a5f60447f9cb7b4a510c4695ab89" kindref="member">Vector::Zero</ref>());</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>q,<sp/>qd,<sp/>qdd,<sp/>tau;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a713b62c139a0caee351f94aa7598e56a" kindref="member">SolverI::E_SIZE_MISMATCH</ref>,<sp/>solver.<ref refid="classKDL_1_1TreeIdSolver__RNE_1a75267397fac4995f58af1f006e0a18ad" kindref="member">CartToJnt</ref>(q,<sp/>qd,<sp/>qdd,<sp/><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">WrenchMap</ref>(),<sp/>tau));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>q.<ref refid="classKDL_1_1JntArray_1a4ea82246fd0aa8badff28deb24c2e629" kindref="member">resize</ref>(temp_tree.<ref refid="classKDL_1_1Tree_1afd53537e6aeacc9f8a524f6ea90d1360" kindref="member">getNrOfJoints</ref>());</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a713b62c139a0caee351f94aa7598e56a" kindref="member">SolverI::E_SIZE_MISMATCH</ref>,<sp/>solver.<ref refid="classKDL_1_1TreeIdSolver__RNE_1a75267397fac4995f58af1f006e0a18ad" kindref="member">CartToJnt</ref>(q,<sp/>qd,<sp/>qdd,<sp/><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">WrenchMap</ref>(),<sp/>tau));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>qd.<ref refid="classKDL_1_1JntArray_1a4ea82246fd0aa8badff28deb24c2e629" kindref="member">resize</ref>(temp_tree.<ref refid="classKDL_1_1Tree_1afd53537e6aeacc9f8a524f6ea90d1360" kindref="member">getNrOfJoints</ref>());</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a713b62c139a0caee351f94aa7598e56a" kindref="member">SolverI::E_SIZE_MISMATCH</ref>,<sp/>solver.<ref refid="classKDL_1_1TreeIdSolver__RNE_1a75267397fac4995f58af1f006e0a18ad" kindref="member">CartToJnt</ref>(q,<sp/>qd,<sp/>qdd,<sp/><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">WrenchMap</ref>(),<sp/>tau));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>qdd.<ref refid="classKDL_1_1JntArray_1a4ea82246fd0aa8badff28deb24c2e629" kindref="member">resize</ref>(temp_tree.<ref refid="classKDL_1_1Tree_1afd53537e6aeacc9f8a524f6ea90d1360" kindref="member">getNrOfJoints</ref>());</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a713b62c139a0caee351f94aa7598e56a" kindref="member">SolverI::E_SIZE_MISMATCH</ref>,<sp/>solver.<ref refid="classKDL_1_1TreeIdSolver__RNE_1a75267397fac4995f58af1f006e0a18ad" kindref="member">CartToJnt</ref>(q,<sp/>qd,<sp/>qdd,<sp/><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">WrenchMap</ref>(),<sp/>tau));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>tau.<ref refid="classKDL_1_1JntArray_1a4ea82246fd0aa8badff28deb24c2e629" kindref="member">resize</ref>(temp_tree.<ref refid="classKDL_1_1Tree_1afd53537e6aeacc9f8a524f6ea90d1360" kindref="member">getNrOfJoints</ref>());</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a95f2e049884a3a08fc4f839e4cbf6191" kindref="member">SolverI::E_NOERROR</ref>,<sp/>solver.<ref refid="classKDL_1_1TreeIdSolver__RNE_1a75267397fac4995f58af1f006e0a18ad" kindref="member">CartToJnt</ref>(q,<sp/>qd,<sp/>qdd,<sp/><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">WrenchMap</ref>(),<sp/>tau));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>temp_tree.<ref refid="classKDL_1_1Tree_1a6a0b05c008c3d1d64696560bd30df666" kindref="member">addSegment</ref>(<ref refid="classKDL_1_1Segment" kindref="compound">Segment</ref>(</highlight><highlight class="stringliteral">&quot;extra&quot;</highlight><highlight class="normal">),<sp/>temp_tree.<ref refid="classKDL_1_1Tree_1a5e09f42e17a4916ddb82467f07c3b777" kindref="member">getRootSegment</ref>()-&gt;first);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a1803914d79d602cbc5ffced121c5278c" kindref="member">SolverI::E_NOT_UP_TO_DATE</ref>,<sp/>solver.<ref refid="classKDL_1_1TreeIdSolver__RNE_1a75267397fac4995f58af1f006e0a18ad" kindref="member">CartToJnt</ref>(q,<sp/>qd,<sp/>qdd,<sp/><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">WrenchMap</ref>(),<sp/>tau));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>solver.<ref refid="classKDL_1_1TreeIdSolver__RNE_1a1a2850b7607a176313f03f7fa61d6814" kindref="member">updateInternalDataStructures</ref>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a95f2e049884a3a08fc4f839e4cbf6191" kindref="member">SolverI::E_NOERROR</ref>,<sp/>solver.<ref refid="classKDL_1_1TreeIdSolver__RNE_1a75267397fac4995f58af1f006e0a18ad" kindref="member">CartToJnt</ref>(q,<sp/>qd,<sp/>qdd,<sp/><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">WrenchMap</ref>(),<sp/>tau));</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="classTreeInvDynTest_1a9f3801caaac0e286f28aebba1f9693df" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTreeInvDynTest_1a9f3801caaac0e286f28aebba1f9693df" kindref="member">TreeInvDynTest::TwoChainsTest</ref>()<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref><sp/>gravity(0,0,-9.8);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="classKDL_1_1TreeIdSolver__RNE" kindref="compound">TreeIdSolver_RNE</ref><sp/>solver(tree,<sp/>gravity);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="classKDL_1_1ChainIdSolver__RNE" kindref="compound">ChainIdSolver_RNE</ref><sp/>solver1(chain1,<sp/>gravity);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><ref refid="classKDL_1_1ChainIdSolver__RNE" kindref="compound">ChainIdSolver_RNE</ref><sp/>solver2(chain2,<sp/>gravity);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nt<sp/>=<sp/>tree.getNrOfJoints();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n1<sp/>=<sp/>chain1.getNrOfJoints();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n2<sp/>=<sp/>chain2.getNrOfJoints();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Check<sp/>that<sp/>sizes<sp/>are<sp/>consistent<sp/>--<sp/>otherwise<sp/>following<sp/>code<sp/>does<sp/>not<sp/>make<sp/>sense!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(nt,<sp/>n1+n2);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>q(nt),<sp/>qd(nt),<sp/>qdd(nt),<sp/>tau(nt);<sp/></highlight><highlight class="comment">//data<sp/>related<sp/>to<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>q1(n1),<sp/>qd1(n1),<sp/>qdd1(n1),<sp/>tau1(n1);<sp/></highlight><highlight class="comment">//data<sp/>related<sp/>to<sp/>chain1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>q2(n2),<sp/>qd2(n2),<sp/>qdd2(n2),<sp/>tau2(n2);<sp/></highlight><highlight class="comment">//data<sp/>related<sp/>to<sp/>chain2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterations<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(iterations--<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Randomize<sp/>joint<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;nt;<sp/>i++)<sp/><ref refid="namespaceKDL_1a910caae27c05e168ff9e13c1e1646319" kindref="member">random</ref>(q(i)),<sp/><ref refid="namespaceKDL_1a910caae27c05e168ff9e13c1e1646319" kindref="member">random</ref>(qd(i)),<sp/><ref refid="namespaceKDL_1a910caae27c05e168ff9e13c1e1646319" kindref="member">random</ref>(qdd(i));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n1;<sp/>i++)<sp/>q1(i)=q(i),<sp/>qd1(i)=qd(i),<sp/>qdd1(i)=qdd(i);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n2;<sp/>i++)<sp/>q2(i)=q(i+n1),<sp/>qd2(i)=qd(i+n1),<sp/>qdd2(i)=qdd(i+n1);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Evaluate<sp/>efforts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a95f2e049884a3a08fc4f839e4cbf6191" kindref="member">SolverI::E_NOERROR</ref>,<sp/>solver.<ref refid="classKDL_1_1TreeIdSolver__RNE_1a75267397fac4995f58af1f006e0a18ad" kindref="member">CartToJnt</ref>(q,<sp/>qd,<sp/>qdd,<sp/><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">WrenchMap</ref>(),<sp/>tau));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a95f2e049884a3a08fc4f839e4cbf6191" kindref="member">SolverI::E_NOERROR</ref>,<sp/>solver1.<ref refid="classKDL_1_1ChainIdSolver__RNE_1a517c0314490c32848e2b8e29ecac997e" kindref="member">CartToJnt</ref>(q1,<sp/>qd1,<sp/>qdd1,<sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">Wrenches</ref>(chain1.getNrOfSegments()),<sp/>tau1));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a95f2e049884a3a08fc4f839e4cbf6191" kindref="member">SolverI::E_NOERROR</ref>,<sp/>solver2.<ref refid="classKDL_1_1ChainIdSolver__RNE_1a517c0314490c32848e2b8e29ecac997e" kindref="member">CartToJnt</ref>(q2,<sp/>qd2,<sp/>qdd2,<sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">Wrenches</ref>(chain2.getNrOfSegments()),<sp/>tau2));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//compare<sp/>efforts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>tau12(tau.<ref refid="classKDL_1_1JntArray_1a3176b3c2ebbeeca6e45a3e8d4d692e5b" kindref="member">rows</ref>());</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n1;<sp/>i++)<sp/>tau12(i)<sp/>=<sp/>tau1(i);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n2;<sp/>i++)<sp/>tau12(i+n1)<sp/>=<sp/>tau2(i);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(tau,<sp/>tau12);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classTreeInvDynTest_1af12a8d0382cd4831fea4495f92c96b57" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTreeInvDynTest_1af12a8d0382cd4831fea4495f92c96b57" kindref="member">TreeInvDynTest::YTreeTest</ref>()<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nY-shaped<sp/>tree:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>ytree<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>g<sp/>=<sp/>9.8;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><ref refid="classKDL_1_1TreeIdSolver__RNE" kindref="compound">TreeIdSolver_RNE</ref><sp/>solver(ytree,<sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(0,-g,0));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Following<sp/>is<sp/>just<sp/>a<sp/>check<sp/>in<sp/>case<sp/>the<sp/>model<sp/>is<sp/>modified.<sp/>In<sp/>this<sp/>case<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//analytic<sp/>model<sp/>derived<sp/>using<sp/>Euler-Lagrange<sp/>equations<sp/>would<sp/>not<sp/>be<sp/>valid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dof<sp/>=<sp/>ytree.getNrOfJoints();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(dof,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)3);<sp/></highlight><highlight class="comment">//<sp/>The<sp/>analytic<sp/>euler-lagrange<sp/>model<sp/>was<sp/>derived<sp/>for<sp/>a<sp/>specific<sp/>3-dof<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>q(dof),<sp/>qd(dof),<sp/>qdd(dof),<sp/>tau(dof),<sp/>eff(dof);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mLL<sp/>=<sp/>m*L*L;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Ie<sp/>=<sp/>Iz<sp/>+<sp/>0.25*mLL;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterations<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(iterations--<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Randomize<sp/>joint<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;dof;<sp/>i++)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceKDL_1a910caae27c05e168ff9e13c1e1646319" kindref="member">random</ref>(q(i)),<sp/><ref refid="namespaceKDL_1a910caae27c05e168ff9e13c1e1646319" kindref="member">random</ref>(qd(i)),<sp/><ref refid="namespaceKDL_1a910caae27c05e168ff9e13c1e1646319" kindref="member">random</ref>(qdd(i));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Evaluate<sp/>efforts<sp/>using<sp/>the<sp/>numerical<sp/>solver</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a95f2e049884a3a08fc4f839e4cbf6191" kindref="member">SolverI::E_NOERROR</ref>,<sp/>solver.<ref refid="classKDL_1_1TreeIdSolver__RNE_1a75267397fac4995f58af1f006e0a18ad" kindref="member">CartToJnt</ref>(q,<sp/>qd,<sp/>qdd,<sp/><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">WrenchMap</ref>(),<sp/>tau));</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Evaluate<sp/>efforts<sp/>using<sp/>the<sp/>analytic<sp/>model<sp/>derived<sp/>using<sp/>Euler-Lagrange<sp/>equations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2<sp/>=<sp/><ref refid="cpp/numeric/math/sin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::sin</ref>(q(1)),<sp/>c2<sp/>=<sp/><ref refid="cpp/numeric/math/cos" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cos</ref>(q(1));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3<sp/>=<sp/><ref refid="cpp/numeric/math/sin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::sin</ref>(q(2)),<sp/>c3<sp/>=<sp/><ref refid="cpp/numeric/math/cos" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cos</ref>(q(2));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c1<sp/>=<sp/><ref refid="cpp/numeric/math/cos" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cos</ref>(q(0)),<sp/>c12<sp/>=<sp/><ref refid="cpp/numeric/math/cos" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cos</ref>(q(0)+q(1)),<sp/>c13<sp/>=<sp/><ref refid="cpp/numeric/math/cos" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cos</ref>(q(0)+q(2));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>eff(0)<sp/>=<sp/>(3*Iz+6.5*mLL+mLL*c2+2*mLL*c3)<sp/>*<sp/>qdd(0)<sp/>+<sp/>(Ie+0.5*mLL*c2)<sp/>*<sp/>qdd(1)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(Ie+mLL*c3)<sp/>*<sp/>qdd(2)<sp/>-<sp/>0.5*mLL*s2*qd(1)*qd(1)<sp/>-<sp/>mLL*s3*qd(2)*qd(2)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>mLL*s2*qd(0)*qd(1)<sp/>-<sp/>2*mLL*s3*qd(0)*qd(2)<sp/>+<sp/>m*g*(4*L*c1+0.5*L*c12+0.5*L*c13);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>eff(1)<sp/>=<sp/>(Ie+0.5*mLL*c2)<sp/>*<sp/>qdd(0)<sp/>+<sp/>Ie<sp/>*<sp/>qdd(1)<sp/>+<sp/>0.5*mLL*s2*qd(0)*qd(0)<sp/>+<sp/>0.5*m*g*L*c12;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>eff(2)<sp/>=<sp/>(Ie+mLL*c3)<sp/>*<sp/>qdd(0)<sp/>+<sp/>Ie<sp/>*<sp/>qdd(2)<sp/>+<sp/>mLL*s3*qd(0)*qd(0)<sp/>+<sp/>0.5*m*g*L*c13;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//compare<sp/>efforts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_EQUAL(tau,<sp/>eff);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/treeinvdyntest.cpp"/>
  </compounddef>
</doxygen>
