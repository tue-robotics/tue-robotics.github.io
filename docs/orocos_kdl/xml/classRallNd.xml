<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classRallNd" kind="class" language="C++" prot="public">
    <compoundname>RallNd</compoundname>
    <basecompoundref refid="classKDL_1_1Rall2d" prot="public" virt="non-virtual">KDL::Rall2d&lt; RallNd&lt; N-2 &gt;, RallNd&lt; N-2 &gt;, double &gt;</basecompoundref>
    <includes refid="rallNd_8h" local="no">rallNd.h</includes>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classRallNd_1a90e49ad89b2bcf9709a5cd652f1e13ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>RallNd&lt; N &gt;::RallNd</definition>
        <argsstring>()</argsstring>
        <name>RallNd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/rallnumbertest.cpp" line="55" column="1" bodyfile="tests/rallnumbertest.cpp" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classRallNd_1a90e49ad89b2bcf9709a5cd652f1e13ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>RallNd&lt; N &gt;::RallNd</definition>
        <argsstring>()</argsstring>
        <name>RallNd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utilities/rallNd.h" line="65" column="1" bodyfile="src/utilities/rallNd.h" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classRallNd_1aefead50ab34b9a30fd3c456abff770fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>RallNd&lt; N &gt;::RallNd</definition>
        <argsstring>(const Rall1d&lt; RallNd&lt; N-1 &gt;, RallNd&lt; N-1 &gt;, double &gt; &amp;arg)</argsstring>
        <name>RallNd</name>
        <param>
          <type>const <ref refid="classKDL_1_1Rall1d" kindref="compound">Rall1d</ref>&lt; <ref refid="classRallNd" kindref="compound">RallNd</ref>&lt; N-1 &gt;, <ref refid="classRallNd" kindref="compound">RallNd</ref>&lt; N-1 &gt;, double &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/rallnumbertest.cpp" line="56" column="1" bodyfile="tests/rallnumbertest.cpp" bodystart="56" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classRallNd_1ad3690cbaed255bba3466f07347e8a545" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>RallNd&lt; N &gt;::RallNd</definition>
        <argsstring>(const Rall2d&lt; RallNd&lt; N-2 &gt;, RallNd&lt; N-2 &gt;, double &gt; &amp;arg)</argsstring>
        <name>RallNd</name>
        <param>
          <type>const <ref refid="classKDL_1_1Rall2d_1a1fdf4dfd71d3cae45e6db573fd16fa33" kindref="member">Rall2d</ref>&lt; <ref refid="classRallNd" kindref="compound">RallNd</ref>&lt; N-2 &gt;, <ref refid="classRallNd" kindref="compound">RallNd</ref>&lt; N-2 &gt;, double &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utilities/rallNd.h" line="66" column="1" bodyfile="src/utilities/rallNd.h" bodystart="66" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classRallNd_1ac8441c2c1c3ddf6e657c31c30eedd0f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>RallNd&lt; N &gt;::RallNd</definition>
        <argsstring>(double value, double d[])</argsstring>
        <name>RallNd</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>double</type>
          <declname>d</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/rallnumbertest.cpp" line="58" column="1" bodyfile="tests/rallnumbertest.cpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classRallNd_1ac8441c2c1c3ddf6e657c31c30eedd0f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>RallNd&lt; N &gt;::RallNd</definition>
        <argsstring>(double value, double d[])</argsstring>
        <name>RallNd</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>double</type>
          <declname>d</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utilities/rallNd.h" line="68" column="1" bodyfile="src/utilities/rallNd.h" bodystart="68" bodyend="72"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The Rall1d class allows for a 24-line implementation of rall numbers generalized to the Nth derivative ! The efficiency is not very good for high derivatives. This could be improved by also using Rall2d</para>
<para>template &lt;int N&gt; class <ref refid="classRallNd" kindref="compound">RallNd</ref> : public Rall1d&lt; <ref refid="classRallNd" kindref="compound">RallNd</ref>&lt;N-1&gt;, <ref refid="classRallNd" kindref="compound">RallNd</ref>&lt;N-1&gt;, double &gt; { public: <ref refid="classRallNd_1a90e49ad89b2bcf9709a5cd652f1e13ef" kindref="member">RallNd()</ref> {} <ref refid="classRallNd" kindref="compound">RallNd</ref>(const Rall1d&lt; <ref refid="classRallNd" kindref="compound">RallNd</ref>&lt;N-1&gt;, <ref refid="classRallNd" kindref="compound">RallNd</ref>&lt;N-1&gt;,double&gt;&amp; arg) : Rall1d&lt; <ref refid="classRallNd" kindref="compound">RallNd</ref>&lt;N-1&gt;, <ref refid="classRallNd" kindref="compound">RallNd</ref>&lt;N-1&gt;,double&gt;(arg) {} <ref refid="classRallNd_1ac8441c2c1c3ddf6e657c31c30eedd0f5" kindref="member">RallNd(double value,double d[])</ref> { this-&gt;t = <ref refid="classRallNd" kindref="compound">RallNd</ref>&lt;N-1&gt;(value,d); this-&gt;grad = <ref refid="classRallNd" kindref="compound">RallNd</ref>&lt;N-1&gt;(d[0],&amp;d[1]); } };</para>
<para>template &lt;&gt; class <ref refid="classRallNd_3_011_01_4" kindref="compound">RallNd&lt;1&gt;</ref> : public <ref refid="classKDL_1_1Rall1d" kindref="compound">Rall1d&lt;double&gt;</ref> { public: <ref refid="classRallNd_1a90e49ad89b2bcf9709a5cd652f1e13ef" kindref="member">RallNd()</ref> {} <ref refid="classRallNd" kindref="compound">RallNd(const Rall1d&lt;double&gt;&amp; arg)</ref> : Rall1d&lt;double,double,double&gt;(arg) {} <ref refid="classRallNd_1ac8441c2c1c3ddf6e657c31c30eedd0f5" kindref="member">RallNd(double value,double d[])</ref> { t = value; grad = d[0]; } }; to be checked.. Als je tot 3de orde een efficiente berekening kan doen, dan kan je tot een willekeurige orde alles efficient berekenen 0 1 2 3 ==&gt; 1 2 3 4 ==&gt; 3 4 5 6 <linebreak/>
 4 5 6 7</para>
<para>de aangeduide berekeningen zijn niet noodzakelijk, en er is dan niets verniet berekend in de recursieve implementatie. <linebreak/>
 of met 2de orde over 1ste order : kan ook efficient : 0 1 ==&gt;1 2 2 3 </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>RallNd&lt; N &gt;</label>
        <link refid="classRallNd"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KDL::Rall2d&lt; RallNd&lt; N-2 &gt;, RallNd&lt; N-2 &gt;, double &gt;</label>
        <link refid="classKDL_1_1Rall2d"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>RallNd&lt; N &gt;</label>
        <link refid="classRallNd"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KDL::Rall2d&lt; RallNd&lt; N-2 &gt;, RallNd&lt; N-2 &gt;, double &gt;</label>
        <link refid="classKDL_1_1Rall2d"/>
        <childnode refid="3" relation="usage">
          <edgelabel>dd</edgelabel>
          <edgelabel>t</edgelabel>
          <edgelabel>d</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>RallNd&lt; N-2 &gt;</label>
        <link refid="classRallNd"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/utilities/rallNd.h" line="63" column="1" bodyfile="src/utilities/rallNd.h" bodystart="61" bodyend="73"/>
    <listofallmembers>
      <member refid="classKDL_1_1Rall2d_1a27889e94024eaccc30af605035dce058" prot="public" virt="non-virtual"><scope>RallNd</scope><name>d</name></member>
      <member refid="classKDL_1_1Rall2d_1a6c62694a296791698a283d235f89c00f" prot="public" virt="non-virtual"><scope>RallNd</scope><name>D</name></member>
      <member refid="classKDL_1_1Rall2d_1a9e426900b6f34dad1f5a106ed2e9ee4d" prot="public" virt="non-virtual"><scope>RallNd</scope><name>dd</name></member>
      <member refid="classKDL_1_1Rall2d_1a16d180a34f16ff69153e26b70985bc67" prot="public" virt="non-virtual"><scope>RallNd</scope><name>DD</name></member>
      <member refid="classKDL_1_1Rall2d_1a6e5e8776ee78b5e2b2d04bb6746bbf1b" prot="public" virt="non-virtual"><scope>RallNd</scope><name>Identity</name></member>
      <member refid="classKDL_1_1Rall2d_1a653b3edc14fd28eb2ac794fa4b5136cb" prot="public" virt="non-virtual"><scope>RallNd</scope><name>operator*=</name></member>
      <member refid="classKDL_1_1Rall2d_1a0472a424db53a653bdadf9ff7c412a37" prot="public" virt="non-virtual"><scope>RallNd</scope><name>operator*=</name></member>
      <member refid="classKDL_1_1Rall2d_1a53dbf50f03609f1ab871647e0c0a9d16" prot="public" virt="non-virtual"><scope>RallNd</scope><name>operator+=</name></member>
      <member refid="classKDL_1_1Rall2d_1aea980852c0f74e96abfb78d7dfe88840" prot="public" virt="non-virtual"><scope>RallNd</scope><name>operator+=</name></member>
      <member refid="classKDL_1_1Rall2d_1ad7d7c9760a6354d6d7c91b43f89e2305" prot="public" virt="non-virtual"><scope>RallNd</scope><name>operator-=</name></member>
      <member refid="classKDL_1_1Rall2d_1a13e30d8f67ae6c306657c5d8b296bce5" prot="public" virt="non-virtual"><scope>RallNd</scope><name>operator-=</name></member>
      <member refid="classKDL_1_1Rall2d_1afc87d3581a1e0bc541eaa321fc97c11a" prot="public" virt="non-virtual"><scope>RallNd</scope><name>operator/=</name></member>
      <member refid="classKDL_1_1Rall2d_1aca12bcf883198c840e4586429e5eb183" prot="public" virt="non-virtual"><scope>RallNd</scope><name>operator/=</name></member>
      <member refid="classKDL_1_1Rall2d_1a1a18bf39cef89cc7e575d03dfa55a614" prot="public" virt="non-virtual"><scope>RallNd</scope><name>operator=</name></member>
      <member refid="classKDL_1_1Rall2d_1ad6e0231e72a335fcbf1af7f25bb94d48" prot="public" virt="non-virtual"><scope>RallNd</scope><name>operator=</name></member>
      <member refid="classKDL_1_1Rall2d_1a1fdf4dfd71d3cae45e6db573fd16fa33" prot="public" virt="non-virtual"><scope>RallNd</scope><name>Rall2d</name></member>
      <member refid="classKDL_1_1Rall2d_1a4610a3ce4fabd21a15dfcbed1bc25cc2" prot="public" virt="non-virtual"><scope>RallNd</scope><name>Rall2d</name></member>
      <member refid="classKDL_1_1Rall2d_1a37b225537c3e3f254507c290155670b3" prot="public" virt="non-virtual"><scope>RallNd</scope><name>Rall2d</name></member>
      <member refid="classKDL_1_1Rall2d_1a58999b50b89bd0b22b8723cd1eadc390" prot="public" virt="non-virtual"><scope>RallNd</scope><name>Rall2d</name></member>
      <member refid="classKDL_1_1Rall2d_1a2a439ab6e1604a04c9f0d58eaf2d9339" prot="public" virt="non-virtual"><scope>RallNd</scope><name>Rall2d</name></member>
      <member refid="classRallNd_1a90e49ad89b2bcf9709a5cd652f1e13ef" prot="public" virt="non-virtual"><scope>RallNd</scope><name>RallNd</name></member>
      <member refid="classRallNd_1ad3690cbaed255bba3466f07347e8a545" prot="public" virt="non-virtual"><scope>RallNd</scope><name>RallNd</name></member>
      <member refid="classRallNd_1ac8441c2c1c3ddf6e657c31c30eedd0f5" prot="public" virt="non-virtual"><scope>RallNd</scope><name>RallNd</name></member>
      <member refid="classRallNd_1a90e49ad89b2bcf9709a5cd652f1e13ef" prot="public" virt="non-virtual"><scope>RallNd</scope><name>RallNd</name></member>
      <member refid="classRallNd_1aefead50ab34b9a30fd3c456abff770fb" prot="public" virt="non-virtual"><scope>RallNd</scope><name>RallNd</name></member>
      <member refid="classRallNd_1ac8441c2c1c3ddf6e657c31c30eedd0f5" prot="public" virt="non-virtual"><scope>RallNd</scope><name>RallNd</name></member>
      <member refid="classKDL_1_1Rall2d_1af40fca6b962d733bd33d938d8c9b67ca" prot="public" virt="non-virtual"><scope>RallNd</scope><name>t</name></member>
      <member refid="classKDL_1_1Rall2d_1a77c7ab2fe81cf71e3ca6c3409c14d9be" prot="public" virt="non-virtual"><scope>RallNd</scope><name>Value</name></member>
      <member refid="classKDL_1_1Rall2d_1a8d577d6493028339de86925238563dc5" prot="public" virt="non-virtual"><scope>RallNd</scope><name>Zero</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
