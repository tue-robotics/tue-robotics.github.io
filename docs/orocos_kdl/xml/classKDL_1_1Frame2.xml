<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classKDL_1_1Frame2" kind="class" language="C++" prot="public">
    <compoundname>KDL::Frame2</compoundname>
    <includes refid="frames_8hpp" local="no">frames.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classKDL_1_1Frame2_1ab77981911496a659b7fa878886dbe40b" prot="public" static="no" mutable="no">
        <type><ref refid="classKDL_1_1Rotation2" kindref="compound">Rotation2</ref></type>
        <definition>Rotation2 KDL::Frame2::M</definition>
        <argsstring></argsstring>
        <name>M</name>
        <briefdescription>
<para>Orientation of the <ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frames.hpp" line="1102" column="15" bodyfile="src/frames.hpp" bodystart="1102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Frame2_1ac53f050e83f8fa87267bdc194cb68d7a" prot="public" static="no" mutable="no">
        <type><ref refid="classKDL_1_1Vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 KDL::Frame2::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <briefdescription>
<para>origine of the <ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frames.hpp" line="1101" column="13" bodyfile="src/frames.hpp" bodystart="1101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classKDL_1_1Frame2_1a528fc3652c18efe3f89eaf7ce4724129" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>IMETHOD Frame2::Frame2</definition>
        <argsstring>(const Frame2 &amp;arg)</argsstring>
        <name>Frame2</name>
        <param>
          <type>const <ref refid="classKDL_1_1Frame2" kindref="compound">Frame2</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frames.hpp" line="1110" column="13" bodyfile="src/frames.inl" bodystart="973" bodyend="975"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Frame2_1aabf1e7b7243dcdd66c1a38a55ff39d9d" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>IMETHOD Frame2::Frame2</definition>
        <argsstring>(const Rotation2 &amp;R)</argsstring>
        <name>Frame2</name>
        <param>
          <type>const <ref refid="classKDL_1_1Rotation2" kindref="compound">Rotation2</ref> &amp;</type>
          <declname>R</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frames.hpp" line="1108" column="22" bodyfile="src/frames.inl" bodystart="912" bodyend="916"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Frame2_1a6c00703a027780ab480b73292ed2d594" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>IMETHOD Frame2::Frame2</definition>
        <argsstring>(const Rotation2 &amp;R, const Vector2 &amp;V)</argsstring>
        <name>Frame2</name>
        <param>
          <type>const <ref refid="classKDL_1_1Rotation2" kindref="compound">Rotation2</ref> &amp;</type>
          <declname>R</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>V</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frames.hpp" line="1106" column="13" bodyfile="src/frames.inl" bodystart="924" bodyend="928"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Frame2_1a715a2d3497e2bedc6c4117613bce297e" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>IMETHOD Frame2::Frame2</definition>
        <argsstring>(const Vector2 &amp;V)</argsstring>
        <name>Frame2</name>
        <param>
          <type>const <ref refid="classKDL_1_1Vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>V</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frames.hpp" line="1107" column="22" bodyfile="src/frames.inl" bodystart="918" bodyend="922"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Frame2_1ab9fac731a64cd211f937f687669a9e16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KDL::Frame2::Frame2</definition>
        <argsstring>(void)</argsstring>
        <name>Frame2</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frames.hpp" line="1109" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Frame2_1a8d62ebe6b0cc152806a95a0412981c4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KDL::Frame2::Integrate</definition>
        <argsstring>(const Twist &amp;t_this, double frequency)</argsstring>
        <name>Integrate</name>
        <param>
          <type>const <ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref> &amp;</type>
          <declname>t_this</declname>
        </param>
        <param>
          <type>double</type>
          <declname>frequency</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frames.hpp" line="1128" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Frame2_1af9db6979bec9cc9b2ae889e65e95cd8a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classKDL_1_1Frame2" kindref="compound">Frame2</ref></type>
        <definition>IMETHOD Frame2 Frame2::Inverse</definition>
        <argsstring>() const</argsstring>
        <name>Inverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frames.hpp" line="1122" column="20" bodyfile="src/frames.inl" bodystart="959" bodyend="964"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Frame2_1a4ed60a07cda019ce7fdb90c3daffedd8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classKDL_1_1Vector2" kindref="compound">Vector2</ref></type>
        <definition>IMETHOD Vector2 Frame2::Inverse</definition>
        <argsstring>(const Vector2 &amp;arg) const</argsstring>
        <name>Inverse</name>
        <param>
          <type>const <ref refid="classKDL_1_1Vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frames.hpp" line="1123" column="21" bodyfile="src/frames.inl" bodystart="940" bodyend="943"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Frame2_1acab15e245c3fd8148a7a999611a37c61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KDL::Frame2::Make4x4</definition>
        <argsstring>(double *d)</argsstring>
        <name>Make4x4</name>
        <param>
          <type>double *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frames.hpp" line="1111" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Frame2_1a60dcde9c649b001f9a56526ee6f793fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>IMETHOD double Frame2::operator()</definition>
        <argsstring>(int i, int j)</argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Treats a frame as a 3x3 matrix and returns element i,j Access to elements 0..2,0..2, bounds are checked when NDEBUG is not set </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frames.hpp" line="1115" column="20" bodyfile="src/frames.inl" bodystart="978" bodyend="992"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Frame2_1a4c8a0be6804d748370e5d77cbe601990" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>IMETHOD double Frame2::operator()</definition>
        <argsstring>(int i, int j) const</argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Treats a frame as a 4x4 matrix and returns element i,j Access to elements 0..3,0..3, bounds are checked when NDEBUG is not set </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frames.hpp" line="1119" column="20" bodyfile="src/frames.inl" bodystart="994" bodyend="1008"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Frame2_1a4bd2f662b762feedc4869c3fc7167e7b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classKDL_1_1Vector2" kindref="compound">Vector2</ref></type>
        <definition>IMETHOD Vector2 Frame2::operator*</definition>
        <argsstring>(const Vector2 &amp;arg) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classKDL_1_1Vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frames.hpp" line="1125" column="21" bodyfile="src/frames.inl" bodystart="935" bodyend="938"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Frame2_1a899a0738adfe9342fc3a2d6110a6730c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classKDL_1_1Frame2" kindref="compound">Frame2</ref> &amp;</type>
        <definition>IMETHOD Frame2 &amp; Frame2::operator=</definition>
        <argsstring>(const Frame2 &amp;arg)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classKDL_1_1Frame2" kindref="compound">Frame2</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frames.hpp" line="1124" column="20" bodyfile="src/frames.inl" bodystart="966" bodyend="971"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Frame2_1a37809903d37cf549d110ce10e71b3ee9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>IMETHOD void Frame2::SetIdentity</definition>
        <argsstring>()</argsstring>
        <name>SetIdentity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frames.hpp" line="1127" column="18" bodyfile="src/frames.inl" bodystart="945" bodyend="949"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Frame2_1ac59dfa60bfd38d03a49343ce068b6ddb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>IMETHOD void Frame2::SetInverse</definition>
        <argsstring>()</argsstring>
        <name>SetInverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frames.hpp" line="1121" column="18" bodyfile="src/frames.inl" bodystart="951" bodyend="956"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classKDL_1_1Frame2_1abb8f48e53e1905e29aa699228bed05b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool Equal</definition>
        <argsstring>(const Frame2 &amp;a, const Frame2 &amp;b, double eps)</argsstring>
        <name>Equal</name>
        <param>
          <type>const <ref refid="classKDL_1_1Frame2" kindref="compound">Frame2</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Frame2" kindref="compound">Frame2</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frames.hpp" line="1134" column="25"/>
      </memberdef>
      <memberdef kind="friend" id="classKDL_1_1Frame2_1a817c85ff90cc5343bba9839f25ccd6e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="classKDL_1_1Frame2" kindref="compound">Frame2</ref></type>
        <definition>Frame2 operator*</definition>
        <argsstring>(const Frame2 &amp;lhs, const Frame2 &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classKDL_1_1Frame2" kindref="compound">Frame2</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classKDL_1_1Frame2" kindref="compound">Frame2</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frames.hpp" line="1126" column="27"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classKDL_1_1Frame2_1a892d5dcb5d4580f0b42b25f2fd892f9f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classKDL_1_1Frame2" kindref="compound">Frame2</ref></type>
        <definition>static Frame2 KDL::Frame2::Identity</definition>
        <argsstring>()</argsstring>
        <name>Identity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frames.hpp" line="1129" column="27" bodyfile="src/frames.hpp" bodystart="1129" bodyend="1133"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A 2D frame class, for further documentation see the Frames class for methods with unchanged semantics. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>KDL::Vector2</label>
        <link refid="classKDL_1_1Vector2"/>
      </node>
      <node id="1">
        <label>KDL::Frame2</label>
        <link refid="classKDL_1_1Frame2"/>
        <childnode refid="2" relation="usage">
          <edgelabel>p</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>M</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>KDL::Rotation2</label>
        <link refid="classKDL_1_1Rotation2"/>
      </node>
    </collaborationgraph>
    <location file="src/frames.hpp" line="1099" column="1" bodyfile="src/frames.hpp" bodystart="1098" bodyend="1135"/>
    <listofallmembers>
      <member refid="classKDL_1_1Frame2_1abb8f48e53e1905e29aa699228bed05b8" prot="public" virt="non-virtual"><scope>KDL::Frame2</scope><name>Equal</name></member>
      <member refid="classKDL_1_1Frame2_1a6c00703a027780ab480b73292ed2d594" prot="public" virt="non-virtual"><scope>KDL::Frame2</scope><name>Frame2</name></member>
      <member refid="classKDL_1_1Frame2_1a715a2d3497e2bedc6c4117613bce297e" prot="public" virt="non-virtual"><scope>KDL::Frame2</scope><name>Frame2</name></member>
      <member refid="classKDL_1_1Frame2_1aabf1e7b7243dcdd66c1a38a55ff39d9d" prot="public" virt="non-virtual"><scope>KDL::Frame2</scope><name>Frame2</name></member>
      <member refid="classKDL_1_1Frame2_1ab9fac731a64cd211f937f687669a9e16" prot="public" virt="non-virtual"><scope>KDL::Frame2</scope><name>Frame2</name></member>
      <member refid="classKDL_1_1Frame2_1a528fc3652c18efe3f89eaf7ce4724129" prot="public" virt="non-virtual"><scope>KDL::Frame2</scope><name>Frame2</name></member>
      <member refid="classKDL_1_1Frame2_1a892d5dcb5d4580f0b42b25f2fd892f9f" prot="public" virt="non-virtual"><scope>KDL::Frame2</scope><name>Identity</name></member>
      <member refid="classKDL_1_1Frame2_1a8d62ebe6b0cc152806a95a0412981c4f" prot="public" virt="non-virtual"><scope>KDL::Frame2</scope><name>Integrate</name></member>
      <member refid="classKDL_1_1Frame2_1af9db6979bec9cc9b2ae889e65e95cd8a" prot="public" virt="non-virtual"><scope>KDL::Frame2</scope><name>Inverse</name></member>
      <member refid="classKDL_1_1Frame2_1a4ed60a07cda019ce7fdb90c3daffedd8" prot="public" virt="non-virtual"><scope>KDL::Frame2</scope><name>Inverse</name></member>
      <member refid="classKDL_1_1Frame2_1ab77981911496a659b7fa878886dbe40b" prot="public" virt="non-virtual"><scope>KDL::Frame2</scope><name>M</name></member>
      <member refid="classKDL_1_1Frame2_1acab15e245c3fd8148a7a999611a37c61" prot="public" virt="non-virtual"><scope>KDL::Frame2</scope><name>Make4x4</name></member>
      <member refid="classKDL_1_1Frame2_1a60dcde9c649b001f9a56526ee6f793fa" prot="public" virt="non-virtual"><scope>KDL::Frame2</scope><name>operator()</name></member>
      <member refid="classKDL_1_1Frame2_1a4c8a0be6804d748370e5d77cbe601990" prot="public" virt="non-virtual"><scope>KDL::Frame2</scope><name>operator()</name></member>
      <member refid="classKDL_1_1Frame2_1a4bd2f662b762feedc4869c3fc7167e7b" prot="public" virt="non-virtual"><scope>KDL::Frame2</scope><name>operator*</name></member>
      <member refid="classKDL_1_1Frame2_1a817c85ff90cc5343bba9839f25ccd6e4" prot="public" virt="non-virtual"><scope>KDL::Frame2</scope><name>operator*</name></member>
      <member refid="classKDL_1_1Frame2_1a899a0738adfe9342fc3a2d6110a6730c" prot="public" virt="non-virtual"><scope>KDL::Frame2</scope><name>operator=</name></member>
      <member refid="classKDL_1_1Frame2_1ac53f050e83f8fa87267bdc194cb68d7a" prot="public" virt="non-virtual"><scope>KDL::Frame2</scope><name>p</name></member>
      <member refid="classKDL_1_1Frame2_1a37809903d37cf549d110ce10e71b3ee9" prot="public" virt="non-virtual"><scope>KDL::Frame2</scope><name>SetIdentity</name></member>
      <member refid="classKDL_1_1Frame2_1ac59dfa60bfd38d03a49343ce068b6ddb" prot="public" virt="non-virtual"><scope>KDL::Frame2</scope><name>SetInverse</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
