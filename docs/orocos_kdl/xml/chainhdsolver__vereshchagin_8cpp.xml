<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="chainhdsolver__vereshchagin_8cpp" kind="file" language="C++">
    <compoundname>chainhdsolver_vereshchagin.cpp</compoundname>
    <includes refid="chainhdsolver__vereshchagin_8hpp" local="yes">chainhdsolver_vereshchagin.hpp</includes>
    <includes refid="frames__io_8hpp" local="yes">frames_io.hpp</includes>
    <includes refid="svd__eigen__HH_8hpp" local="yes">utilities/svd_eigen_HH.hpp</includes>
    <incdepgraph>
      <node id="19">
        <label>exception</label>
        <link refid="cpp/header/exception" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="13">
        <label>functional</label>
        <link refid="cpp/header/functional" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="33">
        <label>algorithm</label>
        <link refid="cpp/header/algorithm" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="12">
        <label>utilities/hash_combine.h</label>
        <link refid="hash__combine_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>chainhdsolver_vereshchagin.hpp</label>
        <link refid="chainhdsolver__vereshchagin_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>chainidsolver.hpp</label>
        <link refid="chainidsolver_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>vector</label>
        <link refid="cpp/header/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="17">
        <label>joint.hpp</label>
        <link refid="joint_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>cstdlib</label>
        <link refid="cpp/header/cstdlib" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="15">
        <label>rigidbodyinertia.hpp</label>
        <link refid="rigidbodyinertia_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>frames_io.hpp</label>
        <link refid="frames__io_8hpp"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>Eigen/Core</label>
      </node>
      <node id="29">
        <label>iostream</label>
        <link refid="cpp/header/iostream" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="32">
        <label>utilities/svd_eigen_HH.hpp</label>
        <link refid="svd__eigen__HH_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>fstream</label>
        <link refid="cpp/header/fstream" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="1">
        <label>chainhdsolver_vereshchagin.cpp</label>
        <link refid="chainhdsolver__vereshchagin_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>frames.hpp</label>
        <link refid="frames_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>jacobian.hpp</label>
        <link refid="jacobian_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>Eigen/StdVector</label>
      </node>
      <node id="28">
        <label>utilities/utility_io.h</label>
        <link refid="utility__io_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>cassert</label>
        <link refid="cpp/header/cassert" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="8">
        <label>utilities/utility.h</label>
        <link refid="utility_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>iomanip</label>
        <link refid="cpp/header/iomanip" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="14">
        <label>frames.inl</label>
        <link refid="frames_8inl"/>
      </node>
      <node id="5">
        <label>segment.hpp</label>
        <link refid="segment_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>jntarray.hpp</label>
        <link refid="jntarray_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>string</label>
        <link refid="cpp/header/string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="24">
        <label>solveri.hpp</label>
        <link refid="solveri_8hpp"/>
      </node>
      <node id="4">
        <label>chain.hpp</label>
        <link refid="chain_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>rotationalinertia.hpp</label>
        <link refid="rotationalinertia_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>cmath</label>
        <link refid="cpp/header/cmath" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="7">
        <label>utilities/kdl-config.h</label>
        <link refid="kdl-config_8h"/>
      </node>
      <node id="25">
        <label>articulatedbodyinertia.hpp</label>
        <link refid="articulatedbodyinertia_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceKDL">KDL</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/><sp/>(C)<sp/><sp/>2009<sp/><sp/>Ruben<sp/>Smits<sp/>&lt;ruben<sp/>dot<sp/>smits<sp/>at<sp/>intermodalics<sp/>dot<sp/>eu&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Version:<sp/>1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>Ruben<sp/>Smits<sp/>&lt;ruben<sp/>dot<sp/>smits<sp/>at<sp/>intermodalics<sp/>dot<sp/>eu&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>Herman<sp/>Bruyninckx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>Azamat<sp/>Shakhimardanov</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Maintainer:<sp/>Ruben<sp/>Smits<sp/>&lt;ruben<sp/>dot<sp/>smits<sp/>at<sp/>intermodalics<sp/>dot<sp/>eu&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>URL:<sp/>http://www.orocos.org/kdl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>St,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="chainhdsolver__vereshchagin_8hpp" kindref="compound">chainhdsolver_vereshchagin.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="frames__io_8hpp" kindref="compound">frames_io.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="svd__eigen__HH_8hpp" kindref="compound">utilities/svd_eigen_HH.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceKDL" kindref="compound">KDL</ref></highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a2c3cf54bd2f3f4a41e682b5fb3850345" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a2c3cf54bd2f3f4a41e682b5fb3850345" kindref="member">ChainHdSolver_Vereshchagin::ChainHdSolver_Vereshchagin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Chain" kindref="compound">Chain</ref>&amp;<sp/>chain_,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref><sp/>&amp;root_acc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nc_)<sp/>:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>chain(chain_),<sp/>nj(chain.getNrOfJoints()),<sp/>ns(chain.getNrOfSegments()),<sp/>nc(nc_),</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>results(ns<sp/>+<sp/>1,<sp/><ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info" kindref="compound">segment_info</ref>(nc))</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1aba437b36078a7a5bbdfa2f47528b867b" kindref="member">acc_root</ref><sp/>=<sp/>root_acc;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Provide<sp/>the<sp/>necessary<sp/>memory<sp/>for<sp/>computing<sp/>the<sp/>inverse<sp/>of<sp/>M0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1ac7ff4cb952f9a644a9e248e864a10c8e" kindref="member">nu_sum</ref>.resize(<ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a978760871e0c047d8af6d3769b1a5017" kindref="member">nc</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1adb8a0dc3ec545bc9e1dde369908c6bcb" kindref="member">M_0_inverse</ref>.resize(<ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a978760871e0c047d8af6d3769b1a5017" kindref="member">nc</ref>,<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a978760871e0c047d8af6d3769b1a5017" kindref="member">nc</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1ac4bde5d96159b6287e91ebcd71f6806a" kindref="member">Um</ref><sp/>=<sp/>Eigen::MatrixXd::Identity(<ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a978760871e0c047d8af6d3769b1a5017" kindref="member">nc</ref>,<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a978760871e0c047d8af6d3769b1a5017" kindref="member">nc</ref>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1abc5a2daa9a957d31a50da6fa48dd9519" kindref="member">Vm</ref><sp/>=<sp/>Eigen::MatrixXd::Identity(<ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a978760871e0c047d8af6d3769b1a5017" kindref="member">nc</ref>,<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a978760871e0c047d8af6d3769b1a5017" kindref="member">nc</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a47b4a7c7b7e12dc6eb44de4921e8588a" kindref="member">Sm</ref><sp/>=<sp/>Eigen::VectorXd::Ones(<ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a978760871e0c047d8af6d3769b1a5017" kindref="member">nc</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a7bdacc6035db9e281786af0a3f415e29" kindref="member">tmpm</ref><sp/>=<sp/>Eigen::VectorXd::Ones(<ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a978760871e0c047d8af6d3769b1a5017" kindref="member">nc</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Provide<sp/>the<sp/>necessary<sp/>memory<sp/>for<sp/>storing<sp/>the<sp/>total<sp/>torque<sp/>acting<sp/>on<sp/>each<sp/>joint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a9b951d790bf39fd418208872d390cea4" kindref="member">total_torques</ref><sp/>=<sp/>Eigen::VectorXd::Zero(<ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a43c2223d9ab060bc26bfaf0b0c87e9f2" kindref="member">nj</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classKDL_1_1ChainHdSolver__Vereshchagin_1ac7c90c38d928d5bb337a0098ed7bd743" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1ac7c90c38d928d5bb337a0098ed7bd743" kindref="member">ChainHdSolver_Vereshchagin::updateInternalDataStructures</ref>()<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1ac7909354ecaad6b628066de8794b3678" kindref="member">ns</ref><sp/>=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a666f7f03947e8d6af7a6a0f34b187f39" kindref="member">chain</ref>.<ref refid="classKDL_1_1Chain_1ab5b0574fe08bfbd16f5c9f6e664a2a01" kindref="member">getNrOfSegments</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a43c2223d9ab060bc26bfaf0b0c87e9f2" kindref="member">nj</ref><sp/>=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a666f7f03947e8d6af7a6a0f34b187f39" kindref="member">chain</ref>.<ref refid="classKDL_1_1Chain_1a24915919dabc4ea58600a38882445cd8" kindref="member">getNrOfJoints</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a9b951d790bf39fd418208872d390cea4" kindref="member">total_torques</ref><sp/>=<sp/>Eigen::VectorXd::Zero(<ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a43c2223d9ab060bc26bfaf0b0c87e9f2" kindref="member">nj</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a0d3bc25675c2118627ee86e1dd47d09b" kindref="member">results</ref>.resize(<ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1ac7909354ecaad6b628066de8794b3678" kindref="member">ns</ref>+1,<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info" kindref="compound">segment_info</ref>(<ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a978760871e0c047d8af6d3769b1a5017" kindref="member">nc</ref>));</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a6d48fd72f1e3fa117dba444edb0d5653" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a6d48fd72f1e3fa117dba444edb0d5653" kindref="member">ChainHdSolver_Vereshchagin::CartToJnt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>&amp;q,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>&amp;q_dot,<sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>&amp;q_dotdot,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Jacobian" kindref="compound">Jacobian</ref>&amp;<sp/>alfa,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref>&amp;<sp/>beta,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">Wrenches</ref>&amp;<sp/>f_ext,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>&amp;ff_torques,<sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>&amp;constraint_torques)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>sizes<sp/>always</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a43c2223d9ab060bc26bfaf0b0c87e9f2" kindref="member">nj</ref><sp/>=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a666f7f03947e8d6af7a6a0f34b187f39" kindref="member">chain</ref>.<ref refid="classKDL_1_1Chain_1a24915919dabc4ea58600a38882445cd8" kindref="member">getNrOfJoints</ref>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1ac7909354ecaad6b628066de8794b3678" kindref="member">ns</ref><sp/>!=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a666f7f03947e8d6af7a6a0f34b187f39" kindref="member">chain</ref>.<ref refid="classKDL_1_1Chain_1ab5b0574fe08bfbd16f5c9f6e664a2a01" kindref="member">getNrOfSegments</ref>())</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classKDL_1_1SolverI_1a62d29639f6396a0660ce7e3958d14718" kindref="member">error</ref><sp/>=<sp/><ref refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a1803914d79d602cbc5ffced121c5278c" kindref="member">E_NOT_UP_TO_DATE</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q.<ref refid="classKDL_1_1JntArray_1a3176b3c2ebbeeca6e45a3e8d4d692e5b" kindref="member">rows</ref>()<sp/>!=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a43c2223d9ab060bc26bfaf0b0c87e9f2" kindref="member">nj</ref><sp/>||<sp/>q_dot.<ref refid="classKDL_1_1JntArray_1a3176b3c2ebbeeca6e45a3e8d4d692e5b" kindref="member">rows</ref>()<sp/>!=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a43c2223d9ab060bc26bfaf0b0c87e9f2" kindref="member">nj</ref><sp/>||<sp/>q_dotdot.<ref refid="classKDL_1_1JntArray_1a3176b3c2ebbeeca6e45a3e8d4d692e5b" kindref="member">rows</ref>()<sp/>!=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a43c2223d9ab060bc26bfaf0b0c87e9f2" kindref="member">nj</ref><sp/>||<sp/>ff_torques.<ref refid="classKDL_1_1JntArray_1a3176b3c2ebbeeca6e45a3e8d4d692e5b" kindref="member">rows</ref>()<sp/>!=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a43c2223d9ab060bc26bfaf0b0c87e9f2" kindref="member">nj</ref><sp/>||<sp/>constraint_torques.<ref refid="classKDL_1_1JntArray_1a3176b3c2ebbeeca6e45a3e8d4d692e5b" kindref="member">rows</ref>()<sp/>!=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a43c2223d9ab060bc26bfaf0b0c87e9f2" kindref="member">nj</ref><sp/>||<sp/>f_ext.<ref refid="cpp/container/vector/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>()<sp/>!=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1ac7909354ecaad6b628066de8794b3678" kindref="member">ns</ref>)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classKDL_1_1SolverI_1a62d29639f6396a0660ce7e3958d14718" kindref="member">error</ref><sp/>=<sp/><ref refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a713b62c139a0caee351f94aa7598e56a" kindref="member">E_SIZE_MISMATCH</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alfa.<ref refid="classKDL_1_1Jacobian_1a8a49fa5fc952d21c4bbda5eb7c9e1e3a" kindref="member">columns</ref>()<sp/>!=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a978760871e0c047d8af6d3769b1a5017" kindref="member">nc</ref><sp/>||<sp/>beta.rows()<sp/>!=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a978760871e0c047d8af6d3769b1a5017" kindref="member">nc</ref>)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classKDL_1_1SolverI_1a62d29639f6396a0660ce7e3958d14718" kindref="member">error</ref><sp/>=<sp/><ref refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a713b62c139a0caee351f94aa7598e56a" kindref="member">E_SIZE_MISMATCH</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//do<sp/>an<sp/>upward<sp/>recursion<sp/>for<sp/>position,<sp/>velocities<sp/>and<sp/>rigid-body<sp/>bias<sp/>forces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1abac5099e549d272e73525fa10145e79c" kindref="member">initial_upwards_sweep</ref>(q,<sp/>q_dot,<sp/>q_dotdot,<sp/>f_ext);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//do<sp/>an<sp/>inward<sp/>recursion<sp/>for<sp/>inertia,<sp/>articulated<sp/>bias<sp/>forces<sp/>and<sp/>constraints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1af1ecda96a43e1bba22628559e6476647" kindref="member">downwards_sweep</ref>(alfa,<sp/>ff_torques);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Solve<sp/>for<sp/>the<sp/>constraint<sp/>forces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1aa7141a076a659b749078eb96e32bb643" kindref="member">constraint_calculation</ref>(beta);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//do<sp/>an<sp/>upward<sp/>recursion<sp/>to<sp/>propagate<sp/>the<sp/>result<sp/>and<sp/>compute<sp/>final<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a1673eaf57a79e6bb3ef1d009bd9d70e4" kindref="member">final_upwards_sweep</ref>(q_dotdot,<sp/>constraint_torques);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classKDL_1_1SolverI_1a62d29639f6396a0660ce7e3958d14718" kindref="member">error</ref><sp/>=<sp/><ref refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a95f2e049884a3a08fc4f839e4cbf6191" kindref="member">E_NOERROR</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classKDL_1_1ChainHdSolver__Vereshchagin_1abac5099e549d272e73525fa10145e79c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1abac5099e549d272e73525fa10145e79c" kindref="member">ChainHdSolver_Vereshchagin::initial_upwards_sweep</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>&amp;q,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>&amp;qdot,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>&amp;qdotdot,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">Wrenches</ref>&amp;<sp/>f_ext)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(q.rows()<sp/>!=<sp/>nj<sp/>||<sp/>qdot.rows()<sp/>!=<sp/>nj<sp/>||<sp/>qdotdot.rows()<sp/>!=<sp/>nj<sp/>||<sp/>f_ext.size()<sp/>!=<sp/>ns)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a8b7150f6004603becc0426d132db6127" kindref="member">F_total</ref><sp/>=<sp/><ref refid="classKDL_1_1Frame_1a21cc8438f71b522154d2ef4cd6933d69" kindref="member">Frame::Identity</ref>();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1ac7909354ecaad6b628066de8794b3678" kindref="member">ns</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Express<sp/>everything<sp/>in<sp/>the<sp/>segments<sp/>reference<sp/>frame<sp/>(body<sp/>coordinates)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//which<sp/>is<sp/>at<sp/>the<sp/>segments<sp/>tip,<sp/>i.e.<sp/>where<sp/>the<sp/>next<sp/>joint<sp/>is<sp/>attached.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Calculate<sp/>segment<sp/>properties:<sp/>X,S,vj,cj</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Segment" kindref="compound">Segment</ref>&amp;<sp/>segment<sp/>=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a666f7f03947e8d6af7a6a0f34b187f39" kindref="member">chain</ref>.<ref refid="classKDL_1_1Chain_1a07a9792d442b7712335417a9eef81cbb" kindref="member">getSegment</ref>(i);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info" kindref="compound">segment_info</ref>&amp;<sp/>s<sp/>=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a0d3bc25675c2118627ee86e1dd47d09b" kindref="member">results</ref>[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>pose<sp/>between<sp/>the<sp/>joint<sp/>root<sp/>and<sp/>the<sp/>segment<sp/>tip<sp/>(tip<sp/>expressed<sp/>in<sp/>joint<sp/>root<sp/>coordinates)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a457a240a1b26201a0b234fac1440390c" kindref="member">F</ref><sp/>=<sp/>segment.<ref refid="classKDL_1_1Segment_1af2996e484750859d30e36c07b1b230a9" kindref="member">pose</ref>(q(j));<sp/></highlight><highlight class="comment">//X<sp/>pose<sp/>of<sp/>each<sp/>link<sp/>in<sp/>link<sp/>coord<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a8b7150f6004603becc0426d132db6127" kindref="member">F_total</ref><sp/>=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a8b7150f6004603becc0426d132db6127" kindref="member">F_total</ref><sp/>*<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a457a240a1b26201a0b234fac1440390c" kindref="member">F</ref>;<sp/></highlight><highlight class="comment">//X<sp/>pose<sp/>of<sp/>the<sp/>each<sp/>link<sp/>in<sp/>root<sp/>coord<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a63520a1c62d1ae2015307bd51f982f3e" kindref="member">F_base</ref><sp/>=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a8b7150f6004603becc0426d132db6127" kindref="member">F_total</ref>;<sp/></highlight><highlight class="comment">//X<sp/>pose<sp/>of<sp/>the<sp/>each<sp/>link<sp/>in<sp/>root<sp/>coord<sp/>system<sp/>for<sp/>getter<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>velocity<sp/>due<sp/>to<sp/>the<sp/>joint<sp/>motion<sp/>of<sp/>the<sp/>segment<sp/>expressed<sp/>in<sp/>the<sp/>segments<sp/>reference<sp/>frame<sp/>(tip)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref><sp/>vj<sp/>=<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a457a240a1b26201a0b234fac1440390c" kindref="member">F</ref>.<ref refid="classKDL_1_1Frame_1a367668b3344ccfd50410ccc1ed30fa6f" kindref="member">M</ref>.<ref refid="classKDL_1_1Rotation_1a09a2ee554e814222ef86a8d1ce3267b1" kindref="member">Inverse</ref>(segment.<ref refid="classKDL_1_1Segment_1a891f8f4c0747035a4be845b68e345d01" kindref="member">twist</ref>(q(j),<sp/>qdot(j)));<sp/></highlight><highlight class="comment">//XDot<sp/>of<sp/>each<sp/>link</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Twist<sp/>aj<sp/>=<sp/>s.F.M.Inverse(segment.twist(q(j),<sp/>qdotdot(j)));<sp/>//XDotDot<sp/>of<sp/>each<sp/>link</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>unit<sp/>velocity<sp/>due<sp/>to<sp/>the<sp/>joint<sp/>motion<sp/>of<sp/>the<sp/>segment<sp/>expressed<sp/>in<sp/>the<sp/>segments<sp/>reference<sp/>frame<sp/>(tip)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a7f186f40e148292974b8b8bdb7e72d40" kindref="member">Z</ref><sp/>=<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a457a240a1b26201a0b234fac1440390c" kindref="member">F</ref>.<ref refid="classKDL_1_1Frame_1a367668b3344ccfd50410ccc1ed30fa6f" kindref="member">M</ref>.<ref refid="classKDL_1_1Rotation_1a09a2ee554e814222ef86a8d1ce3267b1" kindref="member">Inverse</ref>(segment.<ref refid="classKDL_1_1Segment_1a891f8f4c0747035a4be845b68e345d01" kindref="member">twist</ref>(q(j),<sp/>1.0));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Put<sp/>Z<sp/>in<sp/>the<sp/>joint<sp/>root<sp/>reference<sp/>frame:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a7f186f40e148292974b8b8bdb7e72d40" kindref="member">Z</ref><sp/>=<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a457a240a1b26201a0b234fac1440390c" kindref="member">F</ref><sp/>*<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a7f186f40e148292974b8b8bdb7e72d40" kindref="member">Z</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>total<sp/>velocity<sp/>of<sp/>the<sp/>segment<sp/>expressed<sp/>in<sp/>the<sp/>segments<sp/>reference<sp/>frame<sp/>(tip)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a1cb8a02184e769cae974972a5de73b1f" kindref="member">v</ref><sp/>=<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a457a240a1b26201a0b234fac1440390c" kindref="member">F</ref>.<ref refid="classKDL_1_1Frame_1ac508fa4e7c59527f8f377a3c6c225d12" kindref="member">Inverse</ref>(<ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a0d3bc25675c2118627ee86e1dd47d09b" kindref="member">results</ref>[i].v)<sp/>+<sp/>vj;<sp/></highlight><highlight class="comment">//<sp/>recursive<sp/>velocity<sp/>of<sp/>each<sp/>link<sp/>in<sp/>segment<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//s.A=s.F.Inverse(results[i].A)+aj;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a8ebfd6b3a418d5556fe10e97c73c47be" kindref="member">A</ref><sp/>=<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a457a240a1b26201a0b234fac1440390c" kindref="member">F</ref>.<ref refid="classKDL_1_1Frame_1a367668b3344ccfd50410ccc1ed30fa6f" kindref="member">M</ref>.<ref refid="classKDL_1_1Rotation_1a09a2ee554e814222ef86a8d1ce3267b1" kindref="member">Inverse</ref>(<ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a0d3bc25675c2118627ee86e1dd47d09b" kindref="member">results</ref>[i].A);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a1cb8a02184e769cae974972a5de73b1f" kindref="member">v</ref><sp/>=<sp/>vj;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a8ebfd6b3a418d5556fe10e97c73c47be" kindref="member">A</ref><sp/>=<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a457a240a1b26201a0b234fac1440390c" kindref="member">F</ref>.<ref refid="classKDL_1_1Frame_1a367668b3344ccfd50410ccc1ed30fa6f" kindref="member">M</ref>.<ref refid="classKDL_1_1Rotation_1a09a2ee554e814222ef86a8d1ce3267b1" kindref="member">Inverse</ref>(<ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1aba437b36078a7a5bbdfa2f47528b867b" kindref="member">acc_root</ref>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//c[i]<sp/>=<sp/>cj<sp/>+<sp/>v[i]xvj<sp/>(remark:<sp/>cj=0,<sp/>since<sp/>our<sp/>S<sp/>is<sp/>not<sp/>time<sp/>dependent<sp/>in<sp/>local<sp/>coordinates)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>velocity<sp/>product<sp/>acceleration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>&quot;<sp/>Initial<sp/>upward&quot;<sp/>&lt;&lt;<sp/>s.v<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ad49020c77474e81396b5b8afb9134011" kindref="member">C</ref><sp/>=<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a1cb8a02184e769cae974972a5de73b1f" kindref="member">v</ref>*vj;<sp/></highlight><highlight class="comment">//This<sp/>is<sp/>a<sp/>cross<sp/>product:<sp/>cartesian<sp/>space<sp/>BIAS<sp/>acceleration<sp/>in<sp/>local<sp/>link<sp/>coord.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Put<sp/>C<sp/>in<sp/>the<sp/>joint<sp/>root<sp/>reference<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ad49020c77474e81396b5b8afb9134011" kindref="member">C</ref><sp/>=<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a457a240a1b26201a0b234fac1440390c" kindref="member">F</ref><sp/>*<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ad49020c77474e81396b5b8afb9134011" kindref="member">C</ref>;<sp/></highlight><highlight class="comment">//+F_total.M.Inverse(acc_root));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>rigid<sp/>body<sp/>inertia<sp/>of<sp/>the<sp/>segment,<sp/>expressed<sp/>in<sp/>the<sp/>segments<sp/>reference<sp/>frame<sp/>(tip)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a39f58acb118630987d2f394fa8c6237e" kindref="member">H</ref><sp/>=<sp/>segment.<ref refid="classKDL_1_1Segment_1ab446f0a1b302f854dd970b7062b47f33" kindref="member">getInertia</ref>();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//wrench<sp/>of<sp/>the<sp/>rigid<sp/>body<sp/>bias<sp/>forces<sp/>and<sp/>the<sp/>external<sp/>forces<sp/>on<sp/>the<sp/>segment<sp/>(in<sp/>body<sp/>coordinates,<sp/>tip)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//external<sp/>forces<sp/>are<sp/>taken<sp/>into<sp/>account<sp/>through<sp/>s.U.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Wrench" kindref="compound">Wrench</ref><sp/>FextLocal<sp/>=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a8b7150f6004603becc0426d132db6127" kindref="member">F_total</ref>.<ref refid="classKDL_1_1Frame_1a367668b3344ccfd50410ccc1ed30fa6f" kindref="member">M</ref>.<ref refid="classKDL_1_1Rotation_1a09a2ee554e814222ef86a8d1ce3267b1" kindref="member">Inverse</ref>()<sp/>*<sp/>f_ext[i];</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1af9873ee0645a80971fa67b7750a11543" kindref="member">U</ref><sp/>=<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a1cb8a02184e769cae974972a5de73b1f" kindref="member">v</ref><sp/>*<sp/>(s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a39f58acb118630987d2f394fa8c6237e" kindref="member">H</ref><sp/>*<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a1cb8a02184e769cae974972a5de73b1f" kindref="member">v</ref>)<sp/>-<sp/>FextLocal;<sp/></highlight><highlight class="comment">//f_ext[i];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(segment.<ref refid="classKDL_1_1Segment_1af91efa92f093de9d3faee52b519fa505" kindref="member">getJoint</ref>().<ref refid="classKDL_1_1Joint_1af85628b8637dd0458cae8b393f266ee9" kindref="member">getType</ref>()<sp/>!=<sp/><ref refid="classKDL_1_1Joint_1ad05f78142c8b73c3977f038a7a2c544ea96cef8f256bab905b5dc29ebbb54d089" kindref="member">Joint::Fixed</ref>)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classKDL_1_1ChainHdSolver__Vereshchagin_1af1ecda96a43e1bba22628559e6476647" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1af1ecda96a43e1bba22628559e6476647" kindref="member">ChainHdSolver_Vereshchagin::downwards_sweep</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Jacobian" kindref="compound">Jacobian</ref>&amp;<sp/>alfa,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>&amp;ff_torques)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a43c2223d9ab060bc26bfaf0b0c87e9f2" kindref="member">nj</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1ac7909354ecaad6b628066de8794b3678" kindref="member">ns</ref>;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>a<sp/>handle<sp/>for<sp/>the<sp/>segment<sp/>we<sp/>are<sp/>working<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info" kindref="compound">segment_info</ref>&amp;<sp/>s<sp/>=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a0d3bc25675c2118627ee86e1dd47d09b" kindref="member">results</ref>[i];</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//For<sp/>segment<sp/>N,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//tilde<sp/>is<sp/>in<sp/>the<sp/>segment<sp/>refframe<sp/>(tip,<sp/>not<sp/>joint<sp/>root)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//without<sp/>tilde<sp/>is<sp/>at<sp/>the<sp/>joint<sp/>root<sp/>(the<sp/>childs<sp/>tip!!!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//P_tilde<sp/>is<sp/>the<sp/>articulated<sp/>body<sp/>inertia</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//R_tilde<sp/>is<sp/>the<sp/>sum<sp/>of<sp/>external<sp/>and<sp/>coriolis/centrifugal<sp/>forces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//M<sp/>is<sp/>the<sp/>(unit)<sp/>acceleration<sp/>energy<sp/>already<sp/>generated<sp/>at<sp/>link<sp/>i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//G<sp/>is<sp/>the<sp/>(unit)<sp/>magnitude<sp/>of<sp/>the<sp/>constraint<sp/>forces<sp/>at<sp/>link<sp/>i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//E<sp/>are<sp/>the<sp/>(unit)<sp/>constraint<sp/>forces<sp/>due<sp/>to<sp/>the<sp/>constraints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1ac7909354ecaad6b628066de8794b3678" kindref="member">ns</ref>)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ab4d835f6d7815268eadd9f7980bb2994" kindref="member">P_tilde</ref><sp/>=<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a39f58acb118630987d2f394fa8c6237e" kindref="member">H</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a760dbd17a8fe6f9a0db20c3cadd00c25" kindref="member">R_tilde</ref><sp/>=<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1af9873ee0645a80971fa67b7750a11543" kindref="member">U</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a587e5a94a7c9df9d766d9a4452f89bcb" kindref="member">M</ref>.setZero();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ad50131f62f7d44006cc075683824b07f" kindref="member">G</ref>.setZero();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//changeBase(alfa_N,F_total.M.Inverse(),alfa_N2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>3;<sp/>r++)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a978760871e0c047d8af6d3769b1a5017" kindref="member">nc</ref>;<sp/>c++)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//copy<sp/>alfa<sp/>constrain<sp/>force<sp/>matrix<sp/>in<sp/>E~</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ac8348e4c7a71acedcaf35593b1136103" kindref="member">E_tilde</ref>(r,<sp/>c)<sp/>=<sp/>alfa(r<sp/>+<sp/>3,<sp/>c);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ac8348e4c7a71acedcaf35593b1136103" kindref="member">E_tilde</ref>(r<sp/>+<sp/>3,<sp/>c)<sp/>=<sp/>alfa(r,<sp/>c);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Change<sp/>the<sp/>reference<sp/>frame<sp/>of<sp/>alfa<sp/>to<sp/>the<sp/>segmentN<sp/>tip<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//F_Total<sp/>holds<sp/>end<sp/>effector<sp/>frame,<sp/>if<sp/>done<sp/>per<sp/>segment<sp/>bases<sp/>then<sp/>constraints<sp/>could<sp/>be<sp/>extended<sp/>to<sp/>all<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref><sp/>base_to_end<sp/>=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a8b7150f6004603becc0426d132db6127" kindref="member">F_total</ref>.<ref refid="classKDL_1_1Frame_1a367668b3344ccfd50410ccc1ed30fa6f" kindref="member">M</ref>.<ref refid="classKDL_1_1Rotation_1a09a2ee554e814222ef86a8d1ce3267b1" kindref="member">Inverse</ref>();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a978760871e0c047d8af6d3769b1a5017" kindref="member">nc</ref>;<sp/>c++)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Wrench" kindref="compound">Wrench</ref><sp/>col(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ac8348e4c7a71acedcaf35593b1136103" kindref="member">E_tilde</ref>(3,<sp/>c),<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ac8348e4c7a71acedcaf35593b1136103" kindref="member">E_tilde</ref>(4,<sp/>c),<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ac8348e4c7a71acedcaf35593b1136103" kindref="member">E_tilde</ref>(5,<sp/>c)),</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ac8348e4c7a71acedcaf35593b1136103" kindref="member">E_tilde</ref>(0,<sp/>c),<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ac8348e4c7a71acedcaf35593b1136103" kindref="member">E_tilde</ref>(1,<sp/>c),<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ac8348e4c7a71acedcaf35593b1136103" kindref="member">E_tilde</ref>(2,<sp/>c)));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col<sp/>=<sp/>base_to_end*col;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ac8348e4c7a71acedcaf35593b1136103" kindref="member">E_tilde</ref>.col(c)<sp/>&lt;&lt;<sp/>Eigen::Vector3d::Map(col.torque.data),<sp/>Eigen::Vector3d::Map(col.force.data);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//For<sp/>all<sp/>others:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Everything<sp/>should<sp/>expressed<sp/>in<sp/>the<sp/>body<sp/>coordinates<sp/>of<sp/>segment<sp/>i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info" kindref="compound">segment_info</ref>&amp;<sp/>child<sp/>=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a0d3bc25675c2118627ee86e1dd47d09b" kindref="member">results</ref>[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Copy<sp/>PZ<sp/>into<sp/>a<sp/>vector<sp/>so<sp/>we<sp/>can<sp/>do<sp/>matrix<sp/>manipulations,<sp/>put<sp/>torques<sp/>above<sp/>forces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a1843697965a4b576c5de1fdb1a0b9e0f" kindref="member">Vector6d</ref><sp/>vPZ;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vPZ<sp/>&lt;&lt;<sp/>Eigen::Vector3d::Map(child.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ab0b0f8c176fb8e4f713300648e3aa49c" kindref="member">PZ</ref>.<ref refid="classKDL_1_1Wrench_1ab725bbdf755cadd4a6718ea1f2ed1c1e" kindref="member">torque</ref>.<ref refid="classKDL_1_1Vector_1a97106b4583f8e2ecf39ed7682b945bd1" kindref="member">data</ref>),<sp/>Eigen::Vector3d::Map(child.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ab0b0f8c176fb8e4f713300648e3aa49c" kindref="member">PZ</ref>.<ref refid="classKDL_1_1Wrench_1a3f8bee8b5afd64870bf187fa6a4ea3fc" kindref="member">force</ref>.<ref refid="classKDL_1_1Vector_1a97106b4583f8e2ecf39ed7682b945bd1" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a46c31b38dc73e613cabb94a6a8dc6cec" kindref="member">Matrix6d</ref><sp/>PZDPZt;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PZDPZt.noalias()<sp/>=<sp/>vPZ<sp/>*<sp/>vPZ.transpose();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PZDPZt<sp/>/=<sp/>child.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a132a817c2f2ea6843248692c5cdaa5f0" kindref="member">D</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//equation<sp/>a)<sp/>(see<sp/>Vereshchagin89)<sp/>PZDPZt=[I,H;H&apos;,M]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Azamat:articulated<sp/>body<sp/>inertia<sp/>as<sp/>in<sp/>Featherstone<sp/>(7.19)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ab4d835f6d7815268eadd9f7980bb2994" kindref="member">P_tilde</ref><sp/>=<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a39f58acb118630987d2f394fa8c6237e" kindref="member">H</ref><sp/>+<sp/>child.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1af33b218dea4a1f73a3918f087e9d78e6" kindref="member">P</ref><sp/>-<sp/><ref refid="classKDL_1_1ArticulatedBodyInertia" kindref="compound">ArticulatedBodyInertia</ref>(PZDPZt.bottomRightCorner&lt;3,3&gt;(),<sp/>PZDPZt.topRightCorner&lt;3,3&gt;(),<sp/>PZDPZt.topLeftCorner&lt;3,3&gt;());</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//equation<sp/>b)<sp/>(see<sp/>Vereshchagin89)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Azamat:<sp/>bias<sp/>force<sp/>as<sp/>in<sp/>Featherstone<sp/>(7.20)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a760dbd17a8fe6f9a0db20c3cadd00c25" kindref="member">R_tilde</ref><sp/>=<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1af9873ee0645a80971fa67b7750a11543" kindref="member">U</ref><sp/>+<sp/>child.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a449391bbb164eaa133809581f9393910" kindref="member">R</ref><sp/>+<sp/>child.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a5cb5388f5c1fbbcbecee6b79ba4d3861" kindref="member">PC</ref><sp/>+<sp/>(child.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ab0b0f8c176fb8e4f713300648e3aa49c" kindref="member">PZ</ref><sp/>/<sp/>child.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a132a817c2f2ea6843248692c5cdaa5f0" kindref="member">D</ref>)<sp/>*<sp/>child.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a54bdfff587c8883d7dfe5ccc7d05ad38" kindref="member">u</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//equation<sp/>c)<sp/>(see<sp/>Vereshchagin89)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ac8348e4c7a71acedcaf35593b1136103" kindref="member">E_tilde</ref><sp/>=<sp/>child.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a4c3f3097172691fccb14c5442ab4c758" kindref="member">E</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Azamat:<sp/>equation<sp/>(c)<sp/>right<sp/>side<sp/>term</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ac8348e4c7a71acedcaf35593b1136103" kindref="member">E_tilde</ref>.noalias()<sp/>-=<sp/>(vPZ<sp/>*<sp/>child.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a8b067919c8c046f3d9134c042c99ffe1" kindref="member">EZ</ref>.transpose())<sp/>/<sp/>child.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a132a817c2f2ea6843248692c5cdaa5f0" kindref="member">D</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//equation<sp/>d)<sp/>(see<sp/>Vereshchagin89)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a587e5a94a7c9df9d766d9a4452f89bcb" kindref="member">M</ref><sp/>=<sp/>child.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a587e5a94a7c9df9d766d9a4452f89bcb" kindref="member">M</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Azamat:<sp/>equation<sp/>(d)<sp/>right<sp/>side<sp/>term</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a587e5a94a7c9df9d766d9a4452f89bcb" kindref="member">M</ref>.noalias()<sp/>-=<sp/>(child.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a8b067919c8c046f3d9134c042c99ffe1" kindref="member">EZ</ref><sp/>*<sp/>child.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a8b067919c8c046f3d9134c042c99ffe1" kindref="member">EZ</ref>.transpose())<sp/>/<sp/>child.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a132a817c2f2ea6843248692c5cdaa5f0" kindref="member">D</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//equation<sp/>e)<sp/>(see<sp/>Vereshchagin89)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ad50131f62f7d44006cc075683824b07f" kindref="member">G</ref><sp/>=<sp/>child.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ad50131f62f7d44006cc075683824b07f" kindref="member">G</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref><sp/>CiZDu<sp/>=<sp/>child.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ad49020c77474e81396b5b8afb9134011" kindref="member">C</ref><sp/>+<sp/>(child.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a7f186f40e148292974b8b8bdb7e72d40" kindref="member">Z</ref><sp/>/<sp/>child.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a132a817c2f2ea6843248692c5cdaa5f0" kindref="member">D</ref>)<sp/>*<sp/>child.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a54bdfff587c8883d7dfe5ccc7d05ad38" kindref="member">u</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a1843697965a4b576c5de1fdb1a0b9e0f" kindref="member">Vector6d</ref><sp/>vCiZDu;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vCiZDu<sp/>&lt;&lt;<sp/>Eigen::Vector3d::Map(CiZDu.rot.data),<sp/>Eigen::Vector3d::Map(CiZDu.vel.data);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ad50131f62f7d44006cc075683824b07f" kindref="member">G</ref>.noalias()<sp/>+=<sp/>child.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a4c3f3097172691fccb14c5442ab4c758" kindref="member">E</ref>.transpose()<sp/>*<sp/>vCiZDu;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Transform<sp/>all<sp/>results<sp/>to<sp/>joint<sp/>root<sp/>coordinates<sp/>of<sp/>segment<sp/>i<sp/>(==<sp/>body<sp/>coordinates<sp/>segment<sp/>i-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//equation<sp/>a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1af33b218dea4a1f73a3918f087e9d78e6" kindref="member">P</ref><sp/>=<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a457a240a1b26201a0b234fac1440390c" kindref="member">F</ref><sp/>*<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ab4d835f6d7815268eadd9f7980bb2994" kindref="member">P_tilde</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//equation<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a449391bbb164eaa133809581f9393910" kindref="member">R</ref><sp/>=<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a457a240a1b26201a0b234fac1440390c" kindref="member">F</ref><sp/>*<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a760dbd17a8fe6f9a0db20c3cadd00c25" kindref="member">R_tilde</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//equation<sp/>c),<sp/>in<sp/>matrix:<sp/>torques<sp/>above<sp/>forces,<sp/>so<sp/>switch<sp/>and<sp/>switch<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a978760871e0c047d8af6d3769b1a5017" kindref="member">nc</ref>;<sp/>c++)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Wrench" kindref="compound">Wrench</ref><sp/>col(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ac8348e4c7a71acedcaf35593b1136103" kindref="member">E_tilde</ref>(3,<sp/>c),<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ac8348e4c7a71acedcaf35593b1136103" kindref="member">E_tilde</ref>(4,<sp/>c),<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ac8348e4c7a71acedcaf35593b1136103" kindref="member">E_tilde</ref>(5,<sp/>c)),</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ac8348e4c7a71acedcaf35593b1136103" kindref="member">E_tilde</ref>(0,<sp/>c),<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ac8348e4c7a71acedcaf35593b1136103" kindref="member">E_tilde</ref>(1,<sp/>c),<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ac8348e4c7a71acedcaf35593b1136103" kindref="member">E_tilde</ref>(2,<sp/>c)));</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col<sp/>=<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a457a240a1b26201a0b234fac1440390c" kindref="member">F</ref>*col;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a4c3f3097172691fccb14c5442ab4c758" kindref="member">E</ref>.col(c)<sp/>&lt;&lt;<sp/>Eigen::Vector3d::Map(col.<ref refid="classKDL_1_1Wrench_1ab725bbdf755cadd4a6718ea1f2ed1c1e" kindref="member">torque</ref>.<ref refid="classKDL_1_1Vector_1a97106b4583f8e2ecf39ed7682b945bd1" kindref="member">data</ref>),<sp/>Eigen::Vector3d::Map(col.<ref refid="classKDL_1_1Wrench_1a3f8bee8b5afd64870bf187fa6a4ea3fc" kindref="member">force</ref>.<ref refid="classKDL_1_1Vector_1a97106b4583f8e2ecf39ed7682b945bd1" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//needed<sp/>for<sp/>next<sp/>recursion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ab0b0f8c176fb8e4f713300648e3aa49c" kindref="member">PZ</ref><sp/>=<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1af33b218dea4a1f73a3918f087e9d78e6" kindref="member">P</ref><sp/>*<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a7f186f40e148292974b8b8bdb7e72d40" kindref="member">Z</ref>;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a666f7f03947e8d6af7a6a0f34b187f39" kindref="member">chain</ref>.<ref refid="classKDL_1_1Chain_1a07a9792d442b7712335417a9eef81cbb" kindref="member">getSegment</ref>(i<sp/>-<sp/>1).<ref refid="classKDL_1_1Segment_1af91efa92f093de9d3faee52b519fa505" kindref="member">getJoint</ref>().<ref refid="classKDL_1_1Joint_1af85628b8637dd0458cae8b393f266ee9" kindref="member">getType</ref>()<sp/>!=<sp/><ref refid="classKDL_1_1Joint_1ad05f78142c8b73c3977f038a7a2c544ea96cef8f256bab905b5dc29ebbb54d089" kindref="member">Joint::Fixed</ref>)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a132a817c2f2ea6843248692c5cdaa5f0" kindref="member">D</ref><sp/>=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a666f7f03947e8d6af7a6a0f34b187f39" kindref="member">chain</ref>.<ref refid="classKDL_1_1Chain_1a07a9792d442b7712335417a9eef81cbb" kindref="member">getSegment</ref>(i<sp/>-<sp/>1).<ref refid="classKDL_1_1Segment_1af91efa92f093de9d3faee52b519fa505" kindref="member">getJoint</ref>().<ref refid="classKDL_1_1Joint_1a2347eef9e468ff86371f3f8bf7493cd9" kindref="member">getInertia</ref>()<sp/>+<sp/><ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a7f186f40e148292974b8b8bdb7e72d40" kindref="member">Z</ref>,<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ab0b0f8c176fb8e4f713300648e3aa49c" kindref="member">PZ</ref>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a132a817c2f2ea6843248692c5cdaa5f0" kindref="member">D</ref><sp/>=<sp/><ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a7f186f40e148292974b8b8bdb7e72d40" kindref="member">Z</ref>,<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ab0b0f8c176fb8e4f713300648e3aa49c" kindref="member">PZ</ref>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a5cb5388f5c1fbbcbecee6b79ba4d3861" kindref="member">PC</ref><sp/>=<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1af33b218dea4a1f73a3918f087e9d78e6" kindref="member">P</ref><sp/>*<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ad49020c77474e81396b5b8afb9134011" kindref="member">C</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//u=(Q-Z(R+PC)=sum<sp/>of<sp/>external<sp/>forces<sp/>along<sp/>the<sp/>joint<sp/>axes,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//R<sp/>are<sp/>the<sp/>forces<sp/>coming<sp/>from<sp/>the<sp/>children,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Q<sp/>is<sp/>taken<sp/>zero<sp/>(do<sp/>we<sp/>need<sp/>to<sp/>take<sp/>the<sp/>previous<sp/>calculated<sp/>torques?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//projection<sp/>of<sp/>coriolis<sp/>and<sp/>centrepital<sp/>forces<sp/>into<sp/>joint<sp/>subspace<sp/>(0<sp/>0<sp/>Z)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1aae5819aa1f4c67603a8efc1f9419ad1a" kindref="member">totalBias</ref><sp/>=<sp/>-<ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a7f186f40e148292974b8b8bdb7e72d40" kindref="member">Z</ref>,<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a449391bbb164eaa133809581f9393910" kindref="member">R</ref><sp/>+<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a5cb5388f5c1fbbcbecee6b79ba4d3861" kindref="member">PC</ref>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a54bdfff587c8883d7dfe5ccc7d05ad38" kindref="member">u</ref><sp/>=<sp/>ff_torques(j)<sp/>+<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1aae5819aa1f4c67603a8efc1f9419ad1a" kindref="member">totalBias</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Matrix<sp/>form<sp/>of<sp/>Z,<sp/>put<sp/>rotations<sp/>above<sp/>translations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a1843697965a4b576c5de1fdb1a0b9e0f" kindref="member">Vector6d</ref><sp/>vZ;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vZ<sp/>&lt;&lt;<sp/>Eigen::Vector3d::Map(s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a7f186f40e148292974b8b8bdb7e72d40" kindref="member">Z</ref>.<ref refid="classKDL_1_1Twist_1a5ab2bb436b67c902e9c7735c4df16eba" kindref="member">rot</ref>.<ref refid="classKDL_1_1Vector_1a97106b4583f8e2ecf39ed7682b945bd1" kindref="member">data</ref>),<sp/>Eigen::Vector3d::Map(s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a7f186f40e148292974b8b8bdb7e72d40" kindref="member">Z</ref>.<ref refid="classKDL_1_1Twist_1adda560fbd643ba2448d519fce626b680" kindref="member">vel</ref>.<ref refid="classKDL_1_1Vector_1a97106b4583f8e2ecf39ed7682b945bd1" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a8b067919c8c046f3d9134c042c99ffe1" kindref="member">EZ</ref>.noalias()<sp/>=<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a4c3f3097172691fccb14c5442ab4c758" kindref="member">E</ref>.transpose()<sp/>*<sp/>vZ;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a666f7f03947e8d6af7a6a0f34b187f39" kindref="member">chain</ref>.<ref refid="classKDL_1_1Chain_1a07a9792d442b7712335417a9eef81cbb" kindref="member">getSegment</ref>(i<sp/>-<sp/>1).<ref refid="classKDL_1_1Segment_1af91efa92f093de9d3faee52b519fa505" kindref="member">getJoint</ref>().<ref refid="classKDL_1_1Joint_1af85628b8637dd0458cae8b393f266ee9" kindref="member">getType</ref>()<sp/>!=<sp/><ref refid="classKDL_1_1Joint_1ad05f78142c8b73c3977f038a7a2c544ea96cef8f256bab905b5dc29ebbb54d089" kindref="member">Joint::Fixed</ref>)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j--;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="classKDL_1_1ChainHdSolver__Vereshchagin_1aa7141a076a659b749078eb96e32bb643" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1aa7141a076a659b749078eb96e32bb643" kindref="member">ChainHdSolver_Vereshchagin::constraint_calculation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref>&amp;<sp/>beta)</highlight></codeline>
<codeline lineno="265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//equation<sp/>f)<sp/>nu<sp/>=<sp/>M_0_inverse*(beta_N<sp/>-<sp/>E0_tilde`*acc0<sp/>-<sp/>G0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//M_0_inverse,<sp/>always<sp/>nc*nc<sp/>symmetric<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;M0:<sp/>&quot;&lt;&lt;results[0].M&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//results[0].M-=Eigen::MatrixXd::Identity(nc,nc);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;augmented<sp/>M0:<sp/>&quot;&lt;&lt;results[0].M&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ToDo:<sp/>Need<sp/>to<sp/>check<sp/>ill<sp/>conditions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//M_0_inverse=results[0].M.inverse();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceKDL_1a018cd64c810b4538db502263927b2071" kindref="member">svd_eigen_HH</ref>(<ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a0d3bc25675c2118627ee86e1dd47d09b" kindref="member">results</ref>[0].M,<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1ac4bde5d96159b6287e91ebcd71f6806a" kindref="member">Um</ref>,<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a47b4a7c7b7e12dc6eb44de4921e8588a" kindref="member">Sm</ref>,<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1abc5a2daa9a957d31a50da6fa48dd9519" kindref="member">Vm</ref>,<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a7bdacc6035db9e281786af0a3f415e29" kindref="member">tmpm</ref>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//truncated<sp/>svd,<sp/>what<sp/>would<sp/>sdls,<sp/>dls<sp/>physically<sp/>mean?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a978760871e0c047d8af6d3769b1a5017" kindref="member">nc</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a47b4a7c7b7e12dc6eb44de4921e8588a" kindref="member">Sm</ref>(i)<sp/>&lt;<sp/>1e-14)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a47b4a7c7b7e12dc6eb44de4921e8588a" kindref="member">Sm</ref>(i)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a47b4a7c7b7e12dc6eb44de4921e8588a" kindref="member">Sm</ref>(i)<sp/>=<sp/>1<sp/>/<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a47b4a7c7b7e12dc6eb44de4921e8588a" kindref="member">Sm</ref>(i);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a0d3bc25675c2118627ee86e1dd47d09b" kindref="member">results</ref>[0].M.noalias()<sp/>=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1abc5a2daa9a957d31a50da6fa48dd9519" kindref="member">Vm</ref><sp/>*<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a47b4a7c7b7e12dc6eb44de4921e8588a" kindref="member">Sm</ref>.asDiagonal();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1adb8a0dc3ec545bc9e1dde369908c6bcb" kindref="member">M_0_inverse</ref>.noalias()<sp/>=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a0d3bc25675c2118627ee86e1dd47d09b" kindref="member">results</ref>[0].M<sp/>*<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1ac4bde5d96159b6287e91ebcd71f6806a" kindref="member">Um</ref>.transpose();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//results[0].M.ldlt().solve(Eigen::MatrixXd::Identity(nc,nc),&amp;M_0_inverse);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//results[0].M.computeInverse(&amp;M_0_inverse);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a1843697965a4b576c5de1fdb1a0b9e0f" kindref="member">Vector6d</ref><sp/>acc;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>acc<sp/>&lt;&lt;<sp/>Eigen::Vector3d::Map(<ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1aba437b36078a7a5bbdfa2f47528b867b" kindref="member">acc_root</ref>.<ref refid="classKDL_1_1Twist_1a5ab2bb436b67c902e9c7735c4df16eba" kindref="member">rot</ref>.<ref refid="classKDL_1_1Vector_1a97106b4583f8e2ecf39ed7682b945bd1" kindref="member">data</ref>),<sp/>Eigen::Vector3d::Map(<ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1aba437b36078a7a5bbdfa2f47528b867b" kindref="member">acc_root</ref>.<ref refid="classKDL_1_1Twist_1adda560fbd643ba2448d519fce626b680" kindref="member">vel</ref>.<ref refid="classKDL_1_1Vector_1a97106b4583f8e2ecf39ed7682b945bd1" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1ac7ff4cb952f9a644a9e248e864a10c8e" kindref="member">nu_sum</ref>.noalias()<sp/>=<sp/>-(<ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a0d3bc25675c2118627ee86e1dd47d09b" kindref="member">results</ref>[0].E_tilde.transpose()<sp/>*<sp/>acc);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//nu_sum.setZero();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1ac7ff4cb952f9a644a9e248e864a10c8e" kindref="member">nu_sum</ref><sp/>+=<sp/>beta.data;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1ac7ff4cb952f9a644a9e248e864a10c8e" kindref="member">nu_sum</ref><sp/>-=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a0d3bc25675c2118627ee86e1dd47d09b" kindref="member">results</ref>[0].G;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//equation<sp/>f)<sp/>nu<sp/>=<sp/>M_0_inverse*(beta_N<sp/>-<sp/>E0_tilde`*acc0<sp/>-<sp/>G0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1ab4acd2baccbe9851a48a8be542f41769" kindref="member">nu</ref>.noalias()<sp/>=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1adb8a0dc3ec545bc9e1dde369908c6bcb" kindref="member">M_0_inverse</ref><sp/>*<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1ac7ff4cb952f9a644a9e248e864a10c8e" kindref="member">nu_sum</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a1673eaf57a79e6bb3ef1d009bd9d70e4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a1673eaf57a79e6bb3ef1d009bd9d70e4" kindref="member">ChainHdSolver_Vereshchagin::final_upwards_sweep</ref>(<ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>&amp;q_dotdot,<sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>&amp;constraint_torques)</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1ac7909354ecaad6b628066de8794b3678" kindref="member">ns</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info" kindref="compound">segment_info</ref>&amp;<sp/>s<sp/>=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a0d3bc25675c2118627ee86e1dd47d09b" kindref="member">results</ref>[i];</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Calculation<sp/>of<sp/>joint<sp/>and<sp/>segment<sp/>accelerations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//equation<sp/>g)<sp/>qdotdot[i]<sp/>=<sp/>D^-1*(Q<sp/>-<sp/>Z&apos;(R<sp/>+<sp/>P(C<sp/>+<sp/>acc[i-1])<sp/>+<sp/>E*nu))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>=<sp/>D^-1(u<sp/>-<sp/>Z&apos;(P*acc[i-1]<sp/>+<sp/>E*nu)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref><sp/>a_g;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref><sp/>a_p;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_p<sp/>=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1aba437b36078a7a5bbdfa2f47528b867b" kindref="member">acc_root</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_p<sp/>=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a0d3bc25675c2118627ee86e1dd47d09b" kindref="member">results</ref>[i<sp/>-<sp/>1].acc;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>contribution<sp/>of<sp/>the<sp/>constraint<sp/>forces<sp/>at<sp/>segment<sp/>i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a1843697965a4b576c5de1fdb1a0b9e0f" kindref="member">Vector6d</ref><sp/>tmp<sp/>=<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a4c3f3097172691fccb14c5442ab4c758" kindref="member">E</ref>*<ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1ab4acd2baccbe9851a48a8be542f41769" kindref="member">nu</ref>;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Wrench" kindref="compound">Wrench</ref><sp/>constraint_force<sp/>=<sp/><ref refid="classKDL_1_1Wrench" kindref="compound">Wrench</ref>(<ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(tmp(3),<sp/>tmp(4),<sp/>tmp(5)),</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>(tmp(0),<sp/>tmp(1),<sp/>tmp(2)));</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//acceleration<sp/>components<sp/>are<sp/>also<sp/>computed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Contribution<sp/>of<sp/>the<sp/>acceleration<sp/>of<sp/>the<sp/>parent<sp/>(i-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Wrench" kindref="compound">Wrench</ref><sp/>parent_force<sp/>=<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1af33b218dea4a1f73a3918f087e9d78e6" kindref="member">P</ref>*a_p;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>parent_forceProjection<sp/>=<sp/>-<ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a7f186f40e148292974b8b8bdb7e72d40" kindref="member">Z</ref>,<sp/>parent_force);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>parentAccComp<sp/>=<sp/>parent_forceProjection<sp/>/<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a132a817c2f2ea6843248692c5cdaa5f0" kindref="member">D</ref>;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>constraint<sp/>force<sp/>and<sp/>acceleration<sp/>force<sp/>projected<sp/>on<sp/>the<sp/>joint<sp/>axes<sp/>-&gt;<sp/>axis<sp/>torque/force</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint_torques(j)<sp/>=<sp/>-<ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a7f186f40e148292974b8b8bdb7e72d40" kindref="member">Z</ref>,<sp/>constraint_force);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>result<sp/>should<sp/>be<sp/>the<sp/>torque<sp/>originating<sp/>from<sp/>the<sp/>end-effector<sp/>constraints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>torque<sp/>on<sp/>the<sp/>joint<sp/>resulting<sp/>from<sp/>the<sp/>parent<sp/>forces,<sp/>constraint<sp/>forces<sp/>and<sp/>nullspace<sp/>forces.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a9b951d790bf39fd418208872d390cea4" kindref="member">total_torques</ref>(j)<sp/>=<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a54bdfff587c8883d7dfe5ccc7d05ad38" kindref="member">u</ref><sp/>+<sp/>parent_forceProjection<sp/>+<sp/>constraint_torques(j);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>q_dotdot(j)<sp/>is<sp/>also<sp/>equal<sp/>to:<sp/>total_torques(j)<sp/>/<sp/>s.D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a2177d7318b5885ffce1b2b384303df6d" kindref="member">constAccComp</ref><sp/>=<sp/>constraint_torques(j)<sp/>/<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a132a817c2f2ea6843248692c5cdaa5f0" kindref="member">D</ref>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1abb007ef84f8cef456fca26c10c1e5cee" kindref="member">nullspaceAccComp</ref><sp/>=<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a54bdfff587c8883d7dfe5ccc7d05ad38" kindref="member">u</ref><sp/>/<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a132a817c2f2ea6843248692c5cdaa5f0" kindref="member">D</ref>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>joint<sp/>space<sp/>acceleration<sp/>resulting<sp/>from<sp/>accelerations<sp/>of<sp/>parent<sp/>joints,<sp/>constraint<sp/>forces<sp/>and<sp/>nullspace<sp/>forces.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q_dotdot(j)<sp/>=<sp/>(s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1abb007ef84f8cef456fca26c10c1e5cee" kindref="member">nullspaceAccComp</ref><sp/>+<sp/>parentAccComp<sp/>+<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a2177d7318b5885ffce1b2b384303df6d" kindref="member">constAccComp</ref>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>segment&apos;s<sp/>spatial<sp/>acceleration<sp/>in<sp/>link<sp/>distal-tip<sp/>coordinates.<sp/>For<sp/>use<sp/>needs<sp/>to<sp/>be<sp/>transformed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a56734b332c5764f1819f21b900ef7f82" kindref="member">acc</ref><sp/>=<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a457a240a1b26201a0b234fac1440390c" kindref="member">F</ref>.<ref refid="classKDL_1_1Frame_1ac508fa4e7c59527f8f377a3c6c225d12" kindref="member">Inverse</ref>(a_p<sp/>+<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1a7f186f40e148292974b8b8bdb7e72d40" kindref="member">Z</ref><sp/>*<sp/>q_dotdot(j)<sp/>+<sp/>s.<ref refid="structKDL_1_1ChainHdSolver__Vereshchagin_1_1segment__info_1ad49020c77474e81396b5b8afb9134011" kindref="member">C</ref>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a666f7f03947e8d6af7a6a0f34b187f39" kindref="member">chain</ref>.<ref refid="classKDL_1_1Chain_1a07a9792d442b7712335417a9eef81cbb" kindref="member">getSegment</ref>(i<sp/>-<sp/>1).<ref refid="classKDL_1_1Segment_1af91efa92f093de9d3faee52b519fa505" kindref="member">getJoint</ref>().<ref refid="classKDL_1_1Joint_1af85628b8637dd0458cae8b393f266ee9" kindref="member">getType</ref>()<sp/>!=<sp/><ref refid="classKDL_1_1Joint_1ad05f78142c8b73c3977f038a7a2c544ea96cef8f256bab905b5dc29ebbb54d089" kindref="member">Joint::Fixed</ref>)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>Cartesian<sp/>acceleration<sp/>of<sp/>links<sp/>in<sp/>robot<sp/>base<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="classKDL_1_1ChainHdSolver__Vereshchagin_1aacddb2d51c10a9f29775306728a621d6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1aacddb2d51c10a9f29775306728a621d6" kindref="member">ChainHdSolver_Vereshchagin::getTransformedLinkAcceleration</ref>(<ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">Twists</ref>&amp;<sp/>x_dotdot)</highlight></codeline>
<codeline lineno="353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(x_dotdot.<ref refid="cpp/container/vector/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>()<sp/>==<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1ac7909354ecaad6b628066de8794b3678" kindref="member">ns</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>x_dotdot[0]<sp/>=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1aba437b36078a7a5bbdfa2f47528b867b" kindref="member">acc_root</ref>;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1ac7909354ecaad6b628066de8794b3678" kindref="member">ns</ref><sp/>+<sp/>1;<sp/>i++)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_dotdot[i]<sp/>=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a0d3bc25675c2118627ee86e1dd47d09b" kindref="member">results</ref>[i].F_base.M<sp/>*<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a0d3bc25675c2118627ee86e1dd47d09b" kindref="member">results</ref>[i].acc;</highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>total<sp/>torque<sp/>acting<sp/>on<sp/>each<sp/>joint<sp/>(constraints<sp/>+<sp/>nature<sp/>+<sp/>external<sp/>forces)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a1ce68d9c9974648498a7e28ab8cebb48" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a1ce68d9c9974648498a7e28ab8cebb48" kindref="member">ChainHdSolver_Vereshchagin::getTotalTorque</ref>(<ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref><sp/>&amp;total_tau)</highlight></codeline>
<codeline lineno="362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(total_tau.<ref refid="classKDL_1_1JntArray_1a59dff4a2f3fa4adedb55c3384238dc74" kindref="member">data</ref>.size()<sp/>==<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a9b951d790bf39fd418208872d390cea4" kindref="member">total_torques</ref>.size());</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>total_tau.<ref refid="classKDL_1_1JntArray_1a59dff4a2f3fa4adedb55c3384238dc74" kindref="member">data</ref><sp/>=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a9b951d790bf39fd418208872d390cea4" kindref="member">total_torques</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>magnitude<sp/>of<sp/>the<sp/>constraint<sp/>forces<sp/>acting<sp/>on<sp/>the<sp/>end-effector:<sp/>Lagrange<sp/>Multiplier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a99676a8e2f3690041e5e609d6808b50e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1a99676a8e2f3690041e5e609d6808b50e" kindref="member">ChainHdSolver_Vereshchagin::getContraintForceMagnitude</ref>(Eigen::VectorXd<sp/>&amp;nu_)</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(nu_.size()<sp/>==<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1ab4acd2baccbe9851a48a8be542f41769" kindref="member">nu</ref>.size());</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>nu_<sp/>=<sp/><ref refid="classKDL_1_1ChainHdSolver__Vereshchagin_1ab4acd2baccbe9851a48a8be542f41769" kindref="member">nu</ref>;</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="375"><highlight class="comment">void<sp/>ChainHdSolver_Vereshchagin::getLinkCartesianPose(Frames&amp;<sp/>x_base)</highlight></codeline>
<codeline lineno="376"><highlight class="comment">{</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ns;<sp/>i++)</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_base[i]<sp/>=<sp/>results[i<sp/>+<sp/>1].F_base;</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/><sp/><sp/><sp/>return;</highlight></codeline>
<codeline lineno="382"><highlight class="comment">}</highlight></codeline>
<codeline lineno="383"><highlight class="comment"></highlight></codeline>
<codeline lineno="384"><highlight class="comment">void<sp/>ChainHdSolver_Vereshchagin::getLinkCartesianVelocity(Twists&amp;<sp/>xDot_base)</highlight></codeline>
<codeline lineno="385"><highlight class="comment">{</highlight></codeline>
<codeline lineno="386"><highlight class="comment"></highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ns;<sp/>i++)</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xDot_base[i]<sp/>=<sp/>results[i<sp/>+<sp/>1].F_base.M<sp/>*<sp/>results[i<sp/>+<sp/>1].v;</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/><sp/><sp/><sp/>return;</highlight></codeline>
<codeline lineno="392"><highlight class="comment">}</highlight></codeline>
<codeline lineno="393"><highlight class="comment"></highlight></codeline>
<codeline lineno="394"><highlight class="comment">void<sp/>ChainHdSolver_Vereshchagin::getLinkCartesianAcceleration(Twists&amp;<sp/>xDotDot_base)</highlight></codeline>
<codeline lineno="395"><highlight class="comment">{</highlight></codeline>
<codeline lineno="396"><highlight class="comment"></highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ns;<sp/>i++)</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xDotDot_base[i]<sp/>=<sp/>results[i<sp/>+<sp/>1].F_base.M<sp/>*<sp/>results[i<sp/>+<sp/>1].acc;</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//std::cout<sp/>&lt;&lt;<sp/>&quot;XDotDot_base[i]<sp/>&quot;<sp/>&lt;&lt;<sp/>xDotDot_base[i]<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/><sp/><sp/><sp/>return;</highlight></codeline>
<codeline lineno="403"><highlight class="comment">}</highlight></codeline>
<codeline lineno="404"><highlight class="comment"></highlight></codeline>
<codeline lineno="405"><highlight class="comment">void<sp/>ChainHdSolver_Vereshchagin::getLinkPose(Frames&amp;<sp/>x_local)</highlight></codeline>
<codeline lineno="406"><highlight class="comment">{</highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ns;<sp/>i++)</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_local[i]<sp/>=<sp/>results[i<sp/>+<sp/>1].F;</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/><sp/><sp/><sp/>return;</highlight></codeline>
<codeline lineno="412"><highlight class="comment">}</highlight></codeline>
<codeline lineno="413"><highlight class="comment"></highlight></codeline>
<codeline lineno="414"><highlight class="comment">void<sp/>ChainHdSolver_Vereshchagin::getLinkVelocity(Twists&amp;<sp/>xDot_local)</highlight></codeline>
<codeline lineno="415"><highlight class="comment">{</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ns;<sp/>i++)</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xDot_local[i]<sp/>=<sp/>results[i<sp/>+<sp/>1].v;</highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/><sp/><sp/><sp/>return;</highlight></codeline>
<codeline lineno="421"><highlight class="comment"></highlight></codeline>
<codeline lineno="422"><highlight class="comment">}</highlight></codeline>
<codeline lineno="423"><highlight class="comment"></highlight></codeline>
<codeline lineno="424"><highlight class="comment">void<sp/>ChainHdSolver_Vereshchagin::getLinkAcceleration(Twists&amp;<sp/>xDotdot_local)</highlight></codeline>
<codeline lineno="425"><highlight class="comment">{</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ns;<sp/>i++)</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xDotdot_local[i]<sp/>=<sp/>results[i<sp/>+<sp/>1].acc;</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/><sp/><sp/><sp/>return;</highlight></codeline>
<codeline lineno="431"><highlight class="comment"></highlight></codeline>
<codeline lineno="432"><highlight class="comment">}</highlight></codeline>
<codeline lineno="433"><highlight class="comment"></highlight></codeline>
<codeline lineno="434"><highlight class="comment">void<sp/>ChainHdSolver_Vereshchagin::getJointBiasAcceleration(JntArray&amp;<sp/>bias_q_dotdot)</highlight></codeline>
<codeline lineno="435"><highlight class="comment">{</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ns;<sp/>i++)</highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//this<sp/>is<sp/>only<sp/>force</highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>tmp<sp/>=<sp/>results[i<sp/>+<sp/>1].totalBias;</highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//this<sp/>is<sp/>acceleration</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bias_q_dotdot(i)<sp/>=<sp/>tmp<sp/>/<sp/>results[i<sp/>+<sp/>1].D;</highlight></codeline>
<codeline lineno="442"><highlight class="comment"></highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//s.totalBias<sp/>=<sp/>-<sp/>dot(s.Z,<sp/>s.R<sp/>+<sp/>s.PC);</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//std::cout<sp/>&lt;&lt;<sp/>&quot;totalBiasAccComponent&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>&quot;:<sp/>&quot;<sp/>&lt;&lt;<sp/>bias_q_dotdot(i)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//bias_q_dotdot(i)<sp/>=<sp/>s.totalBias/s.D</highlight></codeline>
<codeline lineno="446"><highlight class="comment"></highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/><sp/><sp/><sp/>return;</highlight></codeline>
<codeline lineno="449"><highlight class="comment"></highlight></codeline>
<codeline lineno="450"><highlight class="comment">}</highlight></codeline>
<codeline lineno="451"><highlight class="comment"></highlight></codeline>
<codeline lineno="452"><highlight class="comment">void<sp/>ChainHdSolver_Vereshchagin::getJointConstraintAcceleration(JntArray&amp;<sp/>constraint_q_dotdot)</highlight></codeline>
<codeline lineno="453"><highlight class="comment">{</highlight></codeline>
<codeline lineno="454"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ns;<sp/>i++)</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint_q_dotdot(i)<sp/>=<sp/>results[i<sp/>+<sp/>1].constAccComp;</highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//double<sp/>tmp<sp/>=<sp/>results[i<sp/>+<sp/>1].u;</highlight></codeline>
<codeline lineno="458"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//s.u<sp/>=<sp/>torques(j)<sp/>+<sp/>s.totalBias;</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;s.constraintAccComp&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>&quot;:<sp/>&quot;<sp/>&lt;&lt;<sp/>results[i+1].constAccComp<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//nullspace_q_dotdot(i)<sp/>=<sp/>s.u/s.D</highlight></codeline>
<codeline lineno="461"><highlight class="comment"></highlight></codeline>
<codeline lineno="462"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="comment"><sp/><sp/><sp/><sp/>return;</highlight></codeline>
<codeline lineno="464"><highlight class="comment"></highlight></codeline>
<codeline lineno="465"><highlight class="comment"></highlight></codeline>
<codeline lineno="466"><highlight class="comment">}</highlight></codeline>
<codeline lineno="467"><highlight class="comment"></highlight></codeline>
<codeline lineno="468"><highlight class="comment">//Check<sp/>the<sp/>name<sp/>it<sp/>does<sp/>not<sp/>seem<sp/>to<sp/>be<sp/>appropriate</highlight></codeline>
<codeline lineno="469"><highlight class="comment"></highlight></codeline>
<codeline lineno="470"><highlight class="comment">void<sp/>ChainHdSolver_Vereshchagin::getJointNullSpaceAcceleration(JntArray&amp;<sp/>nullspace_q_dotdot)</highlight></codeline>
<codeline lineno="471"><highlight class="comment">{</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ns;<sp/>i++)</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nullspace_q_dotdot(i)<sp/>=<sp/>results[i<sp/>+<sp/>1].nullspaceAccComp;</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//double<sp/>tmp<sp/>=<sp/>results[i<sp/>+<sp/>1].u;</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//s.u<sp/>=<sp/>torques(j)<sp/>+<sp/>s.totalBias;</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//std::cout<sp/>&lt;&lt;<sp/>&quot;s.nullSpaceAccComp&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>&quot;:<sp/>&quot;<sp/>&lt;&lt;<sp/>results[i+1].nullspaceAccComp<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//nullspace_q_dotdot(i)<sp/>=<sp/>s.u/s.D</highlight></codeline>
<codeline lineno="479"><highlight class="comment"></highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/><sp/><sp/><sp/>return;</highlight></codeline>
<codeline lineno="482"><highlight class="comment"></highlight></codeline>
<codeline lineno="483"><highlight class="comment"></highlight></codeline>
<codeline lineno="484"><highlight class="comment">}</highlight></codeline>
<codeline lineno="485"><highlight class="comment"></highlight></codeline>
<codeline lineno="486"><highlight class="comment">//This<sp/>is<sp/>not<sp/>only<sp/>a<sp/>bias<sp/>force<sp/>energy<sp/>but<sp/>also<sp/>includes<sp/>generalized<sp/>forces</highlight></codeline>
<codeline lineno="487"><highlight class="comment">//change<sp/>type<sp/>of<sp/>parameter<sp/>G</highlight></codeline>
<codeline lineno="488"><highlight class="comment">//this<sp/>method<sp/>should<sp/>return<sp/>array<sp/>of<sp/>G&apos;s</highlight></codeline>
<codeline lineno="489"><highlight class="comment"></highlight></codeline>
<codeline lineno="490"><highlight class="comment">void<sp/>ChainHdSolver_Vereshchagin::getLinkBiasForceAcceleratoinEnergy(Eigen::VectorXd&amp;<sp/>G)</highlight></codeline>
<codeline lineno="491"><highlight class="comment">{</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ns;<sp/>i++)</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G<sp/>=<sp/>results[i<sp/>+<sp/>1].G;</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//double<sp/>tmp<sp/>=<sp/>results[i<sp/>+<sp/>1].u;</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//s.u<sp/>=<sp/>torques(j)<sp/>+<sp/>s.totalBias;</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//std::cout<sp/>&lt;&lt;<sp/>&quot;s.G<sp/>&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>&quot;:<sp/><sp/>&quot;<sp/>&lt;&lt;<sp/>results[i+1].G<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//nullspace_q_dotdot(i)<sp/>=<sp/>s.u/s.D</highlight></codeline>
<codeline lineno="499"><highlight class="comment"></highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/><sp/><sp/><sp/>return;</highlight></codeline>
<codeline lineno="502"><highlight class="comment"></highlight></codeline>
<codeline lineno="503"><highlight class="comment">}</highlight></codeline>
<codeline lineno="504"><highlight class="comment"></highlight></codeline>
<codeline lineno="505"><highlight class="comment">//this<sp/>method<sp/>should<sp/>return<sp/>array<sp/>of<sp/>R&apos;s</highlight></codeline>
<codeline lineno="506"><highlight class="comment"></highlight></codeline>
<codeline lineno="507"><highlight class="comment">void<sp/>ChainHdSolver_Vereshchagin::getLinkBiasForceMatrix(Wrenches&amp;<sp/>R_tilde)</highlight></codeline>
<codeline lineno="508"><highlight class="comment">{</highlight></codeline>
<codeline lineno="509"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ns;<sp/>i++)</highlight></codeline>
<codeline lineno="510"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_tilde[i]<sp/>=<sp/>results[i<sp/>+<sp/>1].R_tilde;</highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Azamat:<sp/>bias<sp/>force<sp/>as<sp/>in<sp/>Featherstone<sp/>(7.20)</highlight></codeline>
<codeline lineno="513"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//s.R_tilde<sp/>=<sp/>s.U<sp/>+<sp/>child.R<sp/>+<sp/>child.PC<sp/>+<sp/>child.PZ<sp/>/<sp/>child.D<sp/>*<sp/>child.u;</highlight></codeline>
<codeline lineno="514"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;s.R_tilde<sp/>&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>&quot;:<sp/><sp/>&quot;<sp/>&lt;&lt;<sp/>results[i<sp/>+<sp/>1].R_tilde<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="comment"><sp/><sp/><sp/><sp/>return;</highlight></codeline>
<codeline lineno="517"><highlight class="comment">}</highlight></codeline>
<codeline lineno="518"><highlight class="comment"></highlight></codeline>
<codeline lineno="519"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal">}</highlight><highlight class="comment">//namespace</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/chainhdsolver_vereshchagin.cpp"/>
  </compounddef>
</doxygen>
