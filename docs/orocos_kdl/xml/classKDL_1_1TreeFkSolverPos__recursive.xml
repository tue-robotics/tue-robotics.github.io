<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classKDL_1_1TreeFkSolverPos__recursive" kind="class" language="C++" prot="public">
    <compoundname>KDL::TreeFkSolverPos_recursive</compoundname>
    <basecompoundref refid="classKDL_1_1TreeFkSolverPos" prot="public" virt="non-virtual">KDL::TreeFkSolverPos</basecompoundref>
    <includes refid="treefksolverpos__recursive_8hpp" local="no">treefksolverpos_recursive.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classKDL_1_1TreeFkSolverPos__recursive_1a32e764248fe50e2f5558cb8aee85d1e1" prot="private" static="no" mutable="no">
        <type>const <ref refid="classKDL_1_1Tree" kindref="compound">Tree</ref></type>
        <definition>const Tree KDL::TreeFkSolverPos_recursive::tree</definition>
        <argsstring></argsstring>
        <name>tree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/treefksolverpos_recursive.hpp" line="46" column="20" bodyfile="src/treefksolverpos_recursive.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classKDL_1_1TreeFkSolverPos__recursive_1a1d88124902985f80eb5144ac78cd9ab6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int KDL::TreeFkSolverPos_recursive::JntToCart</definition>
        <argsstring>(const JntArray &amp;q_in, Frame &amp;p_out, std::string segmentName)</argsstring>
        <name>JntToCart</name>
        <reimplements refid="classKDL_1_1TreeFkSolverPos_1a67adfad687f9f1e2e9fd5bca8eb5bb9a">JntToCart</reimplements>
        <param>
          <type>const <ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref> &amp;</type>
          <declname>q_in</declname>
        </param>
        <param>
          <type><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref> &amp;</type>
          <declname>p_out</declname>
        </param>
        <param>
          <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
          <declname>segmentName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate forward position kinematics for a <ref refid="classKDL_1_1Tree" kindref="compound">KDL::Tree</ref>, from joint coordinates to cartesian pose.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>q_in</parametername>
</parameternamelist>
<parameterdescription>
<para>input joint coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_out</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to output cartesian pose</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>if &lt; 0 something went wrong </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/treefksolverpos_recursive.hpp" line="43" column="21" bodyfile="src/treefksolverpos_recursive.cpp" bodystart="33" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1TreeFkSolverPos__recursive_1a229604f04eeb4a546b6b05f03d4f9239" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KDL::TreeFkSolverPos_recursive::TreeFkSolverPos_recursive</definition>
        <argsstring>(const Tree &amp;tree)</argsstring>
        <name>TreeFkSolverPos_recursive</name>
        <param>
          <type>const <ref refid="classKDL_1_1Tree" kindref="compound">Tree</ref> &amp;</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/treefksolverpos_recursive.hpp" line="40" column="9" bodyfile="src/treefksolverpos_recursive.cpp" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1TreeFkSolverPos__recursive_1a564f632bc2ecdc6dc42413fc5c54ab55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KDL::TreeFkSolverPos_recursive::~TreeFkSolverPos_recursive</definition>
        <argsstring>()</argsstring>
        <name>~TreeFkSolverPos_recursive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/treefksolverpos_recursive.hpp" line="41" column="9" bodyfile="src/treefksolverpos_recursive.cpp" bodystart="64" bodyend="66"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classKDL_1_1TreeFkSolverPos__recursive_1a8cce7769402bf3af7a269d0b0da65e50" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref></type>
        <definition>Frame KDL::TreeFkSolverPos_recursive::recursiveFk</definition>
        <argsstring>(const JntArray &amp;q_in, const SegmentMap::const_iterator &amp;it)</argsstring>
        <name>recursiveFk</name>
        <param>
          <type>const <ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref> &amp;</type>
          <declname>q_in</declname>
        </param>
        <param>
          <type>const SegmentMap::const_iterator &amp;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/treefksolverpos_recursive.hpp" line="48" column="15" bodyfile="src/treefksolverpos_recursive.cpp" bodystart="48" bodyend="62"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Implementation of a recursive forward position kinematics algorithm to calculate the position transformation from joint space to Cartesian space of a general kinematic tree (<ref refid="classKDL_1_1Tree" kindref="compound">KDL::Tree</ref>). </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KDL::TreeFkSolverPos</label>
        <link refid="classKDL_1_1TreeFkSolverPos"/>
      </node>
      <node id="1">
        <label>KDL::TreeFkSolverPos_recursive</label>
        <link refid="classKDL_1_1TreeFkSolverPos__recursive"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>KDL::Tree</label>
        <link refid="classKDL_1_1Tree"/>
        <childnode refid="4" relation="usage">
          <edgelabel>segments</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>root_name</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>KDL::TreeFkSolverPos</label>
        <link refid="classKDL_1_1TreeFkSolverPos"/>
      </node>
      <node id="1">
        <label>KDL::TreeFkSolverPos_recursive</label>
        <link refid="classKDL_1_1TreeFkSolverPos__recursive"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>tree</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::map&lt; std::string, TreeElement &gt;</label>
        <link refid="cpp/container/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="5">
        <label>std::string</label>
        <link refid="cpp/string/basic_string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="src/treefksolverpos_recursive.hpp" line="38" column="1" bodyfile="src/treefksolverpos_recursive.hpp" bodystart="37" bodyend="49"/>
    <listofallmembers>
      <member refid="classKDL_1_1TreeFkSolverPos__recursive_1a1d88124902985f80eb5144ac78cd9ab6" prot="public" virt="virtual"><scope>KDL::TreeFkSolverPos_recursive</scope><name>JntToCart</name></member>
      <member refid="classKDL_1_1TreeFkSolverPos__recursive_1a8cce7769402bf3af7a269d0b0da65e50" prot="private" virt="non-virtual"><scope>KDL::TreeFkSolverPos_recursive</scope><name>recursiveFk</name></member>
      <member refid="classKDL_1_1TreeFkSolverPos__recursive_1a32e764248fe50e2f5558cb8aee85d1e1" prot="private" virt="non-virtual"><scope>KDL::TreeFkSolverPos_recursive</scope><name>tree</name></member>
      <member refid="classKDL_1_1TreeFkSolverPos__recursive_1a229604f04eeb4a546b6b05f03d4f9239" prot="public" virt="non-virtual"><scope>KDL::TreeFkSolverPos_recursive</scope><name>TreeFkSolverPos_recursive</name></member>
      <member refid="classKDL_1_1TreeFkSolverPos_1a405729e9f7b7dc4efd10169ddd17002c" prot="public" virt="virtual"><scope>KDL::TreeFkSolverPos_recursive</scope><name>~TreeFkSolverPos</name></member>
      <member refid="classKDL_1_1TreeFkSolverPos__recursive_1a564f632bc2ecdc6dc42413fc5c54ab55" prot="public" virt="non-virtual"><scope>KDL::TreeFkSolverPos_recursive</scope><name>~TreeFkSolverPos_recursive</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
