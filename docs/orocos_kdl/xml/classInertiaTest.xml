<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classInertiaTest" kind="class" language="C++" prot="public">
    <compoundname>InertiaTest</compoundname>
    <basecompoundref prot="public" virt="non-virtual">TestFixture</basecompoundref>
    <includes refid="inertiatest_8hpp" local="no">inertiatest.hpp</includes>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classInertiaTest_1a7f1e5d728b8829535b6a5846ed440700" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>InertiaTest::CPPUNIT_TEST</definition>
        <argsstring>(TestArticulatedBodyInertia)</argsstring>
        <name>CPPUNIT_TEST</name>
        <param>
          <type><ref refid="classInertiaTest_1a87fec9379623d182b6d9dd7eb214239e" kindref="member">TestArticulatedBodyInertia</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/inertiatest.hpp" line="11" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classInertiaTest_1aac6ada2ed14ed03116210f1145a088b0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>InertiaTest::CPPUNIT_TEST</definition>
        <argsstring>(TestRigidBodyInertia)</argsstring>
        <name>CPPUNIT_TEST</name>
        <param>
          <type><ref refid="classInertiaTest_1a340ae3cc89b6141d52d529d2b5589622" kindref="member">TestRigidBodyInertia</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/inertiatest.hpp" line="10" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classInertiaTest_1a102ac3f88cd6a702e73a30fe95baebe9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>InertiaTest::CPPUNIT_TEST</definition>
        <argsstring>(TestRotationalInertia)</argsstring>
        <name>CPPUNIT_TEST</name>
        <param>
          <type><ref refid="classInertiaTest_1a9e4981cad84032f0c3560200388700a0" kindref="member">TestRotationalInertia</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/inertiatest.hpp" line="9" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classInertiaTest_1ae892754cf0e31b81e85e2950661035cb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>InertiaTest::CPPUNIT_TEST_SUITE</definition>
        <argsstring>(InertiaTest)</argsstring>
        <name>CPPUNIT_TEST_SUITE</name>
        <param>
          <type><ref refid="classInertiaTest" kindref="compound">InertiaTest</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/inertiatest.hpp" line="8" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classInertiaTest_1aa0412e6ab150c4d4e58729d3a3f1d459" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>InertiaTest::CPPUNIT_TEST_SUITE_END</definition>
        <argsstring>()</argsstring>
        <name>CPPUNIT_TEST_SUITE_END</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/inertiatest.hpp" line="12" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classInertiaTest_1a8391f13b53ef3826f4637c4a9a6e9ba1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InertiaTest::setUp</definition>
        <argsstring>()</argsstring>
        <name>setUp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/inertiatest.hpp" line="15" column="10" bodyfile="tests/inertiatest.cpp" bodystart="13" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classInertiaTest_1a9fe52f0ec92290de639fcad544e75368" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InertiaTest::tearDown</definition>
        <argsstring>()</argsstring>
        <name>tearDown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/inertiatest.hpp" line="16" column="10" bodyfile="tests/inertiatest.cpp" bodystart="17" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classInertiaTest_1a87fec9379623d182b6d9dd7eb214239e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InertiaTest::TestArticulatedBodyInertia</definition>
        <argsstring>()</argsstring>
        <name>TestArticulatedBodyInertia</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/inertiatest.hpp" line="20" column="10" bodyfile="tests/inertiatest.cpp" bodystart="130" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classInertiaTest_1a340ae3cc89b6141d52d529d2b5589622" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InertiaTest::TestRigidBodyInertia</definition>
        <argsstring>()</argsstring>
        <name>TestRigidBodyInertia</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/inertiatest.hpp" line="19" column="10" bodyfile="tests/inertiatest.cpp" bodystart="54" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classInertiaTest_1a9e4981cad84032f0c3560200388700a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InertiaTest::TestRotationalInertia</definition>
        <argsstring>()</argsstring>
        <name>TestRotationalInertia</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/inertiatest.hpp" line="18" column="10" bodyfile="tests/inertiatest.cpp" bodystart="21" bodyend="52"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>TestFixture</label>
      </node>
      <node id="1">
        <label>InertiaTest</label>
        <link refid="classInertiaTest"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>TestFixture</label>
      </node>
      <node id="1">
        <label>InertiaTest</label>
        <link refid="classInertiaTest"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="tests/inertiatest.hpp" line="7" column="1" bodyfile="tests/inertiatest.hpp" bodystart="6" bodyend="22"/>
    <listofallmembers>
      <member refid="classInertiaTest_1a102ac3f88cd6a702e73a30fe95baebe9" prot="private" virt="non-virtual"><scope>InertiaTest</scope><name>CPPUNIT_TEST</name></member>
      <member refid="classInertiaTest_1aac6ada2ed14ed03116210f1145a088b0" prot="private" virt="non-virtual"><scope>InertiaTest</scope><name>CPPUNIT_TEST</name></member>
      <member refid="classInertiaTest_1a7f1e5d728b8829535b6a5846ed440700" prot="private" virt="non-virtual"><scope>InertiaTest</scope><name>CPPUNIT_TEST</name></member>
      <member refid="classInertiaTest_1ae892754cf0e31b81e85e2950661035cb" prot="private" virt="non-virtual"><scope>InertiaTest</scope><name>CPPUNIT_TEST_SUITE</name></member>
      <member refid="classInertiaTest_1aa0412e6ab150c4d4e58729d3a3f1d459" prot="private" virt="non-virtual"><scope>InertiaTest</scope><name>CPPUNIT_TEST_SUITE_END</name></member>
      <member refid="classInertiaTest_1a8391f13b53ef3826f4637c4a9a6e9ba1" prot="public" virt="non-virtual"><scope>InertiaTest</scope><name>setUp</name></member>
      <member refid="classInertiaTest_1a9fe52f0ec92290de639fcad544e75368" prot="public" virt="non-virtual"><scope>InertiaTest</scope><name>tearDown</name></member>
      <member refid="classInertiaTest_1a87fec9379623d182b6d9dd7eb214239e" prot="public" virt="non-virtual"><scope>InertiaTest</scope><name>TestArticulatedBodyInertia</name></member>
      <member refid="classInertiaTest_1a340ae3cc89b6141d52d529d2b5589622" prot="public" virt="non-virtual"><scope>InertiaTest</scope><name>TestRigidBodyInertia</name></member>
      <member refid="classInertiaTest_1a9e4981cad84032f0c3560200388700a0" prot="public" virt="non-virtual"><scope>InertiaTest</scope><name>TestRotationalInertia</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
