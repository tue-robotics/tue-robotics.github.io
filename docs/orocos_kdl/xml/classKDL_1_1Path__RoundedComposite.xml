<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classKDL_1_1Path__RoundedComposite" kind="class" language="C++" prot="public">
    <compoundname>KDL::Path_RoundedComposite</compoundname>
    <basecompoundref refid="classKDL_1_1Path" prot="public" virt="non-virtual">KDL::Path</basecompoundref>
    <includes refid="path__roundedcomposite_8hpp" local="no">path_roundedcomposite.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classKDL_1_1Path__RoundedComposite_1aa0f19713e3930f863ec2c07804845167" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KDL::Path_RoundedComposite::aggregate</definition>
        <argsstring></argsstring>
        <name>aggregate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_roundedcomposite.hpp" line="151" column="6" bodyfile="src/path_roundedcomposite.hpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Path__RoundedComposite_1a3ab3fea1818172b298289d0e22788ba7" prot="private" static="no" mutable="no">
        <type><ref refid="classKDL_1_1Path__Composite" kindref="compound">Path_Composite</ref> *</type>
        <definition>Path_Composite* KDL::Path_RoundedComposite::comp</definition>
        <argsstring></argsstring>
        <name>comp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>a <ref refid="classKDL_1_1Path__Composite" kindref="compound">Path_Composite</ref> is aggregated to hold the rounded trajectory with circles and lines </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_roundedcomposite.hpp" line="139" column="16" bodyfile="src/path_roundedcomposite.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Path__RoundedComposite_1ab8dbfad1e15e26bc4e96429406fbb4e3" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double KDL::Path_RoundedComposite::eqradius</definition>
        <argsstring></argsstring>
        <name>eqradius</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_roundedcomposite.hpp" line="143" column="8" bodyfile="src/path_roundedcomposite.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Path__RoundedComposite_1ae61919434682ff75aa5dff58085ba590" prot="private" static="no" mutable="no">
        <type><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref></type>
        <definition>Frame KDL::Path_RoundedComposite::F_base_start</definition>
        <argsstring></argsstring>
        <name>F_base_start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_roundedcomposite.hpp" line="146" column="7" bodyfile="src/path_roundedcomposite.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Path__RoundedComposite_1a2ce2efb19a7a668ea97f3ab84128e69a" prot="private" static="no" mutable="no">
        <type><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref></type>
        <definition>Frame KDL::Path_RoundedComposite::F_base_via</definition>
        <argsstring></argsstring>
        <name>F_base_via</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_roundedcomposite.hpp" line="147" column="7" bodyfile="src/path_roundedcomposite.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Path__RoundedComposite_1a7ae030a97ecda4384b09336c401db4db" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KDL::Path_RoundedComposite::nrofpoints</definition>
        <argsstring></argsstring>
        <name>nrofpoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_roundedcomposite.hpp" line="149" column="5" bodyfile="src/path_roundedcomposite.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Path__RoundedComposite_1a57097ef3b613d4a40bf3faed92758332" prot="private" static="no" mutable="no">
        <type><ref refid="classKDL_1_1RotationalInterpolation" kindref="compound">RotationalInterpolation</ref> *</type>
        <definition>RotationalInterpolation* KDL::Path_RoundedComposite::orient</definition>
        <argsstring></argsstring>
        <name>orient</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_roundedcomposite.hpp" line="144" column="25" bodyfile="src/path_roundedcomposite.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Path__RoundedComposite_1a9caffac2bd59ba759918a987506f1fff" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double KDL::Path_RoundedComposite::radius</definition>
        <argsstring></argsstring>
        <name>radius</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_roundedcomposite.hpp" line="142" column="8" bodyfile="src/path_roundedcomposite.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classKDL_1_1Path__RoundedComposite_1a61b2c39726adb41c5311034555c08076" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KDL::Path_RoundedComposite::Path_RoundedComposite</definition>
        <argsstring>(Path_Composite *comp, double radius, double eqradius, RotationalInterpolation *orient, bool aggregate, int nrofpoints)</argsstring>
        <name>Path_RoundedComposite</name>
        <param>
          <type><ref refid="classKDL_1_1Path__Composite" kindref="compound">Path_Composite</ref> *</type>
          <declname>comp</declname>
        </param>
        <param>
          <type>double</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eqradius</declname>
        </param>
        <param>
          <type><ref refid="classKDL_1_1RotationalInterpolation" kindref="compound">RotationalInterpolation</ref> *</type>
          <declname>orient</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aggregate</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nrofpoints</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_roundedcomposite.hpp" line="153" column="1" bodyfile="src/path_roundedcomposite.cpp" bodystart="93" bodyend="97"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classKDL_1_1Path__RoundedComposite_1a22d5cd9898c8b6ad83b71d18ad371156" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref></type>
        <definition>Twist KDL::Path_RoundedComposite::Acc</definition>
        <argsstring>(double s, double sd, double sdd) const</argsstring>
        <name>Acc</name>
        <reimplements refid="classKDL_1_1Path_1a274dd481c1ab921f898cddb618e7e42b">Acc</reimplements>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sd</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sdd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the acceleration twist at path length s and with derivative of s == sd, and 2nd derivative of s == sdd </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_roundedcomposite.hpp" line="220" column="15" bodyfile="src/path_roundedcomposite.cpp" bodystart="202" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__RoundedComposite_1a85d9f42a52e5704b33629355f2157be4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KDL::Path_RoundedComposite::Add</definition>
        <argsstring>(const Frame &amp;F_base_point)</argsstring>
        <name>Add</name>
        <param>
          <type>const <ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref> &amp;</type>
          <declname>F_base_point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a point to this rounded composite, between two adjacent points a <ref refid="classKDL_1_1Path__Line" kindref="compound">Path_Line</ref> will be created, between two lines there will be rounding with the given radius with a <ref refid="classKDL_1_1Path__Circle" kindref="compound">Path_Circle</ref></para>
<para>The <ref refid="classKDL_1_1Error__MotionPlanning__Not__Feasible" kindref="compound">Error_MotionPlanning_Not_Feasible</ref> has a type (obtained by GetType) of:<itemizedlist>
<listitem><para>3101 if the eq. radius &lt;= 0</para>
</listitem><listitem><para>3102 if the first segment in a rounding has zero length.</para>
</listitem><listitem><para>3103 if the second segment in a rounding has zero length.</para>
</listitem><listitem><para>3104 if the angle between the first and the second segment is close to PI. (meaning that the segments are on top of each other)</para>
</listitem><listitem><para>3105 if the distance needed for the rounding is larger then the first segment.</para>
</listitem><listitem><para>3106 if the distance needed for the rounding is larger then the second segment.</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>F_base_point</parametername>
</parameternamelist>
<parameterdescription>
<para>the pose of a new via point. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Can throw <ref refid="classKDL_1_1Error__MotionPlanning__Not__Feasible" kindref="compound">Error_MotionPlanning_Not_Feasible</ref> object @TODO handle the case of error type 3105 and 3106 by skipping segments, such that the class could be applied with points that are very close to each other. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_roundedcomposite.hpp" line="185" column="6" bodyfile="src/path_roundedcomposite.cpp" bodystart="108" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__RoundedComposite_1a120b469f82f6e3ce9b940348b0874398" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classKDL_1_1Path" kindref="compound">Path</ref> *</type>
        <definition>Path * KDL::Path_RoundedComposite::Clone</definition>
        <argsstring>()</argsstring>
        <name>Clone</name>
        <reimplements refid="classKDL_1_1Path_1a06926be0592bbe853ee9d040a4e420d3">Clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>virtual constructor, constructing by copying. In this case it returns the <ref refid="classKDL_1_1Path__RoundedComposite_1a120b469f82f6e3ce9b940348b0874398" kindref="member">Clone()</ref> of the aggregated <ref refid="classKDL_1_1Path__Composite" kindref="compound">Path_Composite</ref> because this is all one ever will need. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_roundedcomposite.hpp" line="227" column="14" bodyfile="src/path_roundedcomposite.cpp" bodystart="236" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__RoundedComposite_1ad88828a48011d4b8ef775ff8fb22dff6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KDL::Path_RoundedComposite::Finish</definition>
        <argsstring>()</argsstring>
        <name>Finish</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>to be called after the last line is added to finish up the work </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_roundedcomposite.hpp" line="191" column="6" bodyfile="src/path_roundedcomposite.cpp" bodystart="177" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__RoundedComposite_1ac3e92378de6aa98a8f210901938bbf70" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KDL::Path_RoundedComposite::GetCurrentSegmentLocation</definition>
        <argsstring>(double s, int &amp;segment_number, double &amp;inner_s)</argsstring>
        <name>GetCurrentSegmentLocation</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>segment_number</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>inner_s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>[INPUT] path length variable for the composite. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>segment_number</parametername>
</parameternamelist>
<parameterdescription>
<para>[OUTPUT] segments that corresponds to the path length variable s. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inner_s</parametername>
</parameternamelist>
<parameterdescription>
<para>[OUTPUT] path length to use within the segment. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_roundedcomposite.hpp" line="261" column="14" bodyfile="src/path_roundedcomposite.cpp" bodystart="222" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__RoundedComposite_1a0c2a6d363090e47378c87f8812150244" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09" kindref="member">IdentifierType</ref></type>
        <definition>virtual IdentifierType KDL::Path_RoundedComposite::getIdentifier</definition>
        <argsstring>() const</argsstring>
        <name>getIdentifier</name>
        <reimplements refid="classKDL_1_1Path_1aa28b0993963870a6c754b19e5cd06fec">getIdentifier</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets an identifier indicating the type of this <ref refid="classKDL_1_1Path" kindref="compound">Path</ref> object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_roundedcomposite.hpp" line="266" column="24" bodyfile="src/path_roundedcomposite.hpp" bodystart="266" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__RoundedComposite_1a1a7251edb23c2203e0661917e0624235" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double KDL::Path_RoundedComposite::GetLengthToEndOfSegment</definition>
        <argsstring>(int i)</argsstring>
        <name>GetLengthToEndOfSegment</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets the length to the end of the given segment. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>segment number </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>length to the end of the segment, i.e. the value for s corresponding to the end of this segment. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_roundedcomposite.hpp" line="254" column="16" bodyfile="src/path_roundedcomposite.cpp" bodystart="218" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__RoundedComposite_1a67f00e07cb66d4d475e26bc69f612947" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int KDL::Path_RoundedComposite::GetNrOfSegments</definition>
        <argsstring>()</argsstring>
        <name>GetNrOfSegments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the number of underlying segments. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_roundedcomposite.hpp" line="237" column="13" bodyfile="src/path_roundedcomposite.cpp" bodystart="210" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__RoundedComposite_1a4016b9f5bbacb80464e55cae44d70f33" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classKDL_1_1Path" kindref="compound">Path</ref> *</type>
        <definition>Path * KDL::Path_RoundedComposite::GetSegment</definition>
        <argsstring>(int i)</argsstring>
        <name>GetSegment</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a pointer to the underlying <ref refid="classKDL_1_1Path" kindref="compound">Path</ref> of the given segment number i. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>segment number </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the underlying <ref refid="classKDL_1_1Path" kindref="compound">Path</ref> </para>
</simplesect>
<simplesect kind="warning"><para>The pointer is still owned by this class and is lifetime depends on the lifetime of this class. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_roundedcomposite.hpp" line="246" column="14" bodyfile="src/path_roundedcomposite.cpp" bodystart="214" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__RoundedComposite_1ae2a676790cdf8b7356eb7327eb14fde3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double KDL::Path_RoundedComposite::LengthToS</definition>
        <argsstring>(double length)</argsstring>
        <name>LengthToS</name>
        <reimplements refid="group__Motion_1gad7f55a1d6f7a076b0959c76c29cc323d">LengthToS</reimplements>
        <param>
          <type>double</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classKDL_1_1Path__RoundedComposite_1ae2a676790cdf8b7356eb7327eb14fde3" kindref="member">LengthToS()</ref> converts a physical length along the trajectory to the parameter s used in Pos, Vel and Acc. This is used because in cases with large rotations the parameter s does NOT correspond to the lineair length along the trajectory. User should be sure that the lineair distance travelled by this path object is NOT zero, when using this method ! (e.g. the case of only rotational change) throws <ref refid="classKDL_1_1Error__MotionPlanning__Not__Applicable" kindref="compound">Error_MotionPlanning_Not_Applicable</ref> if used on composed path objects. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_roundedcomposite.hpp" line="194" column="16" bodyfile="src/path_roundedcomposite.cpp" bodystart="185" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__RoundedComposite_1a7daf7e92a48c18b06aeab6bb50883e8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KDL::Path_RoundedComposite::Path_RoundedComposite</definition>
        <argsstring>(double radius, double eqradius, RotationalInterpolation *orient, bool aggregate=true)</argsstring>
        <name>Path_RoundedComposite</name>
        <param>
          <type>double</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eqradius</declname>
        </param>
        <param>
          <type><ref refid="classKDL_1_1RotationalInterpolation" kindref="compound">RotationalInterpolation</ref> *</type>
          <declname>orient</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aggregate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>radius</parametername>
</parameternamelist>
<parameterdescription>
<para>: radius of the rounding circles </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eqradius</parametername>
</parameternamelist>
<parameterdescription>
<para>: equivalent radius to compare rotations/velocities </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>orient</parametername>
</parameternamelist>
<parameterdescription>
<para>: method of rotational_interpolation interpolation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aggregate</parametername>
</parameternamelist>
<parameterdescription>
<para>: if true, this object will own the _orient pointer, i.e. it will delete the _orient pointer when the destructor of this object is called. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_roundedcomposite.hpp" line="164" column="1" bodyfile="src/path_roundedcomposite.cpp" bodystart="99" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__RoundedComposite_1a858f7fb29c997e9332c4f56b6b1364d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double KDL::Path_RoundedComposite::PathLength</definition>
        <argsstring>()</argsstring>
        <name>PathLength</name>
        <reimplements refid="classKDL_1_1Path_1a095d3ce8d48bd9f8953793c60532cd1a">PathLength</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the total path length of the trajectory (has dimension LENGTH) This is not always a physical length , ie when dealing with rotations that are dominant. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_roundedcomposite.hpp" line="202" column="16" bodyfile="src/path_roundedcomposite.cpp" bodystart="190" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__RoundedComposite_1ac8580b5928a8a1e0aa8a7ec63c7167d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref></type>
        <definition>Frame KDL::Path_RoundedComposite::Pos</definition>
        <argsstring>(double s) const</argsstring>
        <name>Pos</name>
        <reimplements refid="classKDL_1_1Path_1ab0121ec33eee9525bd3c883a1631bf6c">Pos</reimplements>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref> at the current path length s </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_roundedcomposite.hpp" line="208" column="15" bodyfile="src/path_roundedcomposite.cpp" bodystart="194" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__RoundedComposite_1a4178b9c0a175466f655a9a2ede71bccc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref></type>
        <definition>Twist KDL::Path_RoundedComposite::Vel</definition>
        <argsstring>(double s, double sd) const</argsstring>
        <name>Vel</name>
        <reimplements refid="classKDL_1_1Path_1a6982dc012ef4299cffc1be99ef225d98">Vel</reimplements>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the velocity twist at path length s theta and with derivative of s == sd </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_roundedcomposite.hpp" line="214" column="15" bodyfile="src/path_roundedcomposite.cpp" bodystart="198" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__RoundedComposite_1a72004b635a931a44161ba0677c9f5e73" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KDL::Path_RoundedComposite::Write</definition>
        <argsstring>(std::ostream &amp;os)</argsstring>
        <name>Write</name>
        <reimplements refid="classKDL_1_1Path_1a3c1c34464d34183fc965af1ea260879d">Write</reimplements>
        <param>
          <type><ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref> &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes one of the derived objects to the stream </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_roundedcomposite.hpp" line="232" column="14" bodyfile="src/path_roundedcomposite.cpp" bodystart="206" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__RoundedComposite_1a3b2bba0b18663c4be8aed87a144cd890" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>KDL::Path_RoundedComposite::~Path_RoundedComposite</definition>
        <argsstring>()</argsstring>
        <name>~Path_RoundedComposite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_roundedcomposite.hpp" line="271" column="9" bodyfile="src/path_roundedcomposite.cpp" bodystart="229" bodyend="233"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The specification of a path, composed of way-points with rounded corners. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KDL::Path</label>
        <link refid="classKDL_1_1Path"/>
      </node>
      <node id="1">
        <label>KDL::Path_RoundedComposite</label>
        <link refid="classKDL_1_1Path__RoundedComposite"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>KDL::Rotation</label>
        <link refid="classKDL_1_1Rotation"/>
      </node>
      <node id="5">
        <label>std::vector&lt; double &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="9">
        <label>KDL::RotationalInterpolation</label>
        <link refid="classKDL_1_1RotationalInterpolation"/>
      </node>
      <node id="2">
        <label>KDL::Path</label>
        <link refid="classKDL_1_1Path"/>
      </node>
      <node id="1">
        <label>KDL::Path_RoundedComposite</label>
        <link refid="classKDL_1_1Path__RoundedComposite"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>comp</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>F_base_start</edgelabel>
          <edgelabel>F_base_via</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>orient</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::vector&lt; std::pair&lt; Path *, bool &gt; &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="6">
        <label>KDL::Frame</label>
        <link refid="classKDL_1_1Frame"/>
        <childnode refid="7" relation="usage">
          <edgelabel>p</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>M</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>KDL::Path_Composite</label>
        <link refid="classKDL_1_1Path__Composite"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>gv</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>dv</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>KDL::Vector</label>
        <link refid="classKDL_1_1Vector"/>
      </node>
    </collaborationgraph>
    <location file="src/path_roundedcomposite.hpp" line="97" column="1" bodyfile="src/path_roundedcomposite.hpp" bodystart="96" bodyend="234"/>
    <listofallmembers>
      <member refid="classKDL_1_1Path__RoundedComposite_1a22d5cd9898c8b6ad83b71d18ad371156" prot="public" virt="virtual"><scope>KDL::Path_RoundedComposite</scope><name>Acc</name></member>
      <member refid="classKDL_1_1Path__RoundedComposite_1a85d9f42a52e5704b33629355f2157be4" prot="public" virt="non-virtual"><scope>KDL::Path_RoundedComposite</scope><name>Add</name></member>
      <member refid="classKDL_1_1Path__RoundedComposite_1aa0f19713e3930f863ec2c07804845167" prot="private" virt="non-virtual"><scope>KDL::Path_RoundedComposite</scope><name>aggregate</name></member>
      <member refid="classKDL_1_1Path__RoundedComposite_1a120b469f82f6e3ce9b940348b0874398" prot="public" virt="virtual"><scope>KDL::Path_RoundedComposite</scope><name>Clone</name></member>
      <member refid="classKDL_1_1Path__RoundedComposite_1a3ab3fea1818172b298289d0e22788ba7" prot="private" virt="non-virtual"><scope>KDL::Path_RoundedComposite</scope><name>comp</name></member>
      <member refid="classKDL_1_1Path__RoundedComposite_1ab8dbfad1e15e26bc4e96429406fbb4e3" prot="private" virt="non-virtual"><scope>KDL::Path_RoundedComposite</scope><name>eqradius</name></member>
      <member refid="classKDL_1_1Path__RoundedComposite_1ae61919434682ff75aa5dff58085ba590" prot="private" virt="non-virtual"><scope>KDL::Path_RoundedComposite</scope><name>F_base_start</name></member>
      <member refid="classKDL_1_1Path__RoundedComposite_1a2ce2efb19a7a668ea97f3ab84128e69a" prot="private" virt="non-virtual"><scope>KDL::Path_RoundedComposite</scope><name>F_base_via</name></member>
      <member refid="classKDL_1_1Path__RoundedComposite_1ad88828a48011d4b8ef775ff8fb22dff6" prot="public" virt="non-virtual"><scope>KDL::Path_RoundedComposite</scope><name>Finish</name></member>
      <member refid="classKDL_1_1Path__RoundedComposite_1ac3e92378de6aa98a8f210901938bbf70" prot="public" virt="virtual"><scope>KDL::Path_RoundedComposite</scope><name>GetCurrentSegmentLocation</name></member>
      <member refid="classKDL_1_1Path__RoundedComposite_1a0c2a6d363090e47378c87f8812150244" prot="public" virt="virtual"><scope>KDL::Path_RoundedComposite</scope><name>getIdentifier</name></member>
      <member refid="classKDL_1_1Path__RoundedComposite_1a1a7251edb23c2203e0661917e0624235" prot="public" virt="virtual"><scope>KDL::Path_RoundedComposite</scope><name>GetLengthToEndOfSegment</name></member>
      <member refid="classKDL_1_1Path__RoundedComposite_1a67f00e07cb66d4d475e26bc69f612947" prot="public" virt="virtual"><scope>KDL::Path_RoundedComposite</scope><name>GetNrOfSegments</name></member>
      <member refid="classKDL_1_1Path__RoundedComposite_1a4016b9f5bbacb80464e55cae44d70f33" prot="public" virt="virtual"><scope>KDL::Path_RoundedComposite</scope><name>GetSegment</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09a0ce2e4f0f5a61c01cecafbe0084682cd" prot="public" virt="non-virtual"><scope>KDL::Path_RoundedComposite</scope><name>ID_CIRCLE</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09a0e63c4744e46f92e2599ca9fbf50f6a4" prot="public" virt="non-virtual"><scope>KDL::Path_RoundedComposite</scope><name>ID_COMPOSITE</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09ae0cd5b91c304ea865d3e2ffe642a47d8" prot="public" virt="non-virtual"><scope>KDL::Path_RoundedComposite</scope><name>ID_CYCLIC_CLOSED</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09a4f9ed1827474558375d8fdcc6fa22a8c" prot="public" virt="non-virtual"><scope>KDL::Path_RoundedComposite</scope><name>ID_LINE</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09ad0c76d25569cecb6d38bce3ec92cd8eb" prot="public" virt="non-virtual"><scope>KDL::Path_RoundedComposite</scope><name>ID_POINT</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09a6458e9e3355fb8ebdcd540ae753aadbd" prot="public" virt="non-virtual"><scope>KDL::Path_RoundedComposite</scope><name>ID_ROUNDED_COMPOSITE</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09" prot="public" virt="non-virtual"><scope>KDL::Path_RoundedComposite</scope><name>IdentifierType</name></member>
      <member refid="classKDL_1_1Path__RoundedComposite_1ae2a676790cdf8b7356eb7327eb14fde3" prot="public" virt="virtual"><scope>KDL::Path_RoundedComposite</scope><name>LengthToS</name></member>
      <member refid="classKDL_1_1Path__RoundedComposite_1a7ae030a97ecda4384b09336c401db4db" prot="private" virt="non-virtual"><scope>KDL::Path_RoundedComposite</scope><name>nrofpoints</name></member>
      <member refid="classKDL_1_1Path__RoundedComposite_1a57097ef3b613d4a40bf3faed92758332" prot="private" virt="non-virtual"><scope>KDL::Path_RoundedComposite</scope><name>orient</name></member>
      <member refid="classKDL_1_1Path__RoundedComposite_1a61b2c39726adb41c5311034555c08076" prot="private" virt="non-virtual"><scope>KDL::Path_RoundedComposite</scope><name>Path_RoundedComposite</name></member>
      <member refid="classKDL_1_1Path__RoundedComposite_1a7daf7e92a48c18b06aeab6bb50883e8e" prot="public" virt="non-virtual"><scope>KDL::Path_RoundedComposite</scope><name>Path_RoundedComposite</name></member>
      <member refid="classKDL_1_1Path__RoundedComposite_1a858f7fb29c997e9332c4f56b6b1364d3" prot="public" virt="virtual"><scope>KDL::Path_RoundedComposite</scope><name>PathLength</name></member>
      <member refid="classKDL_1_1Path__RoundedComposite_1ac8580b5928a8a1e0aa8a7ec63c7167d5" prot="public" virt="virtual"><scope>KDL::Path_RoundedComposite</scope><name>Pos</name></member>
      <member refid="classKDL_1_1Path__RoundedComposite_1a9caffac2bd59ba759918a987506f1fff" prot="private" virt="non-virtual"><scope>KDL::Path_RoundedComposite</scope><name>radius</name></member>
      <member refid="classKDL_1_1Path_1a15dfd941258db019a5b30c666e51b358" prot="public" virt="non-virtual"><scope>KDL::Path_RoundedComposite</scope><name>Read</name></member>
      <member refid="classKDL_1_1Path__RoundedComposite_1a4178b9c0a175466f655a9a2ede71bccc" prot="public" virt="virtual"><scope>KDL::Path_RoundedComposite</scope><name>Vel</name></member>
      <member refid="classKDL_1_1Path__RoundedComposite_1a72004b635a931a44161ba0677c9f5e73" prot="public" virt="virtual"><scope>KDL::Path_RoundedComposite</scope><name>Write</name></member>
      <member refid="classKDL_1_1Path_1a10f16828c888527755e8a59c906b5a57" prot="public" virt="virtual"><scope>KDL::Path_RoundedComposite</scope><name>~Path</name></member>
      <member refid="classKDL_1_1Path__RoundedComposite_1a3b2bba0b18663c4be8aed87a144cd890" prot="public" virt="virtual"><scope>KDL::Path_RoundedComposite</scope><name>~Path_RoundedComposite</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
