<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="chainiksolvervel__wdls_8cpp" kind="file" language="C++">
    <compoundname>chainiksolvervel_wdls.cpp</compoundname>
    <includes refid="chainiksolvervel__wdls_8hpp" local="yes">chainiksolvervel_wdls.hpp</includes>
    <includes refid="svd__eigen__HH_8hpp" local="yes">utilities/svd_eigen_HH.hpp</includes>
    <incdepgraph>
      <node id="19">
        <label>exception</label>
        <link refid="cpp/header/exception" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="25">
        <label>framevel.inl</label>
        <link refid="framevel_8inl"/>
      </node>
      <node id="24">
        <label>utilities/traits.h</label>
        <link refid="traits_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>functional</label>
        <link refid="cpp/header/functional" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="29">
        <label>frameacc.inl</label>
        <link refid="frameacc_8inl"/>
      </node>
      <node id="38">
        <label>algorithm</label>
        <link refid="cpp/header/algorithm" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="12">
        <label>utilities/hash_combine.h</label>
        <link refid="hash__combine_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>assert.h</label>
      </node>
      <node id="20">
        <label>vector</label>
        <link refid="cpp/header/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="17">
        <label>joint.hpp</label>
        <link refid="joint_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>chainiksolvervel_wdls.cpp</label>
        <link refid="chainiksolvervel__wdls_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>jntarrayvel.hpp</label>
        <link refid="jntarrayvel_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>cstdlib</label>
        <link refid="cpp/header/cstdlib" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="15">
        <label>rigidbodyinertia.hpp</label>
        <link refid="rigidbodyinertia_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>Eigen/Core</label>
      </node>
      <node id="37">
        <label>utilities/svd_eigen_HH.hpp</label>
        <link refid="svd__eigen__HH_8hpp"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>frames.hpp</label>
        <link refid="frames_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>jacobian.hpp</label>
        <link refid="jacobian_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>cassert</label>
        <link refid="cpp/header/cassert" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="8">
        <label>utilities/utility.h</label>
        <link refid="utility_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>frames.inl</label>
        <link refid="frames_8inl"/>
      </node>
      <node id="27">
        <label>utilities/rall2d.h</label>
        <link refid="rall2d_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>segment.hpp</label>
        <link refid="segment_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>math.h</label>
      </node>
      <node id="21">
        <label>framevel.hpp</label>
        <link refid="framevel_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>jntarray.hpp</label>
        <link refid="jntarray_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>jntarrayacc.hpp</label>
        <link refid="jntarrayacc_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>string</label>
        <link refid="cpp/header/string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="35">
        <label>solveri.hpp</label>
        <link refid="solveri_8hpp"/>
      </node>
      <node id="4">
        <label>chain.hpp</label>
        <link refid="chain_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>rotationalinertia.hpp</label>
        <link refid="rotationalinertia_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>frameacc.hpp</label>
        <link refid="frameacc_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>chainiksolver.hpp</label>
        <link refid="chainiksolver_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>chainiksolvervel_wdls.hpp</label>
        <link refid="chainiksolvervel__wdls_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>cmath</label>
        <link refid="cpp/header/cmath" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="7">
        <label>utilities/kdl-config.h</label>
        <link refid="kdl-config_8h"/>
      </node>
      <node id="36">
        <label>chainjnttojacsolver.hpp</label>
        <link refid="chainjnttojacsolver_8hpp"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>utilities/rall1d.h</label>
        <link refid="rall1d_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceKDL">KDL</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/><sp/>(C)<sp/><sp/>2007<sp/><sp/>Ruben<sp/>Smits<sp/>&lt;ruben<sp/>dot<sp/>smits<sp/>at<sp/>mech<sp/>dot<sp/>kuleuven<sp/>dot<sp/>be&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Version:<sp/>1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>Ruben<sp/>Smits<sp/>&lt;ruben<sp/>dot<sp/>smits<sp/>at<sp/>mech<sp/>dot<sp/>kuleuven<sp/>dot<sp/>be&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Maintainer:<sp/>Ruben<sp/>Smits<sp/>&lt;ruben<sp/>dot<sp/>smits<sp/>at<sp/>mech<sp/>dot<sp/>kuleuven<sp/>dot<sp/>be&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>URL:<sp/>http://www.orocos.org/kdl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>St,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="chainiksolvervel__wdls_8hpp" kindref="compound">chainiksolvervel_wdls.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="svd__eigen__HH_8hpp" kindref="compound">utilities/svd_eigen_HH.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceKDL" kindref="compound">KDL</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28" refid="classKDL_1_1ChainIkSolverVel__wdls_1ab4595a4bfb75e1b941c37ffc226d24e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ab4595a4bfb75e1b941c37ffc226d24e4" kindref="member">ChainIkSolverVel_wdls::ChainIkSolverVel_wdls</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Chain" kindref="compound">Chain</ref>&amp;<sp/>_chain,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_eps,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_maxiter):</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chain(_chain),</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jnt2jac(chain),</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nj(chain.getNrOfJoints()),</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jac(nj),</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U(Eigen::MatrixXd::Zero(6,nj)),</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S(Eigen::VectorXd::Zero(nj)),</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V(Eigen::MatrixXd::Zero(nj,nj)),</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eps(_eps),</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxiter(_maxiter),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp(Eigen::VectorXd::Zero(nj)),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_jac(Eigen::MatrixXd::Zero(6,nj)),</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_jac_weight1(Eigen::MatrixXd::Zero(6,nj)),</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_jac_weight2(Eigen::MatrixXd::Zero(6,nj)),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_ts(Eigen::MatrixXd::Zero(6,6)),</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_js(Eigen::MatrixXd::Zero(nj,nj)),</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight_ts(Eigen::MatrixXd::Identity(6,6)),</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight_js(Eigen::MatrixXd::Identity(nj,nj)),</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lambda(0.0),</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lambda_scaled(0.0),</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrZeroSigmas(0),</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>svdResult(0),</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigmaMin(0)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54" refid="classKDL_1_1ChainIkSolverVel__wdls_1a30247d462ff6438cd6fb1d552c9866a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a30247d462ff6438cd6fb1d552c9866a0" kindref="member">ChainIkSolverVel_wdls::updateInternalDataStructures</ref>()<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a8796ef16f6cd2830e3a43c9eb8ff88e2" kindref="member">jnt2jac</ref>.<ref refid="classKDL_1_1ChainJntToJacSolver_1a8c6fe8ec5cd73c65699143e4a5df9bef" kindref="member">updateInternalDataStructures</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a021ceab3f844d7900134cd4ccb2a28bc" kindref="member">nj</ref><sp/>=<sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a740ab879917a5a23997a4a77198a0c20" kindref="member">chain</ref>.<ref refid="classKDL_1_1Chain_1a24915919dabc4ea58600a38882445cd8" kindref="member">getNrOfJoints</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ac9299ef563ec5815499f2c35ce0b883e" kindref="member">jac</ref>.<ref refid="classKDL_1_1Jacobian_1a296c2e29811beb1769221f26d3e6556b" kindref="member">resize</ref>(<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a021ceab3f844d7900134cd4ccb2a28bc" kindref="member">nj</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>z6nj<sp/>=<sp/>Eigen::MatrixXd::Zero(6,<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a021ceab3f844d7900134cd4ccb2a28bc" kindref="member">nj</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>znj<sp/>=<sp/>Eigen::VectorXd::Zero(<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a021ceab3f844d7900134cd4ccb2a28bc" kindref="member">nj</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>znjnj<sp/>=<sp/>Eigen::MatrixXd::Zero(<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a021ceab3f844d7900134cd4ccb2a28bc" kindref="member">nj</ref>,<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a021ceab3f844d7900134cd4ccb2a28bc" kindref="member">nj</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a89fd8e0a34b6c574efed0a9141489417" kindref="member">U</ref>.conservativeResizeLike(z6nj);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ad94b2a63197896582aad47602c5b084d" kindref="member">S</ref>.conservativeResizeLike(znj);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ac1c7f7091da0a3b419399b9944ca5dc7" kindref="member">V</ref>.conservativeResizeLike(znjnj);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ac1cb14a25dbe53fa78a4b7c2b278292f" kindref="member">tmp</ref>.conservativeResizeLike(znj);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1aefd27c642fc0e793a18e9cdac6cf3ac2" kindref="member">tmp_jac</ref>.conservativeResizeLike(z6nj);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ae9fba66e3d579e64d3f565a8445225f1" kindref="member">tmp_jac_weight1</ref>.conservativeResizeLike(z6nj);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1aa8214cd2b7a4c3975dc349866616a2cd" kindref="member">tmp_jac_weight2</ref>.conservativeResizeLike(z6nj);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a01d81182077b1106dd5f3e7557f769f7" kindref="member">tmp_js</ref>.conservativeResizeLike(znjnj);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ab90f39f954fbd6ba7c342c556bf069e5" kindref="member">weight_js</ref>.conservativeResizeLike(Eigen::MatrixXd::Identity(<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a021ceab3f844d7900134cd4ccb2a28bc" kindref="member">nj</ref>,<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a021ceab3f844d7900134cd4ccb2a28bc" kindref="member">nj</ref>));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classKDL_1_1ChainIkSolverVel__wdls_1a19e3463732c52875823df1380c5cd5e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a19e3463732c52875823df1380c5cd5e8" kindref="member">ChainIkSolverVel_wdls::~ChainIkSolverVel_wdls</ref>()</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76" refid="classKDL_1_1ChainIkSolverVel__wdls_1af8176314e82309489e4087888d488acd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1af8176314e82309489e4087888d488acd" kindref="member">ChainIkSolverVel_wdls::setWeightJS</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixXd&amp;<sp/>Mq){</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a021ceab3f844d7900134cd4ccb2a28bc" kindref="member">nj</ref><sp/>!=<sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a740ab879917a5a23997a4a77198a0c20" kindref="member">chain</ref>.<ref refid="classKDL_1_1Chain_1a24915919dabc4ea58600a38882445cd8" kindref="member">getNrOfJoints</ref>())</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classKDL_1_1SolverI_1a62d29639f6396a0660ce7e3958d14718" kindref="member">error</ref><sp/>=<sp/><ref refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a1803914d79d602cbc5ffced121c5278c" kindref="member">E_NOT_UP_TO_DATE</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Mq.size()<sp/>!=<sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ab90f39f954fbd6ba7c342c556bf069e5" kindref="member">weight_js</ref>.size())</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classKDL_1_1SolverI_1a62d29639f6396a0660ce7e3958d14718" kindref="member">error</ref><sp/>=<sp/><ref refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a713b62c139a0caee351f94aa7598e56a" kindref="member">E_SIZE_MISMATCH</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ab90f39f954fbd6ba7c342c556bf069e5" kindref="member">weight_js</ref><sp/>=<sp/>Mq;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classKDL_1_1SolverI_1a62d29639f6396a0660ce7e3958d14718" kindref="member">error</ref><sp/>=<sp/><ref refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a95f2e049884a3a08fc4f839e4cbf6191" kindref="member">E_NOERROR</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86" refid="classKDL_1_1ChainIkSolverVel__wdls_1ae1b05a989d6e0fb29fa763a24d9e112c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ae1b05a989d6e0fb29fa763a24d9e112c" kindref="member">ChainIkSolverVel_wdls::setWeightTS</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixXd&amp;<sp/>Mx){</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Mx.size()<sp/>!=<sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ab3f86f99a1660a8eddbfa325f83d8c31" kindref="member">weight_ts</ref>.size())</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classKDL_1_1SolverI_1a62d29639f6396a0660ce7e3958d14718" kindref="member">error</ref><sp/>=<sp/><ref refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a713b62c139a0caee351f94aa7598e56a" kindref="member">E_SIZE_MISMATCH</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ab3f86f99a1660a8eddbfa325f83d8c31" kindref="member">weight_ts</ref><sp/>=<sp/>Mx;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classKDL_1_1SolverI_1a62d29639f6396a0660ce7e3958d14718" kindref="member">error</ref><sp/>=<sp/><ref refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a95f2e049884a3a08fc4f839e4cbf6191" kindref="member">E_NOERROR</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classKDL_1_1ChainIkSolverVel__wdls_1aae31a982ea6a043a37592329cc51fab4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1aae31a982ea6a043a37592329cc51fab4" kindref="member">ChainIkSolverVel_wdls::setLambda</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambda_in)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1aeba04bde651f4277dad25c8955cd69ad" kindref="member">lambda</ref>=lambda_in;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="classKDL_1_1ChainIkSolverVel__wdls_1ac0671b5612e17c1bbe942ab591159607" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ac0671b5612e17c1bbe942ab591159607" kindref="member">ChainIkSolverVel_wdls::setEps</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps_in)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a7bf9cd814386299d25aa3568d27072ca" kindref="member">eps</ref>=eps_in;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="classKDL_1_1ChainIkSolverVel__wdls_1a4c4e3125e980f4085c6c9f96fffad231" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a4c4e3125e980f4085c6c9f96fffad231" kindref="member">ChainIkSolverVel_wdls::setMaxIter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxiter_in)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ad0f5514e9e2a16f08fee14c88036c18f" kindref="member">maxiter</ref>=maxiter_in;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="classKDL_1_1ChainIkSolverVel__wdls_1a80147eb86301b71df08d450855d78d4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a80147eb86301b71df08d450855d78d4b" kindref="member">ChainIkSolverVel_wdls::getSigma</ref>(Eigen::VectorXd&amp;<sp/>Sout)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Sout.size()<sp/>!=<sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ad94b2a63197896582aad47602c5b084d" kindref="member">S</ref>.size())</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classKDL_1_1SolverI_1a62d29639f6396a0660ce7e3958d14718" kindref="member">error</ref><sp/>=<sp/><ref refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a713b62c139a0caee351f94aa7598e56a" kindref="member">E_SIZE_MISMATCH</ref>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sout=<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ad94b2a63197896582aad47602c5b084d" kindref="member">S</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classKDL_1_1SolverI_1a62d29639f6396a0660ce7e3958d14718" kindref="member">error</ref><sp/>=<sp/><ref refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a95f2e049884a3a08fc4f839e4cbf6191" kindref="member">E_NOERROR</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classKDL_1_1ChainIkSolverVel__wdls_1a3076f9888b9e3905abbadf37cfa0e692" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a3076f9888b9e3905abbadf37cfa0e692" kindref="member">ChainIkSolverVel_wdls::CartToJnt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref>&amp;<sp/>q_in,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref>&amp;<sp/>v_in,<sp/><ref refid="classKDL_1_1JntArray" kindref="compound">JntArray</ref>&amp;<sp/>qdot_out)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a021ceab3f844d7900134cd4ccb2a28bc" kindref="member">nj</ref><sp/>!=<sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a740ab879917a5a23997a4a77198a0c20" kindref="member">chain</ref>.<ref refid="classKDL_1_1Chain_1a24915919dabc4ea58600a38882445cd8" kindref="member">getNrOfJoints</ref>())</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classKDL_1_1SolverI_1a62d29639f6396a0660ce7e3958d14718" kindref="member">error</ref><sp/>=<sp/><ref refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a1803914d79d602cbc5ffced121c5278c" kindref="member">E_NOT_UP_TO_DATE</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a021ceab3f844d7900134cd4ccb2a28bc" kindref="member">nj</ref><sp/>!=<sp/>q_in.<ref refid="classKDL_1_1JntArray_1a3176b3c2ebbeeca6e45a3e8d4d692e5b" kindref="member">rows</ref>()<sp/>||<sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a021ceab3f844d7900134cd4ccb2a28bc" kindref="member">nj</ref><sp/>!=<sp/>qdot_out.<ref refid="classKDL_1_1JntArray_1a3176b3c2ebbeeca6e45a3e8d4d692e5b" kindref="member">rows</ref>())</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classKDL_1_1SolverI_1a62d29639f6396a0660ce7e3958d14718" kindref="member">error</ref><sp/>=<sp/><ref refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a713b62c139a0caee351f94aa7598e56a" kindref="member">E_SIZE_MISMATCH</ref>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1SolverI_1a62d29639f6396a0660ce7e3958d14718" kindref="member">error</ref><sp/>=<sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a8796ef16f6cd2830e3a43c9eb8ff88e2" kindref="member">jnt2jac</ref>.<ref refid="classKDL_1_1ChainJntToJacSolver_1a1e714cdb2b915a9774fe7e0eafd4b8f9" kindref="member">JntToJac</ref>(q_in,<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ac9299ef563ec5815499f2c35ce0b883e" kindref="member">jac</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classKDL_1_1SolverI_1a62d29639f6396a0660ce7e3958d14718" kindref="member">error</ref><sp/>&lt;<sp/><ref refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a95f2e049884a3a08fc4f839e4cbf6191" kindref="member">E_NOERROR</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1SolverI_1a62d29639f6396a0660ce7e3958d14718" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>(internal)<sp/>return<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a363e75fec6563ede5b459e1f031c592d" kindref="member">nrZeroSigmas</ref><sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a06bcbfed8887292f167934f920dd40ed" kindref="member">sigmaMin</ref><sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1af175343fb975a5c945ff8685d757112a" kindref="member">lambda_scaled</ref><sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(i=0;i&lt;jac.rows();i++)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(j=0;j&lt;jac.columns();j++)</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_jac(i,j)<sp/>=<sp/>jac(i,j);</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>Weighted<sp/>jacobian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ae9fba66e3d579e64d3f565a8445225f1" kindref="member">tmp_jac_weight1</ref><sp/>=<sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ac9299ef563ec5815499f2c35ce0b883e" kindref="member">jac</ref>.<ref refid="classKDL_1_1Jacobian_1a73cf18ac91b146f6be631a941d5bee3c" kindref="member">data</ref>.lazyProduct(<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ab90f39f954fbd6ba7c342c556bf069e5" kindref="member">weight_js</ref>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1aa8214cd2b7a4c3975dc349866616a2cd" kindref="member">tmp_jac_weight2</ref><sp/>=<sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ab3f86f99a1660a8eddbfa325f83d8c31" kindref="member">weight_ts</ref>.lazyProduct(<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ae9fba66e3d579e64d3f565a8445225f1" kindref="member">tmp_jac_weight1</ref>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>SVD<sp/>of<sp/>the<sp/>weighted<sp/>jacobian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a3a2889789ba0f8a625ec5046a1a7f6c7" kindref="member">svdResult</ref><sp/>=<sp/><ref refid="namespaceKDL_1a018cd64c810b4538db502263927b2071" kindref="member">svd_eigen_HH</ref>(<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1aa8214cd2b7a4c3975dc349866616a2cd" kindref="member">tmp_jac_weight2</ref>,<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a89fd8e0a34b6c574efed0a9141489417" kindref="member">U</ref>,<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ad94b2a63197896582aad47602c5b084d" kindref="member">S</ref>,<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ac1c7f7091da0a3b419399b9944ca5dc7" kindref="member">V</ref>,<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ac1cb14a25dbe53fa78a4b7c2b278292f" kindref="member">tmp</ref>,<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ad0f5514e9e2a16f08fee14c88036c18f" kindref="member">maxiter</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>!=<sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a3a2889789ba0f8a625ec5046a1a7f6c7" kindref="member">svdResult</ref>)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qdot_out.<ref refid="classKDL_1_1JntArray_1a59dff4a2f3fa4adedb55c3384238dc74" kindref="member">data</ref>.setZero()<sp/>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classKDL_1_1SolverI_1a62d29639f6396a0660ce7e3958d14718" kindref="member">error</ref><sp/>=<sp/><ref refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148ac70eed0a4997fd525b00e5eddeb39ba5" kindref="member">E_SVD_FAILED</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Pre-multiply<sp/>U<sp/>and<sp/>V<sp/>by<sp/>the<sp/>task<sp/>space<sp/>and<sp/>joint<sp/>space<sp/>weighting<sp/>matrix<sp/>respectively</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a42647f11371d7c5321c177f17091ab46" kindref="member">tmp_ts</ref><sp/>=<sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ab3f86f99a1660a8eddbfa325f83d8c31" kindref="member">weight_ts</ref>.lazyProduct(<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a89fd8e0a34b6c574efed0a9141489417" kindref="member">U</ref>.topLeftCorner(6,6));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a01d81182077b1106dd5f3e7557f769f7" kindref="member">tmp_js</ref><sp/>=<sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ab90f39f954fbd6ba7c342c556bf069e5" kindref="member">weight_js</ref>.lazyProduct(<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ac1c7f7091da0a3b419399b9944ca5dc7" kindref="member">V</ref>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Minimum<sp/>of<sp/>six<sp/>largest<sp/>singular<sp/>values<sp/>of<sp/>J<sp/>is<sp/>S(5)<sp/>if<sp/>number<sp/>of<sp/>joints<sp/>&gt;=6<sp/>and<sp/>0<sp/>for<sp/>&lt;6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ac9299ef563ec5815499f2c35ce0b883e" kindref="member">jac</ref>.<ref refid="classKDL_1_1Jacobian_1a8a49fa5fc952d21c4bbda5eb7c9e1e3a" kindref="member">columns</ref>()<sp/>&gt;=<sp/>6<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a06bcbfed8887292f167934f920dd40ed" kindref="member">sigmaMin</ref><sp/>=<sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ad94b2a63197896582aad47602c5b084d" kindref="member">S</ref>(5);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a06bcbfed8887292f167934f920dd40ed" kindref="member">sigmaMin</ref><sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tmp<sp/>=<sp/>(Si*U&apos;*Ly*y),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ac9299ef563ec5815499f2c35ce0b883e" kindref="member">jac</ref>.<ref refid="classKDL_1_1Jacobian_1a8a49fa5fc952d21c4bbda5eb7c9e1e3a" kindref="member">columns</ref>();i++)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;j&lt;<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ac9299ef563ec5815499f2c35ce0b883e" kindref="member">jac</ref>.<ref refid="classKDL_1_1Jacobian_1aceb13ee968c4b162b1f944539a5e0616" kindref="member">rows</ref>();j++)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i&lt;6)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum+=<sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a42647f11371d7c5321c177f17091ab46" kindref="member">tmp_ts</ref>(j,i)*v_in(j);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum+=0.0;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>sigmaMin<sp/>&gt;<sp/>eps,<sp/>then<sp/>wdls<sp/>is<sp/>not<sp/>active<sp/>and<sp/>lambda_scaled<sp/>=<sp/>0<sp/>(default<sp/>value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>sigmaMin<sp/>&lt;<sp/>eps,<sp/>then<sp/>wdls<sp/>is<sp/>active<sp/>and<sp/>lambda_scaled<sp/>is<sp/>scaled<sp/>from<sp/>0<sp/>to<sp/>lambda</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/><sp/>singular<sp/>values<sp/>are<sp/>always<sp/>positive<sp/>so<sp/>sigmaMin<sp/>&gt;=0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a06bcbfed8887292f167934f920dd40ed" kindref="member">sigmaMin</ref><sp/>&lt;<sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a7bf9cd814386299d25aa3568d27072ca" kindref="member">eps</ref><sp/>)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1af175343fb975a5c945ff8685d757112a" kindref="member">lambda_scaled</ref><sp/>=<sp/><ref refid="namespaceKDL_1aa6caeaeca2777225cf1f09355e286d27" kindref="member">sqrt</ref>(1.0-(<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a06bcbfed8887292f167934f920dd40ed" kindref="member">sigmaMin</ref>/<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a7bf9cd814386299d25aa3568d27072ca" kindref="member">eps</ref>)*(<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a06bcbfed8887292f167934f920dd40ed" kindref="member">sigmaMin</ref>/<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a7bf9cd814386299d25aa3568d27072ca" kindref="member">eps</ref>))*<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1aeba04bde651f4277dad25c8955cd69ad" kindref="member">lambda</ref><sp/>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fabs(<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ad94b2a63197896582aad47602c5b084d" kindref="member">S</ref>(i))&lt;<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a7bf9cd814386299d25aa3568d27072ca" kindref="member">eps</ref>)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&lt;6)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scale<sp/>lambda<sp/>to<sp/>size<sp/>of<sp/>singular<sp/>value<sp/>sigmaMin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ac1cb14a25dbe53fa78a4b7c2b278292f" kindref="member">tmp</ref>(i)<sp/>=<sp/>sum*((<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ad94b2a63197896582aad47602c5b084d" kindref="member">S</ref>(i)/(<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ad94b2a63197896582aad47602c5b084d" kindref="member">S</ref>(i)*<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ad94b2a63197896582aad47602c5b084d" kindref="member">S</ref>(i)+<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1af175343fb975a5c945ff8685d757112a" kindref="member">lambda_scaled</ref>*<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1af175343fb975a5c945ff8685d757112a" kindref="member">lambda_scaled</ref>)));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ac1cb14a25dbe53fa78a4b7c2b278292f" kindref="member">tmp</ref>(i)=0.0;<sp/><sp/></highlight><highlight class="comment">//<sp/>S(i)=0<sp/>for<sp/>i&gt;=6<sp/>due<sp/>to<sp/>cols&gt;rows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Count<sp/>number<sp/>of<sp/>singular<sp/>values<sp/>near<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a363e75fec6563ede5b459e1f031c592d" kindref="member">nrZeroSigmas</ref><sp/>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ac1cb14a25dbe53fa78a4b7c2b278292f" kindref="member">tmp</ref>(i)<sp/>=<sp/>sum/<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ad94b2a63197896582aad47602c5b084d" kindref="member">S</ref>(i);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>x<sp/>=<sp/>Lx^-1*V*tmp<sp/>+<sp/>x</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(i=0;i&lt;jac.columns();i++)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(j=0;j&lt;jac.columns();j++)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum+=tmp_js(i,j)*tmp(j);</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qdot_out(i)=sum;</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qdot_out.<ref refid="classKDL_1_1JntArray_1a59dff4a2f3fa4adedb55c3384238dc74" kindref="member">data</ref>=<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a01d81182077b1106dd5f3e7557f769f7" kindref="member">tmp_js</ref>.lazyProduct(<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ac1cb14a25dbe53fa78a4b7c2b278292f" kindref="member">tmp</ref>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>number<sp/>of<sp/>near<sp/>zero<sp/>singular<sp/>values<sp/>is<sp/>greater<sp/>than<sp/>the<sp/>full<sp/>rank</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>jac,<sp/>then<sp/>wdls<sp/>is<sp/>active</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a363e75fec6563ede5b459e1f031c592d" kindref="member">nrZeroSigmas</ref><sp/>&gt;<sp/>(<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ac9299ef563ec5815499f2c35ce0b883e" kindref="member">jac</ref>.<ref refid="classKDL_1_1Jacobian_1a8a49fa5fc952d21c4bbda5eb7c9e1e3a" kindref="member">columns</ref>()-<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1ac9299ef563ec5815499f2c35ce0b883e" kindref="member">jac</ref>.<ref refid="classKDL_1_1Jacobian_1aceb13ee968c4b162b1f944539a5e0616" kindref="member">rows</ref>())<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classKDL_1_1SolverI_1a62d29639f6396a0660ce7e3958d14718" kindref="member">error</ref><sp/>=<sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a740d84e22565a0fcf73dd834e4152fbf" kindref="member">E_CONVERGE_PINV_SINGULAR</ref>);<sp/><sp/></highlight><highlight class="comment">//<sp/>converged<sp/>but<sp/>pinv<sp/>singular</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classKDL_1_1SolverI_1a62d29639f6396a0660ce7e3958d14718" kindref="member">error</ref><sp/>=<sp/><ref refid="classKDL_1_1SolverI_1a73d6b62495bbc2626a85004002b2c148a95f2e049884a3a08fc4f839e4cbf6191" kindref="member">E_NOERROR</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>converged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="classKDL_1_1ChainIkSolverVel__wdls_1a233d66f30b218edff6619c7aa21aec17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a233d66f30b218edff6619c7aa21aec17" kindref="member">ChainIkSolverVel_wdls::strError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="219"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classKDL_1_1ChainIkSolverVel__wdls_1a740d84e22565a0fcf73dd834e4152fbf" kindref="member">E_CONVERGE_PINV_SINGULAR</ref><sp/>==<sp/><ref refid="classKDL_1_1SolverI_1a62d29639f6396a0660ce7e3958d14718" kindref="member">error</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Converged<sp/>put<sp/>pseudo<sp/>inverse<sp/>of<sp/>jacobian<sp/>is<sp/>singular.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1SolverI_1a5f9c4f020d4d609d8d10a7a949e8195c" kindref="member">SolverI::strError</ref>(<ref refid="classKDL_1_1SolverI_1a62d29639f6396a0660ce7e3958d14718" kindref="member">error</ref>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/chainiksolvervel_wdls.cpp"/>
  </compounddef>
</doxygen>
