<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="frameacc_8inl" kind="file" language="C++">
    <compoundname>frameacc.inl</compoundname>
    <includedby refid="frameacc_8hpp" local="yes">frameacc.hpp</includedby>
    <invincdepgraph>
      <node id="22">
        <label>chainiksolverpos_nr.cpp</label>
        <link refid="chainiksolverpos__nr_8cpp"/>
      </node>
      <node id="7">
        <label>kukaLWRtestHCG.cpp</label>
        <link refid="kukaLWRtestHCG_8cpp"/>
      </node>
      <node id="15">
        <label>chainjnttojacdotsolver.cpp</label>
        <link refid="chainjnttojacdotsolver_8cpp"/>
      </node>
      <node id="40">
        <label>frameacc_io.hpp</label>
        <link refid="frameacc__io_8hpp"/>
      </node>
      <node id="1">
        <label>frameacc.inl</label>
        <link refid="frameacc_8inl"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>chainfksolvervel_recursive.cpp</label>
        <link refid="chainfksolvervel__recursive_8cpp"/>
      </node>
      <node id="30">
        <label>chainiksolvervel_pinv.cpp</label>
        <link refid="chainiksolvervel__pinv_8cpp"/>
      </node>
      <node id="39">
        <label>frameacc.cpp</label>
        <link refid="frameacc_8cpp"/>
      </node>
      <node id="11">
        <label>solvertest.hpp</label>
        <link refid="solvertest_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>chainiksolvervel_wdls.cpp</label>
        <link refid="chainiksolvervel__wdls_8cpp"/>
      </node>
      <node id="8">
        <label>puma560test.cpp</label>
        <link refid="puma560test_8cpp"/>
      </node>
      <node id="28">
        <label>chainiksolverpos_lma.cpp</label>
        <link refid="chainiksolverpos__lma_8cpp"/>
      </node>
      <node id="34">
        <label>chainiksolvervel_pinv_nso.cpp</label>
        <link refid="chainiksolvervel__pinv__nso_8cpp"/>
      </node>
      <node id="21">
        <label>chainiksolverpos_nr.hpp</label>
        <link refid="chainiksolverpos__nr_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>chainfksolverpos_recursive.hpp</label>
        <link refid="chainfksolverpos__recursive_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>chainfksolvervel_recursive.hpp</label>
        <link refid="chainfksolvervel__recursive_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>chainiksolvervel_pinv_nso.hpp</label>
        <link refid="chainiksolvervel__pinv__nso_8hpp"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>chainiksolvervel_pinv_givens.hpp</label>
        <link refid="chainiksolvervel__pinv__givens_8hpp"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>chainiksolverpos_lma.hpp</label>
        <link refid="chainiksolverpos__lma_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>chainfksolverpos_recursive.cpp</label>
        <link refid="chainfksolverpos__recursive_8cpp"/>
      </node>
      <node id="6">
        <label>kukaLWRtestDHnew.cpp</label>
        <link refid="kukaLWRtestDHnew_8cpp"/>
      </node>
      <node id="16">
        <label>jacobiandottest.hpp</label>
        <link refid="jacobiandottest_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>chainiksolverpos_nr_jl.cpp</label>
        <link refid="chainiksolverpos__nr__jl_8cpp"/>
      </node>
      <node id="32">
        <label>chainiksolvervel_pinv_givens.cpp</label>
        <link refid="chainiksolvervel__pinv__givens_8cpp"/>
      </node>
      <node id="9">
        <label>chainexternalwrenchestimator.hpp</label>
        <link refid="chainexternalwrenchestimator_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>chainiksolverpos_lma_demo.cpp</label>
        <link refid="chainiksolverpos__lma__demo_8cpp"/>
      </node>
      <node id="25">
        <label>jntarrayacc.hpp</label>
        <link refid="jntarrayacc_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>kinfamtest.cpp</label>
        <link refid="kinfamtest_8cpp"/>
      </node>
      <node id="3">
        <label>chainfksolver.hpp</label>
        <link refid="chainfksolver_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>chainjnttojacdotsolver.hpp</label>
        <link refid="chainjnttojacdotsolver_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>chainiksolvervel_pinv.hpp</label>
        <link refid="chainiksolvervel__pinv_8hpp"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>frameacc.hpp</label>
        <link refid="frameacc_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>solvertest.cpp</label>
        <link refid="solvertest_8cpp"/>
      </node>
      <node id="38">
        <label>jntarrayvel.cpp</label>
        <link refid="jntarrayvel_8cpp"/>
      </node>
      <node id="26">
        <label>chainiksolver.hpp</label>
        <link refid="chainiksolver_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>chainiksolvervel_wdls.hpp</label>
        <link refid="chainiksolvervel__wdls_8hpp"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>jacobiandottest.cpp</label>
        <link refid="jacobiandottest_8cpp"/>
      </node>
      <node id="23">
        <label>chainiksolverpos_nr_jl.hpp</label>
        <link refid="chainiksolverpos__nr__jl_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>chainexternalwrenchestimator.cpp</label>
        <link refid="chainexternalwrenchestimator_8cpp"/>
      </node>
      <node id="37">
        <label>jntarrayacc.cpp</label>
        <link refid="jntarrayacc_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="frameacc_8inl_1a9348d3feeb949ad48287a8db9704ce71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>doubleAcc</type>
        <definition>doubleAcc dot</definition>
        <argsstring>(const Vector &amp;lhs, const VectorAcc &amp;rhs)</argsstring>
        <name>dot</name>
        <param>
          <type>const Vector &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const VectorAcc &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="151" column="11" bodyfile="src/frameacc.inl" bodystart="151" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1aa77d59aafcfced5850762e08106117b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>doubleAcc</type>
        <definition>doubleAcc dot</definition>
        <argsstring>(const VectorAcc &amp;lhs, const Vector &amp;rhs)</argsstring>
        <name>dot</name>
        <param>
          <type>const VectorAcc &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const Vector &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="144" column="11" bodyfile="src/frameacc.inl" bodystart="144" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>doubleAcc</type>
        <definition>doubleAcc dot</definition>
        <argsstring>(const VectorAcc &amp;lhs, const VectorAcc &amp;rhs)</argsstring>
        <name>dot</name>
        <param>
          <type>const VectorAcc &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const VectorAcc &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="137" column="11" bodyfile="src/frameacc.inl" bodystart="137" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1afff611bd9ed2bc095a2caf213b5c5546" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Equal</definition>
        <argsstring>(const Frame &amp;r1, const FrameAcc &amp;r2, double eps)</argsstring>
        <name>Equal</name>
        <param>
          <type>const Frame &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const FrameAcc &amp;</type>
          <declname>r2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="396" column="6" bodyfile="src/frameacc.inl" bodystart="396" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1aa7e494030fa6b0b0e97f6d1d75d42310" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Equal</definition>
        <argsstring>(const FrameAcc &amp;r1, const Frame &amp;r2, double eps)</argsstring>
        <name>Equal</name>
        <param>
          <type>const FrameAcc &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const Frame &amp;</type>
          <declname>r2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="399" column="6" bodyfile="src/frameacc.inl" bodystart="399" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a139da01e831b08080fe1c481daabaa4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Equal</definition>
        <argsstring>(const FrameAcc &amp;r1, const FrameAcc &amp;r2, double eps)</argsstring>
        <name>Equal</name>
        <param>
          <type>const FrameAcc &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const FrameAcc &amp;</type>
          <declname>r2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="393" column="6" bodyfile="src/frameacc.inl" bodystart="393" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a9a46edd44fc0dee017650d19bd86d053" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Equal</definition>
        <argsstring>(const Rotation &amp;r1, const RotationAcc &amp;r2, double eps)</argsstring>
        <name>Equal</name>
        <param>
          <type>const Rotation &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const RotationAcc &amp;</type>
          <declname>r2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="326" column="6" bodyfile="src/frameacc.inl" bodystart="326" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a9e05363495ab57754306c60eef7eec18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Equal</definition>
        <argsstring>(const RotationAcc &amp;r1, const Rotation &amp;r2, double eps)</argsstring>
        <name>Equal</name>
        <param>
          <type>const RotationAcc &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const Rotation &amp;</type>
          <declname>r2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="330" column="6" bodyfile="src/frameacc.inl" bodystart="330" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a69ce3e5feb3e5c145bb763d2dbb7b832" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Equal</definition>
        <argsstring>(const RotationAcc &amp;r1, const RotationAcc &amp;r2, double eps)</argsstring>
        <name>Equal</name>
        <param>
          <type>const RotationAcc &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const RotationAcc &amp;</type>
          <declname>r2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="323" column="6" bodyfile="src/frameacc.inl" bodystart="323" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a2d313ff9c4ae7f4b879fb8118d41caa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Equal</definition>
        <argsstring>(const Twist &amp;a, const TwistAcc &amp;b, double eps)</argsstring>
        <name>Equal</name>
        <param>
          <type>const Twist &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const TwistAcc &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="590" column="6" bodyfile="src/frameacc.inl" bodystart="590" bodyend="593"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a251d4ba776ba0a0f3a6857839b1fc00a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Equal</definition>
        <argsstring>(const TwistAcc &amp;a, const Twist &amp;b, double eps)</argsstring>
        <name>Equal</name>
        <param>
          <type>const TwistAcc &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const Twist &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="594" column="6" bodyfile="src/frameacc.inl" bodystart="594" bodyend="597"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a87e82d76f07de09ef85710d52f4c6594" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Equal</definition>
        <argsstring>(const TwistAcc &amp;a, const TwistAcc &amp;b, double eps)</argsstring>
        <name>Equal</name>
        <param>
          <type>const TwistAcc &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const TwistAcc &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="586" column="6" bodyfile="src/frameacc.inl" bodystart="586" bodyend="589"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a23d95358b72f698f771cfad3c4554ec7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Equal</definition>
        <argsstring>(const Vector &amp;r1, const VectorAcc &amp;r2, double eps)</argsstring>
        <name>Equal</name>
        <param>
          <type>const Vector &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const VectorAcc &amp;</type>
          <declname>r2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="166" column="6" bodyfile="src/frameacc.inl" bodystart="166" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1ae1c4dae74d4466adfa28815de4d8e56f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Equal</definition>
        <argsstring>(const VectorAcc &amp;r1, const Vector &amp;r2, double eps)</argsstring>
        <name>Equal</name>
        <param>
          <type>const VectorAcc &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const Vector &amp;</type>
          <declname>r2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="173" column="6" bodyfile="src/frameacc.inl" bodystart="173" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Equal</definition>
        <argsstring>(const VectorAcc &amp;r1, const VectorAcc &amp;r2, double eps)</argsstring>
        <name>Equal</name>
        <param>
          <type>const VectorAcc &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const VectorAcc &amp;</type>
          <declname>r2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="159" column="6" bodyfile="src/frameacc.inl" bodystart="159" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a51b2a484710ae0dfa71fc9669e7f9298" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TwistAcc</type>
        <definition>TwistAcc operator*</definition>
        <argsstring>(const doubleAcc &amp;lhs, const TwistAcc &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const doubleAcc &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const TwistAcc &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="492" column="10" bodyfile="src/frameacc.inl" bodystart="492" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a89ee6739447b86b9abde1788465fe34c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VectorAcc</type>
        <definition>VectorAcc operator*</definition>
        <argsstring>(const doubleAcc &amp;r1, const VectorAcc &amp;r2)</argsstring>
        <name>operator*</name>
        <param>
          <type>const doubleAcc &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const VectorAcc &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="78" column="11" bodyfile="src/frameacc.inl" bodystart="78" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a9811932bbd23441b35b554cff1793bb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FrameAcc</type>
        <definition>FrameAcc operator*</definition>
        <argsstring>(const Frame &amp;lhs, const FrameAcc &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const Frame &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const FrameAcc &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="357" column="10" bodyfile="src/frameacc.inl" bodystart="357" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a4a355a5256f5d4e2c0e754f2d99d667a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FrameAcc</type>
        <definition>FrameAcc operator*</definition>
        <argsstring>(const FrameAcc &amp;lhs, const Frame &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const FrameAcc &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const Frame &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="353" column="10" bodyfile="src/frameacc.inl" bodystart="353" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a1adb514d0c1e0fdb4d36a999409e64de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FrameAcc</type>
        <definition>FrameAcc operator*</definition>
        <argsstring>(const FrameAcc &amp;lhs, const FrameAcc &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const FrameAcc &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const FrameAcc &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="349" column="10" bodyfile="src/frameacc.inl" bodystart="349" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a7fcb4b8a36312e34fa9bf38fe9dbc30c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VectorAcc</type>
        <definition>VectorAcc operator*</definition>
        <argsstring>(const Rotation &amp;R, const VectorAcc &amp;x)</argsstring>
        <name>operator*</name>
        <param>
          <type>const Rotation &amp;</type>
          <declname>R</declname>
        </param>
        <param>
          <type>const VectorAcc &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="254" column="11" bodyfile="src/frameacc.inl" bodystart="254" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a72c3ff56497cdaac25b25ebcab81abff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RotationAcc</type>
        <definition>RotationAcc operator*</definition>
        <argsstring>(const Rotation &amp;r1, const RotationAcc &amp;r2)</argsstring>
        <name>operator*</name>
        <param>
          <type>const Rotation &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const RotationAcc &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="199" column="13" bodyfile="src/frameacc.inl" bodystart="199" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a599a368b8310f8ec5c2ee7da3673a7f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RotationAcc</type>
        <definition>RotationAcc operator*</definition>
        <argsstring>(const RotationAcc &amp;r1, const Rotation &amp;r2)</argsstring>
        <name>operator*</name>
        <param>
          <type>const RotationAcc &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const Rotation &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="203" column="13" bodyfile="src/frameacc.inl" bodystart="203" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a666977357c0d1cdfbfdcfb5ecd9e0cde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RotationAcc</type>
        <definition>RotationAcc operator*</definition>
        <argsstring>(const RotationAcc &amp;r1, const RotationAcc &amp;r2)</argsstring>
        <name>operator*</name>
        <param>
          <type>const RotationAcc &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const RotationAcc &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="192" column="13" bodyfile="src/frameacc.inl" bodystart="192" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a525285439d428b5c23241eb2d7c4713d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TwistAcc</type>
        <definition>TwistAcc operator*</definition>
        <argsstring>(const TwistAcc &amp;lhs, const doubleAcc &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const TwistAcc &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const doubleAcc &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="487" column="10" bodyfile="src/frameacc.inl" bodystart="487" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a04678da99cc0a64479f7d1e0c6981b4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TwistAcc</type>
        <definition>TwistAcc operator*</definition>
        <argsstring>(const TwistAcc &amp;lhs, double rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const TwistAcc &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="471" column="10" bodyfile="src/frameacc.inl" bodystart="471" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1ae6e930cd42d2de3d75a8cc4a271e8452" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VectorAcc</type>
        <definition>VectorAcc operator*</definition>
        <argsstring>(const Vector &amp;r1, const VectorAcc &amp;r2)</argsstring>
        <name>operator*</name>
        <param>
          <type>const Vector &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const VectorAcc &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="63" column="11" bodyfile="src/frameacc.inl" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a167f079cacdcf83c0a53d1c7e0282526" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VectorAcc</type>
        <definition>VectorAcc operator*</definition>
        <argsstring>(const VectorAcc &amp;r1, const Vector &amp;r2)</argsstring>
        <name>operator*</name>
        <param>
          <type>const VectorAcc &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const Vector &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="59" column="11" bodyfile="src/frameacc.inl" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a3118abc6365c6cf2968d5659ed48b29c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VectorAcc</type>
        <definition>VectorAcc operator*</definition>
        <argsstring>(const VectorAcc &amp;r1, const VectorAcc &amp;r2)</argsstring>
        <name>operator*</name>
        <param>
          <type>const VectorAcc &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const VectorAcc &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="52" column="11" bodyfile="src/frameacc.inl" bodystart="52" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1aee98b09d28982d274378730d264e4353" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VectorAcc</type>
        <definition>VectorAcc operator*</definition>
        <argsstring>(const VectorAcc &amp;r1, double r2)</argsstring>
        <name>operator*</name>
        <param>
          <type>const VectorAcc &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="74" column="11" bodyfile="src/frameacc.inl" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a813759e8c8ab3f1c1b72aa1331a54449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VectorAcc</type>
        <definition>VectorAcc operator*</definition>
        <argsstring>(const VectorAcc &amp;r2, const doubleAcc &amp;r1)</argsstring>
        <name>operator*</name>
        <param>
          <type>const VectorAcc &amp;</type>
          <declname>r2</declname>
        </param>
        <param>
          <type>const doubleAcc &amp;</type>
          <declname>r1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="85" column="11" bodyfile="src/frameacc.inl" bodystart="85" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1aaa64ed0c7026bef45a72d7dbbba83b2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TwistAcc</type>
        <definition>TwistAcc operator*</definition>
        <argsstring>(double lhs, const TwistAcc &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>double</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const TwistAcc &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="476" column="10" bodyfile="src/frameacc.inl" bodystart="476" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a1135a7132167cbfcb3a0ede98c616770" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VectorAcc</type>
        <definition>VectorAcc operator*</definition>
        <argsstring>(double r1, const VectorAcc &amp;r2)</argsstring>
        <name>operator*</name>
        <param>
          <type>double</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const VectorAcc &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="70" column="11" bodyfile="src/frameacc.inl" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a38331c438e34e1f55c93aa99d6651ad3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TwistAcc</type>
        <definition>TwistAcc operator+</definition>
        <argsstring>(const TwistAcc &amp;lhs, const TwistAcc &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type>const TwistAcc &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const TwistAcc &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="505" column="10" bodyfile="src/frameacc.inl" bodystart="505" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a79dd7b2e17069fd3a6eb0a759976a652" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VectorAcc</type>
        <definition>VectorAcc operator+</definition>
        <argsstring>(const Vector &amp;r1, const VectorAcc &amp;r2)</argsstring>
        <name>operator+</name>
        <param>
          <type>const Vector &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const VectorAcc &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="31" column="11" bodyfile="src/frameacc.inl" bodystart="31" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a8c13f2bce2a6d46226f14d8d5eee1b69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VectorAcc</type>
        <definition>VectorAcc operator+</definition>
        <argsstring>(const VectorAcc &amp;r1, const Vector &amp;r2)</argsstring>
        <name>operator+</name>
        <param>
          <type>const VectorAcc &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const Vector &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="38" column="11" bodyfile="src/frameacc.inl" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1ab79cbde654a8ff51142c16eaefb4b18f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VectorAcc</type>
        <definition>VectorAcc operator+</definition>
        <argsstring>(const VectorAcc &amp;r1, const VectorAcc &amp;r2)</argsstring>
        <name>operator+</name>
        <param>
          <type>const VectorAcc &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const VectorAcc &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="24" column="11" bodyfile="src/frameacc.inl" bodystart="24" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1accc1660310d17859190d606e6dfe21fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TwistAcc</type>
        <definition>TwistAcc operator-</definition>
        <argsstring>(const TwistAcc &amp;arg)</argsstring>
        <name>operator-</name>
        <param>
          <type>const TwistAcc &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="516" column="10" bodyfile="src/frameacc.inl" bodystart="516" bodyend="519"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1aada5bad57428ba3f3ea69ffb024df0d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TwistAcc</type>
        <definition>TwistAcc operator-</definition>
        <argsstring>(const TwistAcc &amp;lhs, const TwistAcc &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type>const TwistAcc &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const TwistAcc &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="510" column="10" bodyfile="src/frameacc.inl" bodystart="510" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a4fad23be7904fa133f8ff87b9ae6ec6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VectorAcc</type>
        <definition>VectorAcc operator-</definition>
        <argsstring>(const Vector &amp;r1, const VectorAcc &amp;r2)</argsstring>
        <name>operator-</name>
        <param>
          <type>const Vector &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const VectorAcc &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="35" column="11" bodyfile="src/frameacc.inl" bodystart="35" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a9b32fe52b03600a2b383c762ba2ec1a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VectorAcc</type>
        <definition>VectorAcc operator-</definition>
        <argsstring>(const VectorAcc &amp;r)</argsstring>
        <name>operator-</name>
        <param>
          <type>const VectorAcc &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="47" column="11" bodyfile="src/frameacc.inl" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1af9530d45ed89585eaa39658d10188f4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VectorAcc</type>
        <definition>VectorAcc operator-</definition>
        <argsstring>(const VectorAcc &amp;r1, const Vector &amp;r2)</argsstring>
        <name>operator-</name>
        <param>
          <type>const VectorAcc &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const Vector &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="42" column="11" bodyfile="src/frameacc.inl" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a6f3c8051d909ff25d801b5db9e3df6b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VectorAcc</type>
        <definition>VectorAcc operator-</definition>
        <argsstring>(const VectorAcc &amp;r1, const VectorAcc &amp;r2)</argsstring>
        <name>operator-</name>
        <param>
          <type>const VectorAcc &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const VectorAcc &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="28" column="11" bodyfile="src/frameacc.inl" bodystart="28" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1ac23e0a1ab270e215c34258145c837756" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TwistAcc</type>
        <definition>TwistAcc operator/</definition>
        <argsstring>(const TwistAcc &amp;lhs, const doubleAcc &amp;rhs)</argsstring>
        <name>operator/</name>
        <param>
          <type>const TwistAcc &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const doubleAcc &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="497" column="10" bodyfile="src/frameacc.inl" bodystart="497" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1aab67ed8e756c0245b7578d8bf2191077" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TwistAcc</type>
        <definition>TwistAcc operator/</definition>
        <argsstring>(const TwistAcc &amp;lhs, double rhs)</argsstring>
        <name>operator/</name>
        <param>
          <type>const TwistAcc &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="481" column="10" bodyfile="src/frameacc.inl" bodystart="481" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1a718ee51f4f456115116dfb40a122c9b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VectorAcc</type>
        <definition>VectorAcc operator/</definition>
        <argsstring>(const VectorAcc &amp;r1, double r2)</argsstring>
        <name>operator/</name>
        <param>
          <type>const VectorAcc &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="180" column="11" bodyfile="src/frameacc.inl" bodystart="180" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="frameacc_8inl_1aeeef31a0b07aa528d3002f1d15d84f64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VectorAcc</type>
        <definition>VectorAcc operator/</definition>
        <argsstring>(const VectorAcc &amp;r2, const doubleAcc &amp;r1)</argsstring>
        <name>operator/</name>
        <param>
          <type>const VectorAcc &amp;</type>
          <declname>r2</declname>
        </param>
        <param>
          <type>const doubleAcc &amp;</type>
          <declname>r1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/frameacc.inl" line="184" column="11" bodyfile="src/frameacc.inl" bodystart="184" bodyend="186"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>\file<sp/><sp/></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>provides<sp/>inline<sp/>functions<sp/>of<sp/>rrframes.h</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>\author<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Erwin<sp/>Aertbelien,<sp/>Div.<sp/>PMA,<sp/>Dep.<sp/>of<sp/>Mech.<sp/>Eng.,<sp/>K.U.Leuven</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>\version<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>ORO_Geometry<sp/>V0.2</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>\par<sp/>History</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>$log$</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>\par<sp/>Release</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>$Id:<sp/>rrframes.inl,v<sp/>1.1.1.1<sp/>2002/08/26<sp/>14:14:21<sp/>rmoreas<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>$Name:<sp/><sp/>$<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="frameacc_8inl_1ab79cbde654a8ff51142c16eaefb4b18f" refkind="member"><highlight class="normal">VectorAcc<sp/><ref refid="frameacc_8inl_1ab79cbde654a8ff51142c16eaefb4b18f" kindref="member">operator + </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorAcc&amp;<sp/>r1,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorAcc&amp;<sp/>r2)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VectorAcc(r1.p+r2.p,r1.v+r2.v,r1.dv+r2.dv);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="frameacc_8inl_1a6f3c8051d909ff25d801b5db9e3df6b9" refkind="member"><highlight class="normal">VectorAcc<sp/><ref refid="frameacc_8inl_1a6f3c8051d909ff25d801b5db9e3df6b9" kindref="member">operator - </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorAcc&amp;<sp/>r1,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorAcc&amp;<sp/>r2)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VectorAcc(r1.p-r2.p,<sp/>r1.v-r2.v,<sp/>r1.dv-r2.dv);</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31" refid="frameacc_8inl_1a79dd7b2e17069fd3a6eb0a759976a652" refkind="member"><highlight class="normal">VectorAcc<sp/><ref refid="frameacc_8inl_1ab79cbde654a8ff51142c16eaefb4b18f" kindref="member">operator + </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&amp;<sp/>r1,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorAcc&amp;<sp/>r2)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VectorAcc(r1+r2.p,r2.v,r2.dv);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="frameacc_8inl_1a4fad23be7904fa133f8ff87b9ae6ec6f" refkind="member"><highlight class="normal">VectorAcc<sp/><ref refid="frameacc_8inl_1a6f3c8051d909ff25d801b5db9e3df6b9" kindref="member">operator - </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&amp;<sp/>r1,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorAcc&amp;<sp/>r2)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VectorAcc(r1-r2.p,<sp/>-r2.v,<sp/>-r2.dv);</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38" refid="frameacc_8inl_1a8c13f2bce2a6d46226f14d8d5eee1b69" refkind="member"><highlight class="normal">VectorAcc<sp/><ref refid="frameacc_8inl_1ab79cbde654a8ff51142c16eaefb4b18f" kindref="member">operator + </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorAcc&amp;<sp/>r1,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&amp;<sp/>r2)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VectorAcc(r1.p+r2,r1.v,r1.dv);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="frameacc_8inl_1af9530d45ed89585eaa39658d10188f4a" refkind="member"><highlight class="normal">VectorAcc<sp/><ref refid="frameacc_8inl_1a6f3c8051d909ff25d801b5db9e3df6b9" kindref="member">operator - </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorAcc&amp;<sp/>r1,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&amp;<sp/>r2)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VectorAcc(r1.p-r2,<sp/>r1.v,<sp/>r1.dv);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unary<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="frameacc_8inl_1a9b32fe52b03600a2b383c762ba2ec1a6" refkind="member"><highlight class="normal">VectorAcc<sp/><ref refid="frameacc_8inl_1a6f3c8051d909ff25d801b5db9e3df6b9" kindref="member">operator - </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorAcc&amp;<sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VectorAcc(-r.p,-r.v,-r.dv);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cross<sp/>prod.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="frameacc_8inl_1a3118abc6365c6cf2968d5659ed48b29c" refkind="member"><highlight class="normal">VectorAcc<sp/><ref refid="frameacc_8inl_1a3118abc6365c6cf2968d5659ed48b29c" kindref="member">operator * </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorAcc&amp;<sp/>r1,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorAcc&amp;<sp/>r2)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VectorAcc(r1.p*r2.p,<sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r1.p*r2.v+r1.v*r2.p,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r1.dv*r2.p+2*r1.v*r2.v+r1.p*r2.dv</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="frameacc_8inl_1a167f079cacdcf83c0a53d1c7e0282526" refkind="member"><highlight class="normal">VectorAcc<sp/><ref refid="frameacc_8inl_1a3118abc6365c6cf2968d5659ed48b29c" kindref="member">operator * </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorAcc&amp;<sp/>r1,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&amp;<sp/>r2)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VectorAcc(r1.p*r2,<sp/>r1.v*r2,<sp/>r1.dv*r2<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="frameacc_8inl_1ae6e930cd42d2de3d75a8cc4a271e8452" refkind="member"><highlight class="normal">VectorAcc<sp/><ref refid="frameacc_8inl_1a3118abc6365c6cf2968d5659ed48b29c" kindref="member">operator * </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&amp;<sp/>r1,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorAcc&amp;<sp/>r2)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VectorAcc(r1*r2.p,<sp/>r1*r2.v,<sp/>r1*r2.dv<sp/>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>scalar<sp/>mult.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="frameacc_8inl_1a1135a7132167cbfcb3a0ede98c616770" refkind="member"><highlight class="normal">VectorAcc<sp/><ref refid="frameacc_8inl_1a3118abc6365c6cf2968d5659ed48b29c" kindref="member">operator * </ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r1,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorAcc&amp;<sp/>r2)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VectorAcc(r1*r2.p,<sp/>r1*r2.v,<sp/>r1*r2.dv<sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="frameacc_8inl_1aee98b09d28982d274378730d264e4353" refkind="member"><highlight class="normal">VectorAcc<sp/><ref refid="frameacc_8inl_1a3118abc6365c6cf2968d5659ed48b29c" kindref="member">operator * </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorAcc&amp;<sp/>r1,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r2)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VectorAcc(r1.p*r2,<sp/>r1.v*r2,<sp/>r1.dv*r2<sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="frameacc_8inl_1a89ee6739447b86b9abde1788465fe34c" refkind="member"><highlight class="normal">VectorAcc<sp/><ref refid="frameacc_8inl_1a3118abc6365c6cf2968d5659ed48b29c" kindref="member">operator * </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceKDL_1a931155039a40a3f75d0150bed1055206" kindref="member">doubleAcc</ref>&amp;<sp/>r1,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorAcc&amp;<sp/>r2)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VectorAcc(r1.t*r2.p,<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r1.t*r2.v<sp/><sp/>+<sp/>r1.d*r2.p,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r1.t*r2.dv<sp/>+<sp/>2*r1.d*r2.v<sp/>+<sp/>r1.dd*r2.p</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="frameacc_8inl_1a813759e8c8ab3f1c1b72aa1331a54449" refkind="member"><highlight class="normal">VectorAcc<sp/><ref refid="frameacc_8inl_1a3118abc6365c6cf2968d5659ed48b29c" kindref="member">operator * </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorAcc&amp;<sp/>r2,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceKDL_1a931155039a40a3f75d0150bed1055206" kindref="member">doubleAcc</ref>&amp;<sp/>r1)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VectorAcc(r1.t*r2.p,<sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r1.t*r2.v<sp/><sp/>+<sp/>r1.d*r2.p,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r1.t*r2.dv<sp/>+<sp/>2*r1.d*r2.v<sp/>+<sp/>r1.dd*r2.p</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="classKDL_1_1VectorAcc_1aca3f5fd92b7e16aeeb0ed68e3d5197b9" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1VectorAcc" kindref="compound">VectorAcc</ref>&amp;<sp/>VectorAcc::operator<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1VectorAcc" kindref="compound">VectorAcc</ref>&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>p=arg.<ref refid="classKDL_1_1VectorAcc_1a2462caa3ae6901a62f1f1f892c574e68" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>v=arg.<ref refid="classKDL_1_1VectorAcc_1a6bc29ad66bf41cee375ae6f765f05d31" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>dv=arg.<ref refid="classKDL_1_1VectorAcc_1a6225055dc646eb6c30cc6a8a576585d2" kindref="member">dv</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classKDL_1_1VectorAcc_1af78c3a90f9de475c884e2a6a6484df25" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1VectorAcc" kindref="compound">VectorAcc</ref>&amp;<sp/>VectorAcc::operator<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>p=arg;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>v=Vector::Zero();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>dv=Vector::Zero();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="classKDL_1_1VectorAcc_1a734056d50ab1a42d130b6ff33361f048" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1VectorAcc" kindref="compound">VectorAcc</ref>&amp;<sp/>VectorAcc::operator<sp/>+=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1VectorAcc" kindref="compound">VectorAcc</ref>&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>p+=arg.<ref refid="classKDL_1_1VectorAcc_1a2462caa3ae6901a62f1f1f892c574e68" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>v+=arg.<ref refid="classKDL_1_1VectorAcc_1a6bc29ad66bf41cee375ae6f765f05d31" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>dv+=<sp/>arg.<ref refid="classKDL_1_1VectorAcc_1a6225055dc646eb6c30cc6a8a576585d2" kindref="member">dv</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112" refid="classKDL_1_1VectorAcc_1a6a82be46f9acfb85a2a704210ff31b9a" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1VectorAcc" kindref="compound">VectorAcc</ref>&amp;<sp/>VectorAcc::operator<sp/>-=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1VectorAcc" kindref="compound">VectorAcc</ref>&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>p-=arg.<ref refid="classKDL_1_1VectorAcc_1a2462caa3ae6901a62f1f1f892c574e68" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>v-=arg.<ref refid="classKDL_1_1VectorAcc_1a6bc29ad66bf41cee375ae6f765f05d31" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>dv-=arg.<ref refid="classKDL_1_1VectorAcc_1a6225055dc646eb6c30cc6a8a576585d2" kindref="member">dv</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="classKDL_1_1VectorAcc_1af8d2e783edfb7c0bd1c65d4dff4d5fe0" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1VectorAcc" kindref="compound">VectorAcc</ref><sp/>VectorAcc::Zero()<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1VectorAcc" kindref="compound">VectorAcc</ref>(Vector::Zero(),Vector::Zero(),Vector::Zero());</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="classKDL_1_1VectorAcc_1a84952bdaa7ceca4553998bc9d1049b7b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VectorAcc::ReverseSign()<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>p.ReverseSign();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>v.ReverseSign();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>dv.ReverseSign();</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="classKDL_1_1VectorAcc_1ac38d5fbfa4532093dc562b52acf8e287" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1Rall2d" kindref="compound">doubleAcc</ref><sp/><ref refid="namespaceKDL_1a04a201d7eeb1d5e1ebcea1d297efe9a4" kindref="member">VectorAcc::Norm</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1Rall2d" kindref="compound">doubleAcc</ref><sp/>res;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>res.<ref refid="classKDL_1_1Rall2d_1af40fca6b962d733bd33d938d8c9b67ca" kindref="member">t</ref><sp/><sp/>=<sp/>p.Norm(eps);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>res.<ref refid="classKDL_1_1Rall2d_1a27889e94024eaccc30af605035dce058" kindref="member">d</ref><sp/><sp/>=<sp/><ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(p,v)/res.<ref refid="classKDL_1_1Rall2d_1af40fca6b962d733bd33d938d8c9b67ca" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>res.<ref refid="classKDL_1_1Rall2d_1a9e426900b6f34dad1f5a106ed2e9ee4d" kindref="member">dd</ref><sp/>=<sp/>(<ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(p,dv)+<ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(v,v)-res.<ref refid="classKDL_1_1Rall2d_1a27889e94024eaccc30af605035dce058" kindref="member">d</ref>*res.<ref refid="classKDL_1_1Rall2d_1a27889e94024eaccc30af605035dce058" kindref="member">d</ref>)/res.<ref refid="classKDL_1_1Rall2d_1af40fca6b962d733bd33d938d8c9b67ca" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" refkind="member"><highlight class="normal"><ref refid="namespaceKDL_1a931155039a40a3f75d0150bed1055206" kindref="member">doubleAcc</ref><sp/><ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorAcc&amp;<sp/>lhs,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorAcc&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceKDL_1a931155039a40a3f75d0150bed1055206" kindref="member">doubleAcc</ref>(<sp/><ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(lhs.p,rhs.p),</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(lhs.p,rhs.v)+<ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(lhs.v,rhs.p),</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(lhs.p,rhs.dv)+2*<ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(lhs.v,rhs.v)+<ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(lhs.dv,rhs.p)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="frameacc_8inl_1aa77d59aafcfced5850762e08106117b8" refkind="member"><highlight class="normal"><ref refid="namespaceKDL_1a931155039a40a3f75d0150bed1055206" kindref="member">doubleAcc</ref><sp/><ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorAcc&amp;<sp/>lhs,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceKDL_1a931155039a40a3f75d0150bed1055206" kindref="member">doubleAcc</ref>(<sp/><ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(lhs.p,rhs),</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(lhs.v,rhs),</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(lhs.dv,rhs)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="frameacc_8inl_1a9348d3feeb949ad48287a8db9704ce71" refkind="member"><highlight class="normal"><ref refid="namespaceKDL_1a931155039a40a3f75d0150bed1055206" kindref="member">doubleAcc</ref><sp/><ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&amp;<sp/>lhs,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorAcc&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceKDL_1a931155039a40a3f75d0150bed1055206" kindref="member">doubleAcc</ref>(<sp/><ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(lhs,rhs.p),</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(lhs,rhs.v),</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="frameacc_8inl_1ab4ccb72b38c9a0258ccf2f86127f356a" kindref="member">dot</ref>(lhs,rhs.dv)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorAcc&amp;<sp/>r1,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorAcc&amp;<sp/>r2,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(r1.p,r2.p,eps)<sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(r1.v,r2.v,eps)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(r1.dv,r2.dv,eps)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="frameacc_8inl_1a23d95358b72f698f771cfad3c4554ec7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&amp;<sp/>r1,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorAcc&amp;<sp/>r2,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(r1,r2.p,eps)<sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(Vector::Zero(),r2.v,eps)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(Vector::Zero(),r2.dv,eps)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="frameacc_8inl_1ae1c4dae74d4466adfa28815de4d8e56f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorAcc&amp;<sp/>r1,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&amp;<sp/>r2,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(r1.p,r2,eps)<sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(r1.v,Vector::Zero(),eps)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(r1.dv,Vector::Zero(),eps)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="frameacc_8inl_1a718ee51f4f456115116dfb40a122c9b3" refkind="member"><highlight class="normal">VectorAcc<sp/><ref refid="frameacc_8inl_1a718ee51f4f456115116dfb40a122c9b3" kindref="member">operator / </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorAcc&amp;<sp/>r1,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r2)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r1*(1.0/r2);</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="frameacc_8inl_1aeeef31a0b07aa528d3002f1d15d84f64" refkind="member"><highlight class="normal">VectorAcc<sp/><ref refid="frameacc_8inl_1a718ee51f4f456115116dfb40a122c9b3" kindref="member">operator / </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorAcc&amp;<sp/>r2,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceKDL_1a931155039a40a3f75d0150bed1055206" kindref="member">doubleAcc</ref>&amp;<sp/>r1)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r2*(1.0/r1);</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="frameacc_8inl_1a666977357c0d1cdfbfdcfb5ecd9e0cde" refkind="member"><highlight class="normal">RotationAcc<sp/><ref refid="frameacc_8inl_1a3118abc6365c6cf2968d5659ed48b29c" kindref="member">operator* </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RotationAcc&amp;<sp/>r1,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RotationAcc&amp;<sp/>r2)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RotationAcc(<sp/>r1.R<sp/><sp/>*<sp/>r2.R,<sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r1.w<sp/><sp/>+<sp/>r1.R*r2.w,<sp/><sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r1.dw<sp/>+<sp/>r1.w*(r1.R*r2.w)<sp/>+<sp/>r1.R*r2.dw<sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="frameacc_8inl_1a72c3ff56497cdaac25b25ebcab81abff" refkind="member"><highlight class="normal">RotationAcc<sp/><ref refid="frameacc_8inl_1a3118abc6365c6cf2968d5659ed48b29c" kindref="member">operator* </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Rotation&amp;<sp/>r1,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RotationAcc&amp;<sp/>r2)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RotationAcc(<sp/>r1*r2.R,<sp/>r1*r2.w,<sp/>r1*r2.dw);</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="frameacc_8inl_1a599a368b8310f8ec5c2ee7da3673a7f0" refkind="member"><highlight class="normal">RotationAcc<sp/><ref refid="frameacc_8inl_1a3118abc6365c6cf2968d5659ed48b29c" kindref="member">operator* </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RotationAcc&amp;<sp/>r1,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Rotation&amp;<sp/>r2)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RotationAcc(<sp/>r1.R*r2,<sp/>r1.w,<sp/>r1.dw<sp/>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="classKDL_1_1RotationAcc_1a5687f41fd88e9289cb300d461d963445" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1RotationAcc" kindref="compound">RotationAcc</ref>&amp;<sp/>RotationAcc::operator<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1RotationAcc" kindref="compound">RotationAcc</ref>&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>R=arg.<ref refid="classKDL_1_1RotationAcc_1af717191b6e458da8ae41dfe8bdb34ede" kindref="member">R</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>w=arg.<ref refid="classKDL_1_1RotationAcc_1a9871c84d692338b3c3bf7a60d141b09a" kindref="member">w</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>dw=arg.<ref refid="classKDL_1_1RotationAcc_1a891c7d785ee8f3f0725cfe649ff945b1" kindref="member">dw</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213" refid="classKDL_1_1RotationAcc_1ad8db79a3dd2fd95f2c51c634f086b257" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1RotationAcc" kindref="compound">RotationAcc</ref>&amp;<sp/>RotationAcc::operator<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Rotation" kindref="compound">Rotation</ref>&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>R<sp/>=<sp/>arg;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>Vector::Zero();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>dw<sp/>=<sp/>Vector::Zero();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="classKDL_1_1RotationAcc_1a41bf2ed95d3a6c5e14adf7a743d876dc" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1RotationAcc" kindref="compound">RotationAcc</ref><sp/>RotationAcc::Identity()<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1RotationAcc" kindref="compound">RotationAcc</ref>(Rotation::Identity(),Vector::Zero(),Vector::Zero());</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="classKDL_1_1RotationAcc_1a105a484b84a3382044898f205278308e" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1RotationAcc" kindref="compound">RotationAcc</ref><sp/>RotationAcc::Inverse()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1RotationAcc" kindref="compound">RotationAcc</ref>(R.Inverse(),-R.Inverse(w),-R.Inverse(dw));</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="classKDL_1_1RotationAcc_1a488d4c702929630bfd7d9ad8ca910a69" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1VectorAcc" kindref="compound">VectorAcc</ref><sp/>RotationAcc::Inverse(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1VectorAcc" kindref="compound">VectorAcc</ref>&amp;<sp/>arg)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1VectorAcc" kindref="compound">VectorAcc</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="classKDL_1_1VectorAcc_1a2462caa3ae6901a62f1f1f892c574e68" kindref="member">p</ref><sp/><sp/>=<sp/>R.Inverse(arg.<ref refid="classKDL_1_1VectorAcc_1a2462caa3ae6901a62f1f1f892c574e68" kindref="member">p</ref>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="classKDL_1_1VectorAcc_1a6bc29ad66bf41cee375ae6f765f05d31" kindref="member">v</ref><sp/><sp/>=<sp/>R.Inverse(arg.<ref refid="classKDL_1_1VectorAcc_1a6bc29ad66bf41cee375ae6f765f05d31" kindref="member">v</ref><sp/>-<sp/>w<sp/>*<sp/>arg.<ref refid="classKDL_1_1VectorAcc_1a2462caa3ae6901a62f1f1f892c574e68" kindref="member">p</ref>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="classKDL_1_1VectorAcc_1a6225055dc646eb6c30cc6a8a576585d2" kindref="member">dv</ref><sp/>=<sp/>R.Inverse(arg.<ref refid="classKDL_1_1VectorAcc_1a6225055dc646eb6c30cc6a8a576585d2" kindref="member">dv</ref><sp/>-<sp/>dw*arg.<ref refid="classKDL_1_1VectorAcc_1a2462caa3ae6901a62f1f1f892c574e68" kindref="member">p</ref><sp/>-<sp/>w*(arg.<ref refid="classKDL_1_1VectorAcc_1a6bc29ad66bf41cee375ae6f765f05d31" kindref="member">v</ref>+R*tmp.<ref refid="classKDL_1_1VectorAcc_1a6bc29ad66bf41cee375ae6f765f05d31" kindref="member">v</ref>));</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="classKDL_1_1RotationAcc_1a20ff2cfbbf856d1fdb4b468df085c9a8" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1VectorAcc" kindref="compound">VectorAcc</ref><sp/>RotationAcc::Inverse(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>&amp;<sp/>arg)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1VectorAcc" kindref="compound">VectorAcc</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="classKDL_1_1VectorAcc_1a2462caa3ae6901a62f1f1f892c574e68" kindref="member">p</ref><sp/><sp/>=<sp/>R.Inverse(arg);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="classKDL_1_1VectorAcc_1a6bc29ad66bf41cee375ae6f765f05d31" kindref="member">v</ref><sp/><sp/>=<sp/>R.Inverse(-w*arg);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="classKDL_1_1VectorAcc_1a6225055dc646eb6c30cc6a8a576585d2" kindref="member">dv</ref><sp/>=<sp/>R.Inverse(-dw*arg<sp/>-<sp/>w*(R*tmp.<ref refid="classKDL_1_1VectorAcc_1a6bc29ad66bf41cee375ae6f765f05d31" kindref="member">v</ref>));</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="classKDL_1_1RotationAcc_1ae0b1ccd11ff5c64ddf1758453cbd694e" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1VectorAcc" kindref="compound">VectorAcc</ref><sp/><ref refid="frameacc_8inl_1a3118abc6365c6cf2968d5659ed48b29c" kindref="member">RotationAcc::operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1VectorAcc" kindref="compound">VectorAcc</ref>&amp;<sp/>arg)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1VectorAcc" kindref="compound">VectorAcc</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="classKDL_1_1VectorAcc_1a2462caa3ae6901a62f1f1f892c574e68" kindref="member">p</ref><sp/>=<sp/>R*arg.<ref refid="classKDL_1_1VectorAcc_1a2462caa3ae6901a62f1f1f892c574e68" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="classKDL_1_1VectorAcc_1a6225055dc646eb6c30cc6a8a576585d2" kindref="member">dv</ref><sp/>=<sp/>R*arg.<ref refid="classKDL_1_1VectorAcc_1a6bc29ad66bf41cee375ae6f765f05d31" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="classKDL_1_1VectorAcc_1a6bc29ad66bf41cee375ae6f765f05d31" kindref="member">v</ref><sp/>=<sp/>w*tmp.<ref refid="classKDL_1_1VectorAcc_1a2462caa3ae6901a62f1f1f892c574e68" kindref="member">p</ref><sp/>+<sp/>tmp.<ref refid="classKDL_1_1VectorAcc_1a6225055dc646eb6c30cc6a8a576585d2" kindref="member">dv</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="classKDL_1_1VectorAcc_1a6225055dc646eb6c30cc6a8a576585d2" kindref="member">dv</ref><sp/>=<sp/>dw*tmp.<ref refid="classKDL_1_1VectorAcc_1a2462caa3ae6901a62f1f1f892c574e68" kindref="member">p</ref><sp/>+<sp/>w*(tmp.<ref refid="classKDL_1_1VectorAcc_1a6bc29ad66bf41cee375ae6f765f05d31" kindref="member">v</ref><sp/>+<sp/>tmp.<ref refid="classKDL_1_1VectorAcc_1a6225055dc646eb6c30cc6a8a576585d2" kindref="member">dv</ref>)<sp/>+<sp/>R*arg.<ref refid="classKDL_1_1VectorAcc_1a6225055dc646eb6c30cc6a8a576585d2" kindref="member">dv</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="frameacc_8inl_1a7fcb4b8a36312e34fa9bf38fe9dbc30c" refkind="member"><highlight class="normal">VectorAcc<sp/><ref refid="frameacc_8inl_1a3118abc6365c6cf2968d5659ed48b29c" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Rotation&amp;<sp/>R,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorAcc&amp;<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VectorAcc(R*x.p,R*x.v,R*x.dv);</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="classKDL_1_1RotationAcc_1a02d3152197c615963872f01b6600c268" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1VectorAcc" kindref="compound">VectorAcc</ref><sp/><ref refid="frameacc_8inl_1a3118abc6365c6cf2968d5659ed48b29c" kindref="member">RotationAcc::operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>&amp;<sp/>arg)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1VectorAcc" kindref="compound">VectorAcc</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="classKDL_1_1VectorAcc_1a2462caa3ae6901a62f1f1f892c574e68" kindref="member">p</ref><sp/>=<sp/>R*arg;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="classKDL_1_1VectorAcc_1a6bc29ad66bf41cee375ae6f765f05d31" kindref="member">v</ref><sp/>=<sp/>w*tmp.<ref refid="classKDL_1_1VectorAcc_1a2462caa3ae6901a62f1f1f892c574e68" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="classKDL_1_1VectorAcc_1a6225055dc646eb6c30cc6a8a576585d2" kindref="member">dv</ref><sp/>=<sp/>dw*tmp.<ref refid="classKDL_1_1VectorAcc_1a2462caa3ae6901a62f1f1f892c574e68" kindref="member">p</ref><sp/>+<sp/>w*tmp.<ref refid="classKDL_1_1VectorAcc_1a6bc29ad66bf41cee375ae6f765f05d31" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>=<sp/>Rotations</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>The<sp/>Rot...<sp/>static<sp/>functions<sp/>give<sp/>the<sp/>value<sp/>of<sp/>the<sp/>appropriate<sp/>rotation<sp/>matrix<sp/>back.</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>The<sp/>DoRot...<sp/>functions<sp/>apply<sp/>a<sp/>rotation<sp/>R<sp/>to<sp/>*this,such<sp/>that<sp/>*this<sp/>=<sp/>*this<sp/>*<sp/>R.</highlight></codeline>
<codeline lineno="270"><highlight class="comment"></highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>RRotation::DoRotX(const<sp/>RDouble&amp;<sp/>angle)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w+=R*Vector(angle.grad,0,0);</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R.DoRotX(angle.t);</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="comment">RotationAcc<sp/>RotationAcc::RotX(const<sp/>doubleAcc&amp;<sp/>angle)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>RotationAcc(Rotation::RotX(angle.t),</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector(angle.d,0,0),</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector(angle.dd,0,0)</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="280"><highlight class="comment">}</highlight></codeline>
<codeline lineno="281"><highlight class="comment"></highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>RRotation::DoRotY(const<sp/>RDouble&amp;<sp/>angle)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w+=R*Vector(0,angle.grad,0);</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R.DoRotY(angle.t);</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="comment">RotationAcc<sp/>RotationAcc::RotY(const<sp/>doubleAcc&amp;<sp/>angle)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>RotationAcc(</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rotation::RotX(angle.t),</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector(0,angle.d,0),</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector(0,angle.dd,0)</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="292"><highlight class="comment">}</highlight></codeline>
<codeline lineno="293"><highlight class="comment"></highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>RRotation::DoRotZ(const<sp/>RDouble&amp;<sp/>angle)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w+=R*Vector(0,0,angle.grad);</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R.DoRotZ(angle.t);</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="comment">RotationAcc<sp/>RotationAcc::RotZ(const<sp/>doubleAcc&amp;<sp/>angle)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>RotationAcc(</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rotation::RotZ(angle.t),</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector(0,0,angle.d),</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector(0,0,angle.dd)</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="304"><highlight class="comment">}</highlight></codeline>
<codeline lineno="305"><highlight class="comment"></highlight></codeline>
<codeline lineno="306"><highlight class="comment"></highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RRotation<sp/>RRotation::Rot(const<sp/>Vector&amp;<sp/>rotvec,const<sp/>RDouble&amp;<sp/>angle)<sp/></highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>rotvec<sp/>has<sp/>arbitrary<sp/>norm</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>rotation<sp/>around<sp/>a<sp/>constant<sp/>vector<sp/>!</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector<sp/>v<sp/>=<sp/>rotvec.Normalize();</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>RRotation(Rotation::Rot2(v,angle.t),v*angle.grad);</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="comment"></highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RRotation<sp/>RRotation::Rot2(const<sp/>Vector&amp;<sp/>rotvec,const<sp/>RDouble&amp;<sp/>angle)<sp/></highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>rotvec<sp/>is<sp/>normalized.</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>RRotation(Rotation::Rot2(rotvec,angle.t),rotvec*angle.grad);</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="comment"></highlight></codeline>
<codeline lineno="321"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="frameacc_8inl_1a69ce3e5feb3e5c145bb763d2dbb7b832" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RotationAcc&amp;<sp/>r1,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RotationAcc&amp;<sp/>r2,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(r1.w,r2.w,eps)<sp/>&amp;&amp;<sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(r1.R,r2.R,eps)<sp/>&amp;&amp;<sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(r1.dw,r2.dw,eps)<sp/>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326" refid="frameacc_8inl_1a9a46edd44fc0dee017650d19bd86d053" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Rotation&amp;<sp/>r1,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RotationAcc&amp;<sp/>r2,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(Vector::Zero(),r2.w,eps)<sp/>&amp;&amp;<sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(r1,r2.R,eps)<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(Vector::Zero(),r2.dw,eps)<sp/>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330" refid="frameacc_8inl_1a9e05363495ab57754306c60eef7eec18" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RotationAcc&amp;<sp/>r1,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Rotation&amp;<sp/>r2,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(r1.w,Vector::Zero(),eps)<sp/>&amp;&amp;<sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(r1.R,r2,eps)<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(r1.dw,Vector::Zero(),eps)<sp/>);</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Methods<sp/>and<sp/>operators<sp/>related<sp/>to<sp/>FrameAcc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="comment">//<sp/>They<sp/>all<sp/>delegate<sp/>most<sp/>of<sp/>the<sp/>work<sp/>to<sp/>RotationAcc<sp/>and<sp/>VectorAcc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="classKDL_1_1FrameAcc_1a0a111f439e476325b92ac9729493cf12" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1FrameAcc" kindref="compound">FrameAcc</ref>&amp;<sp/>FrameAcc::operator<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1FrameAcc" kindref="compound">FrameAcc</ref>&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>M=arg.<ref refid="classKDL_1_1FrameAcc_1a8fa28ed2c8f491e3ac6df1aad6996ccc" kindref="member">M</ref>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>p=arg.<ref refid="classKDL_1_1FrameAcc_1ab4de5af6f211fba06cd0f4d60d036d7a" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="classKDL_1_1FrameAcc_1a74a129a305717d134feb7ef42c565dba" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1FrameAcc" kindref="compound">FrameAcc</ref><sp/>FrameAcc::Identity()<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1FrameAcc" kindref="compound">FrameAcc</ref>(RotationAcc::Identity(),VectorAcc::Zero());</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="frameacc_8inl_1a1adb514d0c1e0fdb4d36a999409e64de" refkind="member"><highlight class="normal">FrameAcc<sp/><ref refid="frameacc_8inl_1a3118abc6365c6cf2968d5659ed48b29c" kindref="member">operator *</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FrameAcc&amp;<sp/>lhs,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FrameAcc&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FrameAcc(lhs.M*rhs.M,lhs.M*rhs.p+lhs.p);</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353" refid="frameacc_8inl_1a4a355a5256f5d4e2c0e754f2d99d667a" refkind="member"><highlight class="normal">FrameAcc<sp/><ref refid="frameacc_8inl_1a3118abc6365c6cf2968d5659ed48b29c" kindref="member">operator *</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FrameAcc&amp;<sp/>lhs,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Frame&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FrameAcc(lhs.M*rhs.M,lhs.M*rhs.p+lhs.p);</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357" refid="frameacc_8inl_1a9811932bbd23441b35b554cff1793bb2" refkind="member"><highlight class="normal">FrameAcc<sp/><ref refid="frameacc_8inl_1a3118abc6365c6cf2968d5659ed48b29c" kindref="member">operator *</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Frame&amp;<sp/>lhs,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FrameAcc&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FrameAcc(lhs.M*rhs.M,lhs.M*rhs.p+lhs.p);</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="classKDL_1_1FrameAcc_1aa9539c84d061a2e9ef3762739d8eb928" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1VectorAcc" kindref="compound">VectorAcc</ref><sp/><ref refid="frameacc_8inl_1a3118abc6365c6cf2968d5659ed48b29c" kindref="member">FrameAcc::operator *</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1VectorAcc" kindref="compound">VectorAcc</ref><sp/>&amp;<sp/>arg)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="363"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>M*arg+p;</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="366" refid="classKDL_1_1FrameAcc_1a9f33a5fc36861c84142c781bbd7d4b5f" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1VectorAcc" kindref="compound">VectorAcc</ref><sp/><ref refid="frameacc_8inl_1a3118abc6365c6cf2968d5659ed48b29c" kindref="member">FrameAcc::operator *</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref><sp/>&amp;<sp/>arg)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="367"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>M*arg+p;</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="classKDL_1_1FrameAcc_1ac3c98e24bfd5bc4c5edefe788658176d" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1VectorAcc" kindref="compound">VectorAcc</ref><sp/>FrameAcc::Inverse(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1VectorAcc" kindref="compound">VectorAcc</ref>&amp;<sp/>arg)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="372"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>M.Inverse(arg-p);</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="classKDL_1_1FrameAcc_1afbd5a199a48bff191ca6e42305f8f101" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1VectorAcc" kindref="compound">VectorAcc</ref><sp/>FrameAcc::Inverse(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Vector" kindref="compound">Vector</ref>&amp;<sp/>arg)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="377"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>M.Inverse(arg-p);</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="classKDL_1_1FrameAcc_1a259389c88e66f988ec6ad7db4592d86b" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1FrameAcc" kindref="compound">FrameAcc</ref><sp/>FrameAcc::Inverse()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="382"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1FrameAcc" kindref="compound">FrameAcc</ref>(M.Inverse(),-M.Inverse(p));</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="classKDL_1_1FrameAcc_1a5286d54077cb368c1ab7d19e45f482f1" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1FrameAcc" kindref="compound">FrameAcc</ref>&amp;<sp/>FrameAcc::operator<sp/>=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref><sp/>&amp;<sp/>arg)</highlight></codeline>
<codeline lineno="387"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>M<sp/>=<sp/>arg.<ref refid="classKDL_1_1Frame_1a367668b3344ccfd50410ccc1ed30fa6f" kindref="member">M</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>arg.<ref refid="classKDL_1_1Frame_1abc00c3817f7baa985b67077479617866" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="frameacc_8inl_1a139da01e831b08080fe1c481daabaa4c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FrameAcc&amp;<sp/>r1,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FrameAcc&amp;<sp/>r2,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps)<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(r1.M,r2.M,eps)<sp/>&amp;&amp;<sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(r1.p,r2.p,eps));</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396" refid="frameacc_8inl_1afff611bd9ed2bc095a2caf213b5c5546" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Frame&amp;<sp/>r1,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FrameAcc&amp;<sp/>r2,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(r1.M,r2.M,eps)<sp/>&amp;&amp;<sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(r1.p,r2.p,eps));</highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399" refid="frameacc_8inl_1aa7e494030fa6b0b0e97f6d1d75d42310" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FrameAcc&amp;<sp/>r1,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Frame&amp;<sp/>r2,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(r1.M,r2.M,eps)<sp/>&amp;&amp;<sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(r1.p,r2.p,eps));</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404" refid="classKDL_1_1FrameAcc_1a931940f5ff3bc8beccf0b68bc8642fa3" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref><sp/>FrameAcc::GetFrame()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref>(M.R,p.p);</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409" refid="classKDL_1_1FrameAcc_1a1c6d7c3c5eb9e0d25bf26f0614595f92" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref><sp/>FrameAcc::GetTwist()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref>(p.v,M.w);</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="classKDL_1_1FrameAcc_1ad92cc790c601db4cb2f2d28b32f219f0" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref><sp/>FrameAcc::GetAccTwist()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref>(p.dv,M.dw);</highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="classKDL_1_1TwistAcc_1a8a9f5ab853ae1e720b7c4864142b3cdc" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1TwistAcc" kindref="compound">TwistAcc</ref><sp/>TwistAcc::Zero()</highlight></codeline>
<codeline lineno="435"><highlight class="normal">{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1TwistAcc" kindref="compound">TwistAcc</ref>(VectorAcc::Zero(),VectorAcc::Zero());</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440" refid="classKDL_1_1TwistAcc_1a6ac917b8759615f0b6e487fcbb4bd62c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TwistAcc::ReverseSign()</highlight></codeline>
<codeline lineno="441"><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>vel.ReverseSign();</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>rot.ReverseSign();</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446" refid="classKDL_1_1TwistAcc_1aca9339a9242b9ca4db1660e5e434e4df" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1TwistAcc" kindref="compound">TwistAcc</ref><sp/>TwistAcc::RefPoint(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1VectorAcc" kindref="compound">VectorAcc</ref>&amp;<sp/>v_base_AB)</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Changes<sp/>the<sp/>reference<sp/>point<sp/>of<sp/>the<sp/>TwistAcc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>RVector<sp/>v_base_AB<sp/>is<sp/>expressed<sp/>in<sp/>the<sp/>same<sp/>base<sp/>as<sp/>the<sp/>TwistAcc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>RVector<sp/>v_base_AB<sp/>is<sp/>a<sp/>RVector<sp/>from<sp/>the<sp/>old<sp/>point<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>new<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Complexity<sp/>:<sp/>6M+6A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1TwistAcc" kindref="compound">TwistAcc</ref>(this-&gt;vel+this-&gt;rot*v_base_AB,this-&gt;rot);</highlight></codeline>
<codeline lineno="454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456" refid="classKDL_1_1TwistAcc_1a96cd87ecd3ccf98094c41d180cc25b3f" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1TwistAcc" kindref="compound">TwistAcc</ref>&amp;<sp/>TwistAcc::operator-=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1TwistAcc" kindref="compound">TwistAcc</ref>&amp;<sp/>arg)</highlight></codeline>
<codeline lineno="457"><highlight class="normal">{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>vel-=arg.<ref refid="classKDL_1_1TwistAcc_1ad94248f183c058e5d2322d27eb9e7b47" kindref="member">vel</ref>;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>rot<sp/>-=arg.<ref refid="classKDL_1_1TwistAcc_1a4ba630f00bd559a480eec878cb8a2682" kindref="member">rot</ref>;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463" refid="classKDL_1_1TwistAcc_1a597927985f5c69ad7d0dac2a2a3a094a" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1TwistAcc" kindref="compound">TwistAcc</ref>&amp;<sp/>TwistAcc::operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1TwistAcc" kindref="compound">TwistAcc</ref>&amp;<sp/>arg)</highlight></codeline>
<codeline lineno="464"><highlight class="normal">{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>vel+=arg.<ref refid="classKDL_1_1TwistAcc_1ad94248f183c058e5d2322d27eb9e7b47" kindref="member">vel</ref>;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>rot<sp/>+=arg.<ref refid="classKDL_1_1TwistAcc_1a4ba630f00bd559a480eec878cb8a2682" kindref="member">rot</ref>;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="frameacc_8inl_1a04678da99cc0a64479f7d1e0c6981b4f" refkind="member"><highlight class="normal">TwistAcc<sp/><ref refid="frameacc_8inl_1a3118abc6365c6cf2968d5659ed48b29c" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TwistAcc&amp;<sp/>lhs,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rhs)</highlight></codeline>
<codeline lineno="472"><highlight class="normal">{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TwistAcc(lhs.vel*rhs,lhs.rot*rhs);</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476" refid="frameacc_8inl_1aaa64ed0c7026bef45a72d7dbbba83b2d" refkind="member"><highlight class="normal">TwistAcc<sp/><ref refid="frameacc_8inl_1a3118abc6365c6cf2968d5659ed48b29c" kindref="member">operator*</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lhs,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TwistAcc&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="477"><highlight class="normal">{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TwistAcc(lhs*rhs.vel,lhs*rhs.rot);</highlight></codeline>
<codeline lineno="479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481" refid="frameacc_8inl_1aab67ed8e756c0245b7578d8bf2191077" refkind="member"><highlight class="normal">TwistAcc<sp/><ref refid="frameacc_8inl_1a718ee51f4f456115116dfb40a122c9b3" kindref="member">operator/</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TwistAcc&amp;<sp/>lhs,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rhs)</highlight></codeline>
<codeline lineno="482"><highlight class="normal">{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TwistAcc(lhs.vel/rhs,lhs.rot/rhs);</highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487" refid="frameacc_8inl_1a525285439d428b5c23241eb2d7c4713d" refkind="member"><highlight class="normal">TwistAcc<sp/><ref refid="frameacc_8inl_1a3118abc6365c6cf2968d5659ed48b29c" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TwistAcc&amp;<sp/>lhs,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceKDL_1a931155039a40a3f75d0150bed1055206" kindref="member">doubleAcc</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="488"><highlight class="normal">{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TwistAcc(lhs.vel*rhs,lhs.rot*rhs);</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="frameacc_8inl_1a51b2a484710ae0dfa71fc9669e7f9298" refkind="member"><highlight class="normal">TwistAcc<sp/><ref refid="frameacc_8inl_1a3118abc6365c6cf2968d5659ed48b29c" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceKDL_1a931155039a40a3f75d0150bed1055206" kindref="member">doubleAcc</ref>&amp;<sp/>lhs,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TwistAcc&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="493"><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TwistAcc(lhs*rhs.vel,lhs*rhs.rot);</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497" refid="frameacc_8inl_1ac23e0a1ab270e215c34258145c837756" refkind="member"><highlight class="normal">TwistAcc<sp/><ref refid="frameacc_8inl_1a718ee51f4f456115116dfb40a122c9b3" kindref="member">operator/</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TwistAcc&amp;<sp/>lhs,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceKDL_1a931155039a40a3f75d0150bed1055206" kindref="member">doubleAcc</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TwistAcc(lhs.vel/rhs,lhs.rot/rhs);</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="comment">//<sp/>addition<sp/>of<sp/>TwistAcc&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505" refid="frameacc_8inl_1a38331c438e34e1f55c93aa99d6651ad3" refkind="member"><highlight class="normal">TwistAcc<sp/><ref refid="frameacc_8inl_1ab79cbde654a8ff51142c16eaefb4b18f" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TwistAcc&amp;<sp/>lhs,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TwistAcc&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="506"><highlight class="normal">{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TwistAcc(lhs.vel+rhs.vel,lhs.rot+rhs.rot);</highlight></codeline>
<codeline lineno="508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510" refid="frameacc_8inl_1aada5bad57428ba3f3ea69ffb024df0d5" refkind="member"><highlight class="normal">TwistAcc<sp/><ref refid="frameacc_8inl_1a6f3c8051d909ff25d801b5db9e3df6b9" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TwistAcc&amp;<sp/>lhs,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TwistAcc&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="511"><highlight class="normal">{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TwistAcc(lhs.vel-rhs.vel,lhs.rot-rhs.rot);</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unary<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516" refid="frameacc_8inl_1accc1660310d17859190d606e6dfe21fb" refkind="member"><highlight class="normal">TwistAcc<sp/><ref refid="frameacc_8inl_1a6f3c8051d909ff25d801b5db9e3df6b9" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TwistAcc&amp;<sp/>arg)<sp/></highlight></codeline>
<codeline lineno="517"><highlight class="normal">{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TwistAcc(-arg.vel,-arg.rot);</highlight></codeline>
<codeline lineno="519"><highlight class="normal">}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525" refid="classKDL_1_1RotationAcc_1a714288693f9ebb35ce94d6c6ff607cf9" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1TwistAcc" kindref="compound">TwistAcc</ref><sp/>RotationAcc::Inverse(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1TwistAcc" kindref="compound">TwistAcc</ref>&amp;<sp/>arg)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="526"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1TwistAcc" kindref="compound">TwistAcc</ref>(Inverse(arg.<ref refid="classKDL_1_1TwistAcc_1ad94248f183c058e5d2322d27eb9e7b47" kindref="member">vel</ref>),Inverse(arg.<ref refid="classKDL_1_1TwistAcc_1a4ba630f00bd559a480eec878cb8a2682" kindref="member">rot</ref>));</highlight></codeline>
<codeline lineno="528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530" refid="classKDL_1_1RotationAcc_1a7080fbc169eb1603b23cb4c2c90f7f8f" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1TwistAcc" kindref="compound">TwistAcc</ref><sp/><ref refid="frameacc_8inl_1a3118abc6365c6cf2968d5659ed48b29c" kindref="member">RotationAcc::operator * </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1TwistAcc" kindref="compound">TwistAcc</ref>&amp;<sp/>arg)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="531"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1TwistAcc" kindref="compound">TwistAcc</ref>((*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)*arg.<ref refid="classKDL_1_1TwistAcc_1ad94248f183c058e5d2322d27eb9e7b47" kindref="member">vel</ref>,(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)*arg.<ref refid="classKDL_1_1TwistAcc_1a4ba630f00bd559a480eec878cb8a2682" kindref="member">rot</ref>);</highlight></codeline>
<codeline lineno="533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535" refid="classKDL_1_1RotationAcc_1a051c42338a69c39623c0dd7e9a4ccf4b" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1TwistAcc" kindref="compound">TwistAcc</ref><sp/>RotationAcc::Inverse(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref>&amp;<sp/>arg)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="536"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1TwistAcc" kindref="compound">TwistAcc</ref>(Inverse(arg.<ref refid="classKDL_1_1Twist_1adda560fbd643ba2448d519fce626b680" kindref="member">vel</ref>),Inverse(arg.<ref refid="classKDL_1_1Twist_1a5ab2bb436b67c902e9c7735c4df16eba" kindref="member">rot</ref>));</highlight></codeline>
<codeline lineno="538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540" refid="classKDL_1_1RotationAcc_1acca5f65b70ffaf9f878a8bf14ca38d25" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1TwistAcc" kindref="compound">TwistAcc</ref><sp/><ref refid="frameacc_8inl_1a3118abc6365c6cf2968d5659ed48b29c" kindref="member">RotationAcc::operator * </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref>&amp;<sp/>arg)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="541"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1TwistAcc" kindref="compound">TwistAcc</ref>((*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)*arg.<ref refid="classKDL_1_1Twist_1adda560fbd643ba2448d519fce626b680" kindref="member">vel</ref>,(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)*arg.<ref refid="classKDL_1_1Twist_1a5ab2bb436b67c902e9c7735c4df16eba" kindref="member">rot</ref>);</highlight></codeline>
<codeline lineno="543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546" refid="classKDL_1_1FrameAcc_1a8beddbcf3ab43a9331229c7601bf7cf9" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1TwistAcc" kindref="compound">TwistAcc</ref><sp/><ref refid="frameacc_8inl_1a3118abc6365c6cf2968d5659ed48b29c" kindref="member">FrameAcc::operator * </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1TwistAcc" kindref="compound">TwistAcc</ref>&amp;<sp/>arg)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="547"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1TwistAcc" kindref="compound">TwistAcc</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="classKDL_1_1TwistAcc_1a4ba630f00bd559a480eec878cb8a2682" kindref="member">rot</ref><sp/>=<sp/>M*arg.<ref refid="classKDL_1_1TwistAcc_1a4ba630f00bd559a480eec878cb8a2682" kindref="member">rot</ref>;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="classKDL_1_1TwistAcc_1ad94248f183c058e5d2322d27eb9e7b47" kindref="member">vel</ref><sp/>=<sp/>M*arg.<ref refid="classKDL_1_1TwistAcc_1ad94248f183c058e5d2322d27eb9e7b47" kindref="member">vel</ref>+p*tmp.<ref refid="classKDL_1_1TwistAcc_1a4ba630f00bd559a480eec878cb8a2682" kindref="member">rot</ref>;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554" refid="classKDL_1_1FrameAcc_1ab71decb8f88ed2ef430c1a047a46d386" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1TwistAcc" kindref="compound">TwistAcc</ref><sp/><ref refid="frameacc_8inl_1a3118abc6365c6cf2968d5659ed48b29c" kindref="member">FrameAcc::operator * </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref>&amp;<sp/>arg)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="555"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1TwistAcc" kindref="compound">TwistAcc</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="classKDL_1_1TwistAcc_1a4ba630f00bd559a480eec878cb8a2682" kindref="member">rot</ref><sp/>=<sp/>M*arg.<ref refid="classKDL_1_1Twist_1a5ab2bb436b67c902e9c7735c4df16eba" kindref="member">rot</ref>;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="classKDL_1_1TwistAcc_1ad94248f183c058e5d2322d27eb9e7b47" kindref="member">vel</ref><sp/>=<sp/>M*arg.<ref refid="classKDL_1_1Twist_1adda560fbd643ba2448d519fce626b680" kindref="member">vel</ref>+p*tmp.<ref refid="classKDL_1_1TwistAcc_1a4ba630f00bd559a480eec878cb8a2682" kindref="member">rot</ref>;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562" refid="classKDL_1_1FrameAcc_1ad5aa445e32e31d55582320f6a69d7fe6" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1TwistAcc" kindref="compound">TwistAcc</ref><sp/>FrameAcc::Inverse(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1TwistAcc" kindref="compound">TwistAcc</ref>&amp;<sp/>arg)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="563"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1TwistAcc" kindref="compound">TwistAcc</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="classKDL_1_1TwistAcc_1a4ba630f00bd559a480eec878cb8a2682" kindref="member">rot</ref><sp/>=<sp/><sp/>M.Inverse(arg.<ref refid="classKDL_1_1TwistAcc_1a4ba630f00bd559a480eec878cb8a2682" kindref="member">rot</ref>);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="classKDL_1_1TwistAcc_1ad94248f183c058e5d2322d27eb9e7b47" kindref="member">vel</ref><sp/>=<sp/>M.Inverse(arg.<ref refid="classKDL_1_1TwistAcc_1ad94248f183c058e5d2322d27eb9e7b47" kindref="member">vel</ref>-p*arg.<ref refid="classKDL_1_1TwistAcc_1a4ba630f00bd559a480eec878cb8a2682" kindref="member">rot</ref>);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570" refid="classKDL_1_1FrameAcc_1af80dd68fa5590c284dfe25492e802bf4" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1TwistAcc" kindref="compound">TwistAcc</ref><sp/>FrameAcc::Inverse(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref>&amp;<sp/>arg)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="571"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKDL_1_1TwistAcc" kindref="compound">TwistAcc</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="classKDL_1_1TwistAcc_1a4ba630f00bd559a480eec878cb8a2682" kindref="member">rot</ref><sp/>=<sp/><sp/>M.Inverse(arg.<ref refid="classKDL_1_1Twist_1a5ab2bb436b67c902e9c7735c4df16eba" kindref="member">rot</ref>);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.<ref refid="classKDL_1_1TwistAcc_1ad94248f183c058e5d2322d27eb9e7b47" kindref="member">vel</ref><sp/>=<sp/>M.Inverse(arg.<ref refid="classKDL_1_1Twist_1adda560fbd643ba2448d519fce626b680" kindref="member">vel</ref>-p*arg.<ref refid="classKDL_1_1Twist_1a5ab2bb436b67c902e9c7735c4df16eba" kindref="member">rot</ref>);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578" refid="classKDL_1_1TwistAcc_1ad0a317be374b9414e73c972514720cd6" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref><sp/>TwistAcc::GetTwist()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref>(vel.p,rot.p);</highlight></codeline>
<codeline lineno="580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582" refid="classKDL_1_1TwistAcc_1a998e8685995caf362ee12c91e6cddb10" refkind="member"><highlight class="normal"><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref><sp/>TwistAcc::GetTwistDot()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref>(vel.v,rot.v);</highlight></codeline>
<codeline lineno="584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586" refid="frameacc_8inl_1a87e82d76f07de09ef85710d52f4c6594" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TwistAcc&amp;<sp/>a,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TwistAcc&amp;<sp/>b,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps)<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(a.rot,b.rot,eps)&amp;&amp;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(a.vel,b.vel,eps)<sp/><sp/>);</highlight></codeline>
<codeline lineno="589"><highlight class="normal">}</highlight></codeline>
<codeline lineno="590" refid="frameacc_8inl_1a2d313ff9c4ae7f4b879fb8118d41caa3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Twist&amp;<sp/>a,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TwistAcc&amp;<sp/>b,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps)<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(a.rot,b.rot,eps)&amp;&amp;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(a.vel,b.vel,eps)<sp/><sp/>);</highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="594" refid="frameacc_8inl_1a251d4ba776ba0a0f3a6857839b1fc00a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TwistAcc&amp;<sp/>a,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Twist&amp;<sp/>b,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(a.rot,b.rot,eps)&amp;&amp;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="frameacc_8inl_1a1a428d79914c26e08be87e8e3ceed6b7" kindref="member">Equal</ref>(a.vel,b.vel,eps)<sp/><sp/>);</highlight></codeline>
<codeline lineno="597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/frameacc.inl"/>
  </compounddef>
</doxygen>
