<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classKDL_1_1Path__Composite" kind="class" language="C++" prot="public">
    <compoundname>KDL::Path_Composite</compoundname>
    <basecompoundref refid="classKDL_1_1Path" prot="public" virt="non-virtual">KDL::Path</basecompoundref>
    <includes refid="path__composite_8hpp" local="no">path_composite.hpp</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classKDL_1_1Path__Composite_1a43b4fe18f0584cb61f5d2e80b6dc8e8f" prot="private" static="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; double &gt;</type>
        <definition>typedef std::vector&lt;double&gt; KDL::Path_Composite::DoubleVector</definition>
        <argsstring></argsstring>
        <name>DoubleVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_composite.hpp" line="148" column="24" bodyfile="src/path_composite.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classKDL_1_1Path__Composite_1aad3fbd29cbb70a11a0d18fa6a971f536" prot="private" static="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="cpp/utility/pair" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::pair</ref>&lt; <ref refid="classKDL_1_1Path" kindref="compound">Path</ref> *, bool &gt; &gt;</type>
        <definition>typedef std::vector&lt; std::pair&lt;Path*,bool&gt; &gt; KDL::Path_Composite::PathVector</definition>
        <argsstring></argsstring>
        <name>PathVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_composite.hpp" line="147" column="21" bodyfile="src/path_composite.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classKDL_1_1Path__Composite_1ad80c5ed91ffb87736dfc66837d0729b6" prot="private" static="no" mutable="yes">
        <type>double</type>
        <definition>double KDL::Path_Composite::cached_ends</definition>
        <argsstring></argsstring>
        <name>cached_ends</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_composite.hpp" line="156" column="16" bodyfile="src/path_composite.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Path__Composite_1a2618c98caa0e9ca06bb9741ffa78a9bd" prot="private" static="no" mutable="yes">
        <type>int</type>
        <definition>int KDL::Path_Composite::cached_index</definition>
        <argsstring></argsstring>
        <name>cached_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_composite.hpp" line="157" column="16" bodyfile="src/path_composite.hpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Path__Composite_1a307bb88dc0a0b07907da9b86d07c0760" prot="private" static="no" mutable="yes">
        <type>double</type>
        <definition>double KDL::Path_Composite::cached_starts</definition>
        <argsstring></argsstring>
        <name>cached_starts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_composite.hpp" line="155" column="16" bodyfile="src/path_composite.hpp" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Path__Composite_1a6c487a4be9cb79ae5630ad8ed7fdd136" prot="private" static="no" mutable="no">
        <type><ref refid="classKDL_1_1Path__Composite_1a43b4fe18f0584cb61f5d2e80b6dc8e8f" kindref="member">DoubleVector</ref></type>
        <definition>DoubleVector KDL::Path_Composite::dv</definition>
        <argsstring></argsstring>
        <name>dv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_composite.hpp" line="151" column="16" bodyfile="src/path_composite.hpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Path__Composite_1aa7f67a8bc3ced143153fe969fc1df3b5" prot="private" static="no" mutable="no">
        <type><ref refid="classKDL_1_1Path__Composite_1aad3fbd29cbb70a11a0d18fa6a971f536" kindref="member">PathVector</ref></type>
        <definition>PathVector KDL::Path_Composite::gv</definition>
        <argsstring></argsstring>
        <name>gv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_composite.hpp" line="150" column="12" bodyfile="src/path_composite.hpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKDL_1_1Path__Composite_1a8a26dd4e83aad5698d7a8d5e934e5b61" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double KDL::Path_Composite::pathlength</definition>
        <argsstring></argsstring>
        <name>pathlength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_composite.hpp" line="152" column="8" bodyfile="src/path_composite.hpp" bodystart="152" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classKDL_1_1Path__Composite_1abf873591b2ca9354b90b082cc6e9d071" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double KDL::Path_Composite::Lookup</definition>
        <argsstring>(double s) const</argsstring>
        <name>Lookup</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_composite.hpp" line="158" column="8" bodyfile="src/path_composite.cpp" bodystart="93" bodyend="111"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classKDL_1_1Path__Composite_1a5acfb048ac1c00850dfbde09c5c9198c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref></type>
        <definition>Twist KDL::Path_Composite::Acc</definition>
        <argsstring>(double s, double sd, double sdd) const</argsstring>
        <name>Acc</name>
        <reimplements refid="classKDL_1_1Path_1a274dd481c1ab921f898cddb618e7e42b">Acc</reimplements>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sd</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sdd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the acceleration twist at path length s and with derivative of s == sd, and 2nd derivative of s == sdd </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_composite.hpp" line="194" column="15" bodyfile="src/path_composite.cpp" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Composite_1a679f396ba2f9f0b83213f88d895ac1c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KDL::Path_Composite::Add</definition>
        <argsstring>(Path *geom, bool aggregate=true)</argsstring>
        <name>Add</name>
        <param>
          <type><ref refid="classKDL_1_1Path" kindref="compound">Path</ref> *</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aggregate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a Path* to this composite </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_composite.hpp" line="167" column="6" bodyfile="src/path_composite.cpp" bodystart="120" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Composite_1aee441fb0bbb122b4798273f0cc4fa731" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classKDL_1_1Path" kindref="compound">Path</ref> *</type>
        <definition>Path * KDL::Path_Composite::Clone</definition>
        <argsstring>()</argsstring>
        <name>Clone</name>
        <reimplements refid="classKDL_1_1Path_1a06926be0592bbe853ee9d040a4e420d3">Clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Virtual constructor, constructing by copying, Returns a deep copy of this <ref refid="classKDL_1_1Path" kindref="compound">Path</ref> Object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_composite.hpp" line="196" column="14" bodyfile="src/path_composite.cpp" bodystart="151" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Composite_1aa002edee28c5ff6006271daddb436ab2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KDL::Path_Composite::GetCurrentSegmentLocation</definition>
        <argsstring>(double s, int &amp;segment_number, double &amp;inner_s)</argsstring>
        <name>GetCurrentSegmentLocation</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>segment_number</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>inner_s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>[INPUT] path length variable for the composite. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>segment_number</parametername>
</parameternamelist>
<parameterdescription>
<para>[OUTPUT] segments that corresponds to the path length variable s. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inner_s</parametername>
</parameternamelist>
<parameterdescription>
<para>[OUTPUT] path length to use within the segment. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_composite.hpp" line="230" column="14" bodyfile="src/path_composite.cpp" bodystart="184" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Composite_1ae079edab6b343eb42ddc9251f0103172" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09" kindref="member">IdentifierType</ref></type>
        <definition>virtual IdentifierType KDL::Path_Composite::getIdentifier</definition>
        <argsstring>() const</argsstring>
        <name>getIdentifier</name>
        <reimplements refid="classKDL_1_1Path_1aa28b0993963870a6c754b19e5cd06fec">getIdentifier</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets an identifier indicating the type of this <ref refid="classKDL_1_1Path" kindref="compound">Path</ref> object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_composite.hpp" line="235" column="24" bodyfile="src/path_composite.hpp" bodystart="235" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Composite_1a9b4cfb8ab9e47f66f9aa6b24bc8b67eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double KDL::Path_Composite::GetLengthToEndOfSegment</definition>
        <argsstring>(int i)</argsstring>
        <name>GetLengthToEndOfSegment</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets the length to the end of the given segment. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>segment number </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>length to the end of the segment, i.e. the value for s corresponding to the end of this segment. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_composite.hpp" line="223" column="16" bodyfile="src/path_composite.cpp" bodystart="178" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Composite_1a5788086a6f9b678e797383a3534938af" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int KDL::Path_Composite::GetNrOfSegments</definition>
        <argsstring>()</argsstring>
        <name>GetNrOfSegments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the number of underlying segments. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_composite.hpp" line="206" column="13" bodyfile="src/path_composite.cpp" bodystart="168" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Composite_1a11e28d11f967a77d82167ecb77497de5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classKDL_1_1Path" kindref="compound">Path</ref> *</type>
        <definition>Path * KDL::Path_Composite::GetSegment</definition>
        <argsstring>(int i)</argsstring>
        <name>GetSegment</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a pointer to the underlying <ref refid="classKDL_1_1Path" kindref="compound">Path</ref> of the given segment number i. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>segment number </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the underlying <ref refid="classKDL_1_1Path" kindref="compound">Path</ref> </para>
</simplesect>
<simplesect kind="warning"><para>The pointer is still owned by this class and is lifetime depends on the lifetime of this class. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_composite.hpp" line="215" column="14" bodyfile="src/path_composite.cpp" bodystart="172" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Composite_1a77a6568ab90b5778a3239d43bb05071d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double KDL::Path_Composite::LengthToS</definition>
        <argsstring>(double length)</argsstring>
        <name>LengthToS</name>
        <reimplements refid="group__Motion_1gad7f55a1d6f7a076b0959c76c29cc323d">LengthToS</reimplements>
        <param>
          <type>double</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classKDL_1_1Path__Composite_1a77a6568ab90b5778a3239d43bb05071d" kindref="member">LengthToS()</ref> converts a physical length along the trajectory to the parameter s used in Pos, Vel and Acc. This is used because in cases with large rotations the parameter s does NOT correspond to the lineair length along the trajectory. User should be sure that the lineair distance travelled by this path object is NOT zero, when using this method ! (e.g. the case of only rotational change) throws <ref refid="classKDL_1_1Error__MotionPlanning__Not__Applicable" kindref="compound">Error_MotionPlanning_Not_Applicable</ref> if used on composed path objects. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_composite.hpp" line="170" column="16" bodyfile="src/path_composite.cpp" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Composite_1a8dbfb9a72e821839ce491a9add98b3ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KDL::Path_Composite::Path_Composite</definition>
        <argsstring>()</argsstring>
        <name>Path_Composite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_composite.hpp" line="162" column="1" bodyfile="src/path_composite.cpp" bodystart="113" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Composite_1a466d5ba0411bfcc6def2db149d9de225" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double KDL::Path_Composite::PathLength</definition>
        <argsstring>()</argsstring>
        <name>PathLength</name>
        <reimplements refid="classKDL_1_1Path_1a095d3ce8d48bd9f8953793c60532cd1a">PathLength</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the total path length of the trajectory (has dimension LENGTH) This is not always a physical length , ie when dealing with rotations that are dominant. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_composite.hpp" line="177" column="16" bodyfile="src/path_composite.cpp" bodystart="131" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Composite_1a506faf2f4d52c5d374e021a31d65aab0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref></type>
        <definition>Frame KDL::Path_Composite::Pos</definition>
        <argsstring>(double s) const</argsstring>
        <name>Pos</name>
        <reimplements refid="classKDL_1_1Path_1ab0121ec33eee9525bd3c883a1631bf6c">Pos</reimplements>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classKDL_1_1Frame" kindref="compound">Frame</ref> at the current path length s </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_composite.hpp" line="182" column="15" bodyfile="src/path_composite.cpp" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Composite_1a2836bf1c9ba8f89c8ec1f6dc79e32b06" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classKDL_1_1Twist" kindref="compound">Twist</ref></type>
        <definition>Twist KDL::Path_Composite::Vel</definition>
        <argsstring>(double s, double sd) const</argsstring>
        <name>Vel</name>
        <reimplements refid="classKDL_1_1Path_1a6982dc012ef4299cffc1be99ef225d98">Vel</reimplements>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the velocity twist at path length s theta and with derivative of s == sd </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_composite.hpp" line="188" column="15" bodyfile="src/path_composite.cpp" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Composite_1aaaf25f08ed9de56d89f2c0b91e924eb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KDL::Path_Composite::Write</definition>
        <argsstring>(std::ostream &amp;os)</argsstring>
        <name>Write</name>
        <reimplements refid="classKDL_1_1Path_1a3c1c34464d34183fc965af1ea260879d">Write</reimplements>
        <param>
          <type><ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref> &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes one of the derived objects to the stream </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_composite.hpp" line="201" column="14" bodyfile="src/path_composite.cpp" bodystart="159" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classKDL_1_1Path__Composite_1a2634b9540a6d417d0fd4a4f571064043" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>KDL::Path_Composite::~Path_Composite</definition>
        <argsstring>()</argsstring>
        <name>~Path_Composite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/path_composite.hpp" line="239" column="9" bodyfile="src/path_composite.cpp" bodystart="191" bodyend="197"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A <ref refid="classKDL_1_1Path" kindref="compound">Path</ref> being the composition of other <ref refid="classKDL_1_1Path" kindref="compound">Path</ref> objects.</para>
<para>For several of its methods, this class needs to lookup the segment corresponding to a value of the path variable s. To increase efficiency, this value is cached.</para>
<para>\TODO Currently a linear search is used to look up the segment. A binary search is more efficient. Can STL be used for this ? \TODO Increase the efficiency for caching for the common case of a fine grained monotonously increasing path variable s.</para>
<para>\TODO For all <ref refid="classKDL_1_1Path" kindref="compound">Path</ref>.., <ref refid="classKDL_1_1VelocityProfile" kindref="compound">VelocityProfile</ref>.., <ref refid="classKDL_1_1Trajectory" kindref="compound">Trajectory</ref>... check the bounds on the inputs with asserts.</para>
<para>\TODO explain this routine in the wiki. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KDL::Path</label>
        <link refid="classKDL_1_1Path"/>
      </node>
      <node id="1">
        <label>KDL::Path_Composite</label>
        <link refid="classKDL_1_1Path__Composite"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>std::vector&lt; double &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="2">
        <label>KDL::Path</label>
        <link refid="classKDL_1_1Path"/>
      </node>
      <node id="3">
        <label>std::vector&lt; std::pair&lt; Path *, bool &gt; &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="1">
        <label>KDL::Path_Composite</label>
        <link refid="classKDL_1_1Path__Composite"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>gv</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>dv</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/path_composite.hpp" line="108" column="1" bodyfile="src/path_composite.hpp" bodystart="107" bodyend="202"/>
    <listofallmembers>
      <member refid="classKDL_1_1Path__Composite_1a5acfb048ac1c00850dfbde09c5c9198c" prot="public" virt="virtual"><scope>KDL::Path_Composite</scope><name>Acc</name></member>
      <member refid="classKDL_1_1Path__Composite_1a679f396ba2f9f0b83213f88d895ac1c6" prot="public" virt="non-virtual"><scope>KDL::Path_Composite</scope><name>Add</name></member>
      <member refid="classKDL_1_1Path__Composite_1ad80c5ed91ffb87736dfc66837d0729b6" prot="private" virt="non-virtual"><scope>KDL::Path_Composite</scope><name>cached_ends</name></member>
      <member refid="classKDL_1_1Path__Composite_1a2618c98caa0e9ca06bb9741ffa78a9bd" prot="private" virt="non-virtual"><scope>KDL::Path_Composite</scope><name>cached_index</name></member>
      <member refid="classKDL_1_1Path__Composite_1a307bb88dc0a0b07907da9b86d07c0760" prot="private" virt="non-virtual"><scope>KDL::Path_Composite</scope><name>cached_starts</name></member>
      <member refid="classKDL_1_1Path__Composite_1aee441fb0bbb122b4798273f0cc4fa731" prot="public" virt="virtual"><scope>KDL::Path_Composite</scope><name>Clone</name></member>
      <member refid="classKDL_1_1Path__Composite_1a43b4fe18f0584cb61f5d2e80b6dc8e8f" prot="private" virt="non-virtual"><scope>KDL::Path_Composite</scope><name>DoubleVector</name></member>
      <member refid="classKDL_1_1Path__Composite_1a6c487a4be9cb79ae5630ad8ed7fdd136" prot="private" virt="non-virtual"><scope>KDL::Path_Composite</scope><name>dv</name></member>
      <member refid="classKDL_1_1Path__Composite_1aa002edee28c5ff6006271daddb436ab2" prot="public" virt="virtual"><scope>KDL::Path_Composite</scope><name>GetCurrentSegmentLocation</name></member>
      <member refid="classKDL_1_1Path__Composite_1ae079edab6b343eb42ddc9251f0103172" prot="public" virt="virtual"><scope>KDL::Path_Composite</scope><name>getIdentifier</name></member>
      <member refid="classKDL_1_1Path__Composite_1a9b4cfb8ab9e47f66f9aa6b24bc8b67eb" prot="public" virt="virtual"><scope>KDL::Path_Composite</scope><name>GetLengthToEndOfSegment</name></member>
      <member refid="classKDL_1_1Path__Composite_1a5788086a6f9b678e797383a3534938af" prot="public" virt="virtual"><scope>KDL::Path_Composite</scope><name>GetNrOfSegments</name></member>
      <member refid="classKDL_1_1Path__Composite_1a11e28d11f967a77d82167ecb77497de5" prot="public" virt="virtual"><scope>KDL::Path_Composite</scope><name>GetSegment</name></member>
      <member refid="classKDL_1_1Path__Composite_1aa7f67a8bc3ced143153fe969fc1df3b5" prot="private" virt="non-virtual"><scope>KDL::Path_Composite</scope><name>gv</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09a0ce2e4f0f5a61c01cecafbe0084682cd" prot="public" virt="non-virtual"><scope>KDL::Path_Composite</scope><name>ID_CIRCLE</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09a0e63c4744e46f92e2599ca9fbf50f6a4" prot="public" virt="non-virtual"><scope>KDL::Path_Composite</scope><name>ID_COMPOSITE</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09ae0cd5b91c304ea865d3e2ffe642a47d8" prot="public" virt="non-virtual"><scope>KDL::Path_Composite</scope><name>ID_CYCLIC_CLOSED</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09a4f9ed1827474558375d8fdcc6fa22a8c" prot="public" virt="non-virtual"><scope>KDL::Path_Composite</scope><name>ID_LINE</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09ad0c76d25569cecb6d38bce3ec92cd8eb" prot="public" virt="non-virtual"><scope>KDL::Path_Composite</scope><name>ID_POINT</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09a6458e9e3355fb8ebdcd540ae753aadbd" prot="public" virt="non-virtual"><scope>KDL::Path_Composite</scope><name>ID_ROUNDED_COMPOSITE</name></member>
      <member refid="classKDL_1_1Path_1a8f75e07f7fc75646e0db7e6b4a1c3f09" prot="public" virt="non-virtual"><scope>KDL::Path_Composite</scope><name>IdentifierType</name></member>
      <member refid="classKDL_1_1Path__Composite_1a77a6568ab90b5778a3239d43bb05071d" prot="public" virt="virtual"><scope>KDL::Path_Composite</scope><name>LengthToS</name></member>
      <member refid="classKDL_1_1Path__Composite_1abf873591b2ca9354b90b082cc6e9d071" prot="private" virt="non-virtual"><scope>KDL::Path_Composite</scope><name>Lookup</name></member>
      <member refid="classKDL_1_1Path__Composite_1a8dbfb9a72e821839ce491a9add98b3ea" prot="public" virt="non-virtual"><scope>KDL::Path_Composite</scope><name>Path_Composite</name></member>
      <member refid="classKDL_1_1Path__Composite_1a8a26dd4e83aad5698d7a8d5e934e5b61" prot="private" virt="non-virtual"><scope>KDL::Path_Composite</scope><name>pathlength</name></member>
      <member refid="classKDL_1_1Path__Composite_1a466d5ba0411bfcc6def2db149d9de225" prot="public" virt="virtual"><scope>KDL::Path_Composite</scope><name>PathLength</name></member>
      <member refid="classKDL_1_1Path__Composite_1aad3fbd29cbb70a11a0d18fa6a971f536" prot="private" virt="non-virtual"><scope>KDL::Path_Composite</scope><name>PathVector</name></member>
      <member refid="classKDL_1_1Path__Composite_1a506faf2f4d52c5d374e021a31d65aab0" prot="public" virt="virtual"><scope>KDL::Path_Composite</scope><name>Pos</name></member>
      <member refid="classKDL_1_1Path_1a15dfd941258db019a5b30c666e51b358" prot="public" virt="non-virtual"><scope>KDL::Path_Composite</scope><name>Read</name></member>
      <member refid="classKDL_1_1Path__Composite_1a2836bf1c9ba8f89c8ec1f6dc79e32b06" prot="public" virt="virtual"><scope>KDL::Path_Composite</scope><name>Vel</name></member>
      <member refid="classKDL_1_1Path__Composite_1aaaf25f08ed9de56d89f2c0b91e924eb2" prot="public" virt="virtual"><scope>KDL::Path_Composite</scope><name>Write</name></member>
      <member refid="classKDL_1_1Path_1a10f16828c888527755e8a59c906b5a57" prot="public" virt="virtual"><scope>KDL::Path_Composite</scope><name>~Path</name></member>
      <member refid="classKDL_1_1Path__Composite_1a2634b9540a6d417d0fd4a4f571064043" prot="public" virt="virtual"><scope>KDL::Path_Composite</scope><name>~Path_Composite</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
