<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="indirect__speech__recognition_8py" kind="file" language="Python">
    <compoundname>indirect_speech_recognition.py</compoundname>
    <innerclass refid="classindirect__speech__recognition_1_1HearQuestion" prot="public">indirect_speech_recognition::HearQuestion</innerclass>
    <innerclass refid="classindirect__speech__recognition_1_1Turn" prot="public">indirect_speech_recognition::Turn</innerclass>
    <innernamespace refid="namespaceindirect__speech__recognition">indirect_speech_recognition</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceindirect__speech__recognition" refkind="compound"><highlight class="comment">#!/usr/bin/python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>print_function</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>random</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pykdl_ros<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>VectorStamped</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>rospy</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>smach</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>robot_smach_states<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>states</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robocup_knowledge<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>load_knowledge</highlight></codeline>
<codeline lineno="17" refid="namespaceindirect__speech__recognition_1a0f02785494a0020f810aaa807fa392c3" refkind="member"><highlight class="normal">data<sp/>=<sp/>load_knowledge(</highlight><highlight class="stringliteral">&apos;challenge_speech_recognition&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classindirect__speech__recognition_1_1HearQuestion" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classindirect__speech__recognition_1_1HearQuestion" kindref="compound">HearQuestion</ref>(smach.State):</highlight></codeline>
<codeline lineno="21" refid="classindirect__speech__recognition_1_1HearQuestion_1a486903a6485c66ab150035f7c0a818b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classindirect__speech__recognition_1_1HearQuestion_1a486903a6485c66ab150035f7c0a818b2" kindref="member">__init__</ref>(self,<sp/>robot,<sp/>time_out=rospy.Duration(15)):</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.State.__init__(self,<sp/>outcomes=[</highlight><highlight class="stringliteral">&quot;answered&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;not_answered&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="23" refid="classindirect__speech__recognition_1_1HearQuestion_1aa98da47f1e2ee7c65e3ffd67b6438783" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classindirect__speech__recognition_1_1HearQuestion_1aa98da47f1e2ee7c65e3ffd67b6438783" kindref="member">robot</ref><sp/>=<sp/>robot</highlight></codeline>
<codeline lineno="24" refid="classindirect__speech__recognition_1_1HearQuestion_1a643171a3168e04842378cbb1ea812529" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classindirect__speech__recognition_1_1HearQuestion_1a643171a3168e04842378cbb1ea812529" kindref="member">time_out</ref><sp/>=<sp/>time_out</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classindirect__speech__recognition_1_1HearQuestion_1afda184927a6eeb2cf88dbfbe3a3befbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classindirect__speech__recognition_1_1HearQuestion_1afda184927a6eeb2cf88dbfbe3a3befbd" kindref="member">execute</ref>(self,<sp/>userdata=None):</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classindirect__speech__recognition_1_1HearQuestion_1aa98da47f1e2ee7c65e3ffd67b6438783" kindref="member">robot</ref>.head.look_at_ground_in_front_of_robot(100)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>self.<ref refid="classindirect__speech__recognition_1_1HearQuestion_1aa98da47f1e2ee7c65e3ffd67b6438783" kindref="member">robot</ref>.ears.recognize(spec=data.spec,<sp/>choices=data.choices,<sp/>time_out=self.<ref refid="classindirect__speech__recognition_1_1HearQuestion_1a643171a3168e04842378cbb1ea812529" kindref="member">time_out</ref>)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>res:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classindirect__speech__recognition_1_1HearQuestion_1aa98da47f1e2ee7c65e3ffd67b6438783" kindref="member">robot</ref>.speech.speak(</highlight><highlight class="stringliteral">&quot;My<sp/>ears<sp/>are<sp/>not<sp/>working<sp/>properly.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>res:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;question&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>res.choices:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(</highlight><highlight class="stringliteral">&quot;Question<sp/>was:<sp/>&apos;%s&apos;?&quot;</highlight><highlight class="normal">%res.result)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classindirect__speech__recognition_1_1HearQuestion_1aa98da47f1e2ee7c65e3ffd67b6438783" kindref="member">robot</ref>.speech.speak(</highlight><highlight class="stringliteral">&quot;The<sp/>answer<sp/>is<sp/>%s&quot;</highlight><highlight class="normal">%data.choice_answer_mapping[res.choices[</highlight><highlight class="stringliteral">&apos;question&apos;</highlight><highlight class="normal">]])</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;answered&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classindirect__speech__recognition_1_1HearQuestion_1aa98da47f1e2ee7c65e3ffd67b6438783" kindref="member">robot</ref>.speech.speak(</highlight><highlight class="stringliteral">&quot;Sorry,<sp/>I<sp/>do<sp/>not<sp/>understand<sp/>your<sp/>question&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;not_answered&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classindirect__speech__recognition_1_1Turn" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classindirect__speech__recognition_1_1Turn" kindref="compound">Turn</ref>(smach.State):</highlight></codeline>
<codeline lineno="46" refid="classindirect__speech__recognition_1_1Turn_1ac9c9368490925e5a25c97f6c9c91b357" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classindirect__speech__recognition_1_1Turn_1ac9c9368490925e5a25c97f6c9c91b357" kindref="member">__init__</ref>(self,<sp/>robot):</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.State.__init__(self,<sp/>outcomes=[</highlight><highlight class="stringliteral">&quot;turned&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="48" refid="classindirect__speech__recognition_1_1Turn_1ac9cdf28d9fe4c926546cb6489615ab24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classindirect__speech__recognition_1_1Turn_1ac9cdf28d9fe4c926546cb6489615ab24" kindref="member">robot</ref><sp/>=<sp/>robot</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classindirect__speech__recognition_1_1Turn_1adf2ca5eb089928ebd2ad579ced844f51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classindirect__speech__recognition_1_1Turn_1adf2ca5eb089928ebd2ad579ced844f51" kindref="member">_turn_to_closest_entity</ref>(self):</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Reset<sp/>the<sp/>world<sp/>model<sp/>just<sp/>to<sp/>be<sp/>sure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classindirect__speech__recognition_1_1Turn_1ac9cdf28d9fe4c926546cb6489615ab24" kindref="member">robot</ref>.ed.reset()</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>operator:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator<sp/>=<sp/>self.<ref refid="classindirect__speech__recognition_1_1Turn_1ac9cdf28d9fe4c926546cb6489615ab24" kindref="member">robot</ref>.ed.get_closest_entity(self,<sp/>radius=1.9,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>center_point=VectorStamped.from_framestamped(self.<ref refid="classindirect__speech__recognition_1_1Turn_1ac9cdf28d9fe4c926546cb6489615ab24" kindref="member">robot</ref>.base.get_location()))</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(operator)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>operator:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vth<sp/>=<sp/>0.5</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>th<sp/>=<sp/>3.1415<sp/>/<sp/>10</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Turning<sp/>%f<sp/>radians<sp/>with<sp/>force<sp/>drive&quot;</highlight><highlight class="normal"><sp/>%<sp/>th)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classindirect__speech__recognition_1_1Turn_1ac9cdf28d9fe4c926546cb6489615ab24" kindref="member">robot</ref>.base.force_drive(0,<sp/>0,<sp/>vth,<sp/>th<sp/>/<sp/>vth)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classindirect__speech__recognition_1_1Turn_1ac9cdf28d9fe4c926546cb6489615ab24" kindref="member">robot</ref>.base.force_drive(0,<sp/>0,<sp/>0,<sp/>0.5)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Turn<sp/>towards<sp/>the<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>self.<ref refid="classindirect__speech__recognition_1_1Turn_1ac9cdf28d9fe4c926546cb6489615ab24" kindref="member">robot</ref>.base.get_location()</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot_th<sp/>=<sp/>current.frame.M.GetRPY()[2]<sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>the<sp/>Yaw,<sp/>rotation<sp/>around<sp/>Z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desired_th<sp/>=<sp/>math.atan2(operator.pose.frame.p.y()<sp/>-<sp/>current.frame.p.y(),</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator.pose.frame.p.x()<sp/>-<sp/>current.frame.p.x())</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Calculate<sp/>params</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>th<sp/>=<sp/>desired_th<sp/>-<sp/>robot_th</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>th<sp/>&gt;<sp/>3.1415:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>th<sp/>-=<sp/>2<sp/>*<sp/>3.1415</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>th<sp/>&lt;<sp/>-3.1415:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>th<sp/>+=<sp/>2<sp/>*<sp/>3.1415</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vth<sp/>=<sp/>0.5</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TUrn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classindirect__speech__recognition_1_1Turn_1ac9cdf28d9fe4c926546cb6489615ab24" kindref="member">robot</ref>.base.force_drive(0,<sp/>0,<sp/>(th<sp/>/<sp/>abs(th))<sp/>*<sp/>vth,<sp/>abs(th)<sp/>/<sp/>vth)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classindirect__speech__recognition_1_1Turn_1ad7b2c35eae4dda30abae083817bf6e43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classindirect__speech__recognition_1_1Turn_1ad7b2c35eae4dda30abae083817bf6e43" kindref="member">execute</ref>(self,<sp/>userdata=None):</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Last<sp/>talker<sp/>id:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classindirect__speech__recognition_1_1Turn_1ac9cdf28d9fe4c926546cb6489615ab24" kindref="member">robot</ref>.hmi.last_talker_id)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Calculate<sp/>params</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;dragonfly_speech_recognition&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classindirect__speech__recognition_1_1Turn_1ac9cdf28d9fe4c926546cb6489615ab24" kindref="member">robot</ref>.hmi.last_talker_id:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TUrn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vth<sp/>=<sp/>0.5</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>th<sp/>=<sp/>3.1415</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classindirect__speech__recognition_1_1Turn_1ac9cdf28d9fe4c926546cb6489615ab24" kindref="member">robot</ref>.base.force_drive(0,<sp/>0,<sp/>(th<sp/>/<sp/>abs(th))<sp/>*<sp/>vth,<sp/>abs(th)<sp/>/<sp/>vth)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classindirect__speech__recognition_1_1Turn_1adf2ca5eb089928ebd2ad579ced844f51" kindref="member">_turn_to_closest_entity</ref>()</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classindirect__speech__recognition_1_1Turn_1ac9cdf28d9fe4c926546cb6489615ab24" kindref="member">robot</ref>.speech.speak(random.choice([</highlight><highlight class="stringliteral">&quot;There<sp/>you<sp/>are!&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Hi<sp/>there!&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;I<sp/>think<sp/>the<sp/>sound<sp/>is<sp/>coming<sp/>from<sp/>this<sp/>direction&quot;</highlight><highlight class="normal">]))</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time.sleep(1.0)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;turned&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="namespaceindirect__speech__recognition_1a4929eb460c4b6e4f760772009fe57b1c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceindirect__speech__recognition_1a876bc226003f643f5a3aff08ded1eebc" kindref="member">setup_statemachine</ref>(robot):</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>sm<sp/>=<sp/>smach.StateMachine(outcomes=[</highlight><highlight class="stringliteral">&apos;Done&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Aborted&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>sm:</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Start<sp/>challenge<sp/>via<sp/>StartChallengeRobust</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(<sp/></highlight><highlight class="stringliteral">&quot;START_CHALLENGE_ROBUST&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>states.Initialize(robot),</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={<sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;initialized&apos;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SAY_1&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;abort&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Aborted&quot;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;SAY_1&apos;</highlight><highlight class="normal">,<sp/>states.Say(robot,<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>ask<sp/>me<sp/>question<sp/>one&quot;</highlight><highlight class="normal">),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;spoken&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;QUESTION_1&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;QUESTION_1&apos;</highlight><highlight class="normal">,<sp/><ref refid="classindirect__speech__recognition_1_1HearQuestion" kindref="compound">HearQuestion</ref>(robot),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;answered&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;SAY_2&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;not_answered&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;SAY_2&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;TURN_1&apos;</highlight><highlight class="normal">,<sp/><ref refid="classindirect__speech__recognition_1_1Turn" kindref="compound">Turn</ref>(robot),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;turned&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;SAY_1A&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;SAY_1A&apos;</highlight><highlight class="normal">,<sp/>states.Say(robot,<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>repeat<sp/>your<sp/>question&quot;</highlight><highlight class="normal">),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;spoken&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;QUESTION_1A&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;QUESTION_1A&apos;</highlight><highlight class="normal">,<sp/><ref refid="classindirect__speech__recognition_1_1HearQuestion" kindref="compound">HearQuestion</ref>(robot),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;answered&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;SAY_2&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;not_answered&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;SAY_2&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;SAY_2&apos;</highlight><highlight class="normal">,<sp/>states.Say(robot,<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>ask<sp/>me<sp/>question<sp/>two&quot;</highlight><highlight class="normal">),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;spoken&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;QUESTION_2&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;QUESTION_2&apos;</highlight><highlight class="normal">,<sp/><ref refid="classindirect__speech__recognition_1_1HearQuestion" kindref="compound">HearQuestion</ref>(robot),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;answered&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;SAY_3&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;not_answered&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;SAY_3&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;TURN_2&apos;</highlight><highlight class="normal">,<sp/><ref refid="classindirect__speech__recognition_1_1Turn" kindref="compound">Turn</ref>(robot),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;turned&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;SAY_2A&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;SAY_2A&apos;</highlight><highlight class="normal">,<sp/>states.Say(robot,<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>repeat<sp/>your<sp/>question&quot;</highlight><highlight class="normal">),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;spoken&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;QUESTION_2A&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;QUESTION_2A&apos;</highlight><highlight class="normal">,<sp/><ref refid="classindirect__speech__recognition_1_1HearQuestion" kindref="compound">HearQuestion</ref>(robot),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;answered&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;SAY_3&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;not_answered&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;SAY_3&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;SAY_3&apos;</highlight><highlight class="normal">,<sp/>states.Say(robot,<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>ask<sp/>me<sp/>question<sp/>three&quot;</highlight><highlight class="normal">),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;spoken&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;QUESTION_3&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;QUESTION_3&apos;</highlight><highlight class="normal">,<sp/><ref refid="classindirect__speech__recognition_1_1HearQuestion" kindref="compound">HearQuestion</ref>(robot),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;answered&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;SAY_4&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;not_answered&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;SAY_4&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;TURN_3&apos;</highlight><highlight class="normal">,<sp/><ref refid="classindirect__speech__recognition_1_1Turn" kindref="compound">Turn</ref>(robot),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;turned&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;SAY_3A&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;SAY_3A&apos;</highlight><highlight class="normal">,<sp/>states.Say(robot,<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>repeat<sp/>your<sp/>question&quot;</highlight><highlight class="normal">),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;spoken&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;QUESTION_3A&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;QUESTION_3A&apos;</highlight><highlight class="normal">,<sp/><ref refid="classindirect__speech__recognition_1_1HearQuestion" kindref="compound">HearQuestion</ref>(robot),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;answered&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;SAY_4&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;not_answered&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;SAY_4&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;SAY_4&apos;</highlight><highlight class="normal">,<sp/>states.Say(robot,<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>ask<sp/>me<sp/>question<sp/>four&quot;</highlight><highlight class="normal">),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;spoken&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;QUESTION_4&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;QUESTION_4&apos;</highlight><highlight class="normal">,<sp/><ref refid="classindirect__speech__recognition_1_1HearQuestion" kindref="compound">HearQuestion</ref>(robot),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;answered&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;SAY_5&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;not_answered&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;SAY_5&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;TURN_4&apos;</highlight><highlight class="normal">,<sp/><ref refid="classindirect__speech__recognition_1_1Turn" kindref="compound">Turn</ref>(robot),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;turned&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;SAY_4A&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;SAY_4A&apos;</highlight><highlight class="normal">,<sp/>states.Say(robot,<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>repeat<sp/>your<sp/>question&quot;</highlight><highlight class="normal">),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;spoken&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;QUESTION_4A&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;QUESTION_4A&apos;</highlight><highlight class="normal">,<sp/><ref refid="classindirect__speech__recognition_1_1HearQuestion" kindref="compound">HearQuestion</ref>(robot),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;answered&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;SAY_5&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;not_answered&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;SAY_5&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;SAY_5&apos;</highlight><highlight class="normal">,<sp/>states.Say(robot,<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>ask<sp/>me<sp/>question<sp/>five&quot;</highlight><highlight class="normal">),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;spoken&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;QUESTION_5&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;QUESTION_5&apos;</highlight><highlight class="normal">,<sp/><ref refid="classindirect__speech__recognition_1_1HearQuestion" kindref="compound">HearQuestion</ref>(robot),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;answered&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;AT_END&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;not_answered&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;AT_END&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;TURN_5&apos;</highlight><highlight class="normal">,<sp/><ref refid="classindirect__speech__recognition_1_1Turn" kindref="compound">Turn</ref>(robot),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;turned&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;SAY_5A&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;SAY_5A&apos;</highlight><highlight class="normal">,<sp/>states.Say(robot,<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>repeat<sp/>your<sp/>question&quot;</highlight><highlight class="normal">),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;spoken&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;QUESTION_5A&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;QUESTION_5A&apos;</highlight><highlight class="normal">,<sp/><ref refid="classindirect__speech__recognition_1_1HearQuestion" kindref="compound">HearQuestion</ref>(robot),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;answered&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;AT_END&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;not_answered&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;AT_END&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;AT_END&apos;</highlight><highlight class="normal">,<sp/>states.Say(robot,<sp/></highlight><highlight class="stringliteral">&quot;That<sp/>was<sp/>all<sp/>folks!&quot;</highlight><highlight class="normal">),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;spoken&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;Done&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sm</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>rospy.init_node(</highlight><highlight class="stringliteral">&apos;challenge_speech_recognition_exec&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(sys.argv)<sp/>&gt;<sp/>1:</highlight></codeline>
<codeline lineno="157" refid="namespaceindirect__speech__recognition_1ab5bbaf28f107f95f3a1b27f9ade66fe5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot_name<sp/>=<sp/>sys.argv[1]</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;[CHALLENGE<sp/>SPEECH<sp/>RECOGNITION]<sp/>Please<sp/>provide<sp/>robot<sp/>name<sp/>as<sp/>argument.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="namespaceindirect__speech__recognition_1a876bc226003f643f5a3aff08ded1eebc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>states.util.startup(setup_statemachine,<sp/>robot_name=robot_name)</highlight></codeline>
    </programlisting>
    <location file="src/indirect_speech_recognition.py"/>
  </compounddef>
</doxygen>
