<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="direct__speech__recognition_8py" kind="file" language="Python">
    <compoundname>direct_speech_recognition.py</compoundname>
    <innerclass refid="classdirect__speech__recognition_1_1HearQuestion" prot="public">direct_speech_recognition::HearQuestion</innerclass>
    <innernamespace refid="namespacedirect__speech__recognition">direct_speech_recognition</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacedirect__speech__recognition" refkind="compound"><highlight class="comment">#!/usr/bin/python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>print_function</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>rospy</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>smach</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>robot_smach_states<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>states</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robocup_knowledge<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>load_knowledge</highlight></codeline>
<codeline lineno="12" refid="namespacedirect__speech__recognition_1a66584e275ff9cff9a6a171ec5dfd358f" refkind="member"><highlight class="normal">data<sp/>=<sp/>load_knowledge(</highlight><highlight class="stringliteral">&apos;challenge_speech_recognition&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="classdirect__speech__recognition_1_1HearQuestion" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdirect__speech__recognition_1_1HearQuestion" kindref="compound">HearQuestion</ref>(smach.State):</highlight></codeline>
<codeline lineno="15" refid="classdirect__speech__recognition_1_1HearQuestion_1a8df5aa126584af14a819614ce43b4bf6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdirect__speech__recognition_1_1HearQuestion_1a8df5aa126584af14a819614ce43b4bf6" kindref="member">__init__</ref>(self,<sp/>robot,<sp/>time_out=rospy.Duration(15)):</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.State.__init__(self,<sp/>outcomes=[</highlight><highlight class="stringliteral">&quot;answered&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="17" refid="classdirect__speech__recognition_1_1HearQuestion_1ac11c32014a46ce1c52fbd644856b7ba4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdirect__speech__recognition_1_1HearQuestion_1ac11c32014a46ce1c52fbd644856b7ba4" kindref="member">robot</ref><sp/>=<sp/>robot</highlight></codeline>
<codeline lineno="18" refid="classdirect__speech__recognition_1_1HearQuestion_1a5ee06069457d9fe68be0f1543e28ac16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdirect__speech__recognition_1_1HearQuestion_1a5ee06069457d9fe68be0f1543e28ac16" kindref="member">time_out</ref><sp/>=<sp/>time_out</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classdirect__speech__recognition_1_1HearQuestion_1adb97cb3a0e19e83e94b63b20e1ce18e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdirect__speech__recognition_1_1HearQuestion_1adb97cb3a0e19e83e94b63b20e1ce18e1" kindref="member">execute</ref>(self,<sp/>userdata=None):</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdirect__speech__recognition_1_1HearQuestion_1ac11c32014a46ce1c52fbd644856b7ba4" kindref="member">robot</ref>.head.look_at_ground_in_front_of_robot(100)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>self.<ref refid="classdirect__speech__recognition_1_1HearQuestion_1ac11c32014a46ce1c52fbd644856b7ba4" kindref="member">robot</ref>.ears.recognize(spec=data.spec,<sp/>choices=data.choices,<sp/>time_out=self.<ref refid="classdirect__speech__recognition_1_1HearQuestion_1a5ee06069457d9fe68be0f1543e28ac16" kindref="member">time_out</ref>)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>res:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdirect__speech__recognition_1_1HearQuestion_1ac11c32014a46ce1c52fbd644856b7ba4" kindref="member">robot</ref>.speech.speak(</highlight><highlight class="stringliteral">&quot;My<sp/>ears<sp/>are<sp/>not<sp/>working<sp/>properly.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>res:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;question&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>res.choices:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(</highlight><highlight class="stringliteral">&quot;Question<sp/>was:<sp/>&apos;%s&apos;?&quot;</highlight><highlight class="normal">%res.result)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdirect__speech__recognition_1_1HearQuestion_1ac11c32014a46ce1c52fbd644856b7ba4" kindref="member">robot</ref>.speech.speak(</highlight><highlight class="stringliteral">&quot;The<sp/>answer<sp/>is<sp/>%s&quot;</highlight><highlight class="normal">%data.choice_answer_mapping[res.choices[</highlight><highlight class="stringliteral">&apos;question&apos;</highlight><highlight class="normal">]])</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdirect__speech__recognition_1_1HearQuestion_1ac11c32014a46ce1c52fbd644856b7ba4" kindref="member">robot</ref>.speech.speak(</highlight><highlight class="stringliteral">&quot;Sorry,<sp/>I<sp/>do<sp/>not<sp/>understand<sp/>your<sp/>question&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;answered&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="namespacedirect__speech__recognition_1a7732c92d8178f8cdf9c84668340b44d4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacedirect__speech__recognition_1aaab39297295409ff15791325c4c90fba" kindref="member">setup_statemachine</ref>(robot):</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>sm<sp/>=<sp/>smach.StateMachine(outcomes=[</highlight><highlight class="stringliteral">&apos;Done&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Aborted&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>sm:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Start<sp/>challenge<sp/>via<sp/>StartChallengeRobust</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(<sp/></highlight><highlight class="stringliteral">&quot;START_CHALLENGE_ROBUST&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>states.Initialize(robot),</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={<sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;initialized&apos;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SAY_1&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;abort&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Aborted&quot;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;SAY_1&apos;</highlight><highlight class="normal">,<sp/>states.Say(robot,<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>ask<sp/>me<sp/>question<sp/>one&quot;</highlight><highlight class="normal">),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;spoken&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;QUESTION_1&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;QUESTION_1&apos;</highlight><highlight class="normal">,<sp/><ref refid="classdirect__speech__recognition_1_1HearQuestion" kindref="compound">HearQuestion</ref>(robot),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;answered&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;SAY_2&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;SAY_2&apos;</highlight><highlight class="normal">,<sp/>states.Say(robot,<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>ask<sp/>me<sp/>question<sp/>two&quot;</highlight><highlight class="normal">),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;spoken&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;QUESTION_2&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;QUESTION_2&apos;</highlight><highlight class="normal">,<sp/><ref refid="classdirect__speech__recognition_1_1HearQuestion" kindref="compound">HearQuestion</ref>(robot),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;answered&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;SAY_3&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;SAY_3&apos;</highlight><highlight class="normal">,<sp/>states.Say(robot,<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>ask<sp/>me<sp/>question<sp/>three&quot;</highlight><highlight class="normal">),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;spoken&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;QUESTION_3&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;QUESTION_3&apos;</highlight><highlight class="normal">,<sp/><ref refid="classdirect__speech__recognition_1_1HearQuestion" kindref="compound">HearQuestion</ref>(robot),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;answered&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;SAY_4&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;SAY_4&apos;</highlight><highlight class="normal">,<sp/>states.Say(robot,<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>ask<sp/>me<sp/>question<sp/>four&quot;</highlight><highlight class="normal">),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;spoken&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;QUESTION_4&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;QUESTION_4&apos;</highlight><highlight class="normal">,<sp/><ref refid="classdirect__speech__recognition_1_1HearQuestion" kindref="compound">HearQuestion</ref>(robot),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;answered&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;SAY_5&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;SAY_5&apos;</highlight><highlight class="normal">,<sp/>states.Say(robot,<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>ask<sp/>me<sp/>question<sp/>five&quot;</highlight><highlight class="normal">),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;spoken&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;QUESTION_5&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;QUESTION_5&apos;</highlight><highlight class="normal">,<sp/><ref refid="classdirect__speech__recognition_1_1HearQuestion" kindref="compound">HearQuestion</ref>(robot),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;answered&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;AT_END&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;AT_END&apos;</highlight><highlight class="normal">,<sp/>states.Say(robot,<sp/></highlight><highlight class="stringliteral">&quot;That<sp/>was<sp/>all<sp/>folks!&quot;</highlight><highlight class="normal">),<sp/>transitions={<sp/></highlight><highlight class="stringliteral">&apos;spoken&apos;</highlight><highlight class="normal"><sp/>:</highlight><highlight class="stringliteral">&apos;Done&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sm</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>rospy.init_node(</highlight><highlight class="stringliteral">&apos;challenge_speech_recognition_exec&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(sys.argv)<sp/>&gt;<sp/>1:</highlight></codeline>
<codeline lineno="70" refid="namespacedirect__speech__recognition_1a7e823e2b6cf07e1c9a492ea15be4eea8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot_name<sp/>=<sp/>sys.argv[1]</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;[CHALLENGE<sp/>SPEECH<sp/>RECOGNITION]<sp/>Please<sp/>provide<sp/>robot<sp/>name<sp/>as<sp/>argument.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="namespacedirect__speech__recognition_1aaab39297295409ff15791325c4c90fba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>states.util.startup(setup_statemachine,<sp/>robot_name=robot_name)</highlight></codeline>
    </programlisting>
    <location file="src/direct_speech_recognition.py"/>
  </compounddef>
</doxygen>
