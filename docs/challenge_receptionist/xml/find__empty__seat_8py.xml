<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="find__empty__seat_8py" kind="file" language="Python">
    <compoundname>find_empty_seat.py</compoundname>
    <innerclass refid="classchallenge__receptionist_1_1find__empty__seat_1_1FindEmptySeat" prot="public">challenge_receptionist::find_empty_seat::FindEmptySeat</innerclass>
    <innerclass refid="classchallenge__receptionist_1_1find__empty__seat_1_1SeatsInRoomDesignator" prot="public">challenge_receptionist::find_empty_seat::SeatsInRoomDesignator</innerclass>
    <innernamespace refid="namespacechallenge__receptionist_1_1find__empty__seat">challenge_receptionist::find_empty_seat</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacechallenge__receptionist_1_1find__empty__seat" refkind="compound"><highlight class="comment">#!<sp/>/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>print_function</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>typing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>List</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>rospy</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>ed.entity<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Entity</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_smach_states.human_interaction<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Say</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_smach_states.util.designators<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>LockingDesignator</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_smach_states.designator_iterator<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>IterateDesignator</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_smach_states.world_model<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>CheckVolumeEmpty</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_smach_states.reset<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ResetArms</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_smach_states.utility<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>LockDesignator</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacechallenge__receptionist_1_1point__at__receptionist" kindref="compound">challenge_receptionist.point_at_receptionist</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>PointAtReception</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>robot_smach_states.util.designators<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ds</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>smach</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="classchallenge__receptionist_1_1find__empty__seat_1_1SeatsInRoomDesignator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classchallenge__receptionist_1_1find__empty__seat_1_1SeatsInRoomDesignator" kindref="compound">SeatsInRoomDesignator</ref>(ds.Designator):</highlight></codeline>
<codeline lineno="22" refid="classchallenge__receptionist_1_1find__empty__seat_1_1SeatsInRoomDesignator_1a7e4bcb2ff13cc02242145ee3292678a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classchallenge__receptionist_1_1find__empty__seat_1_1SeatsInRoomDesignator_1a7e4bcb2ff13cc02242145ee3292678a7" kindref="member">__init__</ref>(self,<sp/>robot,<sp/>seat_ids,<sp/>room,<sp/>name=None):</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(SeatsInRoomDesignator,<sp/>self).<ref refid="classchallenge__receptionist_1_1find__empty__seat_1_1SeatsInRoomDesignator_1a7e4bcb2ff13cc02242145ee3292678a7" kindref="member">__init__</ref>(resolve_type=[Entity],<sp/>name=name)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classchallenge__receptionist_1_1find__empty__seat_1_1SeatsInRoomDesignator_1a490734814e1848fb49b451bae28a6e28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__receptionist_1_1find__empty__seat_1_1SeatsInRoomDesignator_1a490734814e1848fb49b451bae28a6e28" kindref="member">robot</ref><sp/>=<sp/>robot</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ds.check_type(seat_ids,<sp/>[str])</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ds.check_type(room,<sp/>Entity)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classchallenge__receptionist_1_1find__empty__seat_1_1SeatsInRoomDesignator_1af15f553f319c4767de8924d01e1e94c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__receptionist_1_1find__empty__seat_1_1SeatsInRoomDesignator_1af15f553f319c4767de8924d01e1e94c7" kindref="member">room</ref><sp/>=<sp/>room</highlight></codeline>
<codeline lineno="31" refid="classchallenge__receptionist_1_1find__empty__seat_1_1SeatsInRoomDesignator_1ac22f85b87237d066656b88eb80d871c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classchallenge__receptionist_1_1find__empty__seat_1_1SeatsInRoomDesignator_1ac22f85b87237d066656b88eb80d871c5" kindref="member">seat_ids</ref><sp/>=<sp/>seat_ids</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classchallenge__receptionist_1_1find__empty__seat_1_1SeatsInRoomDesignator_1ad664b5e6fe6f0aa2fdc359e0016d8a08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classchallenge__receptionist_1_1find__empty__seat_1_1SeatsInRoomDesignator_1ad664b5e6fe6f0aa2fdc359e0016d8a08" kindref="member">_resolve</ref>(self):</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room<sp/>=<sp/>self.<ref refid="classchallenge__receptionist_1_1find__empty__seat_1_1SeatsInRoomDesignator_1af15f553f319c4767de8924d01e1e94c7" kindref="member">room</ref>.resolve()<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasattr(self.<ref refid="classchallenge__receptionist_1_1find__empty__seat_1_1SeatsInRoomDesignator_1af15f553f319c4767de8924d01e1e94c7" kindref="member">room</ref>,<sp/></highlight><highlight class="stringliteral">&apos;resolve&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>self.<ref refid="classchallenge__receptionist_1_1find__empty__seat_1_1SeatsInRoomDesignator_1af15f553f319c4767de8924d01e1e94c7" kindref="member">room</ref><sp/><sp/></highlight><highlight class="comment">#<sp/>type:<sp/>Entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>room:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logwarn(</highlight><highlight class="stringliteral">&quot;Room<sp/>is<sp/>None,<sp/>so<sp/>cannot<sp/>find<sp/>seats<sp/>there&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seats<sp/>=<sp/>[self.<ref refid="classchallenge__receptionist_1_1find__empty__seat_1_1SeatsInRoomDesignator_1a490734814e1848fb49b451bae28a6e28" kindref="member">robot</ref>.ed.get_entity(seat_id)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>seat_id<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classchallenge__receptionist_1_1find__empty__seat_1_1SeatsInRoomDesignator_1ac22f85b87237d066656b88eb80d871c5" kindref="member">seat_ids</ref>]<sp/><sp/></highlight><highlight class="comment">#<sp/>type:<sp/>List[Entity]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true_seats<sp/>=<sp/>[seat<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>seat<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>seats<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>seat<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">]<sp/><sp/></highlight><highlight class="comment">#<sp/>get_entity<sp/>returns<sp/>None<sp/>if<sp/>entity<sp/>does<sp/>not<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seats_in_room<sp/>=<sp/>room.entities_in_volume(true_seats,<sp/></highlight><highlight class="stringliteral">&quot;in&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>seats_in_room</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classchallenge__receptionist_1_1find__empty__seat_1_1SeatsInRoomDesignator_1ac5dca62338690eabd9c37d9ebca1d526" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classchallenge__receptionist_1_1find__empty__seat_1_1SeatsInRoomDesignator_1ac5dca62338690eabd9c37d9ebca1d526" kindref="member">__repr__</ref>(self):</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;SeatsInRoomDesignator({},<sp/>{},<sp/>{},<sp/>{})&quot;</highlight><highlight class="normal">.format(self.<ref refid="classchallenge__receptionist_1_1find__empty__seat_1_1SeatsInRoomDesignator_1a490734814e1848fb49b451bae28a6e28" kindref="member">robot</ref>,<sp/>self.<ref refid="classchallenge__receptionist_1_1find__empty__seat_1_1SeatsInRoomDesignator_1ac22f85b87237d066656b88eb80d871c5" kindref="member">seat_ids</ref>,<sp/>self.<ref refid="classchallenge__receptionist_1_1find__empty__seat_1_1SeatsInRoomDesignator_1af15f553f319c4767de8924d01e1e94c7" kindref="member">room</ref>,<sp/>self.name)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classchallenge__receptionist_1_1find__empty__seat_1_1FindEmptySeat" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classchallenge__receptionist_1_1find__empty__seat_1_1FindEmptySeat" kindref="compound">FindEmptySeat</ref>(smach.StateMachine):</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Iterate<sp/>over<sp/>all<sp/>seat-type<sp/>objects<sp/>and<sp/>check<sp/>that<sp/>their<sp/>&apos;on-top-of&apos;<sp/>volume<sp/>is<sp/>empty</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>That<sp/>can<sp/>be<sp/>done<sp/>with<sp/>an<sp/>Inspect<sp/>and<sp/>then<sp/>query<sp/>for<sp/>any<sp/>Entities<sp/>inside<sp/>that<sp/>volume.</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>If<sp/>there<sp/>are<sp/>none,<sp/>then<sp/>the<sp/>seat<sp/>is<sp/>empty</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classchallenge__receptionist_1_1find__empty__seat_1_1FindEmptySeat_1a40f39345cefc61e61377cd143cb1f9db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classchallenge__receptionist_1_1find__empty__seat_1_1FindEmptySeat_1a40f39345cefc61e61377cd143cb1f9db" kindref="member">__init__</ref>(self,<sp/>robot,<sp/>seats_to_inspect:<sp/>dict,<sp/>room,<sp/>fit_supporting_entity=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>seat_is_for=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.__init__(self,<sp/>outcomes=[</highlight><highlight class="stringliteral">&apos;succeeded&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;failed&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seats_volumes_des<sp/>=<sp/>ds.VariableDesignator(seats_to_inspect)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seats<sp/>=<sp/>LockingDesignator(<ref refid="classchallenge__receptionist_1_1find__empty__seat_1_1SeatsInRoomDesignator" kindref="compound">SeatsInRoomDesignator</ref>(robot,<sp/>list(seats_to_inspect.keys()),<sp/>room,<sp/></highlight><highlight class="stringliteral">&quot;seats_in_room&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat_ent_des<sp/>=<sp/>ds.VariableDesignator(resolve_type=Entity)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat_ent_uuid_des<sp/>=<sp/>ds.AttrDesignator(seat_ent_des,<sp/></highlight><highlight class="stringliteral">&apos;uuid&apos;</highlight><highlight class="normal">,<sp/>resolve_type=str)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>volumes_des<sp/>=<sp/>ds.ValueByKeyDesignator(seats_volumes_des,<sp/>seat_ent_uuid_des,<sp/>resolve_type=[str],</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;volumes_des&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>volume_des<sp/>=<sp/>ds.VariableDesignator(resolve_type=str)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>seat_is_for:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ds.check_type(seat_is_for,<sp/>str)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat_is_for<sp/>=<sp/>ds.Designator(</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>self:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;SAY_LETS_FIND_SEAT&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Say(robot,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&quot;Let<sp/>me<sp/>find<sp/>a<sp/>place<sp/>for<sp/>{name}<sp/>to<sp/>sit.<sp/>Please<sp/>be<sp/>patient<sp/>while<sp/>I<sp/>check<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;out<sp/>where<sp/>there&apos;s<sp/>place<sp/>to<sp/>sit&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=seat_is_for,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block=</highlight><highlight class="keyword">False</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;spoken&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;LOCK_DESIGNATOR&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;LOCK_DESIGNATOR&apos;</highlight><highlight class="normal">,<sp/>LockDesignator(seats),</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;locked&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;ITERATE_NEXT_SEAT&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;ITERATE_NEXT_SEAT&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IterateDesignator(seats,<sp/>seat_ent_des.writeable),</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;next&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;ITERATE_NEXT_VOLUME&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;stop_iteration&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;SAY_NO_EMPTY_SEATS&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;ITERATE_NEXT_VOLUME&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IterateDesignator(volumes_des,<sp/>volume_des.writeable),</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;next&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;CHECK_SEAT_EMPTY&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;stop_iteration&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;ITERATE_NEXT_SEAT&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;CHECK_SEAT_EMPTY&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CheckVolumeEmpty(robot,<sp/>seat_ent_des,<sp/>volume_des,<sp/>0.6,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;occupied&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;ITERATE_NEXT_VOLUME&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;empty&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;POINT_AT_EMPTY_SEAT&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;partially_occupied&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;POINT_AT_PARTIALLY_OCCUPIED_SEAT&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;failed&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;ITERATE_NEXT_VOLUME&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;POINT_AT_EMPTY_SEAT&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classchallenge__receptionist_1_1point__at__receptionist_1_1PointAtReception" kindref="compound">PointAtReception</ref>(robot=robot,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arm_designator=ds.UnoccupiedArmDesignator(robot,<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;required_goals&apos;</highlight><highlight class="normal">:<sp/>[</highlight><highlight class="stringliteral">&apos;point_at&apos;</highlight><highlight class="normal">]}),</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point_at_designator=seat_ent_des,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>volume=volume_des,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>look_at_designator=seat_ent_des),</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&quot;succeeded&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;SAY_SEAT_EMPTY&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;SAY_SEAT_EMPTY&quot;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;SAY_SEAT_EMPTY&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Say(robot,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&quot;Please<sp/>sit<sp/>on<sp/>the<sp/>{seat},<sp/>{name}!&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=seat_is_for,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat=ds.AttrDesignator(seat_ent_des,<sp/></highlight><highlight class="stringliteral">&apos;uuid&apos;</highlight><highlight class="normal">,<sp/>resolve_type=str),</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block=</highlight><highlight class="keyword">True</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;spoken&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;RESET_SUCCESS&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;POINT_AT_PARTIALLY_OCCUPIED_SEAT&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classchallenge__receptionist_1_1point__at__receptionist_1_1PointAtReception" kindref="compound">PointAtReception</ref>(robot=robot,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arm_designator=ds.UnoccupiedArmDesignator(robot,<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;required_goals&apos;</highlight><highlight class="normal">:<sp/>[</highlight><highlight class="stringliteral">&apos;point_at&apos;</highlight><highlight class="normal">]}),</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point_at_designator=seat_ent_des,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>volume=volume_des,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>look_at_designator=seat_ent_des),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&quot;succeeded&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;SAY_SEAT_PARTIALLY_OCCUPIED&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;SAY_SEAT_PARTIALLY_OCCUPIED&quot;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;SAY_SEAT_PARTIALLY_OCCUPIED&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Say(robot,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&quot;I<sp/>think<sp/>there&apos;s<sp/>some<sp/>space<sp/>left<sp/>here<sp/>where<sp/>you<sp/>can<sp/>sit<sp/>{name},&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>leave<sp/>some<sp/>space<sp/>for<sp/>any<sp/>potential<sp/>future<sp/>guests!&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=seat_is_for,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block=</highlight><highlight class="keyword">True</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;spoken&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;RESET_SUCCESS&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;SAY_NO_EMPTY_SEATS&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Say(robot,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&quot;Sorry,<sp/>there<sp/>are<sp/>no<sp/>empty<sp/>seats.<sp/>I<sp/>guess<sp/>you<sp/>just<sp/>have<sp/>to<sp/>stand<sp/>{name}&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=seat_is_for,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block=</highlight><highlight class="keyword">True</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;spoken&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;RESET_FAIL&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;RESET_FAIL&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ResetArms(robot),</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;done&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;failed&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smach.StateMachine.add(</highlight><highlight class="stringliteral">&apos;RESET_SUCCESS&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ResetArms(robot),</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transitions={</highlight><highlight class="stringliteral">&apos;done&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;succeeded&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_skills<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>get_robot</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(sys.argv)<sp/>&lt;<sp/>4:</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>provide<sp/>robot_name,<sp/>room<sp/>and<sp/>seats_to_inspect<sp/>as<sp/>arguments.<sp/>Eg.<sp/>&apos;hero<sp/>livingroom<sp/>dinner_table<sp/>bar<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;dinnertable&quot;</highlight><highlight class="normal">,<sp/>)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.exit(1)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="namespacechallenge__receptionist_1_1find__empty__seat_1a004c36617102a9df9bac8fac92290692" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>robot_name<sp/>=<sp/>sys.argv[1]</highlight></codeline>
<codeline lineno="165" refid="namespacechallenge__receptionist_1_1find__empty__seat_1aa35991ad00108446dac6074f71cb0aae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>room<sp/>=<sp/>sys.argv[2]</highlight></codeline>
<codeline lineno="166" refid="namespacechallenge__receptionist_1_1find__empty__seat_1a55b7bac25d01809bfbecf8e9b617270c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>seats_to_inspect<sp/>=<sp/>sys.argv[3:]</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>seats_to_inspect<sp/>=<sp/>{seat:<sp/>[</highlight><highlight class="stringliteral">&apos;on_top_of&apos;</highlight><highlight class="normal">]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>seat<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>seats_to_inspect}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>rospy.init_node(</highlight><highlight class="stringliteral">&apos;test_find_emtpy_seat&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="171" refid="namespacechallenge__receptionist_1_1find__empty__seat_1afa48fa256a0425fb12571153a4a23a0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>robot<sp/>=<sp/>get_robot(robot_name)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="namespacechallenge__receptionist_1_1find__empty__seat_1a7402b39814099a83dc8dd27de9bd2b63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>sm<sp/>=<sp/><ref refid="classchallenge__receptionist_1_1find__empty__seat_1_1FindEmptySeat" kindref="compound">FindEmptySeat</ref>(robot,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seats_to_inspect=seats_to_inspect,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room=ds.EntityByIdDesignator(robot,<sp/>room))</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>sm.execute()</highlight></codeline>
    </programlisting>
    <location file="src/challenge_receptionist/find_empty_seat.py"/>
  </compounddef>
</doxygen>
