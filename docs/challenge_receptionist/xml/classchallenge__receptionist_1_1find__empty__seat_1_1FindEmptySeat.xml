<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classchallenge__receptionist_1_1find__empty__seat_1_1FindEmptySeat" kind="class" language="Python" prot="public">
    <compoundname>challenge_receptionist::find_empty_seat::FindEmptySeat</compoundname>
    <basecompoundref prot="public" virt="non-virtual">StateMachine</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classchallenge__receptionist_1_1find__empty__seat_1_1FindEmptySeat_1a40f39345cefc61e61377cd143cb1f9db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def challenge_receptionist.find_empty_seat.FindEmptySeat.__init__</definition>
        <argsstring>(self, robot, dict seats_to_inspect, room, fit_supporting_entity=False, seat_is_for=None)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="namespacechallenge__receptionist_1_1find__empty__seat_1afa48fa256a0425fb12571153a4a23a0f" kindref="member">robot</ref></type>
          <defname>robot</defname>
        </param>
        <param>
          <type>dict</type>
          <declname>seats_to_inspect</declname>
        </param>
        <param>
          <type><ref refid="namespacechallenge__receptionist_1_1find__empty__seat_1aa35991ad00108446dac6074f71cb0aae" kindref="member">room</ref></type>
          <defname>room</defname>
        </param>
        <param>
          <type>fit_supporting_entity</type>
          <defname>fit_supporting_entity</defname>
          <defval><ref refid="namespacetest__tools_1_1headless__smach__viewer_1ad83ead4f8345e30ecdcd6779cd49d3bc" kindref="member" external="/home/docker/ros/noetic/system/build/docs/test_tools/tags">False</ref></defval>
        </param>
        <param>
          <type>seat_is_for</type>
          <defname>seat_is_for</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/challenge_receptionist/find_empty_seat.py" line="57" column="1" bodyfile="src/challenge_receptionist/find_empty_seat.py" bodystart="57" bodyend="153"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Iterate over all seat-type objects and check that their &apos;on-top-of&apos; volume is empty
That can be done with an Inspect and then query for any Entities inside that volume.
If there are none, then the seat is empty
</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>StateMachine</label>
      </node>
      <node id="1">
        <label>challenge_receptionist.find_empty_seat.FindEmptySeat</label>
        <link refid="classchallenge__receptionist_1_1find__empty__seat_1_1FindEmptySeat"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>StateMachine</label>
      </node>
      <node id="1">
        <label>challenge_receptionist.find_empty_seat.FindEmptySeat</label>
        <link refid="classchallenge__receptionist_1_1find__empty__seat_1_1FindEmptySeat"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/challenge_receptionist/find_empty_seat.py" line="50" column="1" bodyfile="src/challenge_receptionist/find_empty_seat.py" bodystart="50" bodyend="154"/>
    <listofallmembers>
      <member refid="classchallenge__receptionist_1_1find__empty__seat_1_1FindEmptySeat_1a40f39345cefc61e61377cd143cb1f9db" prot="public" virt="non-virtual"><scope>challenge_receptionist::find_empty_seat::FindEmptySeat</scope><name>__init__</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
