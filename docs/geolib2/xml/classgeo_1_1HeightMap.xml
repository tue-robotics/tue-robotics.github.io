<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classgeo_1_1HeightMap" kind="class" language="C++" prot="public">
    <compoundname>geo::HeightMap</compoundname>
    <basecompoundref refid="classgeo_1_1Shape" prot="public" virt="non-virtual">geo::Shape</basecompoundref>
    <includes refid="HeightMap_8h" local="no">HeightMap.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classgeo_1_1HeightMap_1a1d99d66da6b59acf53e4d0d0cd3dcbfe" prot="protected" static="no" mutable="no">
        <type><ref refid="classgeo_1_1HeightMapNode" kindref="compound">HeightMapNode</ref> *</type>
        <definition>HeightMapNode* geo::HeightMap::root_</definition>
        <argsstring></argsstring>
        <name>root_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/HeightMap.h" line="41" column="19" bodyfile="include/geolib/HeightMap.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgeo_1_1HeightMap_1adf09fd4524448cf812a1490f9611903c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classgeo_1_1HeightMap" kindref="compound">HeightMap</ref> *</type>
        <definition>HeightMap * geo::HeightMap::clone</definition>
        <argsstring>() const</argsstring>
        <name>clone</name>
        <reimplements refid="classgeo_1_1Shape_1ab6819adb192ee12c2032bd13fabb2c83">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/HeightMap.h" line="25" column="15" bodyfile="src/HeightMap.cpp" bodystart="23" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1HeightMap_1a746a81e5ce3e9636aa87e22d759e6d9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>geo::HeightMap::HeightMap</definition>
        <argsstring>()</argsstring>
        <name>HeightMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/HeightMap.h" line="19" column="5" bodyfile="src/HeightMap.cpp" bodystart="7" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1HeightMap_1a1d61b99eb679f5202c289a8924401efb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>geo::HeightMap::HeightMap</definition>
        <argsstring>(const HeightMap &amp;orig)</argsstring>
        <name>HeightMap</name>
        <param>
          <type>const <ref refid="classgeo_1_1HeightMap" kindref="compound">HeightMap</ref> &amp;</type>
          <declname>orig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/HeightMap.h" line="21" column="5" bodyfile="src/HeightMap.cpp" bodystart="10" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1HeightMap_1a4db382581ffa73a74b1d33aa92e5d788" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool geo::HeightMap::intersect</definition>
        <argsstring>(const Ray &amp;, float t0, float t1, double &amp;distance) const</argsstring>
        <name>intersect</name>
        <reimplements refid="classgeo_1_1Shape_1a1ac12f892c823caf90f7555e1fb98c62">intersect</reimplements>
        <param>
          <type>const <ref refid="classgeo_1_1Ray" kindref="compound">Ray</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
<para>intersect: currently always throws a logic error </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t0</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t1</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>distance</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true when the ray intersects the shape </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/HeightMap.h" line="27" column="10" bodyfile="src/HeightMap.cpp" bodystart="27" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1HeightMap_1ae3e40ecb6ac4450bd278da425343ea09" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>geo::HeightMap::~HeightMap</definition>
        <argsstring>()</argsstring>
        <name>~HeightMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/HeightMap.h" line="23" column="13" bodyfile="src/HeightMap.cpp" bodystart="19" bodyend="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgeo_1_1HeightMap_1a6e3ae1d812c09a1b9ca2452222bd26f1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgeo_1_1HeightMap" kindref="compound">HeightMap</ref></type>
        <definition>HeightMap geo::HeightMap::fromGrid</definition>
        <argsstring>(const std::vector&lt; std::vector&lt; double &gt; &gt; &amp;grid, double resolution)</argsstring>
        <name>fromGrid</name>
        <param>
          <type>const <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; double &gt; &gt; &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>double</type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
<para>fromGrid: instantiate a Heightmap from a grid </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>grid</parametername>
</parameternamelist>
<parameterdescription>
<para>Heightmap in the form of a grid </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resolution</parametername>
</parameternamelist>
<parameterdescription>
<para>resolution of the grid in meters per index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Heightmap </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/HeightMap.h" line="35" column="22" bodyfile="src/HeightMap.cpp" bodystart="34" bodyend="192"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classgeo_1_1HeightMap_1ac63da67cb8d899af2b5f1d896c9c5925" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgeo_1_1HeightMapNode" kindref="compound">HeightMapNode</ref> *</type>
        <definition>HeightMapNode * geo::HeightMap::createQuadTree</definition>
        <argsstring>(const std::vector&lt; std::vector&lt; double &gt; &gt; &amp;map, unsigned int mx_min, unsigned int my_min, unsigned int mx_max, unsigned int my_max, double resolution)</argsstring>
        <name>createQuadTree</name>
        <param>
          <type>const <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; double &gt; &gt; &amp;</type>
          <declname>map</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>mx_min</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>my_min</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>mx_max</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>my_max</declname>
        </param>
        <param>
          <type>double</type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
<para>createQuadTree: divide a grid over a quad tree </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>map</parametername>
</parameternamelist>
<parameterdescription>
<para>heightmap in the form of a grid. Must be square. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mx_min</parametername>
</parameternamelist>
<parameterdescription>
<para>indices describing a square region in the map from which to create the node </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>my_min</parametername>
</parameternamelist>
<parameterdescription>
<para>index to describe the region in the map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mx_max</parametername>
</parameternamelist>
<parameterdescription>
<para>index to describe the region in the map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>my_max</parametername>
</parameternamelist>
<parameterdescription>
<para>index to describe the region in the map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resolution</parametername>
</parameternamelist>
<parameterdescription>
<para>resolution of the map in meters per index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the root node of the quadtree. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/HeightMap.h" line="53" column="26" bodyfile="src/HeightMap.cpp" bodystart="194" bodyend="234"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A geometric description of a Heightmap using a quad tree. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>geo::Shape</label>
        <link refid="classgeo_1_1Shape"/>
      </node>
      <node id="1">
        <label>geo::HeightMap</label>
        <link refid="classgeo_1_1HeightMap"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>geo::Shape</label>
        <link refid="classgeo_1_1Shape"/>
        <childnode refid="3" relation="usage">
          <edgelabel>mesh_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>bounding_box_max_cache_</edgelabel>
          <edgelabel>bounding_box_min_cache_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>TYPE</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>geo::HeightMap</label>
        <link refid="classgeo_1_1HeightMap"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>root_</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>geo::Box</label>
        <link refid="classgeo_1_1Box"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>bounds</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>geo::HeightMapNode</label>
        <link refid="classgeo_1_1HeightMapNode"/>
        <childnode refid="10" relation="usage">
          <edgelabel>box_</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>children_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::vector&lt; geo::Vector3 &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="7">
        <label>geo::Vec3T&lt; T &gt;</label>
        <link refid="classgeo_1_1Vec3T"/>
      </node>
      <node id="5">
        <label>std::vector&lt; geo::TriangleI &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="3">
        <label>geo::Mesh</label>
        <link refid="classgeo_1_1Mesh"/>
        <childnode refid="4" relation="usage">
          <edgelabel>points_</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>triangles_i_</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>triangles_cache_</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::vector&lt; geo::Triangle &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="8">
        <label>std::string</label>
        <link refid="cpp/string/basic_string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="include/geolib/HeightMap.h" line="15" column="29" bodyfile="include/geolib/HeightMap.h" bodystart="15" bodyend="57"/>
    <listofallmembers>
      <member refid="classgeo_1_1Shape_1a1d6ae03b4a06eb3d86dd918c1a2a5a30" prot="private" virt="non-virtual"><scope>geo::HeightMap</scope><name>bounding_box_cache_valid_</name></member>
      <member refid="classgeo_1_1Shape_1a9ff738ec054dd0577dc948609db42475" prot="private" virt="non-virtual"><scope>geo::HeightMap</scope><name>bounding_box_max_cache_</name></member>
      <member refid="classgeo_1_1Shape_1a20119d9bcc304168a5d536131f74bf63" prot="private" virt="non-virtual"><scope>geo::HeightMap</scope><name>bounding_box_min_cache_</name></member>
      <member refid="classgeo_1_1HeightMap_1adf09fd4524448cf812a1490f9611903c" prot="public" virt="virtual"><scope>geo::HeightMap</scope><name>clone</name></member>
      <member refid="classgeo_1_1Shape_1ae7769cb7528180ed71c1ef919d42cc37" prot="public" virt="virtual"><scope>geo::HeightMap</scope><name>contains</name></member>
      <member refid="classgeo_1_1HeightMap_1ac63da67cb8d899af2b5f1d896c9c5925" prot="protected" virt="non-virtual"><scope>geo::HeightMap</scope><name>createQuadTree</name></member>
      <member refid="classgeo_1_1Shape_1a99de8a314f524d2f3243befbb9e56dcb" prot="public" virt="virtual"><scope>geo::HeightMap</scope><name>empty</name></member>
      <member refid="classgeo_1_1HeightMap_1a6e3ae1d812c09a1b9ca2452222bd26f1" prot="public" virt="non-virtual"><scope>geo::HeightMap</scope><name>fromGrid</name></member>
      <member refid="classgeo_1_1Shape_1ab05847f6e020356a637cf51882099c24" prot="public" virt="virtual"><scope>geo::HeightMap</scope><name>getBoundingBox</name></member>
      <member refid="classgeo_1_1Shape_1ab4ecd5a86b3dae9bd3f3108a2d9fa9d1" prot="public" virt="virtual"><scope>geo::HeightMap</scope><name>getMaxRadius</name></member>
      <member refid="classgeo_1_1Shape_1a8b5d477a7a1fd6b6e6e41e824b2feee9" prot="public" virt="virtual"><scope>geo::HeightMap</scope><name>getMesh</name></member>
      <member refid="classgeo_1_1HeightMap_1a746a81e5ce3e9636aa87e22d759e6d9b" prot="public" virt="non-virtual"><scope>geo::HeightMap</scope><name>HeightMap</name></member>
      <member refid="classgeo_1_1HeightMap_1a1d61b99eb679f5202c289a8924401efb" prot="public" virt="non-virtual"><scope>geo::HeightMap</scope><name>HeightMap</name></member>
      <member refid="classgeo_1_1HeightMap_1a4db382581ffa73a74b1d33aa92e5d788" prot="public" virt="virtual"><scope>geo::HeightMap</scope><name>intersect</name></member>
      <member refid="classgeo_1_1Shape_1a3ba8194d47f9c6b31543ce22ac7778f0" prot="public" virt="virtual" ambiguityscope="geo::Shape::"><scope>geo::HeightMap</scope><name>intersect</name></member>
      <member refid="classgeo_1_1Shape_1a786ce13699e5a9d8ac66aa59901532ab" prot="protected" virt="non-virtual"><scope>geo::HeightMap</scope><name>mesh_</name></member>
      <member refid="classgeo_1_1Shape_1a78fdd351f1332234e258a98a115a25a0" prot="public" virt="non-virtual"><scope>geo::HeightMap</scope><name>read</name></member>
      <member refid="classgeo_1_1HeightMap_1a1d99d66da6b59acf53e4d0d0cd3dcbfe" prot="protected" virt="non-virtual"><scope>geo::HeightMap</scope><name>root_</name></member>
      <member refid="classgeo_1_1Shape_1a50cedd1350ccef781c83c7812695eeb2" prot="public" virt="virtual"><scope>geo::HeightMap</scope><name>setMesh</name></member>
      <member refid="classgeo_1_1Shape_1a8094a10b0bbca152bd8d0da08f255c9e" prot="public" virt="non-virtual"><scope>geo::HeightMap</scope><name>Shape</name></member>
      <member refid="classgeo_1_1Shape_1a1a807ae1f21eafc3580a250805275d5b" prot="public" virt="non-virtual"><scope>geo::HeightMap</scope><name>TYPE</name></member>
      <member refid="classgeo_1_1Shape_1a606be4fca6978f0a60e792854e6c5afc" prot="public" virt="virtual"><scope>geo::HeightMap</scope><name>write</name></member>
      <member refid="classgeo_1_1HeightMap_1ae3e40ecb6ac4450bd278da425343ea09" prot="public" virt="virtual"><scope>geo::HeightMap</scope><name>~HeightMap</name></member>
      <member refid="classgeo_1_1Shape_1a1e857e24797a6007ddeb8fb280ff7366" prot="public" virt="virtual"><scope>geo::HeightMap</scope><name>~Shape</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
