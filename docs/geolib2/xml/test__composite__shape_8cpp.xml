<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="test__composite__shape_8cpp" kind="file" language="C++">
    <compoundname>test_composite_shape.cpp</compoundname>
    <includes local="no">gtest/gtest.h</includes>
    <includes refid="CompositeShape_8h" local="no">geolib/CompositeShape.h</includes>
    <includes refid="box__test_8h" local="yes">box_test.h</includes>
    <incdepgraph>
      <node id="12">
        <label>vector</label>
        <link refid="cpp/header/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="16">
        <label>box_test.h</label>
        <link refid="box__test_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>iostream</label>
        <link refid="cpp/header/iostream" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="9">
        <label>memory</label>
        <link refid="cpp/header/memory" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="1">
        <label>test_composite_shape.cpp</label>
        <link refid="test__composite__shape_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>geolib/math_types.h</label>
        <link refid="math__types_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>array</label>
        <link refid="cpp/header/array" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="10">
        <label>Mesh.h</label>
        <link refid="Mesh_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Shape.h</label>
        <link refid="Shape_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>gtest/gtest.h</label>
      </node>
      <node id="3">
        <label>geolib/CompositeShape.h</label>
        <link refid="CompositeShape_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>datatypes.h</label>
        <link refid="datatypes_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>Ray.h</label>
        <link refid="Ray_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>geolib/Box.h</label>
        <link refid="Box_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cmath</label>
        <link refid="cpp/header/cmath" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="11">
        <label>Triangle.h</label>
        <link refid="Triangle_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classCompShapeTest" prot="public">CompShapeTest</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__composite__shape_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/test_composite_shape.cpp" line="63" column="5" bodyfile="test/test_composite_shape.cpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="test__composite__shape_8cpp_1adeea41d9c39c19b1028d49e8d160593b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(CompShapeTest, Contains)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classCompShapeTest" kindref="compound">CompShapeTest</ref></type>
        </param>
        <param>
          <type>Contains</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/test_composite_shape.cpp" line="22" column="1" bodyfile="test/test_composite_shape.cpp" bodystart="22" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="test__composite__shape_8cpp_1a53c62b3f1c20e7a23c8d1acef499714e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(CompShapeTest, Intersect)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="classCompShapeTest" kindref="compound">CompShapeTest</ref></type>
        </param>
        <param>
          <type>Intersect</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/test_composite_shape.cpp" line="37" column="1" bodyfile="test/test_composite_shape.cpp" bodystart="37" bodyend="61"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="CompositeShape_8h" kindref="compound">geolib/CompositeShape.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="box__test_8h" kindref="compound">box_test.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="classCompShapeTest" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classCompShapeTest" kindref="compound">CompShapeTest</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classBoxTest" kindref="compound">BoxTest</ref></highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="10" refid="classCompShapeTest_1a7f58a800be1ad99416c60c34332953d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCompShapeTest_1a7f58a800be1ad99416c60c34332953d7" kindref="member">CompShapeTest</ref>()</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCompShapeTest_1a29d76b9596a4415ce9807d8b22fb8bc6" kindref="member">comp</ref>.<ref refid="classgeo_1_1CompositeShape_1aae036877cbdc6c1e3373d944f54a2e74" kindref="member">addShape</ref>(<ref refid="classBoxTest_1a4922c4ccd432af4fe52729b349067a5d" kindref="member">box</ref>,<sp/><ref refid="classgeo_1_1Transform3T_1a0b569228b1e6eb2889d646158e7e11d1" kindref="member">geo::Pose3D::identity</ref>());</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="classCompShapeTest_1a7a8c5c0db450667701d7fcde50b59bf5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classCompShapeTest_1a7a8c5c0db450667701d7fcde50b59bf5" kindref="member">~CompShapeTest</ref>()</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="classCompShapeTest_1a29d76b9596a4415ce9807d8b22fb8bc6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1CompositeShape" kindref="compound">geo::CompositeShape</ref><sp/><ref refid="classCompShapeTest_1a29d76b9596a4415ce9807d8b22fb8bc6" kindref="member">comp</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">};</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="test__composite__shape_8cpp_1adeea41d9c39c19b1028d49e8d160593b" refkind="member"><highlight class="normal"><ref refid="test__composite__shape_8cpp_1adeea41d9c39c19b1028d49e8d160593b" kindref="member">TEST_F</ref>(<ref refid="classCompShapeTest" kindref="compound">CompShapeTest</ref>,<sp/>Contains)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(comp.contains(origin));</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(comp.contains(min));</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(comp.contains(max));</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(comp.contains(side_center));</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(comp.contains(side_center_triangle));</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(comp.contains(side_center_distance));</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(comp.contains(side_center_close));</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="test__composite__shape_8cpp_1a53c62b3f1c20e7a23c8d1acef499714e" refkind="member"><highlight class="normal"><ref refid="test__composite__shape_8cpp_1adeea41d9c39c19b1028d49e8d160593b" kindref="member">TEST_F</ref>(<ref refid="classCompShapeTest" kindref="compound">CompShapeTest</ref>,<sp/>Intersect)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(comp.intersect(origin,<sp/>0));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(comp.intersect(origin,<sp/>0.1));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(comp.intersect(min,<sp/>0));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(comp.intersect(min,<sp/>0.1));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(comp.intersect(max,<sp/>0));</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(comp.intersect(max,<sp/>0.1));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(comp.intersect(side_center,<sp/>0));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(comp.intersect(side_center,<sp/>0.1));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(comp.intersect(side_center_triangle,<sp/>0));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(comp.intersect(side_center_triangle,<sp/>0.1));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(comp.intersect(side_center_distance,<sp/>0));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(comp.intersect(side_center_distance,<sp/>0.1));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(comp.intersect(side_center_distance,<sp/>0.5));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(comp.intersect(side_center_distance,<sp/>0.6));</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(comp.intersect(side_center_close,<sp/>0));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(comp.intersect(side_center_close,<sp/>0.1));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(comp.intersect(side_center_close,<sp/>0.2));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(comp.intersect(side_center_close,<sp/>0.25));</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="test__composite__shape_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__composite__shape_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/>testing::InitGoogleTest(&amp;argc,<sp/>argv);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RUN_ALL_TESTS();</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="test/test_composite_shape.cpp"/>
  </compounddef>
</doxygen>
