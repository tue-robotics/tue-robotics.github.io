<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacegeo" kind="namespace" language="C++">
    <compoundname>geo</compoundname>
    <innerclass refid="classgeo_1_1Box" prot="public">geo::Box</innerclass>
    <innerclass refid="structgeo_1_1CompareVec3i" prot="public">geo::CompareVec3i</innerclass>
    <innerclass refid="classgeo_1_1CompositeShape" prot="public">geo::CompositeShape</innerclass>
    <innerclass refid="classgeo_1_1DefaultRenderResult" prot="public">geo::DefaultRenderResult</innerclass>
    <innerclass refid="classgeo_1_1DepthCamera" prot="public">geo::DepthCamera</innerclass>
    <innerclass refid="classgeo_1_1HeightMap" prot="public">geo::HeightMap</innerclass>
    <innerclass refid="classgeo_1_1HeightMapNode" prot="public">geo::HeightMapNode</innerclass>
    <innerclass refid="classgeo_1_1LaserRangeFinder" prot="public">geo::LaserRangeFinder</innerclass>
    <innerclass refid="classgeo_1_1LineSegment" prot="public">geo::LineSegment</innerclass>
    <innerclass refid="classgeo_1_1Mat2T" prot="public">geo::Mat2T</innerclass>
    <innerclass refid="classgeo_1_1Mat3T" prot="public">geo::Mat3T</innerclass>
    <innerclass refid="classgeo_1_1Matrix3x3" prot="public">geo::Matrix3x3</innerclass>
    <innerclass refid="classgeo_1_1Mesh" prot="public">geo::Mesh</innerclass>
    <innerclass refid="classgeo_1_1Octree" prot="public">geo::Octree</innerclass>
    <innerclass refid="classgeo_1_1OctreeNode" prot="public">geo::OctreeNode</innerclass>
    <innerclass refid="classgeo_1_1QuaternionT" prot="public">geo::QuaternionT</innerclass>
    <innerclass refid="structgeo_1_1RasterizeResult" prot="public">geo::RasterizeResult</innerclass>
    <innerclass refid="classgeo_1_1Ray" prot="public">geo::Ray</innerclass>
    <innerclass refid="classgeo_1_1RenderOptions" prot="public">geo::RenderOptions</innerclass>
    <innerclass refid="classgeo_1_1RenderResult" prot="public">geo::RenderResult</innerclass>
    <innerclass refid="classgeo_1_1serialization" prot="public">geo::serialization</innerclass>
    <innerclass refid="classgeo_1_1Shape" prot="public">geo::Shape</innerclass>
    <innerclass refid="classgeo_1_1Transform" prot="public">geo::Transform</innerclass>
    <innerclass refid="classgeo_1_1Transform2T" prot="public">geo::Transform2T</innerclass>
    <innerclass refid="classgeo_1_1Transform3T" prot="public">geo::Transform3T</innerclass>
    <innerclass refid="classgeo_1_1Triangle" prot="public">geo::Triangle</innerclass>
    <innerclass refid="structgeo_1_1TriangleI" prot="public">geo::TriangleI</innerclass>
    <innerclass refid="classgeo_1_1Vec2T" prot="public">geo::Vec2T</innerclass>
    <innerclass refid="classgeo_1_1Vec3T" prot="public">geo::Vec3T</innerclass>
    <innerclass refid="classgeo_1_1Vector3" prot="public">geo::Vector3</innerclass>
    <innerclass refid="classgeo_1_1visualization" prot="public">geo::visualization</innerclass>
    <innernamespace refid="namespacegeo_1_1io">geo::io</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacegeo_1a03efecab8b0ce438a0b647cf41a01721" prot="public" static="no">
        <type><ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::shared_ptr</ref>&lt; const <ref refid="classgeo_1_1Box" kindref="compound">Box</ref> &gt;</type>
        <definition>typedef std::shared_ptr&lt;const Box&gt; geo::BoxConstPtr</definition>
        <argsstring></argsstring>
        <name>BoxConstPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/datatypes.h" line="22" column="25" bodyfile="include/geolib/datatypes.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1aed29861f04c00f62bff5475430edfd0d" prot="public" static="no">
        <type><ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::shared_ptr</ref>&lt; <ref refid="classgeo_1_1Box" kindref="compound">Box</ref> &gt;</type>
        <definition>typedef std::shared_ptr&lt;Box&gt; geo::BoxPtr</definition>
        <argsstring></argsstring>
        <name>BoxPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/datatypes.h" line="21" column="25" bodyfile="include/geolib/datatypes.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1aa330f0608936b5100d8294210dfbe7ec" prot="public" static="no">
        <type><ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::shared_ptr</ref>&lt; const <ref refid="classgeo_1_1CompositeShape" kindref="compound">CompositeShape</ref> &gt;</type>
        <definition>typedef std::shared_ptr&lt;const CompositeShape&gt; geo::CompositeShapeConstPtr</definition>
        <argsstring></argsstring>
        <name>CompositeShapeConstPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/datatypes.h" line="18" column="25" bodyfile="include/geolib/datatypes.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a03e226d6b555df77c3636a7a6940e744" prot="public" static="no">
        <type><ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::shared_ptr</ref>&lt; <ref refid="classgeo_1_1CompositeShape" kindref="compound">CompositeShape</ref> &gt;</type>
        <definition>typedef std::shared_ptr&lt;CompositeShape&gt; geo::CompositeShapePtr</definition>
        <argsstring></argsstring>
        <name>CompositeShapePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/datatypes.h" line="17" column="25" bodyfile="include/geolib/datatypes.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a2559187a97c1d6d8e8de5d37b94ab9df" prot="public" static="no">
        <type><ref refid="classgeo_1_1LineSegment" kindref="compound">geo::LineSegment</ref></type>
        <definition>typedef geo::LineSegment geo::LS</definition>
        <argsstring></argsstring>
        <name>LS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Shape.cpp" line="55" column="26" bodyfile="src/Shape.cpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a082816d46a9c0c508267801071fbd884" prot="public" static="no">
        <type><ref refid="classgeo_1_1Mat2T" kindref="compound">Mat2T</ref>&lt; <ref refid="namespacegeo_1a1de8de5e9aa6283a4b7fe3293f8bb6fd" kindref="member">real</ref> &gt;</type>
        <definition>typedef Mat2T&lt;real&gt; geo::Mat2</definition>
        <argsstring></argsstring>
        <name>Mat2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="812" column="15" bodyfile="include/geolib/math_types.h" bodystart="812" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a8b417b3a359daafc58f00bc65e8a917e" prot="public" static="no">
        <type><ref refid="classgeo_1_1Mat2T" kindref="compound">Mat2T</ref>&lt; double &gt;</type>
        <definition>typedef Mat2T&lt;double&gt; geo::Mat2d</definition>
        <argsstring></argsstring>
        <name>Mat2d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="814" column="15" bodyfile="include/geolib/math_types.h" bodystart="814" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1ac81c3214d7175852a1ae133ee58fa857" prot="public" static="no">
        <type><ref refid="classgeo_1_1Mat2T" kindref="compound">Mat2T</ref>&lt; float &gt;</type>
        <definition>typedef Mat2T&lt;float&gt; geo::Mat2f</definition>
        <argsstring></argsstring>
        <name>Mat2f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="813" column="15" bodyfile="include/geolib/math_types.h" bodystart="813" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1af8530c69a9dfc19ff54b27b9fd0c705e" prot="public" static="no">
        <type><ref refid="classgeo_1_1Mat2T" kindref="compound">Mat2T</ref>&lt; int &gt;</type>
        <definition>typedef Mat2T&lt;int&gt; geo::Mat2i</definition>
        <argsstring></argsstring>
        <name>Mat2i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="815" column="15" bodyfile="include/geolib/math_types.h" bodystart="815" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1ab5ae57308e3bf0018b89e87714dbefde" prot="public" static="no">
        <type><ref refid="classgeo_1_1Mat2T" kindref="compound">Mat2T</ref>&lt; unsigned int &gt;</type>
        <definition>typedef Mat2T&lt;unsigned int&gt; geo::Mat2u</definition>
        <argsstring></argsstring>
        <name>Mat2u</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="816" column="15" bodyfile="include/geolib/math_types.h" bodystart="816" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a26d5362e86f22ec8ad374113a7728172" prot="public" static="no">
        <type><ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref>&lt; <ref refid="namespacegeo_1a1de8de5e9aa6283a4b7fe3293f8bb6fd" kindref="member">real</ref> &gt;</type>
        <definition>typedef Mat3T&lt;real&gt; geo::Mat3</definition>
        <argsstring></argsstring>
        <name>Mat3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="818" column="15" bodyfile="include/geolib/math_types.h" bodystart="818" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a2a7a55793b9f4e7fa5c5e9d3e8e1cf9a" prot="public" static="no">
        <type><ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref>&lt; double &gt;</type>
        <definition>typedef Mat3T&lt;double&gt; geo::Mat3d</definition>
        <argsstring></argsstring>
        <name>Mat3d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="820" column="15" bodyfile="include/geolib/math_types.h" bodystart="820" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a8e1f2b86494990e5fa62c5d9875a9326" prot="public" static="no">
        <type><ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref>&lt; float &gt;</type>
        <definition>typedef Mat3T&lt;float&gt; geo::Mat3f</definition>
        <argsstring></argsstring>
        <name>Mat3f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="819" column="15" bodyfile="include/geolib/math_types.h" bodystart="819" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1ab137c08800c0266827d943f7bab61677" prot="public" static="no">
        <type><ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref>&lt; int &gt;</type>
        <definition>typedef Mat3T&lt;int&gt; geo::Mat3i</definition>
        <argsstring></argsstring>
        <name>Mat3i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="821" column="15" bodyfile="include/geolib/math_types.h" bodystart="821" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a8adeb5a01be939ceb33d430741b07b20" prot="public" static="no">
        <type><ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref>&lt; unsigned int &gt;</type>
        <definition>typedef Mat3T&lt;unsigned int&gt; geo::Mat3u</definition>
        <argsstring></argsstring>
        <name>Mat3u</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="822" column="15" bodyfile="include/geolib/math_types.h" bodystart="822" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a84316f2530448c688a6f17fc5c727ad7" prot="public" static="no">
        <type><ref refid="namespacegeo_1a26d5362e86f22ec8ad374113a7728172" kindref="member">Mat3</ref></type>
        <definition>typedef Mat3 geo::Matrix3</definition>
        <argsstring></argsstring>
        <name>Matrix3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/datatypes.h" line="33" column="14" bodyfile="include/geolib/datatypes.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a45ebdbb521e42f7ab94a6043ac043b98" prot="public" static="no">
        <type><ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::shared_ptr</ref>&lt; const <ref refid="classgeo_1_1Octree" kindref="compound">Octree</ref> &gt;</type>
        <definition>typedef std::shared_ptr&lt;const Octree&gt; geo::OctreeConstPtr</definition>
        <argsstring></argsstring>
        <name>OctreeConstPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/datatypes.h" line="26" column="25" bodyfile="include/geolib/datatypes.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a23f5691856a085f32e08a5a330294e80" prot="public" static="no">
        <type><ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::shared_ptr</ref>&lt; <ref refid="classgeo_1_1Octree" kindref="compound">Octree</ref> &gt;</type>
        <definition>typedef std::shared_ptr&lt;Octree&gt; geo::OctreePtr</definition>
        <argsstring></argsstring>
        <name>OctreePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/datatypes.h" line="25" column="25" bodyfile="include/geolib/datatypes.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1af8cce83f04a86347a5ac2b722d2ae151" prot="public" static="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; void * &gt; &gt;</type>
        <definition>typedef std::vector&lt;std::vector&lt;void*&gt; &gt; geo::PointerMap</definition>
        <argsstring></argsstring>
        <name>PointerMap</name>
        <briefdescription>
<para>PointerMap maps pixels in a depth image to an identifier. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="19" column="21" bodyfile="include/geolib/sensors/DepthCamera.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a6c851aec5e98801c86d46d508de5c05d" prot="public" static="no">
        <type><ref refid="namespacegeo_1a119e539a3bb70c4a3b04ff56ea8181bd" kindref="member">Transform3</ref></type>
        <definition>typedef Transform3 geo::Pose3D</definition>
        <argsstring></argsstring>
        <name>Pose3D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/datatypes.h" line="31" column="20" bodyfile="include/geolib/datatypes.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a69dc5a665d9be978dac4ac9545977402" prot="public" static="no">
        <type><ref refid="classgeo_1_1QuaternionT" kindref="compound">QuaternionT</ref>&lt; <ref refid="namespacegeo_1a1de8de5e9aa6283a4b7fe3293f8bb6fd" kindref="member">real</ref> &gt;</type>
        <definition>typedef QuaternionT&lt;real&gt; geo::Quaternion</definition>
        <argsstring></argsstring>
        <name>Quaternion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/datatypes.h" line="34" column="21" bodyfile="include/geolib/datatypes.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a1de8de5e9aa6283a4b7fe3293f8bb6fd" prot="public" static="no">
        <type>double</type>
        <definition>typedef double geo::real</definition>
        <argsstring></argsstring>
        <name>real</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="9" column="16" bodyfile="include/geolib/math_types.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1aa7962fa7450fc503b1c737eae84e10df" prot="public" static="no">
        <type><ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::shared_ptr</ref>&lt; const <ref refid="classgeo_1_1Shape" kindref="compound">Shape</ref> &gt;</type>
        <definition>typedef std::shared_ptr&lt;const Shape&gt; geo::ShapeConstPtr</definition>
        <argsstring></argsstring>
        <name>ShapeConstPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/datatypes.h" line="14" column="25" bodyfile="include/geolib/datatypes.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1aef28655bad0d2414bb89fe6dba28bad1" prot="public" static="no">
        <type><ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::shared_ptr</ref>&lt; <ref refid="classgeo_1_1Shape" kindref="compound">Shape</ref> &gt;</type>
        <definition>typedef std::shared_ptr&lt;Shape&gt; geo::ShapePtr</definition>
        <argsstring></argsstring>
        <name>ShapePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/datatypes.h" line="13" column="25" bodyfile="include/geolib/datatypes.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1afa65c1a90ea1ea3a494964a39a4fc604" prot="public" static="no">
        <type>double</type>
        <definition>typedef double geo::Time</definition>
        <argsstring></argsstring>
        <name>Time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/datatypes.h" line="10" column="16" bodyfile="include/geolib/datatypes.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a74dff5d85b12e213259498690e560e50" prot="public" static="no">
        <type><ref refid="namespacegeo_1a119e539a3bb70c4a3b04ff56ea8181bd" kindref="member">Transform3</ref></type>
        <definition>typedef Transform3 geo::Transform</definition>
        <argsstring></argsstring>
        <name>Transform</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/datatypes.h" line="30" column="20" bodyfile="include/geolib/datatypes.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a1289d44a246f4b273f9d37208648754c" prot="public" static="no">
        <type><ref refid="classgeo_1_1Transform2T" kindref="compound">Transform2T</ref>&lt; <ref refid="namespacegeo_1a1de8de5e9aa6283a4b7fe3293f8bb6fd" kindref="member">real</ref> &gt;</type>
        <definition>typedef Transform2T&lt;real&gt; geo::Transform2</definition>
        <argsstring></argsstring>
        <name>Transform2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="824" column="21" bodyfile="include/geolib/math_types.h" bodystart="824" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a083533a58636d08134fc53ccaf6db920" prot="public" static="no">
        <type><ref refid="classgeo_1_1Transform2T" kindref="compound">Transform2T</ref>&lt; double &gt;</type>
        <definition>typedef Transform2T&lt;double&gt; geo::Transform2d</definition>
        <argsstring></argsstring>
        <name>Transform2d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="826" column="21" bodyfile="include/geolib/math_types.h" bodystart="826" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a4bc626b664bdf29e7a63f21479ccb75f" prot="public" static="no">
        <type><ref refid="classgeo_1_1Transform2T" kindref="compound">Transform2T</ref>&lt; float &gt;</type>
        <definition>typedef Transform2T&lt;float&gt; geo::Transform2f</definition>
        <argsstring></argsstring>
        <name>Transform2f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="825" column="21" bodyfile="include/geolib/math_types.h" bodystart="825" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a52fac93005e0ffde3f7596cda2455e3e" prot="public" static="no">
        <type><ref refid="classgeo_1_1Transform2T" kindref="compound">Transform2T</ref>&lt; int &gt;</type>
        <definition>typedef Transform2T&lt;int&gt; geo::Transform2i</definition>
        <argsstring></argsstring>
        <name>Transform2i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="827" column="21" bodyfile="include/geolib/math_types.h" bodystart="827" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a4900da383ee91d6bd04c650414752c69" prot="public" static="no">
        <type><ref refid="classgeo_1_1Transform2T" kindref="compound">Transform2T</ref>&lt; unsigned int &gt;</type>
        <definition>typedef Transform2T&lt;unsigned int&gt; geo::Transform2u</definition>
        <argsstring></argsstring>
        <name>Transform2u</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="828" column="21" bodyfile="include/geolib/math_types.h" bodystart="828" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a119e539a3bb70c4a3b04ff56ea8181bd" prot="public" static="no">
        <type><ref refid="classgeo_1_1Transform3T" kindref="compound">Transform3T</ref>&lt; <ref refid="namespacegeo_1a1de8de5e9aa6283a4b7fe3293f8bb6fd" kindref="member">real</ref> &gt;</type>
        <definition>typedef Transform3T&lt;real&gt; geo::Transform3</definition>
        <argsstring></argsstring>
        <name>Transform3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="830" column="21" bodyfile="include/geolib/math_types.h" bodystart="830" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a35f2927763603d69545191e1f0d32974" prot="public" static="no">
        <type><ref refid="classgeo_1_1Transform3T" kindref="compound">Transform3T</ref>&lt; double &gt;</type>
        <definition>typedef Transform3T&lt;double&gt; geo::Transform3d</definition>
        <argsstring></argsstring>
        <name>Transform3d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="832" column="21" bodyfile="include/geolib/math_types.h" bodystart="832" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1ace00583d170cc92f5c28e60d39c52639" prot="public" static="no">
        <type><ref refid="classgeo_1_1Transform3T" kindref="compound">Transform3T</ref>&lt; float &gt;</type>
        <definition>typedef Transform3T&lt;float&gt; geo::Transform3f</definition>
        <argsstring></argsstring>
        <name>Transform3f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="831" column="21" bodyfile="include/geolib/math_types.h" bodystart="831" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a63d5df67bc6408d1b5fc34ebba66fecd" prot="public" static="no">
        <type><ref refid="classgeo_1_1Transform3T" kindref="compound">Transform3T</ref>&lt; int &gt;</type>
        <definition>typedef Transform3T&lt;int&gt; geo::Transform3i</definition>
        <argsstring></argsstring>
        <name>Transform3i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="833" column="21" bodyfile="include/geolib/math_types.h" bodystart="833" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1aa9319dc1f3622634c7bdb064851a62c8" prot="public" static="no">
        <type><ref refid="classgeo_1_1Transform3T" kindref="compound">Transform3T</ref>&lt; unsigned int &gt;</type>
        <definition>typedef Transform3T&lt;unsigned int&gt; geo::Transform3u</definition>
        <argsstring></argsstring>
        <name>Transform3u</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="834" column="21" bodyfile="include/geolib/math_types.h" bodystart="834" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a9d15ee1a6c7bcfddc89355d283003933" prot="public" static="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; int &gt; &gt;</type>
        <definition>typedef std::vector&lt;std::vector&lt;int&gt; &gt; geo::TriangleMap</definition>
        <argsstring></argsstring>
        <name>TriangleMap</name>
        <briefdescription>
<para>TriangleMap maps pixels in a depth image to an index in the list of triangles in the mesh. Note: check with the corresponding pointermap to find which mesh is referred to! </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="25" column="21" bodyfile="include/geolib/sensors/DepthCamera.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a721c6e5b9502c5b4337a1c0b61668362" prot="public" static="no">
        <type><ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref>&lt; <ref refid="namespacegeo_1a1de8de5e9aa6283a4b7fe3293f8bb6fd" kindref="member">real</ref> &gt;</type>
        <definition>typedef Vec2T&lt;real&gt; geo::Vec2</definition>
        <argsstring></argsstring>
        <name>Vec2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="800" column="15" bodyfile="include/geolib/math_types.h" bodystart="800" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1ad89105f80a612c73d3d3a3f58dca3973" prot="public" static="no">
        <type><ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref>&lt; double &gt;</type>
        <definition>typedef Vec2T&lt;double&gt; geo::Vec2d</definition>
        <argsstring></argsstring>
        <name>Vec2d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="802" column="15" bodyfile="include/geolib/math_types.h" bodystart="802" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a6e33375ee8b102a357e789988596a312" prot="public" static="no">
        <type><ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref>&lt; float &gt;</type>
        <definition>typedef Vec2T&lt;float&gt; geo::Vec2f</definition>
        <argsstring></argsstring>
        <name>Vec2f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="801" column="15" bodyfile="include/geolib/math_types.h" bodystart="801" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a57e107163744ece0b13f534dba061436" prot="public" static="no">
        <type><ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref>&lt; int &gt;</type>
        <definition>typedef Vec2T&lt;int&gt; geo::Vec2i</definition>
        <argsstring></argsstring>
        <name>Vec2i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="803" column="15" bodyfile="include/geolib/math_types.h" bodystart="803" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1aff391e083d3950387cdd960591bc0387" prot="public" static="no">
        <type><ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref>&lt; unsigned int &gt;</type>
        <definition>typedef Vec2T&lt;unsigned int&gt; geo::Vec2u</definition>
        <argsstring></argsstring>
        <name>Vec2u</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="804" column="15" bodyfile="include/geolib/math_types.h" bodystart="804" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a7cee017284c7b2011db63a83abfac2c5" prot="public" static="no">
        <type><ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref>&lt; <ref refid="namespacegeo_1a1de8de5e9aa6283a4b7fe3293f8bb6fd" kindref="member">real</ref> &gt;</type>
        <definition>typedef Vec3T&lt;real&gt; geo::Vec3</definition>
        <argsstring></argsstring>
        <name>Vec3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="806" column="15" bodyfile="include/geolib/math_types.h" bodystart="806" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a618e8bafe44a5d9cc940f36c24db48de" prot="public" static="no">
        <type><ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref>&lt; double &gt;</type>
        <definition>typedef Vec3T&lt;double&gt; geo::Vec3d</definition>
        <argsstring></argsstring>
        <name>Vec3d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="808" column="15" bodyfile="include/geolib/math_types.h" bodystart="808" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1aaa747885326ade94c2300a1f87f71af6" prot="public" static="no">
        <type><ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref>&lt; float &gt;</type>
        <definition>typedef Vec3T&lt;float&gt; geo::Vec3f</definition>
        <argsstring></argsstring>
        <name>Vec3f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="807" column="15" bodyfile="include/geolib/math_types.h" bodystart="807" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a09416629cfa50fe59c4636797f9c410a" prot="public" static="no">
        <type><ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref>&lt; int &gt;</type>
        <definition>typedef Vec3T&lt;int&gt; geo::Vec3i</definition>
        <argsstring></argsstring>
        <name>Vec3i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="809" column="15" bodyfile="include/geolib/math_types.h" bodystart="809" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a3add1b46a4865832d4d182cb771670c5" prot="public" static="no">
        <type><ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref>&lt; unsigned int &gt;</type>
        <definition>typedef Vec3T&lt;unsigned int&gt; geo::Vec3u</definition>
        <argsstring></argsstring>
        <name>Vec3u</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="810" column="15" bodyfile="include/geolib/math_types.h" bodystart="810" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegeo_1a73b9f6d6bb88a43cc6551f9822004080" prot="public" static="no">
        <type><ref refid="namespacegeo_1a7cee017284c7b2011db63a83abfac2c5" kindref="member">Vec3</ref></type>
        <definition>typedef Vec3 geo::Vector3</definition>
        <argsstring></argsstring>
        <name>Vector3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/datatypes.h" line="32" column="14" bodyfile="include/geolib/datatypes.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacegeo_1a3b2e02cf81713b16c00fb589879ef785" prot="public" static="yes" mutable="no">
        <type><ref refid="namespacegeo_1af8cce83f04a86347a5ac2b722d2ae151" kindref="member">PointerMap</ref></type>
        <definition>PointerMap geo::EMPTY_POINTER_MAP</definition>
        <argsstring></argsstring>
        <name>EMPTY_POINTER_MAP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="32" column="19" bodyfile="include/geolib/sensors/DepthCamera.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegeo_1a3e160bff04e07860277f11e6f4c39d00" prot="public" static="yes" mutable="no">
        <type><ref refid="namespacegeo_1a9d15ee1a6c7bcfddc89355d283003933" kindref="member">TriangleMap</ref></type>
        <definition>TriangleMap geo::EMPTY_TRIANGLE_MAP</definition>
        <argsstring></argsstring>
        <name>EMPTY_TRIANGLE_MAP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="33" column="20" bodyfile="include/geolib/sensors/DepthCamera.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacegeo_1abea23ef1633c8f2e8c0f3fc1a5d9c4e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool geo::check_linesegment</definition>
        <argsstring>(const Vector3 &amp;p, const double radius2, const Vector3 &amp;a, const Vector3 &amp;ab)</argsstring>
        <name>check_linesegment</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>radius2</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>ab</declname>
        </param>
        <briefdescription>
<para>Check whether a point p is within distance radius of the line segment. The starting point is described by <bold>a</bold> and the vector from the starting point to the end point <bold>ab</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Point to check </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radius2</parametername>
</parameternamelist>
<parameterdescription>
<para>Radius squared to check with </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting point of linesegment </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ab</parametername>
</parameternamelist>
<parameterdescription>
<para>Linesegment from A to B </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Shape.cpp" line="21" column="6" bodyfile="src/Shape.cpp" bodystart="21" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1a8d9004d45b0ecfe83bbcd475319c382e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool geo::compute_2D_intersection</definition>
        <argsstring>(const geo::Triangle &amp;t, const geo::LS &amp;line)</argsstring>
        <name>compute_2D_intersection</name>
        <param>
          <type>const <ref refid="classgeo_1_1Triangle" kindref="compound">geo::Triangle</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegeo_1a2559187a97c1d6d8e8de5d37b94ab9df" kindref="member">geo::LS</ref> &amp;</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Check if a line that is in the same plane as the triangle does actually intersect with the triangle <emphasis><ulink url="https://members.loria.fr/SLazard/ARC-Visi3D/Pant-project/files/Line_Segment_Triangle.html">https://members.loria.fr/SLazard/ARC-Visi3D/Pant-project/files/Line_Segment_Triangle.html</ulink></emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgeo_1_1Triangle" kindref="compound">Triangle</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>line </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Intersection or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Shape.cpp" line="100" column="6" bodyfile="src/Shape.cpp" bodystart="100" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1a91908a364354e736f2701a214ec9ded6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const geo::DepthCamera &amp;cam_model, sensor_msgs::CameraInfo &amp;msg)</argsstring>
        <name>convert</name>
        <param>
          <type>const <ref refid="classgeo_1_1DepthCamera" kindref="compound">geo::DepthCamera</ref> &amp;</type>
          <declname>cam_model</declname>
        </param>
        <param>
          <type>sensor_msgs::CameraInfo &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Convert <ref refid="classgeo_1_1DepthCamera" kindref="compound">DepthCamera</ref> to CameraInfo message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cam_model</parametername>
</parameternamelist>
<parameterdescription>
<para>Depthcamera </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>CameraInfo message to fill </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ros/msg_conversions.cpp" line="24" column="6" bodyfile="src/ros/msg_conversions.cpp" bodystart="24" bodyend="78" declfile="include/geolib/ros/msg_conversions.h" declline="109" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1a17040f50ce2cf270cf054bbc71aa792d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const geo::Matrix3 &amp;m, tf2::Matrix3x3 &amp;tf)</argsstring>
        <name>convert</name>
        <param>
          <type>const <ref refid="namespacegeo_1a84316f2530448c688a6f17fc5c727ad7" kindref="member">geo::Matrix3</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>tf2::Matrix3x3 &amp;</type>
          <declname>tf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/tf2_conversions.h" line="23" column="13" bodyfile="include/geolib/ros/tf2_conversions.h" bodystart="23" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1ad5547fa90303b4bbdf2e32d1dca687d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const geo::Matrix3 &amp;m, tf::Matrix3x3 &amp;tf)</argsstring>
        <name>convert</name>
        <param>
          <type>const <ref refid="namespacegeo_1a84316f2530448c688a6f17fc5c727ad7" kindref="member">geo::Matrix3</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>tf::Matrix3x3 &amp;</type>
          <declname>tf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/tf_conversions.h" line="20" column="13" bodyfile="include/geolib/ros/tf_conversions.h" bodystart="20" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1abfec26dc530d83f0b9c7ff5d5ce142c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const geo::Matrix3 &amp;r, geometry_msgs::Quaternion &amp;msg)</argsstring>
        <name>convert</name>
        <param>
          <type>const <ref refid="namespacegeo_1a84316f2530448c688a6f17fc5c727ad7" kindref="member">geo::Matrix3</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>geometry_msgs::Quaternion &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>converting <ref refid="namespacegeo_1a84316f2530448c688a6f17fc5c727ad7" kindref="member">geo::Matrix3</ref> to geometry_msgs::Quaternion </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="namespacegeo_1a84316f2530448c688a6f17fc5c727ad7" kindref="member">geo::Matrix3</ref> as input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>filled geometry_msgs::Quaternion message as output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/msg_conversions.h" line="59" column="13" bodyfile="include/geolib/ros/msg_conversions.h" bodystart="59" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1a5553e7ea4ad33e70ee5ed560548f9094" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const geo::Mesh &amp;m, shape_msgs::Mesh &amp;msg)</argsstring>
        <name>convert</name>
        <param>
          <type>const <ref refid="classgeo_1_1Mesh" kindref="compound">geo::Mesh</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>shape_msgs::Mesh &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>converts a <ref refid="classgeo_1_1Mesh" kindref="compound">geo::Mesh</ref> to shape_msgs::Mesh Both use a very similar structure based on points and triangles. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgeo_1_1Mesh" kindref="compound">geo::Mesh</ref> as input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>filled shape_msgs::Mesh message as output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ros/msg_conversions.cpp" line="5" column="6" bodyfile="src/ros/msg_conversions.cpp" bodystart="5" bodyend="22" declfile="include/geolib/ros/msg_conversions.h" declline="102" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1a49980db1cd65031674c3e13514094266" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const geo::Quaternion &amp;q, geometry_msgs::Quaternion &amp;msg)</argsstring>
        <name>convert</name>
        <param>
          <type>const <ref refid="namespacegeo_1a69dc5a665d9be978dac4ac9545977402" kindref="member">geo::Quaternion</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>geometry_msgs::Quaternion &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>converting <ref refid="namespacegeo_1a69dc5a665d9be978dac4ac9545977402" kindref="member">geo::Quaternion</ref> to geometry_msgs::Quaternion </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>q</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="namespacegeo_1a69dc5a665d9be978dac4ac9545977402" kindref="member">geo::Quaternion</ref> as input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>filled geometery_msgs::Quaternion message as output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/msg_conversions.h" line="50" column="13" bodyfile="include/geolib/ros/msg_conversions.h" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1a6566cb16ca9538dd90a667c68826aaae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const geo::Quaternion &amp;q, tf2::Quaternion &amp;tf)</argsstring>
        <name>convert</name>
        <param>
          <type>const <ref refid="namespacegeo_1a69dc5a665d9be978dac4ac9545977402" kindref="member">geo::Quaternion</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>tf2::Quaternion &amp;</type>
          <declname>tf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/tf2_conversions.h" line="19" column="13" bodyfile="include/geolib/ros/tf2_conversions.h" bodystart="19" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1a292ffa665737e59c1f270e1004946d63" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const geo::Quaternion &amp;q, tf::Quaternion &amp;tf)</argsstring>
        <name>convert</name>
        <param>
          <type>const <ref refid="namespacegeo_1a69dc5a665d9be978dac4ac9545977402" kindref="member">geo::Quaternion</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>tf::Quaternion &amp;</type>
          <declname>tf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/tf_conversions.h" line="16" column="13" bodyfile="include/geolib/ros/tf_conversions.h" bodystart="16" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1a5d10a106f6f1e1d2f66c20604dfe35cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const geo::Transform &amp;t, geometry_msgs::Pose &amp;msg)</argsstring>
        <name>convert</name>
        <param>
          <type>const <ref refid="classgeo_1_1Transform" kindref="compound">geo::Transform</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>geometry_msgs::Pose &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>converting <ref refid="classgeo_1_1Transform" kindref="compound">geo::Transform</ref> to geometry_msgs::Pose </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgeo_1_1Transform" kindref="compound">geo::Transform</ref> as input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>filled geometry_msgs::Pose as output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/msg_conversions.h" line="70" column="13" bodyfile="include/geolib/ros/msg_conversions.h" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1a834e170b25a57490bc884979ee4e3e5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const geo::Transform &amp;t, geometry_msgs::Transform &amp;msg)</argsstring>
        <name>convert</name>
        <param>
          <type>const <ref refid="classgeo_1_1Transform" kindref="compound">geo::Transform</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>geometry_msgs::Transform &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>converting <ref refid="classgeo_1_1Transform" kindref="compound">geo::Transform</ref> to geometry_msgs::Transform </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgeo_1_1Transform" kindref="compound">geo::Transform</ref> as input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>filled geometry_msgs::Transform as output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/msg_conversions.h" line="80" column="13" bodyfile="include/geolib/ros/msg_conversions.h" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1af645b36b6d078485f71b67c84408d61a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const geo::Transform &amp;t, tf2::Transform &amp;tf)</argsstring>
        <name>convert</name>
        <param>
          <type>const <ref refid="classgeo_1_1Transform" kindref="compound">geo::Transform</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>tf2::Transform &amp;</type>
          <declname>tf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/tf2_conversions.h" line="27" column="13" bodyfile="include/geolib/ros/tf2_conversions.h" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1aec5750b847c904cdaf2eb2b902537867" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const geo::Transform &amp;t, tf::Transform &amp;tf)</argsstring>
        <name>convert</name>
        <param>
          <type>const <ref refid="classgeo_1_1Transform" kindref="compound">geo::Transform</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>tf::Transform &amp;</type>
          <declname>tf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/tf_conversions.h" line="24" column="13" bodyfile="include/geolib/ros/tf_conversions.h" bodystart="24" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1ab484254438a4f096c18bf9aa35b45e24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const geo::TriangleI &amp;t, shape_msgs::MeshTriangle &amp;msg)</argsstring>
        <name>convert</name>
        <param>
          <type>const <ref refid="structgeo_1_1TriangleI" kindref="compound">geo::TriangleI</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>shape_msgs::MeshTriangle &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>converting geo::TraingleI (Indices of a triangle in a vector of points) to shape_msgs::MeshTriangle </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structgeo_1_1TriangleI" kindref="compound">geo::TriangleI</ref> as input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>filled shape_msgs::MeshTriangle message as output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/msg_conversions.h" line="90" column="13" bodyfile="include/geolib/ros/msg_conversions.h" bodystart="90" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1a20342739cb15b8e215c92762c564f12e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const geo::Vector3 &amp;v, geometry_msgs::Point &amp;msg)</argsstring>
        <name>convert</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>geometry_msgs::Point &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>converting <ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref> to geometry_msgs::Point message </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref> as input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>filled geometery_msgs::Point message as output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/msg_conversions.h" line="23" column="13" bodyfile="include/geolib/ros/msg_conversions.h" bodystart="23" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1a0098d12b01d10651f0259e5150ba1c22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const geo::Vector3 &amp;v, geometry_msgs::Point32 &amp;msg)</argsstring>
        <name>convert</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>geometry_msgs::Point32 &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>converting <ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref> to geometry_msgs::Point32 message </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref> as input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>filled geometery_msgs::Point32 message as output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/msg_conversions.h" line="32" column="13" bodyfile="include/geolib/ros/msg_conversions.h" bodystart="32" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1ad11eec315759dc02f3d46935531cb835" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const geo::Vector3 &amp;v, geometry_msgs::Vector3 &amp;msg)</argsstring>
        <name>convert</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>geometry_msgs::Vector3 &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>converting <ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref> to geometry_msgs::Vector3 message </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref> as input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>filled geometery_msgs::Vector3 message as output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/msg_conversions.h" line="41" column="13" bodyfile="include/geolib/ros/msg_conversions.h" bodystart="41" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1a3f9ea418ff8b5f3bb9b5d3e3784e3b2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const geo::Vector3 &amp;v, tf2::Vector3 &amp;tf)</argsstring>
        <name>convert</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>tf2::Vector3 &amp;</type>
          <declname>tf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/tf2_conversions.h" line="15" column="13" bodyfile="include/geolib/ros/tf2_conversions.h" bodystart="15" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1ae361664ee98eeb4ef21d3e7bace3d2cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const geo::Vector3 &amp;v, tf::Vector3 &amp;tf)</argsstring>
        <name>convert</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>tf::Vector3 &amp;</type>
          <declname>tf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/tf_conversions.h" line="12" column="13" bodyfile="include/geolib/ros/tf_conversions.h" bodystart="12" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1a0a821a53603df5ac5f3f008c81f1430d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const geometry_msgs::Point &amp;msg, geo::Vector3 &amp;v)</argsstring>
        <name>convert</name>
        <param>
          <type>const geometry_msgs::Point &amp;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>converting geometry_msgs::Point to <ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>geometry_msgs::Point as input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref> as output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/msg_conversions.h" line="118" column="13" bodyfile="include/geolib/ros/msg_conversions.h" bodystart="118" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1a0404a89606a77b18ed2856e44181bb1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const geometry_msgs::Point32 &amp;msg, geo::Vector3 &amp;v)</argsstring>
        <name>convert</name>
        <param>
          <type>const geometry_msgs::Point32 &amp;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>converting geometry_msgs::Point32 to <ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>geometry_msgs::Point as input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref> as output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/msg_conversions.h" line="127" column="13" bodyfile="include/geolib/ros/msg_conversions.h" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1a6107126573792bd99dfc388cd75cf655" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const geometry_msgs::Pose &amp;msg, geo::Transform &amp;t)</argsstring>
        <name>convert</name>
        <param>
          <type>const geometry_msgs::Pose &amp;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="classgeo_1_1Transform" kindref="compound">geo::Transform</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>converting geometry_msgs::Pose to <ref refid="classgeo_1_1Transform" kindref="compound">geo::Transform</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>geometry_msgs::Pose as input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgeo_1_1Transform" kindref="compound">geo::Transform</ref> as output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/msg_conversions.h" line="165" column="13" bodyfile="include/geolib/ros/msg_conversions.h" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1aa5c6466280d80e943db9c6f527a298d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const geometry_msgs::Quaternion &amp;msg, geo::Matrix3 &amp;r)</argsstring>
        <name>convert</name>
        <param>
          <type>const geometry_msgs::Quaternion &amp;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacegeo_1a84316f2530448c688a6f17fc5c727ad7" kindref="member">geo::Matrix3</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>converting geometry_msgs::Quaternion to <ref refid="namespacegeo_1a84316f2530448c688a6f17fc5c727ad7" kindref="member">geo::Matrix3</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>geometry_msgs::Quaternion as input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="namespacegeo_1a84316f2530448c688a6f17fc5c727ad7" kindref="member">geo::Matrix3</ref> as output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/msg_conversions.h" line="154" column="13" bodyfile="include/geolib/ros/msg_conversions.h" bodystart="154" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1aa61c183660d17f8a2b30126bcbd6a523" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const geometry_msgs::Quaternion &amp;msg, geo::Quaternion &amp;q)</argsstring>
        <name>convert</name>
        <param>
          <type>const geometry_msgs::Quaternion &amp;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespacegeo_1a69dc5a665d9be978dac4ac9545977402" kindref="member">geo::Quaternion</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>converting geometry_msgs::Quaternion to <ref refid="namespacegeo_1a69dc5a665d9be978dac4ac9545977402" kindref="member">geo::Quaternion</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>geometry_msgs::Quaternion as input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>q</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="namespacegeo_1a69dc5a665d9be978dac4ac9545977402" kindref="member">geo::Quaternion</ref> as output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/msg_conversions.h" line="145" column="13" bodyfile="include/geolib/ros/msg_conversions.h" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1a4b91e44ec84c40111cbea07e95ff1da3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const geometry_msgs::Transform &amp;msg, geo::Transform &amp;t)</argsstring>
        <name>convert</name>
        <param>
          <type>const geometry_msgs::Transform &amp;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="classgeo_1_1Transform" kindref="compound">geo::Transform</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>converting geometry_msgs::Transform to <ref refid="classgeo_1_1Transform" kindref="compound">geo::Transform</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>geometry_msgs::Transform as input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgeo_1_1Transform" kindref="compound">geo::Transform</ref> as output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/msg_conversions.h" line="175" column="13" bodyfile="include/geolib/ros/msg_conversions.h" bodystart="175" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1a33463a7091ca1229f417734742df9199" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const geometry_msgs::Vector3 &amp;msg, geo::Vector3 &amp;v)</argsstring>
        <name>convert</name>
        <param>
          <type>const geometry_msgs::Vector3 &amp;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>converting geometry_msgs::Vector3 to <ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>geometry_msgs::Vector3 as input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref> as output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/msg_conversions.h" line="136" column="13" bodyfile="include/geolib/ros/msg_conversions.h" bodystart="136" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1a16a5ca18f00519fae0715960da97dc01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const tf2::Matrix3x3 &amp;tf, geo::Matrix3 &amp;m)</argsstring>
        <name>convert</name>
        <param>
          <type>const tf2::Matrix3x3 &amp;</type>
          <declname>tf</declname>
        </param>
        <param>
          <type><ref refid="namespacegeo_1a84316f2530448c688a6f17fc5c727ad7" kindref="member">geo::Matrix3</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/tf2_conversions.h" line="42" column="13" bodyfile="include/geolib/ros/tf2_conversions.h" bodystart="42" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1a2950e8747039c77fd26c902068e0d215" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const tf2::Quaternion &amp;tf, geo::Quaternion &amp;q)</argsstring>
        <name>convert</name>
        <param>
          <type>const tf2::Quaternion &amp;</type>
          <declname>tf</declname>
        </param>
        <param>
          <type><ref refid="namespacegeo_1a69dc5a665d9be978dac4ac9545977402" kindref="member">geo::Quaternion</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/tf2_conversions.h" line="38" column="13" bodyfile="include/geolib/ros/tf2_conversions.h" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1a8881c18fb7607951284df0ecfe7d67df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const tf2::Transform &amp;tf, geo::Transform &amp;t)</argsstring>
        <name>convert</name>
        <param>
          <type>const tf2::Transform &amp;</type>
          <declname>tf</declname>
        </param>
        <param>
          <type><ref refid="classgeo_1_1Transform" kindref="compound">geo::Transform</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/tf2_conversions.h" line="48" column="13" bodyfile="include/geolib/ros/tf2_conversions.h" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1a20a3f8da530865612523564480fadeed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const tf2::Vector3 &amp;tf, geo::Vector3 &amp;v)</argsstring>
        <name>convert</name>
        <param>
          <type>const tf2::Vector3 &amp;</type>
          <declname>tf</declname>
        </param>
        <param>
          <type><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/tf2_conversions.h" line="34" column="13" bodyfile="include/geolib/ros/tf2_conversions.h" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1afdfb60ab5ca85b5ab442b1f6bf282355" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const tf::Matrix3x3 &amp;tf, geo::Matrix3 &amp;m)</argsstring>
        <name>convert</name>
        <param>
          <type>const tf::Matrix3x3 &amp;</type>
          <declname>tf</declname>
        </param>
        <param>
          <type><ref refid="namespacegeo_1a84316f2530448c688a6f17fc5c727ad7" kindref="member">geo::Matrix3</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/tf_conversions.h" line="39" column="13" bodyfile="include/geolib/ros/tf_conversions.h" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1a0245659754b6faed98e86d5aa7207063" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const tf::Quaternion &amp;tf, geo::Quaternion &amp;q)</argsstring>
        <name>convert</name>
        <param>
          <type>const tf::Quaternion &amp;</type>
          <declname>tf</declname>
        </param>
        <param>
          <type><ref refid="namespacegeo_1a69dc5a665d9be978dac4ac9545977402" kindref="member">geo::Quaternion</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/tf_conversions.h" line="35" column="13" bodyfile="include/geolib/ros/tf_conversions.h" bodystart="35" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1a5bb10461f33f96cb36f14d5e648dcc7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const tf::Transform &amp;tf, geo::Transform &amp;t)</argsstring>
        <name>convert</name>
        <param>
          <type>const tf::Transform &amp;</type>
          <declname>tf</declname>
        </param>
        <param>
          <type><ref refid="classgeo_1_1Transform" kindref="compound">geo::Transform</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/tf_conversions.h" line="45" column="13" bodyfile="include/geolib/ros/tf_conversions.h" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1a3b7eb42e2bbae9571310b43115f9fe26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::convert</definition>
        <argsstring>(const tf::Vector3 &amp;tf, geo::Vector3 &amp;v)</argsstring>
        <name>convert</name>
        <param>
          <type>const tf::Vector3 &amp;</type>
          <declname>tf</declname>
        </param>
        <param>
          <type><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/ros/tf_conversions.h" line="31" column="13" bodyfile="include/geolib/ros/tf_conversions.h" bodystart="31" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1aee29adfc86c9965bbc34faa5a9613529" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void geo::createConvexPolygon</definition>
        <argsstring>(geo::Shape &amp;shape, const std::vector&lt; geo::Vec2 &gt; &amp;points, double height)</argsstring>
        <name>createConvexPolygon</name>
        <param>
          <type><ref refid="classgeo_1_1Shape" kindref="compound">geo::Shape</ref> &amp;</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="namespacegeo_1a721c6e5b9502c5b4337a1c0b61668362" kindref="member">geo::Vec2</ref> &gt; &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>double</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/shapes.cpp" line="53" column="6" bodyfile="src/shapes.cpp" bodystart="53" bodyend="88" declfile="include/geolib/shapes.h" declline="14" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1a725dac5437d9ca408c1599fa4e9e14bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void geo::createCylinder</definition>
        <argsstring>(geo::Shape &amp;shape, double radius, double height, unsigned int num_corners=20)</argsstring>
        <name>createCylinder</name>
        <param>
          <type><ref refid="classgeo_1_1Shape" kindref="compound">geo::Shape</ref> &amp;</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>double</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>double</type>
          <declname>height</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>num_corners</declname>
          <defval>20</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/shapes.cpp" line="13" column="6" bodyfile="src/shapes.cpp" bodystart="13" bodyend="49" declfile="include/geolib/shapes.h" declline="11" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1ab6752d25a6356f90943d4f4e62e9a44c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool geo::line_linesegment_intersection</definition>
        <argsstring>(const geo::LS &amp;l, const geo::LS &amp;ls, const geo::Vector3 &amp;outside)</argsstring>
        <name>line_linesegment_intersection</name>
        <param>
          <type>const <ref refid="namespacegeo_1a2559187a97c1d6d8e8de5d37b94ab9df" kindref="member">geo::LS</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegeo_1a2559187a97c1d6d8e8de5d37b94ab9df" kindref="member">geo::LS</ref> &amp;</type>
          <declname>ls</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref> &amp;</type>
          <declname>outside</declname>
        </param>
        <briefdescription>
<para>Check if linesegment does intersect with line <emphasis><ulink url="https://members.loria.fr/SLazard/ARC-Visi3D/Pant-project/files/Line_Segment_Triangle.html">https://members.loria.fr/SLazard/ARC-Visi3D/Pant-project/files/Line_Segment_Triangle.html</ulink></emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>line </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ls</parametername>
</parameternamelist>
<parameterdescription>
<para>linesegment </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outside</parametername>
</parameternamelist>
<parameterdescription>
<para>A point outside the plane which contains both the line and the linesegment </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Intersection or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Shape.cpp" line="80" column="6" bodyfile="src/Shape.cpp" bodystart="80" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1abb76f8e5f20a6887c30b6bdbc29cf6b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref> &amp;</type>
        <definition>std::ostream&amp; geo::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const Triangle &amp;t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1Triangle" kindref="compound">Triangle</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Triangle.cpp" line="20" column="1" bodyfile="src/Triangle.cpp" bodystart="20" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1a9a0dbf832181a41dcccf8d73d585dc9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double geo::side_product</definition>
        <argsstring>(const geo::LS &amp;p, const geo::LS &amp;q)</argsstring>
        <name>side_product</name>
        <param>
          <type>const <ref refid="namespacegeo_1a2559187a97c1d6d8e8de5d37b94ab9df" kindref="member">geo::LS</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegeo_1a2559187a97c1d6d8e8de5d37b94ab9df" kindref="member">geo::LS</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Determining the direction in which <emphasis><bold>q</bold> passes</emphasis> around <emphasis><bold>p</bold>.</emphasis> The direction is taken from looking from the base to tip of the vector <emphasis><bold>p</bold>.</emphasis> Zero means intersection Positive means <emphasis><bold>q</bold> passses</emphasis> clockwise around <emphasis><bold>p</bold>.</emphasis> Negative means <emphasis><bold>q</bold> passes</emphasis> counter clockwise around <emphasis><bold>p</bold>.</emphasis> <emphasis><ulink url="https://members.loria.fr/SLazard/ARC-Visi3D/Pant-project/files/Line_Segment_Triangle.html">https://members.loria.fr/SLazard/ARC-Visi3D/Pant-project/files/Line_Segment_Triangle.html</ulink></emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>First line </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>q</parametername>
</parameternamelist>
<parameterdescription>
<para>Second line </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>side value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Shape.cpp" line="68" column="8" bodyfile="src/Shape.cpp" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="namespacegeo_1a6c65e25c8f8ce392496e2cf2d30e2a10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double geo::triangleArea</definition>
        <argsstring>(const Vector3 &amp;p1, const Vector3 &amp;p2, const Vector3 &amp;p3)</argsstring>
        <name>triangleArea</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Triangle.cpp" line="5" column="8" bodyfile="src/Triangle.cpp" bodystart="5" bodyend="8" declfile="include/geolib/Triangle.h" declline="8" declcolumn="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/geolib/Box.h" line="6" column="13"/>
  </compounddef>
</doxygen>
