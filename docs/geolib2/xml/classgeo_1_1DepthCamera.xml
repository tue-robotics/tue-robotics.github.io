<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classgeo_1_1DepthCamera" kind="class" language="C++" prot="public">
    <compoundname>geo::DepthCamera</compoundname>
    <includes refid="DepthCamera_8h" local="no">DepthCamera.h</includes>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="classgeo_1_1DepthCamera_1a6e7742e4c48ebfe66f9decb60e19d9d9" prot="protected" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const double</type>
        <definition>constexpr const double geo::DepthCamera::near_clip_z_</definition>
        <argsstring></argsstring>
        <name>near_clip_z_</name>
        <initializer>= -0.1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="249" column="35" bodyfile="include/geolib/sensors/DepthCamera.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classgeo_1_1DepthCamera_1a36dca1f448c55c9089d6c6fdb70f6d59" prot="protected" static="no" mutable="no">
        <type>image_geometry::PinholeCameraModel</type>
        <definition>image_geometry::PinholeCameraModel geo::DepthCamera::cam_model_</definition>
        <argsstring></argsstring>
        <name>cam_model_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="251" column="40" bodyfile="include/geolib/sensors/DepthCamera.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1afcdf23a6b4400ee1ae9873de6b0218e4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double geo::DepthCamera::cx</definition>
        <argsstring>() const</argsstring>
        <name>cx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="225" column="19" bodyfile="include/geolib/sensors/DepthCamera.h" bodystart="225" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1a9486ff6de8443cebb5dffa985c2b916d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double geo::DepthCamera::cy</definition>
        <argsstring>() const</argsstring>
        <name>cy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="228" column="19" bodyfile="include/geolib/sensors/DepthCamera.h" bodystart="228" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1ad5ac9b8ccfb16050947082da190f9e00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>geo::DepthCamera::DepthCamera</definition>
        <argsstring>()</argsstring>
        <name>DepthCamera</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="163" column="5" bodyfile="src/sensors/DepthCamera.cpp" bodystart="26" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1a6e1649dce05321983624ba72674494a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>geo::DepthCamera::DepthCamera</definition>
        <argsstring>(const image_geometry::PinholeCameraModel &amp;cam_model)</argsstring>
        <name>DepthCamera</name>
        <param>
          <type>const image_geometry::PinholeCameraModel &amp;</type>
          <declname>cam_model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="167" column="5" bodyfile="src/sensors/DepthCamera.cpp" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1a51573264e5726d5c59f4e3443011b660" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>geo::DepthCamera::DepthCamera</definition>
        <argsstring>(const sensor_msgs::CameraInfo &amp;cam_info)</argsstring>
        <name>DepthCamera</name>
        <param>
          <type>const sensor_msgs::CameraInfo &amp;</type>
          <declname>cam_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="169" column="5" bodyfile="src/sensors/DepthCamera.cpp" bodystart="86" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1a111169cb14c2dcb6e9b4345095cd01ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>geo::DepthCamera::DepthCamera</definition>
        <argsstring>(uint width, uint height, double fx, double fy, double cx, double cy, double tx, double ty)</argsstring>
        <name>DepthCamera</name>
        <param>
          <type>uint</type>
          <declname>width</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>height</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="165" column="5" bodyfile="src/sensors/DepthCamera.cpp" bodystart="30" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1aca062c3ad59e9dd45080e6ceb7fc71fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double geo::DepthCamera::fx</definition>
        <argsstring>() const</argsstring>
        <name>fx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="219" column="19" bodyfile="include/geolib/sensors/DepthCamera.h" bodystart="219" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1a6dd5c2bfea1b997f4e5e559ec1c7c6af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double geo::DepthCamera::fy</definition>
        <argsstring>() const</argsstring>
        <name>fy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="222" column="19" bodyfile="include/geolib/sensors/DepthCamera.h" bodystart="222" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1a1652143ee87a50a7c2bfdc9a445905ad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double geo::DepthCamera::getFocalLengthX</definition>
        <argsstring>() const</argsstring>
        <name>getFocalLengthX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="220" column="19" bodyfile="include/geolib/sensors/DepthCamera.h" bodystart="220" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1aabe614036ce0ef5ead0a467282dd645e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double geo::DepthCamera::getFocalLengthY</definition>
        <argsstring>() const</argsstring>
        <name>getFocalLengthY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="223" column="19" bodyfile="include/geolib/sensors/DepthCamera.h" bodystart="223" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1a6ff7930643996accf07ab05bc96f03d3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double geo::DepthCamera::getOpticalCenterX</definition>
        <argsstring>() const</argsstring>
        <name>getOpticalCenterX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="226" column="19" bodyfile="include/geolib/sensors/DepthCamera.h" bodystart="226" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1ac04fd60eeb61209850b4e10371b84e59" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double geo::DepthCamera::getOpticalCenterY</definition>
        <argsstring>() const</argsstring>
        <name>getOpticalCenterY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="229" column="19" bodyfile="include/geolib/sensors/DepthCamera.h" bodystart="229" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1af87a9fe09b9f7ed99d0dd0fea2738138" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double geo::DepthCamera::getOpticalTranslationX</definition>
        <argsstring>() const</argsstring>
        <name>getOpticalTranslationX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="232" column="19" bodyfile="include/geolib/sensors/DepthCamera.h" bodystart="232" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1ae0779dc4c5537d72f8059ca1228ae5b8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double geo::DepthCamera::getOpticalTranslationY</definition>
        <argsstring>() const</argsstring>
        <name>getOpticalTranslationY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="235" column="19" bodyfile="include/geolib/sensors/DepthCamera.h" bodystart="235" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1a9631e5329e959d3a587327e3f68b8f29" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int geo::DepthCamera::height</definition>
        <argsstring>() const</argsstring>
        <name>height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="237" column="16" bodyfile="include/geolib/sensors/DepthCamera.h" bodystart="237" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1a391b3fea00e7405b2e2ce6e7a16ed361" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void geo::DepthCamera::initFromCamModel</definition>
        <argsstring>(const image_geometry::PinholeCameraModel &amp;cam_model)</argsstring>
        <name>initFromCamModel</name>
        <param>
          <type>const image_geometry::PinholeCameraModel &amp;</type>
          <declname>cam_model</declname>
        </param>
        <briefdescription>
<para>Set camera parameters from pinhole camera model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cam_model</parametername>
</parameternamelist>
<parameterdescription>
<para>pinhole camera model </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="177" column="10" bodyfile="src/sensors/DepthCamera.cpp" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1a6ca2086c0a6b64931562c287e3940464" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool geo::DepthCamera::initialized</definition>
        <argsstring>() const</argsstring>
        <name>initialized</name>
        <briefdescription>
<para>Indicates whether the camera parameters are set. Using the camera when not initialized is useless. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>initiliazed or not initialized </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="245" column="17" bodyfile="include/geolib/sensors/DepthCamera.h" bodystart="245" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1aa3f13467ed07c53e2a0b6fe033885aad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classgeo_1_1Vec3T" kindref="compound">geo::Vec3T</ref>&lt; T &gt;</type>
        <definition>geo::Vec3T&lt;T&gt; geo::DepthCamera::project2Dto3D</definition>
        <argsstring>(int x, int y) const</argsstring>
        <name>project2Dto3D</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert points in an image to points in 3D space <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>x index of the 2d point in the image </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>y index of the 2d point in the image </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: (semi) unit vector indicating the direction of the beam corresponding to the pixel. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="215" column="23" bodyfile="include/geolib/sensors/DepthCamera.h" bodystart="215" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1acbaade810232e7b9fecb48ccbde48e01" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double geo::DepthCamera::project2Dto3DX</definition>
        <argsstring>(int x) const</argsstring>
        <name>project2Dto3DX</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="204" column="19" bodyfile="include/geolib/sensors/DepthCamera.h" bodystart="204" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1aea2902cf09ee7482910ee44ec8f52ffd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double geo::DepthCamera::project2Dto3DY</definition>
        <argsstring>(int y) const</argsstring>
        <name>project2Dto3DY</name>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="206" column="19" bodyfile="include/geolib/sensors/DepthCamera.h" bodystart="206" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1aff827154757736ed6422fcb9427fbe6e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Tin</type>
            <defval>double</defval>
          </param>
          <param>
            <type>typename Tout</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>cv::Point_&lt; Tout &gt;</type>
        <definition>cv::Point_&lt;Tout&gt; geo::DepthCamera::project3Dto2D</definition>
        <argsstring>(const geo::Vec3T&lt; Tin &gt; &amp;p) const</argsstring>
        <name>project3Dto2D</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">geo::Vec3T</ref>&lt; Tin &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="200" column="23" bodyfile="include/geolib/sensors/DepthCamera.h" bodystart="200" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1a47220993f63a7aac9a6b4cc6dc3bb12c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structgeo_1_1RasterizeResult" kindref="compound">RasterizeResult</ref></type>
        <definition>RasterizeResult geo::DepthCamera::rasterize</definition>
        <argsstring>(const Shape &amp;shape, const Pose3D &amp;cam_pose, const Pose3D &amp;obj_pose, cv::Mat &amp;image, PointerMap &amp;pointer_map=EMPTY_POINTER_MAP, void *pointer=0, TriangleMap &amp;triangle_map=EMPTY_TRIANGLE_MAP) const</argsstring>
        <name>rasterize</name>
        <param>
          <type>const <ref refid="classgeo_1_1Shape" kindref="compound">Shape</ref> &amp;</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegeo_1a6c851aec5e98801c86d46d508de5c05d" kindref="member">Pose3D</ref> &amp;</type>
          <declname>cam_pose</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegeo_1a6c851aec5e98801c86d46d508de5c05d" kindref="member">Pose3D</ref> &amp;</type>
          <declname>obj_pose</declname>
        </param>
        <param>
          <type>cv::Mat &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type><ref refid="namespacegeo_1af8cce83f04a86347a5ac2b722d2ae151" kindref="member">PointerMap</ref> &amp;</type>
          <declname>pointer_map</declname>
          <defval><ref refid="namespacegeo_1a3b2e02cf81713b16c00fb589879ef785" kindref="member">EMPTY_POINTER_MAP</ref></defval>
        </param>
        <param>
          <type>void *</type>
          <declname>pointer</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="namespacegeo_1a9d15ee1a6c7bcfddc89355d283003933" kindref="member">TriangleMap</ref> &amp;</type>
          <declname>triangle_map</declname>
          <defval><ref refid="namespacegeo_1a3e160bff04e07860277f11e6f4c39d00" kindref="member">EMPTY_TRIANGLE_MAP</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="195" column="21" bodyfile="src/sensors/DepthCamera.cpp" bodystart="107" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1af83b871df7d27ba9210ba24ef3788fe6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structgeo_1_1RasterizeResult" kindref="compound">RasterizeResult</ref></type>
        <definition>RasterizeResult geo::DepthCamera::rasterize</definition>
        <argsstring>(const Shape &amp;shape, const Pose3D &amp;pose, cv::Mat &amp;image, PointerMap &amp;pointer_map=EMPTY_POINTER_MAP, void *pointer=0, TriangleMap &amp;triangle_map=EMPTY_TRIANGLE_MAP) const</argsstring>
        <name>rasterize</name>
        <param>
          <type>const <ref refid="classgeo_1_1Shape" kindref="compound">Shape</ref> &amp;</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegeo_1a6c851aec5e98801c86d46d508de5c05d" kindref="member">Pose3D</ref> &amp;</type>
          <declname>pose</declname>
        </param>
        <param>
          <type>cv::Mat &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type><ref refid="namespacegeo_1af8cce83f04a86347a5ac2b722d2ae151" kindref="member">PointerMap</ref> &amp;</type>
          <declname>pointer_map</declname>
          <defval><ref refid="namespacegeo_1a3b2e02cf81713b16c00fb589879ef785" kindref="member">EMPTY_POINTER_MAP</ref></defval>
        </param>
        <param>
          <type>void *</type>
          <declname>pointer</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="namespacegeo_1a9d15ee1a6c7bcfddc89355d283003933" kindref="member">TriangleMap</ref> &amp;</type>
          <declname>triangle_map</declname>
          <defval><ref refid="namespacegeo_1a3e160bff04e07860277f11e6f4c39d00" kindref="member">EMPTY_TRIANGLE_MAP</ref></defval>
        </param>
        <briefdescription>
<para>rasterize: render a 3D shape onto a 2D image </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>3D shape to be rendered </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pose</parametername>
</parameternamelist>
<parameterdescription>
<para>pose of the shape with respect to the camera </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>image to render the result to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pointer_map</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer map to store an identifier of the shape </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>identifier of the shape </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>triangle_map</parametername>
</parameternamelist>
<parameterdescription>
<para>triangle map to store the index of a triangle in the mesh </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="191" column="21" bodyfile="src/sensors/DepthCamera.cpp" bodystart="114" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1a5a8a7e876490537f2b12efe36efa1aa0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void geo::DepthCamera::render</definition>
        <argsstring>(const RenderOptions &amp;opt, RenderResult &amp;res) const</argsstring>
        <name>render</name>
        <param>
          <type>const <ref refid="classgeo_1_1RenderOptions" kindref="compound">RenderOptions</ref> &amp;</type>
          <declname>opt</declname>
        </param>
        <param>
          <type><ref refid="classgeo_1_1RenderResult" kindref="compound">RenderResult</ref> &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="179" column="10" bodyfile="src/sensors/DepthCamera.cpp" bodystart="129" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1a4e5499f03fac98139ea1a92cb551426e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double geo::DepthCamera::Tx</definition>
        <argsstring>() const</argsstring>
        <name>Tx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="231" column="19" bodyfile="include/geolib/sensors/DepthCamera.h" bodystart="231" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1a1bf2e9f5f569687b2208963172b0f2c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double geo::DepthCamera::Ty</definition>
        <argsstring>() const</argsstring>
        <name>Ty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="234" column="19" bodyfile="include/geolib/sensors/DepthCamera.h" bodystart="234" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1af55debd9dab29d9b8515e3117b8fe691" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int geo::DepthCamera::width</definition>
        <argsstring>() const</argsstring>
        <name>width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="239" column="16" bodyfile="include/geolib/sensors/DepthCamera.h" bodystart="239" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1a1047041a3e27e930da3cc3081849f4fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>geo::DepthCamera::~DepthCamera</definition>
        <argsstring>()</argsstring>
        <name>~DepthCamera</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="171" column="13" bodyfile="src/sensors/DepthCamera.cpp" bodystart="93" bodyend="94"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1a79a7186c8a86d851843bf86ad659a1df" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Tin</type>
            <defval>double</defval>
          </param>
          <param>
            <type>typename Tout</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void geo::DepthCamera::drawTriangle</definition>
        <argsstring>(const geo::Vec3T&lt; Tin &gt; &amp;p1, const geo::Vec3T&lt; Tin &gt; &amp;p2, const geo::Vec3T&lt; Tin &gt; &amp;p3, const RenderOptions &amp;opt, RenderResult &amp;res, uint i_triangle) const</argsstring>
        <name>drawTriangle</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">geo::Vec3T</ref>&lt; Tin &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">geo::Vec3T</ref>&lt; Tin &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">geo::Vec3T</ref>&lt; Tin &gt; &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1RenderOptions" kindref="compound">RenderOptions</ref> &amp;</type>
          <declname>opt</declname>
        </param>
        <param>
          <type><ref refid="classgeo_1_1RenderResult" kindref="compound">RenderResult</ref> &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>i_triangle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="254" column="10" bodyfile="src/sensors/DepthCamera.cpp" bodystart="254" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1afe28e8da0a9c43c1c1392193c9dfd361" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void geo::DepthCamera::drawTriangle2D</definition>
        <argsstring>(const geo::Vec3T&lt; T &gt; &amp;p1, const geo::Vec3T&lt; T &gt; &amp;p2, const geo::Vec3T&lt; T &gt; &amp;p3, const RenderOptions &amp;opt, RenderResult &amp;res, uint i_triangle) const</argsstring>
        <name>drawTriangle2D</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">geo::Vec3T</ref>&lt; T &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">geo::Vec3T</ref>&lt; T &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">geo::Vec3T</ref>&lt; T &gt; &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1RenderOptions" kindref="compound">RenderOptions</ref> &amp;</type>
          <declname>opt</declname>
        </param>
        <param>
          <type><ref refid="classgeo_1_1RenderResult" kindref="compound">RenderResult</ref> &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>i_triangle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="258" column="10" bodyfile="src/sensors/DepthCamera.cpp" bodystart="269" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1a0d878137387de7f95f78a1d8e9f5ef2f" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void geo::DepthCamera::drawTrianglePart</definition>
        <argsstring>(int y_start, int y_end, float x_start, float x_start_delta, float x_end, float x_end_delta, float d_start, float d_start_delta, float d_end, float d_end_delta, const RenderOptions &amp;opt, RenderResult &amp;res, uint i_triangle) const</argsstring>
        <name>drawTrianglePart</name>
        <param>
          <type>int</type>
          <declname>y_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y_end</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x_start</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x_start_delta</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x_end</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x_end_delta</declname>
        </param>
        <param>
          <type>float</type>
          <declname>d_start</declname>
        </param>
        <param>
          <type>float</type>
          <declname>d_start_delta</declname>
        </param>
        <param>
          <type>float</type>
          <declname>d_end</declname>
        </param>
        <param>
          <type>float</type>
          <declname>d_end_delta</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1RenderOptions" kindref="compound">RenderOptions</ref> &amp;</type>
          <declname>opt</declname>
        </param>
        <param>
          <type><ref refid="classgeo_1_1RenderResult" kindref="compound">RenderResult</ref> &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>i_triangle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="261" column="10" bodyfile="src/sensors/DepthCamera.cpp" bodystart="322" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1DepthCamera_1aba7db527bfe4c628e475290cafdc432e" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void geo::DepthCamera::sort</definition>
        <argsstring>(const geo::Vec3T&lt; T &gt; *&amp;p_min, const geo::Vec3T&lt; T &gt; *&amp;p_mid, const geo::Vec3T&lt; T &gt; *&amp;p_max, uchar dim) const</argsstring>
        <name>sort</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">geo::Vec3T</ref>&lt; T &gt; *&amp;</type>
          <declname>p_min</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">geo::Vec3T</ref>&lt; T &gt; *&amp;</type>
          <declname>p_mid</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">geo::Vec3T</ref>&lt; T &gt; *&amp;</type>
          <declname>p_max</declname>
        </param>
        <param>
          <type>uchar</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/sensors/DepthCamera.h" line="267" column="10" bodyfile="src/sensors/DepthCamera.cpp" bodystart="368" bodyend="378"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Model of a depth camera which may be used to either convert points in an image to points in 3D space simulate a depth camera and render shapes in the image</para>
<para>Frame conventions: the frame of the camera is defined with the z-axis pointing into the camera, the x-axis matches the x -axis of the image, and the y-axis matches the negative y-axis of the image. </para>
    </detaileddescription>
    <location file="include/geolib/sensors/DepthCamera.h" line="159" column="18" bodyfile="include/geolib/sensors/DepthCamera.h" bodystart="159" bodyend="269"/>
    <listofallmembers>
      <member refid="classgeo_1_1DepthCamera_1a36dca1f448c55c9089d6c6fdb70f6d59" prot="protected" virt="non-virtual"><scope>geo::DepthCamera</scope><name>cam_model_</name></member>
      <member refid="classgeo_1_1DepthCamera_1afcdf23a6b4400ee1ae9873de6b0218e4" prot="public" virt="non-virtual"><scope>geo::DepthCamera</scope><name>cx</name></member>
      <member refid="classgeo_1_1DepthCamera_1a9486ff6de8443cebb5dffa985c2b916d" prot="public" virt="non-virtual"><scope>geo::DepthCamera</scope><name>cy</name></member>
      <member refid="classgeo_1_1DepthCamera_1ad5ac9b8ccfb16050947082da190f9e00" prot="public" virt="non-virtual"><scope>geo::DepthCamera</scope><name>DepthCamera</name></member>
      <member refid="classgeo_1_1DepthCamera_1a111169cb14c2dcb6e9b4345095cd01ef" prot="public" virt="non-virtual"><scope>geo::DepthCamera</scope><name>DepthCamera</name></member>
      <member refid="classgeo_1_1DepthCamera_1a6e1649dce05321983624ba72674494a9" prot="public" virt="non-virtual"><scope>geo::DepthCamera</scope><name>DepthCamera</name></member>
      <member refid="classgeo_1_1DepthCamera_1a51573264e5726d5c59f4e3443011b660" prot="public" virt="non-virtual"><scope>geo::DepthCamera</scope><name>DepthCamera</name></member>
      <member refid="classgeo_1_1DepthCamera_1a79a7186c8a86d851843bf86ad659a1df" prot="protected" virt="non-virtual"><scope>geo::DepthCamera</scope><name>drawTriangle</name></member>
      <member refid="classgeo_1_1DepthCamera_1afe28e8da0a9c43c1c1392193c9dfd361" prot="protected" virt="non-virtual"><scope>geo::DepthCamera</scope><name>drawTriangle2D</name></member>
      <member refid="classgeo_1_1DepthCamera_1a0d878137387de7f95f78a1d8e9f5ef2f" prot="protected" virt="non-virtual"><scope>geo::DepthCamera</scope><name>drawTrianglePart</name></member>
      <member refid="classgeo_1_1DepthCamera_1aca062c3ad59e9dd45080e6ceb7fc71fa" prot="public" virt="non-virtual"><scope>geo::DepthCamera</scope><name>fx</name></member>
      <member refid="classgeo_1_1DepthCamera_1a6dd5c2bfea1b997f4e5e559ec1c7c6af" prot="public" virt="non-virtual"><scope>geo::DepthCamera</scope><name>fy</name></member>
      <member refid="classgeo_1_1DepthCamera_1a1652143ee87a50a7c2bfdc9a445905ad" prot="public" virt="non-virtual"><scope>geo::DepthCamera</scope><name>getFocalLengthX</name></member>
      <member refid="classgeo_1_1DepthCamera_1aabe614036ce0ef5ead0a467282dd645e" prot="public" virt="non-virtual"><scope>geo::DepthCamera</scope><name>getFocalLengthY</name></member>
      <member refid="classgeo_1_1DepthCamera_1a6ff7930643996accf07ab05bc96f03d3" prot="public" virt="non-virtual"><scope>geo::DepthCamera</scope><name>getOpticalCenterX</name></member>
      <member refid="classgeo_1_1DepthCamera_1ac04fd60eeb61209850b4e10371b84e59" prot="public" virt="non-virtual"><scope>geo::DepthCamera</scope><name>getOpticalCenterY</name></member>
      <member refid="classgeo_1_1DepthCamera_1af87a9fe09b9f7ed99d0dd0fea2738138" prot="public" virt="non-virtual"><scope>geo::DepthCamera</scope><name>getOpticalTranslationX</name></member>
      <member refid="classgeo_1_1DepthCamera_1ae0779dc4c5537d72f8059ca1228ae5b8" prot="public" virt="non-virtual"><scope>geo::DepthCamera</scope><name>getOpticalTranslationY</name></member>
      <member refid="classgeo_1_1DepthCamera_1a9631e5329e959d3a587327e3f68b8f29" prot="public" virt="non-virtual"><scope>geo::DepthCamera</scope><name>height</name></member>
      <member refid="classgeo_1_1DepthCamera_1a391b3fea00e7405b2e2ce6e7a16ed361" prot="public" virt="non-virtual"><scope>geo::DepthCamera</scope><name>initFromCamModel</name></member>
      <member refid="classgeo_1_1DepthCamera_1a6ca2086c0a6b64931562c287e3940464" prot="public" virt="non-virtual"><scope>geo::DepthCamera</scope><name>initialized</name></member>
      <member refid="classgeo_1_1DepthCamera_1a6e7742e4c48ebfe66f9decb60e19d9d9" prot="protected" virt="non-virtual"><scope>geo::DepthCamera</scope><name>near_clip_z_</name></member>
      <member refid="classgeo_1_1DepthCamera_1aa3f13467ed07c53e2a0b6fe033885aad" prot="public" virt="non-virtual"><scope>geo::DepthCamera</scope><name>project2Dto3D</name></member>
      <member refid="classgeo_1_1DepthCamera_1acbaade810232e7b9fecb48ccbde48e01" prot="public" virt="non-virtual"><scope>geo::DepthCamera</scope><name>project2Dto3DX</name></member>
      <member refid="classgeo_1_1DepthCamera_1aea2902cf09ee7482910ee44ec8f52ffd" prot="public" virt="non-virtual"><scope>geo::DepthCamera</scope><name>project2Dto3DY</name></member>
      <member refid="classgeo_1_1DepthCamera_1aff827154757736ed6422fcb9427fbe6e" prot="public" virt="non-virtual"><scope>geo::DepthCamera</scope><name>project3Dto2D</name></member>
      <member refid="classgeo_1_1DepthCamera_1af83b871df7d27ba9210ba24ef3788fe6" prot="public" virt="non-virtual"><scope>geo::DepthCamera</scope><name>rasterize</name></member>
      <member refid="classgeo_1_1DepthCamera_1a47220993f63a7aac9a6b4cc6dc3bb12c" prot="public" virt="non-virtual"><scope>geo::DepthCamera</scope><name>rasterize</name></member>
      <member refid="classgeo_1_1DepthCamera_1a5a8a7e876490537f2b12efe36efa1aa0" prot="public" virt="non-virtual"><scope>geo::DepthCamera</scope><name>render</name></member>
      <member refid="classgeo_1_1DepthCamera_1aba7db527bfe4c628e475290cafdc432e" prot="protected" virt="non-virtual"><scope>geo::DepthCamera</scope><name>sort</name></member>
      <member refid="classgeo_1_1DepthCamera_1a4e5499f03fac98139ea1a92cb551426e" prot="public" virt="non-virtual"><scope>geo::DepthCamera</scope><name>Tx</name></member>
      <member refid="classgeo_1_1DepthCamera_1a1bf2e9f5f569687b2208963172b0f2c8" prot="public" virt="non-virtual"><scope>geo::DepthCamera</scope><name>Ty</name></member>
      <member refid="classgeo_1_1DepthCamera_1af55debd9dab29d9b8515e3117b8fe691" prot="public" virt="non-virtual"><scope>geo::DepthCamera</scope><name>width</name></member>
      <member refid="classgeo_1_1DepthCamera_1a1047041a3e27e930da3cc3081849f4fc" prot="public" virt="virtual"><scope>geo::DepthCamera</scope><name>~DepthCamera</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
