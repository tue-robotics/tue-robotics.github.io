<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classgeo_1_1Vec3T" kind="class" language="C++" prot="public">
    <compoundname>geo::Vec3T</compoundname>
    <includes refid="math__types_8h" local="no">math_types.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classgeo_1_1Vec3T_1a4853fb5e4d5b23f5c2de6e7b8f3c3a0d" prot="public" static="no" mutable="no">
        <type>union geo::Vec3T::@4</type>
        <definition>union geo::Vec3T::@4 geo::Vec3T&lt; T &gt;::@5</definition>
        <argsstring></argsstring>
        <name>@5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="219" column="5"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Vec3T_1ae2583dc6737de482f6b05fcd8d4cd08a" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T geo::Vec3T&lt; T &gt;::m[3]</definition>
        <argsstring>[3]</argsstring>
        <name>m</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="218" column="11" bodyfile="include/geolib/math_types.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Vec3T_1a22f80f7d89383e029e8fc1a89152f3c5" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T geo::Vec3T&lt; T &gt;::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="217" column="17" bodyfile="include/geolib/math_types.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Vec3T_1a7ba629c68c0f8ca2cbaf1b7175c02c12" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T geo::Vec3T&lt; T &gt;::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="217" column="19" bodyfile="include/geolib/math_types.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Vec3T_1a3a763ba05e94643299935eb686d1674e" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T geo::Vec3T&lt; T &gt;::z</definition>
        <argsstring></argsstring>
        <name>z</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="217" column="21" bodyfile="include/geolib/math_types.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgeo_1_1Vec3T_1a86171919bc7c7e02a7828493c3688cb6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref></type>
        <definition>Vec3T geo::Vec3T&lt; T &gt;::cross</definition>
        <argsstring>(const Vec3T &amp;v) const</argsstring>
        <name>cross</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns cross product </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="159" column="11" bodyfile="include/geolib/math_types.h" bodystart="159" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1aa960f045863326cad17d555e216d0859" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T geo::Vec3T&lt; T &gt;::dot</definition>
        <argsstring>(const Vec3T &amp;v) const</argsstring>
        <name>dot</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns dot product </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="156" column="7" bodyfile="include/geolib/math_types.h" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1ae24202328506ad6b740e3693366de380" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T geo::Vec3T&lt; T &gt;::getX</definition>
        <argsstring>() const</argsstring>
        <name>getX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="198" column="7" bodyfile="include/geolib/math_types.h" bodystart="198" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1a6b5510e6509d84cb9cf88bccd008913e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T geo::Vec3T&lt; T &gt;::getY</definition>
        <argsstring>() const</argsstring>
        <name>getY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="199" column="7" bodyfile="include/geolib/math_types.h" bodystart="199" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1a25a9ab67fadad99a6b8db892f76e49be" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T geo::Vec3T&lt; T &gt;::getZ</definition>
        <argsstring>() const</argsstring>
        <name>getZ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="200" column="7" bodyfile="include/geolib/math_types.h" bodystart="200" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1a61d6526243b5c4e7d1600e430f633311" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T geo::Vec3T&lt; T &gt;::length</definition>
        <argsstring>() const</argsstring>
        <name>length</name>
        <briefdescription>
<para>Returns the length of the vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="177" column="7" bodyfile="include/geolib/math_types.h" bodystart="177" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1a671481061d414d003ddaa5e13c0a15f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T geo::Vec3T&lt; T &gt;::length2</definition>
        <argsstring>() const</argsstring>
        <name>length2</name>
        <briefdescription>
<para>Returns the squared length of the vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="180" column="7" bodyfile="include/geolib/math_types.h" bodystart="180" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1ab796a556b221ce2933a088ce1c3f379c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::Vec3T&lt; T &gt;::normalize</definition>
        <argsstring>()</argsstring>
        <name>normalize</name>
        <briefdescription>
<para>Normalizes the vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="186" column="10" bodyfile="include/geolib/math_types.h" bodystart="186" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1a2e489229d39406af34b4cec7c5e2eb19" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref></type>
        <definition>Vec3T geo::Vec3T&lt; T &gt;::normalized</definition>
        <argsstring>() const</argsstring>
        <name>normalized</name>
        <briefdescription>
<para>Returns the normalized version of the vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="183" column="11" bodyfile="include/geolib/math_types.h" bodystart="183" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1a8f0a93a8bc642b323cd8dbdf38f29c0e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool geo::Vec3T&lt; T &gt;::operator!=</definition>
        <argsstring>(const Vec3T &amp;v) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="151" column="10" bodyfile="include/geolib/math_types.h" bodystart="151" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1a07dda2270e7c32a9e5d6f6317e1cdf0c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref></type>
        <definition>Vec3T geo::Vec3T&lt; T &gt;::operator*</definition>
        <argsstring>(T s) const</argsstring>
        <name>operator*</name>
        <param>
          <type>T</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>multiplies vector with a scalar </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="168" column="11" bodyfile="include/geolib/math_types.h" bodystart="168" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1a7b40b07f1de082c38deb98d64e15c95b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref> &amp;</type>
        <definition>Vec3T&amp; geo::Vec3T&lt; T &gt;::operator*=</definition>
        <argsstring>(const Vec3T &amp;v)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="192" column="11" bodyfile="include/geolib/math_types.h" bodystart="192" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1afe2b7086741fab3828e3989922d9d14a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref> &amp;</type>
        <definition>Vec3T&amp; geo::Vec3T&lt; T &gt;::operator*=</definition>
        <argsstring>(T s)</argsstring>
        <name>operator*=</name>
        <param>
          <type>T</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="195" column="11" bodyfile="include/geolib/math_types.h" bodystart="195" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1a4cf78e241cf22abf054e8dc79cfe36ed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref></type>
        <definition>Vec3T geo::Vec3T&lt; T &gt;::operator+</definition>
        <argsstring>(const Vec3T &amp;v) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns addition with v </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="162" column="11" bodyfile="include/geolib/math_types.h" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1a82c536e3a515f542079fe3c6bc01638e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref> &amp;</type>
        <definition>Vec3T&amp; geo::Vec3T&lt; T &gt;::operator+=</definition>
        <argsstring>(const Vec3T &amp;v)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="190" column="11" bodyfile="include/geolib/math_types.h" bodystart="190" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1a33629694a5130666bf60152bfe9cd9f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref></type>
        <definition>Vec3T geo::Vec3T&lt; T &gt;::operator-</definition>
        <argsstring>(const Vec3T &amp;v) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns this minus v </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="165" column="11" bodyfile="include/geolib/math_types.h" bodystart="165" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1a8b5f97e5a0c63dd798dc746a214fa3d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref> &amp;</type>
        <definition>Vec3T&amp; geo::Vec3T&lt; T &gt;::operator-=</definition>
        <argsstring>(const Vec3T &amp;v)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="191" column="11" bodyfile="include/geolib/math_types.h" bodystart="191" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1af7bc42131cdc040f858325555516993d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref></type>
        <definition>Vec3T geo::Vec3T&lt; T &gt;::operator/</definition>
        <argsstring>(T s) const</argsstring>
        <name>operator/</name>
        <param>
          <type>T</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>divides vector by scalar </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="171" column="11" bodyfile="include/geolib/math_types.h" bodystart="171" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1a1137f0808c8bca55862b00ab3f2088f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref> &amp;</type>
        <definition>Vec3T&amp; geo::Vec3T&lt; T &gt;::operator/=</definition>
        <argsstring>(const Vec3T &amp;v)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="193" column="11" bodyfile="include/geolib/math_types.h" bodystart="193" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1a663929fc70034ddaeb7e5e7527e1b415" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref> &amp;</type>
        <definition>Vec3T&amp; geo::Vec3T&lt; T &gt;::operator/=</definition>
        <argsstring>(T s)</argsstring>
        <name>operator/=</name>
        <param>
          <type>T</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="196" column="11" bodyfile="include/geolib/math_types.h" bodystart="196" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1a608579d62b7a123ed43116903a402a62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref> &amp;</type>
        <definition>Vec3T&amp; geo::Vec3T&lt; T &gt;::operator=</definition>
        <argsstring>(const Vec3T &amp;v)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="132" column="11" bodyfile="include/geolib/math_types.h" bodystart="132" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1a84ec6506ed5c71f1d0464f61ddaf2f68" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool geo::Vec3T&lt; T &gt;::operator==</definition>
        <argsstring>(const Vec3T &amp;v) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="147" column="10" bodyfile="include/geolib/math_types.h" bodystart="147" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1aad0401adf290a06f31f1799037a9e327" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; geo::Vec3T&lt; T &gt;::operator[]</definition>
        <argsstring>(const uint i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const uint</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="143" column="7" bodyfile="include/geolib/math_types.h" bodystart="143" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1a79d31d3fa3cf5ac33828ec8d9c07c5f8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; geo::Vec3T&lt; T &gt;::operator[]</definition>
        <argsstring>(const uint i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>const uint</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="145" column="13" bodyfile="include/geolib/math_types.h" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1ac28c3edafe28c201cb4a81e943ffe0d6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref>&lt; T &gt;</type>
        <definition>Vec2T&lt;T&gt; geo::Vec3T&lt; T &gt;::projectTo2d</definition>
        <argsstring>() const</argsstring>
        <name>projectTo2d</name>
        <briefdescription>
<para>Drop the displacement of the 3rd coordinate. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Vector in 2D </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="206" column="11" bodyfile="include/geolib/math_types.h" bodystart="206" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1a0eb9987bd2dfeb2a82feec160ade5115" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>geo::Vec3T&lt; T &gt;::Vec3T</definition>
        <argsstring>()</argsstring>
        <name>Vec3T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="126" column="5" bodyfile="include/geolib/math_types.h" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1a37fbcc4060a8546a8479790b5e6275ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>geo::Vec3T&lt; T &gt;::Vec3T</definition>
        <argsstring>(const T *values)</argsstring>
        <name>Vec3T</name>
        <param>
          <type>const T *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="130" column="5" bodyfile="include/geolib/math_types.h" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1ad16fed5be928799e871fb35e27471b26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>geo::Vec3T&lt; T &gt;::Vec3T</definition>
        <argsstring>(const Vec3T &amp;v)=default</argsstring>
        <name>Vec3T</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="127" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1aeadb5d8b34f62e6bdc6a3d3921e3596d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>geo::Vec3T&lt; T &gt;::Vec3T</definition>
        <argsstring>(T value)</argsstring>
        <name>Vec3T</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="129" column="5" bodyfile="include/geolib/math_types.h" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1abc95cf3e670f6bfd13050d9b36381d0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>geo::Vec3T&lt; T &gt;::Vec3T</definition>
        <argsstring>(T x_, T y_, T z_)</argsstring>
        <name>Vec3T</name>
        <param>
          <type>T</type>
          <declname>x_</declname>
        </param>
        <param>
          <type>T</type>
          <declname>y_</declname>
        </param>
        <param>
          <type>T</type>
          <declname>z_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="128" column="5" bodyfile="include/geolib/math_types.h" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec3T_1ac8867daf61163b7ad6c87d49ffcf5795" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>geo::Vec3T&lt; T &gt;::~Vec3T</definition>
        <argsstring>()</argsstring>
        <name>~Vec3T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="141" column="5" bodyfile="include/geolib/math_types.h" bodystart="141" bodyend="141"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classgeo_1_1Vec3T_1a4e511831056fb45357687e9066bf1a9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref></type>
        <definition>Vec3T operator*</definition>
        <argsstring>(T s, const Vec3T &amp;v)</argsstring>
        <name>operator*</name>
        <param>
          <type>T</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>multiplies vector with a scalar </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="174" column="18" bodyfile="include/geolib/math_types.h" bodystart="174" bodyend="174"/>
      </memberdef>
      <memberdef kind="friend" id="classgeo_1_1Vec3T_1af33abc8653677bda2ce02138bb1df258" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref></type>
        <definition>Vec3T operator-</definition>
        <argsstring>(const Vec3T &amp;v)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="188" column="18" bodyfile="include/geolib/math_types.h" bodystart="188" bodyend="188"/>
      </memberdef>
      <memberdef kind="friend" id="classgeo_1_1Vec3T_1a338ab8e9984a73d5833e3c0a80d7ca69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref> &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const Vec3T &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="211" column="12" bodyfile="include/geolib/math_types.h" bodystart="211" bodyend="214"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/geolib/math_types.h" line="13" column="1" bodyfile="include/geolib/math_types.h" bodystart="13" bodyend="-1"/>
    <listofallmembers>
      <member refid="classgeo_1_1Vec3T_1a86171919bc7c7e02a7828493c3688cb6" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>cross</name></member>
      <member refid="classgeo_1_1Vec3T_1aa960f045863326cad17d555e216d0859" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>dot</name></member>
      <member refid="classgeo_1_1Vec3T_1ae24202328506ad6b740e3693366de380" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>getX</name></member>
      <member refid="classgeo_1_1Vec3T_1a6b5510e6509d84cb9cf88bccd008913e" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>getY</name></member>
      <member refid="classgeo_1_1Vec3T_1a25a9ab67fadad99a6b8db892f76e49be" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>getZ</name></member>
      <member refid="classgeo_1_1Vec3T_1a61d6526243b5c4e7d1600e430f633311" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>length</name></member>
      <member refid="classgeo_1_1Vec3T_1a671481061d414d003ddaa5e13c0a15f5" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>length2</name></member>
      <member refid="classgeo_1_1Vec3T_1ae2583dc6737de482f6b05fcd8d4cd08a" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>m</name></member>
      <member refid="classgeo_1_1Vec3T_1ab796a556b221ce2933a088ce1c3f379c" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>normalize</name></member>
      <member refid="classgeo_1_1Vec3T_1a2e489229d39406af34b4cec7c5e2eb19" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>normalized</name></member>
      <member refid="classgeo_1_1Vec3T_1a8f0a93a8bc642b323cd8dbdf38f29c0e" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>operator!=</name></member>
      <member refid="classgeo_1_1Vec3T_1a07dda2270e7c32a9e5d6f6317e1cdf0c" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>operator*</name></member>
      <member refid="classgeo_1_1Vec3T_1a4e511831056fb45357687e9066bf1a9b" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>operator*</name></member>
      <member refid="classgeo_1_1Vec3T_1a7b40b07f1de082c38deb98d64e15c95b" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>operator*=</name></member>
      <member refid="classgeo_1_1Vec3T_1afe2b7086741fab3828e3989922d9d14a" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>operator*=</name></member>
      <member refid="classgeo_1_1Vec3T_1a4cf78e241cf22abf054e8dc79cfe36ed" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>operator+</name></member>
      <member refid="classgeo_1_1Vec3T_1a82c536e3a515f542079fe3c6bc01638e" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>operator+=</name></member>
      <member refid="classgeo_1_1Vec3T_1a33629694a5130666bf60152bfe9cd9f2" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>operator-</name></member>
      <member refid="classgeo_1_1Vec3T_1af33abc8653677bda2ce02138bb1df258" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>operator-</name></member>
      <member refid="classgeo_1_1Vec3T_1a8b5f97e5a0c63dd798dc746a214fa3d1" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>operator-=</name></member>
      <member refid="classgeo_1_1Vec3T_1af7bc42131cdc040f858325555516993d" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>operator/</name></member>
      <member refid="classgeo_1_1Vec3T_1a1137f0808c8bca55862b00ab3f2088f1" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>operator/=</name></member>
      <member refid="classgeo_1_1Vec3T_1a663929fc70034ddaeb7e5e7527e1b415" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>operator/=</name></member>
      <member refid="classgeo_1_1Vec3T_1a338ab8e9984a73d5833e3c0a80d7ca69" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>operator&lt;&lt;</name></member>
      <member refid="classgeo_1_1Vec3T_1a608579d62b7a123ed43116903a402a62" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>operator=</name></member>
      <member refid="classgeo_1_1Vec3T_1a84ec6506ed5c71f1d0464f61ddaf2f68" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>operator==</name></member>
      <member refid="classgeo_1_1Vec3T_1aad0401adf290a06f31f1799037a9e327" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>operator[]</name></member>
      <member refid="classgeo_1_1Vec3T_1a79d31d3fa3cf5ac33828ec8d9c07c5f8" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>operator[]</name></member>
      <member refid="classgeo_1_1Vec3T_1ac28c3edafe28c201cb4a81e943ffe0d6" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>projectTo2d</name></member>
      <member refid="classgeo_1_1Vec3T_1a0eb9987bd2dfeb2a82feec160ade5115" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>Vec3T</name></member>
      <member refid="classgeo_1_1Vec3T_1ad16fed5be928799e871fb35e27471b26" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>Vec3T</name></member>
      <member refid="classgeo_1_1Vec3T_1abc95cf3e670f6bfd13050d9b36381d0d" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>Vec3T</name></member>
      <member refid="classgeo_1_1Vec3T_1aeadb5d8b34f62e6bdc6a3d3921e3596d" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>Vec3T</name></member>
      <member refid="classgeo_1_1Vec3T_1a37fbcc4060a8546a8479790b5e6275ac" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>Vec3T</name></member>
      <member refid="classgeo_1_1Vec3T_1a22f80f7d89383e029e8fc1a89152f3c5" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>x</name></member>
      <member refid="classgeo_1_1Vec3T_1a7ba629c68c0f8ca2cbaf1b7175c02c12" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>y</name></member>
      <member refid="classgeo_1_1Vec3T_1a3a763ba05e94643299935eb686d1674e" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>z</name></member>
      <member refid="classgeo_1_1Vec3T_1ac8867daf61163b7ad6c87d49ffcf5795" prot="public" virt="non-virtual"><scope>geo::Vec3T</scope><name>~Vec3T</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
