<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classgeo_1_1Octree" kind="class" language="C++" prot="public">
    <compoundname>geo::Octree</compoundname>
    <basecompoundref refid="classgeo_1_1Shape" prot="public" virt="non-virtual">geo::Shape</basecompoundref>
    <includes refid="Octree_8h" local="no">Octree.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classgeo_1_1Octree_1a8b24235b6b0c86da018f898416ecd2e8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class OctreeNode</definition>
        <argsstring></argsstring>
        <name>OctreeNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/Octree.h" line="14" column="5" bodyfile="include/geolib/Octree.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classgeo_1_1Octree_1aae75b7613b59fc6d6d58c5db5ebdff0a" prot="protected" static="no" mutable="no">
        <type><ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref></type>
        <definition>Vector3 geo::Octree::max_</definition>
        <argsstring></argsstring>
        <name>max_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/Octree.h" line="54" column="13" bodyfile="include/geolib/Octree.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Octree_1a43d59d1bf9f6c9e52c93123516d81fe1" prot="protected" static="no" mutable="yes">
        <type><ref refid="classgeo_1_1Mesh" kindref="compound">Mesh</ref></type>
        <definition>Mesh geo::Octree::mesh_</definition>
        <argsstring></argsstring>
        <name>mesh_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/Octree.h" line="60" column="18" bodyfile="include/geolib/Octree.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Octree_1a57ba77685274fc537c909b69b7d11973" prot="protected" static="no" mutable="no">
        <type><ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref></type>
        <definition>Vector3 geo::Octree::offset_</definition>
        <argsstring></argsstring>
        <name>offset_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/Octree.h" line="52" column="13" bodyfile="include/geolib/Octree.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Octree_1a69cf5993f4f8dd569bc12e64fc0a299d" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double geo::Octree::resolution_</definition>
        <argsstring></argsstring>
        <name>resolution_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/Octree.h" line="50" column="12" bodyfile="include/geolib/Octree.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Octree_1ae9f1b5333ad6c7d171fca4ab973102eb" prot="protected" static="no" mutable="no">
        <type><ref refid="classgeo_1_1OctreeNode" kindref="compound">OctreeNode</ref> *</type>
        <definition>OctreeNode* geo::Octree::root_</definition>
        <argsstring></argsstring>
        <name>root_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/Octree.h" line="58" column="16" bodyfile="include/geolib/Octree.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Octree_1a0b29c9a1ae5343ca8310d87064a28300" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double geo::Octree::size_</definition>
        <argsstring></argsstring>
        <name>size_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/Octree.h" line="56" column="12" bodyfile="include/geolib/Octree.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgeo_1_1Octree_1a224578646b43630eace03bd3ba81febc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void geo::Octree::add</definition>
        <argsstring>(const Vector3 &amp;p)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/Octree.h" line="28" column="10" bodyfile="src/Octree.cpp" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Octree_1a9183c3fd288f29bee91032d113d511cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void geo::Octree::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/Octree.h" line="26" column="10" bodyfile="src/Octree.cpp" bodystart="23" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Octree_1aa169117aa4995a1963da6e5874fbf84b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classgeo_1_1Octree" kindref="compound">Octree</ref> *</type>
        <definition>Octree * geo::Octree::clone</definition>
        <argsstring>() const</argsstring>
        <name>clone</name>
        <reimplements refid="classgeo_1_1Shape_1ab6819adb192ee12c2032bd13fabb2c83">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/Octree.h" line="22" column="20" bodyfile="src/Octree.cpp" bodystart="19" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Octree_1ad47791a28aac547ea9a38481b2207323" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool geo::Octree::contains</definition>
        <argsstring>(const Vector3 &amp;p) const</argsstring>
        <name>contains</name>
        <reimplements refid="classgeo_1_1Shape_1ae7769cb7528180ed71c1ef919d42cc37">contains</reimplements>
        <param>
          <type>const <ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Determines whether a point p lies within the shape. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>point to test </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True means point p lies inside the shape</para>
</simplesect>
Let the line segment P connect points p and an arbitrary point p_out outside of the shape We count the number of intersections between P and the shape. A positive number means point p is inside the shape. We use plucker coordinates to determine whether or not a triangle intersects line segment P. more details <emphasis><ulink url="https://members.loria.fr/SLazard/ARC-Visi3D/Pant-project/files/Line_Segment_Triangle.html">https://members.loria.fr/SLazard/ARC-Visi3D/Pant-project/files/Line_Segment_Triangle.html</ulink></emphasis> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/Octree.h" line="42" column="10" bodyfile="src/Octree.cpp" bodystart="85" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Octree_1a2c3938e1692473a7e28b800b64f0d20c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void geo::Octree::getCubes</definition>
        <argsstring>(std::vector&lt; Box &gt; &amp;cubes) const</argsstring>
        <name>getCubes</name>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="classgeo_1_1Box" kindref="compound">Box</ref> &gt; &amp;</type>
          <declname>cubes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/Octree.h" line="30" column="10" bodyfile="src/Octree.cpp" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Octree_1a2f62a767283119193c6d04622c0bfe7f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double geo::Octree::getMaxRadius</definition>
        <argsstring>() const</argsstring>
        <name>getMaxRadius</name>
        <reimplements refid="classgeo_1_1Shape_1ab4ecd5a86b3dae9bd3f3108a2d9fa9d1">getMaxRadius</reimplements>
        <briefdescription>
<para>Calculate the maximum distance from the origin of the shape to any point of the shape. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Maximum radius found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/Octree.h" line="38" column="12" bodyfile="src/Octree.cpp" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Octree_1acb57cae9ae1f518370a56d7e2f4fa533" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classgeo_1_1Mesh" kindref="compound">Mesh</ref> &amp;</type>
        <definition>const Mesh &amp; geo::Octree::getMesh</definition>
        <argsstring>() const</argsstring>
        <name>getMesh</name>
        <reimplements refid="classgeo_1_1Shape_1a8b5d477a7a1fd6b6e6e41e824b2feee9">getMesh</reimplements>
        <briefdescription>
<para>return the mesh defining the shape </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a constant reference to the mesh of the shape </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/Octree.h" line="46" column="16" bodyfile="src/Octree.cpp" bodystart="110" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Octree_1a1fb9772c2853df62399a37fe9d223f31" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double geo::Octree::getResolution</definition>
        <argsstring>() const</argsstring>
        <name>getResolution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/Octree.h" line="34" column="12" bodyfile="src/Octree.cpp" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Octree_1ad413dee0d3ed4b30281d2c65e03ff9a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool geo::Octree::intersect</definition>
        <argsstring>(const Box &amp;b) const</argsstring>
        <name>intersect</name>
        <param>
          <type>const <ref refid="classgeo_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/Octree.h" line="44" column="10" bodyfile="src/Octree.cpp" bodystart="94" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Octree_1ac6f7ba9d9e45b056bf4c25d88da96dc1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool geo::Octree::intersect</definition>
        <argsstring>(const Ray &amp;r, float t0, float t1, double &amp;distance) const</argsstring>
        <name>intersect</name>
        <reimplements refid="classgeo_1_1Shape_1a1ac12f892c823caf90f7555e1fb98c62">intersect</reimplements>
        <param>
          <type>const <ref refid="classgeo_1_1Ray" kindref="compound">Ray</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
<para>intersect: currently always throws a logic error </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t0</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t1</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>distance</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true when the ray intersects the shape </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/Octree.h" line="36" column="10" bodyfile="src/Octree.cpp" bodystart="50" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Octree_1a885d6492e8dc3f0af29b872d9a1833bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>geo::Octree::Octree</definition>
        <argsstring>(const Octree &amp;orig)</argsstring>
        <name>Octree</name>
        <param>
          <type>const <ref refid="classgeo_1_1Octree" kindref="compound">Octree</ref> &amp;</type>
          <declname>orig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/Octree.h" line="20" column="5" bodyfile="src/Octree.cpp" bodystart="11" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Octree_1a62c96216fdc71324493238e6b9a7ca05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>geo::Octree::Octree</definition>
        <argsstring>(double size, double resolution=0.1)</argsstring>
        <name>Octree</name>
        <param>
          <type>double</type>
          <declname>size</declname>
        </param>
        <param>
          <type>double</type>
          <declname>resolution</declname>
          <defval>0.1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/Octree.h" line="18" column="5" bodyfile="src/Octree.cpp" bodystart="6" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Octree_1a20e40f4a0a5c74ba10d632c0140cff8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void geo::Octree::raytrace</definition>
        <argsstring>(const Ray &amp;r, float t0, float t1)</argsstring>
        <name>raytrace</name>
        <param>
          <type>const <ref refid="classgeo_1_1Ray" kindref="compound">Ray</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/Octree.h" line="40" column="10" bodyfile="src/Octree.cpp" bodystart="68" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Octree_1aafb8853a09a39296ed85b78a0900d1c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double geo::Octree::setResolution</definition>
        <argsstring>(double resolution)</argsstring>
        <name>setResolution</name>
        <param>
          <type>double</type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/Octree.h" line="32" column="12" bodyfile="src/Octree.cpp" bodystart="38" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Octree_1a501bdd2e19b07f240ffc66b2f873ca68" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>geo::Octree::~Octree</definition>
        <argsstring>()</argsstring>
        <name>~Octree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/Octree.h" line="24" column="13" bodyfile="src/Octree.cpp" bodystart="15" bodyend="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>geo::Shape</label>
        <link refid="classgeo_1_1Shape"/>
      </node>
      <node id="1">
        <label>geo::Octree</label>
        <link refid="classgeo_1_1Octree"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>geo::Shape</label>
        <link refid="classgeo_1_1Shape"/>
        <childnode refid="3" relation="usage">
          <edgelabel>mesh_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>bounding_box_max_cache_</edgelabel>
          <edgelabel>bounding_box_min_cache_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>TYPE</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::vector&lt; geo::Vector3 &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="9">
        <label>geo::OctreeNode</label>
        <link refid="classgeo_1_1OctreeNode"/>
        <childnode refid="1" relation="usage">
          <edgelabel>tree_</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>children_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>geo::Octree</label>
        <link refid="classgeo_1_1Octree"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>mesh_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>offset_</edgelabel>
          <edgelabel>max_</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>root_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>geo::Vec3T&lt; T &gt;</label>
        <link refid="classgeo_1_1Vec3T"/>
      </node>
      <node id="5">
        <label>std::vector&lt; geo::TriangleI &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="3">
        <label>geo::Mesh</label>
        <link refid="classgeo_1_1Mesh"/>
        <childnode refid="4" relation="usage">
          <edgelabel>points_</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>triangles_i_</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>triangles_cache_</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::vector&lt; geo::Triangle &gt;</label>
        <link refid="cpp/container/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="8">
        <label>std::string</label>
        <link refid="cpp/string/basic_string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="include/geolib/Octree.h" line="12" column="26" bodyfile="include/geolib/Octree.h" bodystart="12" bodyend="62"/>
    <listofallmembers>
      <member refid="classgeo_1_1Octree_1a224578646b43630eace03bd3ba81febc" prot="public" virt="non-virtual"><scope>geo::Octree</scope><name>add</name></member>
      <member refid="classgeo_1_1Shape_1a1d6ae03b4a06eb3d86dd918c1a2a5a30" prot="private" virt="non-virtual"><scope>geo::Octree</scope><name>bounding_box_cache_valid_</name></member>
      <member refid="classgeo_1_1Shape_1a9ff738ec054dd0577dc948609db42475" prot="private" virt="non-virtual"><scope>geo::Octree</scope><name>bounding_box_max_cache_</name></member>
      <member refid="classgeo_1_1Shape_1a20119d9bcc304168a5d536131f74bf63" prot="private" virt="non-virtual"><scope>geo::Octree</scope><name>bounding_box_min_cache_</name></member>
      <member refid="classgeo_1_1Octree_1a9183c3fd288f29bee91032d113d511cc" prot="public" virt="non-virtual"><scope>geo::Octree</scope><name>clear</name></member>
      <member refid="classgeo_1_1Octree_1aa169117aa4995a1963da6e5874fbf84b" prot="public" virt="virtual"><scope>geo::Octree</scope><name>clone</name></member>
      <member refid="classgeo_1_1Octree_1ad47791a28aac547ea9a38481b2207323" prot="public" virt="virtual"><scope>geo::Octree</scope><name>contains</name></member>
      <member refid="classgeo_1_1Shape_1a99de8a314f524d2f3243befbb9e56dcb" prot="public" virt="virtual"><scope>geo::Octree</scope><name>empty</name></member>
      <member refid="classgeo_1_1Shape_1ab05847f6e020356a637cf51882099c24" prot="public" virt="virtual"><scope>geo::Octree</scope><name>getBoundingBox</name></member>
      <member refid="classgeo_1_1Octree_1a2c3938e1692473a7e28b800b64f0d20c" prot="public" virt="non-virtual"><scope>geo::Octree</scope><name>getCubes</name></member>
      <member refid="classgeo_1_1Octree_1a2f62a767283119193c6d04622c0bfe7f" prot="public" virt="virtual"><scope>geo::Octree</scope><name>getMaxRadius</name></member>
      <member refid="classgeo_1_1Octree_1acb57cae9ae1f518370a56d7e2f4fa533" prot="public" virt="virtual"><scope>geo::Octree</scope><name>getMesh</name></member>
      <member refid="classgeo_1_1Octree_1a1fb9772c2853df62399a37fe9d223f31" prot="public" virt="non-virtual"><scope>geo::Octree</scope><name>getResolution</name></member>
      <member refid="classgeo_1_1Octree_1ac6f7ba9d9e45b056bf4c25d88da96dc1" prot="public" virt="virtual"><scope>geo::Octree</scope><name>intersect</name></member>
      <member refid="classgeo_1_1Octree_1ad413dee0d3ed4b30281d2c65e03ff9a4" prot="public" virt="non-virtual"><scope>geo::Octree</scope><name>intersect</name></member>
      <member refid="classgeo_1_1Shape_1a3ba8194d47f9c6b31543ce22ac7778f0" prot="public" virt="virtual" ambiguityscope="geo::Shape::"><scope>geo::Octree</scope><name>intersect</name></member>
      <member refid="classgeo_1_1Octree_1aae75b7613b59fc6d6d58c5db5ebdff0a" prot="protected" virt="non-virtual"><scope>geo::Octree</scope><name>max_</name></member>
      <member refid="classgeo_1_1Octree_1a43d59d1bf9f6c9e52c93123516d81fe1" prot="protected" virt="non-virtual"><scope>geo::Octree</scope><name>mesh_</name></member>
      <member refid="classgeo_1_1Octree_1a62c96216fdc71324493238e6b9a7ca05" prot="public" virt="non-virtual"><scope>geo::Octree</scope><name>Octree</name></member>
      <member refid="classgeo_1_1Octree_1a885d6492e8dc3f0af29b872d9a1833bf" prot="public" virt="non-virtual"><scope>geo::Octree</scope><name>Octree</name></member>
      <member refid="classgeo_1_1Octree_1a8b24235b6b0c86da018f898416ecd2e8" prot="private" virt="non-virtual"><scope>geo::Octree</scope><name>OctreeNode</name></member>
      <member refid="classgeo_1_1Octree_1a57ba77685274fc537c909b69b7d11973" prot="protected" virt="non-virtual"><scope>geo::Octree</scope><name>offset_</name></member>
      <member refid="classgeo_1_1Octree_1a20e40f4a0a5c74ba10d632c0140cff8d" prot="public" virt="non-virtual"><scope>geo::Octree</scope><name>raytrace</name></member>
      <member refid="classgeo_1_1Shape_1a78fdd351f1332234e258a98a115a25a0" prot="public" virt="non-virtual"><scope>geo::Octree</scope><name>read</name></member>
      <member refid="classgeo_1_1Octree_1a69cf5993f4f8dd569bc12e64fc0a299d" prot="protected" virt="non-virtual"><scope>geo::Octree</scope><name>resolution_</name></member>
      <member refid="classgeo_1_1Octree_1ae9f1b5333ad6c7d171fca4ab973102eb" prot="protected" virt="non-virtual"><scope>geo::Octree</scope><name>root_</name></member>
      <member refid="classgeo_1_1Shape_1a50cedd1350ccef781c83c7812695eeb2" prot="public" virt="virtual"><scope>geo::Octree</scope><name>setMesh</name></member>
      <member refid="classgeo_1_1Octree_1aafb8853a09a39296ed85b78a0900d1c3" prot="public" virt="non-virtual"><scope>geo::Octree</scope><name>setResolution</name></member>
      <member refid="classgeo_1_1Shape_1a8094a10b0bbca152bd8d0da08f255c9e" prot="public" virt="non-virtual"><scope>geo::Octree</scope><name>Shape</name></member>
      <member refid="classgeo_1_1Octree_1a0b29c9a1ae5343ca8310d87064a28300" prot="protected" virt="non-virtual"><scope>geo::Octree</scope><name>size_</name></member>
      <member refid="classgeo_1_1Shape_1a1a807ae1f21eafc3580a250805275d5b" prot="public" virt="non-virtual"><scope>geo::Octree</scope><name>TYPE</name></member>
      <member refid="classgeo_1_1Shape_1a606be4fca6978f0a60e792854e6c5afc" prot="public" virt="virtual"><scope>geo::Octree</scope><name>write</name></member>
      <member refid="classgeo_1_1Octree_1a501bdd2e19b07f240ffc66b2f873ca68" prot="public" virt="virtual"><scope>geo::Octree</scope><name>~Octree</name></member>
      <member refid="classgeo_1_1Shape_1a1e857e24797a6007ddeb8fb280ff7366" prot="public" virt="virtual"><scope>geo::Octree</scope><name>~Shape</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
