<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="test__matrix_8cpp" kind="file" language="C++">
    <compoundname>test_matrix.cpp</compoundname>
    <includes refid="math__types_8h" local="no">geolib/math_types.h</includes>
    <includes refid="tf__conversions_8h" local="no">geolib/ros/tf_conversions.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">profiling/Timer.h</includes>
    <includes local="no">tf/transform_datatypes.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">time.h</includes>
    <incdepgraph>
      <node id="9">
        <label>profiling/Timer.h</label>
        <link refid="Timer_8h.html" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags"/>
      </node>
      <node id="10">
        <label>stdlib.h</label>
      </node>
      <node id="3">
        <label>iostream</label>
        <link refid="cpp/header/iostream" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="7">
        <label>memory</label>
        <link refid="cpp/header/memory" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="8">
        <label>tf/transform_datatypes.h</label>
      </node>
      <node id="2">
        <label>geolib/math_types.h</label>
        <link refid="math__types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>test_matrix.cpp</label>
        <link refid="test__matrix_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>time.h</label>
      </node>
      <node id="6">
        <label>geolib/datatypes.h</label>
        <link refid="datatypes_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>geolib/ros/tf_conversions.h</label>
        <link refid="tf__conversions_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cmath</label>
        <link refid="cpp/header/cmath" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__matrix_8cpp_1af1936641e80849ffab6bad3706156841" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool equals</definition>
        <argsstring>(const geo::Transform3 &amp;T, const tf::Transform &amp;T_tf)</argsstring>
        <name>equals</name>
        <param>
          <type>const <ref refid="namespacegeo_1a119e539a3bb70c4a3b04ff56ea8181bd" kindref="member">geo::Transform3</ref> &amp;</type>
          <declname>T</declname>
        </param>
        <param>
          <type>const tf::Transform &amp;</type>
          <declname>T_tf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/test_matrix.cpp" line="50" column="6" bodyfile="test/test_matrix.cpp" bodystart="50" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="test__matrix_8cpp_1a9edc852abe543c874a4080a0c272c7cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool equals</definition>
        <argsstring>(const geo::Transform3 &amp;T, const tf::Transform &amp;T_tf, const std::string &amp;msg)</argsstring>
        <name>equals</name>
        <param>
          <type>const <ref refid="namespacegeo_1a119e539a3bb70c4a3b04ff56ea8181bd" kindref="member">geo::Transform3</ref> &amp;</type>
          <declname>T</declname>
        </param>
        <param>
          <type>const tf::Transform &amp;</type>
          <declname>T_tf</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/test_matrix.cpp" line="70" column="6" bodyfile="test/test_matrix.cpp" bodystart="70" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="test__matrix_8cpp_1aacd02951846425bbd9ff121f19533cd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool equals</definition>
        <argsstring>(double a, double b)</argsstring>
        <name>equals</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/test_matrix.cpp" line="46" column="6" bodyfile="test/test_matrix.cpp" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="test__matrix_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/test_matrix.cpp" line="86" column="5" bodyfile="test/test_matrix.cpp" bodystart="86" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="test__matrix_8cpp_1aef214e51c83f006000fd3561c11b50a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print</definition>
        <argsstring>(const tf::Matrix3x3 &amp;m)</argsstring>
        <name>print</name>
        <param>
          <type>const tf::Matrix3x3 &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/test_matrix.cpp" line="30" column="6" bodyfile="test/test_matrix.cpp" bodystart="30" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="test__matrix_8cpp_1aeb157678a782ed563681c7fb6d6d9741" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print</definition>
        <argsstring>(const tf::Transform &amp;t)</argsstring>
        <name>print</name>
        <param>
          <type>const tf::Transform &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/test_matrix.cpp" line="39" column="6" bodyfile="test/test_matrix.cpp" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="test__matrix_8cpp_1a981fbd0d8165c0bd209e6267c31348bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print</definition>
        <argsstring>(const tf::Vector3 &amp;v)</argsstring>
        <name>print</name>
        <param>
          <type>const tf::Vector3 &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/test_matrix.cpp" line="35" column="6" bodyfile="test/test_matrix.cpp" bodystart="35" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="test__matrix_8cpp_1a1f0c277aa37c6f4ea90c253b2a25172b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double random</definition>
        <argsstring>(double min, double max)</argsstring>
        <name>random</name>
        <param>
          <type>double</type>
          <declname>min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/test_matrix.cpp" line="16" column="8" bodyfile="test/test_matrix.cpp" bodystart="16" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="test__matrix_8cpp_1a80ce33d0d24dc851f2eaaa9d044cc09b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>tf::Transform</type>
        <definition>tf::Transform randomTransform</definition>
        <argsstring>()</argsstring>
        <name>randomTransform</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/test_matrix.cpp" line="22" column="15" bodyfile="test/test_matrix.cpp" bodystart="22" bodyend="26"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="math__types_8h" kindref="compound">geolib/math_types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tf__conversions_8h" kindref="compound">geolib/ros/tf_conversions.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cpp/header/iostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">iostream</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Timer_8h.html" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">profiling/Timer.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>USE_TF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tf/transform_datatypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>srand,<sp/>rand<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="test__matrix_8cpp_1a1f0c277aa37c6f4ea90c253b2a25172b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="test__matrix_8cpp_1a1f0c277aa37c6f4ea90c253b2a25172b" kindref="member">random</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)rand()<sp/>/<sp/>RAND_MAX)<sp/>*<sp/>(max<sp/>-<sp/>min)<sp/>+<sp/>min;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="test__matrix_8cpp_1a80ce33d0d24dc851f2eaaa9d044cc09b" refkind="member"><highlight class="normal"><ref refid="namespacegeo_1a74dff5d85b12e213259498690e560e50" kindref="member">tf::Transform</ref><sp/><ref refid="test__matrix_8cpp_1a80ce33d0d24dc851f2eaaa9d044cc09b" kindref="member">randomTransform</ref>()<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>tf::Matrix3x3<sp/><ref refid="test__profiler_8cpp_1aef0e399324ca7f46e7d0725e80db0985" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">b</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="test__profiler_8cpp_1aef0e399324ca7f46e7d0725e80db0985" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">b</ref>.setEulerYPR(<ref refid="test__matrix_8cpp_1a1f0c277aa37c6f4ea90c253b2a25172b" kindref="member">random</ref>(0,<sp/>6.283),<sp/><ref refid="test__matrix_8cpp_1a1f0c277aa37c6f4ea90c253b2a25172b" kindref="member">random</ref>(0,<sp/>6.283),<sp/><ref refid="test__matrix_8cpp_1a1f0c277aa37c6f4ea90c253b2a25172b" kindref="member">random</ref>(0,<sp/>6.283));</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacegeo_1a74dff5d85b12e213259498690e560e50" kindref="member">tf::Transform</ref>(<ref refid="test__profiler_8cpp_1aef0e399324ca7f46e7d0725e80db0985" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">b</ref>,<sp/><ref refid="namespacegeo_1a73b9f6d6bb88a43cc6551f9822004080" kindref="member">tf::Vector3</ref>(<ref refid="test__matrix_8cpp_1a1f0c277aa37c6f4ea90c253b2a25172b" kindref="member">random</ref>(-10,<sp/>10),<sp/><ref refid="test__matrix_8cpp_1a1f0c277aa37c6f4ea90c253b2a25172b" kindref="member">random</ref>(-10,<sp/>10),<sp/><ref refid="test__matrix_8cpp_1a1f0c277aa37c6f4ea90c253b2a25172b" kindref="member">random</ref>(-10,<sp/>10)));</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="test__matrix_8cpp_1aef214e51c83f006000fd3561c11b50a7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__matrix_8cpp_1aef214e51c83f006000fd3561c11b50a7" kindref="member">print</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tf::Matrix3x3&amp;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m[0][0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m[0][1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m[0][2]<sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m[1][0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m[1][1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m[1][2]<sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m[2][0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m[2][1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m[2][2]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>]&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35" refid="test__matrix_8cpp_1a981fbd0d8165c0bd209e6267c31348bf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__matrix_8cpp_1aef214e51c83f006000fd3561c11b50a7" kindref="member">print</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacegeo_1a73b9f6d6bb88a43cc6551f9822004080" kindref="member">tf::Vector3</ref>&amp;<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>v[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>v[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>v[2]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>]&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="test__matrix_8cpp_1aeb157678a782ed563681c7fb6d6d9741" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__matrix_8cpp_1aef214e51c83f006000fd3561c11b50a7" kindref="member">print</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacegeo_1a74dff5d85b12e213259498690e560e50" kindref="member">tf::Transform</ref>&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="test__matrix_8cpp_1aef214e51c83f006000fd3561c11b50a7" kindref="member">print</ref>(<ref refid="main_8cpp_1a978d88b393c8a37dc2614c88788b3442" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">t</ref>.getBasis());</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="test__matrix_8cpp_1aef214e51c83f006000fd3561c11b50a7" kindref="member">print</ref>(<ref refid="main_8cpp_1a978d88b393c8a37dc2614c88788b3442" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">t</ref>.getOrigin());</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="test__matrix_8cpp_1aacd02951846425bbd9ff121f19533cd8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="test__matrix_8cpp_1aacd02951846425bbd9ff121f19533cd8" kindref="member">equals</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::abs(<ref refid="test__profiler_8cpp_1a2edadf23dba309e5902af6c6dc829482" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">a</ref><sp/>-<sp/><ref refid="test__profiler_8cpp_1aef0e399324ca7f46e7d0725e80db0985" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">b</ref>)<sp/>&lt;<sp/>1e-10;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="test__matrix_8cpp_1af1936641e80849ffab6bad3706156841" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="test__matrix_8cpp_1aacd02951846425bbd9ff121f19533cd8" kindref="member">equals</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Transform3T" kindref="compound">geo::Transform3</ref>&amp;<sp/>T,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacegeo_1a74dff5d85b12e213259498690e560e50" kindref="member">tf::Transform</ref>&amp;<sp/>T_tf)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><sp/><sp/><sp/>!<ref refid="test__matrix_8cpp_1aacd02951846425bbd9ff121f19533cd8" kindref="member">equals</ref>(T.<ref refid="classgeo_1_1Transform3T_1acbf09e22e135e0a54c5f275d263d383c" kindref="member">t</ref>.x,<sp/>T_tf.getOrigin().getX())<sp/>||</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="test__matrix_8cpp_1aacd02951846425bbd9ff121f19533cd8" kindref="member">equals</ref>(T.<ref refid="classgeo_1_1Transform3T_1acbf09e22e135e0a54c5f275d263d383c" kindref="member">t</ref>.y,<sp/>T_tf.getOrigin().getY())<sp/>||</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="test__matrix_8cpp_1aacd02951846425bbd9ff121f19533cd8" kindref="member">equals</ref>(T.<ref refid="classgeo_1_1Transform3T_1acbf09e22e135e0a54c5f275d263d383c" kindref="member">t</ref>.z,<sp/>T_tf.getOrigin().getZ()))<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1QuaternionT" kindref="compound">geo::Quaternion</ref><sp/>q<sp/>=<sp/>T.<ref refid="classgeo_1_1Transform3T_1abb0b92e03424914b561b700cdf82cb4a" kindref="member">getQuaternion</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacegeo_1a69dc5a665d9be978dac4ac9545977402" kindref="member">tf::Quaternion</ref><sp/>q_tf<sp/>=<sp/>T_tf.getRotation();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><sp/><sp/><sp/>!<ref refid="test__matrix_8cpp_1aacd02951846425bbd9ff121f19533cd8" kindref="member">equals</ref>(q.<ref refid="classgeo_1_1QuaternionT_1aa3359b51fc5d2f2f8e4819564483507a" kindref="member">x</ref>,<sp/>q_tf.getX())<sp/>||</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="test__matrix_8cpp_1aacd02951846425bbd9ff121f19533cd8" kindref="member">equals</ref>(q.<ref refid="classgeo_1_1QuaternionT_1a5e4356b8be4952e533b6d3e26dfa9873" kindref="member">y</ref>,<sp/>q_tf.getY())<sp/>||</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="test__matrix_8cpp_1aacd02951846425bbd9ff121f19533cd8" kindref="member">equals</ref>(q.<ref refid="classgeo_1_1QuaternionT_1a5c675e137300a05f5435d9feb649bb7e" kindref="member">z</ref>,<sp/>q_tf.getZ())<sp/>||</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="test__matrix_8cpp_1aacd02951846425bbd9ff121f19533cd8" kindref="member">equals</ref>(q.<ref refid="classgeo_1_1QuaternionT_1a2d58ccd7677eeab9f7c0e70259a65ad5" kindref="member">w</ref>,<sp/>q_tf.getW()))<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="test__matrix_8cpp_1a9edc852abe543c874a4080a0c272c7cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="test__matrix_8cpp_1aacd02951846425bbd9ff121f19533cd8" kindref="member">equals</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Transform3T" kindref="compound">geo::Transform3</ref>&amp;<sp/>T,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacegeo_1a74dff5d85b12e213259498690e560e50" kindref="member">tf::Transform</ref>&amp;<sp/>T_tf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>msg)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="test__matrix_8cpp_1aacd02951846425bbd9ff121f19533cd8" kindref="member">equals</ref>(T,<sp/>T_tf))<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg<sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;TF:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__matrix_8cpp_1aef214e51c83f006000fd3561c11b50a7" kindref="member">print</ref>(T_tf);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;GEOLIB:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref><sp/>&lt;&lt;<sp/>T<sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;OK\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg<sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="test__matrix_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__matrix_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>random<sp/>seed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>srand<sp/>(time(NULL));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacegeo_1a74dff5d85b12e213259498690e560e50" kindref="member">tf::Transform</ref><sp/>t1_tf<sp/>=<sp/><ref refid="test__matrix_8cpp_1a80ce33d0d24dc851f2eaaa9d044cc09b" kindref="member">randomTransform</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacegeo_1a74dff5d85b12e213259498690e560e50" kindref="member">tf::Transform</ref><sp/>t2_tf<sp/>=<sp/><ref refid="test__matrix_8cpp_1a80ce33d0d24dc851f2eaaa9d044cc09b" kindref="member">randomTransform</ref>();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Transform3T" kindref="compound">geo::Transform3</ref><sp/>t1,<sp/>t2;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacegeo_1a20342739cb15b8e215c92762c564f12e" kindref="member">geo::convert</ref>(t1_tf,<sp/>t1);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacegeo_1a20342739cb15b8e215c92762c564f12e" kindref="member">geo::convert</ref>(t2_tf,<sp/>t2);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><sp/><sp/><sp/>!<ref refid="test__matrix_8cpp_1aacd02951846425bbd9ff121f19533cd8" kindref="member">equals</ref>(t1,<sp/>t1_tf,<sp/></highlight><highlight class="stringliteral">&quot;equals(Transform,<sp/>Transform)&quot;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="test__matrix_8cpp_1aacd02951846425bbd9ff121f19533cd8" kindref="member">equals</ref>(t1<sp/>*<sp/>t2,<sp/>t1_tf<sp/>*<sp/>t2_tf,<sp/></highlight><highlight class="stringliteral">&quot;Transform<sp/>*<sp/>Transform&quot;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="test__matrix_8cpp_1aacd02951846425bbd9ff121f19533cd8" kindref="member">equals</ref>(t1.<ref refid="classgeo_1_1Transform3T_1a4daef91f27c4a336e18c388638e27fa9" kindref="member">inverse</ref>()<sp/>*<sp/>t2,<sp/>t1_tf.<ref refid="classgeo_1_1Transform3T_1a4daef91f27c4a336e18c388638e27fa9" kindref="member">inverse</ref>()<sp/>*<sp/>t2_tf,<sp/></highlight><highlight class="stringliteral">&quot;Transform.inverse()<sp/>*<sp/>Transform&quot;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="test__matrix_8cpp_1aacd02951846425bbd9ff121f19533cd8" kindref="member">equals</ref>(t1.<ref refid="classgeo_1_1Transform3T_1aff4dc9c814c6cdd6183980ee33e0506f" kindref="member">inverseTimes</ref>(t2),<sp/>t1_tf.<ref refid="classgeo_1_1Transform3T_1aff4dc9c814c6cdd6183980ee33e0506f" kindref="member">inverseTimes</ref>(t2_tf),<sp/></highlight><highlight class="stringliteral">&quot;Transform.inverseTimes(Transform)&quot;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="test__matrix_8cpp_1aacd02951846425bbd9ff121f19533cd8" kindref="member">equals</ref>(<ref refid="classgeo_1_1Transform3T_1a0b569228b1e6eb2889d646158e7e11d1" kindref="member">geo::Transform3::identity</ref>()<sp/>*<sp/>t1,<sp/>t1_tf,<sp/></highlight><highlight class="stringliteral">&quot;Transform.identity()<sp/>*<sp/>Transform&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;All<sp/>OK&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="test/test_matrix.cpp"/>
  </compounddef>
</doxygen>
