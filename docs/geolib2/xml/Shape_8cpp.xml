<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="Shape_8cpp" kind="file" language="C++">
    <compoundname>Shape.cpp</compoundname>
    <includes refid="Shape_8h" local="yes">geolib/Shape.h</includes>
    <includes refid="Box_8h" local="yes">geolib/Box.h</includes>
    <includes refid="serialization_8h" local="no">geolib/serialization.h</includes>
    <includes local="no">console_bridge/console.h</includes>
    <includes local="no">cmath</includes>
    <includes local="no">stdexcept</includes>
    <incdepgraph>
      <node id="10">
        <label>vector</label>
        <link refid="cpp/header/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="5">
        <label>iostream</label>
        <link refid="cpp/header/iostream" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="7">
        <label>memory</label>
        <link refid="cpp/header/memory" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="14">
        <label>geolib/serialization.h</label>
        <link refid="serialization_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>console_bridge/console.h</label>
      </node>
      <node id="15">
        <label>map</label>
        <link refid="cpp/header/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="4">
        <label>geolib/math_types.h</label>
        <link refid="math__types_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>array</label>
        <link refid="cpp/header/array" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="8">
        <label>Mesh.h</label>
        <link refid="Mesh_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>geolib/Shape.h</label>
        <link refid="Shape_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Shape.cpp</label>
        <link refid="Shape_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>datatypes.h</label>
        <link refid="datatypes_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Ray.h</label>
        <link refid="Ray_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>geolib/Box.h</label>
        <link refid="Box_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cmath</label>
        <link refid="cpp/header/cmath" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="17">
        <label>stdexcept</label>
        <link refid="cpp/header/stdexcept" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="9">
        <label>Triangle.h</label>
        <link refid="Triangle_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classgeo_1_1LineSegment" prot="public">geo::LineSegment</innerclass>
    <innernamespace refid="namespacegeo">geo</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Shape_8h" kindref="compound">geolib/Shape.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Box_8h" kindref="compound">geolib/Box.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="serialization_8h" kindref="compound">geolib/serialization.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;console_bridge/console.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cpp/header/cmath" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">cmath</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cpp/header/stdexcept" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">stdexcept</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacegeo" kindref="compound">geo</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="namespacegeo_1abea23ef1633c8f2e8c0f3fc1a5d9c4e5" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacegeo_1abea23ef1633c8f2e8c0f3fc1a5d9c4e5" kindref="member">check_linesegment</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref>&amp;<sp/>p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>radius2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref>&amp;<sp/>ab)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref><sp/>ap<sp/>=<sp/>p-<ref refid="test__profiler_8cpp_1a2edadf23dba309e5902af6c6dc829482" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">a</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d1_2<sp/>=<sp/>ap.<ref refid="classgeo_1_1Vector3_1ad9f7080519f688a286b720496cdf1c29" kindref="member">length2</ref>();<sp/><sp/></highlight><highlight class="comment">//<sp/>Distance<sp/>between<sp/>a<sp/>and<sp/>p,<sp/>squared</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d2<sp/>=<sp/>ab.<ref refid="classgeo_1_1Vector3_1aab55b8dfc106f76bfca102caa11d10ee" kindref="member">dot</ref>(ap);<sp/><sp/></highlight><highlight class="comment">//<sp/>Dot<sp/>product<sp/>between<sp/>ab<sp/>and<sp/>ap;<sp/>projection<sp/>of<sp/>p<sp/>on<sp/>linesegment<sp/>ab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d2<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>ab<sp/>dot<sp/>ap<sp/>&lt;<sp/>0,<sp/>there<sp/>can&apos;t<sp/>be<sp/>any<sp/>intersection,<sp/>because<sp/>the<sp/>orientated<sp/>linesegment<sp/>points<sp/>away</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d2_2<sp/>=<sp/>d2*d2<sp/>/<sp/>ab.<ref refid="classgeo_1_1Vector3_1ad9f7080519f688a286b720496cdf1c29" kindref="member">length2</ref>();<sp/></highlight><highlight class="comment">//<sp/>Distance<sp/>between<sp/>a<sp/>and<sp/>the<sp/>projection<sp/>of<sp/>p<sp/>on<sp/>linesegment<sp/>ab,<sp/>squared</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d2_2<sp/>&lt;=<sp/>ab.<ref refid="classgeo_1_1Vector3_1ad9f7080519f688a286b720496cdf1c29" kindref="member">length2</ref>()<sp/>*<sp/>(1<sp/>+<sp/>1e-9)<sp/>&amp;&amp;<sp/>d1_2-d2_2<sp/>&lt;=<sp/>radius2<sp/>*<sp/>(1<sp/>+<sp/>1e-9);<sp/></highlight><highlight class="comment">//<sp/>To<sp/>prevent<sp/>any<sp/>numerical<sp/>issues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classgeo_1_1LineSegment" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgeo_1_1LineSegment" kindref="compound">LineSegment</ref></highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40" refid="classgeo_1_1LineSegment_1ac4f6e857b4c24b4dbc16e38807813bb5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1LineSegment_1ac4f6e857b4c24b4dbc16e38807813bb5" kindref="member">LineSegment</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>&amp;<sp/><ref refid="classgeo_1_1LineSegment_1a54ac58dc91cd6917773bcb400e1d94ba" kindref="member">a</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>&amp;<sp/><ref refid="classgeo_1_1LineSegment_1aaa3af3f3b202c4a77f4d91799b4b15a3" kindref="member">b</ref>)<sp/>:<sp/><ref refid="classgeo_1_1LineSegment_1a87f1e787bbfd13c1118ad44ff7c46208" kindref="member">a_</ref>(<ref refid="classgeo_1_1LineSegment_1a54ac58dc91cd6917773bcb400e1d94ba" kindref="member">a</ref>),<sp/><ref refid="classgeo_1_1LineSegment_1a6dd35f086aadfbb1f4fa4a88a36a709b" kindref="member">b_</ref>(<ref refid="classgeo_1_1LineSegment_1aaa3af3f3b202c4a77f4d91799b4b15a3" kindref="member">b</ref>)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1LineSegment_1adc1e23ec1406eec722a3bb486cea7f48" kindref="member">U_</ref><sp/>=<sp/><ref refid="classgeo_1_1LineSegment_1a6dd35f086aadfbb1f4fa4a88a36a709b" kindref="member">b_</ref>-<ref refid="classgeo_1_1LineSegment_1a87f1e787bbfd13c1118ad44ff7c46208" kindref="member">a_</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1LineSegment_1a6b35c677cf372db68761960914baed32" kindref="member">V_</ref><sp/>=<sp/><ref refid="classgeo_1_1LineSegment_1a87f1e787bbfd13c1118ad44ff7c46208" kindref="member">a_</ref>.cross(<ref refid="classgeo_1_1LineSegment_1a6dd35f086aadfbb1f4fa4a88a36a709b" kindref="member">b_</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classgeo_1_1LineSegment_1a54ac58dc91cd6917773bcb400e1d94ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>&amp;<sp/><ref refid="classgeo_1_1LineSegment_1a54ac58dc91cd6917773bcb400e1d94ba" kindref="member">a</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1LineSegment_1a87f1e787bbfd13c1118ad44ff7c46208" kindref="member">a_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="47" refid="classgeo_1_1LineSegment_1aaa3af3f3b202c4a77f4d91799b4b15a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>&amp;<sp/><ref refid="classgeo_1_1LineSegment_1aaa3af3f3b202c4a77f4d91799b4b15a3" kindref="member">b</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1LineSegment_1a6dd35f086aadfbb1f4fa4a88a36a709b" kindref="member">b_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="48" refid="classgeo_1_1LineSegment_1ad332423fd980cba6b8b995c18cc6f7b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>&amp;<sp/><ref refid="classgeo_1_1LineSegment_1ad332423fd980cba6b8b995c18cc6f7b0" kindref="member">U</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1LineSegment_1adc1e23ec1406eec722a3bb486cea7f48" kindref="member">U_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="49" refid="classgeo_1_1LineSegment_1a933d38b18a6bb36cd1a03b86398154b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>&amp;<sp/><ref refid="classgeo_1_1LineSegment_1a933d38b18a6bb36cd1a03b86398154b8" kindref="member">V</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1LineSegment_1a6b35c677cf372db68761960914baed32" kindref="member">V_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52" refid="classgeo_1_1LineSegment_1a6dd35f086aadfbb1f4fa4a88a36a709b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>&amp;<sp/><ref refid="classgeo_1_1LineSegment_1a87f1e787bbfd13c1118ad44ff7c46208" kindref="member">a_</ref>,<sp/><ref refid="classgeo_1_1LineSegment_1a6dd35f086aadfbb1f4fa4a88a36a709b" kindref="member">b_</ref>;</highlight></codeline>
<codeline lineno="53" refid="classgeo_1_1LineSegment_1a6b35c677cf372db68761960914baed32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref><sp/><ref refid="classgeo_1_1LineSegment_1adc1e23ec1406eec722a3bb486cea7f48" kindref="member">U_</ref>,<sp/><ref refid="classgeo_1_1LineSegment_1a6b35c677cf372db68761960914baed32" kindref="member">V_</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55" refid="namespacegeo_1a2559187a97c1d6d8e8de5d37b94ab9df" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1LineSegment" kindref="compound">geo::LineSegment</ref><sp/><ref refid="namespacegeo_1a2559187a97c1d6d8e8de5d37b94ab9df" kindref="member">LS</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="namespacegeo_1a9a0dbf832181a41dcccf8d73d585dc9c" refkind="member"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacegeo_1a9a0dbf832181a41dcccf8d73d585dc9c" kindref="member">side_product</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1LineSegment" kindref="compound">geo::LS</ref>&amp;<sp/>p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1LineSegment" kindref="compound">geo::LS</ref>&amp;<sp/>q)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p.<ref refid="classgeo_1_1LineSegment_1ad332423fd980cba6b8b995c18cc6f7b0" kindref="member">U</ref>().<ref refid="classgeo_1_1Vector3_1aab55b8dfc106f76bfca102caa11d10ee" kindref="member">dot</ref>(q.<ref refid="classgeo_1_1LineSegment_1a933d38b18a6bb36cd1a03b86398154b8" kindref="member">V</ref>())<sp/>+<sp/>q.<ref refid="classgeo_1_1LineSegment_1ad332423fd980cba6b8b995c18cc6f7b0" kindref="member">U</ref>().<ref refid="classgeo_1_1Vector3_1aab55b8dfc106f76bfca102caa11d10ee" kindref="member">dot</ref>(p.<ref refid="classgeo_1_1LineSegment_1a933d38b18a6bb36cd1a03b86398154b8" kindref="member">V</ref>());</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="namespacegeo_1ab6752d25a6356f90943d4f4e62e9a44c" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacegeo_1ab6752d25a6356f90943d4f4e62e9a44c" kindref="member">line_linesegment_intersection</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1LineSegment" kindref="compound">geo::LS</ref>&amp;<sp/>l,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1LineSegment" kindref="compound">geo::LS</ref>&amp;<sp/>ls,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>&amp;<sp/>outside)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s<sp/>=<sp/><ref refid="namespacegeo_1a9a0dbf832181a41dcccf8d73d585dc9c" kindref="member">side_product</ref>(l,<sp/>ls);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>!=0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s1<sp/>=<sp/><ref refid="namespacegeo_1a9a0dbf832181a41dcccf8d73d585dc9c" kindref="member">side_product</ref>(l,<sp/><ref refid="classgeo_1_1LineSegment" kindref="compound">geo::LS</ref>(outside,<sp/>ls.<ref refid="classgeo_1_1LineSegment_1a54ac58dc91cd6917773bcb400e1d94ba" kindref="member">a</ref>()));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2<sp/>=<sp/><ref refid="namespacegeo_1a9a0dbf832181a41dcccf8d73d585dc9c" kindref="member">side_product</ref>(l,<sp/><ref refid="classgeo_1_1LineSegment" kindref="compound">geo::LS</ref>(ls.<ref refid="classgeo_1_1LineSegment_1aaa3af3f3b202c4a77f4d91799b4b15a3" kindref="member">b</ref>(),<sp/>outside));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s1<sp/>*<sp/>s2<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="namespacegeo_1a8d9004d45b0ecfe83bbcd475319c382e" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacegeo_1a8d9004d45b0ecfe83bbcd475319c382e" kindref="member">compute_2D_intersection</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Triangle" kindref="compound">geo::Triangle</ref>&amp;<sp/>t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1LineSegment" kindref="compound">geo::LS</ref>&amp;<sp/>line)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2,s3;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skipping<sp/>s1,<sp/>as<sp/>we<sp/>don&apos;t<sp/>change<sp/>v1<sp/>and<sp/>v2,<sp/>so<sp/>that<sp/>edge,<sp/>doesn&apos;t<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref><sp/>p3;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i=0;<sp/>i&lt;3;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3<sp/>=<sp/><ref refid="namespacegeo_1a73b9f6d6bb88a43cc6551f9822004080" kindref="member">geo::Vector3</ref>(<ref refid="main_8cpp_1a978d88b393c8a37dc2614c88788b3442" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">t</ref>.p3());</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3[i]<sp/>+=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>Move<sp/>point<sp/>outside<sp/>the<sp/>plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/><ref refid="namespacegeo_1a9a0dbf832181a41dcccf8d73d585dc9c" kindref="member">side_product</ref>(line,<sp/><ref refid="classgeo_1_1LineSegment" kindref="compound">geo::LS</ref>(<ref refid="main_8cpp_1a978d88b393c8a37dc2614c88788b3442" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">t</ref>.p2(),<sp/>p3));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3<sp/>=<sp/><ref refid="namespacegeo_1a9a0dbf832181a41dcccf8d73d585dc9c" kindref="member">side_product</ref>(line,<sp/><ref refid="classgeo_1_1LineSegment" kindref="compound">geo::LS</ref>(p3,<sp/><ref refid="main_8cpp_1a978d88b393c8a37dc2614c88788b3442" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">t</ref>.p1()));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(std::abs(s2)&lt;1e-16<sp/>&amp;&amp;<sp/>std::abs(s3)&lt;1e-16))<sp/></highlight><highlight class="comment">//<sp/>s2==0<sp/>&amp;&amp;<sp/>s3==0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i=0;<sp/>i&lt;3;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>&amp;<sp/>p1<sp/>=<sp/><ref refid="main_8cpp_1a978d88b393c8a37dc2614c88788b3442" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">t</ref>[i];</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>&amp;<sp/>p2<sp/>=<sp/><ref refid="main_8cpp_1a978d88b393c8a37dc2614c88788b3442" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">t</ref>[(i+1)<sp/>%<sp/>3];</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/><ref refid="namespacegeo_1a9a0dbf832181a41dcccf8d73d585dc9c" kindref="member">side_product</ref>(line,<sp/><ref refid="classgeo_1_1LineSegment" kindref="compound">geo::LS</ref>(p2,<sp/>p3));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3<sp/>=<sp/><ref refid="namespacegeo_1a9a0dbf832181a41dcccf8d73d585dc9c" kindref="member">side_product</ref>(line,<sp/><ref refid="classgeo_1_1LineSegment" kindref="compound">geo::LS</ref>(p3,<sp/>p1));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s2*s3<sp/>&gt;=<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>s2<sp/>and<sp/>s3<sp/>have<sp/>the<sp/>same<sp/>sign<sp/>and<sp/>are<sp/>non<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i=0;<sp/>i&lt;3;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>&amp;<sp/>v1<sp/>=<sp/><ref refid="main_8cpp_1a978d88b393c8a37dc2614c88788b3442" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">t</ref>[i];</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>&amp;<sp/>v2<sp/>=<sp/><ref refid="main_8cpp_1a978d88b393c8a37dc2614c88788b3442" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">t</ref>[(i+1)<sp/>%<sp/>3];</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacegeo_1ab6752d25a6356f90943d4f4e62e9a44c" kindref="member">line_linesegment_intersection</ref>(line,<sp/><ref refid="classgeo_1_1LineSegment" kindref="compound">geo::LS</ref>(v1,<sp/>v2),<sp/>p3))<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/><ref refid="classgeo_1_1Shape_1a1a807ae1f21eafc3580a250805275d5b" kindref="member">Shape::TYPE</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mesh&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="classgeo_1_1Shape_1a8094a10b0bbca152bd8d0da08f255c9e" refkind="member"><highlight class="normal"><ref refid="classgeo_1_1Shape_1a8094a10b0bbca152bd8d0da08f255c9e" kindref="member">Shape::Shape</ref>()<sp/>:<sp/>mesh_(),<sp/>bounding_box_cache_valid_(false)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="classgeo_1_1Shape_1a1e857e24797a6007ddeb8fb280ff7366" refkind="member"><highlight class="normal"><ref refid="classgeo_1_1Shape_1a1e857e24797a6007ddeb8fb280ff7366" kindref="member">Shape::~Shape</ref>()<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="classgeo_1_1Shape_1ab6819adb192ee12c2032bd13fabb2c83" refkind="member"><highlight class="normal"><ref refid="classgeo_1_1Shape" kindref="compound">Shape</ref>*<sp/><ref refid="classgeo_1_1Shape_1ab6819adb192ee12c2032bd13fabb2c83" kindref="member">Shape::clone</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Shape_1a8094a10b0bbca152bd8d0da08f255c9e" kindref="member">Shape</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="classgeo_1_1Shape_1a1ac12f892c823caf90f7555e1fb98c62" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Shape_1a1ac12f892c823caf90f7555e1fb98c62" kindref="member">Shape::intersect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Ray" kindref="compound">Ray</ref>&amp;<sp/></highlight><highlight class="comment">/*r*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*t0*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*t1*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/></highlight><highlight class="comment">/*distance*/</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="cpp/error/logic_error" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::logic_error</ref>(</highlight><highlight class="stringliteral">&quot;intersect(Ray,<sp/>float,<sp/>float,<sp/>double)<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="classgeo_1_1Shape_1a3ba8194d47f9c6b31543ce22ac7778f0" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Shape_1a1ac12f892c823caf90f7555e1fb98c62" kindref="member">Shape::intersect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref>&amp;<sp/>p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>radius)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh<sp/>=<sp/><ref refid="classgeo_1_1Shape_1a8b5d477a7a1fd6b6e6e41e824b2feee9" kindref="member">getMesh</ref>();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.<ref refid="classgeo_1_1Vector3_1ac0ffb0cba0b367509dd802695e17f473" kindref="member">length</ref>()-radius<sp/>&gt;<sp/>mesh.<ref refid="classgeo_1_1Mesh_1a1a04f717499af553543fc0a2a41e02a5" kindref="member">getMaxRadius</ref>())<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(radius<sp/>&gt;<sp/>0.)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>radius2<sp/>=<sp/>radius*radius;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>triangles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;geo::Vector3&gt;</ref>&amp;<sp/>t_points<sp/>=<sp/>mesh.<ref refid="classgeo_1_1Mesh_1a18c581a9ccba6a0c310e3ff5360b4ef2" kindref="member">getPoints</ref>();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;TriangleI&gt;</ref>&amp;<sp/>triangles_i<sp/>=<sp/>mesh.<ref refid="classgeo_1_1Mesh_1a46ff93142759a667da417eb9a9087863" kindref="member">getTriangleIs</ref>();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;TriangleI&gt;::const_iterator</ref><sp/>it<sp/>=<sp/>triangles_i.<ref refid="cpp/container/vector/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">cbegin</ref>();<sp/>it<sp/>!=<sp/>triangles_i.<ref refid="cpp/container/vector/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">cend</ref>();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref><sp/>&amp;v1<sp/>=<sp/>t_points[it-&gt;i1_];</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref><sp/>&amp;v2<sp/>=<sp/>t_points[it-&gt;i2_];</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref><sp/>&amp;v3<sp/>=<sp/>t_points[it-&gt;i3_];</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>endpoints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((v1-p).length2()<sp/>&lt;<sp/>radius2)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((v2-p).length2()<sp/>&lt;<sp/>radius2)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((v3-p).length2()<sp/>&lt;<sp/>radius2)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref><sp/>e1<sp/>=<sp/>v2<sp/>-<sp/>v1;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref><sp/>e2<sp/>=<sp/>v3<sp/>-<sp/>v2;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref><sp/>e3<sp/>=<sp/>v1<sp/>-<sp/>v3;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>line<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacegeo_1abea23ef1633c8f2e8c0f3fc1a5d9c4e5" kindref="member">check_linesegment</ref>(p,<sp/>radius2,<sp/>v1,<sp/>e1))</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacegeo_1abea23ef1633c8f2e8c0f3fc1a5d9c4e5" kindref="member">check_linesegment</ref>(p,<sp/>radius2,<sp/>v2,<sp/>e2))</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacegeo_1abea23ef1633c8f2e8c0f3fc1a5d9c4e5" kindref="member">check_linesegment</ref>(p,<sp/>radius2,<sp/>v3,<sp/>e3))</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>surface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref><sp/>n<sp/>=<sp/>e1.cross(e2);<sp/></highlight><highlight class="comment">//<sp/>normal<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>projected_distance2<sp/>=<sp/>(v1-p).dot(n);<sp/></highlight><highlight class="comment">//<sp/>projected_distance^2<sp/>=<sp/>((p-v1)<sp/>dot<sp/>n)^2<sp/>/<sp/>|n|^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>projected_distance2<sp/>=<sp/>projected_distance2<sp/>*<sp/>projected_distance2<sp/>/<sp/>n.<ref refid="classgeo_1_1Vector3_1ad9f7080519f688a286b720496cdf1c29" kindref="member">length2</ref>();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(projected_distance2<sp/>&gt;<sp/>radius2)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>projection<sp/>distance<sp/>is<sp/>too<sp/>big,<sp/>no<sp/>intersection<sp/>for<sp/>this<sp/>triangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>the<sp/>projection<sp/>falls<sp/>within<sp/>the<sp/>triangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref><sp/>q<sp/>=<sp/>p<sp/>-<sp/>sqrt(projected_distance2)<sp/>*<sp/>n.normalized();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref><sp/>cross1<sp/><sp/>=<sp/>e1.cross(q-v1);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref><sp/>cross2<sp/><sp/>=<sp/>e2.cross(q-v2);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref><sp/>cross3<sp/><sp/>=<sp/>e3.cross(q-v3);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dot1<sp/>=<sp/>cross1.<ref refid="classgeo_1_1Vector3_1aab55b8dfc106f76bfca102caa11d10ee" kindref="member">dot</ref>(cross2);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dot2<sp/>=<sp/>cross2.<ref refid="classgeo_1_1Vector3_1aab55b8dfc106f76bfca102caa11d10ee" kindref="member">dot</ref>(cross3);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dot3<sp/>=<sp/>cross3.<ref refid="classgeo_1_1Vector3_1aab55b8dfc106f76bfca102caa11d10ee" kindref="member">dot</ref>(cross1);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dot1<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>dot2<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>dot3<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Shape_1ae7769cb7528180ed71c1ef919d42cc37" kindref="member">contains</ref>(p);</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="classgeo_1_1Shape_1ae7769cb7528180ed71c1ef919d42cc37" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Shape_1ae7769cb7528180ed71c1ef919d42cc37" kindref="member">Shape::contains</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref>&amp;<sp/>p)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh<sp/>=<sp/><ref refid="classgeo_1_1Shape_1a8b5d477a7a1fd6b6e6e41e824b2feee9" kindref="member">getMesh</ref>();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.<ref refid="classgeo_1_1Vector3_1ad9f7080519f688a286b720496cdf1c29" kindref="member">length2</ref>()<sp/>&gt;<sp/>mesh.<ref refid="classgeo_1_1Mesh_1afd7923a3b1df18f294b38921e2c01233" kindref="member">getSquaredMaxRadius</ref>())<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intersect_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>plucker<sp/>coordinates<sp/>of<sp/>line<sp/>p</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref><sp/>p_out<sp/>=<sp/><ref refid="namespacegeo_1a73b9f6d6bb88a43cc6551f9822004080" kindref="member">Vector3</ref>(1.1<sp/>*<sp/>mesh.<ref refid="classgeo_1_1Mesh_1a1a04f717499af553543fc0a2a41e02a5" kindref="member">getMaxRadius</ref>(),<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1LineSegment" kindref="compound">geo::LS</ref><sp/>line(p,<sp/>p_out);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>hit<sp/>maps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map&lt;uint, std::map&lt;uint, int&gt;</ref>&gt;<sp/>edge_hit_map;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map&lt;uint, int&gt;</ref><sp/>vertex_hit_map;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>triangles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;geo::Vector3&gt;</ref>&amp;<sp/>t_points<sp/>=<sp/>mesh.<ref refid="classgeo_1_1Mesh_1a18c581a9ccba6a0c310e3ff5360b4ef2" kindref="member">getPoints</ref>();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;TriangleI&gt;</ref>&amp;<sp/>triangles_i<sp/>=<sp/>mesh.<ref refid="classgeo_1_1Mesh_1a46ff93142759a667da417eb9a9087863" kindref="member">getTriangleIs</ref>();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>triangles_i.<ref refid="cpp/container/vector/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">cbegin</ref>();<sp/>it<sp/>!=<sp/>triangles_i.<ref refid="cpp/container/vector/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">cend</ref>();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref><sp/>&amp;v1<sp/>=<sp/>t_points[it-&gt;i1_];</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref><sp/>&amp;v2<sp/>=<sp/>t_points[it-&gt;i2_];</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">Vector3</ref><sp/>&amp;v3<sp/>=<sp/>t_points[it-&gt;i3_];</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1LineSegment" kindref="compound">geo::LS</ref><sp/>e1(v1,<sp/>v2);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1LineSegment" kindref="compound">geo::LS</ref><sp/>e2(v2,<sp/>v3);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1LineSegment" kindref="compound">geo::LS</ref><sp/>e3(v3,<sp/>v1);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s1<sp/>=<sp/><ref refid="namespacegeo_1a9a0dbf832181a41dcccf8d73d585dc9c" kindref="member">side_product</ref>(line,<sp/>e1);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2<sp/>=<sp/><ref refid="namespacegeo_1a9a0dbf832181a41dcccf8d73d585dc9c" kindref="member">side_product</ref>(line,<sp/>e2);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3<sp/>=<sp/><ref refid="namespacegeo_1a9a0dbf832181a41dcccf8d73d585dc9c" kindref="member">side_product</ref>(line,<sp/>e3);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>whether<sp/>v1,<sp/>v2<sp/>and<sp/>v3<sp/>circle<sp/>line<sp/>p<sp/>(counter)<sp/>clockwise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clockwise<sp/>=<sp/>s1<sp/>&gt;=<sp/>-1e-16<sp/>&amp;&amp;<sp/>s2<sp/>&gt;=<sp/>-1e-16<sp/>&amp;&amp;<sp/>s3<sp/>&gt;=<sp/>-1e-16;<sp/></highlight><highlight class="comment">//<sp/>&gt;=0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ushort<sp/>clockwise_nz<sp/>=<sp/>(s1<sp/>&gt;<sp/>1e-16)<sp/>+<sp/>(s2<sp/>&gt;<sp/>1e-16)<sp/>+<sp/>(s3<sp/>&gt;<sp/>1e-16);<sp/></highlight><highlight class="comment">//<sp/>&gt;0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>counterclockwise<sp/>=<sp/>s1<sp/>&lt;=<sp/>1e-16<sp/>&amp;&amp;<sp/>s2<sp/>&lt;=<sp/>1e-16<sp/>&amp;&amp;<sp/>s3<sp/>&lt;=<sp/>1e-16;<sp/></highlight><highlight class="comment">//<sp/>&lt;=0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ushort<sp/>counterclockwise_nz<sp/>=<sp/>(s1<sp/>&lt;<sp/>-1e-16)<sp/>+<sp/>(s2<sp/>&lt;<sp/>-1e-16)<sp/>+<sp/>(s3<sp/>&lt;<sp/>-1e-16);<sp/></highlight><highlight class="comment">//<sp/>&lt;0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!clockwise<sp/>&amp;&amp;<sp/>!counterclockwise)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>intersection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONSOLE_BRIDGE_logDebug(</highlight><highlight class="stringliteral">&quot;No<sp/>intersection&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clockwise<sp/>&amp;&amp;<sp/>counterclockwise)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>s1=0;<sp/>s2=0;<sp/>s3=0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Coplanar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONSOLE_BRIDGE_logDebug(</highlight><highlight class="stringliteral">&quot;Coplanar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacegeo_1a8d9004d45b0ecfe83bbcd475319c382e" kindref="member">compute_2D_intersection</ref>(<ref refid="classgeo_1_1Triangle" kindref="compound">Triangle</ref>(v1,<sp/>v2,<sp/>v3),<sp/>line))<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONSOLE_BRIDGE_logDebug(</highlight><highlight class="stringliteral">&quot;Coplanar<sp/>in<sp/>the<sp/>triangle&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONSOLE_BRIDGE_logDebug(</highlight><highlight class="stringliteral">&quot;Coplanar<sp/>outside<sp/>the<sp/>triangle&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((clockwise<sp/>&amp;&amp;<sp/>clockwise_nz<sp/>&gt;<sp/>0)<sp/>||<sp/>(counterclockwise<sp/>&amp;&amp;<sp/>counterclockwise_nz<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3<sp/>same<sp/>sign<sp/>-&gt;<sp/>proper<sp/>intersection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>same<sp/>sign,<sp/>1<sp/>zero<sp/>-&gt;<sp/>intersection<sp/>on<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>zero,<sp/>1<sp/>non-zero<sp/>-&gt;<sp/>intersection<sp/>at<sp/>vertex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>check<sp/>whether<sp/>the<sp/>intersection<sp/>lies<sp/>in<sp/>the<sp/>line<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1LineSegment" kindref="compound">geo::LS</ref><sp/>l4(p_out,<sp/>v1);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1LineSegment" kindref="compound">geo::LS</ref><sp/>l5(v1,<sp/>p);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s4<sp/>=<sp/><ref refid="namespacegeo_1a9a0dbf832181a41dcccf8d73d585dc9c" kindref="member">side_product</ref>(l4,<sp/>e2);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s5<sp/>=<sp/><ref refid="namespacegeo_1a9a0dbf832181a41dcccf8d73d585dc9c" kindref="member">side_product</ref>(l5,<sp/>e2);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s4*s5&gt;=-1e-16)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>s4*s5<sp/>&gt;=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clockwise_nz<sp/>==<sp/>2<sp/>||<sp/>counterclockwise_nz<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Edge<sp/>intersection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONSOLE_BRIDGE_logDebug(</highlight><highlight class="stringliteral">&quot;Edge<sp/>intersection&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>i1,<sp/>i2;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(s1)<sp/>&lt;<sp/>1e-16)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i1<sp/>=<sp/>it-&gt;i1_;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2<sp/>=<sp/>it-&gt;i2_;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(s2)<sp/>&lt;<sp/>1e-16)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i1<sp/>=<sp/>it-&gt;i2_;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2<sp/>=<sp/>it-&gt;i3_;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>if<sp/>(std::abs(s3)<sp/>&lt;<sp/>1e-16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i1<sp/>=<sp/>it-&gt;i3_;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2<sp/>=<sp/>it-&gt;i1_;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint&amp;<sp/>i_min<sp/>=<sp/>i1,<sp/>i_max<sp/>=<sp/>i2;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i_max<sp/>&lt;<sp/>i_min)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/algorithm/swap" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::swap</ref>(i_min,<sp/>i_max);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs((p-t_points[i_min]).length()<sp/>+<sp/>(t_points[i_max]-p).length()<sp/>-<sp/>(t_points[i_max]-t_points[i_min]).length())<sp/>&lt;=<sp/>1e-12)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>For<sp/>numerical<sp/>issues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONSOLE_BRIDGE_logDebug(</highlight><highlight class="stringliteral">&quot;Point<sp/>is<sp/>on<sp/>an<sp/>edge<sp/>of<sp/>the<sp/>mesh&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>map<sp/>entries<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>search<sp/>=<sp/>edge_hit_map.<ref refid="cpp/container/map/find" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">find</ref>(i_min);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(search<sp/>==<sp/>edge_hit_map.<ref refid="cpp/container/map/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>())<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_hit_map[i_min]<sp/>=<sp/><ref refid="cpp/container/map" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::map&lt;uint, int&gt;</ref>();</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>search2<sp/>=<sp/>edge_hit_map[i_min].<ref refid="cpp/container/map/find" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">find</ref>(i_max-i_min-1);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(search2<sp/>==<sp/>edge_hit_map[i_min].end())<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_hit_map[i_min][i_max-i_min-1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>hit_entry<sp/>=<sp/>edge_hit_map[i_min][i_max-i_min-1];</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hit_entry<sp/>==<sp/>clockwise-counterclockwise)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>count<sp/>an<sp/>edge<sp/>multiple<sp/>times<sp/>with<sp/>the<sp/>same<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hit_entry<sp/>+=<sp/>clockwise-counterclockwise;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clockwise_nz<sp/>==<sp/>1<sp/>||<sp/>counterclockwise_nz<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vertex<sp/>intersection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONSOLE_BRIDGE_logDebug(</highlight><highlight class="stringliteral">&quot;Vertex<sp/>intersection&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vertex<sp/>intersection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>i;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(s2)<sp/>&gt;<sp/>1e-16)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>it-&gt;i1_;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(s3)<sp/>&gt;<sp/>1e-16)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>it-&gt;i2_;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(std::abs(s1)<sp/>&gt;<sp/>1e-16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>it-&gt;i3_;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t_points[i]<sp/>==<sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONSOLE_BRIDGE_logDebug(</highlight><highlight class="stringliteral">&quot;Point<sp/>is<sp/>a<sp/>vertex<sp/>of<sp/>the<sp/>mesh&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>map<sp/>entries<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>search<sp/>=<sp/>vertex_hit_map.<ref refid="cpp/container/map/find" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">find</ref>(i);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(search<sp/>==<sp/>vertex_hit_map.<ref refid="cpp/container/map/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>())<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_hit_map[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>hit_entry<sp/>=<sp/>vertex_hit_map[i];</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hit_entry<sp/>==<sp/>clockwise-counterclockwise)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>count<sp/>a<sp/>vertex<sp/>multiple<sp/>times<sp/>with<sp/>the<sp/>same<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hit_entry<sp/>+=<sp/>clockwise-counterclockwise;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Proper<sp/>intersection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONSOLE_BRIDGE_logDebug(</highlight><highlight class="stringliteral">&quot;Proper<sp/>intersection&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>https://www.geeksforgeeks.org/check-whether-a-given-point-lies-inside-a-triangle-or-not/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s<sp/>=<sp/><ref refid="namespacegeo_1a6c65e25c8f8ce392496e2cf2d30e2a10" kindref="member">geo::triangleArea</ref>(v1,<sp/>v2,<sp/>v3);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>&lt;<sp/>1e-12)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONSOLE_BRIDGE_logError(</highlight><highlight class="stringliteral">&quot;Triangle<sp/>has<sp/>a<sp/>zero<sp/>area&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s1<sp/>=<sp/><ref refid="namespacegeo_1a6c65e25c8f8ce392496e2cf2d30e2a10" kindref="member">geo::triangleArea</ref>(v2,<sp/>p,<sp/>v3);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2<sp/>=<sp/><ref refid="namespacegeo_1a6c65e25c8f8ce392496e2cf2d30e2a10" kindref="member">geo::triangleArea</ref>(p,<sp/>v1,<sp/>v3);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3<sp/>=<sp/><ref refid="namespacegeo_1a6c65e25c8f8ce392496e2cf2d30e2a10" kindref="member">geo::triangleArea</ref>(p,<sp/>v1,<sp/>v2);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(s1<sp/>+<sp/>s2<sp/>+<sp/>s3<sp/>-<sp/>s)<sp/>&lt;<sp/>1e-12)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONSOLE_BRIDGE_logDebug(</highlight><highlight class="stringliteral">&quot;Point<sp/>is<sp/>on<sp/>a<sp/>triangle&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>intersect<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intersect_count<sp/>+=<sp/>clockwise-counterclockwise;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(intersect_count<sp/>&lt;<sp/>0<sp/>||<sp/>intersect_count<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONSOLE_BRIDGE_logError(</highlight><highlight class="stringliteral">&quot;intersect_count<sp/>is<sp/>%i,<sp/>it<sp/>should<sp/>be<sp/>0<sp/>or<sp/>1!<sp/>Is<sp/>your<sp/>shape<sp/>constructed<sp/>correctly?&quot;</highlight><highlight class="normal">,<sp/>intersect_count);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>intersect_count<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="classgeo_1_1Shape_1ab05847f6e020356a637cf51882099c24" refkind="member"><highlight class="normal"><ref refid="classgeo_1_1Box" kindref="compound">Box</ref><sp/><ref refid="classgeo_1_1Shape_1ab05847f6e020356a637cf51882099c24" kindref="member">Shape::getBoundingBox</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classgeo_1_1Shape_1a1d6ae03b4a06eb3d86dd918c1a2a5a30" kindref="member">bounding_box_cache_valid_</ref>)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh<sp/>=<sp/><ref refid="classgeo_1_1Shape_1a8b5d477a7a1fd6b6e6e41e824b2feee9" kindref="member">getMesh</ref>();</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;geo::Vector3&gt;</ref>&amp;<sp/>points<sp/>=<sp/>mesh.<ref refid="classgeo_1_1Mesh_1a18c581a9ccba6a0c310e3ff5360b4ef2" kindref="member">getPoints</ref>();</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x_min<sp/>=<sp/>1e9,<sp/>y_min<sp/>=<sp/>1e9,<sp/>z_min<sp/>=<sp/>1e9;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x_max<sp/>=<sp/>-1e9,<sp/>y_max<sp/>=<sp/>-1e9,<sp/>z_max<sp/>=<sp/>-1e9;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>points.<ref refid="cpp/container/vector/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">cbegin</ref>();<sp/>it<sp/>!=<sp/>points.<ref refid="cpp/container/vector/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">cend</ref>();<sp/>++it)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_min<sp/>=<sp/>std::min&lt;double&gt;(it-&gt;x,<sp/>x_min);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_max<sp/>=<sp/>std::max&lt;double&gt;(it-&gt;x,<sp/>x_max);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_min<sp/>=<sp/>std::min&lt;double&gt;(it-&gt;y,<sp/>y_min);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_max<sp/>=<sp/>std::max&lt;double&gt;(it-&gt;y,<sp/>y_max);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_min<sp/>=<sp/>std::min&lt;double&gt;(it-&gt;z,<sp/>z_min);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_max<sp/>=<sp/>std::max&lt;double&gt;(it-&gt;z,<sp/>z_max);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Shape_1a20119d9bcc304168a5d536131f74bf63" kindref="member">bounding_box_min_cache_</ref><sp/>=<sp/><ref refid="namespacegeo_1a73b9f6d6bb88a43cc6551f9822004080" kindref="member">geo::Vector3</ref>(x_min,<sp/>y_min,<sp/>z_min);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Shape_1a9ff738ec054dd0577dc948609db42475" kindref="member">bounding_box_max_cache_</ref><sp/>=<sp/><ref refid="namespacegeo_1a73b9f6d6bb88a43cc6551f9822004080" kindref="member">geo::Vector3</ref>(x_max,<sp/>y_max,<sp/>z_max);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Shape_1a1d6ae03b4a06eb3d86dd918c1a2a5a30" kindref="member">bounding_box_cache_valid_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Box" kindref="compound">Box</ref>(<ref refid="classgeo_1_1Shape_1a20119d9bcc304168a5d536131f74bf63" kindref="member">bounding_box_min_cache_</ref>,<sp/><ref refid="classgeo_1_1Shape_1a9ff738ec054dd0577dc948609db42475" kindref="member">bounding_box_max_cache_</ref>);</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425" refid="classgeo_1_1Shape_1a8b5d477a7a1fd6b6e6e41e824b2feee9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Mesh" kindref="compound">Mesh</ref>&amp;<sp/><ref refid="classgeo_1_1Shape_1a8b5d477a7a1fd6b6e6e41e824b2feee9" kindref="member">Shape::getMesh</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Shape_1a786ce13699e5a9d8ac66aa59901532ab" kindref="member">mesh_</ref>;</highlight></codeline>
<codeline lineno="427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429" refid="classgeo_1_1Shape_1a50cedd1350ccef781c83c7812695eeb2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Shape_1a50cedd1350ccef781c83c7812695eeb2" kindref="member">Shape::setMesh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Shape_1a1d6ae03b4a06eb3d86dd918c1a2a5a30" kindref="member">bounding_box_cache_valid_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Shape_1a786ce13699e5a9d8ac66aa59901532ab" kindref="member">mesh_</ref><sp/>=<sp/>mesh;</highlight></codeline>
<codeline lineno="432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="classgeo_1_1Shape_1ab4ecd5a86b3dae9bd3f3108a2d9fa9d1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Shape_1ab4ecd5a86b3dae9bd3f3108a2d9fa9d1" kindref="member">Shape::getMaxRadius</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh<sp/>=<sp/><ref refid="classgeo_1_1Shape_1a8b5d477a7a1fd6b6e6e41e824b2feee9" kindref="member">getMesh</ref>();</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mesh.<ref refid="classgeo_1_1Mesh_1a1a04f717499af553543fc0a2a41e02a5" kindref="member">getMaxRadius</ref>();</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="classgeo_1_1Shape_1a606be4fca6978f0a60e792854e6c5afc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Shape_1a606be4fca6978f0a60e792854e6c5afc" kindref="member">Shape::write</ref>(<ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref>&amp;<sp/>output)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mesh<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>output.<ref refid="cpp/io/basic_ostream/write" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">write</ref>(type.<ref refid="cpp/string/basic_string/c_str" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">c_str</ref>(),<sp/>type.<ref refid="cpp/string/basic_string/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>());</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh<sp/>=<sp/><ref refid="classgeo_1_1Shape_1a8b5d477a7a1fd6b6e6e41e824b2feee9" kindref="member">getMesh</ref>();</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;geo::Vector3&gt;</ref>&amp;<sp/>points<sp/>=<sp/>mesh.<ref refid="classgeo_1_1Mesh_1a18c581a9ccba6a0c310e3ff5360b4ef2" kindref="member">getPoints</ref>();</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p_size<sp/>=<sp/>points.<ref refid="cpp/container/vector/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>output.<ref refid="cpp/io/basic_ostream/write" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">write</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;p_size,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p_size));</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;geo::Vector3&gt;::const_iterator</ref><sp/>it<sp/>=<sp/>points.<ref refid="cpp/container/vector/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>();<sp/>it<sp/>!=<sp/>points.<ref refid="cpp/container/vector/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>&amp;<sp/>v<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>v.<ref refid="classgeo_1_1Vector3_1a76c1080f7771ddba6188926a9a1f129c" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>v.<ref refid="classgeo_1_1Vector3_1aaf3667dc32f8d47f4c688c31a4f6cc7b" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>v.<ref refid="classgeo_1_1Vector3_1a33be4b901c043e52a5e6de937de4650e" kindref="member">z</ref>;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.<ref refid="cpp/io/basic_ostream/write" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">write</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;x,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(x));</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.<ref refid="cpp/io/basic_ostream/write" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">write</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;y,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(y));</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.<ref refid="cpp/io/basic_ostream/write" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">write</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;z,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(z));</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;geo::TriangleI&gt;</ref><sp/>triangles<sp/>=<sp/>mesh.<ref refid="classgeo_1_1Mesh_1a46ff93142759a667da417eb9a9087863" kindref="member">getTriangleIs</ref>();</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t_size<sp/>=<sp/>triangles.<ref refid="cpp/container/vector/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>();</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>output.<ref refid="cpp/io/basic_ostream/write" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">write</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;t_size,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(t_size));</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;geo::TriangleI&gt;::const_iterator</ref><sp/>it<sp/>=<sp/>triangles.<ref refid="cpp/container/vector/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>();<sp/>it<sp/>!=<sp/>triangles.<ref refid="cpp/container/vector/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structgeo_1_1TriangleI" kindref="compound">geo::TriangleI</ref>&amp;<sp/><ref refid="main_8cpp_1a978d88b393c8a37dc2614c88788b3442" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">t</ref><sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.<ref refid="cpp/io/basic_ostream/write" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">write</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;<ref refid="main_8cpp_1a978d88b393c8a37dc2614c88788b3442" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">t</ref>.i1_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="main_8cpp_1a978d88b393c8a37dc2614c88788b3442" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">t</ref>.i1_));</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.<ref refid="cpp/io/basic_ostream/write" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">write</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;<ref refid="main_8cpp_1a978d88b393c8a37dc2614c88788b3442" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">t</ref>.i2_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="main_8cpp_1a978d88b393c8a37dc2614c88788b3442" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">t</ref>.i2_));</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.<ref refid="cpp/io/basic_ostream/write" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">write</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;<ref refid="main_8cpp_1a978d88b393c8a37dc2614c88788b3442" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">t</ref>.i3_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="main_8cpp_1a978d88b393c8a37dc2614c88788b3442" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">t</ref>.i3_));</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="classgeo_1_1Shape_1a78fdd351f1332234e258a98a115a25a0" refkind="member"><highlight class="normal"><ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">ShapePtr</ref><sp/><ref refid="classgeo_1_1Shape_1a78fdd351f1332234e258a98a115a25a0" kindref="member">Shape::read</ref>(<ref refid="cpp/io/basic_istream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::istream</ref>&amp;<sp/>input)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">ShapePtr</ref><sp/>shape(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Shape_1a8094a10b0bbca152bd8d0da08f255c9e" kindref="member">Shape</ref>());</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p_size;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>input.<ref refid="cpp/io/basic_istream/read" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">read</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;p_size,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p_size));</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>p_size;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/>y,<sp/>z;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input.<ref refid="cpp/io/basic_istream/read" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">read</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;x,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(x));</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input.<ref refid="cpp/io/basic_istream/read" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">read</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;y,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(y));</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input.<ref refid="cpp/io/basic_istream/read" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">read</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;z,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(z));</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape-&gt;mesh_.addPoint(x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t_size;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>input.<ref refid="cpp/io/basic_istream/read" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">read</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;t_size,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(t_size));</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>t_size;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i1,<sp/>i2,<sp/>i3;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input.<ref refid="cpp/io/basic_istream/read" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">read</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;i1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(i1));</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input.<ref refid="cpp/io/basic_istream/read" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">read</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;i2,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(i2));</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input.<ref refid="cpp/io/basic_istream/read" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">read</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;i3,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(i3));</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape-&gt;mesh_.addTriangle(i1,<sp/>i2,<sp/>i3);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shape;</highlight></codeline>
<codeline lineno="497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/Shape.cpp"/>
  </compounddef>
</doxygen>
