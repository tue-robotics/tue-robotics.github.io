<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="test__geolib_8cpp" kind="file" language="C++">
    <compoundname>test_geolib.cpp</compoundname>
    <includes refid="Octree_8h" local="no">geolib/Octree.h</includes>
    <includes refid="Box_8h" local="no">geolib/Box.h</includes>
    <includes refid="HeightMap_8h" local="no">geolib/HeightMap.h</includes>
    <includes refid="import_8h" local="no">geolib/io/import.h</includes>
    <includes refid="serialization_8h" local="no">geolib/serialization.h</includes>
    <includes refid="DepthCamera_8h" local="no">geolib/sensors/DepthCamera.h</includes>
    <includes refid="LaserRangeFinder_8h" local="no">geolib/sensors/LaserRangeFinder.h</includes>
    <includes local="no">profiling/Timer.h</includes>
    <includes local="no">opencv2/highgui/highgui.hpp</includes>
    <includes local="no">fstream</includes>
    <includes local="no">vector</includes>
    <incdepgraph>
      <node id="9">
        <label>vector</label>
        <link refid="cpp/header/vector" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="24">
        <label>sensor_msgs/CameraInfo.h</label>
      </node>
      <node id="27">
        <label>profiling/Timer.h</label>
        <link refid="Timer_8h.html" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags"/>
      </node>
      <node id="1">
        <label>test_geolib.cpp</label>
        <link refid="test__geolib_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>geolib/io/import.h</label>
        <link refid="import_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>opencv2/core/core.hpp</label>
      </node>
      <node id="5">
        <label>iostream</label>
        <link refid="cpp/header/iostream" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="7">
        <label>memory</label>
        <link refid="cpp/header/memory" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="19">
        <label>geolib/serialization.h</label>
        <link refid="serialization_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>fstream</label>
        <link refid="cpp/header/fstream" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="23">
        <label>image_geometry/pinhole_camera_model.h</label>
      </node>
      <node id="16">
        <label>geolib/HeightMap.h</label>
        <link refid="HeightMap_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>geolib/sensors/LaserRangeFinder.h</label>
        <link refid="LaserRangeFinder_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>map</label>
        <link refid="cpp/header/map" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="4">
        <label>geolib/math_types.h</label>
        <link refid="math__types_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>array</label>
        <link refid="cpp/header/array" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="26">
        <label>climits</label>
        <link refid="cpp/header/climits" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="11">
        <label>Mesh.h</label>
        <link refid="Mesh_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>Shape.h</label>
        <link refid="Shape_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>opencv2/highgui/highgui.hpp</label>
      </node>
      <node id="3">
        <label>datatypes.h</label>
        <link refid="datatypes_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>Ray.h</label>
        <link refid="Ray_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>geolib/sensors/DepthCamera.h</label>
        <link refid="DepthCamera_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>geolib/Box.h</label>
        <link refid="Box_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>OctreeNode.h</label>
        <link refid="OctreeNode_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>geolib/Octree.h</label>
        <link refid="Octree_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cmath</label>
        <link refid="cpp/header/cmath" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="17">
        <label>HeightMapNode.h</label>
        <link refid="HeightMapNode_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Triangle.h</label>
        <link refid="Triangle_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="test__geolib_8cpp_1a5354067fe9c2a468a2a8136f46f63f62" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double CANVAS_HEIGHT</definition>
        <argsstring></argsstring>
        <name>CANVAS_HEIGHT</name>
        <initializer>= 480</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/test_geolib.cpp" line="19" column="8" bodyfile="test/test_geolib.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__geolib_8cpp_1acc16f157f567a255fa6344952a8ee02d" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double CANVAS_WIDTH</definition>
        <argsstring></argsstring>
        <name>CANVAS_WIDTH</name>
        <initializer>= 640</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/test_geolib.cpp" line="18" column="8" bodyfile="test/test_geolib.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__geolib_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/test_geolib.cpp" line="91" column="5" bodyfile="test/test_geolib.cpp" bodystart="91" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="test__geolib_8cpp_1affe0ce089fe047d79cc6f042d9c08caf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double renderDepthCamera</definition>
        <argsstring>(cv::Mat &amp;image, const geo::Shape &amp;shape, bool show)</argsstring>
        <name>renderDepthCamera</name>
        <param>
          <type>cv::Mat &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1Shape" kindref="compound">geo::Shape</ref> &amp;</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>show</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/test_geolib.cpp" line="21" column="8" bodyfile="test/test_geolib.cpp" bodystart="21" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="test__geolib_8cpp_1aa83ebc8d02759dc1e3585fc05e5a2c9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double renderLRF</definition>
        <argsstring>(cv::Mat &amp;image, const geo::Shape &amp;shape, bool show)</argsstring>
        <name>renderLRF</name>
        <param>
          <type>cv::Mat &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1Shape" kindref="compound">geo::Shape</ref> &amp;</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>show</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test/test_geolib.cpp" line="52" column="8" bodyfile="test/test_geolib.cpp" bodystart="52" bodyend="88"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Octree_8h" kindref="compound">geolib/Octree.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Box_8h" kindref="compound">geolib/Box.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="HeightMap_8h" kindref="compound">geolib/HeightMap.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="import_8h" kindref="compound">geolib/io/import.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="serialization_8h" kindref="compound">geolib/serialization.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DepthCamera_8h" kindref="compound">geolib/sensors/DepthCamera.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="LaserRangeFinder_8h" kindref="compound">geolib/sensors/LaserRangeFinder.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Timer_8h.html" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">profiling/Timer.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/highgui/highgui.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cpp/header/fstream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">fstream</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cpp/header/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">vector</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="test__geolib_8cpp_1acc16f157f567a255fa6344952a8ee02d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="test__geolib_8cpp_1acc16f157f567a255fa6344952a8ee02d" kindref="member">CANVAS_WIDTH</ref><sp/>=<sp/>640;</highlight></codeline>
<codeline lineno="19" refid="test__geolib_8cpp_1a5354067fe9c2a468a2a8136f46f63f62" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="test__geolib_8cpp_1a5354067fe9c2a468a2a8136f46f63f62" kindref="member">CANVAS_HEIGHT</ref><sp/>=<sp/>480;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="test__geolib_8cpp_1affe0ce089fe047d79cc6f042d9c08caf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="test__geolib_8cpp_1affe0ce089fe047d79cc6f042d9c08caf" kindref="member">renderDepthCamera</ref>(cv::Mat&amp;<sp/>image,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Shape" kindref="compound">geo::Shape</ref>&amp;<sp/>shape,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>show)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1DepthCamera" kindref="compound">geo::DepthCamera</ref><sp/>cam(<ref refid="test__geolib_8cpp_1acc16f157f567a255fa6344952a8ee02d" kindref="member">CANVAS_WIDTH</ref>,<sp/><ref refid="test__geolib_8cpp_1a5354067fe9c2a468a2a8136f46f63f62" kindref="member">CANVAS_HEIGHT</ref>,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>554.2559327880068<sp/>*<sp/><ref refid="test__geolib_8cpp_1acc16f157f567a255fa6344952a8ee02d" kindref="member">CANVAS_WIDTH</ref><sp/>/<sp/>640,<sp/>554.2559327880068<sp/>*<sp/><ref refid="test__geolib_8cpp_1a5354067fe9c2a468a2a8136f46f63f62" kindref="member">CANVAS_HEIGHT</ref><sp/>/<sp/>480,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>320.5<sp/>*<sp/><ref refid="test__geolib_8cpp_1acc16f157f567a255fa6344952a8ee02d" kindref="member">CANVAS_WIDTH</ref><sp/>/<sp/>640,<sp/>240.5<sp/>*<sp/><ref refid="test__geolib_8cpp_1a5354067fe9c2a468a2a8136f46f63f62" kindref="member">CANVAS_HEIGHT</ref><sp/>/<sp/>480,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTimer" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">Timer</ref><sp/>timer;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>timer.<ref refid="classTimer_1a3a8b5272198d029779dc9302a54305a8" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">start</ref>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/>0;<sp/>angle<sp/>&lt;<sp/>6.283;<sp/>angle<sp/>+=<sp/>0.05)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(show)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image<sp/>=<sp/>cv::Mat(image.rows,<sp/>image.cols,<sp/>CV_32FC1,<sp/>0.0);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Transform3T" kindref="compound">geo::Pose3D</ref><sp/>pose(0,<sp/>-0.5,<sp/>-5,<sp/>-1.57,<sp/>angle,<sp/>0);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cam.<ref refid="classgeo_1_1DepthCamera_1af83b871df7d27ba9210ba24ef3788fe6" kindref="member">rasterize</ref>(shape,<sp/>pose,<sp/>image);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(show)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::imshow(</highlight><highlight class="stringliteral">&quot;visualization&quot;</highlight><highlight class="normal">,<sp/>image<sp/>/<sp/><sp/>10);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::waitKey(30);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++N;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>timer.<ref refid="classTimer_1ab4abf0aa5e3b0fafba2b6765cffdfe16" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">getElapsedTimeInMilliSec</ref>()<sp/>/<sp/>N;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="test__geolib_8cpp_1aa83ebc8d02759dc1e3585fc05e5a2c9e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="test__geolib_8cpp_1aa83ebc8d02759dc1e3585fc05e5a2c9e" kindref="member">renderLRF</ref>(cv::Mat&amp;<sp/>image,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Shape" kindref="compound">geo::Shape</ref>&amp;<sp/>shape,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>show)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1LaserRangeFinder" kindref="compound">geo::LaserRangeFinder</ref><sp/>lrf;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>lrf.<ref refid="classgeo_1_1LaserRangeFinder_1ab856ae850e86b31842c797347655d903" kindref="member">setAngleLimits</ref>(-2,<sp/>2);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>lrf.<ref refid="classgeo_1_1LaserRangeFinder_1a17d109053351a0764dd39d54b25d7b10" kindref="member">setNumBeams</ref>(1000);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>lrf.<ref refid="classgeo_1_1LaserRangeFinder_1a63508cd57690f3ec1668994aaca4c4fa" kindref="member">setRangeLimits</ref>(0,<sp/>10);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTimer" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">Timer</ref><sp/>timer;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>timer.<ref refid="classTimer_1a3a8b5272198d029779dc9302a54305a8" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">start</ref>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/>0;<sp/>angle<sp/>&lt;<sp/>6.283;<sp/>angle<sp/>+=<sp/>0.05)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Transform3T" kindref="compound">geo::Pose3D</ref><sp/>pose(5,<sp/>0,<sp/>-0.5,<sp/>-1.57,<sp/>0,<sp/>angle);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;double&gt;</ref><sp/>ranges;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lrf.<ref refid="classgeo_1_1LaserRangeFinder_1ad8f10c65dae48977785dc9d69c1a52b9" kindref="member">render</ref>(shape,<sp/><ref refid="classgeo_1_1Transform3T" kindref="compound">geo::Pose3D</ref>(0,<sp/>0,<sp/>0),<sp/>pose,<sp/>ranges);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(show)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image<sp/>=<sp/>cv::Mat(image.rows,<sp/>image.cols,<sp/>CV_32FC1,<sp/>0.0);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;double&gt;</ref>&amp;<sp/>angles<sp/>=<sp/>lrf.<ref refid="classgeo_1_1LaserRangeFinder_1a297e8574ec79d04ae489f72c73e1497a" kindref="member">getAngles</ref>();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>angles.<ref refid="cpp/container/vector/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref><sp/>p<sp/>=<sp/>lrf.<ref refid="classgeo_1_1LaserRangeFinder_1af07d231230206a3ce88d4c49901706bf" kindref="member">polarTo2D</ref>(angles[i],<sp/>ranges[i]);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>(p.<ref refid="classgeo_1_1Vector3_1a76c1080f7771ddba6188926a9a1f129c" kindref="member">x</ref><sp/>*<sp/>25)<sp/>+<sp/>image.cols<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>(p.<ref refid="classgeo_1_1Vector3_1aaf3667dc32f8d47f4c688c31a4f6cc7b" kindref="member">y</ref><sp/>*<sp/>25)<sp/>+<sp/>image.rows<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(y,<sp/>x)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::imshow(</highlight><highlight class="stringliteral">&quot;visualization&quot;</highlight><highlight class="normal">,<sp/>image);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::waitKey(30);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++N;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>timer.<ref refid="classTimer_1ab4abf0aa5e3b0fafba2b6765cffdfe16" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">getElapsedTimeInMilliSec</ref>()<sp/>/<sp/>N;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="test__geolib_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__geolib_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>geo::serialization::registerDeserializer&lt;geo::Shape&gt;();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">geo::ShapePtr</ref><sp/>mesh;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>filename<sp/>=<sp/>argv[1];</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale<sp/>=<sp/>atof(argv[2]);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>try<sp/>own<sp/>file<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh<sp/>=<sp/><ref refid="classgeo_1_1serialization_1ac4ac71ac1cfc774db62bfb40edcd5896" kindref="member">geo::serialization::fromFile</ref>(filename);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mesh)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>fails,<sp/>try<sp/>using<sp/>assimp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh<sp/>=<sp/><ref refid="namespacegeo_1_1io_1aeebde49456f745c12560c1957cc0fd4a" kindref="member">geo::io::readMeshFile</ref>(filename,<sp/>scale);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mesh)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>load<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>filename<sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1serialization_1a13bba313ac65235c7db32e9e6f47a6d0" kindref="member">geo::serialization::toFile</ref>(mesh,<sp/></highlight><highlight class="stringliteral">&quot;/tmp/test_geolib.geo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh<sp/>=<sp/><ref refid="classgeo_1_1serialization_1ac4ac71ac1cfc774db62bfb40edcd5896" kindref="member">geo::serialization::fromFile</ref>(</highlight><highlight class="stringliteral">&quot;/tmp/test_geolib.geo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Octree" kindref="compound">geo::Octree</ref><sp/>tree(10);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;geo::Vector3&gt;</ref><sp/>points;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>-5;<sp/>x<sp/>&lt;<sp/>5;<sp/>x<sp/>+=<sp/>0.5)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>-5;<sp/>y<sp/>&lt;<sp/>5;<sp/>y<sp/>+=<sp/>0.5)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>-5;<sp/>z<sp/>&lt;<sp/>5;<sp/>z<sp/>+=<sp/>0.5)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points.<ref refid="cpp/container/vector/push_back" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">push_back</ref>(<ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>(x,<sp/>y,<sp/>z));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTimer" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">Timer</ref><sp/>timer;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>timer.<ref refid="classTimer_1a3a8b5272198d029779dc9302a54305a8" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">start</ref>();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>points.<ref refid="cpp/container/vector/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tree.<ref refid="classgeo_1_1Octree_1a224578646b43630eace03bd3ba81febc" kindref="member">add</ref>(points[i]);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>timer.<ref refid="classTimer_1a63f0eb44b27402196590a03781515dba" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">stop</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Octree::add(Vector3):\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>timer.<ref refid="classTimer_1ab4abf0aa5e3b0fafba2b6765cffdfe16" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">getElapsedTimeInMilliSec</ref>()<sp/>/<sp/>points.<ref refid="cpp/container/vector/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ms&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Octree" kindref="compound">geo::Octree</ref><sp/>table(4);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>table.<ref refid="classgeo_1_1Octree_1aafb8853a09a39296ed85b78a0900d1c3" kindref="member">setResolution</ref>(0.1);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;True<sp/>resolution<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>res<sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>-0.8;<sp/>x<sp/>&lt;<sp/>0.8;<sp/>x<sp/>+=<sp/>res)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>-0.35;<sp/>y<sp/>&lt;<sp/>0.35;<sp/>y<sp/>+=<sp/>res)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table.<ref refid="classgeo_1_1Octree_1a224578646b43630eace03bd3ba81febc" kindref="member">add</ref>(<ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>(x,<sp/>y,<sp/>0.75));</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mx<sp/>=<sp/>-1;<sp/>mx<sp/>&lt;=<sp/>1;<sp/>mx<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>my<sp/>=<sp/>-1;<sp/>my<sp/>&lt;=<sp/>1;<sp/>my<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mx<sp/>!=<sp/>1<sp/>||<sp/>my<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>0.05;<sp/>z<sp/>&lt;<sp/>0.75;<sp/>z<sp/>+=<sp/>res)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table.<ref refid="classgeo_1_1Octree_1a224578646b43630eace03bd3ba81febc" kindref="member">add</ref>(<ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>(0.7<sp/>*<sp/>mx,<sp/>0.25<sp/>*<sp/>my,<sp/>z));</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distance;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Ray" kindref="compound">geo::Ray</ref><sp/>r(<ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>(0,<sp/>0,<sp/>5),<sp/><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>(0,<sp/>0,<sp/>-1));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>10000;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTimer" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">Timer</ref><sp/>timer2;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>timer2.<ref refid="classTimer_1a3a8b5272198d029779dc9302a54305a8" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">start</ref>();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table.<ref refid="classgeo_1_1Octree_1ac6f7ba9d9e45b056bf4c25d88da96dc1" kindref="member">intersect</ref>(r,<sp/>0,<sp/>10,<sp/>distance);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>timer2.<ref refid="classTimer_1a63f0eb44b27402196590a03781515dba" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">stop</ref>();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Octree::intersect(Ray):\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>timer2.<ref refid="classTimer_1ab4abf0aa5e3b0fafba2b6765cffdfe16" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">getElapsedTimeInMilliSec</ref>()<sp/>/<sp/>N<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ms&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Box" kindref="compound">geo::Box</ref><sp/><ref refid="test__profiler_8cpp_1aef0e399324ca7f46e7d0725e80db0985" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">b</ref>(<ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>(-0.5,<sp/>-0.5,<sp/>0.5),<sp/><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>(0.5,<sp/>0.5,<sp/>2));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>N<sp/>=<sp/>10000;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTimer" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">Timer</ref><sp/>timer3;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>timer3.<ref refid="classTimer_1a3a8b5272198d029779dc9302a54305a8" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">start</ref>();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table.<ref refid="classgeo_1_1Octree_1ac6f7ba9d9e45b056bf4c25d88da96dc1" kindref="member">intersect</ref>(<ref refid="test__profiler_8cpp_1aef0e399324ca7f46e7d0725e80db0985" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">b</ref>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>timer3.<ref refid="classTimer_1a63f0eb44b27402196590a03781515dba" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">stop</ref>();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Octree::intersect(Box):\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>timer3.<ref refid="classTimer_1ab4abf0aa5e3b0fafba2b6765cffdfe16" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">getElapsedTimeInMilliSec</ref>()<sp/>/<sp/>N<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ms&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>RAYTRACING<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>tree.<ref refid="classgeo_1_1Octree_1a9183c3fd288f29bee91032d113d511cc" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;geo::Ray&gt;</ref><sp/>rays;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>-2;<sp/>y<sp/>&lt;<sp/>2;<sp/>y<sp/>+=<sp/>tree.<ref refid="classgeo_1_1Octree_1a1fb9772c2853df62399a37fe9d223f31" kindref="member">getResolution</ref>())<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>-2;<sp/>x<sp/>&lt;<sp/>2;<sp/>x<sp/>+=<sp/>tree.<ref refid="classgeo_1_1Octree_1a1fb9772c2853df62399a37fe9d223f31" kindref="member">getResolution</ref>())<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Ray" kindref="compound">geo::Ray</ref><sp/>r(<ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>(x,<sp/>y,<sp/>5),<sp/><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>(0,<sp/>0,<sp/>-1));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="classgeo_1_1Ray_1a7c940d7f5518e44428b2c6267cf63133" kindref="member">setLength</ref>(5<sp/>-<sp/>x<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rays.<ref refid="cpp/container/vector/push_back" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">push_back</ref>(r);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTimer" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">Timer</ref><sp/>timer4;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>timer4.<ref refid="classTimer_1a3a8b5272198d029779dc9302a54305a8" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">start</ref>();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;geo::Ray&gt;::iterator</ref><sp/>it<sp/>=<sp/>rays.<ref refid="cpp/container/vector/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>();<sp/>it<sp/>!=<sp/>rays.<ref refid="cpp/container/vector/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tree.<ref refid="classgeo_1_1Octree_1a20e40f4a0a5c74ba10d632c0140cff8d" kindref="member">raytrace</ref>(*it,<sp/>0,<sp/>it-&gt;getLength());</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>timer4.<ref refid="classTimer_1a63f0eb44b27402196590a03781515dba" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">stop</ref>();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Octree::raytrace(Ray):\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>timer4.<ref refid="classTimer_1ab4abf0aa5e3b0fafba2b6765cffdfe16" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">getElapsedTimeInMilliSec</ref>()<sp/>/<sp/>rays.<ref refid="cpp/container/vector/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ms&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>rays.<ref refid="cpp/container/vector/clear" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">clear</ref>();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>-2;<sp/>y<sp/>&lt;<sp/>2;<sp/>y<sp/>+=<sp/>tree.<ref refid="classgeo_1_1Octree_1a1fb9772c2853df62399a37fe9d223f31" kindref="member">getResolution</ref>()*2)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>-2;<sp/>x<sp/>&lt;<sp/>2;<sp/>x<sp/>+=<sp/>tree.<ref refid="classgeo_1_1Octree_1a1fb9772c2853df62399a37fe9d223f31" kindref="member">getResolution</ref>()*2)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Ray" kindref="compound">geo::Ray</ref><sp/>r(<ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>(x,<sp/>y,<sp/>5),<sp/><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>(0,<sp/>0,<sp/>-1));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="classgeo_1_1Ray_1a7c940d7f5518e44428b2c6267cf63133" kindref="member">setLength</ref>(5<sp/>-<sp/>y<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rays.<ref refid="cpp/container/vector/push_back" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">push_back</ref>(r);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTimer" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">Timer</ref><sp/>timer5;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>timer5.<ref refid="classTimer_1a3a8b5272198d029779dc9302a54305a8" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">start</ref>();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;geo::Ray&gt;::iterator</ref><sp/>it<sp/>=<sp/>rays.<ref refid="cpp/container/vector/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>();<sp/>it<sp/>!=<sp/>rays.<ref refid="cpp/container/vector/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tree.<ref refid="classgeo_1_1Octree_1a20e40f4a0a5c74ba10d632c0140cff8d" kindref="member">raytrace</ref>(*it,<sp/>0,<sp/>it-&gt;getLength());</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>timer5.<ref refid="classTimer_1a63f0eb44b27402196590a03781515dba" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">stop</ref>();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Octree::raytrace(Ray):\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>timer5.<ref refid="classTimer_1ab4abf0aa5e3b0fafba2b6765cffdfe16" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">getElapsedTimeInMilliSec</ref>()<sp/>/<sp/>rays.<ref refid="cpp/container/vector/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ms&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Octree" kindref="compound">geo::Octree</ref><sp/>axis(2);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>res2<sp/>=<sp/>table.<ref refid="classgeo_1_1Octree_1aafb8853a09a39296ed85b78a0900d1c3" kindref="member">setResolution</ref>(0.1);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>0;<sp/>v<sp/>&lt;<sp/>1;<sp/>v<sp/>+=<sp/>res2)<sp/>{<sp/>axis.<ref refid="classgeo_1_1Octree_1a224578646b43630eace03bd3ba81febc" kindref="member">add</ref>(<ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>(v,<sp/>0,<sp/>0));<sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>0;<sp/>v<sp/>&lt;<sp/>1;<sp/>v<sp/>+=<sp/>res2<sp/>*<sp/>2)<sp/>{<sp/>axis.<ref refid="classgeo_1_1Octree_1a224578646b43630eace03bd3ba81febc" kindref="member">add</ref>(<ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>(0,<sp/>v,<sp/>0));<sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>0;<sp/>v<sp/>&lt;<sp/>1;<sp/>v<sp/>+=<sp/>res2<sp/>*<sp/>4)<sp/>{<sp/>axis.<ref refid="classgeo_1_1Octree_1a224578646b43630eace03bd3ba81febc" kindref="member">add</ref>(<ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>(0,<sp/>0,<sp/>v));<sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>image<sp/>=<sp/>cv::Mat(<ref refid="test__geolib_8cpp_1a5354067fe9c2a468a2a8136f46f63f62" kindref="member">CANVAS_HEIGHT</ref>,<sp/><ref refid="test__geolib_8cpp_1acc16f157f567a255fa6344952a8ee02d" kindref="member">CANVAS_WIDTH</ref>,<sp/>CV_32FC1,<sp/>0.0);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>DepthCamera<sp/>cam;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cam.render(Box(Vector3(-2,<sp/>-5,<sp/>-5),<sp/>Vector3(2,<sp/>5,<sp/>5)),<sp/>Pose3D(-2.82,<sp/>0,<sp/>1.82,<sp/>0,<sp/>0.5,<sp/>0),<sp/>image);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Box" kindref="compound">geo::Box</ref><sp/>shape(<ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>(-0.3,<sp/>-0.5,<sp/>-0.5),<sp/><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>(0.3,<sp/>0.5,<sp/>0.5));</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;DepthCamera::raytrace(box):\t&quot;<sp/>&lt;&lt;<sp/>render(image,<sp/>shape,<sp/>false,<sp/>false)<sp/>&lt;&lt;<sp/>&quot;<sp/>ms&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>height<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hmap_size<sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;std::vector&lt;double&gt;</ref><sp/>&gt;<sp/>map(hmap_size);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mx<sp/>=<sp/>0;<sp/>mx<sp/>&lt;<sp/>hmap_size;<sp/>++mx)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map[mx].<ref refid="cpp/container/vector/resize" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">resize</ref>(hmap_size,<sp/>0);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>hmap_size<sp/>/<sp/>2;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>hmap_size<sp/>-<sp/>j<sp/>*<sp/>2;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>0.1<sp/>*<sp/>j;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(j<sp/>&gt;<sp/>0)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map[i+j][j]<sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map[i+j][hmap_size-j-1]<sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map[j][i+j]<sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map[hmap_size-j-1][i+j]<sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1HeightMap" kindref="compound">geo::HeightMap</ref><sp/>hmap<sp/>=<sp/><ref refid="classgeo_1_1HeightMap_1a6e3ae1d812c09a1b9ca2452222bd26f1" kindref="member">geo::HeightMap::fromGrid</ref>(map,<sp/>0.1);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Box" kindref="compound">geo::Box</ref><sp/>plane(<ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>(-10,<sp/>-10,<sp/>-0.1),<sp/><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>(10,<sp/>10,<sp/>0));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DepthCamera::rasterize(box):\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="test__geolib_8cpp_1affe0ce089fe047d79cc6f042d9c08caf" kindref="member">renderDepthCamera</ref>(image,<sp/>shape,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ms&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DepthCamera::rasterize(table):\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="test__geolib_8cpp_1affe0ce089fe047d79cc6f042d9c08caf" kindref="member">renderDepthCamera</ref>(image,<sp/>table,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ms&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DepthCamera::rasterize(heightmap):\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="test__geolib_8cpp_1affe0ce089fe047d79cc6f042d9c08caf" kindref="member">renderDepthCamera</ref>(image,<sp/>hmap,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ms&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;DepthCamera::rasterize(abstract_shape):\t&quot;<sp/>&lt;&lt;<sp/>renderDepthCamera(image,<sp/>tree,<sp/>true,<sp/>false)<sp/>&lt;&lt;<sp/>&quot;<sp/>ms&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DepthCamera::rasterize(input_mesh):\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="test__geolib_8cpp_1affe0ce089fe047d79cc6f042d9c08caf" kindref="member">renderDepthCamera</ref>(image,<sp/>*mesh,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ms&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;LaserRangeFinder::render(box):\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="test__geolib_8cpp_1aa83ebc8d02759dc1e3585fc05e5a2c9e" kindref="member">renderLRF</ref>(image,<sp/>shape,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ms&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;LaserRangeFinder::render(table):\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="test__geolib_8cpp_1aa83ebc8d02759dc1e3585fc05e5a2c9e" kindref="member">renderLRF</ref>(image,<sp/>table,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ms&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;LaserRangeFinder::render(heightmap):\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="test__geolib_8cpp_1aa83ebc8d02759dc1e3585fc05e5a2c9e" kindref="member">renderLRF</ref>(image,<sp/>hmap,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ms&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;DepthCamera::rasterize(abstract_shape):\t&quot;<sp/>&lt;&lt;<sp/>renderLRF(image,<sp/>tree,<sp/>true,<sp/>false)<sp/>&lt;&lt;<sp/>&quot;<sp/>ms&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;LaserRangeFinder::rasterize(input_mesh):\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="test__geolib_8cpp_1aa83ebc8d02759dc1e3585fc05e5a2c9e" kindref="member">renderLRF</ref>(image,<sp/>*mesh,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ms&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cpp/io/manip/endl" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::endl</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1DepthCamera" kindref="compound">geo::DepthCamera</ref><sp/>cam(<ref refid="test__geolib_8cpp_1acc16f157f567a255fa6344952a8ee02d" kindref="member">CANVAS_WIDTH</ref>,<sp/><ref refid="test__geolib_8cpp_1a5354067fe9c2a468a2a8136f46f63f62" kindref="member">CANVAS_HEIGHT</ref>,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>554.2559327880068<sp/>*<sp/><ref refid="test__geolib_8cpp_1acc16f157f567a255fa6344952a8ee02d" kindref="member">CANVAS_WIDTH</ref><sp/>/<sp/>640,<sp/>554.2559327880068<sp/>*<sp/><ref refid="test__geolib_8cpp_1a5354067fe9c2a468a2a8136f46f63f62" kindref="member">CANVAS_HEIGHT</ref><sp/>/<sp/>480,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>320.5<sp/>*<sp/><ref refid="test__geolib_8cpp_1acc16f157f567a255fa6344952a8ee02d" kindref="member">CANVAS_WIDTH</ref><sp/>/<sp/>640,<sp/>240.5<sp/>*<sp/><ref refid="test__geolib_8cpp_1a5354067fe9c2a468a2a8136f46f63f62" kindref="member">CANVAS_HEIGHT</ref><sp/>/<sp/>480,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1LaserRangeFinder" kindref="compound">geo::LaserRangeFinder</ref><sp/>lrf;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>lrf.<ref refid="classgeo_1_1LaserRangeFinder_1ab856ae850e86b31842c797347655d903" kindref="member">setAngleLimits</ref>(-2.3,<sp/>2.3);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>lrf.<ref refid="classgeo_1_1LaserRangeFinder_1a17d109053351a0764dd39d54b25d7b10" kindref="member">setNumBeams</ref>(1000);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>lrf.<ref refid="classgeo_1_1LaserRangeFinder_1a63508cd57690f3ec1668994aaca4c4fa" kindref="member">setRangeLimits</ref>(0,<sp/>10);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>display_image(<ref refid="test__geolib_8cpp_1a5354067fe9c2a468a2a8136f46f63f62" kindref="member">CANVAS_HEIGHT</ref>,<sp/><ref refid="test__geolib_8cpp_1acc16f157f567a255fa6344952a8ee02d" kindref="member">CANVAS_WIDTH</ref><sp/>*<sp/>2,<sp/>CV_32FC1,<sp/>0.0);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Shape" kindref="compound">geo::Shape</ref>*<sp/>shape1<sp/>=<sp/>&amp;hmap;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape1<sp/>=<sp/>mesh.<ref refid="cpp/memory/shared_ptr/get" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">get</ref>();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Transform3T" kindref="compound">geo::Pose3D</ref><sp/>pose1(5,<sp/>1,<sp/>-0.5,<sp/>0,<sp/>0,<sp/>angle);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Shape" kindref="compound">geo::Shape</ref>&amp;<sp/>shape2<sp/>=<sp/>shape;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgeo_1_1Transform3T" kindref="compound">geo::Pose3D</ref><sp/>pose2(5,<sp/>2,<sp/>-0.5,<sp/>0,<sp/>0.3,<sp/>angle);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>DEPTH<sp/>CAMERA<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Mat<sp/>depth_image<sp/>=<sp/>cv::Mat(<ref refid="test__geolib_8cpp_1a5354067fe9c2a468a2a8136f46f63f62" kindref="member">CANVAS_HEIGHT</ref>,<sp/><ref refid="test__geolib_8cpp_1acc16f157f567a255fa6344952a8ee02d" kindref="member">CANVAS_WIDTH</ref>,<sp/>CV_32FC1,<sp/>0.0);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cam.<ref refid="classgeo_1_1DepthCamera_1af83b871df7d27ba9210ba24ef3788fe6" kindref="member">rasterize</ref>(*shape1,<sp/><ref refid="classgeo_1_1Transform3T" kindref="compound">geo::Pose3D</ref>(0,<sp/>0,<sp/>0,<sp/>1.57,<sp/>0,<sp/>-1.57),<sp/>pose1,<sp/>depth_image);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cam.<ref refid="classgeo_1_1DepthCamera_1af83b871df7d27ba9210ba24ef3788fe6" kindref="member">rasterize</ref>(shape2,<sp/><ref refid="classgeo_1_1Transform3T" kindref="compound">geo::Pose3D</ref>(0,<sp/>0,<sp/>0,<sp/>1.57,<sp/>0,<sp/>-1.57),<sp/>pose2,<sp/>depth_image);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Mat<sp/>depth_image2<sp/>=<sp/>depth_image<sp/>/<sp/>8;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Mat<sp/>destinationROI<sp/>=<sp/>display_image(cv::Rect(cv::Point(0,<sp/>0),<sp/>cv::Size(<ref refid="test__geolib_8cpp_1acc16f157f567a255fa6344952a8ee02d" kindref="member">CANVAS_WIDTH</ref>,<sp/><ref refid="test__geolib_8cpp_1a5354067fe9c2a468a2a8136f46f63f62" kindref="member">CANVAS_HEIGHT</ref>)));</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>depth_image2.copyTo(destinationROI);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>LRF<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;double&gt;</ref><sp/>ranges;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lrf.<ref refid="classgeo_1_1LaserRangeFinder_1ad8f10c65dae48977785dc9d69c1a52b9" kindref="member">render</ref>(*shape1,<sp/><ref refid="classgeo_1_1Transform3T" kindref="compound">geo::Pose3D</ref>(0,<sp/>0,<sp/>0),<sp/>pose1,<sp/>ranges);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lrf.<ref refid="classgeo_1_1LaserRangeFinder_1ad8f10c65dae48977785dc9d69c1a52b9" kindref="member">render</ref>(shape2,<sp/><ref refid="classgeo_1_1Transform3T" kindref="compound">geo::Pose3D</ref>(0,<sp/>0,<sp/>0),<sp/>pose2,<sp/>ranges);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lrf.<ref refid="classgeo_1_1LaserRangeFinder_1ad8f10c65dae48977785dc9d69c1a52b9" kindref="member">render</ref>(<ref refid="classgeo_1_1Box" kindref="compound">geo::Box</ref>(<ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>(-0.5,<sp/>-3.5,<sp/>-0.5),<sp/><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>(0.5,<sp/>3.5,<sp/>0.5)),<sp/><ref refid="classgeo_1_1Transform3T" kindref="compound">geo::Pose3D</ref>(0,<sp/>0,<sp/>0),<sp/><ref refid="classgeo_1_1Transform3T" kindref="compound">geo::Pose3D</ref>(-2,<sp/>0,<sp/>0),<sp/>ranges);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Mat<sp/>lrf_image<sp/>=<sp/>cv::Mat(<ref refid="test__geolib_8cpp_1a5354067fe9c2a468a2a8136f46f63f62" kindref="member">CANVAS_HEIGHT</ref>,<sp/><ref refid="test__geolib_8cpp_1acc16f157f567a255fa6344952a8ee02d" kindref="member">CANVAS_WIDTH</ref>,<sp/>CV_32FC1,<sp/>0.0);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;geo::Vector3&gt;</ref><sp/>points;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lrf.<ref refid="classgeo_1_1LaserRangeFinder_1a09583367efcdd8998f9b6d347e1d40e5" kindref="member">rangesToPoints</ref>(ranges,<sp/>points))<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>points.<ref refid="cpp/container/vector/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgeo_1_1Vector3" kindref="compound">geo::Vector3</ref>&amp;<sp/>p<sp/>=<sp/>points[i];</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>(-p.<ref refid="classgeo_1_1Vector3_1aaf3667dc32f8d47f4c688c31a4f6cc7b" kindref="member">y</ref><sp/>*<sp/>25)<sp/>+<sp/>image.cols<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>(-p.<ref refid="classgeo_1_1Vector3_1a76c1080f7771ddba6188926a9a1f129c" kindref="member">x</ref><sp/>*<sp/>25)<sp/>+<sp/>image.rows<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>y<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>image.cols<sp/>&amp;&amp;<sp/>y<sp/>&lt;<sp/>image.rows)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lrf_image.<ref refid="cpp/container/vector/at" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">at</ref>&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(y,<sp/>x)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Mat<sp/>destinationROI2<sp/>=<sp/>display_image(cv::Rect(cv::Point(<ref refid="test__geolib_8cpp_1acc16f157f567a255fa6344952a8ee02d" kindref="member">CANVAS_WIDTH</ref>,<sp/>0),<sp/>cv::Size(<ref refid="test__geolib_8cpp_1acc16f157f567a255fa6344952a8ee02d" kindref="member">CANVAS_WIDTH</ref>,<sp/><ref refid="test__geolib_8cpp_1a5354067fe9c2a468a2a8136f46f63f62" kindref="member">CANVAS_HEIGHT</ref>)));</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lrf_image.copyTo(destinationROI2);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::imshow(</highlight><highlight class="stringliteral">&quot;visualization&quot;</highlight><highlight class="normal">,<sp/>display_image);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angle<sp/>+=<sp/>0.05;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>key<sp/>=<sp/>cv::waitKey(3);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key<sp/>==<sp/></highlight><highlight class="charliteral">&apos;q&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="test/test_geolib.cpp"/>
  </compounddef>
</doxygen>
