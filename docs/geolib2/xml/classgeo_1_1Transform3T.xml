<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classgeo_1_1Transform3T" kind="class" language="C++" prot="public">
    <compoundname>geo::Transform3T</compoundname>
    <includes refid="math__types_8h" local="no">math_types.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classgeo_1_1Transform3T_1ae4c3d14cc73485f238264bd4520a2821" prot="public" static="no" mutable="no">
        <type><ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref>&lt; T &gt;</type>
        <definition>Mat3T&lt;T&gt; geo::Transform3T&lt; T &gt;::R</definition>
        <argsstring></argsstring>
        <name>R</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="793" column="11" bodyfile="include/geolib/math_types.h" bodystart="793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Transform3T_1acbf09e22e135e0a54c5f275d263d383c" prot="public" static="no" mutable="no">
        <type><ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref>&lt; T &gt;</type>
        <definition>Vec3T&lt;T&gt; geo::Transform3T&lt; T &gt;::t</definition>
        <argsstring></argsstring>
        <name>t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="794" column="11" bodyfile="include/geolib/math_types.h" bodystart="794" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgeo_1_1Transform3T_1a9dcc73ff0000d1e47f74429d3a9efa79" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref>&lt; T &gt; &amp;</type>
        <definition>const Mat3T&lt;T&gt;&amp; geo::Transform3T&lt; T &gt;::getBasis</definition>
        <argsstring>() const</argsstring>
        <name>getBasis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="740" column="24" bodyfile="include/geolib/math_types.h" bodystart="740" bodyend="742"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform3T_1a26b48caa6b3da24a371c6f0397832170" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref>&lt; T &gt; &amp;</type>
        <definition>const Vec3T&lt;T&gt;&amp; geo::Transform3T&lt; T &gt;::getOrigin</definition>
        <argsstring>() const</argsstring>
        <name>getOrigin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="730" column="24" bodyfile="include/geolib/math_types.h" bodystart="730" bodyend="732"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform3T_1abb0b92e03424914b561b700cdf82cb4a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1QuaternionT" kindref="compound">QuaternionT</ref>&lt; T &gt;</type>
        <definition>QuaternionT&lt;T&gt; geo::Transform3T&lt; T &gt;::getQuaternion</definition>
        <argsstring>() const</argsstring>
        <name>getQuaternion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="734" column="17" bodyfile="include/geolib/math_types.h" bodystart="734" bodyend="738"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform3T_1a306ef7b581e706df8cf46f24986b6838" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::Transform3T&lt; T &gt;::getRPY</definition>
        <argsstring>(double &amp;roll, double &amp;pitch, double &amp;yaw) const</argsstring>
        <name>getRPY</name>
        <param>
          <type>double &amp;</type>
          <declname>roll</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>pitch</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>yaw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="756" column="10" bodyfile="include/geolib/math_types.h" bodystart="756" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform3T_1a65e46d839c833fa7999eb6e4bbc49681" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double geo::Transform3T&lt; T &gt;::getYaw</definition>
        <argsstring>() const</argsstring>
        <name>getYaw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="772" column="12" bodyfile="include/geolib/math_types.h" bodystart="772" bodyend="776"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform3T_1a4daef91f27c4a336e18c388638e27fa9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Transform3T" kindref="compound">Transform3T</ref></type>
        <definition>Transform3T geo::Transform3T&lt; T &gt;::inverse</definition>
        <argsstring>() const</argsstring>
        <name>inverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="747" column="24" bodyfile="include/geolib/math_types.h" bodystart="747" bodyend="750"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform3T_1aff4dc9c814c6cdd6183980ee33e0506f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Transform3T" kindref="compound">Transform3T</ref></type>
        <definition>Transform3T geo::Transform3T&lt; T &gt;::inverseTimes</definition>
        <argsstring>(const Transform3T &amp;tr) const</argsstring>
        <name>inverseTimes</name>
        <param>
          <type>const <ref refid="classgeo_1_1Transform3T" kindref="compound">Transform3T</ref> &amp;</type>
          <declname>tr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="725" column="24" bodyfile="include/geolib/math_types.h" bodystart="725" bodyend="728"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform3T_1a913d857e837ec459ebd94a38924ff2c6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool geo::Transform3T&lt; T &gt;::operator!=</definition>
        <argsstring>(const Transform3T &amp;tr) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classgeo_1_1Transform3T" kindref="compound">Transform3T</ref> &amp;</type>
          <declname>tr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="713" column="17" bodyfile="include/geolib/math_types.h" bodystart="713" bodyend="715"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform3T_1ac5467f80f342a000de0aefdbb8d6c763" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Transform3T" kindref="compound">Transform3T</ref></type>
        <definition>Transform3T geo::Transform3T&lt; T &gt;::operator*</definition>
        <argsstring>(const Transform3T &amp;tr) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classgeo_1_1Transform3T" kindref="compound">Transform3T</ref> &amp;</type>
          <declname>tr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="721" column="24" bodyfile="include/geolib/math_types.h" bodystart="721" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform3T_1a60e89cfa264b83080690cd38c539b91d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref>&lt; T &gt;</type>
        <definition>Vec3T&lt;T&gt; geo::Transform3T&lt; T &gt;::operator*</definition>
        <argsstring>(const Vec3T&lt; T &gt; &amp;v) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="717" column="18" bodyfile="include/geolib/math_types.h" bodystart="717" bodyend="719"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform3T_1a8fa2bbad5c508027f1f41d9ad7498c64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Transform3T" kindref="compound">Transform3T</ref> &amp;</type>
        <definition>Transform3T&amp; geo::Transform3T&lt; T &gt;::operator=</definition>
        <argsstring>(const Transform3T &amp;tr)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classgeo_1_1Transform3T" kindref="compound">Transform3T</ref> &amp;</type>
          <declname>tr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="701" column="17" bodyfile="include/geolib/math_types.h" bodystart="701" bodyend="707"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform3T_1abf3b3d977a9921d289759b490de6a968" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool geo::Transform3T&lt; T &gt;::operator==</definition>
        <argsstring>(const Transform3T &amp;tr) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classgeo_1_1Transform3T" kindref="compound">Transform3T</ref> &amp;</type>
          <declname>tr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="709" column="17" bodyfile="include/geolib/math_types.h" bodystart="709" bodyend="711"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform3T_1a57186a12e9cc570e7cdfbf03c5b1fab2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Transform2T" kindref="compound">Transform2T</ref>&lt; T &gt;</type>
        <definition>Transform2T&lt;T&gt; geo::Transform3T&lt; T &gt;::projectTo2d</definition>
        <argsstring>() const</argsstring>
        <name>projectTo2d</name>
        <briefdescription>
<para>Drops displacement and rotation fo the 3rd coordinate. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classgeo_1_1Transform" kindref="compound">Transform</ref> in 2D </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="784" column="17" bodyfile="include/geolib/math_types.h" bodystart="784" bodyend="786"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform3T_1a1de8a9b04f1af2a1c10b579e31b862ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::Transform3T&lt; T &gt;::setBasis</definition>
        <argsstring>(const Mat3T&lt; T &gt; &amp;r)</argsstring>
        <name>setBasis</name>
        <param>
          <type>const <ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref>&lt; T &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="745" column="10" bodyfile="include/geolib/math_types.h" bodystart="745" bodyend="745"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform3T_1a729122bed368c0d8c3ee666bd81345ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::Transform3T&lt; T &gt;::setOrigin</definition>
        <argsstring>(const Vec3T&lt; T &gt; &amp;v)</argsstring>
        <name>setOrigin</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="744" column="10" bodyfile="include/geolib/math_types.h" bodystart="744" bodyend="744"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform3T_1aa086d2d771542c096d2bda3e23c58607" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::Transform3T&lt; T &gt;::setRPY</definition>
        <argsstring>(double roll, double pitch, double yaw)</argsstring>
        <name>setRPY</name>
        <param>
          <type>double</type>
          <declname>roll</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pitch</declname>
        </param>
        <param>
          <type>double</type>
          <declname>yaw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="752" column="10" bodyfile="include/geolib/math_types.h" bodystart="752" bodyend="754"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform3T_1aaff85dc2a53887f364154f3485a4e798" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>geo::Transform3T&lt; T &gt;::Transform3T</definition>
        <argsstring>()</argsstring>
        <name>Transform3T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="690" column="5" bodyfile="include/geolib/math_types.h" bodystart="690" bodyend="690"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform3T_1a461c0b3e3edfeeea6e81be4c09b1deae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>geo::Transform3T&lt; T &gt;::Transform3T</definition>
        <argsstring>(const Mat3T&lt; T &gt; &amp;r, const Vec3T&lt; T &gt; &amp;v)</argsstring>
        <name>Transform3T</name>
        <param>
          <type>const <ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref>&lt; T &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="697" column="5" bodyfile="include/geolib/math_types.h" bodystart="697" bodyend="697"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform3T_1a2ae2c152a1f0cb4e27e1f8de37e3dc08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>geo::Transform3T&lt; T &gt;::Transform3T</definition>
        <argsstring>(const Transform3T &amp;tr)=default</argsstring>
        <name>Transform3T</name>
        <param>
          <type>const <ref refid="classgeo_1_1Transform3T" kindref="compound">Transform3T</ref> &amp;</type>
          <declname>tr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="691" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform3T_1a755fe070f1a8e9ef8f64de4990059ad7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>geo::Transform3T&lt; T &gt;::Transform3T</definition>
        <argsstring>(T x, T y, T z, T roll=0, T pitch=0, T yaw=0)</argsstring>
        <name>Transform3T</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <param>
          <type>T</type>
          <declname>z</declname>
        </param>
        <param>
          <type>T</type>
          <declname>roll</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>T</type>
          <declname>pitch</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>T</type>
          <declname>yaw</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="693" column="5" bodyfile="include/geolib/math_types.h" bodystart="693" bodyend="695"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform3T_1ad2da71f735d798823e046c1e782d550c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>geo::Transform3T&lt; T &gt;::~Transform3T</definition>
        <argsstring>()</argsstring>
        <name>~Transform3T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="699" column="5" bodyfile="include/geolib/math_types.h" bodystart="699" bodyend="699"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgeo_1_1Transform3T_1a0b569228b1e6eb2889d646158e7e11d1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Transform3T" kindref="compound">Transform3T</ref></type>
        <definition>static Transform3T geo::Transform3T&lt; T &gt;::identity</definition>
        <argsstring>()</argsstring>
        <name>identity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="778" column="24" bodyfile="include/geolib/math_types.h" bodystart="778" bodyend="778"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classgeo_1_1Transform3T_1a32bab50ef00fc4992bab151d7d0f78ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref> &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const Transform3T &amp;t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1Transform3T" kindref="compound">Transform3T</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="788" column="12" bodyfile="include/geolib/math_types.h" bodystart="788" bodyend="791"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/geolib/math_types.h" line="19" column="1" bodyfile="include/geolib/math_types.h" bodystart="19" bodyend="-1"/>
    <listofallmembers>
      <member refid="classgeo_1_1Transform3T_1a9dcc73ff0000d1e47f74429d3a9efa79" prot="public" virt="non-virtual"><scope>geo::Transform3T</scope><name>getBasis</name></member>
      <member refid="classgeo_1_1Transform3T_1a26b48caa6b3da24a371c6f0397832170" prot="public" virt="non-virtual"><scope>geo::Transform3T</scope><name>getOrigin</name></member>
      <member refid="classgeo_1_1Transform3T_1abb0b92e03424914b561b700cdf82cb4a" prot="public" virt="non-virtual"><scope>geo::Transform3T</scope><name>getQuaternion</name></member>
      <member refid="classgeo_1_1Transform3T_1a306ef7b581e706df8cf46f24986b6838" prot="public" virt="non-virtual"><scope>geo::Transform3T</scope><name>getRPY</name></member>
      <member refid="classgeo_1_1Transform3T_1a65e46d839c833fa7999eb6e4bbc49681" prot="public" virt="non-virtual"><scope>geo::Transform3T</scope><name>getYaw</name></member>
      <member refid="classgeo_1_1Transform3T_1a0b569228b1e6eb2889d646158e7e11d1" prot="public" virt="non-virtual"><scope>geo::Transform3T</scope><name>identity</name></member>
      <member refid="classgeo_1_1Transform3T_1a4daef91f27c4a336e18c388638e27fa9" prot="public" virt="non-virtual"><scope>geo::Transform3T</scope><name>inverse</name></member>
      <member refid="classgeo_1_1Transform3T_1aff4dc9c814c6cdd6183980ee33e0506f" prot="public" virt="non-virtual"><scope>geo::Transform3T</scope><name>inverseTimes</name></member>
      <member refid="classgeo_1_1Transform3T_1a913d857e837ec459ebd94a38924ff2c6" prot="public" virt="non-virtual"><scope>geo::Transform3T</scope><name>operator!=</name></member>
      <member refid="classgeo_1_1Transform3T_1a60e89cfa264b83080690cd38c539b91d" prot="public" virt="non-virtual"><scope>geo::Transform3T</scope><name>operator*</name></member>
      <member refid="classgeo_1_1Transform3T_1ac5467f80f342a000de0aefdbb8d6c763" prot="public" virt="non-virtual"><scope>geo::Transform3T</scope><name>operator*</name></member>
      <member refid="classgeo_1_1Transform3T_1a32bab50ef00fc4992bab151d7d0f78ce" prot="public" virt="non-virtual"><scope>geo::Transform3T</scope><name>operator&lt;&lt;</name></member>
      <member refid="classgeo_1_1Transform3T_1a8fa2bbad5c508027f1f41d9ad7498c64" prot="public" virt="non-virtual"><scope>geo::Transform3T</scope><name>operator=</name></member>
      <member refid="classgeo_1_1Transform3T_1abf3b3d977a9921d289759b490de6a968" prot="public" virt="non-virtual"><scope>geo::Transform3T</scope><name>operator==</name></member>
      <member refid="classgeo_1_1Transform3T_1a57186a12e9cc570e7cdfbf03c5b1fab2" prot="public" virt="non-virtual"><scope>geo::Transform3T</scope><name>projectTo2d</name></member>
      <member refid="classgeo_1_1Transform3T_1ae4c3d14cc73485f238264bd4520a2821" prot="public" virt="non-virtual"><scope>geo::Transform3T</scope><name>R</name></member>
      <member refid="classgeo_1_1Transform3T_1a1de8a9b04f1af2a1c10b579e31b862ab" prot="public" virt="non-virtual"><scope>geo::Transform3T</scope><name>setBasis</name></member>
      <member refid="classgeo_1_1Transform3T_1a729122bed368c0d8c3ee666bd81345ce" prot="public" virt="non-virtual"><scope>geo::Transform3T</scope><name>setOrigin</name></member>
      <member refid="classgeo_1_1Transform3T_1aa086d2d771542c096d2bda3e23c58607" prot="public" virt="non-virtual"><scope>geo::Transform3T</scope><name>setRPY</name></member>
      <member refid="classgeo_1_1Transform3T_1acbf09e22e135e0a54c5f275d263d383c" prot="public" virt="non-virtual"><scope>geo::Transform3T</scope><name>t</name></member>
      <member refid="classgeo_1_1Transform3T_1aaff85dc2a53887f364154f3485a4e798" prot="public" virt="non-virtual"><scope>geo::Transform3T</scope><name>Transform3T</name></member>
      <member refid="classgeo_1_1Transform3T_1a2ae2c152a1f0cb4e27e1f8de37e3dc08" prot="public" virt="non-virtual"><scope>geo::Transform3T</scope><name>Transform3T</name></member>
      <member refid="classgeo_1_1Transform3T_1a755fe070f1a8e9ef8f64de4990059ad7" prot="public" virt="non-virtual"><scope>geo::Transform3T</scope><name>Transform3T</name></member>
      <member refid="classgeo_1_1Transform3T_1a461c0b3e3edfeeea6e81be4c09b1deae" prot="public" virt="non-virtual"><scope>geo::Transform3T</scope><name>Transform3T</name></member>
      <member refid="classgeo_1_1Transform3T_1ad2da71f735d798823e046c1e782d550c" prot="public" virt="non-virtual"><scope>geo::Transform3T</scope><name>~Transform3T</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
