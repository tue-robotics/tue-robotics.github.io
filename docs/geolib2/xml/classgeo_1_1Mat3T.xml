<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classgeo_1_1Mat3T" kind="class" language="C++" prot="public">
    <compoundname>geo::Mat3T</compoundname>
    <includes refid="math__types_8h" local="no">math_types.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classgeo_1_1Mat3T_1a0a3f074d461f2f950c6b460c0159ae84" prot="public" static="no" mutable="no">
        <type>union geo::Mat3T::@16</type>
        <definition>union geo::Mat3T::@16 geo::Mat3T&lt; T &gt;::@17</definition>
        <argsstring></argsstring>
        <name>@17</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="578" column="5"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Mat3T_1abb52ed8d4fa43d59a583fa202498c4a6" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T geo::Mat3T&lt; T &gt;::m[9]</definition>
        <argsstring>[9]</argsstring>
        <name>m</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="577" column="11" bodyfile="include/geolib/math_types.h" bodystart="577" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Mat3T_1a73e5375b72e1a403e9efca2d523e8d87" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T geo::Mat3T&lt; T &gt;::xx</definition>
        <argsstring></argsstring>
        <name>xx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="576" column="17" bodyfile="include/geolib/math_types.h" bodystart="576" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Mat3T_1a85a6367bd4824f08b32bb47fdd5e1191" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T geo::Mat3T&lt; T &gt;::xy</definition>
        <argsstring></argsstring>
        <name>xy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="576" column="20" bodyfile="include/geolib/math_types.h" bodystart="576" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Mat3T_1ac66b30aee9f93638d2bdf4aba44cd4e6" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T geo::Mat3T&lt; T &gt;::xz</definition>
        <argsstring></argsstring>
        <name>xz</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="576" column="23" bodyfile="include/geolib/math_types.h" bodystart="576" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Mat3T_1a4bf45f0aac622d58e11acbbcb97060e7" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T geo::Mat3T&lt; T &gt;::yx</definition>
        <argsstring></argsstring>
        <name>yx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="576" column="26" bodyfile="include/geolib/math_types.h" bodystart="576" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Mat3T_1ac0f75c2fec26d1b29aa0dd0dccc1cdba" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T geo::Mat3T&lt; T &gt;::yy</definition>
        <argsstring></argsstring>
        <name>yy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="576" column="29" bodyfile="include/geolib/math_types.h" bodystart="576" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Mat3T_1ac2f55b51abc97802ee051cb5cd9e60ec" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T geo::Mat3T&lt; T &gt;::yz</definition>
        <argsstring></argsstring>
        <name>yz</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="576" column="32" bodyfile="include/geolib/math_types.h" bodystart="576" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Mat3T_1ac979dad068eb4c85d90b4f48fcf6cb9e" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T geo::Mat3T&lt; T &gt;::zx</definition>
        <argsstring></argsstring>
        <name>zx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="576" column="35" bodyfile="include/geolib/math_types.h" bodystart="576" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Mat3T_1a15b54b81c315ee2a01f006dd1cb8ef31" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T geo::Mat3T&lt; T &gt;::zy</definition>
        <argsstring></argsstring>
        <name>zy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="576" column="38" bodyfile="include/geolib/math_types.h" bodystart="576" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Mat3T_1aa871ac022edc35006352cbb0b1e39c32" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T geo::Mat3T&lt; T &gt;::zz</definition>
        <argsstring></argsstring>
        <name>zz</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="576" column="41" bodyfile="include/geolib/math_types.h" bodystart="576" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgeo_1_1Mat3T_1a757f3deccb88855f074d08d75ad9f06a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref>&lt; T &gt;</type>
        <definition>Vec3T&lt;T&gt; geo::Mat3T&lt; T &gt;::getColumn</definition>
        <argsstring>(int i) const</argsstring>
        <name>getColumn</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="495" column="11" bodyfile="include/geolib/math_types.h" bodystart="495" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat3T_1a6eef36c4bf61766db7b2f98ef58b2c0a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::Mat3T&lt; T &gt;::getRotation</definition>
        <argsstring>(QuaternionT&lt; T &gt; &amp;q) const</argsstring>
        <name>getRotation</name>
        <param>
          <type><ref refid="classgeo_1_1QuaternionT" kindref="compound">QuaternionT</ref>&lt; T &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="520" column="10" bodyfile="include/geolib/math_types.h" bodystart="520" bodyend="544"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat3T_1af8f9171f1be0b3b3d8b4e21acb03aa97" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref>&lt; T &gt;</type>
        <definition>Vec3T&lt;T&gt; geo::Mat3T&lt; T &gt;::getRow</definition>
        <argsstring>(int i) const</argsstring>
        <name>getRow</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="491" column="11" bodyfile="include/geolib/math_types.h" bodystart="491" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat3T_1a9c3c914fee1540c2d2437cd3f9ba003b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>geo::Mat3T&lt; T &gt;::Mat3T</definition>
        <argsstring>()</argsstring>
        <name>Mat3T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="403" column="5" bodyfile="include/geolib/math_types.h" bodystart="403" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat3T_1a0837c754babf60ca51f2b2ebbba1c660" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>geo::Mat3T&lt; T &gt;::Mat3T</definition>
        <argsstring>(const Mat3T &amp;v)=default</argsstring>
        <name>Mat3T</name>
        <param>
          <type>const <ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="404" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat3T_1aa631d37ca63f3eee228952ea0b27519c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>geo::Mat3T&lt; T &gt;::Mat3T</definition>
        <argsstring>(const T *values)</argsstring>
        <name>Mat3T</name>
        <param>
          <type>const T *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="411" column="5" bodyfile="include/geolib/math_types.h" bodystart="411" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat3T_1ada785abc537856eda297c41e9f972320" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>geo::Mat3T&lt; T &gt;::Mat3T</definition>
        <argsstring>(T value)</argsstring>
        <name>Mat3T</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="409" column="5" bodyfile="include/geolib/math_types.h" bodystart="409" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat3T_1a53d6b946662c9960d43c75a83d218cee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>geo::Mat3T&lt; T &gt;::Mat3T</definition>
        <argsstring>(T xx_, T xy_, T xz_, T yx_, T yy_, T yz_, T zx_, T zy_, T zz_)</argsstring>
        <name>Mat3T</name>
        <param>
          <type>T</type>
          <declname>xx_</declname>
        </param>
        <param>
          <type>T</type>
          <declname>xy_</declname>
        </param>
        <param>
          <type>T</type>
          <declname>xz_</declname>
        </param>
        <param>
          <type>T</type>
          <declname>yx_</declname>
        </param>
        <param>
          <type>T</type>
          <declname>yy_</declname>
        </param>
        <param>
          <type>T</type>
          <declname>yz_</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zx_</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zy_</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zz_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="406" column="5" bodyfile="include/geolib/math_types.h" bodystart="406" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat3T_1a5b4744ed15b45d2de635d33d1b6f7552" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>geo::Mat3T&lt; T &gt;::Mat3T</definition>
        <argsstring>(Vec3T&lt; T &gt; x, Vec3T&lt; T &gt; y, Vec3T&lt; T &gt; z)</argsstring>
        <name>Mat3T</name>
        <param>
          <type><ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref>&lt; T &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref>&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref>&lt; T &gt;</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="413" column="5" bodyfile="include/geolib/math_types.h" bodystart="413" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat3T_1aecd1f1af47286a133254c98d097bf428" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::Mat3T&lt; T &gt;::normalize</definition>
        <argsstring>()</argsstring>
        <name>normalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="580" column="10" bodyfile="include/geolib/math_types.h" bodystart="580" bodyend="585"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat3T_1a16b78c55ca32a897cf074371dbdc11cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref></type>
        <definition>Mat3T geo::Mat3T&lt; T &gt;::normalized</definition>
        <argsstring>()</argsstring>
        <name>normalized</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="587" column="11" bodyfile="include/geolib/math_types.h" bodystart="587" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat3T_1a54fe8ace1fbd853cea84ccfe569ba9c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool geo::Mat3T&lt; T &gt;::operator!=</definition>
        <argsstring>(const Mat3T &amp;m) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="437" column="10" bodyfile="include/geolib/math_types.h" bodystart="437" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat3T_1a620020252737a5698f3a99e97f727171" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; geo::Mat3T&lt; T &gt;::operator()</definition>
        <argsstring>(int i, int j)</argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="472" column="7" bodyfile="include/geolib/math_types.h" bodystart="472" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat3T_1a5d83aa0fa014d3d4abc8a36c04c482ea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; geo::Mat3T&lt; T &gt;::operator()</definition>
        <argsstring>(int i, int j) const</argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="476" column="13" bodyfile="include/geolib/math_types.h" bodystart="476" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat3T_1a1dd467dada4412418183852cd0e7a268" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref></type>
        <definition>Mat3T geo::Mat3T&lt; T &gt;::operator*</definition>
        <argsstring>(const Mat3T &amp;m) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="457" column="11" bodyfile="include/geolib/math_types.h" bodystart="457" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat3T_1ab018076d7e426de188286ac9fcf133c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref>&lt; T &gt;</type>
        <definition>Vec3T&lt;T&gt; geo::Mat3T&lt; T &gt;::operator*</definition>
        <argsstring>(const Vec3T&lt; T &gt; &amp;v) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="451" column="11" bodyfile="include/geolib/math_types.h" bodystart="451" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat3T_1acb5360ebddccbab91089bddf6dfebdc2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref></type>
        <definition>Mat3T geo::Mat3T&lt; T &gt;::operator*</definition>
        <argsstring>(T s) const</argsstring>
        <name>operator*</name>
        <param>
          <type>T</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>multiplies vector with a scalar </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="463" column="11" bodyfile="include/geolib/math_types.h" bodystart="463" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat3T_1a4cb34378d9099df22bef6bcf89690f2f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref></type>
        <definition>Mat3T geo::Mat3T&lt; T &gt;::operator+</definition>
        <argsstring>(const Mat3T &amp;m) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>returns addition with v </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="442" column="11" bodyfile="include/geolib/math_types.h" bodystart="442" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat3T_1aba42484c1d02ca5f5315ea3f23d438c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref></type>
        <definition>Mat3T geo::Mat3T&lt; T &gt;::operator-</definition>
        <argsstring>(const Mat3T &amp;m) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>returns this minus m </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="447" column="11" bodyfile="include/geolib/math_types.h" bodystart="447" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat3T_1a6ada41a50196f99181f498e3f361cea0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref></type>
        <definition>Mat3T geo::Mat3T&lt; T &gt;::operator/</definition>
        <argsstring>(T s) const</argsstring>
        <name>operator/</name>
        <param>
          <type>T</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>divides matrix by scalar </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="468" column="11" bodyfile="include/geolib/math_types.h" bodystart="468" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat3T_1aa4a9b039b7fb8d4bc9a95e00c5218c66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref> &amp;</type>
        <definition>Mat3T&amp; geo::Mat3T&lt; T &gt;::operator=</definition>
        <argsstring>(const Mat3T &amp;m)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="416" column="11" bodyfile="include/geolib/math_types.h" bodystart="416" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat3T_1ad0a8498a22b11d365e9ef5616b799bfe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool geo::Mat3T&lt; T &gt;::operator==</definition>
        <argsstring>(const Mat3T &amp;m) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="431" column="10" bodyfile="include/geolib/math_types.h" bodystart="431" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat3T_1a1f2c8e22efe06724d41fbb5bb753a5e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; geo::Mat3T&lt; T &gt;::operator[]</definition>
        <argsstring>(const uint i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const uint</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="427" column="7" bodyfile="include/geolib/math_types.h" bodystart="427" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat3T_1a86e761f35fd4d62f128db8427a6af313" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; geo::Mat3T&lt; T &gt;::operator[]</definition>
        <argsstring>(const uint i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>const uint</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="429" column="13" bodyfile="include/geolib/math_types.h" bodystart="429" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat3T_1ac7b5e95f0460715373aee372beee7703" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Mat2T" kindref="compound">Mat2T</ref>&lt; T &gt;</type>
        <definition>Mat2T&lt;T&gt; geo::Mat3T&lt; T &gt;::projectTo2d</definition>
        <argsstring>() const</argsstring>
        <name>projectTo2d</name>
        <briefdescription>
<para>Drops the rotation of the 3rd coordinate. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Rotation matrix in 2D </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="563" column="11" bodyfile="include/geolib/math_types.h" bodystart="563" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat3T_1aa07664bc400a96e6780268fdc7cae4ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::Mat3T&lt; T &gt;::setRotation</definition>
        <argsstring>(const QuaternionT&lt; T &gt; &amp;q)</argsstring>
        <name>setRotation</name>
        <param>
          <type>const <ref refid="classgeo_1_1QuaternionT" kindref="compound">QuaternionT</ref>&lt; T &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="546" column="10" bodyfile="include/geolib/math_types.h" bodystart="546" bodyend="557"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat3T_1a325ba18e35a373d5a245ae964ac6f248" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::Mat3T&lt; T &gt;::setRPY</definition>
        <argsstring>(T roll, T pitch, T yaw)</argsstring>
        <name>setRPY</name>
        <param>
          <type>T</type>
          <declname>roll</declname>
        </param>
        <param>
          <type>T</type>
          <declname>pitch</declname>
        </param>
        <param>
          <type>T</type>
          <declname>yaw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="499" column="10" bodyfile="include/geolib/math_types.h" bodystart="499" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat3T_1a66d2989a50bbb14ae04faa2caf13b04f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref></type>
        <definition>Mat3T geo::Mat3T&lt; T &gt;::transpose</definition>
        <argsstring>() const</argsstring>
        <name>transpose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="485" column="11" bodyfile="include/geolib/math_types.h" bodystart="485" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat3T_1a352bd505ff59b3c3326148a2401a74ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>geo::Mat3T&lt; T &gt;::~Mat3T</definition>
        <argsstring>()</argsstring>
        <name>~Mat3T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="425" column="5" bodyfile="include/geolib/math_types.h" bodystart="425" bodyend="425"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classgeo_1_1Mat3T_1af97b1df7c3ac8767492dd1bf97e2e7b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref></type>
        <definition>Mat3T operator*</definition>
        <argsstring>(T s, const Mat3T &amp;m)</argsstring>
        <name>operator*</name>
        <param>
          <type>T</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>multiplies vector with a scalar </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="481" column="18" bodyfile="include/geolib/math_types.h" bodystart="481" bodyend="483"/>
      </memberdef>
      <memberdef kind="friend" id="classgeo_1_1Mat3T_1abe3331f729dba8668124482d4cf216f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref> &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const Mat3T &amp;m)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="568" column="12" bodyfile="include/geolib/math_types.h" bodystart="568" bodyend="573"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgeo_1_1Mat3T_1a10a91cb044e48cff751959d695b0c046" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref></type>
        <definition>static Mat3T geo::Mat3T&lt; T &gt;::identity</definition>
        <argsstring>()</argsstring>
        <name>identity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="516" column="18" bodyfile="include/geolib/math_types.h" bodystart="516" bodyend="518"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/geolib/math_types.h" line="16" column="1" bodyfile="include/geolib/math_types.h" bodystart="16" bodyend="-1"/>
    <listofallmembers>
      <member refid="classgeo_1_1Mat3T_1a757f3deccb88855f074d08d75ad9f06a" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>getColumn</name></member>
      <member refid="classgeo_1_1Mat3T_1a6eef36c4bf61766db7b2f98ef58b2c0a" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>getRotation</name></member>
      <member refid="classgeo_1_1Mat3T_1af8f9171f1be0b3b3d8b4e21acb03aa97" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>getRow</name></member>
      <member refid="classgeo_1_1Mat3T_1a10a91cb044e48cff751959d695b0c046" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>identity</name></member>
      <member refid="classgeo_1_1Mat3T_1abb52ed8d4fa43d59a583fa202498c4a6" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>m</name></member>
      <member refid="classgeo_1_1Mat3T_1a9c3c914fee1540c2d2437cd3f9ba003b" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>Mat3T</name></member>
      <member refid="classgeo_1_1Mat3T_1a0837c754babf60ca51f2b2ebbba1c660" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>Mat3T</name></member>
      <member refid="classgeo_1_1Mat3T_1a53d6b946662c9960d43c75a83d218cee" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>Mat3T</name></member>
      <member refid="classgeo_1_1Mat3T_1ada785abc537856eda297c41e9f972320" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>Mat3T</name></member>
      <member refid="classgeo_1_1Mat3T_1aa631d37ca63f3eee228952ea0b27519c" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>Mat3T</name></member>
      <member refid="classgeo_1_1Mat3T_1a5b4744ed15b45d2de635d33d1b6f7552" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>Mat3T</name></member>
      <member refid="classgeo_1_1Mat3T_1aecd1f1af47286a133254c98d097bf428" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>normalize</name></member>
      <member refid="classgeo_1_1Mat3T_1a16b78c55ca32a897cf074371dbdc11cd" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>normalized</name></member>
      <member refid="classgeo_1_1Mat3T_1a54fe8ace1fbd853cea84ccfe569ba9c2" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>operator!=</name></member>
      <member refid="classgeo_1_1Mat3T_1a620020252737a5698f3a99e97f727171" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>operator()</name></member>
      <member refid="classgeo_1_1Mat3T_1a5d83aa0fa014d3d4abc8a36c04c482ea" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>operator()</name></member>
      <member refid="classgeo_1_1Mat3T_1ab018076d7e426de188286ac9fcf133c5" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>operator*</name></member>
      <member refid="classgeo_1_1Mat3T_1a1dd467dada4412418183852cd0e7a268" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>operator*</name></member>
      <member refid="classgeo_1_1Mat3T_1acb5360ebddccbab91089bddf6dfebdc2" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>operator*</name></member>
      <member refid="classgeo_1_1Mat3T_1af97b1df7c3ac8767492dd1bf97e2e7b3" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>operator*</name></member>
      <member refid="classgeo_1_1Mat3T_1a4cb34378d9099df22bef6bcf89690f2f" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>operator+</name></member>
      <member refid="classgeo_1_1Mat3T_1aba42484c1d02ca5f5315ea3f23d438c1" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>operator-</name></member>
      <member refid="classgeo_1_1Mat3T_1a6ada41a50196f99181f498e3f361cea0" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>operator/</name></member>
      <member refid="classgeo_1_1Mat3T_1abe3331f729dba8668124482d4cf216f2" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>operator&lt;&lt;</name></member>
      <member refid="classgeo_1_1Mat3T_1aa4a9b039b7fb8d4bc9a95e00c5218c66" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>operator=</name></member>
      <member refid="classgeo_1_1Mat3T_1ad0a8498a22b11d365e9ef5616b799bfe" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>operator==</name></member>
      <member refid="classgeo_1_1Mat3T_1a1f2c8e22efe06724d41fbb5bb753a5e8" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>operator[]</name></member>
      <member refid="classgeo_1_1Mat3T_1a86e761f35fd4d62f128db8427a6af313" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>operator[]</name></member>
      <member refid="classgeo_1_1Mat3T_1ac7b5e95f0460715373aee372beee7703" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>projectTo2d</name></member>
      <member refid="classgeo_1_1Mat3T_1aa07664bc400a96e6780268fdc7cae4ad" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>setRotation</name></member>
      <member refid="classgeo_1_1Mat3T_1a325ba18e35a373d5a245ae964ac6f248" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>setRPY</name></member>
      <member refid="classgeo_1_1Mat3T_1a66d2989a50bbb14ae04faa2caf13b04f" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>transpose</name></member>
      <member refid="classgeo_1_1Mat3T_1a73e5375b72e1a403e9efca2d523e8d87" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>xx</name></member>
      <member refid="classgeo_1_1Mat3T_1a85a6367bd4824f08b32bb47fdd5e1191" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>xy</name></member>
      <member refid="classgeo_1_1Mat3T_1ac66b30aee9f93638d2bdf4aba44cd4e6" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>xz</name></member>
      <member refid="classgeo_1_1Mat3T_1a4bf45f0aac622d58e11acbbcb97060e7" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>yx</name></member>
      <member refid="classgeo_1_1Mat3T_1ac0f75c2fec26d1b29aa0dd0dccc1cdba" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>yy</name></member>
      <member refid="classgeo_1_1Mat3T_1ac2f55b51abc97802ee051cb5cd9e60ec" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>yz</name></member>
      <member refid="classgeo_1_1Mat3T_1ac979dad068eb4c85d90b4f48fcf6cb9e" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>zx</name></member>
      <member refid="classgeo_1_1Mat3T_1a15b54b81c315ee2a01f006dd1cb8ef31" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>zy</name></member>
      <member refid="classgeo_1_1Mat3T_1aa871ac022edc35006352cbb0b1e39c32" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>zz</name></member>
      <member refid="classgeo_1_1Mat3T_1a352bd505ff59b3c3326148a2401a74ff" prot="public" virt="non-virtual"><scope>geo::Mat3T</scope><name>~Mat3T</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
