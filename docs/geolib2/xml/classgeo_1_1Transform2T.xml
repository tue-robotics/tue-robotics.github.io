<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classgeo_1_1Transform2T" kind="class" language="C++" prot="public">
    <compoundname>geo::Transform2T</compoundname>
    <includes refid="math__types_8h" local="no">math_types.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classgeo_1_1Transform2T_1ace6ce78db401a84c1dfbe0ec83f4dee5" prot="public" static="no" mutable="no">
        <type><ref refid="classgeo_1_1Mat2T" kindref="compound">Mat2T</ref>&lt; T &gt;</type>
        <definition>Mat2T&lt;T&gt; geo::Transform2T&lt; T &gt;::R</definition>
        <argsstring></argsstring>
        <name>R</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="678" column="11" bodyfile="include/geolib/math_types.h" bodystart="678" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Transform2T_1aed7a26b999f43c9186efe8991823bf13" prot="public" static="no" mutable="no">
        <type><ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref>&lt; T &gt;</type>
        <definition>Vec2T&lt;T&gt; geo::Transform2T&lt; T &gt;::t</definition>
        <argsstring></argsstring>
        <name>t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="679" column="11" bodyfile="include/geolib/math_types.h" bodystart="679" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgeo_1_1Transform2T_1ab140d2fbca1a064a9d340dae37d2174c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classgeo_1_1Mat2T" kindref="compound">Mat2T</ref>&lt; T &gt; &amp;</type>
        <definition>const Mat2T&lt;T&gt;&amp; geo::Transform2T&lt; T &gt;::getBasis</definition>
        <argsstring>() const</argsstring>
        <name>getBasis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="639" column="24" bodyfile="include/geolib/math_types.h" bodystart="639" bodyend="641"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform2T_1a490ce2dc5242d30c15e24c4f2357de38" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref>&lt; T &gt; &amp;</type>
        <definition>const Vec2T&lt;T&gt;&amp; geo::Transform2T&lt; T &gt;::getOrigin</definition>
        <argsstring>() const</argsstring>
        <name>getOrigin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="635" column="24" bodyfile="include/geolib/math_types.h" bodystart="635" bodyend="637"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform2T_1a95963aeb9f1ff6bb0d326977e68fb759" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Transform2T" kindref="compound">Transform2T</ref></type>
        <definition>Transform2T geo::Transform2T&lt; T &gt;::inverse</definition>
        <argsstring>() const</argsstring>
        <name>inverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="646" column="24" bodyfile="include/geolib/math_types.h" bodystart="646" bodyend="649"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform2T_1acb3d3cf5789751c9e23749bea869b4ca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Transform2T" kindref="compound">Transform2T</ref></type>
        <definition>Transform2T geo::Transform2T&lt; T &gt;::inverseTimes</definition>
        <argsstring>(const Transform2T &amp;tr) const</argsstring>
        <name>inverseTimes</name>
        <param>
          <type>const <ref refid="classgeo_1_1Transform2T" kindref="compound">Transform2T</ref> &amp;</type>
          <declname>tr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="630" column="24" bodyfile="include/geolib/math_types.h" bodystart="630" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform2T_1a9a153bb4d1d10b7345855622d8a0c0b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Transform2T" kindref="compound">Transform2T</ref></type>
        <definition>Transform2T geo::Transform2T&lt; T &gt;::operator*</definition>
        <argsstring>(const Transform2T &amp;tr) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classgeo_1_1Transform2T" kindref="compound">Transform2T</ref> &amp;</type>
          <declname>tr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="626" column="24" bodyfile="include/geolib/math_types.h" bodystart="626" bodyend="628"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform2T_1a6a26ed6c71eec3e4dc656aee2bd2efdf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref>&lt; T &gt;</type>
        <definition>Vec2T&lt;T&gt; geo::Transform2T&lt; T &gt;::operator*</definition>
        <argsstring>(const Vec2T&lt; T &gt; &amp;v) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="622" column="18" bodyfile="include/geolib/math_types.h" bodystart="622" bodyend="624"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform2T_1a2a73a67340dadcf6ff52be0bdb825366" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Transform2T" kindref="compound">Transform2T</ref> &amp;</type>
        <definition>Transform2T&amp; geo::Transform2T&lt; T &gt;::operator=</definition>
        <argsstring>(const Transform2T &amp;tr)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classgeo_1_1Transform2T" kindref="compound">Transform2T</ref> &amp;</type>
          <declname>tr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="614" column="17" bodyfile="include/geolib/math_types.h" bodystart="614" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform2T_1ac00441a7d9191c7f9717f87003309dfb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Transform3T" kindref="compound">Transform3T</ref>&lt; T &gt;</type>
        <definition>Transform3T&lt;T&gt; geo::Transform2T&lt; T &gt;::projectTo3d</definition>
        <argsstring>() const</argsstring>
        <name>projectTo3d</name>
        <briefdescription>
<para><ref refid="classgeo_1_1Transform" kindref="compound">Transform</ref> with no displacement and rotation of the 3rd coordinate. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classgeo_1_1Transform" kindref="compound">Transform</ref> in 3D </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="669" column="17" bodyfile="include/geolib/math_types.h" bodystart="669" bodyend="671"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform2T_1afe0ff43534bc176195bd3e70887fba95" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T geo::Transform2T&lt; T &gt;::rotation</definition>
        <argsstring>() const</argsstring>
        <name>rotation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="659" column="7" bodyfile="include/geolib/math_types.h" bodystart="659" bodyend="661"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform2T_1a9a6bdcff9ec2877e24915a4eb52e4185" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::Transform2T&lt; T &gt;::setBasis</definition>
        <argsstring>(const Mat2T&lt; T &gt; &amp;r)</argsstring>
        <name>setBasis</name>
        <param>
          <type>const <ref refid="classgeo_1_1Mat2T" kindref="compound">Mat2T</ref>&lt; T &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="644" column="10" bodyfile="include/geolib/math_types.h" bodystart="644" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform2T_1a2c2fc9da3f1a91efa3e1a0caa012e458" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::Transform2T&lt; T &gt;::setOrigin</definition>
        <argsstring>(const Vec2T&lt; T &gt; &amp;v)</argsstring>
        <name>setOrigin</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="643" column="10" bodyfile="include/geolib/math_types.h" bodystart="643" bodyend="643"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform2T_1aa36300150db55b0e8032e3e86ab549b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::Transform2T&lt; T &gt;::setRotation</definition>
        <argsstring>(T yaw)</argsstring>
        <name>setRotation</name>
        <param>
          <type>T</type>
          <declname>yaw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="651" column="10" bodyfile="include/geolib/math_types.h" bodystart="651" bodyend="657"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform2T_1ae4dea91796a42d8e2bf2726c785e9fb9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>geo::Transform2T&lt; T &gt;::Transform2T</definition>
        <argsstring>()</argsstring>
        <name>Transform2T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="602" column="5" bodyfile="include/geolib/math_types.h" bodystart="602" bodyend="602"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform2T_1a0ff5c3c2086424133bdcc2c0ef50e6d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>geo::Transform2T&lt; T &gt;::Transform2T</definition>
        <argsstring>(const Mat2T&lt; T &gt; &amp;r, const Vec2T&lt; T &gt; &amp;v)</argsstring>
        <name>Transform2T</name>
        <param>
          <type>const <ref refid="classgeo_1_1Mat2T" kindref="compound">Mat2T</ref>&lt; T &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="609" column="5" bodyfile="include/geolib/math_types.h" bodystart="609" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform2T_1a11bbf0d55f89ce8a0c9ea79b04c1f349" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>geo::Transform2T&lt; T &gt;::Transform2T</definition>
        <argsstring>(const Transform2T &amp;tr)=default</argsstring>
        <name>Transform2T</name>
        <param>
          <type>const <ref refid="classgeo_1_1Transform2T" kindref="compound">Transform2T</ref> &amp;</type>
          <declname>tr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="603" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform2T_1aecf3a3e3c62a0224f272055702eca182" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>geo::Transform2T&lt; T &gt;::Transform2T</definition>
        <argsstring>(T x, T y, T yaw=0)</argsstring>
        <name>Transform2T</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <param>
          <type>T</type>
          <declname>yaw</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="605" column="5" bodyfile="include/geolib/math_types.h" bodystart="605" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Transform2T_1a34e3632a8e251064d797ce365648a904" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>geo::Transform2T&lt; T &gt;::~Transform2T</definition>
        <argsstring>()</argsstring>
        <name>~Transform2T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="612" column="5" bodyfile="include/geolib/math_types.h" bodystart="612" bodyend="612"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgeo_1_1Transform2T_1adffa0220c50793d90669471c0f4d3bd6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Transform2T" kindref="compound">Transform2T</ref></type>
        <definition>static Transform2T geo::Transform2T&lt; T &gt;::identity</definition>
        <argsstring>()</argsstring>
        <name>identity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="663" column="24" bodyfile="include/geolib/math_types.h" bodystart="663" bodyend="663"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classgeo_1_1Transform2T_1a9353cdb9579f0785c7d0dfedd12a7057" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref> &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const Transform2T &amp;t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1Transform2T" kindref="compound">Transform2T</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="673" column="12" bodyfile="include/geolib/math_types.h" bodystart="673" bodyend="676"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/geolib/math_types.h" line="598" column="18" bodyfile="include/geolib/math_types.h" bodystart="598" bodyend="681"/>
    <listofallmembers>
      <member refid="classgeo_1_1Transform2T_1ab140d2fbca1a064a9d340dae37d2174c" prot="public" virt="non-virtual"><scope>geo::Transform2T</scope><name>getBasis</name></member>
      <member refid="classgeo_1_1Transform2T_1a490ce2dc5242d30c15e24c4f2357de38" prot="public" virt="non-virtual"><scope>geo::Transform2T</scope><name>getOrigin</name></member>
      <member refid="classgeo_1_1Transform2T_1adffa0220c50793d90669471c0f4d3bd6" prot="public" virt="non-virtual"><scope>geo::Transform2T</scope><name>identity</name></member>
      <member refid="classgeo_1_1Transform2T_1a95963aeb9f1ff6bb0d326977e68fb759" prot="public" virt="non-virtual"><scope>geo::Transform2T</scope><name>inverse</name></member>
      <member refid="classgeo_1_1Transform2T_1acb3d3cf5789751c9e23749bea869b4ca" prot="public" virt="non-virtual"><scope>geo::Transform2T</scope><name>inverseTimes</name></member>
      <member refid="classgeo_1_1Transform2T_1a6a26ed6c71eec3e4dc656aee2bd2efdf" prot="public" virt="non-virtual"><scope>geo::Transform2T</scope><name>operator*</name></member>
      <member refid="classgeo_1_1Transform2T_1a9a153bb4d1d10b7345855622d8a0c0b5" prot="public" virt="non-virtual"><scope>geo::Transform2T</scope><name>operator*</name></member>
      <member refid="classgeo_1_1Transform2T_1a9353cdb9579f0785c7d0dfedd12a7057" prot="public" virt="non-virtual"><scope>geo::Transform2T</scope><name>operator&lt;&lt;</name></member>
      <member refid="classgeo_1_1Transform2T_1a2a73a67340dadcf6ff52be0bdb825366" prot="public" virt="non-virtual"><scope>geo::Transform2T</scope><name>operator=</name></member>
      <member refid="classgeo_1_1Transform2T_1ac00441a7d9191c7f9717f87003309dfb" prot="public" virt="non-virtual"><scope>geo::Transform2T</scope><name>projectTo3d</name></member>
      <member refid="classgeo_1_1Transform2T_1ace6ce78db401a84c1dfbe0ec83f4dee5" prot="public" virt="non-virtual"><scope>geo::Transform2T</scope><name>R</name></member>
      <member refid="classgeo_1_1Transform2T_1afe0ff43534bc176195bd3e70887fba95" prot="public" virt="non-virtual"><scope>geo::Transform2T</scope><name>rotation</name></member>
      <member refid="classgeo_1_1Transform2T_1a9a6bdcff9ec2877e24915a4eb52e4185" prot="public" virt="non-virtual"><scope>geo::Transform2T</scope><name>setBasis</name></member>
      <member refid="classgeo_1_1Transform2T_1a2c2fc9da3f1a91efa3e1a0caa012e458" prot="public" virt="non-virtual"><scope>geo::Transform2T</scope><name>setOrigin</name></member>
      <member refid="classgeo_1_1Transform2T_1aa36300150db55b0e8032e3e86ab549b7" prot="public" virt="non-virtual"><scope>geo::Transform2T</scope><name>setRotation</name></member>
      <member refid="classgeo_1_1Transform2T_1aed7a26b999f43c9186efe8991823bf13" prot="public" virt="non-virtual"><scope>geo::Transform2T</scope><name>t</name></member>
      <member refid="classgeo_1_1Transform2T_1ae4dea91796a42d8e2bf2726c785e9fb9" prot="public" virt="non-virtual"><scope>geo::Transform2T</scope><name>Transform2T</name></member>
      <member refid="classgeo_1_1Transform2T_1a11bbf0d55f89ce8a0c9ea79b04c1f349" prot="public" virt="non-virtual"><scope>geo::Transform2T</scope><name>Transform2T</name></member>
      <member refid="classgeo_1_1Transform2T_1aecf3a3e3c62a0224f272055702eca182" prot="public" virt="non-virtual"><scope>geo::Transform2T</scope><name>Transform2T</name></member>
      <member refid="classgeo_1_1Transform2T_1a0ff5c3c2086424133bdcc2c0ef50e6d6" prot="public" virt="non-virtual"><scope>geo::Transform2T</scope><name>Transform2T</name></member>
      <member refid="classgeo_1_1Transform2T_1a34e3632a8e251064d797ce365648a904" prot="public" virt="non-virtual"><scope>geo::Transform2T</scope><name>~Transform2T</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
