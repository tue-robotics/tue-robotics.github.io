<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classgeo_1_1Mat2T" kind="class" language="C++" prot="public">
    <compoundname>geo::Mat2T</compoundname>
    <includes refid="math__types_8h" local="no">math_types.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classgeo_1_1Mat2T_1a855c1ec885a5f8ab423c51533c76c330" prot="public" static="no" mutable="no">
        <type>union geo::Mat2T::@8</type>
        <definition>union geo::Mat2T::@8 geo::Mat2T&lt; T &gt;::@9</definition>
        <argsstring></argsstring>
        <name>@9</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="315" column="5"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Mat2T_1a411556c6f20825c28bec704c59018bb5" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T geo::Mat2T&lt; T &gt;::m[4]</definition>
        <argsstring>[4]</argsstring>
        <name>m</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="314" column="11" bodyfile="include/geolib/math_types.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Mat2T_1adb73140020e1134775d12d507ba4bf95" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T geo::Mat2T&lt; T &gt;::xx</definition>
        <argsstring></argsstring>
        <name>xx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="313" column="17" bodyfile="include/geolib/math_types.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Mat2T_1aac62b9245bc91c841a73052ee3b8e33f" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T geo::Mat2T&lt; T &gt;::xy</definition>
        <argsstring></argsstring>
        <name>xy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="313" column="20" bodyfile="include/geolib/math_types.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Mat2T_1aa40ad35798911b17e25e54688d045800" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T geo::Mat2T&lt; T &gt;::yx</definition>
        <argsstring></argsstring>
        <name>yx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="313" column="23" bodyfile="include/geolib/math_types.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Mat2T_1ad7491ca15dfbc8d7218fe9b88c6e7964" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T geo::Mat2T&lt; T &gt;::yy</definition>
        <argsstring></argsstring>
        <name>yy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="313" column="26" bodyfile="include/geolib/math_types.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgeo_1_1Mat2T_1a126ddd59f7b7b149ca4304c67ddee4af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>geo::Mat2T&lt; T &gt;::Mat2T</definition>
        <argsstring>()</argsstring>
        <name>Mat2T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="229" column="5" bodyfile="include/geolib/math_types.h" bodystart="229" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat2T_1a9d43b1ee09a09dceed9574dabb1c016e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>geo::Mat2T&lt; T &gt;::Mat2T</definition>
        <argsstring>(const Mat2T &amp;v)=default</argsstring>
        <name>Mat2T</name>
        <param>
          <type>const <ref refid="classgeo_1_1Mat2T" kindref="compound">Mat2T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="230" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat2T_1a6d37bb94caa84412cda447ab1068cda8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>geo::Mat2T&lt; T &gt;::Mat2T</definition>
        <argsstring>(T value)</argsstring>
        <name>Mat2T</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="232" column="5" bodyfile="include/geolib/math_types.h" bodystart="232" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat2T_1a8cadc912fbb4d0675669c4f4206ed477" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>geo::Mat2T&lt; T &gt;::Mat2T</definition>
        <argsstring>(T xx_, T xy_, T yx_, T yy_)</argsstring>
        <name>Mat2T</name>
        <param>
          <type>T</type>
          <declname>xx_</declname>
        </param>
        <param>
          <type>T</type>
          <declname>xy_</declname>
        </param>
        <param>
          <type>T</type>
          <declname>yx_</declname>
        </param>
        <param>
          <type>T</type>
          <declname>yy_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="231" column="5" bodyfile="include/geolib/math_types.h" bodystart="231" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat2T_1aae9f1fbe35ec401d7406803515396e2e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool geo::Mat2T&lt; T &gt;::operator!=</definition>
        <argsstring>(const Mat2T &amp;m) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classgeo_1_1Mat2T" kindref="compound">Mat2T</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="255" column="10" bodyfile="include/geolib/math_types.h" bodystart="255" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat2T_1a64f61f764e0072f7605237f4dc57aad6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; geo::Mat2T&lt; T &gt;::operator()</definition>
        <argsstring>(int i, int j)</argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="276" column="7" bodyfile="include/geolib/math_types.h" bodystart="276" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat2T_1a015b19c2844105494cb003cf085ccda8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; geo::Mat2T&lt; T &gt;::operator()</definition>
        <argsstring>(int i, int j) const</argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="280" column="13" bodyfile="include/geolib/math_types.h" bodystart="280" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat2T_1aa71d2bd06c18a666c7a921cbcbf77726" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Mat2T" kindref="compound">Mat2T</ref></type>
        <definition>Mat2T geo::Mat2T&lt; T &gt;::operator*</definition>
        <argsstring>(const Mat2T &amp;m) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classgeo_1_1Mat2T" kindref="compound">Mat2T</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>return this multiplied by m </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="268" column="11" bodyfile="include/geolib/math_types.h" bodystart="268" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat2T_1ab251baf855efaa1edcb8006750013bad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref>&lt; T &gt;</type>
        <definition>Vec2T&lt;T&gt; geo::Mat2T&lt; T &gt;::operator*</definition>
        <argsstring>(const Vec2T&lt; T &gt; &amp;v) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="265" column="11" bodyfile="include/geolib/math_types.h" bodystart="265" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat2T_1a71fd7a4dd7e6f3fb8df88cc55c455f1b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Mat2T" kindref="compound">Mat2T</ref></type>
        <definition>Mat2T geo::Mat2T&lt; T &gt;::operator*</definition>
        <argsstring>(T s) const</argsstring>
        <name>operator*</name>
        <param>
          <type>T</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>multiplies vector with a scalar </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="285" column="11" bodyfile="include/geolib/math_types.h" bodystart="285" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat2T_1ab960d9866ea6b5fd072faa0599579b1a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Mat2T" kindref="compound">Mat2T</ref></type>
        <definition>Mat2T geo::Mat2T&lt; T &gt;::operator+</definition>
        <argsstring>(const Mat2T &amp;m) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classgeo_1_1Mat2T" kindref="compound">Mat2T</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>returns addition with v </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="260" column="11" bodyfile="include/geolib/math_types.h" bodystart="260" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat2T_1a34bd09f95b44470b87b3ea424601d07c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Mat2T" kindref="compound">Mat2T</ref></type>
        <definition>Mat2T geo::Mat2T&lt; T &gt;::operator-</definition>
        <argsstring>(const Mat2T &amp;m) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classgeo_1_1Mat2T" kindref="compound">Mat2T</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>returns this minus m </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="263" column="11" bodyfile="include/geolib/math_types.h" bodystart="263" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat2T_1a7f05ba6d1a212b96691c371bd20c8a2c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Mat2T" kindref="compound">Mat2T</ref></type>
        <definition>Mat2T geo::Mat2T&lt; T &gt;::operator/</definition>
        <argsstring>(T s) const</argsstring>
        <name>operator/</name>
        <param>
          <type>T</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>divides matrix by scalar </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="288" column="11" bodyfile="include/geolib/math_types.h" bodystart="288" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat2T_1a0cde05d56ca99ee6c1240d34621b3bac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Mat2T" kindref="compound">Mat2T</ref> &amp;</type>
        <definition>Mat2T&amp; geo::Mat2T&lt; T &gt;::operator=</definition>
        <argsstring>(const Mat2T &amp;v)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classgeo_1_1Mat2T" kindref="compound">Mat2T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="234" column="11" bodyfile="include/geolib/math_types.h" bodystart="234" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat2T_1a3fdea16ba8e6e74c02c5ead580b1a40f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool geo::Mat2T&lt; T &gt;::operator==</definition>
        <argsstring>(const Mat2T &amp;m) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classgeo_1_1Mat2T" kindref="compound">Mat2T</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="250" column="10" bodyfile="include/geolib/math_types.h" bodystart="250" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat2T_1af0df4f544242078a126bbd67bf0338e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; geo::Mat2T&lt; T &gt;::operator[]</definition>
        <argsstring>(const uint i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const uint</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="246" column="7" bodyfile="include/geolib/math_types.h" bodystart="246" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat2T_1a0046ecb0b81dc731addddb05442ceefa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; geo::Mat2T&lt; T &gt;::operator[]</definition>
        <argsstring>(const uint i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>const uint</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="248" column="13" bodyfile="include/geolib/math_types.h" bodystart="248" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat2T_1a2f9d9f63c5b46c480b63b7bdef31472a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Mat3T" kindref="compound">Mat3T</ref>&lt; T &gt;</type>
        <definition>Mat3T&lt;T&gt; geo::Mat2T&lt; T &gt;::projectTo3d</definition>
        <argsstring>() const</argsstring>
        <name>projectTo3d</name>
        <briefdescription>
<para>Expand rotation matrix into 3D, with zero rotation around the 3rd axis. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Rotation matrix in 3D </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="299" column="11" bodyfile="include/geolib/math_types.h" bodystart="299" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat2T_1ad4f149d9541addc6440ef3ce4f81d2b1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Mat2T" kindref="compound">Mat2T</ref></type>
        <definition>Mat2T geo::Mat2T&lt; T &gt;::transpose</definition>
        <argsstring>() const</argsstring>
        <name>transpose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="271" column="11" bodyfile="include/geolib/math_types.h" bodystart="271" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Mat2T_1aa8e0106a2248edaa5c5dae42e69bcb97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>geo::Mat2T&lt; T &gt;::~Mat2T</definition>
        <argsstring>()</argsstring>
        <name>~Mat2T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="244" column="5" bodyfile="include/geolib/math_types.h" bodystart="244" bodyend="244"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classgeo_1_1Mat2T_1a340aa50cf7dc12144491b60f440e1b25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="classgeo_1_1Mat2T" kindref="compound">Mat2T</ref></type>
        <definition>Mat2T operator*</definition>
        <argsstring>(T s, const Mat2T &amp;m)</argsstring>
        <name>operator*</name>
        <param>
          <type>T</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1Mat2T" kindref="compound">Mat2T</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>multiplies vector with a scalar </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="291" column="18" bodyfile="include/geolib/math_types.h" bodystart="291" bodyend="291"/>
      </memberdef>
      <memberdef kind="friend" id="classgeo_1_1Mat2T_1aca978b7b37acbf8b0f98c856ec451358" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref> &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const Mat2T &amp;m)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1Mat2T" kindref="compound">Mat2T</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="306" column="12" bodyfile="include/geolib/math_types.h" bodystart="306" bodyend="310"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgeo_1_1Mat2T_1a20118c7ae00f577dc2e0165ab4f40c61" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Mat2T" kindref="compound">Mat2T</ref></type>
        <definition>static Mat2T geo::Mat2T&lt; T &gt;::identity</definition>
        <argsstring>()</argsstring>
        <name>identity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="293" column="18" bodyfile="include/geolib/math_types.h" bodystart="293" bodyend="293"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/geolib/math_types.h" line="226" column="1" bodyfile="include/geolib/math_types.h" bodystart="225" bodyend="317"/>
    <listofallmembers>
      <member refid="classgeo_1_1Mat2T_1a20118c7ae00f577dc2e0165ab4f40c61" prot="public" virt="non-virtual"><scope>geo::Mat2T</scope><name>identity</name></member>
      <member refid="classgeo_1_1Mat2T_1a411556c6f20825c28bec704c59018bb5" prot="public" virt="non-virtual"><scope>geo::Mat2T</scope><name>m</name></member>
      <member refid="classgeo_1_1Mat2T_1a126ddd59f7b7b149ca4304c67ddee4af" prot="public" virt="non-virtual"><scope>geo::Mat2T</scope><name>Mat2T</name></member>
      <member refid="classgeo_1_1Mat2T_1a9d43b1ee09a09dceed9574dabb1c016e" prot="public" virt="non-virtual"><scope>geo::Mat2T</scope><name>Mat2T</name></member>
      <member refid="classgeo_1_1Mat2T_1a8cadc912fbb4d0675669c4f4206ed477" prot="public" virt="non-virtual"><scope>geo::Mat2T</scope><name>Mat2T</name></member>
      <member refid="classgeo_1_1Mat2T_1a6d37bb94caa84412cda447ab1068cda8" prot="public" virt="non-virtual"><scope>geo::Mat2T</scope><name>Mat2T</name></member>
      <member refid="classgeo_1_1Mat2T_1aae9f1fbe35ec401d7406803515396e2e" prot="public" virt="non-virtual"><scope>geo::Mat2T</scope><name>operator!=</name></member>
      <member refid="classgeo_1_1Mat2T_1a64f61f764e0072f7605237f4dc57aad6" prot="public" virt="non-virtual"><scope>geo::Mat2T</scope><name>operator()</name></member>
      <member refid="classgeo_1_1Mat2T_1a015b19c2844105494cb003cf085ccda8" prot="public" virt="non-virtual"><scope>geo::Mat2T</scope><name>operator()</name></member>
      <member refid="classgeo_1_1Mat2T_1ab251baf855efaa1edcb8006750013bad" prot="public" virt="non-virtual"><scope>geo::Mat2T</scope><name>operator*</name></member>
      <member refid="classgeo_1_1Mat2T_1aa71d2bd06c18a666c7a921cbcbf77726" prot="public" virt="non-virtual"><scope>geo::Mat2T</scope><name>operator*</name></member>
      <member refid="classgeo_1_1Mat2T_1a71fd7a4dd7e6f3fb8df88cc55c455f1b" prot="public" virt="non-virtual"><scope>geo::Mat2T</scope><name>operator*</name></member>
      <member refid="classgeo_1_1Mat2T_1a340aa50cf7dc12144491b60f440e1b25" prot="public" virt="non-virtual"><scope>geo::Mat2T</scope><name>operator*</name></member>
      <member refid="classgeo_1_1Mat2T_1ab960d9866ea6b5fd072faa0599579b1a" prot="public" virt="non-virtual"><scope>geo::Mat2T</scope><name>operator+</name></member>
      <member refid="classgeo_1_1Mat2T_1a34bd09f95b44470b87b3ea424601d07c" prot="public" virt="non-virtual"><scope>geo::Mat2T</scope><name>operator-</name></member>
      <member refid="classgeo_1_1Mat2T_1a7f05ba6d1a212b96691c371bd20c8a2c" prot="public" virt="non-virtual"><scope>geo::Mat2T</scope><name>operator/</name></member>
      <member refid="classgeo_1_1Mat2T_1aca978b7b37acbf8b0f98c856ec451358" prot="public" virt="non-virtual"><scope>geo::Mat2T</scope><name>operator&lt;&lt;</name></member>
      <member refid="classgeo_1_1Mat2T_1a0cde05d56ca99ee6c1240d34621b3bac" prot="public" virt="non-virtual"><scope>geo::Mat2T</scope><name>operator=</name></member>
      <member refid="classgeo_1_1Mat2T_1a3fdea16ba8e6e74c02c5ead580b1a40f" prot="public" virt="non-virtual"><scope>geo::Mat2T</scope><name>operator==</name></member>
      <member refid="classgeo_1_1Mat2T_1af0df4f544242078a126bbd67bf0338e9" prot="public" virt="non-virtual"><scope>geo::Mat2T</scope><name>operator[]</name></member>
      <member refid="classgeo_1_1Mat2T_1a0046ecb0b81dc731addddb05442ceefa" prot="public" virt="non-virtual"><scope>geo::Mat2T</scope><name>operator[]</name></member>
      <member refid="classgeo_1_1Mat2T_1a2f9d9f63c5b46c480b63b7bdef31472a" prot="public" virt="non-virtual"><scope>geo::Mat2T</scope><name>projectTo3d</name></member>
      <member refid="classgeo_1_1Mat2T_1ad4f149d9541addc6440ef3ce4f81d2b1" prot="public" virt="non-virtual"><scope>geo::Mat2T</scope><name>transpose</name></member>
      <member refid="classgeo_1_1Mat2T_1adb73140020e1134775d12d507ba4bf95" prot="public" virt="non-virtual"><scope>geo::Mat2T</scope><name>xx</name></member>
      <member refid="classgeo_1_1Mat2T_1aac62b9245bc91c841a73052ee3b8e33f" prot="public" virt="non-virtual"><scope>geo::Mat2T</scope><name>xy</name></member>
      <member refid="classgeo_1_1Mat2T_1aa40ad35798911b17e25e54688d045800" prot="public" virt="non-virtual"><scope>geo::Mat2T</scope><name>yx</name></member>
      <member refid="classgeo_1_1Mat2T_1ad7491ca15dfbc8d7218fe9b88c6e7964" prot="public" virt="non-virtual"><scope>geo::Mat2T</scope><name>yy</name></member>
      <member refid="classgeo_1_1Mat2T_1aa8e0106a2248edaa5c5dae42e69bcb97" prot="public" virt="non-virtual"><scope>geo::Mat2T</scope><name>~Mat2T</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
