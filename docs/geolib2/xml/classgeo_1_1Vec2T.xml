<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classgeo_1_1Vec2T" kind="class" language="C++" prot="public">
    <compoundname>geo::Vec2T</compoundname>
    <includes refid="math__types_8h" local="no">math_types.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classgeo_1_1Vec2T_1a325e8a0ec4e8e2fcd0b7148d3b381bbd" prot="public" static="no" mutable="no">
        <type>union geo::Vec2T::@0</type>
        <definition>union geo::Vec2T::@0 geo::Vec2T&lt; T &gt;::@1</definition>
        <argsstring></argsstring>
        <name>@1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="116" column="5"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Vec2T_1a358b88eda6f1f05199b57df177a9396e" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T geo::Vec2T&lt; T &gt;::m[2]</definition>
        <argsstring>[2]</argsstring>
        <name>m</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="115" column="11" bodyfile="include/geolib/math_types.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Vec2T_1a476c2f7cacbf6b233746ab18f2a87c54" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T geo::Vec2T&lt; T &gt;::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="114" column="17" bodyfile="include/geolib/math_types.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgeo_1_1Vec2T_1a506e3148ad901feea9e7658a4d35fe8b" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T geo::Vec2T&lt; T &gt;::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="114" column="19" bodyfile="include/geolib/math_types.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgeo_1_1Vec2T_1a07f0baf8f08fbf49517542ce0b01de53" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T geo::Vec2T&lt; T &gt;::cross</definition>
        <argsstring>(const Vec2T &amp;v) const</argsstring>
        <name>cross</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns cross product </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="60" column="7" bodyfile="include/geolib/math_types.h" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec2T_1a09c444828e9fbdda458257a9ebace8c6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T geo::Vec2T&lt; T &gt;::dot</definition>
        <argsstring>(const Vec2T &amp;v) const</argsstring>
        <name>dot</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns dot product </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="57" column="7" bodyfile="include/geolib/math_types.h" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec2T_1ad036e641f23b1a7ea73561cf75175283" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T geo::Vec2T&lt; T &gt;::length</definition>
        <argsstring>() const</argsstring>
        <name>length</name>
        <briefdescription>
<para>Returns the length of the vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="78" column="7" bodyfile="include/geolib/math_types.h" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec2T_1ad81702835f5f5427b8e7b59dfc270ff0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T geo::Vec2T&lt; T &gt;::length2</definition>
        <argsstring>() const</argsstring>
        <name>length2</name>
        <briefdescription>
<para>Returns the squared length of the vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="81" column="7" bodyfile="include/geolib/math_types.h" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec2T_1ab5f3f992c87f81d9c32533127a786035" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void geo::Vec2T&lt; T &gt;::normalize</definition>
        <argsstring>()</argsstring>
        <name>normalize</name>
        <briefdescription>
<para>Normalizes the vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="87" column="10" bodyfile="include/geolib/math_types.h" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec2T_1a18fd979a9825bfb240fcc1b292f503c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref></type>
        <definition>Vec2T geo::Vec2T&lt; T &gt;::normalized</definition>
        <argsstring>() const</argsstring>
        <name>normalized</name>
        <briefdescription>
<para>Returns the normalized version of the vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="84" column="11" bodyfile="include/geolib/math_types.h" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec2T_1ac8f3bb755dbc98e8d7a63ff918ed0425" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool geo::Vec2T&lt; T &gt;::operator!=</definition>
        <argsstring>(const Vec2T &amp;v) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="52" column="10" bodyfile="include/geolib/math_types.h" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec2T_1a5a7bb7aafe6c4b6cec788b0982067238" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref></type>
        <definition>Vec2T geo::Vec2T&lt; T &gt;::operator*</definition>
        <argsstring>(T s) const</argsstring>
        <name>operator*</name>
        <param>
          <type>T</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>multiplies vector with a scalar </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="69" column="11" bodyfile="include/geolib/math_types.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec2T_1a927a9a647568df5323e6a715abab23ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref> &amp;</type>
        <definition>Vec2T&amp; geo::Vec2T&lt; T &gt;::operator*=</definition>
        <argsstring>(const Vec2T &amp;v)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="93" column="11" bodyfile="include/geolib/math_types.h" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec2T_1a12564c06c8bb3a6eac4d1bde8c20dce6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref> &amp;</type>
        <definition>Vec2T&amp; geo::Vec2T&lt; T &gt;::operator*=</definition>
        <argsstring>(T s)</argsstring>
        <name>operator*=</name>
        <param>
          <type>T</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="96" column="11" bodyfile="include/geolib/math_types.h" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec2T_1ae8b8c7ec1f42c1190dbfd165f68830b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref></type>
        <definition>Vec2T geo::Vec2T&lt; T &gt;::operator+</definition>
        <argsstring>(const Vec2T &amp;v) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns addition of this and v </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="63" column="11" bodyfile="include/geolib/math_types.h" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec2T_1aacf2e55dd100bc322dd018233f0ba1bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref> &amp;</type>
        <definition>Vec2T&amp; geo::Vec2T&lt; T &gt;::operator+=</definition>
        <argsstring>(const Vec2T &amp;v)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="91" column="11" bodyfile="include/geolib/math_types.h" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec2T_1adc836519afd593b2b78be902e0640b39" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref></type>
        <definition>Vec2T geo::Vec2T&lt; T &gt;::operator-</definition>
        <argsstring>(const Vec2T &amp;v) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns this minus v </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="66" column="11" bodyfile="include/geolib/math_types.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec2T_1a7a1f878820e54331e6c96b89e6f9ca59" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref> &amp;</type>
        <definition>Vec2T&amp; geo::Vec2T&lt; T &gt;::operator-=</definition>
        <argsstring>(const Vec2T &amp;v)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="92" column="11" bodyfile="include/geolib/math_types.h" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec2T_1a7bde61f89f0e60e83250fefe07a09873" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref></type>
        <definition>Vec2T geo::Vec2T&lt; T &gt;::operator/</definition>
        <argsstring>(T s) const</argsstring>
        <name>operator/</name>
        <param>
          <type>T</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>divides vector by scalar </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="72" column="11" bodyfile="include/geolib/math_types.h" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec2T_1aca3000259e70374ab04a21e2ecbd63d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref> &amp;</type>
        <definition>Vec2T&amp; geo::Vec2T&lt; T &gt;::operator/=</definition>
        <argsstring>(const Vec2T &amp;v)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="94" column="11" bodyfile="include/geolib/math_types.h" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec2T_1a81810f4cd84d07313ae2e86dd9db1306" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref> &amp;</type>
        <definition>Vec2T&amp; geo::Vec2T&lt; T &gt;::operator/=</definition>
        <argsstring>(T s)</argsstring>
        <name>operator/=</name>
        <param>
          <type>T</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="97" column="11" bodyfile="include/geolib/math_types.h" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec2T_1a8419fbadb469e9361a467128a97bdf32" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref> &amp;</type>
        <definition>Vec2T&amp; geo::Vec2T&lt; T &gt;::operator=</definition>
        <argsstring>(const Vec2T &amp;v)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="34" column="11" bodyfile="include/geolib/math_types.h" bodystart="34" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec2T_1a30ba41b93a49a8efa4dea3f0ab5a3a28" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool geo::Vec2T&lt; T &gt;::operator==</definition>
        <argsstring>(const Vec2T &amp;v) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="48" column="10" bodyfile="include/geolib/math_types.h" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec2T_1a78d544271e7aa5783a71afc045391faa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; geo::Vec2T&lt; T &gt;::operator[]</definition>
        <argsstring>(const uint i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const uint</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="44" column="7" bodyfile="include/geolib/math_types.h" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec2T_1a08f57f345afd34b4de54e5036e4140c6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; geo::Vec2T&lt; T &gt;::operator[]</definition>
        <argsstring>(const uint i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>const uint</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="46" column="13" bodyfile="include/geolib/math_types.h" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec2T_1a34ccdfdc2d338c92a0b234bb17236b59" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgeo_1_1Vec3T" kindref="compound">Vec3T</ref>&lt; T &gt;</type>
        <definition>Vec3T&lt;T&gt; geo::Vec2T&lt; T &gt;::projectTo3d</definition>
        <argsstring>() const</argsstring>
        <name>projectTo3d</name>
        <briefdescription>
<para>Expand vector with a zero 3rd coordinate. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Vector in 3D </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="103" column="11" bodyfile="include/geolib/math_types.h" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec2T_1a99ee5b735cbc689b514878a5033a3a1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>geo::Vec2T&lt; T &gt;::Vec2T</definition>
        <argsstring>()</argsstring>
        <name>Vec2T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="28" column="5" bodyfile="include/geolib/math_types.h" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec2T_1aec71c7eab7ee660ed7d4de8a3c08698f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>geo::Vec2T&lt; T &gt;::Vec2T</definition>
        <argsstring>(const T *values)</argsstring>
        <name>Vec2T</name>
        <param>
          <type>const T *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="32" column="5" bodyfile="include/geolib/math_types.h" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec2T_1a298599d0a13997db994247bdd068a7a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>geo::Vec2T&lt; T &gt;::Vec2T</definition>
        <argsstring>(const Vec2T &amp;v)=default</argsstring>
        <name>Vec2T</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="29" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec2T_1a601755ef7e8cd5349bb351b4fe60d403" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>geo::Vec2T&lt; T &gt;::Vec2T</definition>
        <argsstring>(T value)</argsstring>
        <name>Vec2T</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="31" column="5" bodyfile="include/geolib/math_types.h" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec2T_1a56048273cf56a85104a87e4dc0ccdfe9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>geo::Vec2T&lt; T &gt;::Vec2T</definition>
        <argsstring>(T x_, T y_)</argsstring>
        <name>Vec2T</name>
        <param>
          <type>T</type>
          <declname>x_</declname>
        </param>
        <param>
          <type>T</type>
          <declname>y_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="30" column="5" bodyfile="include/geolib/math_types.h" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classgeo_1_1Vec2T_1a01a87ff9ed97fd4ea277cfa738b51f04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>geo::Vec2T&lt; T &gt;::~Vec2T</definition>
        <argsstring>()</argsstring>
        <name>~Vec2T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="42" column="5" bodyfile="include/geolib/math_types.h" bodystart="42" bodyend="42"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classgeo_1_1Vec2T_1ac0a8849572f4122821901dc8fe904297" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref></type>
        <definition>Vec2T operator*</definition>
        <argsstring>(T s, const Vec2T &amp;v)</argsstring>
        <name>operator*</name>
        <param>
          <type>T</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>multiplies vector with a scalar </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="75" column="18" bodyfile="include/geolib/math_types.h" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="friend" id="classgeo_1_1Vec2T_1ab4e5e10cd7ee60b5a0587bfeae9e797a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref></type>
        <definition>Vec2T operator-</definition>
        <argsstring>(const Vec2T &amp;v)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="89" column="18" bodyfile="include/geolib/math_types.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="friend" id="classgeo_1_1Vec2T_1a63e5e720070365c2b3793a173ec9e5e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref> &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const Vec2T &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classgeo_1_1Vec2T" kindref="compound">Vec2T</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/geolib/math_types.h" line="108" column="12" bodyfile="include/geolib/math_types.h" bodystart="108" bodyend="111"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/geolib/math_types.h" line="25" column="1" bodyfile="include/geolib/math_types.h" bodystart="24" bodyend="117"/>
    <listofallmembers>
      <member refid="classgeo_1_1Vec2T_1a07f0baf8f08fbf49517542ce0b01de53" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>cross</name></member>
      <member refid="classgeo_1_1Vec2T_1a09c444828e9fbdda458257a9ebace8c6" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>dot</name></member>
      <member refid="classgeo_1_1Vec2T_1ad036e641f23b1a7ea73561cf75175283" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>length</name></member>
      <member refid="classgeo_1_1Vec2T_1ad81702835f5f5427b8e7b59dfc270ff0" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>length2</name></member>
      <member refid="classgeo_1_1Vec2T_1a358b88eda6f1f05199b57df177a9396e" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>m</name></member>
      <member refid="classgeo_1_1Vec2T_1ab5f3f992c87f81d9c32533127a786035" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>normalize</name></member>
      <member refid="classgeo_1_1Vec2T_1a18fd979a9825bfb240fcc1b292f503c8" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>normalized</name></member>
      <member refid="classgeo_1_1Vec2T_1ac8f3bb755dbc98e8d7a63ff918ed0425" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>operator!=</name></member>
      <member refid="classgeo_1_1Vec2T_1a5a7bb7aafe6c4b6cec788b0982067238" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>operator*</name></member>
      <member refid="classgeo_1_1Vec2T_1ac0a8849572f4122821901dc8fe904297" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>operator*</name></member>
      <member refid="classgeo_1_1Vec2T_1a927a9a647568df5323e6a715abab23ce" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>operator*=</name></member>
      <member refid="classgeo_1_1Vec2T_1a12564c06c8bb3a6eac4d1bde8c20dce6" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>operator*=</name></member>
      <member refid="classgeo_1_1Vec2T_1ae8b8c7ec1f42c1190dbfd165f68830b9" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>operator+</name></member>
      <member refid="classgeo_1_1Vec2T_1aacf2e55dd100bc322dd018233f0ba1bf" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>operator+=</name></member>
      <member refid="classgeo_1_1Vec2T_1adc836519afd593b2b78be902e0640b39" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>operator-</name></member>
      <member refid="classgeo_1_1Vec2T_1ab4e5e10cd7ee60b5a0587bfeae9e797a" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>operator-</name></member>
      <member refid="classgeo_1_1Vec2T_1a7a1f878820e54331e6c96b89e6f9ca59" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>operator-=</name></member>
      <member refid="classgeo_1_1Vec2T_1a7bde61f89f0e60e83250fefe07a09873" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>operator/</name></member>
      <member refid="classgeo_1_1Vec2T_1aca3000259e70374ab04a21e2ecbd63d0" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>operator/=</name></member>
      <member refid="classgeo_1_1Vec2T_1a81810f4cd84d07313ae2e86dd9db1306" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>operator/=</name></member>
      <member refid="classgeo_1_1Vec2T_1a63e5e720070365c2b3793a173ec9e5e1" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>operator&lt;&lt;</name></member>
      <member refid="classgeo_1_1Vec2T_1a8419fbadb469e9361a467128a97bdf32" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>operator=</name></member>
      <member refid="classgeo_1_1Vec2T_1a30ba41b93a49a8efa4dea3f0ab5a3a28" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>operator==</name></member>
      <member refid="classgeo_1_1Vec2T_1a78d544271e7aa5783a71afc045391faa" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>operator[]</name></member>
      <member refid="classgeo_1_1Vec2T_1a08f57f345afd34b4de54e5036e4140c6" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>operator[]</name></member>
      <member refid="classgeo_1_1Vec2T_1a34ccdfdc2d338c92a0b234bb17236b59" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>projectTo3d</name></member>
      <member refid="classgeo_1_1Vec2T_1a99ee5b735cbc689b514878a5033a3a1c" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>Vec2T</name></member>
      <member refid="classgeo_1_1Vec2T_1a298599d0a13997db994247bdd068a7a6" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>Vec2T</name></member>
      <member refid="classgeo_1_1Vec2T_1a56048273cf56a85104a87e4dc0ccdfe9" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>Vec2T</name></member>
      <member refid="classgeo_1_1Vec2T_1a601755ef7e8cd5349bb351b4fe60d403" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>Vec2T</name></member>
      <member refid="classgeo_1_1Vec2T_1aec71c7eab7ee660ed7d4de8a3c08698f" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>Vec2T</name></member>
      <member refid="classgeo_1_1Vec2T_1a476c2f7cacbf6b233746ab18f2a87c54" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>x</name></member>
      <member refid="classgeo_1_1Vec2T_1a506e3148ad901feea9e7658a4d35fe8b" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>y</name></member>
      <member refid="classgeo_1_1Vec2T_1a01a87ff9ed97fd4ea277cfa738b51f04" prot="public" virt="non-virtual"><scope>geo::Vec2T</scope><name>~Vec2T</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
