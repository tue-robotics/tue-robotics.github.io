upower_ros.upower
=================

.. py:module:: upower_ros.upower


Attributes
----------

.. autoapisummary::

   upower_ros.upower.dbus_battery_health_mapping
   upower_ros.upower.dbus_battery_level_mapping
   upower_ros.upower.dbus_battery_status_mapping
   upower_ros.upower.dbus_battery_technology_mapping


Classes
-------

.. autoapisummary::

   upower_ros.upower.BatteryState
   upower_ros.upower.DbusTypeMapping
   upower_ros.upower.UPowerBase
   upower_ros.upower.UPowerManager
   upower_ros.upower.UPowerDevice


Module Contents
---------------

.. py:class:: BatteryState

   Bases: :py:obj:`enum.Enum`


   Generic enumeration.

   Derive from this class to define new enumerations.


   .. py:attribute:: Unknown
      :value: 0



   .. py:attribute:: Charging
      :value: 1



   .. py:attribute:: Discharging
      :value: 2



   .. py:attribute:: Empty
      :value: 3



   .. py:attribute:: Fully_charged
      :value: 4



   .. py:attribute:: Pending_charge
      :value: 5



   .. py:attribute:: Pending_discharge
      :value: 6



.. py:class:: DbusTypeMapping

   .. py:attribute:: b


   .. py:attribute:: d


   .. py:attribute:: i


   .. py:attribute:: s


   .. py:attribute:: t


   .. py:attribute:: u


   .. py:attribute:: x


.. py:data:: dbus_battery_health_mapping
   :value: [0, 1, 2, 0, 4, 3, 3]


.. py:data:: dbus_battery_level_mapping
   :value: [0, 0, None, 2, 1, None, 3, 4, 5]


.. py:data:: dbus_battery_status_mapping
   :value: [0, 1, 2, 0, 4, 3, 3]


.. py:data:: dbus_battery_technology_mapping
   :value: [0, 2, 3, 4, 0, 5, 1]


.. py:class:: UPowerBase(upower_interface = 'org.freedesktop.UPower', upower_path = '/org/freedesktop/UPower')

   Bases: :py:obj:`object`


   .. py:attribute:: upower_interface_name
      :value: 'org.freedesktop.UPower'



   .. py:attribute:: upower_name
      :value: 'org.freedesktop.UPower'



   .. py:attribute:: upower_path
      :value: '/org/freedesktop/UPower'



   .. py:attribute:: bus


   .. py:attribute:: bus_obj


   .. py:attribute:: upower_interface


   .. py:attribute:: property_interface


   .. py:attribute:: properties


   .. py:attribute:: _nodes


   .. py:method:: __getitem__(item)


   .. py:method:: __iter__()


.. py:class:: UPowerManager(upower_interface = 'org.freedesktop.UPower', upower_path = '/org/freedesktop/UPower')

   Bases: :py:obj:`UPowerBase`


   .. py:attribute:: _devices


   .. py:method:: get_power_devices()


   .. py:method:: get_display_device()


   .. py:method:: get_critical_action()


   .. py:method:: get_device_percentage(battery)


   .. py:method:: get_full_device_information(battery)


   .. py:method:: is_lid_present()


   .. py:method:: is_lid_closed()


   .. py:method:: on_battery()


   .. py:method:: has_wakeup_capabilities()


   .. py:method:: get_wakeups_data()


   .. py:method:: get_wakeups_total()


   .. py:method:: is_charging(battery)


   .. py:method:: get_state(battery)


.. py:class:: UPowerDevice(upower_interface = 'org.freedesktop.UPower.Device', upower_path = '/org/freedesktop/UPower/devices/battery_BAT0')

   Bases: :py:obj:`UPowerBase`


   .. py:method:: get_full_device_information()


