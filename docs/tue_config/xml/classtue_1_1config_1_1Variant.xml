<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classtue_1_1config_1_1Variant" kind="class" language="C++" prot="public">
    <compoundname>tue::config::Variant</compoundname>
    <includes refid="variant_8h" local="no">variant.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtue_1_1config_1_1Variant_1aa733b63c9e50d9779118e4dadc5b2414" prot="private" static="no" mutable="no">
        <type>union tue::config::Variant::@0</type>
        <definition>union tue::config::Variant::@0 tue::config::Variant::@1</definition>
        <argsstring></argsstring>
        <name>@1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/config/variant.h" line="155" column="5"/>
      </memberdef>
      <memberdef kind="variable" id="classtue_1_1config_1_1Variant_1a191c5f52ff4bbe85ccd73981488997c5" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>std::string tue::config::Variant::s_</definition>
        <argsstring></argsstring>
        <name>s_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/config/variant.h" line="157" column="17" bodyfile="include/tue/config/variant.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtue_1_1config_1_1Variant_1aea3eef46d6e0abed75b1be39238e106a" prot="private" static="no" mutable="no">
        <type>char</type>
        <definition>char tue::config::Variant::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/config/variant.h" line="149" column="10" bodyfile="include/tue/config/variant.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classtue_1_1config_1_1Variant_1a1736cdc34d9409d06d22bd6feec1b50c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tue::config::Variant::b_</definition>
        <argsstring></argsstring>
        <name>b_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/config/variant.h" line="154" column="14" bodyfile="include/tue/config/variant.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtue_1_1config_1_1Variant_1a885be6bb24804bf646f1fcbb5564ecbd" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double tue::config::Variant::d_</definition>
        <argsstring></argsstring>
        <name>d_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/config/variant.h" line="153" column="16" bodyfile="include/tue/config/variant.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtue_1_1config_1_1Variant_1a6d31743653e0274ec4ed367275115422" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int tue::config::Variant::i_</definition>
        <argsstring></argsstring>
        <name>i_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/config/variant.h" line="152" column="13" bodyfile="include/tue/config/variant.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtue_1_1config_1_1Variant_1a1830fa2a609c6cfe340070e3fbd5c8b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tue::config::Variant::getValue</definition>
        <argsstring>(bool &amp;v)</argsstring>
        <name>getValue</name>
        <param>
          <type>bool &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/config/variant.h" line="129" column="10" bodyfile="include/tue/config/variant.h" bodystart="129" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1config_1_1Variant_1a50865c153bb327d024945fa79119afe5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tue::config::Variant::getValue</definition>
        <argsstring>(double &amp;v)</argsstring>
        <name>getValue</name>
        <param>
          <type>double &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/config/variant.h" line="125" column="10" bodyfile="include/tue/config/variant.h" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1config_1_1Variant_1a6b208c80d918ca1731d76bce9b7907a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tue::config::Variant::getValue</definition>
        <argsstring>(float &amp;v)</argsstring>
        <name>getValue</name>
        <param>
          <type>float &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/config/variant.h" line="126" column="10" bodyfile="include/tue/config/variant.h" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1config_1_1Variant_1a51237ab0642bc65c09d8892876dcd930" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tue::config::Variant::getValue</definition>
        <argsstring>(int &amp;v)</argsstring>
        <name>getValue</name>
        <param>
          <type>int &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/config/variant.h" line="124" column="10" bodyfile="include/tue/config/variant.h" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1config_1_1Variant_1ada509b0089d19f34cd68ac45f2d1d85d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tue::config::Variant::getValue</definition>
        <argsstring>(std::string &amp;v)</argsstring>
        <name>getValue</name>
        <param>
          <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/config/variant.h" line="127" column="10" bodyfile="include/tue/config/variant.h" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1config_1_1Variant_1a2a80d65e56ff2d13c884a1bdc1933013" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tue::config::Variant::isBoolean</definition>
        <argsstring>() const</argsstring>
        <name>isBoolean</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/config/variant.h" line="143" column="10" bodyfile="include/tue/config/variant.h" bodystart="143" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1config_1_1Variant_1a1abfc4e4c18426281bffbd468a038a5e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tue::config::Variant::isDouble</definition>
        <argsstring>() const</argsstring>
        <name>isDouble</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/config/variant.h" line="142" column="10" bodyfile="include/tue/config/variant.h" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1config_1_1Variant_1ae91391c6a1a4544f6bea2e1defd783e0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tue::config::Variant::isInt</definition>
        <argsstring>() const</argsstring>
        <name>isInt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/config/variant.h" line="141" column="10" bodyfile="include/tue/config/variant.h" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1config_1_1Variant_1a20576993b12522c6570621622a3f9b93" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tue::config::Variant::isString</definition>
        <argsstring>() const</argsstring>
        <name>isString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/config/variant.h" line="140" column="10" bodyfile="include/tue/config/variant.h" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1config_1_1Variant_1ad9db7a2dbbb881008a4c53a65c0fe304" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tue::config::Variant::valid</definition>
        <argsstring>() const</argsstring>
        <name>valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/config/variant.h" line="145" column="17" bodyfile="include/tue/config/variant.h" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1config_1_1Variant_1a78de0329900808ac1a78ee2edb028c91" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tue::config::Variant::Variant</definition>
        <argsstring>()</argsstring>
        <name>Variant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/config/variant.h" line="116" column="5" bodyfile="include/tue/config/variant.h" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1config_1_1Variant_1a54a27c0c476a13591f90b00e4e7131d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tue::config::Variant::Variant</definition>
        <argsstring>(const bool &amp;b)</argsstring>
        <name>Variant</name>
        <param>
          <type>const bool &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/config/variant.h" line="118" column="5" bodyfile="include/tue/config/variant.h" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1config_1_1Variant_1aec7341a865a8491052842b2340e84395" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tue::config::Variant::Variant</definition>
        <argsstring>(const char *s)</argsstring>
        <name>Variant</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/config/variant.h" line="122" column="5" bodyfile="include/tue/config/variant.h" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1config_1_1Variant_1a7cbef8a79e4e0e5c037c21c7cd789b7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tue::config::Variant::Variant</definition>
        <argsstring>(const double &amp;d)</argsstring>
        <name>Variant</name>
        <param>
          <type>const double &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/config/variant.h" line="119" column="5" bodyfile="include/tue/config/variant.h" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1config_1_1Variant_1a1ee688b39ddccb5d1a1b242f4824e426" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tue::config::Variant::Variant</definition>
        <argsstring>(const std::string &amp;s)</argsstring>
        <name>Variant</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/config/variant.h" line="121" column="5" bodyfile="include/tue/config/variant.h" bodystart="121" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classtue_1_1config_1_1Variant_1a9734e6995abfc3a8da9505ce2bc3294b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tue::config::Variant::Variant</definition>
        <argsstring>(int i)</argsstring>
        <name>Variant</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/config/variant.h" line="120" column="5" bodyfile="include/tue/config/variant.h" bodystart="120" bodyend="120"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtue_1_1config_1_1Variant_1a0d75afe5772f9293e33903ed8f526980" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool tue::config::Variant::checkAndGet</definition>
        <argsstring>(const T &amp;v, char type, T &amp;out)</argsstring>
        <name>checkAndGet</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>char</type>
          <declname>type</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/config/variant.h" line="160" column="17" bodyfile="include/tue/config/variant.h" bodystart="160" bodyend="166"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classtue_1_1config_1_1Variant_1aee754e7f4f42fccd10d2a65a8531cee6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref> &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const Variant &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classtue_1_1config_1_1Variant" kindref="compound">Variant</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tue/config/variant.h" line="168" column="12" bodyfile="include/tue/config/variant.h" bodystart="168" bodyend="185"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>tue::config::Variant</label>
        <link refid="classtue_1_1config_1_1Variant"/>
        <childnode refid="2" relation="usage">
          <edgelabel>s_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::string</label>
        <link refid="cpp/string/basic_string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </collaborationgraph>
    <location file="include/tue/config/variant.h" line="112" column="1" bodyfile="include/tue/config/variant.h" bodystart="111" bodyend="187"/>
    <listofallmembers>
      <member refid="classtue_1_1config_1_1Variant_1a1736cdc34d9409d06d22bd6feec1b50c" prot="public" virt="non-virtual"><scope>tue::config::Variant</scope><name>b_</name></member>
      <member refid="classtue_1_1config_1_1Variant_1a0d75afe5772f9293e33903ed8f526980" prot="private" virt="non-virtual"><scope>tue::config::Variant</scope><name>checkAndGet</name></member>
      <member refid="classtue_1_1config_1_1Variant_1a885be6bb24804bf646f1fcbb5564ecbd" prot="public" virt="non-virtual"><scope>tue::config::Variant</scope><name>d_</name></member>
      <member refid="classtue_1_1config_1_1Variant_1a51237ab0642bc65c09d8892876dcd930" prot="public" virt="non-virtual"><scope>tue::config::Variant</scope><name>getValue</name></member>
      <member refid="classtue_1_1config_1_1Variant_1a50865c153bb327d024945fa79119afe5" prot="public" virt="non-virtual"><scope>tue::config::Variant</scope><name>getValue</name></member>
      <member refid="classtue_1_1config_1_1Variant_1a6b208c80d918ca1731d76bce9b7907a4" prot="public" virt="non-virtual"><scope>tue::config::Variant</scope><name>getValue</name></member>
      <member refid="classtue_1_1config_1_1Variant_1ada509b0089d19f34cd68ac45f2d1d85d" prot="public" virt="non-virtual"><scope>tue::config::Variant</scope><name>getValue</name></member>
      <member refid="classtue_1_1config_1_1Variant_1a1830fa2a609c6cfe340070e3fbd5c8b2" prot="public" virt="non-virtual"><scope>tue::config::Variant</scope><name>getValue</name></member>
      <member refid="classtue_1_1config_1_1Variant_1a6d31743653e0274ec4ed367275115422" prot="public" virt="non-virtual"><scope>tue::config::Variant</scope><name>i_</name></member>
      <member refid="classtue_1_1config_1_1Variant_1a2a80d65e56ff2d13c884a1bdc1933013" prot="public" virt="non-virtual"><scope>tue::config::Variant</scope><name>isBoolean</name></member>
      <member refid="classtue_1_1config_1_1Variant_1a1abfc4e4c18426281bffbd468a038a5e" prot="public" virt="non-virtual"><scope>tue::config::Variant</scope><name>isDouble</name></member>
      <member refid="classtue_1_1config_1_1Variant_1ae91391c6a1a4544f6bea2e1defd783e0" prot="public" virt="non-virtual"><scope>tue::config::Variant</scope><name>isInt</name></member>
      <member refid="classtue_1_1config_1_1Variant_1a20576993b12522c6570621622a3f9b93" prot="public" virt="non-virtual"><scope>tue::config::Variant</scope><name>isString</name></member>
      <member refid="classtue_1_1config_1_1Variant_1aee754e7f4f42fccd10d2a65a8531cee6" prot="private" virt="non-virtual"><scope>tue::config::Variant</scope><name>operator&lt;&lt;</name></member>
      <member refid="classtue_1_1config_1_1Variant_1a191c5f52ff4bbe85ccd73981488997c5" prot="private" virt="non-virtual"><scope>tue::config::Variant</scope><name>s_</name></member>
      <member refid="classtue_1_1config_1_1Variant_1aea3eef46d6e0abed75b1be39238e106a" prot="private" virt="non-virtual"><scope>tue::config::Variant</scope><name>type_</name></member>
      <member refid="classtue_1_1config_1_1Variant_1ad9db7a2dbbb881008a4c53a65c0fe304" prot="public" virt="non-virtual"><scope>tue::config::Variant</scope><name>valid</name></member>
      <member refid="classtue_1_1config_1_1Variant_1a78de0329900808ac1a78ee2edb028c91" prot="public" virt="non-virtual"><scope>tue::config::Variant</scope><name>Variant</name></member>
      <member refid="classtue_1_1config_1_1Variant_1a54a27c0c476a13591f90b00e4e7131d2" prot="public" virt="non-virtual"><scope>tue::config::Variant</scope><name>Variant</name></member>
      <member refid="classtue_1_1config_1_1Variant_1a7cbef8a79e4e0e5c037c21c7cd789b7c" prot="public" virt="non-virtual"><scope>tue::config::Variant</scope><name>Variant</name></member>
      <member refid="classtue_1_1config_1_1Variant_1a9734e6995abfc3a8da9505ce2bc3294b" prot="public" virt="non-virtual"><scope>tue::config::Variant</scope><name>Variant</name></member>
      <member refid="classtue_1_1config_1_1Variant_1a1ee688b39ddccb5d1a1b242f4824e426" prot="public" virt="non-virtual"><scope>tue::config::Variant</scope><name>Variant</name></member>
      <member refid="classtue_1_1config_1_1Variant_1aec7341a865a8491052842b2340e84395" prot="public" virt="non-virtual"><scope>tue::config::Variant</scope><name>Variant</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
