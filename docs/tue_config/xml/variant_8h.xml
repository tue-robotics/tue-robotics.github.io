<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="variant_8h" kind="file" language="C++">
    <compoundname>variant.h</compoundname>
    <includes local="no">boost/shared_ptr.hpp</includes>
    <includes local="no">string</includes>
    <includes local="no">iostream</includes>
    <includedby refid="node_8h" local="yes">node.h</includedby>
    <includedby refid="test__variant_8cpp" local="no">test_variant.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>variant.h</label>
        <link refid="variant_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="4">
        <label>iostream</label>
        <link refid="cpp/header/iostream" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="3">
        <label>string</label>
        <link refid="cpp/header/string" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>reader.h</label>
        <link refid="reader_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>variant.h</label>
        <link refid="variant_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>data.cpp</label>
        <link refid="data_8cpp"/>
      </node>
      <node id="12">
        <label>yaml.cpp</label>
        <link refid="yaml_8cpp"/>
      </node>
      <node id="13">
        <label>test_config.cpp</label>
        <link refid="test__config_8cpp"/>
      </node>
      <node id="5">
        <label>reader.cpp</label>
        <link refid="reader_8cpp"/>
      </node>
      <node id="27">
        <label>map.h</label>
        <link refid="map_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>write.cpp</label>
        <link refid="write_8cpp"/>
      </node>
      <node id="18">
        <label>test_xml_and_show.cpp</label>
        <link refid="test__xml__and__show_8cpp"/>
      </node>
      <node id="16">
        <label>sdf_gtest.cpp</label>
        <link refid="sdf__gtest_8cpp"/>
      </node>
      <node id="10">
        <label>sdf.cpp</label>
        <link refid="sdf_8cpp"/>
      </node>
      <node id="3">
        <label>data.h</label>
        <link refid="data_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>test_variant.cpp</label>
        <link refid="test__variant_8cpp"/>
      </node>
      <node id="24">
        <label>sequence.cpp</label>
        <link refid="sequence_8cpp"/>
      </node>
      <node id="6">
        <label>test.cpp</label>
        <link refid="test_8cpp"/>
      </node>
      <node id="28">
        <label>sequence.h</label>
        <link refid="sequence_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>test_sdf_and_show.cpp</label>
        <link refid="test__sdf__and__show_8cpp"/>
      </node>
      <node id="19">
        <label>writer.h</label>
        <link refid="writer_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>reader_writer.cpp</label>
        <link refid="reader__writer_8cpp"/>
      </node>
      <node id="29">
        <label>node.cpp</label>
        <link refid="node_8cpp"/>
      </node>
      <node id="20">
        <label>writer.cpp</label>
        <link refid="writer_8cpp"/>
      </node>
      <node id="7">
        <label>test_yaml_and_show.cpp</label>
        <link refid="test__yaml__and__show_8cpp"/>
      </node>
      <node id="11">
        <label>xml.cpp</label>
        <link refid="xml_8cpp"/>
      </node>
      <node id="26">
        <label>yaml_emitter.cpp</label>
        <link refid="yaml__emitter_8cpp"/>
      </node>
      <node id="23">
        <label>map.cpp</label>
        <link refid="map_8cpp"/>
      </node>
      <node id="9">
        <label>configuration.h</label>
        <link refid="configuration_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>read.cpp</label>
        <link refid="read_8cpp"/>
      </node>
      <node id="8">
        <label>reader_writer.h</label>
        <link refid="reader__writer_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>data_pointer.cpp</label>
        <link refid="data__pointer_8cpp"/>
      </node>
      <node id="2">
        <label>node.h</label>
        <link refid="node_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classtue_1_1config_1_1Variant" prot="public">tue::config::Variant</innerclass>
    <innernamespace refid="namespacetue">tue</innernamespace>
    <innernamespace refid="namespacetue_1_1config">tue::config</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>TUE_CONFIG_VARIANT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TUE_CONFIG_VARIANT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Directly<sp/>taken<sp/>from<sp/>http://stackoverflow.com/questions/5319216/implementing-a-variant-class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/shared_ptr.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cpp/header/string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">string</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cpp/header/iostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">iostream</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetue" kindref="compound">tue</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="sdf__gtest_8cpp_1a82a0ab7303cc394c32a028c9a6b2823c" kindref="member">config</ref></highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//template<sp/>&lt;typename<sp/>T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//struct<sp/>TypeWrapper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>typedef<sp/>T<sp/>TYPE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>typedef<sp/>const<sp/>T<sp/>CONSTTYPE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>typedef<sp/>T&amp;<sp/>REFTYPE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>typedef<sp/>const<sp/>T&amp;<sp/>CONSTREFTYPE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//template<sp/>&lt;typename<sp/>T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//struct<sp/>TypeWrapper&lt;const<sp/>T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>typedef<sp/>T<sp/>TYPE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>typedef<sp/>const<sp/>T<sp/>CONSTTYPE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>typedef<sp/>T&amp;<sp/>REFTYPE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>typedef<sp/>const<sp/>T&amp;<sp/>CONSTREFTYPE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//template<sp/>&lt;typename<sp/>T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//struct<sp/>TypeWrapper&lt;const<sp/>T&amp;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>typedef<sp/>T<sp/>TYPE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>typedef<sp/>const<sp/>T<sp/>CONSTTYPE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>typedef<sp/>T&amp;<sp/>REFTYPE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>typedef<sp/>const<sp/>T&amp;<sp/>CONSTREFTYPE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//template<sp/>&lt;typename<sp/>T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//struct<sp/>TypeWrapper&lt;T&amp;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>typedef<sp/>T<sp/>TYPE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>typedef<sp/>const<sp/>T<sp/>CONSTTYPE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>typedef<sp/>T&amp;<sp/>REFTYPE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>typedef<sp/>const<sp/>T&amp;<sp/>CONSTREFTYPE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//class<sp/>Variant2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//public:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Variant2()<sp/>{<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>template&lt;class<sp/>T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Variant2(T<sp/>inValue)<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mImpl(new<sp/>VariantImpl&lt;typename<sp/>TypeWrapper&lt;T&gt;::TYPE&gt;(inValue))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>template&lt;class<sp/>T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>typename<sp/>TypeWrapper&lt;T&gt;::REFTYPE<sp/>getValue()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>dynamic_cast&lt;VariantImpl&lt;typename<sp/>TypeWrapper&lt;T&gt;::TYPE&gt;&amp;&gt;(*mImpl.get()).mValue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>template&lt;class<sp/>T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>typename<sp/>TypeWrapper&lt;T&gt;::CONSTREFTYPE<sp/>getValue()<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>dynamic_cast&lt;VariantImpl&lt;typename<sp/>TypeWrapper&lt;T&gt;::TYPE&gt;&amp;&gt;(*mImpl.get()).mValue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>template&lt;class<sp/>T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>void<sp/>setValue(typename<sp/>TypeWrapper&lt;T&gt;::CONSTREFTYPE<sp/>inValue)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mImpl.reset(new<sp/>VariantImpl&lt;typename<sp/>TypeWrapper&lt;T&gt;::TYPE&gt;(inValue));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>friend<sp/>std::ostream&amp;<sp/>operator&lt;&lt;<sp/>(std::ostream&amp;<sp/>out,<sp/>const<sp/>Variant2&amp;<sp/>v)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.mImpl-&gt;print(out);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>out;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//private:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>struct<sp/>AbstractVariantImpl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>~AbstractVariantImpl()<sp/>{}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>print(std::ostream&amp;<sp/>out)<sp/>const<sp/>{}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>template&lt;class<sp/>T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>struct<sp/>VariantImpl<sp/>:<sp/>public<sp/>AbstractVariantImpl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VariantImpl(T<sp/>inValue)<sp/>:<sp/>mValue(inValue)<sp/>{<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~VariantImpl()<sp/>{}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>mValue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>print(std::ostream&amp;<sp/>out)<sp/>const<sp/>{<sp/>out<sp/>&lt;&lt;<sp/>mValue;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>boost::shared_ptr&lt;AbstractVariantImpl&gt;<sp/>mImpl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classtue_1_1config_1_1Variant" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtue_1_1config_1_1Variant" kindref="compound">Variant</ref></highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classtue_1_1config_1_1Variant_1a78de0329900808ac1a78ee2edb028c91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtue_1_1config_1_1Variant_1a78de0329900808ac1a78ee2edb028c91" kindref="member">Variant</ref>()<sp/>:<sp/><ref refid="classtue_1_1config_1_1Variant_1aea3eef46d6e0abed75b1be39238e106a" kindref="member">type_</ref>(</highlight><highlight class="stringliteral">&apos;?&apos;</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="classtue_1_1config_1_1Variant_1a54a27c0c476a13591f90b00e4e7131d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtue_1_1config_1_1Variant_1a54a27c0c476a13591f90b00e4e7131d2" kindref="member">Variant</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>b)<sp/>:<sp/><ref refid="classtue_1_1config_1_1Variant_1aea3eef46d6e0abed75b1be39238e106a" kindref="member">type_</ref>(</highlight><highlight class="stringliteral">&apos;b&apos;</highlight><highlight class="normal">),<sp/><ref refid="classtue_1_1config_1_1Variant_1a1736cdc34d9409d06d22bd6feec1b50c" kindref="member">b_</ref>(b)<sp/>{}</highlight></codeline>
<codeline lineno="119" refid="classtue_1_1config_1_1Variant_1a7cbef8a79e4e0e5c037c21c7cd789b7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtue_1_1config_1_1Variant_1a7cbef8a79e4e0e5c037c21c7cd789b7c" kindref="member">Variant</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>d)<sp/>:<sp/><ref refid="classtue_1_1config_1_1Variant_1aea3eef46d6e0abed75b1be39238e106a" kindref="member">type_</ref>(</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">),<sp/><ref refid="classtue_1_1config_1_1Variant_1a885be6bb24804bf646f1fcbb5564ecbd" kindref="member">d_</ref>(d)<sp/>{}</highlight></codeline>
<codeline lineno="120" refid="classtue_1_1config_1_1Variant_1a9734e6995abfc3a8da9505ce2bc3294b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtue_1_1config_1_1Variant_1a9734e6995abfc3a8da9505ce2bc3294b" kindref="member">Variant</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>:<sp/><ref refid="classtue_1_1config_1_1Variant_1aea3eef46d6e0abed75b1be39238e106a" kindref="member">type_</ref>(</highlight><highlight class="stringliteral">&apos;i&apos;</highlight><highlight class="normal">),<sp/><ref refid="classtue_1_1config_1_1Variant_1a6d31743653e0274ec4ed367275115422" kindref="member">i_</ref>(i)<sp/>{}</highlight></codeline>
<codeline lineno="121" refid="classtue_1_1config_1_1Variant_1a1ee688b39ddccb5d1a1b242f4824e426" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtue_1_1config_1_1Variant_1a1ee688b39ddccb5d1a1b242f4824e426" kindref="member">Variant</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>s)<sp/>:<sp/><ref refid="classtue_1_1config_1_1Variant_1aea3eef46d6e0abed75b1be39238e106a" kindref="member">type_</ref>(</highlight><highlight class="stringliteral">&apos;s&apos;</highlight><highlight class="normal">),<sp/><ref refid="classtue_1_1config_1_1Variant_1a191c5f52ff4bbe85ccd73981488997c5" kindref="member">s_</ref>(s)<sp/>{}</highlight></codeline>
<codeline lineno="122" refid="classtue_1_1config_1_1Variant_1aec7341a865a8491052842b2340e84395" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtue_1_1config_1_1Variant_1aec7341a865a8491052842b2340e84395" kindref="member">Variant</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s)<sp/>:<sp/><ref refid="classtue_1_1config_1_1Variant_1aea3eef46d6e0abed75b1be39238e106a" kindref="member">type_</ref>(</highlight><highlight class="stringliteral">&apos;s&apos;</highlight><highlight class="normal">),<sp/><ref refid="classtue_1_1config_1_1Variant_1a191c5f52ff4bbe85ccd73981488997c5" kindref="member">s_</ref>(s)<sp/>{}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="classtue_1_1config_1_1Variant_1a51237ab0642bc65c09d8892876dcd930" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1config_1_1Variant_1a51237ab0642bc65c09d8892876dcd930" kindref="member">getValue</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1config_1_1Variant_1a0d75afe5772f9293e33903ed8f526980" kindref="member">checkAndGet</ref>(<ref refid="classtue_1_1config_1_1Variant_1a6d31743653e0274ec4ed367275115422" kindref="member">i_</ref>,<sp/></highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal">,<sp/>v)<sp/>||<sp/><ref refid="classtue_1_1config_1_1Variant_1a0d75afe5772f9293e33903ed8f526980" kindref="member">checkAndGet</ref>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classtue_1_1config_1_1Variant_1a1736cdc34d9409d06d22bd6feec1b50c" kindref="member">b_</ref>,<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">,<sp/>v);<sp/>}</highlight></codeline>
<codeline lineno="125" refid="classtue_1_1config_1_1Variant_1a50865c153bb327d024945fa79119afe5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1config_1_1Variant_1a50865c153bb327d024945fa79119afe5" kindref="member">getValue</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1config_1_1Variant_1a0d75afe5772f9293e33903ed8f526980" kindref="member">checkAndGet</ref>(<ref refid="classtue_1_1config_1_1Variant_1a885be6bb24804bf646f1fcbb5564ecbd" kindref="member">d_</ref>,<sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">,<sp/>v)<sp/>||<sp/><ref refid="classtue_1_1config_1_1Variant_1a0d75afe5772f9293e33903ed8f526980" kindref="member">checkAndGet</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<ref refid="classtue_1_1config_1_1Variant_1a6d31743653e0274ec4ed367275115422" kindref="member">i_</ref>,<sp/></highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal">,<sp/>v);<sp/>}</highlight></codeline>
<codeline lineno="126" refid="classtue_1_1config_1_1Variant_1a6b208c80d918ca1731d76bce9b7907a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1config_1_1Variant_1a6b208c80d918ca1731d76bce9b7907a4" kindref="member">getValue</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1config_1_1Variant_1a0d75afe5772f9293e33903ed8f526980" kindref="member">checkAndGet</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<ref refid="classtue_1_1config_1_1Variant_1a885be6bb24804bf646f1fcbb5564ecbd" kindref="member">d_</ref>,<sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">,<sp/>v)<sp/>||<sp/><ref refid="classtue_1_1config_1_1Variant_1a0d75afe5772f9293e33903ed8f526980" kindref="member">checkAndGet</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<ref refid="classtue_1_1config_1_1Variant_1a6d31743653e0274ec4ed367275115422" kindref="member">i_</ref>,<sp/></highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal">,<sp/>v);<sp/>}</highlight></codeline>
<codeline lineno="127" refid="classtue_1_1config_1_1Variant_1ada509b0089d19f34cd68ac45f2d1d85d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1config_1_1Variant_1ada509b0089d19f34cd68ac45f2d1d85d" kindref="member">getValue</ref>(<ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1config_1_1Variant_1a0d75afe5772f9293e33903ed8f526980" kindref="member">checkAndGet</ref>(<ref refid="classtue_1_1config_1_1Variant_1a191c5f52ff4bbe85ccd73981488997c5" kindref="member">s_</ref>,<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">,<sp/>v);<sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="classtue_1_1config_1_1Variant_1a1830fa2a609c6cfe340070e3fbd5c8b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1config_1_1Variant_1a1830fa2a609c6cfe340070e3fbd5c8b2" kindref="member">getValue</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>v)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtue_1_1config_1_1Variant_1a0d75afe5772f9293e33903ed8f526980" kindref="member">checkAndGet</ref>(<ref refid="classtue_1_1config_1_1Variant_1a1736cdc34d9409d06d22bd6feec1b50c" kindref="member">b_</ref>,<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">,<sp/>v))</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtue_1_1config_1_1Variant_1a0d75afe5772f9293e33903ed8f526980" kindref="member">checkAndGet</ref>(<ref refid="classtue_1_1config_1_1Variant_1a6d31743653e0274ec4ed367275115422" kindref="member">i_</ref>,<sp/></highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal">,<sp/>i))</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>(i<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="classtue_1_1config_1_1Variant_1a20576993b12522c6570621622a3f9b93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1config_1_1Variant_1a20576993b12522c6570621622a3f9b93" kindref="member">isString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1config_1_1Variant_1aea3eef46d6e0abed75b1be39238e106a" kindref="member">type_</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="141" refid="classtue_1_1config_1_1Variant_1ae91391c6a1a4544f6bea2e1defd783e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1config_1_1Variant_1ae91391c6a1a4544f6bea2e1defd783e0" kindref="member">isInt</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1config_1_1Variant_1aea3eef46d6e0abed75b1be39238e106a" kindref="member">type_</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="142" refid="classtue_1_1config_1_1Variant_1a1abfc4e4c18426281bffbd468a038a5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1config_1_1Variant_1a1abfc4e4c18426281bffbd468a038a5e" kindref="member">isDouble</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1config_1_1Variant_1aea3eef46d6e0abed75b1be39238e106a" kindref="member">type_</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal"><sp/>||<sp/><ref refid="classtue_1_1config_1_1Variant_1aea3eef46d6e0abed75b1be39238e106a" kindref="member">type_</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="143" refid="classtue_1_1config_1_1Variant_1a2a80d65e56ff2d13c884a1bdc1933013" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1config_1_1Variant_1a2a80d65e56ff2d13c884a1bdc1933013" kindref="member">isBoolean</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1config_1_1Variant_1aea3eef46d6e0abed75b1be39238e106a" kindref="member">type_</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="classtue_1_1config_1_1Variant_1ad9db7a2dbbb881008a4c53a65c0fe304" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1config_1_1Variant_1ad9db7a2dbbb881008a4c53a65c0fe304" kindref="member">valid</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1config_1_1Variant_1aea3eef46d6e0abed75b1be39238e106a" kindref="member">type_</ref><sp/>!=<sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="classtue_1_1config_1_1Variant_1aea3eef46d6e0abed75b1be39238e106a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1config_1_1Variant_1aea3eef46d6e0abed75b1be39238e106a" kindref="member">type_</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="152" refid="classtue_1_1config_1_1Variant_1a6d31743653e0274ec4ed367275115422" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1config_1_1Variant_1a6d31743653e0274ec4ed367275115422" kindref="member">i_</ref>;</highlight></codeline>
<codeline lineno="153" refid="classtue_1_1config_1_1Variant_1a885be6bb24804bf646f1fcbb5564ecbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1config_1_1Variant_1a885be6bb24804bf646f1fcbb5564ecbd" kindref="member">d_</ref>;</highlight></codeline>
<codeline lineno="154" refid="classtue_1_1config_1_1Variant_1a1736cdc34d9409d06d22bd6feec1b50c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1config_1_1Variant_1a1736cdc34d9409d06d22bd6feec1b50c" kindref="member">b_</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="classtue_1_1config_1_1Variant_1a191c5f52ff4bbe85ccd73981488997c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/><ref refid="classtue_1_1config_1_1Variant_1a191c5f52ff4bbe85ccd73981488997c5" kindref="member">s_</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="160" refid="classtue_1_1config_1_1Variant_1a0d75afe5772f9293e33903ed8f526980" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1config_1_1Variant_1a0d75afe5772f9293e33903ed8f526980" kindref="member">checkAndGet</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>type,<sp/>T&amp;<sp/>out)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>!=<sp/><ref refid="classtue_1_1config_1_1Variant_1aea3eef46d6e0abed75b1be39238e106a" kindref="member">type_</ref>)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="classtue_1_1config_1_1Variant_1aee754e7f4f42fccd10d2a65a8531cee6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref>&amp;<sp/><ref refid="classtue_1_1config_1_1Variant_1aee754e7f4f42fccd10d2a65a8531cee6" kindref="member">operator&lt;&lt; </ref>(<ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::ostream</ref>&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtue_1_1config_1_1Variant" kindref="compound">Variant</ref>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v.<ref refid="classtue_1_1config_1_1Variant_1aea3eef46d6e0abed75b1be39238e106a" kindref="member">type_</ref>)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal">:<sp/>out<sp/>&lt;&lt;<sp/>v.<ref refid="classtue_1_1config_1_1Variant_1a6d31743653e0274ec4ed367275115422" kindref="member">i_</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">:<sp/>out<sp/>&lt;&lt;<sp/>v.<ref refid="classtue_1_1config_1_1Variant_1a885be6bb24804bf646f1fcbb5564ecbd" kindref="member">d_</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">:<sp/>out<sp/>&lt;&lt;<sp/>v.<ref refid="classtue_1_1config_1_1Variant_1a191c5f52ff4bbe85ccd73981488997c5" kindref="member">s_</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">:<sp/>out<sp/>&lt;&lt;<sp/>v.<ref refid="classtue_1_1config_1_1Variant_1a1736cdc34d9409d06d22bd6feec1b50c" kindref="member">b_</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">};</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>tue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/tue/config/variant.h"/>
  </compounddef>
</doxygen>
