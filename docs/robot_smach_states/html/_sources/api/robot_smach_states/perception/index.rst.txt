robot_smach_states.perception
=============================

.. py:module:: robot_smach_states.perception


Attributes
----------

.. autoapisummary::

   robot_smach_states.perception.robot_name


Classes
-------

.. autoapisummary::

   robot_smach_states.perception.LookAtEntity
   robot_smach_states.perception.LookAtArea
   robot_smach_states.perception.RotateToEntity


Functions
---------

.. autoapisummary::

   robot_smach_states.perception.setup_statemachine


Module Contents
---------------

.. py:class:: LookAtEntity(robot, entity, waittime=0.0, height=0.0)

   Bases: :py:obj:`smach.State`


   
   :param robot: The robot
   :param entity: The entity to look at
   :param waittime: Amount of time the robot look at the entity
   :param height: Look higher up in the entity


   .. py:attribute:: _robot


   .. py:attribute:: _entity


   .. py:attribute:: _waittime


   .. py:attribute:: _height
      :value: 0.0



   .. py:method:: execute(userdata=None)


.. py:class:: LookAtArea(robot, entity, area, waittime=2.0)

   Bases: :py:obj:`robot_smach_states.state.State`


   Class to look at the center point of a specific area of an entity

   Constructor

   :param robot: robot object
   :param entity: EdEntityDesignator with the area to look at
   :param area: string with the area to look at
   :param waittime: (optional) waittime (in seconds) between giving a head target and returning


   .. py:method:: run(robot, entity, area, waittime)


.. py:class:: RotateToEntity(robot, entity, max_vel=np.pi / 10.0)

   Bases: :py:obj:`smach.State`


   
   Rotate the robot so it is orientated towards entity of :param: entity

   :param robot: The robot
   :param entity: The entity to rotate to
   :param max_vel: Max rotational velocity


   .. py:attribute:: _robot


   .. py:attribute:: _entity


   .. py:attribute:: _max_vel


   .. py:method:: execute(userdata=None)


.. py:function:: setup_statemachine(robot)

.. py:data:: robot_name

