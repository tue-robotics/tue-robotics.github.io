robot_smach_states.util.startup
===============================

.. py:module:: robot_smach_states.util.startup

.. autoapi-nested-parse::

   State machine startup

   Usage:
     {challenge_name} ({robot}) [--initial=<init>] [--initial_pose=<init_pose>] [--debug] [--no-execute] [-t TIMEOUT]

   Options:
     -h --help                                Show this screen.
     --initial=<init>                         Initial state
     --initial_pose=<init_pose>               Initial state
     --debug                                  Run the IntrospectionServer
     --no-execute                             Only construct state machine, do not execute it, i.e. only do checks.
     -t TIMEOUT --connection-timeout=TIMEOUT  Timeout for connecting ROS connections [default: {default_timeout}]



Functions
---------

.. autoapisummary::

   robot_smach_states.util.startup.startup


Module Contents
---------------

.. py:function:: startup(statemachine_creator, statemachine_args=None, challenge_name=None, argv=None)

   :param statemachine_creator: a function that outputs a statemachine.
       The function should take a robot as its first input.
   :param statemachine_args: A list of arguments. If the statemachine_creator
       function takes any arguments besides robot these can be placed here.
   :param challenge_name: name of the challenge
   :type challenge_name: str
   :param argv: argument values, stripped from ros arguments (default: rospy.myargv())
   :type argv: list


