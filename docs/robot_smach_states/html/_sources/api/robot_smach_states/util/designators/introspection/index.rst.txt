robot_smach_states.util.designators.introspection
=================================================

.. py:module:: robot_smach_states.util.designators.introspection

.. autoapi-nested-parse::

   Introspection for designators.
   Usage: pass a Smach state-machine to analyse_designators.

   A .dot and .png will be saved to the current directory, showing the relations and composition of states,
   state_machines and designators.



Attributes
----------

.. autoapisummary::

   robot_smach_states.util.designators.introspection.__author__


Classes
-------

.. autoapisummary::

   robot_smach_states.util.designators.introspection.DesignatorUsage
   robot_smach_states.util.designators.introspection.DesignatorUsedInState
   robot_smach_states.util.designators.introspection.DesignatorWrittenInState
   robot_smach_states.util.designators.introspection.DesignatorUsedInDesignator


Functions
---------

.. autoapisummary::

   robot_smach_states.util.designators.introspection.gv_safe
   robot_smach_states.util.designators.introspection.format_designator
   robot_smach_states.util.designators.introspection.flatten
   robot_smach_states.util.designators.introspection.make_legend
   robot_smach_states.util.designators.introspection.analyse_designators


Module Contents
---------------

.. py:data:: __author__
   :value: 'loy'


.. py:class:: DesignatorUsage(parent, designator, role)

   Bases: :py:obj:`object`


   .. py:attribute:: parent


   .. py:attribute:: designator


   .. py:attribute:: role


.. py:class:: DesignatorUsedInState(parent, designator, role)

   Bases: :py:obj:`DesignatorUsage`


   .. py:method:: add_graphviz_edge(graph)


.. py:class:: DesignatorWrittenInState(parent, designator, role)

   Bases: :py:obj:`DesignatorUsage`


   .. py:method:: add_graphviz_edge(graph)


.. py:class:: DesignatorUsedInDesignator(parent, designator, role)

   Bases: :py:obj:`DesignatorUsage`


   .. py:method:: add_graphviz_edge(graph)


.. py:function:: gv_safe(string)

.. py:function:: format_designator(desig)

.. py:function:: flatten(tree, parentname=None, sep='.')

.. py:function:: make_legend()

.. py:function:: analyse_designators(statemachine=None, statemachine_name='', save_dot=False, fmt='png')

