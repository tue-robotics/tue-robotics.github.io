robot_smach_states.navigation.navigate_to_symbolic
==================================================

.. py:module:: robot_smach_states.navigation.navigate_to_symbolic


Classes
-------

.. autoapisummary::

   robot_smach_states.navigation.navigate_to_symbolic.NavigateToSymbolic
   robot_smach_states.navigation.navigate_to_symbolic.NavigateToRoom


Module Contents
---------------

.. py:class:: NavigateToSymbolic(robot, entity_designator_area_name_map, entity_lookat_designator, room = None, reset_head=True, speak=True, reset_pose=True)

   Bases: :py:obj:`robot_smach_states.navigation.navigation.NavigateTo`


   Move the robot to a specified location.

   :param robot: Robot object
   :param constraint_function: function resolving to a tuple(PositionConstraint, OrientationConstraint)
       telling the robot where to drive to.
   :param reset_head: Whether or not the head should be used for obstacle avoidance during navigation.
   :param speak: Whether or not the robot should speak during navigation
   :param reset_pose: Whether or not the robot is allowed to change its pose for navigation.

   Navigation class to navigate to a semantically annotated goal, e.g., in front of the dinner table.

   :param robot: robot object
   :param entity_designator_area_name_map: dictionary mapping EdEntityDesignators to a string or designator
       resolving to a string, representing the area, e.g., entity_designator_area_name_map[<EdEntity>] = 'in_front_of'.
   :param entity_lookat_designator: EdEntityDesignator defining the entity the robot should look at. This is used
       to compute the orientation constraint.
   :param room: (Optional) Designator to the room you want to stay in
   :param reset_head: Whether or not the head should be used for obstacle avoidance during navigation.
   :param speak: Whether or not the robot should speak during navigation
   :param reset_pose: Whether or not the robot is allowed to change its pose for navigation.


.. py:class:: NavigateToRoom(robot, entity_designator_room, entity_lookat_designator=None, reset_head=True, speak=True, reset_pose=True)

   Bases: :py:obj:`NavigateToSymbolic`


   Navigation class to navigate to the 'in' area of the provided entity, typically a room.

   :param robot: robot object
   :param entity_designator_room: Designator to the room
   :param entity_lookat_designator: (Optional) Designator defining the entity the robot should look at. This is
       used to compute the orientation constraint. If not provided, the entity_designator_room is used.
   :param reset_head: Whether or not the head should be used for obstacle avoidance during navigation.
   :param speak: Whether or not the robot should speak during navigation
   :param reset_pose: Whether or not the robot is allowed to change its pose for navigation.

   Navigation class to navigate to a semantically annotated goal, e.g., in front of the dinner table.

   :param robot: robot object
   :param entity_designator_area_name_map: dictionary mapping EdEntityDesignators to a string or designator
       resolving to a string, representing the area, e.g., entity_designator_area_name_map[<EdEntity>] = 'in_front_of'.
   :param entity_lookat_designator: EdEntityDesignator defining the entity the robot should look at. This is used
       to compute the orientation constraint.
   :param room: (Optional) Designator to the room you want to stay in
   :param reset_head: Whether or not the head should be used for obstacle avoidance during navigation.
   :param speak: Whether or not the robot should speak during navigation
   :param reset_pose: Whether or not the robot is allowed to change its pose for navigation.


