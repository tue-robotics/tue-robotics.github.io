robot_smach_states.manipulation.point_at
========================================

.. py:module:: robot_smach_states.manipulation.point_at


Attributes
----------

.. autoapisummary::

   robot_smach_states.manipulation.point_at.robot_name


Classes
-------

.. autoapisummary::

   robot_smach_states.manipulation.point_at.PointAt
   robot_smach_states.manipulation.point_at.PointAtSM


Module Contents
---------------

.. py:class:: PointAt(robot, arm_designator, point_at_designator, look_at_designator=None)

   Bases: :py:obj:`smach.State`


   
   Drive the robot back a little and move the designated arm to place the designated item at the designated pose

   :param robot: Robot to execute state with
   :param arm_designator : arm to place with, so Arm that holds entity_to_place, E.g. ArmHoldingEntityDesignator
   :param point_at_designator: Designator that resolves to the pose to place at. E.g. EmptySpotDesignator


   .. py:attribute:: REQUIRED_ARM_PROPERTIES


   .. py:attribute:: _robot


   .. py:attribute:: _arm_designator


   .. py:attribute:: _point_at_designator


   .. py:attribute:: _look_at_designator
      :value: None



   .. py:method:: execute(userdata=None)


.. py:class:: PointAtSM(robot, arm_designator, point_at_designator, look_at_designator=None)

   Bases: :py:obj:`smach.StateMachine`


   
   Drive the robot back a little and move the designated arm to place the designated item at the designated pose

   :param robot: Robot to execute state with
   :param arm_designator : arm to place with, so Arm that holds entity_to_place, E.g. ArmHoldingEntityDesignator
   :param point_at_designator: Designator that resolves to the pose to place at. E.g. EmptySpotDesignator


.. py:data:: robot_name

