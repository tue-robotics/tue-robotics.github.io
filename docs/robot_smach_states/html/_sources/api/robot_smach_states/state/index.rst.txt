robot_smach_states.state
========================

.. py:module:: robot_smach_states.state


Classes
-------

.. autoapisummary::

   robot_smach_states.state.State
   robot_smach_states.state.TestState


Module Contents
---------------

.. py:class:: State(*args, **kwargs)

   Bases: :py:obj:`smach.State`


   .. py:method:: execute(userdata=None)


.. py:class:: TestState(robot, sentence, blaat)

   Bases: :py:obj:`State`


   >>> teststate = TestState("Yes", "this", "works")  # doctest: +NORMALIZE_WHITESPACE +ELLIPSIS
   Using State in <class '...TestState'> is deprecated, use smach.State instead and implement         execute(self, userdata) instead of run(self, ...)
   >>> teststate.execute()
   Yes this works
   'yes'

   >>> teststate2 = TestState(
   ...     Designator("Also"), "works", Designator("with designators")
   ...     )  # doctest: +NORMALIZE_WHITESPACE +ELLIPSIS
   Using State in <class '...TestState'> is deprecated, use smach.State instead and implement         execute(self, userdata) instead of run(self, ...)
   >>> teststate2.execute()
   Also works with designators
   'yes'


   .. py:method:: run(robot, sentence, blaat)
      :staticmethod:



