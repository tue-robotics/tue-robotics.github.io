pykdl_ros
=========

.. py:module:: pykdl_ros


Classes
-------

.. autoapisummary::

   pykdl_ros.FrameStamped
   pykdl_ros.TwistStamped
   pykdl_ros.VectorStamped
   pykdl_ros.WrenchStamped


Package Contents
----------------

.. py:class:: FrameStamped(frame, stamp, frame_id)

   Stamped version of PyKDL.Frame

   Constructor

   :param frame: frame
   :param stamp: TimeStamp
   :param frame_id: Frame ID


   .. py:attribute:: __slots__
      :value: ('frame', 'header')



   .. py:attribute:: frame
      :type:  PyKDL.Frame


   .. py:attribute:: header
      :type:  std_msgs.msg.Header


   .. py:method:: __repr__()


   .. py:method:: __eq__(other)


   .. py:method:: __ne__(other)


   .. py:method:: __hash__()


   .. py:method:: identity(stamp, frame_id)
      :classmethod:


      Construct a FrameStamped object with identity frame.

      :param stamp: TimeStamp
      :param frame_id: Frame ID
      :return: Filled object



   .. py:method:: from_xyz_rpy(x, y, z, roll, pitch, yaw, stamp, frame_id)
      :classmethod:


      Custom constructor

      :param x: x
      :param y: y
      :param z: z
      :param roll: Roll
      :param pitch: Pitch
      :param yaw: Yaw
      :param stamp: TimeStamp
      :param frame_id: Frame ID
      :return: Filled object



.. py:class:: TwistStamped(twist, stamp, frame_id)

   Stamped version of PyKDL.Twist.

   Construct a TwistStamped object.

   :param twist: twist
   :param stamp: TimeStamp
   :param frame_id: Frame ID


   .. py:attribute:: __slots__
      :value: ('twist', 'header')



   .. py:attribute:: twist
      :type:  PyKDL.Twist


   .. py:attribute:: header
      :type:  std_msgs.msg.Header


   .. py:method:: __repr__()


   .. py:method:: __eq__(other)


   .. py:method:: __ne__(other)


   .. py:method:: __hash__()


   .. py:method:: zero(stamp, frame_id)
      :classmethod:


      Construct a TwistStamped object with zero velocity and angular velocity.

      :param stamp: TimeStamp
      :param frame_id: Frame ID
      :return: Filled object



   .. py:method:: from_xyz_rpy(vx, vy, vz, wx, wy, wz, stamp, frame_id)
      :classmethod:


      Construct a TwistStamped from velocity and XYZ and RPY.

      :param vx: vx
      :param vy: vy
      :param vz: vz
      :param wx: wx
      :param wy: wy
      :param wz: wz
      :param stamp: TimeStamp
      :param frame_id: Frame ID
      :return: Filled object



.. py:class:: VectorStamped(vector, stamp, frame_id)

   Stamped version of PyKDL.Vector

   Constructor

   :param vector: vector
   :param stamp: TimeStamp
   :param frame_id: Frame ID


   .. py:attribute:: __slots__
      :value: ('vector', 'header')



   .. py:attribute:: vector
      :type:  PyKDL.Vector


   .. py:attribute:: header
      :type:  std_msgs.msg.Header


   .. py:method:: __repr__()


   .. py:method:: __eq__(other)


   .. py:method:: __ne__(other)


   .. py:method:: __hash__()


   .. py:method:: zero(stamp, frame_id)
      :classmethod:


      Construct a VectorStamped object with zero vector.

      :param stamp: TimeStamp
      :param frame_id: Frame ID
      :return: Filled object



   .. py:method:: from_xyz(x, y, z, stamp, frame_id)
      :classmethod:


      Custom constructor

      :param x: x
      :param y: y
      :param z: z
      :param stamp: TimeStamp
      :param frame_id: Frame ID
      :return: Filled object



   .. py:method:: from_framestamped(frame)
      :classmethod:


      Custom constructor, extract vector from the frame

      :param frame: frame
      :return: Filled object



.. py:class:: WrenchStamped(wrench, stamp, frame_id)

   Stamped version of PyKDL.Wrench.

   Construct a WrenchStamped object.

   :param wrench: wrench
   :param stamp: TimeStamp
   :param frame_id: Frame ID


   .. py:attribute:: __slots__
      :value: ('wrench', 'header')



   .. py:attribute:: wrench
      :type:  PyKDL.Wrench


   .. py:attribute:: header
      :type:  std_msgs.msg.Header


   .. py:method:: __repr__()


   .. py:method:: __eq__(other)


   .. py:method:: __ne__(other)


   .. py:method:: __hash__()


   .. py:method:: zero(stamp, frame_id)
      :classmethod:


      Construct a WrenchStamped object with zero force and torque.

      :param stamp: TimeStamp
      :param frame_id: Frame ID
      :return: Filled object



   .. py:method:: from_fxfyfz_txtytz(fx, fy, fz, tx, ty, tz, stamp, frame_id)
      :classmethod:


      Construct a WrenchStamped from force and torque in XYZ.

      :param fx: fx
      :param fy: fy
      :param fz: fz
      :param tx: tx
      :param ty: ty
      :param tz: tz
      :param stamp: TimeStamp
      :param frame_id: Frame ID
      :return: Filled object



