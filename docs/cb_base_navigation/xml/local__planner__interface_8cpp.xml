<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="local__planner__interface_8cpp" kind="file" language="C++">
    <compoundname>local_planner_interface.cpp</compoundname>
    <includes refid="local__planner__interface_8h" local="yes">cb_base_navigation/local_planner/local_planner_interface.h</includes>
    <includes local="no">base_local_planner/goal_functions.h</includes>
    <includes local="no">ed_msgs/SimpleQuery.h</includes>
    <includes local="no">nav_core/base_local_planner.h</includes>
    <includes local="no">tf2/utils.h</includes>
    <includes local="no">tue/profiling/ros/profile_publisher.h</includes>
    <includes local="no">tue/profiling/profiler.h</includes>
    <includes local="no">tue/profiling/scoped_timer.h</includes>
    <includes local="no">limits</includes>
    <incdepgraph>
      <node id="20">
        <label>tue/profiling/profiler.h</label>
        <link refid="profiler_8h.html" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags"/>
      </node>
      <node id="16">
        <label>base_local_planner/goal_functions.h</label>
        <link refid="goal__functions_8h.html" external="/home/docker/ros/noetic/system/build/docs/base_local_planner/tags"/>
      </node>
      <node id="10">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="18">
        <label>nav_core/base_local_planner.h</label>
      </node>
      <node id="14">
        <label>memory</label>
        <link refid="cpp/header/memory" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="13">
        <label>tf2/utils.h</label>
      </node>
      <node id="2">
        <label>cb_base_navigation/local_planner/local_planner_interface.h</label>
        <link refid="local__planner__interface_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>thread</label>
        <link refid="cpp/header/thread" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="8">
        <label>actionlib/client/action_client.h</label>
      </node>
      <node id="9">
        <label>actionlib/server/simple_action_server.h</label>
      </node>
      <node id="6">
        <label>visualization_msgs/Marker.h</label>
      </node>
      <node id="7">
        <label>tf/transform_datatypes.h</label>
      </node>
      <node id="1">
        <label>local_planner_interface.cpp</label>
        <link refid="local__planner__interface_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>geometry_msgs/PoseStamped.h</label>
      </node>
      <node id="19">
        <label>tue/profiling/ros/profile_publisher.h</label>
        <link refid="profile__publisher_8h.html" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags"/>
      </node>
      <node id="21">
        <label>tue/profiling/scoped_timer.h</label>
        <link refid="scoped__timer_8h.html" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags"/>
      </node>
      <node id="17">
        <label>ed_msgs/SimpleQuery.h</label>
      </node>
      <node id="4">
        <label>ros/ros.h</label>
      </node>
      <node id="3">
        <label>visualization.h</label>
        <link refid="local__planner_2visualization_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>limits</label>
        <link refid="cpp/header/limits" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="11">
        <label>cb_base_navigation_msgs/LocalPlannerAction.h</label>
      </node>
      <node id="12">
        <label>pluginlib/class_loader.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacecb__base__navigation__msgs">cb_base_navigation_msgs</innernamespace>
    <innernamespace refid="namespacecb__local__planner">cb_local_planner</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="local__planner__interface_8h" kindref="compound">cb_base_navigation/local_planner/local_planner_interface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="goal__functions_8h.html" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/base_local_planner/tags">base_local_planner/goal_functions.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ed_msgs/SimpleQuery.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nav_core/base_local_planner.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tf2/utils.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="profile__publisher_8h.html" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">tue/profiling/ros/profile_publisher.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="profiler_8h.html" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">tue/profiling/profiler.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="scoped__timer_8h.html" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">tue/profiling/scoped_timer.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cpp/header/limits" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">limits</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">cb_base_navigation_msgs;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecb__local__planner" kindref="compound">cb_local_planner</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="classcb__local__planner_1_1LocalPlannerInterface_1ab0655884bd6c79783e2cc4ca94767fe1" refkind="member"><highlight class="normal">LocalPlannerInterface::~LocalPlannerInterface()</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>things<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>local_planner_.reset();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::shutdown();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>controller_thread_-&gt;join();</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classcb__local__planner_1_1LocalPlannerInterface_1a348caca889ee596af8a19c7baa923f31" refkind="member"><highlight class="normal">LocalPlannerInterface::LocalPlannerInterface(<ref refid="classcostmap__2d_1_1Costmap2DROS" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">costmap_2d::Costmap2DROS</ref>*<sp/>costmap,<sp/>tf2_ros::Buffer*<sp/>tf)<sp/>:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>controller_thread_(nullptr),</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>action_server_(nullptr),</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>lp_loader_(</highlight><highlight class="stringliteral">&quot;nav_core&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nav_core::BaseLocalPlanner&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="footprint__tests_8cpp_1aad5469d90cc5661bafe780d1920256b1" kindref="member" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">tf_</ref>(tf),</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>costmap_(costmap)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::NodeHandle<sp/>gh;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::NodeHandle<sp/>nh(</highlight><highlight class="stringliteral">&quot;~&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameter<sp/>setup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>local_planner;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>nh.param(</highlight><highlight class="stringliteral">&quot;local_planner&quot;</highlight><highlight class="normal">,<sp/>local_planner,<sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>(</highlight><highlight class="stringliteral">&quot;dwa_local_planner/DWAPlannerROS&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>nh.param(</highlight><highlight class="stringliteral">&quot;robot_base_frame&quot;</highlight><highlight class="normal">,<sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a38fc72ed851bcaf3bdc2055f91395c70" kindref="member">robot_base_frame_</ref>,<sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>(</highlight><highlight class="stringliteral">&quot;base_link&quot;</highlight><highlight class="normal">));;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>nh.param(</highlight><highlight class="stringliteral">&quot;global_frame&quot;</highlight><highlight class="normal">,<sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a60550efea73d78ed022e3872ae976ae3" kindref="member">global_frame_</ref>,<sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::string</ref>(</highlight><highlight class="stringliteral">&quot;map&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>nh.param(</highlight><highlight class="stringliteral">&quot;controller_frequency&quot;</highlight><highlight class="normal">,<sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1acaf4a0e32fefbc1de5e6125c4908a72a" kindref="member">controller_frequency_</ref>,<sp/>20.0);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ROS<sp/>Publishers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a9477dcffa3850d6b68da6eb6f618d0e9" kindref="member">vel_pub_</ref><sp/>=<sp/>gh.advertise&lt;geometry_msgs::Twist&gt;(</highlight><highlight class="stringliteral">&quot;cmd_vel&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>local<sp/>planner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a0bf3f97b9fbd9d6782c7c48e8a7da9e8" kindref="member">lp_loader_</ref>.isClassAvailable(local_planner)){</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;std::string&gt;</ref><sp/>classes<sp/>=<sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a0bf3f97b9fbd9d6782c7c48e8a7da9e8" kindref="member">lp_loader_</ref>.getDeclaredClasses();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>classes.<ref refid="cpp/container/vector/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>();<sp/>++i){</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(local_planner<sp/>==<sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a0bf3f97b9fbd9d6782c7c48e8a7da9e8" kindref="member">lp_loader_</ref>.getName(classes[i])){</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_planner<sp/>=<sp/>classes[i];<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aca377e3c4ef684322e943e8d8d8dc542" kindref="member">local_planner_</ref><sp/>=<sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a0bf3f97b9fbd9d6782c7c48e8a7da9e8" kindref="member">lp_loader_</ref>.createInstance(local_planner);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aca377e3c4ef684322e943e8d8d8dc542" kindref="member">local_planner_</ref>-&gt;initialize(<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a0bf3f97b9fbd9d6782c7c48e8a7da9e8" kindref="member">lp_loader_</ref>.getName(local_planner),<sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1ac1d78234b0c55530c9621b8dc6e2be5c" kindref="member">tf_</ref>,<sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a09f21f224d86316c0c040ac0823201aa" kindref="member">costmap_</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pluginlib::PluginlibException&amp;<sp/>ex)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_FATAL(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>the<sp/>%s<sp/>planner,<sp/>are<sp/>you<sp/>sure<sp/>it<sp/>is<sp/>properly<sp/>registered<sp/>and<sp/>that<sp/>the<sp/>containing<sp/>library<sp/>is<sp/>built?<sp/>Exception:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>local_planner.<ref refid="cpp/string/basic_string/c_str" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">c_str</ref>(),<sp/>ex.what());</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>action<sp/>server</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a33cf6054a8171af09d19b5fead950aa7" kindref="member">action_server_</ref><sp/>=<sp/><ref refid="cpp/memory/unique_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::unique_ptr&lt;actionlib::SimpleActionServer&lt;LocalPlannerAction&gt;</ref><sp/>&gt;(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>actionlib::SimpleActionServer&lt;LocalPlannerAction&gt;(nh,<sp/></highlight><highlight class="stringliteral">&quot;action_server&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a33cf6054a8171af09d19b5fead950aa7" kindref="member">action_server_</ref>-&gt;registerGoalCallback(boost::bind(&amp;<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a6956f122ec7f5bdd8b43cc805d056b4e" kindref="member">LocalPlannerInterface::actionServerSetPlan</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a33cf6054a8171af09d19b5fead950aa7" kindref="member">action_server_</ref>-&gt;registerPreemptCallback(boost::bind(&amp;<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a846c1a163d352022e08f09ac3fde2cd6" kindref="member">LocalPlannerInterface::actionServerPreempt</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a33cf6054a8171af09d19b5fead950aa7" kindref="member">action_server_</ref>-&gt;start();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO_STREAM(</highlight><highlight class="stringliteral">&quot;Local<sp/>planner<sp/>of<sp/>type:<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>local_planner<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>initialized.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>the<sp/>controller<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1ac35b58fdb1ddd6af54d3199af1be73a9" kindref="member">controller_thread_</ref><sp/>=<sp/><ref refid="cpp/memory/unique_ptr" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::unique_ptr&lt;std::thread&gt;</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="cpp/thread/thread" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::thread</ref>(<ref refid="cpp/utility/functional/bind" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::bind</ref>(&amp;<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a199a5f6304b24c31c68aeab7cae161f6" kindref="member">LocalPlannerInterface::controllerThread</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1acb45bb0a4bd06fdd7dd2f31514777861" kindref="member">ed_client_</ref><sp/>=<sp/>gh.serviceClient&lt;ed_msgs::SimpleQuery&gt;(</highlight><highlight class="stringliteral">&quot;ed/simple_query&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classcb__local__planner_1_1LocalPlannerInterface_1a58ac198806924428eb2115b5dbd1c987" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a58ac198806924428eb2115b5dbd1c987" kindref="member">LocalPlannerInterface::topicGoalCallback</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LocalPlannerActionGoalConstPtr&amp;<sp/>goal)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::unique_lock&lt;boost::mutex&gt;<sp/>lock(<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a665263a58e86ce8da0d239b6e74d26bd" kindref="member">goal_mtx_</ref>);<sp/></highlight><highlight class="comment">//<sp/>goal<sp/>is<sp/>altered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_DEBUG(</highlight><highlight class="stringliteral">&quot;Incoming<sp/>topic<sp/>plan.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aa2cebdb773af517f1418406553f6f581" kindref="member">goal_</ref><sp/>=<sp/>goal-&gt;goal;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1ae0d0baaf59f5554a32a02c2bb0ea9b22" kindref="member">isGoalSet</ref>())<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aeed14e143ab42911821733121133eb22" kindref="member">updateEndGoalOrientation</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aca377e3c4ef684322e943e8d8d8dc542" kindref="member">local_planner_</ref>-&gt;setPlan(<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aa2cebdb773af517f1418406553f6f581" kindref="member">goal_</ref>.plan);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;Received<sp/>a<sp/>plan<sp/>of<sp/>length<sp/>0,<sp/>is<sp/>something<sp/>wrong?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="classcb__local__planner_1_1LocalPlannerInterface_1a6956f122ec7f5bdd8b43cc805d056b4e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a6956f122ec7f5bdd8b43cc805d056b4e" kindref="member">LocalPlannerInterface::actionServerSetPlan</ref>()</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::unique_lock&lt;boost::mutex&gt;<sp/>lock(<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a665263a58e86ce8da0d239b6e74d26bd" kindref="member">goal_mtx_</ref>);<sp/></highlight><highlight class="comment">//<sp/>goal<sp/>is<sp/>altered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_DEBUG(</highlight><highlight class="stringliteral">&quot;Incoming<sp/>actionlib<sp/>plan.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aa2cebdb773af517f1418406553f6f581" kindref="member">goal_</ref><sp/>=<sp/>*<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a33cf6054a8171af09d19b5fead950aa7" kindref="member">action_server_</ref>-&gt;acceptNewGoal();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1ae0d0baaf59f5554a32a02c2bb0ea9b22" kindref="member">isGoalSet</ref>())<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aeed14e143ab42911821733121133eb22" kindref="member">updateEndGoalOrientation</ref>();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aca377e3c4ef684322e943e8d8d8dc542" kindref="member">local_planner_</ref>-&gt;setPlan(<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aa2cebdb773af517f1418406553f6f581" kindref="member">goal_</ref>.plan);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;Received<sp/>a<sp/>plan<sp/>of<sp/>length<sp/>0,<sp/>is<sp/>something<sp/>wrong?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="classcb__local__planner_1_1LocalPlannerInterface_1a846c1a163d352022e08f09ac3fde2cd6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a846c1a163d352022e08f09ac3fde2cd6" kindref="member">LocalPlannerInterface::actionServerPreempt</ref>()</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::unique_lock&lt;boost::mutex&gt;<sp/>lock(<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a665263a58e86ce8da0d239b6e74d26bd" kindref="member">goal_mtx_</ref>);<sp/></highlight><highlight class="comment">//<sp/>goal<sp/>is<sp/>altered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a33cf6054a8171af09d19b5fead950aa7" kindref="member">action_server_</ref>-&gt;setPreempted();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aa2cebdb773af517f1418406553f6f581" kindref="member">goal_</ref>.plan.clear();</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="classcb__local__planner_1_1LocalPlannerInterface_1a199a5f6304b24c31c68aeab7cae161f6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a199a5f6304b24c31c68aeab7cae161f6" kindref="member">LocalPlannerInterface::controllerThread</ref>()</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtue_1_1ProfilePublisher" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">tue::ProfilePublisher</ref><sp/>profile_pub;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtue_1_1Profiler" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">tue::Profiler</ref><sp/><ref refid="test__profiler_8cpp_1a35ace1a018a1107a66a6a306658ba298" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">profiler</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>profile_pub.<ref refid="classtue_1_1ProfilePublisher_1a36b02bb2035a2d81b6e198b45986969c" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">initialize</ref>(<ref refid="test__profiler_8cpp_1a35ace1a018a1107a66a6a306658ba298" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">profiler</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Rate<sp/>r(<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1acaf4a0e32fefbc1de5e6125c4908a72a" kindref="member">controller_frequency_</ref>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO_STREAM(</highlight><highlight class="stringliteral">&quot;LPI:<sp/>Started<sp/>local<sp/>planner<sp/>thread<sp/>@<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1acaf4a0e32fefbc1de5e6125c4908a72a" kindref="member">controller_frequency_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>hz!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a09f21f224d86316c0c040ac0823201aa" kindref="member">costmap_</ref>-&gt;<ref refid="classcostmap__2d_1_1Costmap2DROS_1a57aa05bfac5f79f0d61bfbb68bbc6666" kindref="member" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">getMapUpdateFrequency</ref>()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;LPI:<sp/>Local<sp/>costmap<sp/>map<sp/>update<sp/>frequency<sp/>should<sp/>be<sp/>0,<sp/>it<sp/>is<sp/>now:<sp/>%2f<sp/>Hz.<sp/>This<sp/>is<sp/>not<sp/>allowed<sp/>by<sp/>the<sp/>Local<sp/>Planner<sp/>Interface!&quot;</highlight><highlight class="normal">,<sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a09f21f224d86316c0c040ac0823201aa" kindref="member">costmap_</ref>-&gt;<ref refid="classcostmap__2d_1_1Costmap2DROS_1a57aa05bfac5f79f0d61bfbb68bbc6666" kindref="member" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">getMapUpdateFrequency</ref>());</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;LPI:<sp/><sp/><sp/><sp/><sp/>[[<sp/><sp/>Shutting<sp/>down<sp/>...<sp/><sp/>]]<sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ros::ok())</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtue_1_1ScopedTimer" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">tue::ScopedTimer</ref><sp/>timer(<ref refid="test__profiler_8cpp_1a35ace1a018a1107a66a6a306658ba298" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">profiler</ref>,<sp/></highlight><highlight class="stringliteral">&quot;total&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtue_1_1ScopedTimer" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">tue::ScopedTimer</ref><sp/>timer(<ref refid="test__profiler_8cpp_1a35ace1a018a1107a66a6a306658ba298" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">profiler</ref>,<sp/></highlight><highlight class="stringliteral">&quot;updateMap()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a09f21f224d86316c0c040ac0823201aa" kindref="member">costmap_</ref>-&gt;<ref refid="classcostmap__2d_1_1Costmap2DROS_1a9c3aa244e7890b363a6317500d66e900" kindref="member" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">updateMap</ref>();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtue_1_1ScopedTimer" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">tue::ScopedTimer</ref><sp/>timer(<ref refid="test__profiler_8cpp_1a35ace1a018a1107a66a6a306658ba298" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">profiler</ref>,<sp/></highlight><highlight class="stringliteral">&quot;publishCostmap()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a09f21f224d86316c0c040ac0823201aa" kindref="member">costmap_</ref>-&gt;<ref refid="classcostmap__2d_1_1Costmap2DROS_1a3cf46abb78bdca2cb987ecebf873eb07" kindref="member" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">getPublisher</ref>()-&gt;<ref refid="classcostmap__2d_1_1Costmap2DPublisher_1a47e5b5d93113f39786112919a6981953" kindref="member" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">publishCostmap</ref>();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtue_1_1ScopedTimer" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">tue::ScopedTimer</ref><sp/>timer(<ref refid="test__profiler_8cpp_1a35ace1a018a1107a66a6a306658ba298" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">profiler</ref>,<sp/></highlight><highlight class="stringliteral">&quot;doSomeMotionPlanning()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a440c9aaed52512dbcd3c4ddb98ead185" kindref="member">doSomeMotionPlanning</ref>();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtue_1_1ScopedTimer" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">tue::ScopedTimer</ref><sp/>timer(<ref refid="test__profiler_8cpp_1a35ace1a018a1107a66a6a306658ba298" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">profiler</ref>,<sp/></highlight><highlight class="stringliteral">&quot;rateCheck()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ros::Time<sp/>t_last_rate_met<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r.cycleTime()<sp/>&lt;<sp/>r.expectedCycleTime())</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_last_rate_met<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ros::Time::now()<sp/>-<sp/>t_last_rate_met).toSec()<sp/>&gt;<sp/>1.0)<sp/></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>do<sp/>not<sp/>meet<sp/>the<sp/>rate,<sp/>print<sp/>it<sp/>every<sp/>1<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_WARN_STREAM(</highlight><highlight class="stringliteral">&quot;LPI:<sp/>Local<sp/>planner<sp/>rate<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>1.0<sp/>/<sp/>r.expectedCycleTime().toSec()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>hz<sp/>not<sp/>met.<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="test__profiler_8cpp_1a35ace1a018a1107a66a6a306658ba298" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">profiler</ref>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_last_rate_met<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtue_1_1ScopedTimer" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">tue::ScopedTimer</ref><sp/>timer(<ref refid="test__profiler_8cpp_1a35ace1a018a1107a66a6a306658ba298" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">profiler</ref>,<sp/></highlight><highlight class="stringliteral">&quot;sleep()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.sleep();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>profile_pub.<ref refid="classtue_1_1ProfilePublisher_1ac1a96ab203db1dc640d46e2959153fde" kindref="member" external="/home/docker/ros/noetic/system/build/docs/code_profiler/tags">publish</ref>();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="namespacecb__local__planner_1ab66a8da21c02b5ea09ed077334301cbb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecb__local__planner_1ab66a8da21c02b5ea09ed077334301cbb" kindref="member">prunePlan</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>geometry_msgs::PoseStamped&amp;<sp/>global_pose,<sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;geometry_msgs::PoseStamped&gt;</ref>&amp;<sp/>plan){</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;geometry_msgs::PoseStamped&gt;::iterator</ref><sp/>it<sp/>=<sp/>plan.<ref refid="cpp/container/vector/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(it<sp/>!=<sp/>plan.<ref refid="cpp/container/vector/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>()){</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>geometry_msgs::PoseStamped&amp;<sp/>w<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fixed<sp/>error<sp/>bound<sp/>of<sp/>2<sp/>meters<sp/>for<sp/>now.<sp/>Can<sp/>reduce<sp/>to<sp/>a<sp/>portion<sp/>of<sp/>the<sp/>map<sp/>size<sp/>or<sp/>based<sp/>on<sp/>the<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x_diff<sp/>=<sp/>global_pose.pose.position.x<sp/>-<sp/>w.pose.position.x;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y_diff<sp/>=<sp/>global_pose.pose.position.y<sp/>-<sp/>w.pose.position.y;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distance_sq<sp/>=<sp/>x_diff<sp/>*<sp/>x_diff<sp/>+<sp/>y_diff<sp/>*<sp/>y_diff;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(distance_sq<sp/>&lt;<sp/>.5){</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>plan.<ref refid="cpp/container/vector/erase" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">erase</ref>(it);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_DEBUG(</highlight><highlight class="stringliteral">&quot;Nearest<sp/>waypoint<sp/>to<sp/>&lt;%f,<sp/>%f&gt;<sp/>is<sp/>&lt;%f,<sp/>%f&gt;\n&quot;</highlight><highlight class="normal">,<sp/>global_pose.pose.position.x,<sp/>global_pose.pose.position.y,<sp/>w.pose.position.x,<sp/>w.pose.position.y);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>plan.<ref refid="cpp/container/vector/erase" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">erase</ref>(it);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="namespacecb__local__planner_1a6279b5e4997d8a6a5b49de79e4a528ec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacecb__local__planner_1a6279b5e4997d8a6a5b49de79e4a528ec" kindref="member">getDistance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;geometry_msgs::PoseStamped&gt;</ref>&amp;<sp/>plan)</highlight></codeline>
<codeline lineno="199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plan.<ref refid="cpp/container/vector/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>()<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>plan.<ref refid="cpp/container/vector/size" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">size</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distance+=hypot(plan[i].pose.position.x-plan[i-1].pose.position.x,<sp/>plan[i].pose.position.y-plan[i-1].pose.position.y);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>distance;</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="namespacecb__local__planner_1a7b728403ea3494e0cc1922ed95a85961" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacecb__local__planner_1a7b728403ea3494e0cc1922ed95a85961" kindref="member">getBlockedPoint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;geometry_msgs::PoseStamped&gt;</ref>&amp;<sp/>plan,<sp/><ref refid="classcostmap__2d_1_1Costmap2D" kindref="compound" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">costmap_2d::Costmap2D</ref>*<sp/>costmap,<sp/>geometry_msgs::Point&amp;<sp/>p)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;geometry_msgs::PoseStamped&gt;::const_iterator</ref><sp/>it<sp/>=<sp/>plan.<ref refid="cpp/container/vector/begin" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">begin</ref>();<sp/>it<sp/>!=<sp/>plan.<ref refid="cpp/container/vector/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>();<sp/>++it)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mx,<sp/>my;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a9a2c824d4cd3bcad3ac3435d81982986" kindref="member" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">worldToMap</ref>(it-&gt;pose.position.x,<sp/>it-&gt;pose.position.y,<sp/>mx,<sp/>my))</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(costmap-&gt;<ref refid="classcostmap__2d_1_1Costmap2D_1a2a8ad2c3fc3aa47be8d2d0f9ae113c27" kindref="member" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">getCost</ref>(mx,<sp/>my)<sp/>&gt;=<sp/><ref refid="namespacecostmap__2d_1a5d3c464519e4135a8f54c9aea7a51d2b" kindref="member" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">costmap_2d::INSCRIBED_INFLATED_OBSTACLE</ref>)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>it-&gt;pose.position;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="classcb__local__planner_1_1LocalPlannerInterface_1a440c9aaed52512dbcd3c4ddb98ead185" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a440c9aaed52512dbcd3c4ddb98ead185" kindref="member">LocalPlannerInterface::doSomeMotionPlanning</ref>()</highlight></codeline>
<codeline lineno="227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::unique_lock&lt;boost::mutex&gt;<sp/>lock(<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a665263a58e86ce8da0d239b6e74d26bd" kindref="member">goal_mtx_</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>geometry_msgs::PoseStamped<sp/>global_pose;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1ae0d0baaf59f5554a32a02c2bb0ea9b22" kindref="member">isGoalSet</ref>()<sp/>||<sp/>!<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a09f21f224d86316c0c040ac0823201aa" kindref="member">costmap_</ref>-&gt;<ref refid="classcostmap__2d_1_1Costmap2DROS_1adcf3512b555a02dbbe2f57e784defce9" kindref="member" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">getRobotPose</ref>(global_pose))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1)<sp/>Update<sp/>the<sp/>end<sp/>goal<sp/>orientation<sp/>due<sp/>to<sp/>the<sp/>orientation<sp/>constraint,<sp/>if<sp/>updated,<sp/>set<sp/>new<sp/>plan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aeed14e143ab42911821733121133eb22" kindref="member">updateEndGoalOrientation</ref>())</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aca377e3c4ef684322e943e8d8d8dc542" kindref="member">local_planner_</ref>-&gt;setPlan(<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aa2cebdb773af517f1418406553f6f581" kindref="member">goal_</ref>.plan);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2)<sp/>Check<sp/>if<sp/>we<sp/>are<sp/>already<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aca377e3c4ef684322e943e8d8d8dc542" kindref="member">local_planner_</ref>-&gt;isGoalReached())<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs::Twist<sp/>tw;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a9477dcffa3850d6b68da6eb6f618d0e9" kindref="member">vel_pub_</ref>.publish(tw);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;LPI:<sp/>Local<sp/>planner<sp/>arrived<sp/>at<sp/>the<sp/>goal<sp/>position/orientation;<sp/>clearing<sp/>plan...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a33cf6054a8171af09d19b5fead950aa7" kindref="member">action_server_</ref>-&gt;setSucceeded();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aa2cebdb773af517f1418406553f6f581" kindref="member">goal_</ref>.plan.clear();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3)<sp/>Compute<sp/>and<sp/>publish<sp/>velocity<sp/>commands<sp/>to<sp/>base,<sp/>check<sp/>if<sp/>not<sp/>blocked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>geometry_msgs::Twist<sp/>tw;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a925e26995ea850515da7b08c9e1de0f8" kindref="member">feedback_</ref>.blocked<sp/>=<sp/>!<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aca377e3c4ef684322e943e8d8d8dc542" kindref="member">local_planner_</ref>-&gt;computeVelocityCommands(tw);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a9477dcffa3850d6b68da6eb6f618d0e9" kindref="member">vel_pub_</ref>.publish(tw);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4)<sp/>Get<sp/>the<sp/>pruned<sp/>plan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::vector&lt;geometry_msgs::PoseStamped&gt;</ref><sp/>pruned_plan<sp/>=<sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aa2cebdb773af517f1418406553f6f581" kindref="member">goal_</ref>.plan;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecb__local__planner_1ab66a8da21c02b5ea09ed077334301cbb" kindref="member">prunePlan</ref>(global_pose,<sp/>pruned_plan);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4)<sp/>Publish<sp/>some<sp/>feedback<sp/>to<sp/>via<sp/>the<sp/>action_server</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a925e26995ea850515da7b08c9e1de0f8" kindref="member">feedback_</ref>.dtg<sp/>=<sp/><ref refid="namespacecb__local__planner_1a6279b5e4997d8a6a5b49de79e4a528ec" kindref="member">getDistance</ref>(pruned_plan);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a925e26995ea850515da7b08c9e1de0f8" kindref="member">feedback_</ref>.dtg<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a925e26995ea850515da7b08c9e1de0f8" kindref="member">feedback_</ref>.dtg<sp/>=<sp/><ref refid="namespacebase__local__planner_1ac7ecc277a40eb4e997a94149fbec1fbe" kindref="member" external="/home/docker/ros/noetic/system/build/docs/base_local_planner/tags">base_local_planner::getGoalPositionDistance</ref>(global_pose,<sp/>pruned_plan.<ref refid="cpp/container/vector/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>()-&gt;pose.position.x,<sp/>pruned_plan.<ref refid="cpp/container/vector/end" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">end</ref>()-&gt;pose.position.y);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a925e26995ea850515da7b08c9e1de0f8" kindref="member">feedback_</ref>.blocked)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a925e26995ea850515da7b08c9e1de0f8" kindref="member">feedback_</ref>.blocked<sp/>=<sp/><ref refid="namespacecb__local__planner_1a7b728403ea3494e0cc1922ed95a85961" kindref="member">getBlockedPoint</ref>(pruned_plan,<sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a09f21f224d86316c0c040ac0823201aa" kindref="member">costmap_</ref>-&gt;<ref refid="classcostmap__2d_1_1Costmap2DROS_1ac1005008ad19c3734f0b5eafac2ff8ce" kindref="member" external="/home/docker/ros/noetic/system/build/docs/costmap_2d/tags">getCostmap</ref>(),<sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a925e26995ea850515da7b08c9e1de0f8" kindref="member">feedback_</ref>.point_blocked);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a33cf6054a8171af09d19b5fead950aa7" kindref="member">action_server_</ref>-&gt;publishFeedback(<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1a925e26995ea850515da7b08c9e1de0f8" kindref="member">feedback_</ref>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="classcb__local__planner_1_1LocalPlannerInterface_1aeed14e143ab42911821733121133eb22" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aeed14e143ab42911821733121133eb22" kindref="member">LocalPlannerInterface::updateEndGoalOrientation</ref>()</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1ae0d0baaf59f5554a32a02c2bb0ea9b22" kindref="member">isGoalSet</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>tf2::Transform<sp/>constraint_to_world_tf;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aa2cebdb773af517f1418406553f6f581" kindref="member">goal_</ref>.orientation_constraint.frame<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;/map&quot;</highlight><highlight class="normal"><sp/>||<sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aa2cebdb773af517f1418406553f6f581" kindref="member">goal_</ref>.orientation_constraint.frame<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;map&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint_to_world_tf<sp/>=<sp/>tf2::Transform::getIdentity();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed_msgs::SimpleQuery<sp/>ed_query;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed_query.request.id<sp/>=<sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aa2cebdb773af517f1418406553f6f581" kindref="member">goal_</ref>.orientation_constraint.frame;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed_query.request.radius<sp/>=<sp/><ref refid="cpp/types/numeric_limits/infinity" kindref="compound" external="/home/docker/.local/lib/python3.8/site-packages/catkin_tools_document/external/cppreference-doxygen-web.tag.xml">std::numeric_limits&lt;float&gt;::infinity</ref>();;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1acb45bb0a4bd06fdd7dd2f31514777861" kindref="member">ed_client_</ref>.call(ed_query))</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;LPI:<sp/>Failed<sp/>to<sp/>get<sp/>robot<sp/>orientation<sp/>constraint<sp/>frame:<sp/>ED<sp/>could<sp/>not<sp/>be<sp/>queried.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ed_query.response.entities.empty())</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR_STREAM(</highlight><highlight class="stringliteral">&quot;LPI:<sp/>Failed<sp/>to<sp/>get<sp/>robot<sp/>orientation<sp/>constraint<sp/>frame:<sp/>ED<sp/>returns<sp/>&apos;no<sp/>such<sp/>entity&apos;.<sp/>(&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aa2cebdb773af517f1418406553f6f581" kindref="member">goal_</ref>.orientation_constraint.frame<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ed_msgs::EntityInfo&amp;<sp/>e_info<sp/>=<sp/>ed_query.response.entities.front();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf2::Transform<sp/>world_to_constraint_tf;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf2::fromMsg(e_info.pose,<sp/>world_to_constraint_tf);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint_to_world_tf<sp/>=<sp/>world_to_constraint_tf;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//<sp/>Request<sp/>the<sp/>desired<sp/>transform<sp/>from<sp/>constraint<sp/>frame<sp/>to<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>tf::StampedTransform<sp/>constraint_to_world_tf;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>try<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf_-&gt;lookupTransform(costmap_-&gt;getGlobalFrameID(),<sp/>goal_.orientation_constraint.frame,<sp/>ros::Time(0),<sp/>constraint_to_world_tf);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feedback_.frame_exists<sp/>=<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}<sp/>catch(tf::TransformException&amp;<sp/>ex)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(&quot;LPI:<sp/>Failed<sp/>to<sp/>get<sp/>robot<sp/>orientation<sp/>constraint<sp/>frame&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feedback_.frame_exists<sp/>=<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>end<sp/>and<sp/>look<sp/>at<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>tf2::Vector3<sp/>look_at,<sp/>end_point;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>tf2::fromMsg(<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aa2cebdb773af517f1418406553f6f581" kindref="member">goal_</ref>.orientation_constraint.look_at,<sp/>look_at);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>tf2::fromMsg(<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aa2cebdb773af517f1418406553f6f581" kindref="member">goal_</ref>.plan.back().pose.position,<sp/>end_point);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>difference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>tf2::Vector3<sp/>diff<sp/>=<sp/>constraint_to_world_tf*look_at<sp/>-<sp/>end_point;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>current<sp/>and<sp/>new<sp/>orientation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>geometry_msgs::Quaternion&amp;<sp/>q<sp/>=<sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aa2cebdb773af517f1418406553f6f581" kindref="member">goal_</ref>.plan.back().pose.orientation;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>tf2::Quaternion<sp/>new_quat;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>new_quat.setRPY(0,<sp/>0,<sp/>atan2(diff.y(),diff.x())<sp/>+<sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aa2cebdb773af517f1418406553f6f581" kindref="member">goal_</ref>.orientation_constraint.angle_offset);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>end<sp/>goal<sp/>orientation<sp/>is<sp/>already<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>changed<sp/>=<sp/>(q.x<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>q.y<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>q.z<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>q.w<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!changed)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf2::Quaternion<sp/>current_quat;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf2::fromMsg(<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aa2cebdb773af517f1418406553f6f581" kindref="member">goal_</ref>.plan.back().pose.orientation,<sp/>current_quat);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changed<sp/>=<sp/>abs(current_quat.dot(new_quat))<sp/>&lt;<sp/>1-1e-6;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>orientation<sp/>has<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(changed)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>new<sp/>orientation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/>=<sp/>tf2::toMsg(new_quat);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Visualize<sp/>the<sp/>end<sp/>pose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcb__local__planner_1_1LocalPlannerInterface_1abc8e88f37d6570b94a747f57b4492b5c" kindref="member">vis</ref>.<ref refid="classcb__local__planner_1_1Visualization_1ab7c66a45875ac8655de3df3a89f73363" kindref="member">publishGoalPoseMarker</ref>(<ref refid="classcb__local__planner_1_1LocalPlannerInterface_1aa2cebdb773af517f1418406553f6f581" kindref="member">goal_</ref>.plan.back());</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/local_planner/local_planner_interface.cpp"/>
  </compounddef>
</doxygen>
