robot_skills.speech
===================

.. py:module:: robot_skills.speech


Classes
-------

.. autoapisummary::

   robot_skills.speech.Speech


Module Contents
---------------

.. py:class:: Speech(robot_name, tf_buffer, pre_hook=None, post_hook=None)

   Bases: :py:obj:`robot_skills.robot_part.RobotPart`


   Interface to TTS-module


   .. py:attribute:: _speech_service


   .. py:attribute:: _pre_hook
      :value: None



   .. py:attribute:: _post_hook
      :value: None



   .. py:attribute:: _default_language


   .. py:attribute:: _default_voice


   .. py:attribute:: _default_character


   .. py:attribute:: _default_emotion


   .. py:method:: speak(sentence, language=None, personality=None, voice=None, mood=None, block=True, replace=None)

      Send a sentence to the text to speech module.
      You can set language, personality, voice and mood for the Philips TTS.
      When block=False, this method returns immediately.
      With the replace-dictionary, you can specify which characters to replace with what. By default, it replace
      underscores with spaces.

      :param sentence: string with sentence to pronounce
      :param language: string with language to speak. Philips TTS supports English (us) Dutch (nl)
      :param personality: string indicating the personality. Supported are Default, Man, OldMan, OldWoman, Boy,
          YoungGirl, Robot, Giant, Dwarf, Alien
      :param voice: string indicating the voice to speak with. In English, "kyle" (default), "gregory" (French
          accent) and "carlos" (Spanish accent) are supported. The Dutch voices are "david" and "marjolijn"
      :param mood: string indicating the emotion. Supported are: Neutral, Friendly, Angry, Furious, Drill, Scared,
          Emotional, Weepy, Excited, Surprised, Sad, Disgusted, Whisper.
      :param block: bool to indicate whether this function should return immediately or if it should block until the
          sentence has been spoken
      :param replace: dictionary with replacement stuff



