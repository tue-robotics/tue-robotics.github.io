robot_skills.api
================

.. py:module:: robot_skills.api


Classes
-------

.. autoapisummary::

   robot_skills.api.Api


Module Contents
---------------

.. py:class:: Api(robot_name, tf_buffer, pre_hook=None, post_hook=None)

   Bases: :py:obj:`robot_skills.robot_part.RobotPart`


   Base class for robot parts

   constructor

   :param robot_name: robot_name
   :param tf_buffer: tf2_ros.Buffer
   :param pre_hook: callable function to execute before a query call, i.e. to set light color
   :param post_hook: callable function to execute after a query call


   .. py:attribute:: _pre_hook
      :value: None



   .. py:attribute:: _post_hook
      :value: None



   .. py:attribute:: cv_bridge


   .. py:attribute:: _client


   .. py:attribute:: restart_srv


   .. py:attribute:: _image_from_ros_publisher


   .. py:method:: query(description, grammar, target, timeout=10)

      Perform a HMI query, returns a HMIResult

      :param description: text describing the query
      :param grammar: string with the grammar to load
      :param target: string identifying the target of the grammar to recognize
      :param timeout: timeout in seconds (float)



   .. py:method:: _show_image(msg, seconds=5.0)

      Show an image on the HMI display interface

      :param msg: CompressedImage to display
      :param seconds: How many seconds you would like to display the image on the screen



   .. py:method:: show_image(path_to_image, seconds=5.0)

      Show an image on the HMI display interface

      :param path_to_image: Absolute path to image file
      :param seconds: How many seconds you would like to display the image on the screen



   .. py:method:: show_image_from_msg(msg, seconds=5.0)

      Show an image on the HMI display interface

      :param msg: rgb msg
      :param seconds: How many seconds you would like to display the image on the screen



   .. py:property:: last_talker_id


   .. py:method:: old_query(spec, choices, timeout=10)


   .. py:method:: selfreset()

      Reset of the body part itself. This function may be overwritten.
      Returns: bool



   .. py:method:: restart_dragonfly()


