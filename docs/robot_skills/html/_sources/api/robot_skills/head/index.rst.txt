robot_skills.head
=================

.. py:module:: robot_skills.head


Classes
-------

.. autoapisummary::

   robot_skills.head.Head


Module Contents
---------------

.. py:class:: Head(robot_name, tf_buffer)

   Bases: :py:obj:`robot_skills.robot_part.RobotPart`


   Base class for robot parts

   Constructor

   :param robot_name: string with robot name
   :param tf_buffer: tf buffer object


   .. py:attribute:: _ac_head_ref_action


   .. py:attribute:: _goal
      :value: None



   .. py:attribute:: _at_setpoint
      :value: False



   .. py:method:: close()

      Close the robot part



   .. py:method:: selfreset()

      Reset head position



   .. py:method:: look_at_ground_in_front_of_robot(distance=2, timeout=0)


   .. py:method:: look_down(timeout=0)

      Gives a target at z = 1.0 at 1 m in front of the robot



   .. py:method:: look_up(timeout=0)

      Gives a target at z = 1.0 at 1 m in front of the robot



   .. py:method:: look_at_standing_person(distance = 1.0, height = 1.6, timeout = 0.0)

      Gives a target at z = HEIGHT at DISTANCE m in front of the robot



   .. py:method:: look_right_down(timeout=0)


   .. py:method:: look_at_point(vector_stamped, end_time=0, pan_vel=1.0, tilt_vel=0.8, timeout=0)


   .. py:method:: cancel_goal()


   .. py:method:: wait_for_motion_done(timeout=5.0)


   .. py:method:: _setHeadReferenceGoal(goal_type, pan_vel, tilt_vel, end_time, point_stamped=PointStamped(), pan=0, tilt=0, timeout=0)


   .. py:method:: __feedbackCallback(feedback)


   .. py:method:: __doneCallback(terminal_state, result)


